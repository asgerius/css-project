[{"tags": ["list", "haskell", "monoids"], "answers": [{"comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1565219990, "post_id": 57402481, "comment_id": 101288150, "body": "For the sake of completeness, I should mention that I <i>think</i> there is something of an analogy between <code>lift</code> from <code>MonadTrans</code> and the free monoid I mention in my answer, in that transformers often are free constructions of some sort. I didn&#39;t mention it in my answer because that is a remote connection, and I haven&#39;t made it sufficiently clear to myself yet in order to be able to explain it well."}], "tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": false, "score": 2, "last_activity_date": 1565218973, "last_edit_date": 1565218973, "creation_date": 1565213157, "answer_id": 57402481, "question_id": 57402447, "link": "https://stackoverflow.com/questions/57402447/how-do-i-call-a-monoid-that-also-supports-lifting/57402481#57402481", "title": "How do I call a monoid that also supports lifting?", "body": "<p>You are talking about <code>Alternative</code> as @Robin Zigmond said:</p>\n\n<pre><code>instance Alternative [] where\n    empty = []\n    (&lt;|&gt;) = (++)\n</code></pre>\n\n<p>And if you want to know, it is also a <code>MonadPlus</code>:    </p>\n\n<pre><code>instance MonadPlus []\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1565221995, "post_id": 57403258, "comment_id": 101288557, "body": "Isn&#39;t there a little more to the universal property? For one thing, <code>foldMap f x &lt;&gt; foldMap f y = foldMap f (x &lt;&gt; y)</code> and <code>foldMap f mempty = mempty</code> (<code>foldMap</code> is a monoid morphism). But there&#39;s one more piece: uniqueness of <code>foldMap</code>. That basically says that <i>every</i> <code>f a</code> can be formed using <code>pure</code> and <code>Monoid</code> operations."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1565222536, "post_id": 57403258, "comment_id": 101288663, "body": "@dfeuer Yup, there is more to it. I wasn&#39;t, and I still am not, entirely sure about how to wire that to the context of this question; in the meantime, I have changed &quot;means that&quot; to &quot;implies that&quot; to better suggest it doesn&#39;t end there."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1565271831, "post_id": 57403258, "comment_id": 101308228, "body": "I do not actually think it necessarily has to be a free monoid. Since I am not requiring a projection to any other monoid, it may conflate elements as it wills."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1565284346, "post_id": 57403258, "comment_id": 101315006, "body": "Also, actually I would like to have a class for free monoids indeed, but Alternative is usually lossy: it acts like <code>const</code>: <code>x &lt;|&gt; y = x</code> \u2014 in most all instances I have been dealing with so far, be it applicative parsers <i>(where this operator makes asymmetric choice)</i> or monads <i>(where it is used when trying actions until the first successful)</i>. I propose instead that <code>IsList</code> is what we should consider the free monoid class, as it witnesses the isomorphism inbetween all the instances <i>(through List)</i>."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1565295876, "post_id": 57403258, "comment_id": 101319646, "body": "@IgnatInsarov (1) If your lift is fully polymorphic on the element type (<code>a -&gt; M a</code>), I don&#39;t think you can do any collapsing with it, except for sending everything to some <code>empty</code>. (2a) I don&#39;t feel there are enough noteworthy encodings of the free monoid to justify a separate type class. What we do have is <code>Foldable</code>, which says something broader: &quot;this can be converted to the free monoid&quot; (through either <code>toList</code> or <code>flip foldMap</code>). (2b) <code>Alternative</code> is indeed something quite different from the other possibilities we are considering."}], "tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 6, "last_activity_date": 1565295910, "last_edit_date": 1565295910, "creation_date": 1565219206, "answer_id": 57403258, "question_id": 57402447, "link": "https://stackoverflow.com/questions/57402447/how-do-i-call-a-monoid-that-also-supports-lifting/57403258#57403258", "title": "How do I call a monoid that also supports lifting?", "body": "<p>Given the framing of your question, I would be inclined to characterise your lift...</p>\n\n<pre><code>(:[]) :: a -&gt; [a]\n</code></pre>\n\n<p>... as reflecting how lists are an encoding of <a href=\"https://bartoszmilewski.com/2015/07/21/free-monoids/\" rel=\"nofollow noreferrer\">the free monoid for Haskell types</a>. In particular, the universal property (illustrated by the diagram at the end of the <em>Category Theory for Programmers</em> chapter linked to above) implies that:</p>\n\n<pre><code>-- q is an arbitrary a -&gt; m function, with m being an arbitrary monoid.\nfoldMap q . (:[]) = q\n</code></pre>\n\n<hr>\n\n<p>As far as the types go, <code>Alternative</code> might seem to also express what you are looking for: <code>empty</code> and <code>(&lt;|&gt;)</code> are generally expected to be monoidal operations, and <code>pure</code> from <code>Applicative</code> could be taken as your lift. However, I'm not sure if there is any connection that might be drawn between <code>pure</code> and the <code>Alternative</code> methods that would clarify the role of <code>pure</code> in such a construction. (On this latter point, you might find <a href=\"https://stackoverflow.com/questions/13080606/confused-by-the-meaning-of-the-alternative-type-class-and-its-relationship-to\">this tangentially related question</a> which discusses the relationship between <code>Alternative</code> and <code>Applicative</code> interesting.)</p>\n"}], "owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 153, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1565295910, "creation_date": 1565212863, "last_edit_date": 1565219215, "question_id": 57402447, "link": "https://stackoverflow.com/questions/57402447/how-do-i-call-a-monoid-that-also-supports-lifting", "title": "How do I call a monoid that also supports lifting?", "body": "<p>What I mean is a device like a list:</p>\n\n<pre><code>mempty = [ ]\nlift x = [x]\nmappend = (++)\n</code></pre>\n\n<p>Is it merely <code>IsList</code>?</p>\n"}, {"tags": ["haskell", "exception", "io-monad", "alternative-functor"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1565208806, "post_id": 57401539, "comment_id": 101284945, "body": "The docs state that &quot;<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Exception.html#v:throwIO\" rel=\"nofollow noreferrer\">the two functions are subtly different</a>&quot;."}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1565209005, "post_id": 57401539, "comment_id": 101285012, "body": "But whoever wrote that had weird ideas about the meaning of &quot;subtly&quot;."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1565209145, "post_id": 57401539, "comment_id": 101285066, "body": "It is too subtle for me, I do not get the difference. Where in my code is <code>seq</code>?"}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1565210240, "post_id": 57401539, "comment_id": 101285529, "body": "Using the <code>Alternative</code> instance of <code>IO</code> for that kind of loop is unidiomatic. In Java, it would be like throwing an exception at the end of a for loop&#39;s body in order to advance to the next iteration."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1565210287, "post_id": 57401539, "comment_id": 101285544, "body": "@danidiaz Well then what is idiomatic with Alternative IO?"}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1565210820, "post_id": 57401539, "comment_id": 101285731, "body": "@IgnatInsarov In my opinion, not a lot. Perhaps retries when the action we want to retry <i>already</i> throws exceptions, we don&#39;t want to inspect or analyze the exceptions thrown, and we want to exit with an exception if all the retries fail."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1565217558, "post_id": 57401539, "comment_id": 101287659, "body": "In my opinion, the really annoying thing is that we don&#39;t have separate <code>catch</code>, <code>catchIO</code>, and <code>catchFrom</code> corresponding to <code>throw</code>, <code>throwIO</code>, and <code>throwTo</code>. Imprecise, precise, and asynchronous exceptions are all quite different. The most annoying thing is that there&#39;s no reliable way to distinguish asynchronous exceptions from imprecise ones in catching, when they have important differences. In particular, the distinction affects thunk resumption, and there&#39;s no reliable way to rethrow a caught exception with the same synchronous/asynchronous status."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1565247399, "post_id": 57401539, "comment_id": 101294456, "body": "@dfeuer I am thinking <code>catches action [someAsyncRethrow, someHandle]</code> is your way to distinguish asynchronous exceptions. I cannot undersand the part about thunk, and I do not understand why you say there is no reliable way to rethrow an exception with the same status. I thought whether an exception is synchronous or asynchronous is written on the box? When it matches <code>SomeAsyncException</code>, it is asynchronous, and if you rethrow it, it is still asynchronous. Am I missing something big here?"}], "answers": [{"comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 2, "creation_date": 1565209924, "post_id": 57401678, "comment_id": 101285389, "body": "I like to think of Haskell as a purely function DSL (with no exceptions) for composing IO programs, which are written in a language you have little direct access to. Li-yao puts it nicely: <code>throw</code> lets you raise an exception inside the IO interpreter directly from the pure Haskell code."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 3, "last_activity_date": 1565208664, "creation_date": 1565208664, "answer_id": 57401678, "question_id": 57401539, "link": "https://stackoverflow.com/questions/57401539/why-is-there-difference-between-throw-and-throwio/57401678#57401678", "title": "Why is there difference between throw and throwIO?", "body": "<p>The rest of this answer may not be entirely correct. But fundamentally, the difference is this: <code>throwIO</code> terminates and returns an <code>IO</code> action, while <code>throw</code> does <em>not</em> terminate.</p>\n\n<hr>\n\n<p>As soon as you try to evaluate <code>throw (userError \"...\")</code>, your program aborts. <code>&lt;|&gt;</code> never gets a chance to look at its first argument to decide if the second argument should be evaluated; in fact, it never <em>gets</em> the first argument, because <code>throw</code> didn't return a value.</p>\n\n<p>With <code>throwIO</code>, <code>&lt;|&gt;</code> isn't evaluating anything; it's creating a new <code>IO</code> action which, when it <em>does</em> get executed, will first look at its first argument. The runtime can \"safely\" execute the <code>IO</code> action and see that it does not, in fact, provide a value, at which point it can stop and try the other \"half\" of the <code>&lt;|&gt;</code> expression.</p>\n"}, {"comments": [{"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1565210586, "post_id": 57401807, "comment_id": 101285644, "body": "@IgnatInsarov The documentation for <code>throwIO</code> states that it should be preferred to <code>throw</code> when working in a <code>IO</code> context."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 2, "creation_date": 1565210712, "post_id": 57401807, "comment_id": 101285691, "body": "If anything <code>throw</code> is the abomination. If you have exceptions throwing them is a perfectly fine action to do, that&#39;s <code>throwIO</code>."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1565210737, "post_id": 57401807, "comment_id": 101285696, "body": "@danidiaz Does it per chance also explain why? I have kinda read what it says on the box, \u2014 maybe twice, \u2014 but I am still not seeing the picture."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1565210884, "post_id": 57401807, "comment_id": 101285757, "body": "@Li-yaoXia But I can catch <code>throw</code>n exceptions just as well. We have exceptions occuring in pure computations anyway, have we not? Like <code>ArithException</code> for instance?"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1565210892, "post_id": 57401807, "comment_id": 101285761, "body": "But we also can&#39;t really get rid of <code>throw</code> (or <code>error</code> or <code>undefined</code>) either. In a non-strict language with general recursion (Haskell), you will have &quot;undefined values&quot; at least because of nontermination, so you might as well keep the ability of throwing exceptions instead of going into an infinite loop and make the best out of it."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1565211065, "post_id": 57401807, "comment_id": 101285810, "body": "<code>ArithException</code> isn&#39;t really an exception; it&#39;s an ordinary data type that gets used in a pure <i>simulation</i> of exceptions. <code>throw</code>, on the other hand, raises a real &quot;catch it or the runtime gives up&quot; exception (which are called IO exceptions only because they only get generated during the execution of an IO action, not because they are values some <code>IO</code> type)."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1565211164, "post_id": 57401807, "comment_id": 101285842, "body": "What do you mean @chepner? You can <code>throw (Overflow :: ArithException)</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1565211387, "post_id": 57401807, "comment_id": 101285934, "body": "@Li-yaoXia I think of it as <code>throw</code> <i>generating</i> an exception using information carried by <code>Overflow</code>, rather than <code>Overflow</code> <i>being</i> the actual exception."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1565211542, "post_id": 57401807, "comment_id": 101285985, "body": "There&#39;s also an <code>IOException</code> type that&#39;s distinct from <code>ArithException</code>, so I wouldn&#39;t take the denomination &quot;IO exception&quot; so lightly."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": false, "score": 6, "last_activity_date": 1565212534, "last_edit_date": 1565212534, "creation_date": 1565209290, "answer_id": 57401807, "question_id": 57401539, "link": "https://stackoverflow.com/questions/57401539/why-is-there-difference-between-throw-and-throwio/57401807#57401807", "title": "Why is there difference between throw and throwIO?", "body": "<p><code>throw</code> is a generalization of <code>undefined</code> and <code>error</code>, it's meant to throw an exception in pure code. When the value of the exception does not matter (which is most of the time), it is denoted by the symbol \u27d8 for an \"undefined value\".</p>\n\n<p><code>throwIO</code> is an IO action which throws an exception, but is not itself an undefined value.</p>\n\n<p>The documentation of <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Exception.html#v:throwIO\" rel=\"nofollow noreferrer\"><code>throwIO</code></a> thus illustrates the difference:</p>\n\n<pre><code>throw e   `seq` x  ===&gt; throw e\nthrowIO e `seq` x  ===&gt; x\n</code></pre>\n\n<p>The catch is that <code>(&lt;|&gt;)</code> is defined as <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.IO.html#mplusIO\" rel=\"nofollow noreferrer\"><code>mplusIO</code></a> which uses <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.IO.html#catchException\" rel=\"nofollow noreferrer\"><code>catchException</code></a> which is a strict variant of <code>catch</code>. That strictness is summarized as follows:</p>\n\n<pre><code>\u27d8 &lt;|&gt; x = \u27d8\n</code></pre>\n\n<p>hence you get an exception (and <code>x</code> is never run) in the <code>throw</code> variant.</p>\n\n<p>Note that, without strictness, an \"undefined action\" (i.e., <code>throw ... :: IO a</code>) actually behaves like an action that throws from the point of view of <code>catch</code>:</p>\n\n<pre><code>catch (throw   (userError \"oops\")) (\\(e :: SomeException) -&gt; putStrLn \"caught\")  -- caught\ncatch (throwIO (userError \"oops\")) (\\(e :: SomeException) -&gt; putStrLn \"caught\")  -- caught\ncatch (pure    (error     \"oops\")) (\\(e :: SomeException) -&gt; putStrLn \"caught\")  -- not caught\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 1, "creation_date": 1565212384, "post_id": 57402307, "comment_id": 101286217, "body": "The last paragraph is a bit difficult."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1565215996, "post_id": 57402307, "comment_id": 101287296, "body": "@IgnatInsarov Better?"}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1565247702, "post_id": 57402307, "comment_id": 101294595, "body": "Yes, way better. I was a bit confused because there is <a href=\"https://haskell.fpcomplete.com/tutorial/exceptions\" rel=\"nofollow noreferrer\">another definition of impure exceptions</a> out there and I was not able to align what I read there with what you said."}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": true, "score": 5, "last_activity_date": 1565215986, "last_edit_date": 1565215986, "creation_date": 1565212139, "answer_id": 57402307, "question_id": 57401539, "link": "https://stackoverflow.com/questions/57401539/why-is-there-difference-between-throw-and-throwio/57402307#57402307", "title": "Why is there difference between throw and throwIO?", "body": "<p>Say you have</p>\n\n<pre><code>x :: Integer\n</code></pre>\n\n<p>That means that <code>x</code> should be an integer, of course.</p>\n\n<pre><code>x = throw _whatever\n</code></pre>\n\n<p>What does that mean? It means that there was supposed to be an <code>Integer</code>, but instead there\u2019s just a mistake.</p>\n\n<p>Now consider</p>\n\n<pre><code>x :: IO ()\n</code></pre>\n\n<p>That means <code>x</code> should be an I/O-performing program that returns no useful value. Remember, <code>IO</code> values are just <em>values</em>. They are values that just happen to represent imperative programs. So now consider</p>\n\n<pre><code>x = throw _whatever\n</code></pre>\n\n<p>That means that there was supposed to be an I/O-performing program there, but there is instead just a mistake. <code>x</code> is not a program that throws an error\u2014there <em>is</em> no program. Regardless of whether you\u2019ve used an <code>IOError</code>, <code>x</code> isn\u2019t a valid <code>IO</code> program. When you try to execute the program</p>\n\n<pre><code>x &lt;|&gt; _whatever\n</code></pre>\n\n<p>You have to execute <code>x</code> to see whether it throws an error. But, you <em>can\u2019t</em> execute <code>x</code>, because it\u2019s not a program\u2014it\u2019s a mistake. Instead, everything explodes.</p>\n\n<p>This differs significantly from</p>\n\n<pre><code>x = throwIO _whatever\n</code></pre>\n\n<p>Now <code>x</code> is a valid program. It is a valid program that always happens to throw an error, but it\u2019s still a valid program that can actually be executed. When you try to execute</p>\n\n<pre><code>x &lt;|&gt; _whatever\n</code></pre>\n\n<p>now, <code>x</code> is executed, the error produced is discarded, and <code>_whatever</code> is executed in its place. You can also think of there being a difference between computing a program/figuring out what to execute and actually executing it. <code>throw</code> throws the error while computing the program to execute (it is a \"pure exception\"), while <code>throwIO</code> throws it during execution (it is an \"impure exception\"). This also explains their types: <code>throw</code> returns any type because all types can be \"computed\", but <code>throwIO</code> is restricted to <code>IO</code> because only programs can be executed.</p>\n\n<p>This is further complicated by the fact that you <em>can</em> catch the pure exceptions that occur while executing <code>IO</code> programs. I believe this is a design compromise. From a theoretical perspective, you <em>shouldn't</em> be able to catch pure exceptions, because their presence should always be taken to indicate programmer error, but that can be rather embarrassing, because then you can only handle external errors, while programmer errors cause everything to blow up. If we were perfect programmers, that would be fine, but we aren't. Therefore, you are allowed to catch pure exceptions.</p>\n\n<pre><code>is :: [Int]\nis = []\n\n-- fails, because the print causes a pure exception\n-- it was a programmer error to call head on is without checking that it,\n-- in fact, had a head in the first place\n-- (the program on the left is not valid, so main is invalid)\nmain1 = print (head is) &lt;|&gt; putStrLn \"Oops\"\n-- throws exception\n\n-- catch creates a program that computes and executes the program print (head is)\n-- and catches both impure and pure exceptions\n-- the program on the left is invalid, but wrapping it with catch\n-- makes it valid again\n-- really, that shouldn't happen, but this behavior is useful\nmain2 = print (head is) `catch` (\\(_ :: SomeException) -&gt; putStrLn \"Oops\")\n-- prints \"Oops\"\n</code></pre>\n"}], "owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 0, "accepted_answer_id": 57402307, "answer_count": 3, "score": 5, "last_activity_date": 1613886654, "creation_date": 1565207931, "last_edit_date": 1613886654, "question_id": 57401539, "link": "https://stackoverflow.com/questions/57401539/why-is-there-difference-between-throw-and-throwio", "title": "Why is there difference between throw and throwIO?", "body": "<p>I am trying to get a firm grasp of exceptions, so that I can improve my <a href=\"https://stackoverflow.com/a/57360857/\">conditional loop implementation</a>. To this end, I am staging various experiments, throwing stuff and seeing what gets caught.</p>\n\n<p>This one surprises me to no end:</p>\n\n<pre><code>% cat X.hs\nmodule Main where\n\nimport Control.Exception\nimport Control.Applicative\n\nmain = do\n    throw (userError \"I am an IO error.\") &lt;|&gt; print \"Odd error ignored.\"\n</code></pre>\n\n<pre><code>% ghc X.hs &amp;&amp; ./X\n...\nX: user error (I am an IO error.)\n</code></pre>\n\n<pre><code>% cat Y.hs\nmodule Main where\n\nimport Control.Exception\nimport Control.Applicative\n\nmain = do\n    throwIO (userError \"I am an IO error.\") &lt;|&gt; print \"Odd error ignored.\"\n</code></pre>\n\n<pre><code>% ghc Y.hs &amp;&amp; ./Y\n...\n\"Odd error ignored.\"\n</code></pre>\n\n<p>I thought that the Alternative should ignore exactly IO errors. <em>(Not sure where I got this idea from, but I certainly could not offer a non-IO exception that would be ignored in an Alternative chain.)</em> So I figured I can hand craft and deliver an IO error. Turns out, whether it gets ignored depends on the packaging as much as the contents: if I <code>throw</code> an IO error, it is somehow <em>not anymore</em> an IO error.</p>\n\n<p>I am completely lost. Why does it work this way? Is it intended? The definitions lead deep into the GHC internal modules; while I can more or less understand the meaning of disparate fragments of code by themselves, I am having a hard time seeing the whole picture.</p>\n\n<p>Should one even use this Alternative instance if it is so difficult to predict? Would it not be better if it silenced any synchronous exception, not just some small subset of exceptions that are <em>defined</em> in a specific way and <em>thrown</em> in a specific way?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 5, "creation_date": 1565201974, "post_id": 57400148, "comment_id": 101281991, "body": "<code>a -&gt; a -&gt; a</code> is a &quot;specific&quot; case of <code>a -&gt; b -&gt; b</code>."}, {"owner": {"reputation": 14927, "user_id": 2719875, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ae764a4524119ce0d93e7d8f0ee2356c?s=128&d=identicon&r=PG&f=1", "display_name": "user2719875", "link": "https://stackoverflow.com/users/2719875/user2719875"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1565202025, "post_id": 57400148, "comment_id": 101282009, "body": "@WillemVanOnsem Are there times when <code>-</code> can substract two different types though? It&#39;s can&#39;t subtract an integer with a list right?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1565202291, "post_id": 57400148, "comment_id": 101282122, "body": "no, the <code>(-)</code> function is defined in the <code>Num</code> typeclass as <code>Num a =&gt; a -&gt; a -&gt; a</code>. You can use functions like <code>fromIntegral</code> that convrt one number type to another."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1565202468, "post_id": 57400148, "comment_id": 101282193, "body": "Note that the type of <code>(-)</code> constrains the type of <code>foldr</code>&#39;s result: <code>foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b</code>, but <code>foldr (-) :: Num a =&gt;  a -&gt; [a] -&gt; a</code>, not <code>b -&gt; [a] -&gt; b</code>."}, {"owner": {"reputation": 4376, "user_id": 1109583, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/VsfzL.jpg?s=128&g=1", "display_name": "lambda.xy.x", "link": "https://stackoverflow.com/users/1109583/lambda-xy-x"}, "edited": false, "score": 2, "creation_date": 1565202930, "post_id": 57400148, "comment_id": 101282401, "body": "Perhaps just an example where <code>a</code> and <code>b</code> are different types: <code>let f = foldr (\\x y-&gt; if (fst x &gt; 0) then y else (y + snd x)) 0</code> works on a list of tuples and returns the sum of all second arguments where the first argument is greater than zero. E.g. <code>f [(1,2), ((-1),4), (3,2)] = 4</code>."}, {"owner": {"reputation": 700, "user_id": 5499914, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fz53h.png?s=128&g=1", "display_name": "Khuldraeseth na&#39;Barya", "link": "https://stackoverflow.com/users/5499914/khuldraeseth-nabarya"}, "edited": false, "score": 0, "creation_date": 1565214457, "post_id": 57400148, "comment_id": 101286875, "body": "How&#39;s about this for another example: <code>(:) :: a -&gt; [a] -&gt; [a]</code>, so we can do <code>foldr (:) [] &quot;a list&quot;</code>. This one&#39;s particularly easy to work out by hand."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 7, "last_activity_date": 1565202183, "creation_date": 1565202183, "answer_id": 57400269, "question_id": 57400148, "link": "https://stackoverflow.com/questions/57400148/understanding-foldrs-definition/57400269#57400269", "title": "Understanding foldr&#39;s definition", "body": "<p>The fact that the signature of the function is <code>a -&gt; b -&gt; b</code> does <em>not</em> mean that <code>a</code> and <code>b</code> should be different types. It means <code>a</code> and <code>b</code> <em>can</em> be different types.</p>\n\n<p>If you for example use <code>(-) :: Num c =&gt; c -&gt; c -&gt; c</code>, then Haskell will deduce that:</p>\n\n<pre><code>foldr ::          (a -&gt; b -&gt; b) -&gt; (b -&gt; ([a] -&gt; b))\n(-)      Num c =&gt;  c -&gt; c -&gt; c\n----------------------------------------------------\na ~ c, b ~ c\n</code></pre>\n\n<p>So <code>a</code> and <code>b</code> and <code>c</code> are thus the same type here. The type of <code>foldr (-)</code> thus has type:</p>\n\n<pre><code>foldr (-) :: Num c =&gt; c -&gt; ([c] -&gt; c)\n</code></pre>\n\n<p><code>foldr (-)</code> thus takes a number of type <code>c</code>, and returns a function that maps a list of <code>c</code>s to a <code>c</code>. </p>\n"}, {"tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": false, "score": 2, "last_activity_date": 1565203510, "creation_date": 1565203510, "answer_id": 57400575, "question_id": 57400148, "link": "https://stackoverflow.com/questions/57400148/understanding-foldrs-definition/57400575#57400575", "title": "Understanding foldr&#39;s definition", "body": "<p>I like to explain this subject in this terms:</p>\n\n<pre><code>f :: a -&gt; b -&gt; b\nf x y = y \n</code></pre>\n\n<p>That's completely true, <code>a</code> and <code>b</code> could be different, and have different types, but it doesn't says anywhere it can't be of the same type, so:</p>\n\n<pre><code>v = f 'c' True\nv :: Bool\n</code></pre>\n\n<p>here, <code>f :: Char -&gt; Bool -&gt; Bool</code>\nbut you can also do something like:</p>\n\n<pre><code>v2 = f False True\nv3 = f False False\n\nv2 :: Bool\nv3 :: Bool\n</code></pre>\n\n<p>and here <code>f :: Bool -&gt; Bool -&gt; Bool</code></p>\n\n<p>Different is when you want those two to be of the same type and restrict them, example:</p>\n\n<pre><code>sameTypeTuple :: a -&gt; a -&gt; (a,a)\nsameTypeTuple x y = (x,y)\n</code></pre>\n\n<p>you are restricting the arguments to be of the same type:</p>\n\n<pre><code>v4 = sameTypeTuple 'a' 'b'\nv4 :: (Char, Char)\n</code></pre>\n\n<p>BUT </p>\n\n<pre><code>v5 = sameTypeTuple 'c' True\n</code></pre>\n\n<p>will give to you</p>\n\n<pre><code> error:\n    \u2022 Couldn't match expected type \u2018Char\u2019 with actual type \u2018Bool\u2019\n    \u2022 In the second argument of \u2018sameTypeTuple\u2019, namely \u2018True\u2019\n      In the expression: sameTypeTuple 'c' True\n      In an equation for \u2018it\u2019: it = sameTypeTuple 'c' True\n</code></pre>\n\n<p>Finally:</p>\n\n<p>in <code>foldr (-) 54 [10, 11]</code> you are saying that <code>a</code> and <code>b</code> will be of type <code>Num a0 =&gt; a0)</code> of type <code>a0</code> (the type is <code>a0</code> and not <code>Num</code>, <code>Num</code> is the constrait, the typeclass)</p>\n"}], "owner": {"reputation": 14927, "user_id": 2719875, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ae764a4524119ce0d93e7d8f0ee2356c?s=128&d=identicon&r=PG&f=1", "display_name": "user2719875", "link": "https://stackoverflow.com/users/2719875/user2719875"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 62, "favorite_count": 0, "accepted_answer_id": 57400269, "answer_count": 2, "score": 3, "last_activity_date": 1565203510, "creation_date": 1565201655, "question_id": 57400148, "link": "https://stackoverflow.com/questions/57400148/understanding-foldrs-definition", "title": "Understanding foldr&#39;s definition", "body": "<p>The definition of foldr is (according to <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.Base.html#local-6989586621679020249\" rel=\"nofollow noreferrer\">https://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.Base.html#local-6989586621679020249</a>)</p>\n\n<pre><code>foldr            :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b\n</code></pre>\n\n<p>That means the first argument is of type <code>(a -&gt; b -&gt; b)</code>, the second <code>b</code>, the third <code>[a]</code> and returns <code>b</code>.</p>\n\n<p>If we look at an example: </p>\n\n<pre><code>foldr (-) 54 [10, 11]\n</code></pre>\n\n<p>Doesn't <code>-</code> take two of the same type, and returns the same type? So shouldn't it be <code>(a -&gt; a -&gt; a)</code>?</p>\n"}, {"tags": ["haskell", "ghc", "cabal", "haskell-stack", "plutus"], "answers": [{"comments": [{"owner": {"reputation": 711, "user_id": 1023733, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/2495649dc156081879843944795860d5?s=128&d=identicon&r=PG", "display_name": "user1023733", "link": "https://stackoverflow.com/users/1023733/user1023733"}, "edited": false, "score": 0, "creation_date": 1565198616, "post_id": 57398188, "comment_id": 101280567, "body": "Thanks, but how do I use pacman to install eay32 and ssl32? None of the pacman commands I&#39;ve used are working."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 711, "user_id": 1023733, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/2495649dc156081879843944795860d5?s=128&d=identicon&r=PG", "display_name": "user1023733", "link": "https://stackoverflow.com/users/1023733/user1023733"}, "edited": false, "score": 0, "creation_date": 1565220134, "post_id": 57398188, "comment_id": 101288181, "body": "@user1023733 I checked using <code>pacman -Ss</code>, and it appears MSYS2 doesn\u2019t come with EAY. Would need a more experienced MSYS2 person to confirm this though \u2014 maybe edit that tag into your question?"}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1565220177, "post_id": 57398188, "comment_id": 101288186, "body": "@Krantz Never thought of <code>stack exec bash</code> \u2014 thanks for that! I\u2019ve always used <code>stack exec mintty</code>, which opens up a separate terminal emulator completely."}], "tags": [], "owner": {"reputation": 616, "user_id": 8578679, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CeZ5Z.png?s=128&g=1", "display_name": "Ruifeng Xie", "link": "https://stackoverflow.com/users/8578679/ruifeng-xie"}, "is_accepted": false, "score": 2, "last_activity_date": 1565199080, "last_edit_date": 1565199080, "creation_date": 1565193078, "answer_id": 57398188, "question_id": 57398020, "link": "https://stackoverflow.com/questions/57398020/error-when-running-stack-build-language-plutus-core-on-windows-8/57398188#57398188", "title": "Error when running stack build language-plutus-core on Windows 8", "body": "<p>Consider installing these packages using the bundled MSYS in your stack installation. First do <code>stack exec bash</code> to enter MSYS, then use the <code>pacman</code> in that MSYS environment.</p>\n\n<p>The packages from the bundled <code>pacman</code> are from MinGW32, MinGW64 and MSYS2, so most of them (as far as I have used) should be prefixed with <code>mingw-w64-i686-</code> or <code>mingw-w64-x86_64-</code>. See <a href=\"https://github.com/msys2/msys2/wiki/Using-packages\" rel=\"nofollow noreferrer\">the official documentation for msys2</a> for detailed information. </p>\n"}], "owner": {"reputation": 711, "user_id": 1023733, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/2495649dc156081879843944795860d5?s=128&d=identicon&r=PG", "display_name": "user1023733", "link": "https://stackoverflow.com/users/1023733/user1023733"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1568027430, "creation_date": 1565192490, "last_edit_date": 1568027430, "question_id": 57398020, "link": "https://stackoverflow.com/questions/57398020/error-when-running-stack-build-language-plutus-core-on-windows-8", "title": "Error when running stack build language-plutus-core on Windows 8", "body": "<p>When I ran the command <code>stack build language-plutus-core</code> I received the following error:</p>\n\n<pre><code>--  While building custom Setup.hs for package cryptonite-openssl-0.7 using:\n      C:\\sr\\setup-exe-cache\\x86_64-windows\\Cabal-simple_Z6RU0evB_2.4.0.1_ghc-8.6\n.4.exe --builddir=.stack-work\\dist\\e626a42b configure --with-ghc=C:\\Users...\n    Process exited with code: ExitFailure 1\n    Logs have been written to: C:\\Projects\\2019-08-07-Plutus\\plutus-master\\.stac\nk-work\\logs\\cryptonite-openssl-0.7.log\n\n    Configuring cryptonite-openssl-0.7...\n    Cabal-simple_Z6RU0evB_2.4.0.1_ghc-8.6.4.exe: Missing dependencies on foreign  libraries:\n    * Missing (or bad) C libraries: eay32, ssl32\n    This problem can usually be solved by installing the system packages that\n    provide these libraries (you may need the \"-dev\" versions). If the libraries are already installed but in a non-standard location then you can use the flags --extra-include-dirs= and --extra-lib-dirs= to specify where they are.\nIf the library files do exist, it may contain errors that are caught by the C compiler at the preprocessing stage. In this case you can re-run configure\nwith the verbosity flag -v3 to see the error messages.\n</code></pre>\n\n<p>Anyone any idea how to fix this? Do i need to install eay32, ssl32 separately?</p>\n"}, {"tags": ["haskell", "scrap-your-boilerplate", "rank-n-types"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1565168717, "post_id": 57389874, "comment_id": 101263761, "body": "There should be a SYB (scrap your boilerplate) tutorial in the &#39;net. Even more than one. I&#39;d start there, since the relatively low-level primitives like <code>gfoldl</code> are very general and hardish to understand at first. Also, SYB is probably not the easiest way to learn rank-N types."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1565174936, "post_id": 57389874, "comment_id": 101267119, "body": "Also, SYB is a lot harder to grasp than GHC.Generics (though arguably more elegant), so if you want this for automating instance-generation then you may be better off with Generic."}, {"owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1565175249, "post_id": 57389874, "comment_id": 101267311, "body": "@leftaroundabout I guess <code>gfoldl</code> has some functionalities that GHC.Generics can&#39;t cover."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1565199125, "post_id": 57389874, "comment_id": 101280819, "body": "I wouldn&#39;t say it&#39;s more elegant; it&#39;s just different. <code>Data.Data</code> has an &quot;untyped&quot; feel and is &quot;deep&quot;, while <code>GHC.Generics</code> has a very &quot;typed&quot; feel (though less than <code>generics-sop</code>) and is &quot;shallow&quot;. My general impression is that <code>Data.Data</code> is mostly about offering tools to make AST manipulation convenient, while <code>GHC.Generics</code> is more about class defaults and the like."}], "answers": [{"tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": false, "score": 0, "last_activity_date": 1565187639, "creation_date": 1565187639, "answer_id": 57396566, "question_id": 57389874, "link": "https://stackoverflow.com/questions/57389874/how-to-use-data-data/57396566#57396566", "title": "How to use Data.Data?", "body": "<p><code>Data.Data</code> is part of a generic metaprogramming framework called \"Scrap your boilerplate\".</p>\n\n<ul>\n<li><p>The <code>Data.Data</code> module links to a list of research publications on the topic <a href=\"https://wiki.haskell.org/Research_papers/Generics#Scrap_your_boilerplate.21\" rel=\"nofollow noreferrer\">https://wiki.haskell.org/Research_papers/Generics#Scrap_your_boilerplate.21</a></p></li>\n<li><p>The <a href=\"https://hackage.haskell.org/package/syb-0.7.1\" rel=\"nofollow noreferrer\">syb library</a> is full of examples of generic transformations, see in particular the <a href=\"https://hackage.haskell.org/package/syb-0.7.1/docs/Data-Generics-Schemes.html\" rel=\"nofollow noreferrer\">Schemes module</a></p></li>\n<li><p>There used to be a SYB wiki (linked from <code>Data.Data</code> and syb) but sadly it seems dead now.</p></li>\n<li><p>For a different kind of example, <a href=\"https://hackage.haskell.org/package/boltzmann-samplers\" rel=\"nofollow noreferrer\">boltzmann-samplers</a> (I'm the author) uses <code>Data.Data</code> for generic random generators with some uniformity properties.</p></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 1229, "user_id": 1183514, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/oO0Xu.jpg?s=128&g=1", "display_name": "boran", "link": "https://stackoverflow.com/users/1183514/boran"}, "is_accepted": true, "score": 3, "last_activity_date": 1565188081, "creation_date": 1565188081, "answer_id": 57396727, "question_id": 57389874, "link": "https://stackoverflow.com/questions/57389874/how-to-use-data-data/57396727#57396727", "title": "How to use Data.Data?", "body": "<p>For the <code>gmapT</code> case the <code>mkT</code> function is defined for this purpose in the original paper.</p>\n\n<pre><code>mkT :: (Typeable a, Typeable b ) =&gt; (b -&gt; b) -&gt; a -&gt; a\nmkT f = fromMaybe id (cast f)\n</code></pre>\n\n<p>For example to increment all <code>int</code> fields in the <code>A</code>, you can write something like</p>\n\n<pre><code>data A = A {f :: Int, s :: Int} deriving (Data, Typeable)\n\nex = gmapT (mkT inc) (A 2 3) where \n  inc :: Int -&gt; Int\n  inc = (+1)\n</code></pre>\n\n<p>To make it clearer the <code>ex</code> function can be written like this too:</p>\n\n<pre><code>ex2 = gmapT f (A 2 3) where \n  f :: (Data a ) =&gt;  a -&gt; a\n  f a = case cast a of \n    Nothing -&gt; a\n    (Just (b :: Int)) -&gt; fromJust $ cast (b + 1)\n</code></pre>\n"}], "owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 183, "favorite_count": 0, "accepted_answer_id": 57396727, "answer_count": 2, "score": 2, "last_activity_date": 1565188081, "creation_date": 1565165804, "last_edit_date": 1565174183, "question_id": 57389874, "link": "https://stackoverflow.com/questions/57389874/how-to-use-data-data", "title": "How to use Data.Data?", "body": "<p>As I'm not familiar with rank-N types, the type signature of <code>gfoldl</code> is a troublesome for me:</p>\n\n<pre><code>gfoldl :: (forall d b. Data d =&gt; c (d -&gt; b) -&gt; d -&gt; c b)\n-&gt; (forall g. g -&gt; c g)\n-&gt; a\n-&gt; c a\n</code></pre>\n\n<p>The only functions I can think of are <code>\\xs y -&gt; ($y) &lt;$&gt; xs</code> and <code>pure</code>, respectively.</p>\n\n<p>Other functions such as <code>gunfold</code> and <code>gmapT</code> have similar problems. So what are notable examples of nontrivial uses of them?</p>\n"}, {"tags": ["list", "haskell", "concatenation", "monads", "alternative-functor"], "answers": [{"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": true, "score": 1, "last_activity_date": 1565180862, "last_edit_date": 1565180862, "creation_date": 1565180408, "answer_id": 57394378, "question_id": 57385652, "link": "https://stackoverflow.com/questions/57385652/understanding-function-with-operator/57394378#57394378", "title": "Understanding function with &lt;|&gt; operator", "body": "<p>First, if <code>f</code> is <code>[]</code>, then <code>pure (Special [])</code> is <code>[(Special [])]</code>, which is just <code>[Special []]</code>.</p>\n\n<p>Second, list concatenation is the most natural thing, with</p>\n\n<pre><code>  [a, b, c, d, ...]  ++  [p, q, r, s, ...]\n==\n  [a, b, c, d, ...   ,    p, q, r, s, ...]\n</code></pre>\n\n<p>i.e.</p>\n\n<pre><code>(x:xs) ++ ys  =  x : (xs ++ ys)\n[]     ++ ys  =             ys\n</code></pre>\n\n<p>which is to say,</p>\n\n<pre><code>   xs  ++ ys  =  foldr (:) ys xs\n</code></pre>\n\n<p>Thus</p>\n\n<pre><code>  [a, b, c]  &lt;|&gt;  [Special []]\n==\n  [a, b, c,        Special []]\n</code></pre>\n\n<p>and</p>\n\n<pre><code>  []         &lt;|&gt;  [Special []]\n==\n  [                Special []]\n</code></pre>\n\n<p>So no, <code>&lt;|&gt; pure (Special [])</code> does not concatenate with the empty list, but rather with a list of a <code>Special</code> wrapping the empty list.</p>\n"}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 1, "accepted_answer_id": 57394378, "answer_count": 1, "score": 4, "last_activity_date": 1613969881, "creation_date": 1565139091, "last_edit_date": 1613969881, "question_id": 57385652, "link": "https://stackoverflow.com/questions/57385652/understanding-function-with-operator", "title": "Understanding function with &lt;|&gt; operator", "body": "<p>I have the following type:</p>\n\n<pre><code>newtype Rep f a = Rep { runRep :: String -&gt; f (String, a) }\n</code></pre>\n\n<p>The type <code>Rep f a</code> is a stateful computation that takes a <code>String</code> as the initial state and produces a <code>(String, a)</code> as the result of the computation. The result of the computation is wrapped in the functor <code>f</code>.</p>\n\n<p>The Applicative instance for <code>Rep</code> is the following:</p>\n\n<pre><code>instance Monad f =&gt; Applicative (Rep f) where \n    pure x = Rep $ \\s -&gt; pure (s, x)\n    Rep f &lt;*&gt; Rep x = Rep $ \\s -&gt; do \n        (s',rf)  &lt;- f s \n        (s'',rx) &lt;- x s'\n        return (s'', rf rx)\n</code></pre>\n\n<p>And the Monad instance for <code>Rep</code> is the following:</p>\n\n<pre><code>instance Monad f =&gt; Monad (Rep f) where \n   return x = pure x \n   Rep a &gt;&gt;= f = Rep $ \\s -&gt; do\n      (s', ya) &lt;- a s\n      let (Rep f') = f ya\n      (s'', yf) &lt;- f' s'\n      pure (s'', yf)\n</code></pre>\n\n<p>The Alternative instance for <code>Rep</code> is the following:</p>\n\n<pre><code>instance (Monad f, Alternative f) =&gt; Alternative (Rep f) where \n    empty = Rep (const empty)\n    Rep a &lt;|&gt; Rep b = Rep $ \\s -&gt; a s &lt;|&gt; b s\n</code></pre>\n\n<p>I have the following data types and function:</p>\n\n<pre><code>data TD = Empty | Fol TD TD | Letters [Char] | Str TD\ndata Res = Nil | Character Char | Cop Res Res | Special [Res]\n\nfindmatch :: (Monad f, Alternative f) =&gt; TD -&gt; Rep f Res\n\nfindmatch (Str a) =\n   frontAdd &lt;$&gt; findmatch a &lt;*&gt; findmatch (Str a)\n   &lt;|&gt; pure (Special [])\n      where\n      frontAdd x (Special xs) = Special (x:xs)\n      frontAdd _ _ = error \"Not possible.\"\n</code></pre>\n\n<p>I am having trouble understanding the function above. The function <code>frontAdd</code> creates a <code>Special</code> value which contains a list of <code>[Res]</code>. <code>findmatch</code> returns <code>Rep f Res</code>. The line <code>frontAdd &lt;$&gt; findmatch a &lt;*&gt; findmatch (Str a)</code> applies <code>frontAdd</code> to the <code>Res</code> that is returned by <code>findmatch a</code> and <code>findmatch (Str a)</code>.</p>\n\n<p>However, I am not sure how this line, with the pattern matching, works: <code>frontAdd x (Special xs) = Special (x:xs)</code>. Further, assuming that the functor <code>f</code> is <code>[ ]</code>, how would the <code>&lt;|&gt;</code> in <code>frontAdd &lt;$&gt; findmatch a &lt;*&gt; findmatch (Str a) &lt;|&gt; pure (Special [])</code> work? I know that if the functor <code>f</code> is <code>Maybe</code>, then <code>&lt;|&gt;</code> makes a left-biased choice, but I don't know how <code>&lt;|&gt;</code> works specifically for lists. In the documentation it states:</p>\n\n<pre><code>instance Alternative [] where\n  empty = []\n  (&lt;|&gt;) = (++) -- length xs + length ys = length (xs ++ ys)\n</code></pre>\n\n<p>How exactly does the concatenation work? Am I correct in saying that the result of <code>frontAdd &lt;$&gt; findmatch a &lt;*&gt; findmatch (Str a)</code> is concatenated with the empty list?</p>\n\n<p>Any insights are appreciated.</p>\n"}, {"tags": ["haskell", "operators"], "comments": [{"owner": {"reputation": 14609, "user_id": 667648, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/mTpbt.jpg?s=128&g=1", "display_name": "Dair", "link": "https://stackoverflow.com/users/667648/dair"}, "edited": false, "score": 4, "creation_date": 1565128708, "post_id": 57384330, "comment_id": 101253079, "body": "Short answer is no, because this would violate the expected closure of a <code>Num</code> instance. Longer answer is to checkout the <a href=\"https://github.com/goldfirere/units/blob/master/Data/Metrology/Combinators.hs\" rel=\"nofollow noreferrer\"><code>units</code> library</a> which uses the <code>:&#47;</code>, <code>:*</code>, <code>:+</code> etc."}, {"owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "edited": false, "score": 1, "creation_date": 1565190609, "post_id": 57384330, "comment_id": 101276564, "body": "You might also want to look at the &quot;dimensional&quot; library <a href=\"http://hackage.haskell.org/package/dimensional\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/dimensional</a> Warning: advanced type-fu required to understand what is going on here."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "edited": false, "score": 0, "creation_date": 1565201305, "post_id": 57384330, "comment_id": 101281717, "body": "@PaulJohnson, how do <code>units</code> and <code>dimensional</code> compare?"}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 1, "last_activity_date": 1565139470, "creation_date": 1565139470, "answer_id": 57385682, "question_id": 57384330, "link": "https://stackoverflow.com/questions/57384330/overload-as-a-b-c/57385682#57385682", "title": "Overload (*) as a -&gt; b -&gt; c", "body": "<p>No, giving the <code>Prelude</code>'s multiplication operator that type is not possible. But you can make your own operator and give it whatever type you want. You can even name it <code>(*)</code> if you want...</p>\n\n<pre><code>import Prelude hiding ((*))\nimport qualified Prelude\nKmsPerHour a * Hours b = Kms (a Prelude.* b)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 33, "user_id": 11108837, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ac9f4a8dfea37d1a7b95a63ac083f463?s=128&d=identicon&r=PG&f=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/11108837/j-doe"}, "edited": false, "score": 0, "creation_date": 1565178922, "post_id": 57390087, "comment_id": 101269390, "body": "This looks elegant, I updated my question with my first take on it. I do not have enough knowledge to evaluate the difference between that and a type family solution. Any thoughts are welcome."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 33, "user_id": 11108837, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ac9f4a8dfea37d1a7b95a63ac083f463?s=128&d=identicon&r=PG&f=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/11108837/j-doe"}, "edited": false, "score": 2, "creation_date": 1565180994, "post_id": 57390087, "comment_id": 101270557, "body": "@J.Doe I think you ought to revert your edit to the question and post it as a new, follow-up question. otherwise it gets too confusing to follow. Moreover, if your code is working, i.e. you don&#39;t have a problem with it and instead ask for a discussion and &quot;thoughts&quot;, i.e. a <i>review</i>, then the right place to post it might be on CodeReview stackexchange."}, {"owner": {"reputation": 33, "user_id": 11108837, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ac9f4a8dfea37d1a7b95a63ac083f463?s=128&d=identicon&r=PG&f=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/11108837/j-doe"}, "edited": false, "score": 0, "creation_date": 1565193870, "post_id": 57390087, "comment_id": 101278274, "body": "I understand now that my comment and my edit could be misconstrued and made possible the question worse. What I tried to convey was that I potentially have a solution but I cannot see the long term differences between that and the type family one. So maybe I should add it as an answer and people can vote it down if it is not the best solution?"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 33, "user_id": 11108837, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ac9f4a8dfea37d1a7b95a63ac083f463?s=128&d=identicon&r=PG&f=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/11108837/j-doe"}, "edited": false, "score": 0, "creation_date": 1565202626, "post_id": 57390087, "comment_id": 101282264, "body": "@J.Doe if you aren&#39;t sure in its correctness, it is <i>not</i> an answer, so why post it? if you have a question, <i>ask</i>. :)"}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 1, "last_activity_date": 1565166574, "creation_date": 1565166574, "answer_id": 57390087, "question_id": 57384330, "link": "https://stackoverflow.com/questions/57384330/overload-as-a-b-c/57390087#57390087", "title": "Overload (*) as a -&gt; b -&gt; c", "body": "<p><code>a -&gt; b -&gt; c</code> by itself is clearly a much too weak signature, as it would also allow stuff like </p>\n\n<pre><code>  (1`KmPerHour`) * (1`KmPerHour`) :: Hours\n</code></pre>\n\n<p>You do need some restriction on the types. There are broadly two options for that:</p>\n\n<ul>\n<li><p>a multi-param type class with fundeps.</p>\n\n<pre><code>{-# LANGUAGE FunctionalDependencies #-}\n\ninfixl 7 \u00b7\nclass PhysQttyMul a b c | a b -&gt; c, a c -&gt; b, b c -&gt; a where\n  (\u00b7) :: a -&gt; b -&gt; c\n\nnewtype Length = Kms {getLengthInKm :: Double} -- deriving Data.VectorSpace.VectorSpace\nnewtype Time = Hours {getTimeInHours :: Double}\nnewtype Speed = KmPerHour {getSpeedInkmph ::Double}\n\ninstance PhysQttyMul Speed Time Length where\n  KmPerHour v \u00b7 Hours t = Kms $ v*t\ninstance PhysQttyMul Time Speed Length where\n  Hours v \u00b7 KmPerHour t = Kms $ v*t\n</code></pre></li>\n<li><p>a type family that just calculates the type of the product of two operands at compile-time.</p>\n\n<pre><code>type family PhysQttyProd a b :: *\n\ntype instance PhysQttyProd Speed Time = Length\ntype instance PhysQttyProd Time Speed = Length\n</code></pre>\n\n<p>...and then you still need a typeclass for the actual value-multiplication</p>\n\n<pre><code>class PhysQttyMul a b where\n  (\u00b7) :: a -&gt; b -&gt; PhysQttyProd a b\n\ninstance PhysQttyMul Speed Time where\n  KmPerHour v \u00b7 Hours t = Kms $ v*t\ninstance PhysQttyMul Time Speed where\n  Hours v \u00b7 KmPerHour t = Kms $ v*t\n</code></pre></li>\n</ul>\n\n<p>The latter option looks much complicated, but it has some practical advantages when actually defining your unit system. In particular, it lends itself well to a generic type that can express <em>any</em> physical quantity, via essentially the exponents of a set of base units. That's how <a href=\"https://github.com/goldfirere/units\" rel=\"nofollow noreferrer\">the units library</a> does it.</p>\n"}], "owner": {"reputation": 33, "user_id": 11108837, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ac9f4a8dfea37d1a7b95a63ac083f463?s=128&d=identicon&r=PG&f=1", "display_name": "J. Doe", "link": "https://stackoverflow.com/users/11108837/j-doe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 141, "favorite_count": 0, "accepted_answer_id": 57390087, "answer_count": 2, "score": 3, "last_activity_date": 1565178800, "creation_date": 1565127400, "last_edit_date": 1592644375, "question_id": 57384330, "link": "https://stackoverflow.com/questions/57384330/overload-as-a-b-c", "title": "Overload (*) as a -&gt; b -&gt; c", "body": "<p>With the following types</p>\n<pre><code>newtype Kms =\n  Kms Double\nnewtype Hours =\n  Hours Double\nnewtype KmsPerHour =\n  KmsPerHour Double\n</code></pre>\n<p>I would like to have the following</p>\n<pre><code>foo :: KmsPerHour -&gt; Hours -&gt; Kms\nfoo kmsPerHour hours = kmsPerHour * hours\n</code></pre>\n<p>Is this possible? In a perfect world the solution would support (/) as well and for several different units (m, m/s, m/s/s for example)</p>\n<p>That way I can more easily make sure that all the units I use match up and that the calculations is correct.\nThe way I do it now (but with several more types of units in different combinations) is</p>\n<pre><code>foo :: KmsPerHour -&gt; Hours -&gt; Kms\nfoo (KmsPerHour kmsPerHour) (Hours hours) = Kms $ kmsPerHour * hours\n</code></pre>\n<p>I checked this <a href=\"https://stackoverflow.com/questions/8308015/can-you-overload-in-haskell\">Can you overload + in haskell?</a> and <a href=\"https://hackage.haskell.org/package/alg-0.2.10.0/docs/src/Algebra.html#%2B\" rel=\"nofollow noreferrer\">https://hackage.haskell.org/package/alg-0.2.10.0/docs/src/Algebra.html#%2B</a> but those are just a-&gt;a-&gt;a</p>\n<h1>Update</h1>\n<p>My try looks like this. I really like how it very tightly secures the types and it supports nested types and I do not need to define every type combination but I do not know if this is a good way to go - especially since the type family option seems elegant.</p>\n<p>Ofc, the functions below can be changed to operators</p>\n<pre><code>class Unit a where\n  unwrap :: a -&gt; Double\n  unitMap :: (Double -&gt; Double) -&gt; a -&gt; a\n\ninstance Unit Kms where\n  unwrap (Kms x) = x\n  unitMap f (Kms x) = Kms $ f x\n\nnewtype Per a b =\n  Per a\n  deriving (Eq, Show)\n\ninstance (Unit a, Unit b) =&gt; Unit (Per a b) where\n  unwrap (Per x) = unwrap x\n  unitMap f (Per x) = Per $ unitMap f x\n\nmultWithUnits :: (Unit a, Unit b) =&gt; Per a b -&gt; b -&gt; a\nmultWithUnits (Per x) z =\n  let zVal :: Double\n      zVal = unwrap z\n   in unitMap (* zVal) x\n\ndivWithUnits :: (Unit a, Unit b) =&gt; a -&gt; b -&gt; Per a b\ndivWithUnits x y =\n  let yVal = unwrap y\n   in Per (unitMap (/ yVal) x)\n\nmultUnitWith :: (Unit a, Unit b) =&gt; Double -&gt; Per a b -&gt; Per a b\nmultUnitWith factor = convert (* factor)\n\ndivUnitWith :: (Unit a, Unit b) =&gt; Double -&gt; Per a b -&gt; Per a b\ndivUnitWith factor = convert (/ factor)\n\ntoKmsPerHour :: Kms -&gt; Hours -&gt; Per Kms Hours\ntoKmsPerHour kms h = km `divWithUnits` h\n\ndistance :: Per Kms Hours -&gt; Hours -&gt; Kms\ndistance speed time = speed `multWithUnits` time\n</code></pre>\n<p>I ommited implementations of Hours, and the instances of Num, Ord and other things to not bloat the post.</p>\n<pre><code>addKms :: Kms -&gt; Kms -&gt; Kms\naddKms k1 k2 = k1 + k2\n</code></pre>\n<p>Thoughts?</p>\n"}, {"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1565182798, "post_id": 57383885, "comment_id": 101271702, "body": "You need to look at the <code>Applicative</code> instance for <code>Rep</code> to understand why the two are equivalent. The shorter answer is that there is no data dependency between the two recursive calls to <code>findmatch</code>, so the <code>Monad</code> instance unnecessarily forces one to run before the other. The <code>Applicative</code> instance does not."}], "answers": [{"comments": [{"owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "edited": false, "score": 0, "creation_date": 1565126312, "post_id": 57383990, "comment_id": 101252351, "body": "Since Cop is a value constructor, am I correct in saying that it takes values of type Res and constructs a value that is of type Res?"}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "reply_to_user": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "edited": false, "score": 0, "creation_date": 1565128696, "post_id": 57383990, "comment_id": 101253076, "body": "@ceno980 Yes, exactly that. In comparison, <code>Letters</code> takes a <code>[Char]</code> and constructs a <code>TD</code>, and <code>Character</code> takes a <code>Char</code> and constructs a <code>Res</code>."}], "tags": [], "owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "is_accepted": true, "score": 2, "last_activity_date": 1565125551, "creation_date": 1565125551, "answer_id": 57383990, "question_id": 57383885, "link": "https://stackoverflow.com/questions/57383885/understanding-the-operator/57383990#57383990", "title": "Understanding the &lt;$&gt; operator", "body": "<blockquote>\n  <p>However is <code>Cop</code> a function in this case? I know that <code>Cop</code> is a value constructor that takes two arguments of type <code>Res</code>.</p>\n</blockquote>\n\n<p>Yes, <code>Cop</code> is a function with two parameters. It has the type <code>Cop :: Res -&gt; Res -&gt; Res</code>.</p>\n\n<blockquote>\n  <p>If one argument of type <code>Res</code> is passed to Cop, this would return another function which takes a value of type <code>Res</code>.</p>\n</blockquote>\n\n<p>Yes. <code>Cop &lt;$&gt; findmatch a :: Functor f =&gt; f (Res -&gt; Res)</code></p>\n\n<blockquote>\n  <p>What would the type of the result that is returned by this second function that resulted from the partial application.</p>\n</blockquote>\n\n<p>It's the type of the value that is constructed by the <code>Cop</code> constructor: it's constructing <code>Res</code> values.</p>\n"}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "accepted_answer_id": 57383990, "answer_count": 1, "score": 1, "last_activity_date": 1565125551, "creation_date": 1565124961, "question_id": 57383885, "link": "https://stackoverflow.com/questions/57383885/understanding-the-operator", "title": "Understanding the &lt;$&gt; operator", "body": "<p>I have the following type:</p>\n\n<pre><code>newtype Rep f a = Rep { runRep :: String -&gt; f (String, a) }\n</code></pre>\n\n<p>The type Rep f a is a stateful computation that takes a String as the initial state and produces a (String, a) as the result of the computation. The result of the computation is wrapped in the functor  f.</p>\n\n<p>The applicative instance for Rep is the following:</p>\n\n<pre><code>instance Monad f =&gt; Applicative (Rep f) where \n    pure x = Rep $ \\s -&gt; pure (s, x)\n    Rep f &lt;*&gt; Rep x = Rep $ \\s -&gt; do \n        (s',rf)  &lt;- f s \n        (s'',rx) &lt;- x s'\n        return (s'', rf rx)\n</code></pre>\n\n<p>And the monad instance for Rep is the following:</p>\n\n<pre><code>instance Monad f =&gt; Monad (Rep f) where \n   return x = pure x \n   Rep a &gt;&gt;= f = Rep $ \\s -&gt; do\n    (s', ya) &lt;- a s\n    let (Rep f') = f ya\n    (s'', yf) &lt;- f' s'\n    pure (s'', yf)\n</code></pre>\n\n<p>I have the following data types and function:</p>\n\n<pre><code>data TD = Empty | Fol TD TD | Letters [Char]\n\ndata Res = Nil | Character Char | Cop Res Res | Special [Res]\n\nfindmatch (Fol a b) = do\n   ra &lt;- findmatch a\n   rb &lt;- findmatch b\n   pure (Cop ra rb)\n\nfindmatch (Fol a b) = Cop &lt;$&gt; findmatch a &lt;*&gt; findmatch b\n</code></pre>\n\n<p>I am having trouble understanding how the second definition of <code>findmatch</code> involving the <code>&lt;$&gt;</code> works. I know that <code>&lt;$&gt;</code> has the following type declaration:</p>\n\n<pre><code>(&lt;$&gt;) :: (Functor f) =&gt; (a -&gt; b) -&gt; f a -&gt; f b\nf &lt;$&gt; x = fmap f x\n</code></pre>\n\n<p>The first argument to <code>&lt;$&gt;</code> should be a function, whilst the second should be a value wrapped in a functor. The result of <code>findmatch</code> is a value wrapped in a functor, however is <code>Cop</code> a function in this case? I know that <code>Cop</code> is a value constructor that takes two arguments of type Res. If one argument of type Res is passed to Cop, which is what I think occurs in <code>Cop &lt;$&gt; findmatch a</code>, this would return another function which takes a value of type Res. However, I am not sure what would be the type of the result that is returned by this second function that resulted from the partial application.  </p>\n\n<p>Any insights are appreciated.</p>\n"}, {"tags": ["haskell", "concurrency", "mqtt", "event-stream-processing"], "comments": [{"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1565124961, "post_id": 57382995, "comment_id": 101251897, "body": "I really don&#39;t think it&#39;s a good idea to use lazy IO in <code>events :: IO [Event]</code>. Have you looked into using a library like <a href=\"https://hackage.haskell.org/package/streaming\" rel=\"nofollow noreferrer\"><code>streaming</code></a>?"}, {"owner": {"reputation": 857, "user_id": 11684473, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f75d9637ee85de92c304840bea0b9b4a?s=128&d=identicon&r=PG&f=1", "display_name": "majkrzak", "link": "https://stackoverflow.com/users/11684473/majkrzak"}, "reply_to_user": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1565160096, "post_id": 57382995, "comment_id": 101259549, "body": "@HTNW yes, but I don&#39;t see how <code>runStream</code> should be implemented with it (net-mqtt returns data via the callback) and how to zip/combine/select list of streams (get first avaliabele element, then next, ..., like orElse::STM a -&gt; STM a -&gt; STM a). Any ideas?"}], "answers": [{"comments": [{"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1565203471, "post_id": 57400184, "comment_id": 101282660, "body": "An example of using <code>concurrently</code> to coordinate processing stages: <a href=\"https://stackoverflow.com/a/50307727/1364288\">stackoverflow.com/a/50307727/1364288</a>"}], "tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": false, "score": 4, "last_activity_date": 1565206479, "last_edit_date": 1565206479, "creation_date": 1565201846, "answer_id": 57400184, "question_id": 57382995, "link": "https://stackoverflow.com/questions/57382995/handling-event-streams-in-haskell/57400184#57400184", "title": "Handling event streams in haskell", "body": "<p>The usual trick in these cases is to make the callback write to a queue, and then read from the other end of the queue.</p>\n\n<p>Using a <a href=\"http://hackage.haskell.org/package/stm-chans-3.0.0.4/docs/Control-Concurrent-STM-TBMQueue.html\" rel=\"nofollow noreferrer\">bounded, closeable</a> queue from the <a href=\"http://hackage.haskell.org/package/stm-chans\" rel=\"nofollow noreferrer\">stm-chans</a> package, we can define this function:</p>\n\n<pre><code>import Control.Concurrent.STM\nimport Control.Concurrent.STM.TBMQueue\n\nfoldQueue :: TBMQueue a -&gt; (x -&gt; a -&gt; IO x) -&gt; IO x -&gt; (x -&gt; IO b) -&gt; IO b\nfoldQueue queue step start done =\n    let go state = \n            do m &lt;- atomically (readTBMQueue queue)\n               case m of \n                   Nothing -&gt; done state\n                   Just a  -&gt; step state a &gt;&gt;= go\n     in start &gt;&gt;= go\n</code></pre>\n\n<p>It takes the channel, a step function (similar to the one required by <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Foldable.html#v:foldlM\" rel=\"nofollow noreferrer\"><code>foldM</code></a>), an action to obtain the initial state, and a \"done\" action that returns the final result, and then feeds data from the channel until it is closed. Notice that the fold state <code>x</code> is chosen by the caller of <code>foldQueue</code>.</p>\n\n<p>If later we want to upgrade to the monadic folds from the <a href=\"http://hackage.haskell.org/package/foldl\" rel=\"nofollow noreferrer\">foldl</a> package\u2014which have a very useful <code>Applicative</code> instance\u2014we can do it like this:</p>\n\n<pre><code>import qualified Control.Foldl as L\n\nfoldQueue' :: TBMQueue a -&gt; L.FoldM IO a b -&gt; IO b \nfoldQueue' queue = L.impurely (foldQueue queue)\n</code></pre>\n\n<p>Using <a href=\"http://hackage.haskell.org/package/foldl-1.4.5/docs/Control-Foldl.html#v:impurely\" rel=\"nofollow noreferrer\"><code>impurely</code></a> from the \"foldl\" package.</p>\n\n<p>Sometimes (like when parsing, grouping, or decoding) it's easier to use a pull-based consumer. We can do that with the <a href=\"http://hackage.haskell.org/package/streaming\" rel=\"nofollow noreferrer\">streaming</a> package:</p>\n\n<pre><code>import Streaming\nimport qualified Streaming.Prelude as S\n\nfoldQueue' :: TBMQueue a -&gt; (Stream (Of a) IO () -&gt; IO r) -&gt; IO r\nfoldQueue' queue consume = consume (S.untilRight (do\n    m &lt;- atomically (readTBMQueue queue)\n    return (case m of\n        Nothing -&gt; Right ()\n        Just a -&gt; Left a)))\n</code></pre>\n\n<p>Given a function that consumes a stream, we feed to it a stream of values read from the queue.</p>\n\n<p>Often, reading from the channel and writing to it must happen in different threads. We can use functions like <a href=\"http://hackage.haskell.org/package/async-2.2.2/docs/Control-Concurrent-Async.html#v:concurrently\" rel=\"nofollow noreferrer\"><code>concurrently</code></a> from <a href=\"http://hackage.haskell.org/package/async-2.2.2\" rel=\"nofollow noreferrer\">async</a> to handle it cleanly.</p>\n"}], "owner": {"reputation": 857, "user_id": 11684473, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f75d9637ee85de92c304840bea0b9b4a?s=128&d=identicon&r=PG&f=1", "display_name": "majkrzak", "link": "https://stackoverflow.com/users/11684473/majkrzak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 276, "favorite_count": 1, "answer_count": 1, "score": 5, "last_activity_date": 1565206479, "creation_date": 1565120699, "question_id": 57382995, "link": "https://stackoverflow.com/questions/57382995/handling-event-streams-in-haskell", "title": "Handling event streams in haskell", "body": "<p>I want to process stream of events received via the MQTT. Library which I'm using uses a callback to provide the results. Processing I'm doing depends on the previous state not only the latest event. Also in the future events might be gathered from the other sources.</p>\n\n<p>At the first I decided to compose it into the list which sounds as a good idea. I had the minor issue cause IO prevents lazy evaluation and waiting for infinite stream might be long, but I solved it with interleaving IO.</p>\n\n<p><code>stream :: IO [Event]</code> allows me to do the nice stuff like <code>foldl</code>, <code>foldM</code> <code>map</code>, <code>mapM</code>, etc... Unfortunately with this approach I rather wont be able to combine two streams, cause there is no more locking feature there.</p>\n\n<p>I was diging through many libs, and found STM with TQueue for example. Unfortunately it is not what I exactly want.</p>\n\n<p>I decide to create custom type and make it <code>Foldable</code> so I will be able to fold it. I failed due to IO.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>import Control.Concurrent.STM\n\nnewtype Stream a = Stream (STM a)\n\nrunStream\n  :: ((a -&gt; IO ()) -&gt; IO i)\n  -&gt; IO (Stream a)\nrunStream block = do\n  queue &lt;- newTQueueIO\n  block (atomically . writeTQueue queue)\n  return $ Stream (readTQueue queue)\n\nfoldStream :: (a -&gt; b -&gt; IO b) -&gt; b -&gt; Stream a -&gt; IO b\nfoldStream f s (Stream read) = do\n  n &lt;- atomically read\n  m &lt;- f n s\n  foldStream f m (Stream read)\n\nmapStream :: (a -&gt; b) -&gt; Stream a -&gt; Stream b\nmapStream f (Stream read) = Stream $ f &lt;$&gt; read\n\nzipStream :: [Stream a] -&gt; Stream a\nzipStream = undefined\n</code></pre>\n\n<p>Whih can be used like <code>main = foldStream (\\x _ -&gt; print x) () =&lt;&lt; events</code></p>\n\n<p>Is it possible to implement base some of base classes to work with this stream as with regular List?</p>\n"}, {"tags": ["haskell", "functional-programming", "monads", "alternative-functor"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1565100554, "post_id": 57377900, "comment_id": 101240423, "body": "What is the instance of <code>Monad</code> for <code>Rep</code> here?"}, {"owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1565101063, "post_id": 57377900, "comment_id": 101240793, "body": "I have added the monad instance for Rep in the question."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1565101457, "post_id": 57377900, "comment_id": 101241056, "body": "Also, what is the <code>Alternative</code> instance for <code>Rep</code>? The short answer is, your definition of <code>&gt;&gt;=</code> is probably not defined for <code>empty :: Rep f Char</code>, meaning there is a pattern match failure which leads to <code>fail</code> short-circuiting the rest of the <code>do</code> block."}, {"owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "edited": false, "score": 0, "creation_date": 1565101698, "post_id": 57377900, "comment_id": 101241218, "body": "I have added the alternative instance for Rep as well."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1565101715, "post_id": 57377900, "comment_id": 101241230, "body": "As for your <code>Maybe</code> example, <code>guard False &gt;&gt; ... == Nothing &gt;&gt; ... == Nothing</code>; <code>&gt;&gt;</code> for <code>Maybe</code> ignores the right operand when the left operand is <code>Nothing</code>."}, {"owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "edited": false, "score": 0, "creation_date": 1565102296, "post_id": 57377900, "comment_id": 101241603, "body": "Just to clarify, did you use the &gt;&gt; operator between guard False and pure (Character x) due to fact that the result of guard False wasn&#39;t bound to a variable using &lt;-, so there is no extracted value to pass to the next function in the do block?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1565102499, "post_id": 57377900, "comment_id": 101241719, "body": "Yes; <code>&gt;&gt;</code> itself is simply defined as <code>m &gt;&gt; k = m &gt;&gt;= \\_ -&gt; k</code>."}, {"owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "edited": false, "score": 0, "creation_date": 1565102893, "post_id": 57377900, "comment_id": 101241932, "body": "Also, am I correct in saying that the do block is executed for each character in the string cs?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1565110785, "post_id": 57377900, "comment_id": 101246075, "body": "No, iteration is not a feature of the <code>do</code> block, but rather the specific implementation of <code>&gt;&gt;=</code> for the list monad."}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 120, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1613969929, "creation_date": 1565100244, "last_edit_date": 1613969929, "question_id": 57377900, "link": "https://stackoverflow.com/questions/57377900/understanding-the-guard-function-in-do-block", "title": "Understanding the guard function in do block", "body": "<p>I have the following type:</p>\n\n<pre><code>newtype Rep f a = Rep { runRep :: String -&gt; f (String, a) }\n</code></pre>\n\n<p>The type <code>Rep f a</code> is a stateful computation that takes a String as the initial state and produces a <code>(String, a)</code> as the result of the computation. The result of the computation is wrapped in the functor <code>f</code>.</p>\n\n<p>The monad instance for Rep is the following:</p>\n\n<pre><code>instance Monad f =&gt; Monad (Rep f) where \n   return x = pure x \n   Rep a &gt;&gt;= f = Rep $ \\s -&gt; do\n    (s', xa) &lt;- a s\n    let (Rep f') = f xa\n    (s'', xf) &lt;- f' s'\n    pure (s'', xf)\n</code></pre>\n\n<p>The alternative instance for Rep is the following:</p>\n\n<pre><code>instance (Monad f, Alternative f) =&gt; Alternative (Rep f) where \n    empty = Rep (const empty)\n    Rep a &lt;|&gt; Rep b = Rep $ \\s -&gt; a s &lt;|&gt; b s\n</code></pre>\n\n<p>I also have the following function:</p>\n\n<pre><code>readCharacter :: (Alternative f, Monad f) =&gt; Rep f Char\nreadCharacter = Rep $ \\s -&gt; case s of\n[] -&gt; empty\n(x:xs) -&gt; pure (xs,x)\n</code></pre>\n\n<p>The above function takes a state and returns <code>empty</code> if the state is an empty list. If the state is not an empty list, it returns a tuple with the first element the modified state and the second a <code>Char</code>, wrapped in the functor <code>f</code>.</p>\n\n<p>And I also have the following function and data type:</p>\n\n<pre><code>data Res = Nil | Character Char | Cop Res Res | Special [Res]\n\nfindmatch :: (Monad f, Alternative f) =&gt; String -&gt; Rep f Res\n\nfindmatch (cs) = do\n   x &lt;- readCharacter\n   guard (x `elem` cs)\n   pure (Character x)\n</code></pre>\n\n<p>I am having trouble understanding how the above function works. It seems to me that for each character in the string <code>cs</code>, the <code>readCharacter</code> function is called. If the character returned by <code>readCharacter</code> is an element of the string <code>cs</code>, then the expression will evaluate to true. Suppose that the functor <code>f</code> is <code>Maybe</code> - then <code>guard (True)</code> will return a <code>Just ()</code>, and then <code>pure (Character x)</code> is returned.</p>\n\n<p>However, I am not sure what happens when the guard expression evaluates to <code>False</code>. For example, assuming that the functor is <code>Maybe</code>, <code>guard False</code> will return <code>Nothing</code>. If <code>Nothing</code> is returned by <code>guard False</code>, is it the case that the overall <code>do block</code> will return <code>Nothing</code>? Any insights are appreciated.</p>\n"}, {"tags": ["haskell", "functional-programming", "monads", "state-monad", "newtype"], "comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1582532105, "post_id": 57374143, "comment_id": 106795751, "body": "using <code>newtype {- StatePassingComputations -} State s a = MkState { runState :: s -&gt; (a,s) }</code> would&#39;ve probably been a lot less confusing, in a newbies--oriented book."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 9, "last_activity_date": 1565090350, "last_edit_date": 1565090350, "creation_date": 1565088644, "answer_id": 57374361, "question_id": 57374143, "link": "https://stackoverflow.com/questions/57374143/understanding-the-state-monad/57374361#57374361", "title": "Understanding the State Monad", "body": "<p>A <code>State</code> object does <em>not</em> store a state. It stores a \"change of state\". Indeed it stores a function <code>runState :: s -&gt; (a, s)</code>. Here <code>s</code> is the type of the state, and <code>a</code> is the type of the \"output\" so to speak.</p>\n\n<p>The function thus takes the state as input, and returns a 2-tuple <code>(a, s)</code>. Here the first item is the \"output\", and the second item is the \"new state\". The new state might be the same as the old state, but one thus has the opportunity to make changes to the state (otherwise it is not very useful to use a <code>State</code> anyway).</p>\n\n<p>We can bind <code>State</code>-changing object and a \"factory\" of a state changing object (<code>a -&gt; State s b</code>) together in a new <code>State</code>-changing object. We thus construct a function that takes an initial state <code>s<sub>0</sub></code>. We first run that to the <code>runState</code> of the <code>State</code> object, and thus retrieve a 2-tuple <code>(a, s<sub>1</sub>)</code>. We can then use this <code>a</code> to construct a <code>State s b</code> object, and then we run the (altered state) <code>s<sub>1</sub></code> through the <code>runState</code> of that <code>State</code> object.</p>\n\n<p>A more verbose implementation is thus:</p>\n\n<pre><code>instance Monad (State s) where \n   return x = State $ \\s -&gt; (x,s)\n   (State h) &gt;&gt;= f = State g\n       where g s0 = (b, s2) -- result of second runState\n                 where (a, s1) = h s0 -- run through first runState\n                       -- create second state with the output of the first\n                       State f' = f a\n                       (b, s2) = f' s1 -- run through second runState</code></pre>\n\n<p>Note that we here never actually <em>have</em> a state value. We only construct a new function that <em>will</em> work on that state value.</p>\n\n<p>Schematically we could see the bind operator as follows:</p>\n\n<pre>  s<sub>0</sub>\n\\    /\n |  |\n |  |\n ||||\n  |\\_________\n  |          '\n  |           s<sub>1</sub>\n  v         \\    /\n  a -----&gt;   |  |\n             |  |\n             ||||\n              |\\_______\n              |        '\n              v        s<sub>2</sub>\n              b</pre>\n\n<p>So here the first <code>runState</code> takes the initial state <code>s<sub>0</sub></code> will return an <code>a</code> and <code>s<sub>1</sub></code>. With the <code>a</code>, we construct a new <code>runState</code>, that can then process the state <code>s<sub>1</sub></code> further, and will return a <code>b</code> and the new state <code>s<sub>2</sub></code>.</p>\n"}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 847, "favorite_count": 0, "accepted_answer_id": 57374361, "answer_count": 1, "score": 3, "last_activity_date": 1582484401, "creation_date": 1565087811, "last_edit_date": 1582484401, "question_id": 57374143, "link": "https://stackoverflow.com/questions/57374143/understanding-the-state-monad", "title": "Understanding the State Monad", "body": "<p>I am learning about the State monad in the book \"Learn You a Haskell for Great Good!\" by Miran Lipovaca. \nFor the following monad instance:</p>\n\n<pre><code>instance Monad (State s) where \n   return x = State $ \\s -&gt; (x,s)\n   (State h) &gt;&gt;= f = State $ \\s -&gt; let (a, newState) = h s\n                                       (State g) = f a\n                                   in g newState\n</code></pre>\n\n<p>I am having trouble understanding the definition for the <code>&gt;&gt;=</code> function. I am not sure whether <code>h</code> is the stateful computation (i.e. the function that takes a state and returns a result with an updated state) or whether it is a state. I am guessing that it must be a stateful computation since it is applied to the state (of type <code>s</code>) in the lambda function to produce the result <code>(a, newState)</code>.</p>\n\n<p>But from the type declaration of <code>State s a</code>:</p>\n\n<pre><code>newtype State s a = State { runState :: s -&gt; (a,s) }\n</code></pre>\n\n<p>The state is of type <code>s</code> and the result is of type <code>a</code>. So for the monad instance, is the <code>s</code> in <code>instance Monad (State s)</code> the <em>type</em> of the state or is it actually the stateful computation? Any insights are appreciated.</p>\n"}, {"tags": ["haskell", "functional-programming"], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 0, "last_activity_date": 1565086208, "last_edit_date": 1565086208, "creation_date": 1565085699, "answer_id": 57373560, "question_id": 57373378, "link": "https://stackoverflow.com/questions/57373378/understanding-fmap-with-a-monad/57373560#57373560", "title": "Understanding fmap with a monad", "body": "<p><code>runRep</code> is something you defined in your record:</p>\n\n<pre><code>newtype Rep f a = Rep { <b>runRep</b> :: String -&gt; f (String, a) }</code></pre>\n\n<p>The compiler will automatically construct a \"getter\" function for that with the name <code>runRep</code>. Such getter has the signature:</p>\n\n<pre><code>someGetter :: Record -&gt; TypeOfField</code></pre>\n\n<p>For your <code>runRep</code>, it is thus:</p>\n\n<pre><code>runRep :: Rep f a -&gt; (String -&gt; f (String, a))</code></pre>\n\n<p>or less verbose:</p>\n\n<pre><code>runRep :: Rep f a -&gt; String -&gt; f (String, a)</code></pre>\n\n<p>The <code>runRep</code> is thus a function that indeed takes a <code>Rep f a</code>, and returns a function that takes a <code>String</code> and returns an <code>f (String, a)</code>.</p>\n\n<blockquote>\n  <p>I am not sure whether the second element of the tuple will be returned wrapped in the functor or without it.</p>\n</blockquote>\n\n<p>You will perform an <code>fmap snd</code> on the <code>f (String, a)</code>. <code>fmap snd</code> has as signature:</p>\n\n<pre><code>fmap snd :: Functor f =&gt; f (a, b) -&gt; f b</code></pre>\n\n<p>So you can indeed state that it will return the second item of the data wrapped in the functor. Although \"wrapped\" might not be the best word here.</p>\n\n<p>Note that if <code>f ~ []</code>, then you map on a list of 2-tuples, and you thus will return a list of all second items of that list.</p>\n"}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 57, "favorite_count": 0, "accepted_answer_id": 57373560, "answer_count": 1, "score": 1, "last_activity_date": 1565086208, "creation_date": 1565085142, "question_id": 57373378, "link": "https://stackoverflow.com/questions/57373378/understanding-fmap-with-a-monad", "title": "Understanding fmap with a monad", "body": "<p>I have the following data type:</p>\n\n<pre><code>newtype Rep f a = Rep { runRep :: String -&gt; f (String, a) }\n</code></pre>\n\n<p>The above type <code>Rep f a</code> is a stateful computation that takes a <code>String</code> as the initial state and produces a <code>(String, a)</code> as the result of the computation. <code>f</code> is a functor and the result of the computation is wrapped in the functor. </p>\n\n<p>For the following function.</p>\n\n<pre><code>rep :: Functor f =&gt; Rep f a -&gt; String -&gt; f a\nrep a s = fmap snd (runRep a s)\n</code></pre>\n\n<p>This function can be used to run a \"Rep\" computation on a string. However, I am not sure why runRep has to take a <code>Rep f a</code> as input as well as a <code>String</code>.\nFurther for the line <code>fmap snd (runRep a s)</code>, I am not sure whether the second element of the tuple will be returned wrapped in the functor or without it.</p>\n\n<p>Any insights are appreciated.</p>\n"}, {"tags": ["haskell", "gnuplot"], "comments": [{"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 1, "creation_date": 1565075060, "post_id": 57370426, "comment_id": 101226342, "body": "Side note: you don\u2019t need <code>do</code> for a one-line block. You can just write <code>main = plotFunc [] (linearScale 1000 (-10.0::Double,10.0)) (\\x -&gt; x^2)</code>."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1565130371, "post_id": 57370426, "comment_id": 101253506, "body": "Side note: you don&#39;t need a lambda for a square.  You can just write <code>(^2)</code> instead of <code>(\\x -&gt; x^2)</code>."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1565116090, "post_id": 57371567, "comment_id": 101248313, "body": "Better to switch to <code>Graphics.Gnuplot.Advanced</code>, I think."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 8, "last_activity_date": 1565078821, "creation_date": 1565078821, "answer_id": 57371567, "question_id": 57370426, "link": "https://stackoverflow.com/questions/57370426/why-haskell-gnuplot-code-works-in-ghci-but-not-from-cli-after-compiling/57371567#57371567", "title": "Why haskell gnuplot code works in ghci, but not from CLI after compiling?", "body": "<p>Don't exit your program immediately after opening the window, since that will close it down.</p>\n\n<p>For instance, wait for the user:</p>\n\n<pre><code>import Graphics.Gnuplot.Simple\n\nmain :: IO ()\nmain = do\n  plotFunc [] (linearScale 1000 (-10.0::Double,10.0)) (\\x -&gt; x^2)\n  putStrLn \"Press enter to exit.\"\n  getLine\n  return ()\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 2, "last_activity_date": 1565118903, "last_edit_date": 1565118903, "creation_date": 1565117678, "answer_id": 57382334, "question_id": 57370426, "link": "https://stackoverflow.com/questions/57370426/why-haskell-gnuplot-code-works-in-ghci-but-not-from-cli-after-compiling/57382334#57382334", "title": "Why haskell gnuplot code works in ghci, but not from CLI after compiling?", "body": "<p>Your best bet is to switch from <code>Graphics.Gnuplot.Simple</code> to <code>Graphics.Gnuplot.Advanced</code>. You can use <code>plotSync</code> to wait for GNUPlot to exit. I don't think <code>plotAsync</code> has much to offer, since it doesn't offer a way to wait for the thread it creates. Here's a better version:</p>\n\n<pre><code>myPlotAsync\n  :: (Terminal.C terminal, Display.C gfx)\n  =&gt; terminal -&gt; gfx -&gt; IO (ThreadId, MVar ExitStatus)\nmyPlotAsync term gfx = do\n  resultMV &lt;- newEmptyMVar\n  tid &lt;- forkIO $ plotSync term gfx\n             &gt;&gt;= putMVar resultMV\n          `onException` putMVar resultMV ExitSuccess\n  pure (tid, resultMV)\n</code></pre>\n\n<p>After your program calls <code>myPlotAsync</code>, it can do whatever else it needs to do and then call <code>readMVar</code> on the <code>MVar</code> to wait for GNUPlot to exit and get its exit status. It also has the option of holding on to the thread ID so it can kill the GNUPlot thread using <code>throwTo</code>.</p>\n"}], "owner": {"reputation": 19, "user_id": 10015390, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-V73u5RvmqDU/AAAAAAAAAAI/AAAAAAAAAAA/AB6qoq3yMo6sDebHHWg79c6GKAfCr6VXwQ/mo/photo.jpg?sz=128", "display_name": "Eugine Kosenko", "link": "https://stackoverflow.com/users/10015390/eugine-kosenko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 84, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1565118903, "creation_date": 1565074249, "question_id": 57370426, "link": "https://stackoverflow.com/questions/57370426/why-haskell-gnuplot-code-works-in-ghci-but-not-from-cli-after-compiling", "title": "Why haskell gnuplot code works in ghci, but not from CLI after compiling?", "body": "<p>The next simple code works fine in GHCi (the window with graphics appears), but after compiling in GHC, when one run it from command line, nothing happens. Why is it so?</p>\n\n<pre><code>import Graphics.Gnuplot.Simple\n\nmain :: IO ()\nmain = do\n  plotFunc [] (linearScale 1000 (-10.0::Double,10.0)) (\\x -&gt; x^2)\n</code></pre>\n\n<p>GHC 8.2.2\ngnuplot 0.5.5.1</p>\n"}, {"tags": ["haskell", "io", "monads"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1565075285, "post_id": 57370121, "comment_id": 101226438, "body": "<code>I&#39;m not quite sure how I&#39;m supposed to get access to the string &quot;inside&quot; of the StringFetcher.</code> - if I&#39;m understanding you correctly, then you simply can&#39;t, in general. There is no general way to access the value(s) &quot;inside&quot; a Monad. I&#39;m not quite sure what the intention of <code>fetch</code> is, I know the hard-coded <code>&quot;usage&quot;</code> is just for illustration, but there&#39;s no point writing a function unless this is a general pattern you will use a few times, in which case what to do depends on exactly how you use it, which isn&#39;t clear to me."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1565075324, "post_id": 57370121, "comment_id": 101226462, "body": "PS in <code>listStringFetcher</code> I think you want the outer <code>fst</code> to be <code>snd</code>"}, {"owner": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1565076915, "post_id": 57370121, "comment_id": 101227262, "body": "It is a general pattern I&#39;d like to use in multiple places. The idea is to fetch strings from &quot;anywhere&quot; for use in the program. My idea was given the type of <code>StringFetcher</code> I should be able to use it with any monad, and within that monad use <code>&gt;&gt;=</code> (and friends) to do something useful with the string."}, {"owner": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1565077761, "post_id": 57370121, "comment_id": 101227643, "body": "To be clear, I&#39;m not sold on this approach at all. Or maybe I&#39;m thinking about the whole thing completely wrong. The goal is to have functions that I can give some arbitrary StringFetcher."}], "answers": [{"comments": [{"owner": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "edited": false, "score": 0, "creation_date": 1565078267, "post_id": 57370945, "comment_id": 101227882, "body": "Yeah, I guess this is making me see I&#39;m thinking about it wrong and this approach can&#39;t work the way I want it to. Maybe I need to consider type classes or something..."}], "tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": false, "score": 0, "last_activity_date": 1565076431, "creation_date": 1565076431, "answer_id": 57370945, "question_id": 57370121, "link": "https://stackoverflow.com/questions/57370121/writing-a-flexible-string-fetcher/57370945#57370945", "title": "Writing a flexible &quot;string fetcher&quot;", "body": "<p>I know it won't answer directly you question, but could be a guide. A concrete instance of your function example would be:</p>\n\n<pre><code>usage ::  StringFetcher IO -&gt; IO ()\nusage fetch = (fetch \"usage\") &gt;&gt;= ((liftIO . putStrLn) :: String -&gt; IO ())\n</code></pre>\n\n<p>and that leads to the error:</p>\n\n<pre><code>error:\n    \u2022 Couldn't match type \u2018Maybe String\u2019 with \u2018IO String\u2019\n      Expected type: StringFetcher IO\n        Actual type: StringFetcher Maybe\n    \u2022 In the first argument of \u2018usage\u2019, namely\n        \u2018(listStringFetcher [(\"usage\", \"asdf\")])\u2019\n      In the expression: usage (listStringFetcher [(\"usage\", \"asdf\")])\n      In an equation for \u2018it\u2019:\n          it = usage (listStringFetcher [(\"usage\", \"asdf\")])\n</code></pre>\n\n<p>meaning with your current definition of <code>listStringFetcher</code> will never work with <code>liftIO</code> because its type is well, IO, not Maybe.</p>\n\n<p>Either you use another function, not <code>liftIO</code>, or change the definition of the other function</p>\n"}, {"comments": [{"owner": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "edited": false, "score": 1, "creation_date": 1565149330, "post_id": 57372515, "comment_id": 101256656, "body": "The reader seems like it could be what I want, but I guess I&#39;m doing something silly, because GHC doesn&#39;t seem to like <code>usage :: ReaderT IO Strings ()</code> - &quot;Expecting one or more argument to IO&quot; Edit: Looks like the arguments are just the wrong way around, <code>ReaderT String IO ()</code> works."}, {"owner": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "edited": false, "score": 0, "creation_date": 1565149919, "post_id": 57372515, "comment_id": 101256768, "body": "Yup, the reader monad transformer looks like it does what I want. I never read much about the reader monad, time to look in to it. Thanks!"}], "tags": [], "owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "is_accepted": true, "score": 0, "last_activity_date": 1565162483, "last_edit_date": 1592644375, "creation_date": 1565082171, "answer_id": 57372515, "question_id": 57370121, "link": "https://stackoverflow.com/questions/57370121/writing-a-flexible-string-fetcher/57372515#57372515", "title": "Writing a flexible &quot;string fetcher&quot;", "body": "<h1>Summary</h1>\n<p>This answer grew longer than I anticipated, so I think a summary is in order. For such a generic problem and rather vaguely expressed intent, the scope of solutions is rather broad. I encourage not complicating the code more than absolutely necessary, instead focusing on readability of the solution at hand. Using existing primitives like <code>Reader</code> also makes the code much less surprising for anyone else reading it. If that's still not enough, the solution at the end provides maximum flexibility in any scenario.</p>\n<hr />\n<h1>Details</h1>\n<p>You have to understand that your StringFetcher is only a computation that might provide the value you want, but you won't get that value without actually evaluating that computation.</p>\n<p>The problem you've hit directly is that depending on the type of StringFetcher used, the context for evaluation will depend on the value passed, meaning that, in principle, you can't use every StringFetcher in every situation. This is easier to visualize if you assume a partially-applied fetcher like so:</p>\n<pre><code>command :: forall m. StringFetcher m -&gt; m String\ncommand fetch = fetch &quot;command&quot;\n</code></pre>\n<p>You're not really doing any work here yet, you're just pushing the work further down the line. You're left with <code>m String</code> that requires <code>m</code> to be extracted. And you would need to make that <code>m</code> part of your signature then, somewhat like:</p>\n<pre><code>usage :: forall m. MonadIO m =&gt; StringFetcher m -&gt; m ()\nusage fetch = do\n    cmdStr &lt;- command fetch\n    liftIO . putStrLn $ cmdStr\n</code></pre>\n<hr />\n<p>An alternative would be to avoid passing the fetcher as an argument, and instead make it a part of the context. If you know how to use <code>ReaderT</code>, this should be obvious, but anyway, for anyone else...</p>\n<p>Assume our strings are stored in a <code>Map String String</code>. We can then leverage <code>Reader</code> to make a dependency on those strings explicit:</p>\n<pre><code>import qualified Data.Map as Map\ntype Strings = Map.Map String String \n\nusage :: Reader Strings ()\nusage = do\n    cmdStr &lt;- fromMaybe &quot;no description&quot; . Map.lookup &quot;command&quot; &lt;$&gt; ask\n    -- do whatever\n</code></pre>\n<p>Since we can't really do much &quot;whatever&quot; in this particular function, we need <code>ReaderT</code> to augment it a bit:</p>\n<pre><code>usage :: ReaderT Strings IO ()\nusage = do\n    cmdStr &lt;- fromMaybe &quot;no description&quot; . Map.lookup &quot;command&quot; &lt;$&gt; ask\n    liftIO . putStrLn $ cmdStr\n</code></pre>\n<p>Presto! We now have an explicit dependency to both the <code>Strings</code> and the IO, and the strings can be provided from outside on demand. Which is sort of where the magic happens:</p>\n<pre><code>main :: IO ()\nmain = do\n    let strings = Map.fromList [(&quot;command&quot;, &quot;this is a command&quot;)]\n    runReaderT usage strings\n</code></pre>\n<p>For your case, instead of <code>Reader Strings</code> you might simply want to create your own type with <code>askForCommand</code> that would shorten this code a bit and make it more explicit.</p>\n<p>The thing is, it's sort of silly to jump through all those hoops if you assume there's gonna be an IO variant of the fetcher somewhere. If that's the case, you might simply assume it always needs IO, and in the case of predefined string list it just won't touch it. This will massively simplify the implementation without any real loss.</p>\n<p>If you do <em>insist</em> on changing the actual type of the (focus here) code using the Fetcher basing on the Fetcher itself (e.g. <code>usage</code> using pure fetcher is pure, while <code>usage</code> using IO fetcher is IO<sup>1</sup>), you need a Transformer Monad Class:</p>\n<pre><code>usage :: forall m. =&gt; (MonadStringFetcher m, MonadIO) -&gt; m ()\n</code></pre>\n<p>This example is admittedly pretty silly if <code>usage</code> is using IO anyway (goes to what I said before as well), but in case it didn't, it wouldn't have to.</p>\n<p>Again, <code>MonadReader</code> class could serve as a good template for implementing it. This approach is very similar to &quot;effects&quot; (as seen e.g. in Idris) and allows you to directly build the context type from the expected capabilities. It's the most flexible way of writing such stuff, but also the most time-consuming and getting complex really quickly once start adding more stuff.</p>\n<hr />\n<p><sup>1</sup> This talks about the requirements for <code>usage</code> carried over from the Fetcher, and not its internals like in case of <code>putStrLn</code> I used. You might think about two different <code>IO</code>s here.</p>\n"}], "owner": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 128, "favorite_count": 0, "accepted_answer_id": 57372515, "answer_count": 2, "score": 2, "last_activity_date": 1565162483, "creation_date": 1565073076, "last_edit_date": 1565080684, "question_id": 57370121, "link": "https://stackoverflow.com/questions/57370121/writing-a-flexible-string-fetcher", "title": "Writing a flexible &quot;string fetcher&quot;", "body": "<p>I'm trying to write a module that allows for fetching of strings from an arbitrary source (e.g., an in memory list, or a file, database... whatever) so far I have:</p>\n\n<pre><code>type StringFetcher m = String -&gt; m String\n\nlistStringFetcher :: [(String, String)] -&gt; StringFetcher Maybe\nlistStringFetcher list key = fst &lt;$&gt; (listToMaybe $ filter ((key ==) . fst) list)\n\nfileStringFetcher :: FilePath -&gt; StringFetcher (MaybeT IO)\nfileStringFetcher fp key = undefined\n</code></pre>\n\n<p>Then I suppose when I come to use it in my application I could have functions like:</p>\n\n<pre><code>usage :: (MonadIO m) =&gt; StringFetcher m -&gt; m ()\nusage fetch = (fetch \"usage\") &gt;&gt;= (liftIO . putStrLn)\n</code></pre>\n\n<p>But then I kind of become stuck, when I try to run <code>usage (listStringFetcher [(\"usage\", \"asdf\")])</code> I get a \"No instance for (MonadIO Maybe) arising from a use of <code>usage</code>\" error. I'm not quite sure how I'm supposed to get access to the string \"inside\" of the <code>StringFetcher</code>. So I feel like this approach might not be viable. Is there a more reasonable way of doing something like this?</p>\n\n<p><strong>Edit</strong>: To help make it a bit clearer what I'm trying to achieve, here is an actual function from my application:</p>\n\n<pre><code>usage :: [Command] -&gt; ExceptT String IO String\nusage c =  pure . ununlines $ [\n  \"usage: xyz &lt;command&gt;\",\n  \"Commands:\",\n  unlines $ fmap (\\x -&gt;\"\\t\" ++ name (x :: Command) ++ \": \" ++ description (x :: Command)) c\n  ]\n</code></pre>\n\n<p>I don't want to have the strings <code>\"usage: xyz &lt;command&gt;\"</code> and <code>\"Commands:\"</code> hard coded like that. What I would like to do is add another parameter to the function, whose job is to get those strings using a key. But I would like it to be possible to interchange the \"String fetcher\" with different implementations (which may or may not involve IO).</p>\n"}, {"tags": ["haskell", "functional-programming"], "answers": [{"comments": [{"owner": {"reputation": 1706, "user_id": 1840613, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2dfd4d21060ccd9b972864e0f6cb8c4?s=128&d=identicon&r=PG", "display_name": "Jeremy List", "link": "https://stackoverflow.com/users/1840613/jeremy-list"}, "edited": false, "score": 0, "creation_date": 1567389029, "post_id": 57368730, "comment_id": 101938438, "body": "<code>return &quot;Hello&quot; () = &quot;Hello&quot;</code> because <code>instance Monad ((-&gt;) a) where { return = const; ... }</code>"}], "tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": true, "score": 4, "last_activity_date": 1565064785, "last_edit_date": 1565064785, "creation_date": 1565063919, "answer_id": 57368730, "question_id": 57368490, "link": "https://stackoverflow.com/questions/57368490/understanding-the-filterm-function/57368730#57368730", "title": "Understanding the filterM function", "body": "<p>That's because of the type of <code>runWriter</code></p>\n\n<pre><code>runWriter :: Writer w a -&gt; (a, w)\n</code></pre>\n\n<p>from Hoogle, it literally just unwrap a writer computation as a (result, output) pair. That's why you got the result in a pair.</p>\n\n<p>A little example, just to see how it works in other context:</p>\n\n<pre><code>runWriter (tell $ return \"Hello\" ())\n=&gt; ((),\"Hello\")\n</code></pre>\n"}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 110, "favorite_count": 0, "accepted_answer_id": 57368730, "answer_count": 1, "score": 3, "last_activity_date": 1565074427, "creation_date": 1565061690, "last_edit_date": 1565074427, "question_id": 57368490, "link": "https://stackoverflow.com/questions/57368490/understanding-the-filterm-function", "title": "Understanding the filterM function", "body": "<p>I am learning about the <code>filterM</code> function in the book \"Learn You a Haskell for Great Good!\" by Miran Lipovaca. For the following example:</p>\n\n<pre><code>keepSmall :: Int -&gt; Writer [String] Bool\nkeepSmall x\n   | x &lt; 4 = do\n       tell [\"Keeping \" ++ show x]\n       return True\n   | otherwise = do\n      tell [show x ++ \" is too large, throwing it away\"]\n      return False\n</code></pre>\n\n<p>The result obtained from using this function with <code>filterM</code> is the following:</p>\n\n<pre><code>&gt; runWriter $ filterM keepSmall [9,1,5,2,10,3]\n([1,2,3],[\"9 is too large, throwing it away\",\"Keeping 1\",\"5 is too large, \nthrowing it away\",\"Keeping 2\",\"10 is too large, throwing it away\",\"Keeping 3\"])\n</code></pre>\n\n<p>Regarding the type of the result of <code>filterM</code>, I know that <code>filterM</code> has the following type declaration:</p>\n\n<pre><code>filterM :: (Monad m) =&gt; (a -&gt; m Bool) -&gt; [a] -&gt; m [a]\n</code></pre>\n\n<p>Since the monad used for this example is <code>Writer [String]</code>, would the type of the list resulting from <code>filterM</code> be <code>Writer [String] [Int]</code>? If this is the case, is this why the result type is <code>([Int], [String])</code>, since <code>Writer w a</code> is equivalent to the tuple <code>(a,w)</code>?</p>\n"}, {"tags": ["haskell", "exit-code"], "answers": [{"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1565078254, "post_id": 57368249, "comment_id": 101227876, "body": "To support the &quot;boilerplate&quot; claim: Java has <code>void main(String[] args)</code> so that programmers do not have to add <code>return 0;</code> at the end most of the time. If you want some other return code, you call a library routine. C++ is even more peculiar since <code>int main()</code> has an implicit <code>return 0;</code> at the end, and this implicit return is added only to <code>main</code>."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 2, "creation_date": 1565108244, "post_id": 57368249, "comment_id": 101244936, "body": "As a bizarre aside... <code>main</code> is already not required to have the type <code>IO () </code>. It can be any type at all with <code>IO</code> as the top level constructor. Using the return value instead of throwing it away would only be a little awful. I think the bigger issue is that exit codes change meaning across operating systems, and one could imagine an OS that uses a totally different type for exit statuses. It&#39;s not a fundamentally portable part of a program."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 8, "last_activity_date": 1565059468, "creation_date": 1565059468, "answer_id": 57368249, "question_id": 57368053, "link": "https://stackoverflow.com/questions/57368053/why-is-mains-return-not-an-exit-code/57368249#57368249", "title": "Why is main&#39;s return not an exit code?", "body": "<p>It's not worth it. 99% of Haskell programs would just do <code>return 0</code>, that's pure boilerplate. It adds an extra very specific channel for errors, when exceptions (which <code>System.Exit</code> leverages) already do just as fine a job. How often do you actually need to import <code>System.Exit</code> for fine-grained return codes?</p>\n"}], "owner": {"reputation": 700, "user_id": 5499914, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/fz53h.png?s=128&g=1", "display_name": "Khuldraeseth na&#39;Barya", "link": "https://stackoverflow.com/users/5499914/khuldraeseth-nabarya"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 131, "favorite_count": 0, "accepted_answer_id": 57368249, "answer_count": 1, "score": 2, "last_activity_date": 1565059468, "creation_date": 1565057602, "question_id": 57368053, "link": "https://stackoverflow.com/questions/57368053/why-is-mains-return-not-an-exit-code", "title": "Why is main&#39;s return not an exit code?", "body": "<p>C and C++ allow us to return an exit code from <code>main</code>. Why does Haskell not do the same? Seems to me that it would be simple enough; just require <code>main :: IO Int</code> rather than <code>IO t</code>.</p>\n\n<p>I realize that the following will not behave as a C programmer might expect:</p>\n\n<pre><code>main :: IO Int\nmain = do\n    return 1                   -- Execution continues, thanks to (&gt;&gt;)\n    putStrLn \"Unreachable?\"\n    return 2                   -- Exit code 2?\n</code></pre>\n\n<p>This sort of exit code might be tricky to do right, but how tricky really? Seems nicer to me than having to import <code>System.Exit</code>.</p>\n"}, {"tags": ["haskell", "assembly"], "comments": [{"owner": {"reputation": 47412, "user_id": 3141234, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/78b45a835031f4ce03a6653b3262b5d3?s=128&d=identicon&r=PG", "display_name": "Alexander", "link": "https://stackoverflow.com/users/3141234/alexander"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1565036630, "post_id": 57365580, "comment_id": 101217508, "body": "@RobinZigmond Ah true. But suppose the statement was within the definition of <code>main</code>, to at least get it to compile. The rest of the question remains basically the same."}, {"owner": {"reputation": 59603, "user_id": 60281, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/29ebf39f3857b4fc4f51e93e7b9c4af4?s=128&d=identicon&r=PG", "display_name": "DevSolar", "link": "https://stackoverflow.com/users/60281/devsolar"}, "edited": false, "score": 1, "creation_date": 1565036688, "post_id": 57365580, "comment_id": 101217532, "body": "Be aware that a program is not required to <i>do</i> anything meaningful. An &quot;empty&quot; program that just returns to the caller would still qualify as valid implementation of <code>&#47;bin&#47;true</code>, for example. ;-)"}, {"owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "reply_to_user": {"reputation": 59603, "user_id": 60281, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/29ebf39f3857b4fc4f51e93e7b9c4af4?s=128&d=identicon&r=PG", "display_name": "DevSolar", "link": "https://stackoverflow.com/users/60281/devsolar"}, "edited": false, "score": 0, "creation_date": 1565036724, "post_id": 57365580, "comment_id": 101217539, "body": "@DevSolar that&#39;s a really interesting observation indeed"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 47412, "user_id": 3141234, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/78b45a835031f4ce03a6653b3262b5d3?s=128&d=identicon&r=PG", "display_name": "Alexander", "link": "https://stackoverflow.com/users/3141234/alexander"}, "edited": false, "score": 1, "creation_date": 1565036785, "post_id": 57365580, "comment_id": 101217558, "body": "@Alexander yes I see, <code>main = return ()</code> just &quot;creates heat&quot;, as you say in your answer, yet is a valid (if useless) &quot;program&quot;. Perhaps I took the question too literally."}, {"owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1565036855, "post_id": 57365580, "comment_id": 101217581, "body": "@RobinZigmond You have got my point, I will edit the question. Thanks"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 3, "creation_date": 1565036856, "post_id": 57365580, "comment_id": 101217583, "body": "Even <code>main = return ()</code> isn&#39;t really a program. It&#39;s a module which defines a name expected by the runtime, and is used by the linker to produce a program."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 9, "creation_date": 1565037630, "post_id": 57365580, "comment_id": 101217881, "body": "&quot;Computer program&quot; isn&#39;t precise technical jargon, it&#39;s just a normal word, so its definition is flexible based on context. I would say <code>main = return ()</code> is absolutely a computer program. Haskell programs aren&#39;t exactly &quot;sequences of instructions&quot; either, they&#39;re more like &quot;collections of definitions&quot;, but they are surely programs nonetheless. And all that &quot;you have to compile and link&quot; is technically true, but I would take it as assumed. You don&#39;t say &quot;I&#39;ll write a haskell module which I will pass to a linker to create a program to do that&quot;, you just say &quot;I&#39;ll write a program to do that&quot;."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1565037766, "post_id": 57365580, "comment_id": 101217929, "body": "I&#39;m going with the OP&#39;s own definition of a computer program here."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 4, "creation_date": 1565037910, "post_id": 57365580, "comment_id": 101217966, "body": "But it&#39;s from the wikipedia article &quot;Computer program&quot;, which is about the general concept rather than a precise mathematical definition.  My interpretation is that OP is taking things a bit too exactly and needs to relax about it, thus the point of my comment."}, {"owner": {"reputation": 2131, "user_id": 2343935, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/li569.png?s=128&g=1", "display_name": "grooveplex", "link": "https://stackoverflow.com/users/2343935/grooveplex"}, "reply_to_user": {"reputation": 59603, "user_id": 60281, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/29ebf39f3857b4fc4f51e93e7b9c4af4?s=128&d=identicon&r=PG", "display_name": "DevSolar", "link": "https://stackoverflow.com/users/60281/devsolar"}, "edited": false, "score": 2, "creation_date": 1565037964, "post_id": 57365580, "comment_id": 101217988, "body": "@DevSolar Speaking of which: <a href=\"http://trillian.mit.edu/~jc/humor/ATT_Copyright_true.html\" rel=\"nofollow noreferrer\">trillian.mit.edu/~jc/humor/ATT_Copyright_true.html</a>"}], "answers": [{"comments": [{"owner": {"reputation": 240669, "user_id": 224132, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/N4ivW.png?s=128&g=1", "display_name": "Peter Cordes", "link": "https://stackoverflow.com/users/224132/peter-cordes"}, "edited": false, "score": 1, "creation_date": 1565041318, "post_id": 57365638, "comment_id": 101219002, "body": "In normal OSes, programs must make at least 1 system call (e.g. <code>_exit</code> or <code>exit_group</code> on a POSIX OS like Linux).  Or be an infinite loop.  Or terminate by faulting, e.g. with a segmentation fault or illegal instruction.  But anyway, <code>sleep(2)</code> is a system call.  Without system calls, <code>sleep(1)</code> could only be implemented with a busy-wait and then faulting. (On modern x86, the CPU hardware provides a real-time clock that&#39;s readable in userspace with a machine instruction, <code>rdtsc</code>, if your program contains enough logic to do CPU detection and work out the scale factor for ref cycles -&gt; seconds)"}], "tags": [], "owner": {"reputation": 47412, "user_id": 3141234, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/78b45a835031f4ce03a6653b3262b5d3?s=128&d=identicon&r=PG", "display_name": "Alexander", "link": "https://stackoverflow.com/users/3141234/alexander"}, "is_accepted": true, "score": 7, "last_activity_date": 1565040588, "last_edit_date": 1565040588, "creation_date": 1565036562, "answer_id": 57365638, "question_id": 57365580, "link": "https://stackoverflow.com/questions/57365580/is-main-return-a-program/57365638#57365638", "title": "Is main = return () a program?", "body": "<p>Nothing about the definition of a program <em>requires</em> it to have explicit I/O. For example, consider <code>/bin/sleep</code>. It does literally nothing besides doing nothing for a fixed period of time. Ultimately, it does kind of have input/output, in that it \"causes\" (in a weak sense of the term) a change in the time.</p>\n\n<p>Another example might be a Python program like: </p>\n\n<pre><code>while True:\n    pass\n</code></pre>\n\n<p>All it does is create heat, literally, but there's no reason to think it's not a program.</p>\n\n<p>An unoptimized build of your program might actually contain the machine instructions to load an immediate value <code>5</code> into some register, followed by program termination. However, an optimizing compiler like Haskell's would deduce that the value is never used, and will gladly cull it entirely (and it's more than free to do so, since it won't have any observable effect. The machine instructions for program termination would still exist, though.</p>\n"}], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 154, "favorite_count": 0, "closed_date": 1565082788, "accepted_answer_id": 57365638, "answer_count": 1, "score": 2, "last_activity_date": 1565040588, "creation_date": 1565036279, "last_edit_date": 1565037339, "question_id": 57365580, "link": "https://stackoverflow.com/questions/57365580/is-main-return-a-program", "closed_reason": "Opinion-based", "title": "Is main = return () a program?", "body": "<p>I can't fit the definition of <a href=\"https://en.wikipedia.org/wiki/Computer_program\" rel=\"nofollow noreferrer\">Wikipedia</a> with Haskell code:</p>\n\n<pre><code>main = return ()\n</code></pre>\n\n<p>or</p>\n\n<pre><code>main = undefined\n</code></pre>\n\n<p>Above all, \"A computer program is a collection of instructions<a href=\"https://en.wikipedia.org/wiki/Computer_program\" rel=\"nofollow noreferrer\">1</a>\" where <a href=\"https://en.wikipedia.org/wiki/Instruction_set_architecture\" rel=\"nofollow noreferrer\">instructions</a> are defined like that.</p>\n\n<p>Taking those two definition, is <code>main = return ()</code> a computer program? Is the definition quoting to machine code?</p>\n\n<p>If it is... Why?\nIf it's not, what is considered a program in Haskell?</p>\n"}, {"tags": ["haskell", "type-parameter", "deriving"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1565036504, "post_id": 57365468, "comment_id": 101217453, "body": "Why do you think that <code>let a = Just (+)</code> should be an error? It&#39;s a value of type <code>Maybe (Integer -&gt; Integer -&gt; Integer)</code> -- what&#39;s wrong with that? You can&#39;t compare <code>a==b</code>, sure, but you also can&#39;t  compare <code>(+)==(-)</code>, yet I think you are OK with <code>(+)</code> existing. If <code>(+)</code> exists, why should <code>Just (+)</code> be forbidden?"}], "answers": [{"tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": true, "score": 12, "last_activity_date": 1565036520, "last_edit_date": 1565036520, "creation_date": 1565036196, "answer_id": 57365556, "question_id": 57365468, "link": "https://stackoverflow.com/questions/57365468/why-can-you-create-a-value-with-just/57365556#57365556", "title": "Why can you create a value with &quot;Just (+)&quot;?", "body": "<p>The instance of <code>Eq</code> for <code>Maybe</code> ends up looking like this (that is, <code>deriving (Eq)</code> essentially gets rewritten into this):</p>\n\n<pre><code>instance (Eq a) =&gt; Eq (Maybe a) where\n    ...\n</code></pre>\n\n<p>This can be read as <strong>if</strong> <code>a</code> is a member of <code>Eq</code>, <strong>then</strong> so is <code>Maybe a</code>.  So it's perfectly fine to make a <code>Maybe (Int -&gt; Int)</code> or what have you, it just won't be <code>Eq</code> if its argument isn't.</p>\n\n<p>A more operationally helpful way to think of this, more from the compiler's point of view: to solve a <code>Eq (Maybe a)</code> constraint, it suffices to solve the <code>Eq a</code> constraint.  So when we say</p>\n\n<pre><code>a == b\n</code></pre>\n\n<p>the compiler tries to solve <code>Eq (Maybe (Integer -&gt; Integer -&gt; Integer))</code>.  It uses the <code>Maybe</code> instance to reduce the question to <code>Eq (Integer -&gt; Integer -&gt; Integer)</code>, and then gives up when there is nothing else it can do.  That's why you see the error message complaining about no instance for <code>Eq (Integer -&gt; Integer -&gt; Integer)</code> instead of mentioning <code>Maybe</code>.</p>\n"}], "owner": {"reputation": 109, "user_id": 10023505, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/32faef3700576568a16dd77e4aa7e30c?s=128&d=identicon&r=PG", "display_name": "Daniel Simon", "link": "https://stackoverflow.com/users/10023505/daniel-simon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 108, "favorite_count": 0, "accepted_answer_id": 57365556, "answer_count": 1, "score": 4, "last_activity_date": 1565036520, "creation_date": 1565035802, "question_id": 57365468, "link": "https://stackoverflow.com/questions/57365468/why-can-you-create-a-value-with-just", "title": "Why can you create a value with &quot;Just (+)&quot;?", "body": "<p>Currently I'm learning Haskell and are stuck with the instantiation of types to typeclasses. I actually don't understand, why it's possible to create a value of the <code>Maybe a</code> type with <code>Just (+)</code>.</p>\n\n<p>The problem why this behaves strange to me is, that the Maybe type is defined as an instance of the <code>Eq</code> typeclass (see <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.Maybe.html#Maybe\" rel=\"nofollow noreferrer\">Haskell source</a>) and that if you derive an instance for a type, all the fields of the value / data constructors of that type  must be also an instance of the <code>Eq</code> typeclass (<a href=\"http://learnyouahaskell.com/making-our-own-types-and-typeclasses#derived-instances\" rel=\"nofollow noreferrer\">here</a>).</p>\n\n<p>With this knowledge in mind, the following code shouldn't be compilable or executable, because a function is not a part of the <code>Eq</code> typeclass:</p>\n\n<pre><code>let a = Just (+)\nlet b = Just (-)\n</code></pre>\n\n<p>But GHCi actually executes the code without throwing an error message. If you then try to compare these two values (which shouldn't also be possible) the interpreter comes up with the follwing error message:</p>\n\n<pre><code>a == b\n\n&lt;interactive&gt;:24:1: error:\n    * No instance for (Eq (Integer -&gt; Integer -&gt; Integer))\n        arising from a use of `=='\n        (maybe you haven't applied a function to enough arguments?)\n    * In the expression: a == b\n      In an equation for `it': it = a == b\n</code></pre>\n\n<p>This problem also occurs if you create your own <code>Maybe a</code> type.</p>\n"}, {"tags": ["haskell", "lambda", "pattern-matching", "higher-order-functions"], "comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 1, "creation_date": 1565035952, "post_id": 57365125, "comment_id": 101217267, "body": "I would use <code>length</code> just like you did here.   No idea why they spelled it <code>foldr (\\_ x -&gt; x+1) 0</code>  (at the very least it should be <code>foldl&#39;</code>!)."}], "answers": [{"comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 2, "creation_date": 1565035839, "post_id": 57365334, "comment_id": 101217217, "body": "For (1) I figure it&#39;s supposed to be <code>filter (&#47;= &#39;-&#39;)</code>, to account for negative numbers."}, {"owner": {"reputation": 139, "user_id": 11372625, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c26f5fb2bbbe8f1060006686c1d94fe5?s=128&d=identicon&r=PG&f=1", "display_name": "mushishi", "link": "https://stackoverflow.com/users/11372625/mushishi"}, "edited": false, "score": 0, "creation_date": 1565037867, "post_id": 57365334, "comment_id": 101217957, "body": "I. e., second argument of foldr == second argument of lambda; third argument of foldr == first argument of lambda?"}, {"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 1, "creation_date": 1565039809, "post_id": 57365334, "comment_id": 101218597, "body": "In a sense, you could say that. If you consider &quot;==&quot; to mean &quot;relates to&quot;"}], "tags": [], "owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "is_accepted": true, "score": 3, "last_activity_date": 1565040178, "last_edit_date": 1565040178, "creation_date": 1565035127, "answer_id": 57365334, "question_id": 57365125, "link": "https://stackoverflow.com/questions/57365125/haskell-naive-duplicate-filtering/57365334#57365334", "title": "Haskell naive duplicate filtering", "body": "<ol>\n<li><p><code>filter (/= '_')</code> is, I'm pretty sure, redundant. It filters out underscore characters, which shouldn't be present in the result of <code>show xs</code>, assuming <code>xs</code> is a number of some sort.</p></li>\n<li><p><code>foldr (\\ _ x -&gt; x + 1) 0</code> is equivalent to <code>length</code>. The way <code>foldr</code> works, it takes the second argument (which in your example is zero) as the starting point, then applies the first argument (in your example, lambda) to it over and over for every element of the input list. The element of the input list is passed into the lambda as first argument (denoted <code>_</code> in your example), and the running sum is passed as second argument (denoted <code>x</code>). Since the lambda just returns a \"plus one\" number on every pass, the result will be a number representing how many times the lambda was called - which is the length of the list.</p></li>\n</ol>\n"}, {"comments": [{"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "edited": false, "score": 1, "creation_date": 1565074227, "post_id": 57367386, "comment_id": 101225924, "body": "(2) isn&#39;t in point free style, and doesn&#39;t leave out the third argument of <code>foldr</code>. The third argument is <code>( removeDuplicates ( filter (&#47;= &#39;_&#39;) ( show xs )))</code>."}, {"owner": {"reputation": 119, "user_id": 11475860, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-uxVBrP25b5k/AAAAAAAAAAI/AAAAAAAACIM/ZhAG3ym2qGk/photo.jpg?sz=128", "display_name": "H&#229;kan", "link": "https://stackoverflow.com/users/11475860/h%c3%a5kan"}, "reply_to_user": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "edited": false, "score": 0, "creation_date": 1565085089, "post_id": 57367386, "comment_id": 101231447, "body": "By (2) I meant the expression foldr (\\ _ x -&gt; x + 1), which is point free when we name it, but I see what you mean."}], "tags": [], "owner": {"reputation": 119, "user_id": 11475860, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-uxVBrP25b5k/AAAAAAAAAAI/AAAAAAAACIM/ZhAG3ym2qGk/photo.jpg?sz=128", "display_name": "H&#229;kan", "link": "https://stackoverflow.com/users/11475860/h%c3%a5kan"}, "is_accepted": false, "score": 0, "last_activity_date": 1565050161, "creation_date": 1565050161, "answer_id": 57367386, "question_id": 57365125, "link": "https://stackoverflow.com/questions/57365125/haskell-naive-duplicate-filtering/57367386#57367386", "title": "Haskell naive duplicate filtering", "body": "<p><strong>First</strong>, note that (2) is written in so called <em>point free style</em>, leaving out the third argument of foldr. </p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Tacit_programming#Functional_programming\" rel=\"nofollow noreferrer\">https://en.wikipedia.org/wiki/Tacit_programming#Functional_programming</a> </p>\n\n<p>Also, the underscore in <code>\\_ x -&gt; x + 1</code> is a wild card, that simply marks the place of a parameter but that does not give it a name (a wild card works as a nameless parameter). </p>\n\n<p><strong>Second</strong>, (2) is a really nothing else than a simple recursive function that folds to the right. foldr is a compact way to write such recursive functions (in your case <code>length</code>): </p>\n\n<pre><code>foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a]\nfoldr f z []     = z \nfoldr f z (x:xs) = f x (foldr f z xs) \n</code></pre>\n\n<p>If we write </p>\n\n<pre><code>foldr f c ls\n</code></pre>\n\n<ul>\n<li>ls is the list over which our recursive function should recur (a is the type of the elements). </li>\n<li>c is the result in the <em>base case</em> (when the recursive recursive function is applied on an empty list). </li>\n<li>f computes the result in the <em>general case</em> (when the recursive function is applied on a non-empty list). f takes two arguments: \n\n<ol>\n<li>The head of the list and </li>\n<li>the result of the recursive call on the tail of the list. </li>\n</ol></li>\n</ul>\n\n<p>So, given f and c, foldr will go through the list ls recursively. </p>\n\n<p><strong>A first example</strong>\nThe Wikipedia page about point free style gives the example of how we can compute the sum of all elements in a list using foldr: </p>\n\n<p>Instead of writing </p>\n\n<pre><code>sum [] = 0\nsum (x:xs) = x + sum xs\n</code></pre>\n\n<p>we can write </p>\n\n<pre><code>sum = foldr (+) 0\n</code></pre>\n\n<p>The operator section (+) is a 2-argument function that adds its arguments. The expression</p>\n\n<pre><code>sum [1,2,3,4] \n</code></pre>\n\n<p>is computed as </p>\n\n<pre><code>1 + (2 + (3 + (4))) \n</code></pre>\n\n<p>(hence \"folding to the right\"). </p>\n\n<p><strong>Example: Multiplying all elements.</strong></p>\n\n<p>Instead of </p>\n\n<pre><code>prod [] = 1\nprod (x:xs) = x * prod xs\n</code></pre>\n\n<p>we can write</p>\n\n<pre><code>prod = foldr (*) 1\n</code></pre>\n\n<p><strong>Example: Remove all occurrences of a value from a list.</strong></p>\n\n<p>Instead of </p>\n\n<pre><code>remove _ [] = []\nremove v (x:xs) = if x==v then remove v xs else x:remove v xs\n</code></pre>\n\n<p>we can write </p>\n\n<pre><code>remove v = foldr (\\x r -&gt; if x==v then r else x:r) []\n</code></pre>\n\n<p><strong>Your case, (2)</strong></p>\n\n<p>We can now fully understand that </p>\n\n<pre><code>length = foldr (\\ _ x -&gt; x + 1) 0\n</code></pre>\n\n<p>in fact is the same as </p>\n\n<pre><code>length [] = 0\nlength (x:xs) = length xs + 1\n</code></pre>\n\n<p>that is, the length function. </p>\n\n<p>Hope this recursive view on foldr helped you understand the code. </p>\n"}], "owner": {"reputation": 139, "user_id": 11372625, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c26f5fb2bbbe8f1060006686c1d94fe5?s=128&d=identicon&r=PG&f=1", "display_name": "mushishi", "link": "https://stackoverflow.com/users/11372625/mushishi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 130, "favorite_count": 0, "accepted_answer_id": 57365334, "answer_count": 2, "score": 2, "last_activity_date": 1565050161, "creation_date": 1565034146, "last_edit_date": 1592644375, "question_id": 57365125, "link": "https://stackoverflow.com/questions/57365125/haskell-naive-duplicate-filtering", "title": "Haskell naive duplicate filtering", "body": "<p>I do not understand a sample solution for the following problem: given a list of elements, remove the duplicates. Then count the unique digits of a number. No explicit recursion may be used for either problem.</p>\n<p>My code:</p>\n<pre class=\"lang-hs prettyprint-override\"><code>\nremoveDuplicates :: Eq a =&gt; [a] -&gt; [a]\nremoveDuplicates = foldr (\\x ys -&gt; x:(filter (x /=) ys)) [] \n\ndifferentDigits :: Int -&gt; Int\ndifferentDigits xs = length (removeDuplicates (show xs))\n\n</code></pre>\n<p>The solution I am trying to understand has a different definition for <em>differentDigits</em>, namely</p>\n<pre class=\"lang-hs prettyprint-override\"><code>differentDigits xs = foldr (\\ _ x -&gt; x + 1) 0 ( removeDuplicates ( filter (/= '_') ( show xs )))\n</code></pre>\n<p>Both approaches work, but I cannot grasp the sample solution. To break my question down into subquestions,</p>\n<ol>\n<li>How does the first argument to filter work? I mean</li>\n</ol>\n<blockquote>\n<p>(/= '_')</p>\n</blockquote>\n<ol start=\"2\">\n<li>How does the lambda for foldr work? In</li>\n</ol>\n<blockquote>\n<p>foldr (\\ _ x -&gt; x + 1)</p>\n<pre><code>       ^\n</code></pre>\n</blockquote>\n<p>the variable x should still be the Char list? How does Haskell figure out that actually 0 should be incremented?</p>\n"}, {"tags": ["haskell", "haskell-stack"], "comments": [{"owner": {"reputation": 473, "user_id": 4640820, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Gztdp.jpg?s=128&g=1", "display_name": "Tom&#225;\u0161 Posp&#237;\u0161ek", "link": "https://stackoverflow.com/users/4640820/tom%c3%a1%c5%a1-posp%c3%ad%c5%a1ek"}, "edited": false, "score": 0, "creation_date": 1565024570, "post_id": 57363010, "comment_id": 101212629, "body": "1. you should include the output as displayed in the terminal. 2. you can use <code>strace</code> but that will not show you stuff on the Haskel level, but only on the syscall level. 3. you should change you title so people know your problem concerns Haskell"}, {"owner": {"reputation": 2966, "user_id": 3014199, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/72332b0ac6ee78bc829c378c6c747e0e?s=128&d=identicon&r=PG", "display_name": "peer", "link": "https://stackoverflow.com/users/3014199/peer"}, "reply_to_user": {"reputation": 473, "user_id": 4640820, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Gztdp.jpg?s=128&g=1", "display_name": "Tom&#225;\u0161 Posp&#237;\u0161ek", "link": "https://stackoverflow.com/users/4640820/tom%c3%a1%c5%a1-posp%c3%ad%c5%a1ek"}, "edited": false, "score": 0, "creation_date": 1565025027, "post_id": 57363010, "comment_id": 101212841, "body": "1. I&#39;ve edited my question accordingly 2. thanks, I&#39;ll look into that 3. Isn&#39;t that what the tags are for?"}, {"owner": {"reputation": 473, "user_id": 4640820, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Gztdp.jpg?s=128&g=1", "display_name": "Tom&#225;\u0161 Posp&#237;\u0161ek", "link": "https://stackoverflow.com/users/4640820/tom%c3%a1%c5%a1-posp%c3%ad%c5%a1ek"}, "edited": false, "score": 0, "creation_date": 1565025360, "post_id": 57363010, "comment_id": 101212989, "body": "3. you are right, of course, however if an observer understands the question at a glance maybe your chances will be higher that he might give you an answer instead of skipping the question. But again, you are right."}, {"owner": {"reputation": 473, "user_id": 4640820, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Gztdp.jpg?s=128&g=1", "display_name": "Tom&#225;\u0161 Posp&#237;\u0161ek", "link": "https://stackoverflow.com/users/4640820/tom%c3%a1%c5%a1-posp%c3%ad%c5%a1ek"}, "edited": false, "score": 0, "creation_date": 1565025474, "post_id": 57363010, "comment_id": 101213050, "body": "Also, maybe you want to include the code of <code>myscript.hs</code>? You should reduce it as much as possible to only include the few lines that trigger the &quot;kill&quot;."}, {"owner": {"reputation": 100768, "user_id": 1899640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/47374ccb28e4b0d2454b64f7b975bc66?s=128&d=identicon&r=PG", "display_name": "that other guy", "link": "https://stackoverflow.com/users/1899640/that-other-guy"}, "edited": false, "score": 1, "creation_date": 1565026956, "post_id": 57363010, "comment_id": 101213587, "body": "To determine if this is due to the OOM killer, check <code>dmesg</code>"}], "owner": {"reputation": 2966, "user_id": 3014199, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/72332b0ac6ee78bc829c378c6c747e0e?s=128&d=identicon&r=PG", "display_name": "peer", "link": "https://stackoverflow.com/users/3014199/peer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 94, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1565024816, "creation_date": 1565024309, "last_edit_date": 1565024816, "question_id": 57363010, "link": "https://stackoverflow.com/questions/57363010/how-to-debug-a-stack-process-being-killed", "title": "How to debug a stack process being &#39;killed&#39;?", "body": "<p>I'm compiling a haskell file with</p>\n\n<pre><code>$ stack ghc --resolver lts-12.5 --package raw-strings-qq myscript.hs\n</code></pre>\n\n<p>and execute it with </p>\n\n<pre><code>$ ./myscript\nKilled\n$\n</code></pre>\n\n<p>on my Ubuntu machine. I get <code>Killed</code> as an error message and nothing else.\nHow can I debug this? Does this mean the process takes up to much memory? Are there other possible sources of error?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1565020804, "post_id": 57362032, "comment_id": 101210956, "body": "&quot;some of them will modify it&quot; how?"}, {"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "reply_to_user": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1565024360, "post_id": 57362032, "comment_id": 101212539, "body": "actually few threads will mutate the map: a thread should check if the element exists in the map, then to make some work and to add it to the map. And if such element already exists, the work should not be done. So critical section will guarantee that race conditions wont happen. And critical requirement is good performance. But I am not sure about performance of STM"}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1565024459, "post_id": 57362032, "comment_id": 101212580, "body": "&quot;will mutate the map&quot; HOW????"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1565024764, "post_id": 57362032, "comment_id": 101212716, "body": "@n.m. The previous comment seems to me to answer the &quot;how&quot; quite clearly. Basically he&#39;s sharing a memoization map, and the &quot;how will it be mutated&quot; is just &quot;some workers will insert a key if it ain&#39;t already available&quot;."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1565024819, "post_id": 57362032, "comment_id": 101212745, "body": "Are you sure you need a locked thing? Perhaps the usual pure lazy memoization trie trick is good enough without any additional locking."}, {"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "edited": false, "score": 0, "creation_date": 1565024866, "post_id": 57362032, "comment_id": 101212768, "body": "yes, with an insertion of new element. But I am interested in good performance."}, {"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1565024940, "post_id": 57362032, "comment_id": 101212800, "body": "@DanielWagner I am afraid of the case when one will check for existence, then second, both will find that the key is missing, so both will do the work and will insert the item under the same key, so one of them will be lost."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1565024973, "post_id": 57362032, "comment_id": 101212811, "body": "@DanielWagner, <code>atomicModifyIORef&#39;</code> is another option when the <code>Map</code> doesn&#39;t need to be kept in sync with other shared state."}, {"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "edited": false, "score": 0, "creation_date": 1565025084, "post_id": 57362032, "comment_id": 101212867, "body": "I do use already <code>atomicModifyIORef</code> but it&#39;s not enough to save me from the described situation: both will find that key is missing and one of them will rewrite already inserted by another one. It&#39;s a classical test-and-set"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1565025360, "post_id": 57362032, "comment_id": 101212988, "body": "@Paul-AG With the usual pure lazy memoization trie trick, there is a few-cycles window where two threads both trying to use the same key may do extra work. It&#39;s a very small window (about as long as it takes to check a single tag word in memory and then immediately write to it) -- especially considering it must be hit by two threads both wanting the same key. I recommend trying it first, because it is conceptually very simple and requires almost no code on the part of the consumers, and waiting for performance problems before even bothering to check how often you hit this few-cycle window."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1565025422, "post_id": 57362032, "comment_id": 101213024, "body": "@Paul-AG, then you&#39;re using it wrong. <code>atomicModifyIORef mref $ \\m -&gt; case lookup k m of Nothing -&gt; (insert k v m, Nothing); r -&gt; (m, r)</code>."}, {"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1565025523, "post_id": 57362032, "comment_id": 101213070, "body": "@DanielWagner excuse me, Daniel, would you like to point out some link to read more about it, because I am afraid, it seems such approach is unknown to me"}, {"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1565025661, "post_id": 57362032, "comment_id": 101213119, "body": "@dfeuer Hm, this makes sense! I forget about second item in the returning tuple"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1565025699, "post_id": 57362032, "comment_id": 101213132, "body": "@Paul-AG e.g. <a href=\"http://hackage.haskell.org/package/MemoTrie-0.6.9/docs/Data-MemoTrie.html\" rel=\"nofollow noreferrer\">this package</a>, or also browse the results from <a href=\"http://hackage.haskell.org/packages/search?terms=memoization+trie\" rel=\"nofollow noreferrer\">this search</a>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1565025826, "post_id": 57362032, "comment_id": 101213171, "body": "The only time that won&#39;t work is if you need <code>IO</code> to fill in the missing key, on which case your best bet is probably to use an <code>MVar</code> and <code>modifyMVar</code>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1565025971, "post_id": 57362032, "comment_id": 101213223, "body": "Er, I meant <code>atomicModifyIORef&#39;</code>, which is much less likely to leak memory than the lazier version."}, {"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1565026002, "post_id": 57362032, "comment_id": 101213236, "body": "@dfeuer I need IO to start a process and to save its handler in as the value in the map, but it should not be a problem bcz I can check if <code>atomicModifyIORef</code> was successful and to update the value (it&#39;s some record with handle in one of it&#39;s fields)."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1565026037, "post_id": 57362032, "comment_id": 101213249, "body": "The main limitation of a lazy trie is that there&#39;s no way to clean up keys you don&#39;t need anymore or limit your structure&#39;s size."}, {"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1565026122, "post_id": 57362032, "comment_id": 101213287, "body": "@dfeuer it&#39;s important: I need to remove completed processes and &quot;stale&quot; ones. Your solution looks clean and simple from my POV: it&#39;s atomic test-and-set, what I need"}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1565028859, "post_id": 57362032, "comment_id": 101214308, "body": "@DanielWagner No it doesn&#39;t explain anything. &quot;will insert a key&quot; This will return a <b>new</b> Map. To actually mutate a variable you need something special that supports mutation. What? IORef? MVar? STM? <b>HOW</b> do you mutate? The answer very much depends on that."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1565029725, "post_id": 57362032, "comment_id": 101214670, "body": "@n.m. But the question is exactly how to mutate in the sense you are now explaining. So of course the question doesn&#39;t say how to mutate!"}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1565030021, "post_id": 57362032, "comment_id": 101214787, "body": "@DanielWagner I thougt the question is &quot;What are the critical sections in Haskell&quot; and not how to mutate, but I am known to be wrong occasionally."}], "answers": [{"comments": [{"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "edited": false, "score": 0, "creation_date": 1565023516, "post_id": 57362333, "comment_id": 101212164, "body": "Am I right, that if 2 threads try to access shared object, STM will rollback transaction which means I will have 2 <code>Map</code> objects in the memory: for rollback and for attempt to modify?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "edited": false, "score": 1, "creation_date": 1565024629, "post_id": 57362333, "comment_id": 101212658, "body": "@Paul-AG Yes, that is correct. Indeed, since we&#39;re talking about ephemeral situations here anyway, there are briefly almost certainly more than two: the original, one thread&#39;s modified version, and another thread&#39;s modified version. Of course all the usual laziness and sharing considerations apply; also almost certainly these three objects take significantly less than three times as much memory as any single one of them takes."}, {"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "edited": false, "score": 0, "creation_date": 1565025213, "post_id": 57362333, "comment_id": 101212928, "body": "STM looks fine but I am not sure about performance: I will have a lot of requests, so.. may be simple locking mechanism will be faster"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1565026662, "post_id": 57362333, "comment_id": 101213492, "body": "Nothing prevents you to have locks on top of stm. You are free to define any synchronization strategy you want."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 3, "creation_date": 1565031289, "post_id": 57362333, "comment_id": 101215324, "body": "@Li-yaoXia sure, but STM only starts to look good when you have multiple shared variables that need to be kept in sync. Otherwise you&#39;re paying a performance penalty for nothing. If it&#39;s just a cache, then an <code>IORef</code> (or perhaps <code>MVar</code>) seems like a better choice."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": false, "score": 6, "last_activity_date": 1565021334, "creation_date": 1565021334, "answer_id": 57362333, "question_id": 57362032, "link": "https://stackoverflow.com/questions/57362032/how-to-create-critical-section-in-haskell/57362333#57362333", "title": "How to create critical section in Haskell?", "body": "<p>The goto library for concurrency in Haskell is <a href=\"https://hackage.haskell.org/package/stm\" rel=\"noreferrer\">stm</a>. Instead of locking, operations on shared memory (your shared <code>Map</code>) can be organized in atomic transactions.</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1565030722, "post_id": 57364420, "comment_id": 101215068, "body": "It&#39;s usually better to use <code>modifyMVar</code> rather than taking and putting manually. It takes care of the (somewhat tricky) exception safety issues."}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1565031293, "post_id": 57364420, "comment_id": 101215326, "body": "@dfeuer The docs say &quot; This function is only atomic if there are no other producers for this MVar&quot;. I&#39;m a bit confused by that. What does it mean exactly?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1565031738, "post_id": 57364420, "comment_id": 101215522, "body": "It means that a process could take the <code>MVar</code> (using <code>modifyMVar</code>) and some other process could put the <code>MVar</code> before the first process has a chance to do so. You need to impose some sort of discipline. Most commonly, that means always taking the <code>MVar</code> before putting it (e.g., using <code>modifyMVar</code>)."}], "tags": [], "owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "is_accepted": false, "score": 4, "last_activity_date": 1565030651, "creation_date": 1565030651, "answer_id": 57364420, "question_id": 57362032, "link": "https://stackoverflow.com/questions/57362032/how-to-create-critical-section-in-haskell/57364420#57364420", "title": "How to create critical section in Haskell?", "body": "<p>An <code>MVar</code> is a mutable variable that is its own critical section.</p>\n\n<pre><code>takeMVar :: MVar a -&gt; IO a \n-- Return the contents of the MVar. If the MVar is currently empty, takeMVar will\n-- wait until it is full. After a takeMVar, the MVar is left empty.\n\nputMVar :: MVar a -&gt; a -&gt; IO ()\n-- Put a value into an MVar. If the MVar is currently full, putMVar will\n-- wait until it becomes empty.\n</code></pre>\n\n<p>The takeMVar\u2014update\u2014putMVar of <code>MVar YourMapType</code> is basically all you need, unless there is a specific requirement that a map should be somehow available while it's being updated. In this case, you can use <code>MVar ()</code> as a mutex to control access to whatever you want.</p>\n"}], "owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 2, "answer_count": 2, "score": 2, "last_activity_date": 1565030651, "creation_date": 1565020130, "question_id": 57362032, "link": "https://stackoverflow.com/questions/57362032/how-to-create-critical-section-in-haskell", "title": "How to create critical section in Haskell?", "body": "<p>I have multiple \"threads\", they are running with <code>forkIO</code>. And I need to deal with mutual access, typical critical section/lock because they will share common <code>Map</code>: some of them will modify it, another ones - will read it. What are the critical sections in Haskell for thread creating with <code>forkIO</code>: API, modules, libraries? </p>\n\n<p>EDIT: and all this works under <code>Scotty</code></p>\n"}, {"tags": ["ruby", "haskell", "scheme", "continuations", "continuation-passing"], "comments": [{"owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 1, "creation_date": 1565020672, "post_id": 57361469, "comment_id": 101210893, "body": "<code>call&#47;cc(f) = f(cc)</code>?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 1, "creation_date": 1565021277, "post_id": 57361469, "comment_id": 101211155, "body": "@rampion That is intuitive, but wrong (AFAICS). It would cause <code>g(call&#47;cc(f)) = g(f(cc)) = call&#47;cc(g . f)</code>, where the last <code>.</code> denotes function composition, and this is clearly not what we want. The point is that, intuitively, <code>f</code> should receive the continuation &quot;without <code>f</code> itself&quot;, when <code>f(cc)</code> includes <code>f</code> in the continuation."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 3, "creation_date": 1565024636, "post_id": 57361469, "comment_id": 101212664, "body": "Haskell <i>doesn&#39;t</i> natively support continuations. Delimited continuations can be implemented in the language (e.g., the <code>ContT r</code> monad transformer and various CPSish things like <code>Codensity</code>), but there is no support whatsoever for undelimited continuations like Scheme has."}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 2, "last_activity_date": 1565026252, "last_edit_date": 1565026252, "creation_date": 1565021135, "answer_id": 57362290, "question_id": 57361469, "link": "https://stackoverflow.com/questions/57361469/can-the-cps-styled-call-cc-be-written-in-terms-of-a-hypothetical-non-cps-style/57362290#57362290", "title": "Can the CPS-styled `call/cc` be written in terms of a hypothetical non-CPS-styled `cc&#39;`?", "body": "<p>Here's my attempt (warning: I am an inexperienced schemer). Let <code>get-cc</code> be the function returning the current continuation.</p>\n\n<pre class=\"lang-lisp prettyprint-override\"><code>(define (get-cc)\n  (call-with-current-continuation (lambda (k) k)))\n</code></pre>\n\n<p>Then, we can define:</p>\n\n<pre class=\"lang-lisp prettyprint-override\"><code>(define (callCC f)\n  (let ((w (get-cc)))\n    (if (pair? w)\n      (car w)\n      (f (lambda (x) (w (cons x '())))))))\n</code></pre>\n\n<p>The first time this function is called, <code>w</code> is bound to the current continuation. So, <code>(pair? w)</code> is false, and we call <code>f</code> with continuation <code>(lambda (x) (w (cons x '()))</code>.</p>\n\n<p>When <code>w</code> is called though <code>f</code> (with argument <code>(cons x '())</code>), then the body of the <code>let</code> is entered again, where <code>w</code> is now bound to <code>(cons x '())</code>.\nNow, <code>(pair? w)</code> is true, and we can return <code>(car w)</code> which is <code>x</code>.</p>\n\n<p>The pair wrapper is used so as to distinguish what is \"the continuation for <code>f</code>\" from \"the result <em>from</em> <code>f</code>\", so to speak.</p>\n\n<p>A quick test shows this to be working, but I'm not completely confident of its correctness.</p>\n\n<p>You probably noticed that <code>w</code> is bound to values of different types. That is why I resorted to an untyped language like Scheme instead of Haskell.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user10082400"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 123, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1565026252, "creation_date": 1565017981, "last_edit_date": 1565026014, "question_id": 57361469, "link": "https://stackoverflow.com/questions/57361469/can-the-cps-styled-call-cc-be-written-in-terms-of-a-hypothetical-non-cps-style", "title": "Can the CPS-styled `call/cc` be written in terms of a hypothetical non-CPS-styled `cc&#39;`?", "body": "<p>In a language which supports continuation, e.g. Scheme, Ruby, and Haskell, suppose there is a function <code>cc'</code> which takes no argument and return the current continuation, so that the caller that obtains a continuation by calling <code>cc'</code> can then invoke the continuation anywhere and as often as it likes. </p>\n\n<p><code>cc'</code> can be written in terms of the CPS-styled <code>call/cc</code>, by passing an identity function as an argument to <code>call/cc</code>.</p>\n\n<p>Conversely, can the CPS-styled <code>call/cc</code> be written in terms of the non-CPS-styled <code>cc'</code>?</p>\n"}, {"tags": ["haskell", "scheme", "continuation-passing"], "comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1565021887, "post_id": 57359295, "comment_id": 101211432, "body": "<code>add&#39; a b explicitReturn = explicitReturn (a + b)</code> makes it clear that <code>(a + b)</code> is explicitly returned. :) --- the thing about CPS is that it is assumed that no function ever returns in a &quot;normal&quot;, i.e. usual sense. the &quot;normal&quot; return simply does not exist in CPS. if it did it&#39;d guarantee stack overflow. all the tail calls are tail optimized and there are no non-tail calls."}], "answers": [{"comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1565017462, "post_id": 57359997, "comment_id": 101209408, "body": "<code>sum</code> would really be a pair of <code>add&amp;</code> calls. The key point is that given a parse tree for that expression, there are a number of topological orderings of the tree which correspond to correct evaluations of the expression, and CPS makes explicit which ordering is used."}, {"owner": {"reputation": 44043, "user_id": 1565698, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/7dace33805b9dcdec5aa63308daf88dc?s=128&d=identicon&r=PG", "display_name": "Sylwester", "link": "https://stackoverflow.com/users/1565698/sylwester"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1565018535, "post_id": 57359997, "comment_id": 101209936, "body": "@chepner It depends on <code>+</code> being able to take more than 2 arguments or not. In Scheme <code>(+ a b c)</code> does not get split up in CPS but the underlying CPU operations would of course be 2 add instructions."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1565018809, "post_id": 57359997, "comment_id": 101210061, "body": "Given your original expression, then, it seems you silently rewrote <code>(+ (+ a b) c)</code> as <code>(+ a b c)</code>."}, {"owner": {"reputation": 44043, "user_id": 1565698, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/7dace33805b9dcdec5aa63308daf88dc?s=128&d=identicon&r=PG", "display_name": "Sylwester", "link": "https://stackoverflow.com/users/1565698/sylwester"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1565019707, "post_id": 57359997, "comment_id": 101210474, "body": "@chepner <code>a + b + c</code> = &gt; <code>(+ a b c)</code> in Scheme. I agree I probably would have done <code>(+ (+ a b) c)</code> if I were to make the parser and the language was Algol based, but that is just laziness :p"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1565019856, "post_id": 57359997, "comment_id": 101210547, "body": "Fair enough :) I don&#39;t know Scheme as well as I used to (which was never very well to begin with), and I was focusing more on Haskell since there was no Scheme code in the question itself."}, {"owner": {"reputation": 44043, "user_id": 1565698, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/7dace33805b9dcdec5aa63308daf88dc?s=128&d=identicon&r=PG", "display_name": "Sylwester", "link": "https://stackoverflow.com/users/1565698/sylwester"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1565020167, "post_id": 57359997, "comment_id": 101210690, "body": "@chepner Note that you don&#39;t need CPS to implement a language. You need it if you want to provide <code>call&#47;cc</code>. Many modern Scheme implementations avoids CPS if they can. eg. Ikarus. It is not the same as AST since in Scheme the code is the AST. Imagine you do CPS, then lambda lifting (adding free variables as arguments to the continuation) then the expression in my answer wouldn&#39;t require any closures ad can be implemented with a while loop in a language without functions."}], "tags": [], "owner": {"reputation": 44043, "user_id": 1565698, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/7dace33805b9dcdec5aa63308daf88dc?s=128&d=identicon&r=PG", "display_name": "Sylwester", "link": "https://stackoverflow.com/users/1565698/sylwester"}, "is_accepted": false, "score": 1, "last_activity_date": 1565074354, "last_edit_date": 1565074354, "creation_date": 1565012935, "answer_id": 57359997, "question_id": 57359295, "link": "https://stackoverflow.com/questions/57359295/how-does-a-function-written-in-cps-makes-a-number-of-things-explicit/57359997#57359997", "title": "How does a function written in CPS makes a number of things explicit?", "body": "<p>Imagine this expression:</p>\n\n\n\n<pre class=\"lang-js prettyprint-override\"><code>3 * fun(a) + 4 * fun(b) + fun(c) * 5\n</code></pre>\n\n<p>We know the multiplications happen before the addition, but we don't know the order <code>fun</code> is called with <code>a</code>, <code>b</code>, and <code>c</code>. If you convert it to CPS the order becomes explicit. Eg.:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>fun&amp;(b, bv =&gt; \n    mul&amp;(4, bv, bv4 =&gt; \n       fun&amp;(c, cv =&gt; \n           mul&amp;(cv, 5, cv5 =&gt; \n               fun&amp;(a, av =&gt; \n                   mul&amp;(3, av, av3 =&gt; \n                       sum&amp;(av3, bv4, bv5, replPrint)))))));\n</code></pre>\n\n<p>It's obvious we have chosen to calculate <code>fun(b)</code> first since that is what is happening in the CPS version. In Common Lisp the order chosen is incorrect since it requires strict left to right. Thus in CL CPS isn't more explicit.</p>\n\n<p>Haskell is lazy so evaluation order is even crazier since while you know in an eager language that in <code>funa(funb(4))</code> <code>funb</code> is called and produced a value before calling <code>funa</code> this is not necessarily true for Haskell. <code>funa</code> might get called and <code>funb(4)</code> might not depending on the logic inside <code>funa</code>. Arguments get evaluated at need so if one isn't used it is never evaluated. While I haven't thought about it it should be possible to make CPS also for Haskell but it needs to be generated in a totally different way than I'm doing, which works for eager languages. </p>\n\n<p><strong>About the return</strong></p>\n\n<p>Notice that I have <code>replPrint</code> as the last continuation. The idea os that that is the consumer and the whole thing really never uses any return value. It's the value passed to continuation which is the returned value.</p>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 1, "last_activity_date": 1565018720, "creation_date": 1565018720, "answer_id": 57361648, "question_id": 57359295, "link": "https://stackoverflow.com/questions/57359295/how-does-a-function-written-in-cps-makes-a-number-of-things-explicit/57361648#57361648", "title": "How does a function written in CPS makes a number of things explicit?", "body": "<p>Using the expression in Sylwester's answer, the parser would generate an AST that looks something like this (with nodes numbered arbitrarily left to right, top to bottom, and the numbers noted in parentheses for later reference):</p>\n\n<pre><code>                   +\n                  (1)\n           /               \\\n          +                 *\n         (2)               (3)\n       /     \\           /     \\\n      *       *        fun      5\n     (4)     (5)       (6)     (7)\n     / \\     / \\        |\n    3 fun   4  fun      c\n   (8) (9) (10) (11)    (12)\n       |        |\n       a        b\n      (13)     (14)\n</code></pre>\n\n<p>(This assumes a left-associative <code>+</code> operator; one could also imagine equally valid trees for a right-associative <code>+</code>, or even a fully-associative operator yielding a tree with a single <code>+</code> node and three children.)</p>\n\n<p>To evaluate an expression, you simply evaluate each node from the bottom up. Certain orderings are required by the tree itself: <code>13</code> has to come before <code>9</code>; <code>4</code> and <code>5</code> must both be evaluated before <code>2</code>, etc. However, for other pairs of nodes, the order is irrelevant. <code>6</code> can be evaluated either before or after <code>9</code>, for example.</p>\n\n<p>We can <em>impose</em> an ordering, though, by computing a topological sort of the tree, which is simply a list of nodes such that each child node always precede its parent in the ordering. There are multiple valid topological sorts for this tree, any of which will yield a correct value for the final expression. Some example orders are</p>\n\n<ol>\n<li><p>13, 14, 12, 9, 11, 6, 8, 10, 7, 4, 5, 3, 2, 1</p>\n\n<p>This evaluates all function arguments first, then the function calls,\n then the multiplications, and finally the additions (all in left-to-right order)</p></li>\n<li><p>8, 13, 9, 10, 14, 11, 12, 6, 7, 4, 5, 2, 3, 1</p>\n\n<p>This evaluates additive terms from left to right, so we complete a multiplication before evaluating the operands of the next multiplication.</p></li>\n<li><p>8, 13, 9, 10, 11, 14, 4, 5, 2, 12, 7, 6, 3, 1</p>\n\n<p>This is like the second example, but also computes the first addition before tackling\n the operand for the second addition.</p></li>\n</ol>\n\n<hr>\n\n<p>The punchline: CPS style simply makes explicit which ordering is used.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user10082400"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 97, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1565074354, "creation_date": 1565010560, "last_edit_date": 1565012233, "question_id": 57359295, "link": "https://stackoverflow.com/questions/57359295/how-does-a-function-written-in-cps-makes-a-number-of-things-explicit", "title": "How does a function written in CPS makes a number of things explicit?", "body": "<p><a href=\"https://en.wikipedia.org/wiki/Continuation-passing_style\" rel=\"nofollow noreferrer\">https://en.wikipedia.org/wiki/Continuation-passing_style</a> says</p>\n\n<blockquote>\n  <p>A function written in <strong>continuation-passing style</strong> takes an extra\n  argument: an explicit \"continuation\", i.e. a function of one argument.\n  When the CPS function has computed its result value, it \"returns\" it\n  by calling the continuation function with this value as the argument.\n  That means that when invoking a CPS function, the calling function is\n  required to supply a procedure to be invoked with the subroutine's\n  \"return\" value. Expressing code in this form <strong>makes a number of things\n  explicit</strong> which are implicit in direct style. These include: <strong>procedure\n  returns</strong>, which become apparent as calls to a continuation;\n  <strong>intermediate values</strong>, which are all given names; <strong>order of argument\n  evaluation</strong>, which is made explicit; and <strong>tail calls</strong>, which simply call\n  a procedure with the same continuation, unmodified, that was passed to\n  the caller.</p>\n</blockquote>\n\n<p>How shall I understand that a function written in CPS \"<strong>makes a number of things explicit</strong>\", which include \"<strong>procedure returns</strong>\", \"<strong>intermediate values</strong>\", \"<strong>order of argument evaluation</strong>\", and \"<strong>tail calls</strong>\"?</p>\n\n<p>For example, it seems to me that a function written in CPS makes the return value of the function implicit instead of explicit to the caller of the function.</p>\n\n<p>For example in Haskell, a function not in CPS is</p>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>add :: Float -&gt; Float -&gt; Float\nadd a b = a + b\n</code></pre>\n\n<p>while it is written in CPS as:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>add' :: Float -&gt; Float -&gt; (Float -&gt; a) -&gt; a\nadd' a b cont = cont (a + b)\n</code></pre>\n\n<p>Examples in Scheme are similar.</p>\n"}, {"tags": ["list", "haskell", "range", "ghci"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1565003772, "post_id": 57357454, "comment_id": 101201771, "body": "Because it each time checks if that value has reached the threshold already. In case of <code>(-20)</code> it has."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 2, "last_activity_date": 1565005852, "last_edit_date": 1565005852, "creation_date": 1565004426, "answer_id": 57357648, "question_id": 57357454, "link": "https://stackoverflow.com/questions/57357454/strange-result-of-list-generation-in-haskell/57357648#57357648", "title": "Strange result of List generation in Haskell", "body": "<p><strong>In short</strong>: This is <em>intended</em> behavior.</p>\n\n<p>The <code>[x, y..z]</code> expression is syntactical sugar for <code>enumFromThenTo x y z</code> with <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:enumFromThenTo\" rel=\"nofollow noreferrer\"><strong><code>enumFromThenTo :: a -&gt; a -&gt; a -&gt; [a]</code></strong></a>.</p>\n\n<p>For <code>Integer</code>s it is implemented like:</p>\n\n<blockquote><pre><code>instance  Enum Integer  where\n    # ...\n    enumFromThenTo x y lim = enumDeltaToInteger x (y-x) lim</code></pre></blockquote>\n\n<p>So it will call <code>enumDeltaToInteger 2 0 (-20)</code>. The <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.Enum.html#enumDeltaToInteger\" rel=\"nofollow noreferrer\"><code>enumDeltaToInteger</code> is implemented with [src]</a>:</p>\n\n<blockquote><pre><code>enumDeltaToInteger :: Integer -&gt; Integer -&gt; Integer -&gt; [Integer]\nenumDeltaToInteger x delta lim\n  | <b>delta &gt;= 0 = up_list x delta lim</b>\n  | otherwise  = dn_list x delta lim</code></pre></blockquote>\n\n<p>Soo it is considered to be an <code>up_list</code>, and the <code>up_list</code> will increase until it has reached a value larger than <code>lim</code>:</p>\n\n<blockquote><pre><code>up_list :: Integer -&gt; Integer -&gt; Integer -&gt; [Integer]\nup_list x0 delta lim = go (x0 :: Integer)\n                    where\n                        go x | <b>x &gt; lim   = []</b>\n                             | otherwise = x : go (x+delta)</code></pre></blockquote>\n\n<p>This is how it has been described in the <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch6.html#x13-1310006.3.4\" rel=\"nofollow noreferrer\">Haskell'10 report on the <code>Enum</code> class</a>:</p>\n\n<blockquote>\n  <p>The sequence <strong><code>enumFromThenTo e1 e2 e3</code> is the list <code>[e1,e1 + i,e1 + 2i,\u2026e3]</code></strong>, where the increment, <code>i</code>, is <code>e2 \u2212 e1</code>. <strong>If the increment is positive or zero, the list terminates when the next element would be greater than <code>e3</code></strong>; the <strong>list is empty if <code>e1 &gt; e3</code></strong>. If the increment is negative, the list terminates when the next element would be less than <code>e3</code>; the list is empty if <code>e1 &lt; e3</code>.</p>\n</blockquote>\n\n<p>So the document says that if the \"step\" is zero or more, and <code>e1 &gt; e3</code>, then the result is the empty list.</p>\n\n<p>It is indeed a \"tricky\" case however. I personally agree that using a special case for <code>0</code> as \"step\" would make sense (although I'm not per se saying this is more favorable than using the <code>up_list</code> implementation). It is however how things are defined.</p>\n"}], "owner": {"reputation": 2352, "user_id": 4518180, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/HQeHB.png?s=128&g=1", "display_name": "mkUltra", "link": "https://stackoverflow.com/users/4518180/mkultra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 84, "favorite_count": 0, "accepted_answer_id": 57357648, "answer_count": 1, "score": 3, "last_activity_date": 1565005852, "creation_date": 1565003715, "question_id": 57357454, "link": "https://stackoverflow.com/questions/57357454/strange-result-of-list-generation-in-haskell", "title": "Strange result of List generation in Haskell", "body": "<p>From <a href=\"https://stackoverflow.com/questions/7958181/ranges-in-haskell-ghci\">Ranges in Haskell (GHCi)</a> it's pretty much clear why the <code>[2, 2..20]</code> generate infinity list.</p>\n\n<p>The next value is the same, that why this code produces infinity list.</p>\n\n<p>And looks like it doesn't care about limit because of <code>[2, 2..2]</code> generate also infinity list.</p>\n\n<p><strong>Question:</strong></p>\n\n<p>Why the following code <code>[2, 2..(-20)]</code> generate empty list instead?</p>\n"}, {"tags": ["haskell", "typeclass"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1565010923, "post_id": 57357334, "comment_id": 101205639, "body": "Aw come on... why do so many people downvote lately without giving a reason? IMO this is perhaps not a <i>particularly useful</i> question (why do you want that?), but it&#39;s certainly well-specified and it does show enough research effort to be ok."}, {"owner": {"reputation": 247, "user_id": 1499033, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/pc2IU.jpg?s=128&g=1", "display_name": "Sergey Kolbasov", "link": "https://stackoverflow.com/users/1499033/sergey-kolbasov"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1565013648, "post_id": 57357334, "comment_id": 101207270, "body": "&#175;\\_(\u30c4)_/&#175; Might be related to mention of Scala? :)  Answering on &quot;why do I want that&quot; is to unify possible operations over my monad under a single operator <code>&gt;&gt;&gt;</code>, otherwise I&#39;d have to introduce them per-case and it might be quite a lot of <i>noise</i> in the final API look-and-feel."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1565014296, "post_id": 57357334, "comment_id": 101207680, "body": "Well, a good rule of thumb for typeclasses is: if you can&#39;t write anything useful that&#39;s <i>polymorphic</i> over the class, then it&#39;s probably not a good idea to use a class in the first place. In your case, I don&#39;t see what the <code>&gt;&gt;&gt;</code> really gains over using <code>&lt;$</code>, <code>&lt;$&gt;</code> and <code>&gt;&gt;=</code> directly."}, {"owner": {"reputation": 247, "user_id": 1499033, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/pc2IU.jpg?s=128&g=1", "display_name": "Sergey Kolbasov", "link": "https://stackoverflow.com/users/1499033/sergey-kolbasov"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1565014980, "post_id": 57357334, "comment_id": 101208046, "body": "Okay, example. I have following monad: <code>data Foo m a = Foo { underlying: m (Maybe a) }</code>. As far as <code>a</code> is some primitive, you&#39;re totally correct and usual operators are fine.  Now, let&#39;s imagine <code>a :: HList &#39;[_p0, _p1]</code>. Instead of providing function <code>_p0 -&gt; _p1 -&gt; out</code>, users are &quot;doomed&quot; to deal with <code>HList &#39;[_p0, _p1] -&gt; out</code> instead, which <i>might</i> be not the best experience."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1565015311, "post_id": 57357334, "comment_id": 101208246, "body": "I&#39;m not really convinced yet, but maybe this would in fact be a good use case. Why don&#39;t you elaborate a bit more and add it to the question?"}], "answers": [{"comments": [{"owner": {"reputation": 247, "user_id": 1499033, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/pc2IU.jpg?s=128&g=1", "display_name": "Sergey Kolbasov", "link": "https://stackoverflow.com/users/1499033/sergey-kolbasov"}, "edited": false, "score": 0, "creation_date": 1565038285, "post_id": 57363732, "comment_id": 101218116, "body": "Yeah, it seems that the only sane way is to provide only limited support for some subcases. Thanks"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 1, "last_activity_date": 1565027438, "creation_date": 1565027438, "answer_id": 57363732, "question_id": 57357334, "link": "https://stackoverflow.com/questions/57357334/complex-ad-hoc-polymorphism-in-haskell/57363732#57363732", "title": "Complex ad-hoc polymorphism in Haskell", "body": "<p>If the goal is to abstract over <code>HList</code>s, just do that. Don't muddle things by introducing a possible monad wrapper at every argument, it turns out to be <a href=\"https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/monadic.pdf\" rel=\"nofollow noreferrer\">quite complicated indeed</a>. Instead do the wrapping and lifting at the function level with all the usual tools. So:</p>\n\n<pre><code>{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE GADTs #-}\n{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE FunctionalDependencies #-}\n{-# LANGUAGE UndecidableInstances #-}\n\ndata HList a where\n    HNil :: HList '[]\n    (:::) :: x -&gt; HList xs -&gt; HList (x : xs)\n\nclass ApplyArgs args i o | args i -&gt; o, args o -&gt; i where\n    apply :: i -&gt; HList args -&gt; o\n\ninstance i ~ o =&gt; ApplyArgs '[] i o where\n    apply i _ = i\n\ninstance (x ~ y, ApplyArgs xs i o) =&gt; ApplyArgs (x:xs) (y -&gt; i) o where\n    apply f (x ::: xs) = apply (f x) xs\n</code></pre>\n"}], "owner": {"reputation": 247, "user_id": 1499033, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/pc2IU.jpg?s=128&g=1", "display_name": "Sergey Kolbasov", "link": "https://stackoverflow.com/users/1499033/sergey-kolbasov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 123, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1565027438, "creation_date": 1565003231, "last_edit_date": 1565018825, "question_id": 57357334, "link": "https://stackoverflow.com/questions/57357334/complex-ad-hoc-polymorphism-in-haskell", "title": "Complex ad-hoc polymorphism in Haskell", "body": "<p>I'm trying to use type class to simulate ad-hoc polymorphism and solve generic cases involving higher kinded types and so far can't figure out the correct solution.</p>\n\n<p>What I'm looking for is to define something similar to:</p>\n\n<pre><code>{-# LANGUAGE AllowAmbiguousTypes    #-}\n{-# LANGUAGE DataKinds              #-}\n{-# LANGUAGE FlexibleInstances      #-}\n{-# LANGUAGE FunctionalDependencies #-}\n{-# LANGUAGE MultiParamTypeClasses  #-}\n{-# LANGUAGE ScopedTypeVariables    #-}\n{-# LANGUAGE TypeFamilies           #-}\n{-# LANGUAGE UndecidableInstances   #-}\n\ninfixl 0 &gt;&gt;&gt;\n\n-- | Type class that allows applying a value of type @fn@ to some @m a@\nclass Apply m a fn b | a fn -&gt; b where\n  (&gt;&gt;&gt;) :: m a -&gt; fn -&gt; m b\n\n-- to later use it in following manner:\n\n(Just False) &gt;&gt;&gt; True -- same as True &lt;$ ma\n(Just True) &gt;&gt;&gt; id -- same as id &lt;$&gt; ma\nNothing &gt;&gt;&gt; pure Bool -- same as Nothing &gt;&gt;= const $ pure Bool\n(Just \"foo\") &gt;&gt;&gt; (\\a -&gt; return a) -- same as (Just \"foo\") &gt;&gt;= (\\a -&gt; return a)\n</code></pre>\n\n<p>So far I've tried multiple options, none of them working.\nJust a straight forward solution obviously fails:</p>\n\n<pre><code>instance (Functor m) =&gt; Apply m a b b where\n  (&gt;&gt;&gt;) m b = b &lt;$ m\n\ninstance (Monad m) =&gt; Apply m a (m b) b where\n  (&gt;&gt;&gt;) m mb = m &gt;&gt;= const mb\n\ninstance (Functor m) =&gt; Apply m a (a -&gt; b) b where\n  (&gt;&gt;&gt;) m fn = fmap fn m\n\ninstance (Monad m, a' ~ a) =&gt; Apply m a (a' -&gt; m b) b where\n  (&gt;&gt;&gt;) m fn = m &gt;&gt;= fn\n\n</code></pre>\n\n<p>As there are tons of fundep conflicts (all of them) related to the first instance that gladly covers all the cases (duh).</p>\n\n<p>I couldn't work out also a proper type family approach:</p>\n\n<pre><code>class Apply' (fnType :: FnType) m a fn b | a fn -&gt; b where\n  (&gt;&gt;&gt;) :: m a -&gt; fn -&gt; m b\n\ninstance (Functor m) =&gt; Apply' Const m a b b where\n  (&gt;&gt;&gt;) m b = b &lt;$ m\n\ninstance (Monad m) =&gt; Apply' ConstM m a (m b) b where\n  (&gt;&gt;&gt;) m mb = m &gt;&gt;= const mb\n\ninstance (Functor m, a ~ a') =&gt; Apply' Fn m a (a' -&gt; b) b where\n  (&gt;&gt;&gt;) m mb = m &gt;&gt;= const mb\n\ninstance (Functor m, a ~ a') =&gt; Apply' Fn m a (a' -&gt; m b) b where\n  (&gt;&gt;&gt;) m fn = m &gt;&gt;= fn\n\n\ndata FnType = Const | ConstM | Fn | FnM\n\ntype family ApplyT a where\n  ApplyT (m a) = ConstM\n  ApplyT (a -&gt; m b) = FnM\n  ApplyT (a -&gt; b) = Fn\n  ApplyT _ = Const\n</code></pre>\n\n<p>Here I have almost the same issue, where the first instance conflicts with all of them through fundep.</p>\n\n<p>The end result I want to achieve is somewhat similar to the infamous <a href=\"http://spray.io/blog/2012-12-13-the-magnet-pattern/\" rel=\"nofollow noreferrer\">magnet pattern</a> sometimes used in Scala.</p>\n\n<p><strong>Update:</strong></p>\n\n<p>To clarify the need for such type class even further, here is a somewhat simple example:</p>\n\n<pre><code>-- | Monad to operate on\ndata Endpoint m a = Endpoint { runEndpoint :: Maybe (m a) } deriving (Functor, Applicative, Monad)\n</code></pre>\n\n<p>So far there is no huge need to have mentioned operator <code>&gt;&gt;&gt;</code> in place, as users might use the standard set of <code>&lt;$ | &lt;$&gt; | &gt;&gt;=</code> instead. (Actually, not sure about <code>&gt;&gt;=</code> as there is no way to define <code>Endpoint</code> in terms of <code>Monad</code>)</p>\n\n<p>Now to make it a bit more complex:</p>\n\n<pre><code>infixr 6 :::\n\n-- | Let's introduce HList GADT\ndata HList xs where\n  HNil :: HList '[]\n  (:::) :: a -&gt; HList as -&gt; HList (a ': as)\n\n-- Endpoint where a ~ HList\nendpoint :: Endpoint IO (HList '[Bool, Int]) = pure $ True ::: 5 ::: HNil \n\n-- Some random function\nfn :: Bool -&gt; Int -&gt; String\nfn b i = show b ++ show i\n\nfn &lt;$&gt; endpoint -- doesn't work, as fn is a function of a -&gt; b -&gt; c, not HList -&gt; c\n</code></pre>\n\n<p>Also, imagine that the function <code>fn</code> might be also defined with <code>m String</code> as a result. That's why I'm looking for a way to hide this complexity away from the API user.</p>\n\n<p>Worth mentioning, I already have a type class to convert <code>a -&gt; b -&gt; c</code> into <code>HList '[a, b] -&gt; c</code></p>\n"}, {"tags": ["haskell", "syntax", "functional-programming", "monads", "record"], "answers": [{"comments": [{"owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "edited": false, "score": 0, "creation_date": 1565002903, "post_id": 57356707, "comment_id": 101201318, "body": "For your example, runWriter (Writer p) = p, am I correct in saying that Writer p is a monad? So essentially runWriter (Writer p) = p will take out whatever is inside the monad? Also how can you tell that Writer w a is a pair type? Any insights are appreciated."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "edited": false, "score": 1, "creation_date": 1565004799, "post_id": 57356707, "comment_id": 101202297, "body": "@ceno980 <code>Writer p</code> is a value, so it can not be a monad, which is a type-level thing. We might say that <code>Writer p</code> is a &quot;monadic value&quot;, i.e. a value of type <code>m a</code> for some monad <code>m</code> and type <code>a</code>. It is correct that <code>runWriter</code> extracts what&#39;s under the <code>Writer</code> wrapper. <code>Writer w a</code> is essentially a pair since it is defined in that way: if we put <code>newtype T = T { runT :: A }</code> then types <code>T</code> and <code>A</code> are essentially the same -- they differ only by their names. You can convert <code>x :: A</code> into <code>T x :: T</code>, and back <code>y :: T</code> into <code>runT y :: A</code> without losing information."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "edited": false, "score": 1, "creation_date": 1565005192, "post_id": 57356707, "comment_id": 101202497, "body": "if you write it as <code>newtype Writer w a = MkWriter (a,w)</code> there&#39;s no confusing the data (<code>MkWriter p</code>) with the type (<code>Writer w a</code>). @ceno980"}, {"owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "edited": false, "score": 0, "creation_date": 1565006576, "post_id": 57356707, "comment_id": 101203208, "body": "@chi For this line: data T = MkT { f :: Int, g :: String }. Basically, the data type T has a value constructor MkT with two fields f and g which are of types Int and String respectively. And in order to create a field with value Int/String you have to pass the data type itself (T) to the functions f/g to get the value? Is this correct?"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "edited": false, "score": 0, "creation_date": 1565007355, "post_id": 57356707, "comment_id": 101203663, "body": "@ceno980 not quite. we can construct <code>T</code> values like <code>x = MkT 1 &quot;a&quot;</code>; and we can handle those values with <code>f x == 1</code> and <code>g x == &quot;b&quot;</code>. <i>But</i>, we can also use the <i>record syntax</i> to create the values, like <code>x = MkT { g=&quot;a&quot;, f=1 }</code>. then there&#39;s the record <i>update</i> syntax <code>y = x {f=2}</code>."}, {"owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "edited": false, "score": 0, "creation_date": 1565007688, "post_id": 57356707, "comment_id": 101203889, "body": "I know that f returns an Int and g returns a String but how did you get the values 1 and &quot;b&quot; specifically in the example: f x == 1 and g x == &quot;b&quot;."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "edited": false, "score": 0, "creation_date": 1565016591, "post_id": 57356707, "comment_id": 101208945, "body": "@ceno980 They should have been <code>f x == 1</code> and <code>g x == &quot;a&quot;</code>, taken from the arguments of <code>MkT</code> in <code>x = MkT 1 &quot;a&quot;</code>. Essentially, <code>f</code> here takes the first argument, and <code>g</code> the second one."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1565022298, "post_id": 57356707, "comment_id": 101211584, "body": "<code>g x == &quot;b&quot;</code> was intended to return <code>False</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1565022399, "post_id": 57356707, "comment_id": 101211626, "body": "@WillNess I see, but it wasn&#39;t that obvious :-)"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1565022488, "post_id": 57356707, "comment_id": 101211659, "body": "yeah, perhaps I made it more confusing than need be."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 5, "last_activity_date": 1565004888, "last_edit_date": 1565004888, "creation_date": 1565000813, "answer_id": 57356707, "question_id": 57356609, "link": "https://stackoverflow.com/questions/57356609/understanding-the-writer-type/57356707#57356707", "title": "Understanding the writer type", "body": "<blockquote>\n  <p>Am I correct in saying that by passing <code>w</code> and <code>a</code> to the Writer type constructor, you get a Writer monad in return,</p>\n</blockquote>\n\n<p>No, <code>Writer w</code> is the monad (assuming <code>Monoid w</code>). <code>Writer w a</code> is a type.</p>\n\n<blockquote>\n  <p>with this monad only having one function which is the <code>runWriter</code> function?</p>\n</blockquote>\n\n<p>No, the type <code>Writer w a</code> is, essentially, a pair type <code>(a,w)</code>. There are no functions inside.</p>\n\n<p>You can pretend that the type is defined in the following way</p>\n\n<pre><code>newtype Writer w a = Writer (a,w)\n</code></pre>\n\n<p>and that there is a separate convenience \"unwrapping\" function</p>\n\n<pre><code>runWriter :: Writer w a -&gt; (a,w)\nrunWriter (Writer p) = p\n</code></pre>\n\n<p>You can think of these functions as being mutual inverses:</p>\n\n<pre><code>Writer :: (a,w) -&gt; Writer w a        -- \"wrapper\"\nrunWriter :: Writer w a -&gt; (a,w)     -- \"unwrapper\"\n</code></pre>\n\n<p>Using the <em>record syntax</em> in <code>data</code> declarations indeed defines functions taking an implicit argument (in addition to the data type itself).\nAny type</p>\n\n<pre><code>data T = MkT { f :: Int, g :: String }\n</code></pre>\n\n<p>defines the data type <code>T</code>, data constructor <code>MkT</code>, and functions <code>f</code>, <code>g</code> having an implicit <code>T</code> argument,</p>\n\n<pre><code>f :: T -&gt; Int               -- f (MkT i _) = i\ng :: T -&gt; String            -- g (MkT _ s) = s\n</code></pre>\n\n<p>Record syntax with <code>newtype</code>s works in the same way, except that there must be exactly <em>one</em> field (named <code>runWriter</code>, in your example).</p>\n"}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 125, "favorite_count": 0, "accepted_answer_id": 57356707, "answer_count": 1, "score": 3, "last_activity_date": 1565008265, "creation_date": 1565000416, "last_edit_date": 1565008265, "question_id": 57356609, "link": "https://stackoverflow.com/questions/57356609/understanding-the-writer-type", "title": "Understanding the writer type", "body": "<p>I am learning about monads in the book 'Learn You a Haskell for Great Good!' by Miran Lipovaca. I am reading about how the Control.Monad.Writer module exports the <code>Writer w a</code> type along with its Monad instance and some useful functions for dealing with values of this type.</p>\n\n<p>For the following code:</p>\n\n<pre><code>newtype Writer w a = Writer { runWriter :: (a,w) }\n</code></pre>\n\n<p>I know that the <code>a</code> type parameter represents the type of some value, and the <code>w</code> type parameter represents the type of the attached monoid value. Am I correct in saying that by passing <code>w</code> and <code>a</code> to the <code>Writer</code> type constructor, you get a Writer monad in return, with this monad only having one function which is the <code>runWriter</code> function?</p>\n\n<p>In the book it says that the <code>runWriter</code> function takes a tuple that's wrapped in a <code>Writer</code> newtype and unwraps it, returning a simple tuple. However the type declaration of <code>runWriter</code> is <code>runWriter :: (a,w)</code>, it doesn't take any parameters as input. How does <code>runWriter</code> take a tuple that's wrapped in a newtype and return just a simple tuple?</p>\n"}, {"tags": ["list", "haskell", "monads", "function-composition", "kleisli"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 4, "creation_date": 1564981008, "post_id": 57352316, "comment_id": 101192468, "body": "<code>f</code> and <code>g</code> are functions. <code>f x</code> and <code>g x</code> are lists (assuming there is a variable <code>x</code> in scope; otherwise they are errors)."}], "answers": [{"tags": [], "owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "is_accepted": true, "score": 6, "last_activity_date": 1564983541, "creation_date": 1564983541, "answer_id": 57352707, "question_id": 57352316, "link": "https://stackoverflow.com/questions/57352316/understanding-monadic-function-composition/57352707#57352707", "title": "Understanding monadic function composition", "body": "<pre><code>f x = [x, -x]\n</code></pre>\n\n<p>This is ordinary function definition syntax. We are <em>defining</em> a new function <code>f</code>, by writing down what it would produce when applied to a hypothetical value <code>x</code>.</p>\n\n<p><code>let</code> (whether as a statement or a <code>let ... in ...</code> expression) just introduces a block where you can make definitions, much like <code>where</code>. The definitions themselves use the same syntax as global ones do.</p>\n\n<p>If you know how to define functions by writing e.g. <code>plusOne n = n + 1</code> in a file, then this syntax is exactly the same (if you don't know how to do that, then I'd suggest reading through some introductory tutorials on fundamental Haskell syntax before you try to understand monadic function composition).</p>\n\n<p>So after those definitions <code>f</code> and <code>g</code> are functions. <code>f x</code> and <code>g x</code> don't really make sense, since you don't have an <code>x</code> in scope to apply them to.</p>\n\n<p>If you did have such a value in scope, then <code>f x</code> would be an expression that evaluates to a list, which involves <em>calling</em> the function <code>f</code>. It still wouldn't be true to say that <code>f x</code> or <code>g x</code> are functions.</p>\n\n<p>So now it should be clear that <code>let h = f &lt;=&lt; g</code> is defining a new value <code>h</code> by applying the <code>&lt;=&lt;</code> operator to <code>f</code> and <code>g</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 4, "last_activity_date": 1564990337, "last_edit_date": 1564990337, "creation_date": 1564985885, "answer_id": 57353104, "question_id": 57352316, "link": "https://stackoverflow.com/questions/57352316/understanding-monadic-function-composition/57353104#57353104", "title": "Understanding monadic function composition", "body": "<p>Nothing's better for gaining a feeling of understanding, like working through the definitions by hand on a sheet of paper.</p>\n\n<p><code>f x = [x, -x]</code> can also be written <code>f = (\\ x -&gt; [x, -x])</code>. Thus </p>\n\n<pre><code>  h 3 \n= {- by def of h -}\n  (f &lt;=&lt; g) 3 \n= {- by def of (&lt;=&lt;) -}\n  (\\x -&gt; g                   x &gt;&gt;= f               ) 3\n= {- by defs of f and g -}\n  (\\x -&gt; (\\ x -&gt; [x*3, x*2]) x &gt;&gt;= (\\ x -&gt; [x, -x])) 3\n= {- by substitution -}\n         (\\ x -&gt; [x*3, x*2]) 3 &gt;&gt;= (\\ x -&gt; [x, -x])\n= {- by substitution -}\n                 [3*3, \n                  3*2]         &gt;&gt;= (\\ x -&gt; [x, -x])\n= {- by definition of (&gt;&gt;=) for [] -}\n  concat [       (3*3)         &amp;   (\\ x -&gt; [x, -x])  -- x &amp; f == f x\n         ,       (3*2)         &amp;   (\\ x -&gt; [x, -x]) \n         ]\n= {- by definition of concat -}\n                 (3*3)         &amp;   (\\ x -&gt; [x, -x])\n         ++      (3*2)         &amp;   (\\ x -&gt; [x, -x]) \n= \n  [9, -9, 6, -6]\n</code></pre>\n\n<p>(<em>edit</em>) For a picture, and some more discussion of these <em>Kleisli arrows</em> and their composability, see <a href=\"https://stackoverflow.com/a/11249714/849891\">this older answer of mine</a>.</p>\n"}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 394, "favorite_count": 0, "accepted_answer_id": 57352707, "answer_count": 2, "score": 1, "last_activity_date": 1564990337, "creation_date": 1564980403, "last_edit_date": 1564989775, "question_id": 57352316, "link": "https://stackoverflow.com/questions/57352316/understanding-monadic-function-composition", "title": "Understanding monadic function composition", "body": "<p>I am learning about monads from the book 'Learn You a Haskell for Great Good!' by Miran Lipovaca. I am trying to understand the associativity law for monads. Essentially, the law states that when you have a chain of monadic function applications with <code>&gt;&gt;=</code>, it shouldn't matter how they're nested.</p>\n\n<p>The following code enables one to pass the result of a function of type <code>a -&gt; m b</code> to a function of type <code>b -&gt; m c</code>:</p>\n\n<pre><code>(&lt;=&lt;) :: (Monad m) =&gt; (b -&gt; m c) -&gt; (a -&gt; m b) -&gt; (a -&gt; m c)\nf &lt;=&lt; g = (\\x -&gt; g x &gt;&gt;= f)\n</code></pre>\n\n<p>However, for the example below:</p>\n\n<pre><code>ghci&gt; let f x = [x, -x]\nghci&gt; let g x = [x*3, x*2]\nghci&gt; let h = f &lt;=&lt; g\nghci&gt; h 3\n[9, -9, 6, -6]\n</code></pre>\n\n<p>Are <code>f x</code> and <code>g x</code> both functions? It seems to be that they are lists with different values of x and not functions. How does the line <code>let h = f &lt;=&lt; g</code> work in the above code? <code>f</code> and <code>g</code> have to be functions since they are used with <code>&lt;=&lt;</code> but I am not sure what they are.</p>\n"}, {"tags": ["list", "haskell", "functional-programming", "monads"], "comments": [{"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 5, "creation_date": 1564968292, "post_id": 57351188, "comment_id": 101190449, "body": "The body of the function after <code>(c&#39;, r&#39;) &lt;- ...</code> would be executed multiple times, once for each element of the list. All resulting values will be then concatenated to produce another list. This is how the <code>&gt;&gt;=</code> operator (the heart of monad) is implemented for lists."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1564988628, "post_id": 57351188, "comment_id": 101194622, "body": "In the list monad, <code>&lt;-</code> works as in list comprehensions: <code>[(c&#39;, r&#39;) | (c&#39;, r&#39;) &lt;- [(c+2, r-1),  .....], (c&#39; `elem` [1..8] &amp;&amp; r&#39; `elem` [1..8])]</code>. Do-notation and list comprehensions are essentially different syntaxes for the same thing, in the list monad."}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 62, "favorite_count": 0, "closed_date": 1564990709, "answer_count": 0, "score": 2, "last_activity_date": 1564990691, "creation_date": 1564966685, "last_edit_date": 1564990691, "question_id": 57351188, "link": "https://stackoverflow.com/questions/57351188/understanding-the-list-monad", "closed_reason": "Duplicate", "title": "Understanding the list monad", "body": "<p>I am learning about monads in the book 'Learn You a Haskell for Great Good!' by Miran Lipovaca. The following example tries to find all the valid positions a knight in chess can reach from their current position:</p>\n\n<pre><code>moveKnight :: KnightPos -&gt; [KnightPos]\nmoveKnight (c,r) = do \n  (c', r') &lt;- [(c+2, r-1), (c+2, r+1), (c-2, r-1), (c-2, r+1), \n               (c+1, r-2), (c+1,r+2), (c-1,r-2), (c-1,r+2)\n              ]\n  guard (c' `elem` [1..8] &amp;&amp; r' `elem` [1..8])\n  return (c', r')\n</code></pre>\n\n<p>I am having trouble understanding how the code works. I know that for the following with Maybe:</p>\n\n<pre><code>a &lt;- Just 3\n</code></pre>\n\n<p>The value in <code>a</code> would be 3. But since a list has multiple elements, how does <code>&lt;-</code> work for lists? What would be the value in <code>(c', r')</code>? </p>\n"}, {"tags": ["list", "haskell", "list-comprehension", "monads", "guard-statement"], "answers": [{"tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": true, "score": 6, "last_activity_date": 1564966972, "creation_date": 1564966972, "answer_id": 57351208, "question_id": 57351063, "link": "https://stackoverflow.com/questions/57351063/understanding-the-guard-function-and-list-comprehension/57351208#57351208", "title": "Understanding the guard function and list comprehension", "body": "<p>In the list <code>Monad</code> instance:</p>\n\n<ul>\n<li><p><code>&gt;&gt;=</code> is <code>concatMap</code> with the arguments flipped</p></li>\n<li><p><code>guard condition</code> is equivalent to <code>if condition then [()] else []</code></p></li>\n</ul>\n\n<p>And in any <code>Monad</code> instance, <code>a &gt;&gt; b</code> = <code>a &gt;&gt;= \\_ -&gt; b</code>, so in the list instance this is equivalent to <code>concatMap (\\_ -&gt; b) a</code>.</p>\n\n<p>Therefore your code desugars to this:</p>\n\n<pre><code>concatMap\n  (\\x -&gt; concatMap\n    (\\_ -&gt; [x])\n    (if '7' `elem` show x then [()] else []))\n  [1..50]\n</code></pre>\n\n<p>So the outer <code>concatMap</code> produces as an intermediate value a list of 50 elements, each being a list, which is a singleton list of the input value if its string representation contains a digit <code>7</code>, or else the empty list:</p>\n\n<pre><code>[[], [], [], [], [], [], [7], [], [], [], [], [], [], [], [], [], [17], \u2026]\n</code></pre>\n\n<p>Which is then concatenated to produce the final result <code>[7, 17, 27, 37, 47]</code>.</p>\n\n<blockquote>\n  <p>What is passed as x in the lambda function, is it 1?</p>\n</blockquote>\n\n<p>It\u2019s <em>each</em> element of the input list, <code>1</code> through <code>50</code>.</p>\n\n<p>The inner <code>concatMap</code> produces <code>[x]</code> if the condition is true and <code>[]</code> if the condition is false, because <code>guard</code> produces a list of one element (the dummy <code>()</code>) if the condition is true and an empty list if it\u2019s false\u2014this may be easier to see if you rephrase it as an equivalent:</p>\n\n<pre><code>map (\\_ -&gt; x) (if '7' `elem` show x then [()] else [])\n-- or\nif '7' `elem` show x then [x] else []\n</code></pre>\n"}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 157, "favorite_count": 0, "accepted_answer_id": 57351208, "answer_count": 1, "score": 3, "last_activity_date": 1565003340, "creation_date": 1564964668, "last_edit_date": 1565003340, "question_id": 57351063, "link": "https://stackoverflow.com/questions/57351063/understanding-the-guard-function-and-list-comprehension", "title": "Understanding the guard function and list comprehension", "body": "<p>I am learning about the <code>guard</code> function from the book 'Learn You a Haskell for Great Good!' by Miran Lipovaca. </p>\n\n<p>For the following example:</p>\n\n<pre><code>ghci&gt; [1..50] &gt;&gt;= (\\x -&gt; guard('7' `elem` show x) &gt;&gt; return x)\n[7, 17, 27, 37, 47]\n</code></pre>\n\n<p>I know that <code>guard</code> takes a Boolean value, and if the value is <code>True</code>, guard takes <code>()</code> and puts it in a minimal default context and succeeds.\nIf the value is <code>False</code>, then <code>guard</code> makes a failed monadic value.</p>\n\n<p>However, I don't understand how guard works in the above example to create the resulting list <code>[7, 17, 27, 37, 47]</code>. What is passed as <code>x</code> in the lambda function, is it 1? Further, if <code>('7' `elem` show x)</code> evaluates to <code>False</code>, then wouldn't the empty list be returned? How exactly does the final result list come to be?</p>\n"}, {"tags": ["haskell", "data-kinds", "constraint-kinds"], "comments": [{"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 3, "creation_date": 1564970642, "post_id": 57350983, "comment_id": 101190841, "body": "The answer is almost certainly &quot;no&quot;.  Can you explain what it is you&#39;re trying to use this for?"}, {"owner": {"reputation": 1963, "user_id": 2840542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eO77F.jpg?s=128&g=1", "display_name": "AntC", "link": "https://stackoverflow.com/users/2840542/antc"}, "edited": false, "score": 0, "creation_date": 1564980542, "post_id": 57350983, "comment_id": 101192369, "body": "<a href=\"https://www.microsoft.com/en-us/research/publication/fun-type-functions/\" rel=\"nofollow noreferrer\">microsoft.com/en-us/research/publication/fun-type-functions</a> shows a way to get a type-level predicate telling whether some type is a member of some class. By the time you&#39;ve waded through that, you&#39;ll agree with &quot;almost certainly &#39;no&#39;&quot;. Consider the general problem: some type is a member of class <code>D</code> just in case it&#39;s <i>not</i> a member of <code>C</code>. It&#39;s a member of <code>C</code> just in case it&#39;s not a member of <code>D</code>. (Of course it won&#39;t be as simple as that: there&#39;ll be a chain of inter-dependent class constraints.) The base problem is that constructivist logic can&#39;t use the law of excluded middle."}, {"owner": {"reputation": 1963, "user_id": 2840542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eO77F.jpg?s=128&g=1", "display_name": "AntC", "link": "https://stackoverflow.com/users/2840542/antc"}, "edited": false, "score": 0, "creation_date": 1564980602, "post_id": 57350983, "comment_id": 101192383, "body": "BTW this is a Haskell FAQ."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1564988303, "post_id": 57350983, "comment_id": 101194497, "body": "To support incremental compilation, GHC can never be sure that a given instance does <i>not</i> exist. Checking that negative constraint would require inspecting all the modules, breaking incremental compilation."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1565000378, "post_id": 57350983, "comment_id": 101200040, "body": "I&#39;d also remark that the inability to negate constraints relates to a rather deep mathematical idiom, that of <a href=\"https://en.wikipedia.org/wiki/Intuitionistic_logic\" rel=\"nofollow noreferrer\">constructive logic</a>. It turns out it&#39;s often a really good idea to avoid classical binary <i>true or false</i> thinking."}], "answers": [{"tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": false, "score": 10, "last_activity_date": 1564985880, "creation_date": 1564985880, "answer_id": 57353098, "question_id": 57350983, "link": "https://stackoverflow.com/questions/57350983/could-you-write-a-type-function-to-invert-a-constraint/57353098#57353098", "title": "Could you write a type function to invert a constraint?", "body": "<p>No. It is a design principle of the language that you are <em>never</em> allowed to do this. The rule is if a program is valid, adding more <code>instance</code>s should not break it. This is the open-world assumption. Your desired constraint is a pretty direct violation:</p>\n\n<pre><code>data A = A\nf :: Invert Show a =&gt; a -&gt; [a]\nf x = [x]\ntest :: [A]\ntest = f A\n</code></pre>\n\n<p>Would work, but adding</p>\n\n<pre><code>instance Show A\n</code></pre>\n\n<p>would break it. Therefore, the original program should never have been valid in the first place, and therefore <code>Invert</code> cannot exist.</p>\n"}, {"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 3, "last_activity_date": 1565003023, "creation_date": 1565003023, "answer_id": 57357285, "question_id": 57350983, "link": "https://stackoverflow.com/questions/57350983/could-you-write-a-type-function-to-invert-a-constraint/57357285#57357285", "title": "Could you write a type function to invert a constraint?", "body": "<p>As HTNW answered, it is in general not supposed to be possible to assert that a type is not an instance of a class. However, it is certainly possible to assert <em>for a concrete type</em> that it's never supposed to be possible to have an instance of some class for it. An ad-hoc way would be this:</p>\n\n<pre><code>{-# LANGUAGE ConstraintKinds, KindSignatures, AllowAmbiguousTypes\n           , MultiParamTypeClasses, FlexibleInstances #-}\n\nimport GHC.Exts (Constraint)\n\nclass Non (c :: * -&gt; Constraint) (t :: *) where\n  nonAbsurd :: c t =&gt; r\n</code></pre>\n\n<p>But this is unsafe \u2013 the only way to write an instance is, like,</p>\n\n<pre><code>instance Non Show (String-&gt;Bool) where\n  nonAbsurd = undefined\n</code></pre>\n\n<p>but then somebody else could come up with a bogus <code>instance Show (String-&gt;Bool)</code> and would then be able to use your <code>nonAbsurd</code> for proving the <a href=\"https://stackoverflow.com/questions/7220436/good-examples-of-not-a-functor-functor-applicative-monad/7227048#7227048\">moon is made out of green cheese</a>.</p>\n\n<p>A better option to make an instance impossible is to \u201cblock\u201d it: write that instance yourself \u201cpre-emptively\u201d, but in such a way that it's a type error to actually invoke it.</p>\n\n<pre><code>import Data.Constraint.Trivial -- from <a href=\"http://hackage.haskell.org/package/trivial-constraint-0.6.0.0\" rel=\"nofollow noreferrer\">trivial-constraint</a>\n\ninstance Impossible0 => Show (String->Bool) where\n  show = nope</code></pre>\n\n<p>Now if anybody tries to add that instance, <em>or</em> tries to use it, they'll get a clear compiler error.</p>\n"}], "owner": {"reputation": 381, "user_id": 4779636, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-XfZbZzafRNw/AAAAAAAAAAI/AAAAAAAADqc/jZKyixgEiK4/photo.jpg?sz=128", "display_name": "David Fox", "link": "https://stackoverflow.com/users/4779636/david-fox"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 127, "favorite_count": 1, "answer_count": 2, "score": 2, "last_activity_date": 1565003023, "creation_date": 1564962988, "question_id": 57350983, "link": "https://stackoverflow.com/questions/57350983/could-you-write-a-type-function-to-invert-a-constraint", "title": "Could you write a type function to invert a constraint?", "body": "<p>Is it possible to write a type function that would take a constraint like Show and return one that constrains the RHS to types that are <em>not</em> an instance of Show?</p>\n\n<p>The signature would be something like</p>\n\n<pre><code>type family Invert (c :: * -&gt; Constraint) :: * -&gt; Constraint\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1564930112, "post_id": 57347510, "comment_id": 101182781, "body": "You can use <code>whileM</code>: <a href=\"https://hackage.haskell.org/package/extra-1.6.17/docs/Control-Monad-Extra.html#v:whileM\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/extra-1.6.17/docs/&hellip;</a>"}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1564931630, "post_id": 57347510, "comment_id": 101183160, "body": "@WillemVanOnsem Awesome, why is this not in base?"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 1, "creation_date": 1564934757, "post_id": 57347510, "comment_id": 101183932, "body": "@IgnatInsarov it&#39;s not clear there&#39;s a benefit to having every combinator definable in 5 lines or less in the standard library as opposed to redefining it when you need it. You have to weigh that against the effort to look it up when you write code using it, and when you read code using it."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1564950103, "post_id": 57347510, "comment_id": 101187682, "body": "@Li-yaoXia To define every possible combinator is one thing. To have an equivalent of a simple loop, one of the few most fundamental control structures from somewhere like the 60s, is another thing altogether. After all, we have <code>&lt;-</code> and <code>if</code> as keywords even."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1564952289, "post_id": 57347510, "comment_id": 101188099, "body": "@IgnatInsarov: I personally to some extend like the fact that <code>whileM</code> and <code>forM</code>s are not very &quot;close&quot; to the language. Since this helps to think more &quot;declaratively&quot; over a problem. Every now and then I see some users that aim to &quot;translate&quot; imperative code in Haskell: they use <code>MVar</code>s to make mutable variables. Although this might work, it is definitely not much &quot;idiomatic&quot;."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1564952563, "post_id": 57347510, "comment_id": 101188143, "body": "For example <code>if ... then ... else</code> is not necessary, one can use the <a href=\"https://hackage.haskell.org/package/utility-ht-0.0.14/docs/Data-Bool-HT.html#v:ifThenElse\" rel=\"nofollow noreferrer\"><code>ifThenElse</code> function</a>. Haskell has suprisingly few real keywords (as in tokens that have to be defined in the language, and can not be defined through the library itself)."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1564968683, "post_id": 57347510, "comment_id": 101190516, "body": "You say &quot;fundamental control structure&quot; I say &quot;just a particular case of recursion&quot;."}], "answers": [{"tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": false, "score": 2, "last_activity_date": 1564956944, "last_edit_date": 1564956944, "creation_date": 1564954374, "answer_id": 57350350, "question_id": 57347510, "link": "https://stackoverflow.com/questions/57347510/what-recursion-scheme-should-i-use-to-repeat-an-effectful-action-until-its-resul/57350350#57350350", "title": "What recursion scheme should I use to repeat an effectful action until its result matches some criterion?", "body": "<p>I like to model these kinds of tasks as functions involving effectful streams. The <a href=\"http://hackage.haskell.org/package/streaming\" rel=\"nofollow noreferrer\">streaming</a> package is good for that, as it provides an api quite similar to that of conventional, pure lists. (That said, the <code>Functor</code> / <code>Applicative</code> / <code>Monad</code> instances are a bit different: they work by <code>Stream</code> \"concatenation\", not by exploring all combinations like in pure lists.)</p>\n\n<p>For example:</p>\n\n<pre><code>import Streaming\nimport qualified Streaming.Prelude as S\n\nloop :: Int -&gt; (a -&gt; Bool) -&gt; IO a -&gt; IO (Maybe a)\nloop limit condition = S.head_ . S.filter condition . S.take limit . S.repeatM\n</code></pre>\n\n<p>Using the <a href=\"http://hackage.haskell.org/package/streaming-0.2.2.0/docs/Streaming-Prelude.html#v:repeatM\" rel=\"nofollow noreferrer\"><code>repeatM</code></a>, <a href=\"http://hackage.haskell.org/package/streaming-0.2.2.0/docs/Streaming-Prelude.html#v:take\" rel=\"nofollow noreferrer\"><code>take</code></a>, <a href=\"http://hackage.haskell.org/package/streaming-0.2.2.0/docs/Streaming-Prelude.html#v:filter\" rel=\"nofollow noreferrer\"><code>filter</code></a> and <a href=\"http://hackage.haskell.org/package/streaming-0.2.2.0/docs/Streaming-Prelude.html#v:head_\" rel=\"nofollow noreferrer\"><code>head_</code></a> functions from \"streaming\".</p>\n\n<p>Or, if we have an effectful function and a list of values:</p>\n\n<pre><code>loop :: (b -&gt; Bool) -&gt; (a -&gt; IO b) -&gt; [a] -&gt; IO (Maybe b)\nloop condition effectful = S.head_ . S.filter condition . S.mapM effectful . S.each\n</code></pre>\n\n<p>Using <a href=\"http://hackage.haskell.org/package/streaming-0.2.2.0/docs/Streaming-Prelude.html#v:each\" rel=\"nofollow noreferrer\"><code>each</code></a> and <a href=\"http://hackage.haskell.org/package/streaming-0.2.2.0/docs/Streaming-Prelude.html#v:mapM\" rel=\"nofollow noreferrer\"><code>mapM</code></a> from \"streaming\".</p>\n\n<p>If we want to perform a final effectful action:</p>\n\n<pre><code>loop :: (b -&gt; IO ()) -&gt; (b -&gt; Bool) -&gt; (a -&gt; IO b) -&gt; [a] -&gt; IO ()\nloop final condition effectful = \n    S.mapM_ final . S.take 1 . S.filter condition . S.mapM effectful . S.each \n</code></pre>\n\n<p>Using <a href=\"http://hackage.haskell.org/package/streaming-0.2.2.0/docs/Streaming-Prelude.html#v:mapM_\" rel=\"nofollow noreferrer\"><code>mapM_</code></a> from \"streaming\". </p>\n"}, {"comments": [{"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1565027076, "post_id": 57360857, "comment_id": 101213648, "body": "<code>(&lt;|&gt;)</code> for <code>IO</code> is dangerous because it hides exceptions."}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1565027121, "post_id": 57360857, "comment_id": 101213661, "body": "Some possible simplifications: <code>foldr (&lt;|&gt;) empty</code> is <code>Data.Foldable.asum</code>. <code>if condition n then return () else empty</code> could be implemented using <code>Control.Monad.guard</code>. Alas, your solution will throw an <code>IOException</code> if no element satisfies the condition. <code>IO</code> has a strange <code>Alternative</code> instance for which  <code>empty</code> throws an exception and <code>&lt;|&gt;</code> catches exceptions thrown by the first operand."}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1565202893, "post_id": 57360857, "comment_id": 101282385, "body": "Related: <a href=\"https://stackoverflow.com/questions/48450826/what-is-the-purpose-of-instance-alternative-io/48452048#48452048\" title=\"what is the purpose of instance alternative io\">stackoverflow.com/questions/48450826/&hellip;</a>"}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1565206468, "post_id": 57360857, "comment_id": 101284013, "body": "@Li-yaoXia Well turns out it only hides IO errors, which is just a fraction of synchronous errors that are anyway generally safe to ignore. So I do not see what the danger is."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1565211808, "post_id": 57360857, "comment_id": 101286061, "body": "@IgnatInsarov The danger is that if <code>effectful</code> throws an IO exception -- say, because it tried to open a file and failed -- the loop you have written here will not rethrow that exception, but instead blithely continue on to the next iteration exactly as if it were merely the case that the condition were not yet satisfied."}], "tags": [], "owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "is_accepted": false, "score": 0, "last_activity_date": 1565015977, "creation_date": 1565015977, "answer_id": 57360857, "question_id": 57347510, "link": "https://stackoverflow.com/questions/57347510/what-recursion-scheme-should-i-use-to-repeat-an-effectful-action-until-its-resul/57360857#57360857", "title": "What recursion scheme should I use to repeat an effectful action until its result matches some criterion?", "body": "<p>There is one <code>base</code> class that you are forgetting, my friend, and that is <code>Alternative</code>. Consider the following definitions:</p>\n\n<pre><code>loop :: Alternative m =&gt; [m Int] -&gt; m Int\nloop = foldr (&lt;|&gt;) empty\n\neffectful' :: Int -&gt; IO Int\neffectful' n = effectful n &lt;* if condition n then return () else empty\n</code></pre>\n\n<p>Now surely you can see where it is going:</p>\n\n<pre><code>\u03bb loop (effectful' &lt;$&gt; [1..10]) &gt;&gt;= final\nEffect: 1\nEffect: 2\nEffect: 3\nResult: 3\n</code></pre>\n\n<p>You can even have an infinite list of alternatives here; if there is a guarantee that eventually one of them will not be <code>empty</code>, the whole loop is well-defined.</p>\n"}], "owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 166, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1565015977, "creation_date": 1564929774, "question_id": 57347510, "link": "https://stackoverflow.com/questions/57347510/what-recursion-scheme-should-i-use-to-repeat-an-effectful-action-until-its-resul", "title": "What recursion scheme should I use to repeat an effectful action until its result matches some criterion?", "body": "<p>That is, what I am asking about is a loop.</p>\n\n<pre><code>effectful :: Int -&gt; IO Int\neffectful n = do\n    putStrLn $ \"Effect: \" ++ show n\n    return n\n\ncondition = (== 3)\n\nfinal :: Int -&gt; IO ()\nfinal n = putStrLn $ \"Result: \" ++ show n\n\nloop = ?\n</code></pre>\n\n<p>It should work like this:</p>\n\n<pre><code>\u03bb loop [1..10]\nEffect: 1\nEffect: 2\nEffect: 3\nResult: 3\n</code></pre>\n\n<p>I can offer a recursive definition:</p>\n\n<pre><code>loop (x: xs) = do\n    r &lt;- effectful x\n    if condition r\n       then final r\n       else loop xs\n</code></pre>\n\n<p>However, I am having trouble representing this effect with any combination of <code>Functor</code>, <code>Monad</code>,\n<code>Foldable</code> and <code>Traversable</code> methods, because they always insist on evaluating all of the actions,\nwhile what I need is to stop at some point within the list.</p>\n\n<p>For instance, with an <code>unfoldrM</code> <em>(which is an effectful version of <code>Data.List.unfoldr</code> that I\nmade up for the occasion)</em> I can perform exactly the actions I need, but I cannot attain the value\nof the last action, because the function parameter returns <code>Nothing</code>:</p>\n\n<pre><code>unfoldrM :: Monad m =&gt; (a -&gt; MaybeT m (b, a)) -&gt; a -&gt; m [b]\nunfoldrM f x = fmap reverse $ unfoldrM' f x (return [ ])\n  where\n    -- unfoldrM' :: (a -&gt; MaybeT m (b, a)) -&gt; a -&gt; m [b] -&gt; m [b]\n    unfoldrM' f x ys = runMaybeT (f x) &gt;&gt;= \\r -&gt; case r of\n        Just (y, x') -&gt; unfoldrM' f x' (fmap (y:) ys)\n        Nothing      -&gt; ys\n\nf :: [Int] -&gt; MaybeT IO (Int, [Int])\nf (x: xs) = (lift . effectful $ x) &gt;&gt;= \\y -&gt;\n    if condition y\n       then MaybeT (return Nothing)\n       else lift . return $ (y, xs)\n</code></pre>\n\n<p>\u2014 Which got me thinking: <em>\"What if I used <code>Either</code> instead, then unwrapped the <code>Left</code> result?\"</em>\nThis line of consideration led me to <code>Control.Monad.Except</code> and then to the idea that I should\n<em>consider the desired result to be the exception</em> in the control flow.</p>\n\n<pre><code>exceptful :: Int -&gt; ExceptT Int IO ()\nexceptful n = do\n    r &lt;- lift (effectful n)\n    if condition r\n       then throwError r\n       else return ()\n\nloop' xs = fmap (fromRight ())\n         $ runExceptT (traverse_ exceptful xs `catchError` (lift . final))\n</code></pre>\n\n<p>&nbsp;</p>\n\n<pre><code>\u03bb loop' [1..10]\nEffect: 1\nEffect: 2\nEffect: 3\nResult: 3\n</code></pre>\n\n<p>What I think about this solution is that it is awful. First, it is counter-intuitive to use the\nleft side as the actual result carrier, second, this code is so much more complex than the\nrecursive <code>loop</code> that I started with.</p>\n\n<p>What can be done?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1564918697, "post_id": 57346203, "comment_id": 101180322, "body": "Please use spaces, <b><i>not</i> tabs</b>."}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 1, "creation_date": 1564918721, "post_id": 57346203, "comment_id": 101180330, "body": "You need to indent and tormat your code properly, both for Haskell and for Stackoverflow."}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 4, "creation_date": 1564918854, "post_id": 57346203, "comment_id": 101180360, "body": "Can&#39;t reproduce. Please provide a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>, including the full error message."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1564921663, "post_id": 57346203, "comment_id": 101180889, "body": "Your code is fine. Be sure to write it in a .hs file, and then load it, rather than entering it line by line in GHCi."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 2, "creation_date": 1564936360, "post_id": 57346203, "comment_id": 101184353, "body": "or, to enter it in GHCi, first type <code>:{</code>, press Enter, then paste these lines, press Enter, then type <code>:}</code> and press Enter."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 1, "creation_date": 1565049701, "post_id": 57346203, "comment_id": 101220611, "body": "@Idiota please edit the question and include the complete contents of the file you gave to GHC.  The problem isn&#39;t in the snippet you posted."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1565117529, "post_id": 57346203, "comment_id": 101248906, "body": "<code>main = do</code> is wrong. try <code>main = putStrLn &quot;Hello, World!&quot;</code> instead."}, {"owner": {"reputation": 23, "user_id": 6212606, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f0bc9fc3cea5056698a2bc729cba69f?s=128&d=identicon&r=PG&f=1", "display_name": "Idiota", "link": "https://stackoverflow.com/users/6212606/idiota"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1565160102, "post_id": 57346203, "comment_id": 101259552, "body": "Thank you! I&#39;ve got it now. All I had to do was define the function BEFORE the main. Quick question: how do I accept @Will Ness answer? The instructions say &quot;click on the check mark beside the answer to toggle it from greyed out to filled in.&quot; What check mark? I can&#39;t see it."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1565168962, "post_id": 57346203, "comment_id": 101263885, "body": "that&#39;s because I broke the rules and posted an answer as a comment instead of posting it as a proper answer. :) it is OK to post your own answer, and later even accept it, to signal that the issue is resolved. you might even get some upvotes! do include the working code though. :) BTW the order of definitions in a source file does <i>not</i> matter. the order only matters if you are trying your definitions one by one at the GHCi prompt. even then, put them all between the <code>:{</code> and <code>:}</code> GHCi commands, and again the order won&#39;t matter - for <i>that</i> group of definitions."}], "answers": [{"tags": [], "owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "is_accepted": false, "score": 3, "last_activity_date": 1565427665, "creation_date": 1565427665, "answer_id": 57440768, "question_id": 57346203, "link": "https://stackoverflow.com/questions/57346203/haskell-tutorial-guards-example-gives-a-parse-error/57440768#57440768", "title": "haskell tutorial guards example gives a parse error", "body": "<blockquote>\n  <p>I tried adding <code>putStrLn \"Hello, World!\"</code></p>\n</blockquote>\n\n<p>That would work if you do it like this:</p>\n\n<pre><code>main=do putStrLn \"Hello, World!\"\nabsolute n \n  | n &lt; 0 = -n\n  | otherwise = n\n</code></pre>\n\n<p>If that's not what you meant, you need to post your actual code.</p>\n\n<p>The problem with just <code>main = do</code> is that <code>do</code> needs to be followed by a block of code. The \"block\" can consist of a single <code>putStrLn</code>, but it cannot be empty.</p>\n\n<p>The problem with your last attempt is indentation. It needs to be</p>\n\n<pre><code>main=do\n let n=absolute 5\n print n\nabsolute n\n | n&lt;0=(-n)\n | otherwise = n\n</code></pre>\n\n<p>I.e. the body of <code>main</code> should be indented more than the <code>main =</code> and <code>absolute n</code> lines.</p>\n\n<p>Otherwise the whole rest of the file is taken to be part of the <code>do</code> block in <code>main</code>, and <code>absolute n | ...</code> does not make sense as an expression.</p>\n\n<p>(NB: Just because ghc is giving you an error message doesn't mean the compiler crashed. Your code just isn't syntactically valid.)</p>\n"}], "owner": {"reputation": 23, "user_id": 6212606, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2f0bc9fc3cea5056698a2bc729cba69f?s=128&d=identicon&r=PG&f=1", "display_name": "Idiota", "link": "https://stackoverflow.com/users/6212606/idiota"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 105, "favorite_count": 0, "closed_date": 1565690077, "answer_count": 1, "score": -3, "last_activity_date": 1565427665, "creation_date": 1564918632, "last_edit_date": 1565427479, "question_id": 57346203, "link": "https://stackoverflow.com/questions/57346203/haskell-tutorial-guards-example-gives-a-parse-error", "closed_reason": "Not suitable for this site", "title": "haskell tutorial guards example gives a parse error", "body": "<p>I pasted code from riptutorial . com for Haskell guards. It won't compile.\n This is a super simple sample code. I have triple-checked checked it has spaces not tabs.</p>\n\n<p>there are a few other stack overflow questions with the same compile error, but from more complex code. There has gotta be a simple reason for this!</p>\n\n<p>It works perfectly in the interactive ghci, but I can't figure out how to get ghc to compile an executable. The complete file I'm trying is:</p>\n\n<pre><code>main=do\nabsolute n \n  | n &lt; 0 = -n\n  | otherwise = n\n</code></pre>\n\n<p>the full error GHC gives me is \"hello.hs:3:3: parse error on input `|'  \"</p>\n\n<p>I thought main might need an IO type, so I tried adding <code>putStrLn \"Hello, World!\"</code>, but that gave the same error.</p>\n\n<p>@WillNess  - I'm not questioning your advice that \"The order of definitions in a source file does not matter.\" but.... I'm trying to get this down to the simplest examples. The following compiled OK with ghc:</p>\n\n<pre><code>absolute n\n | n&lt;0=(-n)\n | otherwise = n\nmain=do\nlet n=absolute 5\nprint n\n</code></pre>\n\n<p>BUT... moving the definition of absolute to the end, like this:</p>\n\n<pre><code>main=do\nlet n=absolute 5\nprint n\nabsolute n\n | n&lt;0=(-n)\n | otherwise = n\n</code></pre>\n\n<p>the GHC compiler crashed with error message absolute.hs:5:2: error: parse error on input `|'</p>\n"}, {"tags": ["haskell", "syntax", "functional-programming", "pattern-matching"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 3, "creation_date": 1564910318, "post_id": 57345332, "comment_id": 101178609, "body": "You cannot match arbitrary things like that. Each line is just equivalent to <code>positionInList _ = 1</code>, <code>positionInList _ = 2</code> etc. If you&#39;re willing to not use pattern matching, use <code>indexOf</code>."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 4, "creation_date": 1564910475, "post_id": 57345332, "comment_id": 101178648, "body": "The compiler here sees <code>s1</code> and <code>s2</code> in your <code>positionInList</code> as variables."}, {"owner": {"reputation": 293, "user_id": 9715006, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eeb905e7fb1642526f814464beb1755c?s=128&d=identicon&r=PG&f=1", "display_name": "swaffelay", "link": "https://stackoverflow.com/users/9715006/swaffelay"}, "edited": false, "score": 0, "creation_date": 1564910854, "post_id": 57345332, "comment_id": 101178739, "body": "uhu I see, will you index of or something simular thx"}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 7, "last_activity_date": 1564911451, "last_edit_date": 1564911451, "creation_date": 1564911113, "answer_id": 57345427, "question_id": 57345332, "link": "https://stackoverflow.com/questions/57345332/pattern-matching-on-constants/57345427#57345427", "title": "pattern matching on constants", "body": "<p>You have to use <code>==</code> here:</p>\n\n<pre><code>positionInList:: Filepath -&gt; Int\npositionInList s | s == s1 = 1\n                 | s == s2 = 2\n.....\n</code></pre>\n\n<p>Otherwise, <code>positionInList s1 = ...</code> introduces <code>s1</code> as a local variable, as the <code>x</code> in <code>positionInList x = ...</code>, matching any string.</p>\n\n<p>Alternatively, use the library functions:</p>\n\n<pre><code>import Data.List\n\npositionInList:: Filepath -&gt; Int\npositionInList s = case elemIndex s [s1,s2,s3,....] of\n   Just pos -&gt; pos+1\n   Nothing  -&gt; error \"positionInList: not found!\"\n</code></pre>\n\n<p>Perhaps it would be even better to make <code>positionInList</code> to return <code>Maybe Int</code>, unless you have a sensible default when the file path is not found.</p>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 3, "last_activity_date": 1565199985, "last_edit_date": 1565199985, "creation_date": 1564911641, "answer_id": 57345491, "question_id": 57345332, "link": "https://stackoverflow.com/questions/57345332/pattern-matching-on-constants/57345491#57345491", "title": "pattern matching on constants", "body": "<p>If you use:</p>\n\n<pre><code>positionInList:: Filepath -&gt; Int\npositionInList s1 = 1\npositionInList s2 = 2</code></pre>\n\n<p>Haskell will treat <code>s1</code> and <code>s2</code> just as variables (that shadow an existing binding). So that means your function here will <em>always</em> return <code>1</code>.</p>\n\n<p>Haskell however has already a function to obtain the index in a list <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-List.html#v:elemIndex\" rel=\"nofollow noreferrer\"><strong><code>elemIndex :: a -&gt; [a] -&gt; Maybe Int</code></strong></a>, you can thus define your <code>positionInList</code> with:</p>\n\n<pre><code>import Data.List(elemIndex)\n\npositionInList :: FilePath -&gt; Maybe Int\npositionInList = fmap (1+) . <b>flip elemIndex [s1, s2]</b></code></pre>\n\n<p>The <code>fmap (1+)</code> here will map the zero-based indices to one-based indices.</p>\n\n<p>Returning a <code>Maybe a</code> such that we can use <code>Nothing</code> is usually more idiomatic Haskell than returning a value like <code>-1</code>. We can however use <a href=\"https://hoogle.haskell.org/?hoogle=fromMaybe&amp;scope=set%3Astackage\" rel=\"nofollow noreferrer\"><strong><code>fromMaybe :: a -&gt; Maybe a -&gt; a</code></strong></a> in case you want to map <code>Nothing</code> on some other value, like:</p>\n\n<pre><code>import Data.List(elemIndex)\nimport Data.Maybe(fromMaybe)\n\npositionInList :: FilePath -&gt; Int\npositionInList = <b>fromMaybe (-1)</b> . fmap (1+) . flip elemIndex [s1, s2]</code></pre>\n"}], "owner": {"reputation": 293, "user_id": 9715006, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eeb905e7fb1642526f814464beb1755c?s=128&d=identicon&r=PG&f=1", "display_name": "swaffelay", "link": "https://stackoverflow.com/users/9715006/swaffelay"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 141, "favorite_count": 0, "accepted_answer_id": 57345427, "answer_count": 2, "score": 0, "last_activity_date": 1565199985, "creation_date": 1564910213, "last_edit_date": 1564936555, "question_id": 57345332, "link": "https://stackoverflow.com/questions/57345332/pattern-matching-on-constants", "title": "pattern matching on constants", "body": "<p>So I have these constant FilePath variables (strings) </p>\n\n<pre><code>s1 , s2 , s3 , s4 ... :: Filepath\ns1 = \"help.txt\"\ns2 = \"sljdfn\"\n-- ...\n</code></pre>\n\n<p>And I have a function that takes one of these filepaths and returns a int.</p>\n\n<pre><code>positionInList:: Filepath -&gt; Int\npositionInList s1 = 1\npositionInList s2 = 2\n-- ...\n</code></pre>\n\n<p>However when compiling I get pattern match redundant warning and the program behaves wierd, so I think this is the problem. How would I be able to solve this ?</p>\n"}, {"tags": ["string", "haskell", "url"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 5, "creation_date": 1564906218, "post_id": 57343224, "comment_id": 101177861, "body": "This is called a slug. Haskell has a <code>slug</code> package: <a href=\"https://hackage.haskell.org/package/slug-0.1.7/docs/Web-Slug.html\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/slug-0.1.7/docs/Web-Slug.html</a>"}, {"owner": {"reputation": 1336, "user_id": 2801316, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/cqx1a.jpg?s=128&g=1", "display_name": "FtheBuilder", "link": "https://stackoverflow.com/users/2801316/fthebuilder"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1564967505, "post_id": 57343224, "comment_id": 101190348, "body": "Willen Van Onsem Thank you a lot, that was exactly what I was looking for, I don&#39;t understand why did my question get so many down votes, but you answered it perfectly and if you make an answer with this comment I will mark as right!"}], "answers": [{"tags": [], "owner": {"reputation": 1336, "user_id": 2801316, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/cqx1a.jpg?s=128&g=1", "display_name": "FtheBuilder", "link": "https://stackoverflow.com/users/2801316/fthebuilder"}, "is_accepted": false, "score": 0, "last_activity_date": 1564967727, "creation_date": 1564967727, "answer_id": 57351247, "question_id": 57343224, "link": "https://stackoverflow.com/questions/57343224/best-way-to-convert-title-into-url-compatible-mode-in-haskell/57351247#57351247", "title": "Best way to convert title into url compatible mode in Haskell", "body": "<p>I don't understand why did my question get down votes, if it was created after a PHP question like this and PHP community gave answers ... Willen Van Onsem answered what I need: <code>This is called a slug. Haskell has a slug package: hackage.haskell.org/package/slug-0.1.7/docs/Web-Slug.html</code></p>\n"}], "owner": {"reputation": 1336, "user_id": 2801316, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/cqx1a.jpg?s=128&g=1", "display_name": "FtheBuilder", "link": "https://stackoverflow.com/users/2801316/fthebuilder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 81, "favorite_count": 1, "answer_count": 1, "score": -3, "last_activity_date": 1564967727, "creation_date": 1564883297, "question_id": 57343224, "link": "https://stackoverflow.com/questions/57343224/best-way-to-convert-title-into-url-compatible-mode-in-haskell", "title": "Best way to convert title into url compatible mode in Haskell", "body": "<p>I would like to use the title of my Posts to create a readable URL like </p>\n\n<p>Given a title \"Ol\u00e1 Pessoas!\"</p>\n\n<p><a href=\"http://mydomain.com.br/store/ola-pessoas\" rel=\"nofollow noreferrer\">http://mydomain.com.br/store/ola-pessoas</a></p>\n\n<p>I've found useful examples in PHP but if anybody had faced this quest and has a solution in Haskell, I would appreciate your solution instead of just starting from zero comparing with the solutions I found in other languages.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1564858560, "post_id": 57339988, "comment_id": 101170805, "body": "<code>if</code> is non-strict in any language I know -- this is even more important in impure languages, where you do not want to observe the side effects of both branches. In an (insane, IMO) higher-order language with a strict <code>if</code> we could still write <code>(if cond then (\\_-&gt; doX) else (\\_-&gt; doY)) ()</code> to force it to be lazy, but that hack would need to be used to often that it should be the default."}], "answers": [{"tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": true, "score": 10, "last_activity_date": 1564848732, "creation_date": 1564848732, "answer_id": 57340048, "question_id": 57339988, "link": "https://stackoverflow.com/questions/57339988/in-haskell-when-using-the-xstrict-language-extension-is-if-short-circuiting/57340048#57340048", "title": "In Haskell, when using the XStrict language extension, is if short-circuiting?", "body": "<p>No, the branch not taken is not evaluated.</p>\n\n<p>For example:</p>\n\n<pre><code>{-# LANGUAGE Strict #-}\nimport Debug.Trace\n\nmain :: IO ()\nmain = print (f (fib 3))\n\nf i =\n    if i &lt; 5\n        then trace \"then\" 0\n        else trace \"else\" 1\n\n-- Using fib to avoid inlining or optimization from messing up or test.\nfib :: Int -&gt; Int\nfib 1 = 1\nfib n  = n + fib (n-1)\n</code></pre>\n\n<p>Prints:</p>\n\n<pre><code>*Main&gt; main\nelse\n1\n</code></pre>\n\n<p>However, if we lift the branches to let bindings then yes, those are strictly evaluated:</p>\n\n<pre><code>f :: Int -&gt; Int\nf i =\n    let f1 = trace \"then\" 1 in\n    let f2 = trace \"else\" 2 in\n    if i &lt; 5\n        then f1\n        else f2\n</code></pre>\n\n<p>Yields:</p>\n\n<pre><code>% ./LogicChains\nthen\nelse\n2\n</code></pre>\n"}], "owner": {"reputation": 3832, "user_id": 2553416, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/3cb1756924bd03cc01d107852dd81acf?s=128&d=identicon&r=PG", "display_name": "LogicChains", "link": "https://stackoverflow.com/users/2553416/logicchains"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 208, "favorite_count": 1, "accepted_answer_id": 57340048, "answer_count": 1, "score": 9, "last_activity_date": 1564848732, "creation_date": 1564848261, "question_id": 57339988, "link": "https://stackoverflow.com/questions/57339988/in-haskell-when-using-the-xstrict-language-extension-is-if-short-circuiting", "title": "In Haskell, when using the XStrict language extension, is if short-circuiting?", "body": "<p>Standard Haskell is lazily evaluated, so <code>if myCondition then someValue else doSomeLargeComputation x y z</code> will avoid evaluating <code>doSomeLargeComputation x y z</code> if <code>myCondition</code> is true. My question is, if I enable the language extension <code>XStrict</code> then will <code>doSomeLargeComputation x y z</code> now be evaluated even when <code>myCondition</code> is true?</p>\n\n<p>If so, is there a control flow construct other than explicitly marking <code>doSomeLargeComputation x y z</code> as lazy that can be used to avoid calculating it (like a short-circuiting if statement in a strict language)?</p>\n"}, {"tags": ["haskell", "type-inference", "typeclass"], "answers": [{"comments": [{"owner": {"reputation": 247, "user_id": 1499033, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/pc2IU.jpg?s=128&g=1", "display_name": "Sergey Kolbasov", "link": "https://stackoverflow.com/users/1499033/sergey-kolbasov"}, "edited": false, "score": 0, "creation_date": 1564858375, "post_id": 57340061, "comment_id": 101170765, "body": "That&#39;s awesome, thanks!  Also, isn&#39;t it enough to have fundep <code>ts f -&gt; o, ts o -&gt; f</code> and get rid of equality constraint? At least it looks like it works without it"}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 247, "user_id": 1499033, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/pc2IU.jpg?s=128&g=1", "display_name": "Sergey Kolbasov", "link": "https://stackoverflow.com/users/1499033/sergey-kolbasov"}, "edited": false, "score": 0, "creation_date": 1564861676, "post_id": 57340061, "comment_id": 101171496, "body": "@SergeyKolbasov Oh, wow, I didn&#39;t think that would work. AFAICT, the <code>~</code> trick generally works in more places than fundeps, but fundeps, when they do work, tend to be better. Edited."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1564941086, "post_id": 57340061, "comment_id": 101185604, "body": "With a type family approach, it&#39;s possible to leave out the class. See my answer."}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": true, "score": 4, "last_activity_date": 1564861626, "last_edit_date": 1564861626, "creation_date": 1564848847, "answer_id": 57340061, "question_id": 57339753, "link": "https://stackoverflow.com/questions/57339753/typeclasses-and-type-inference-in-haskell/57340061#57340061", "title": "Typeclasses and type inference in Haskell", "body": "<p>Typeclasses are \"matchy\". In your example, GHC says it is trying to solve the constraint</p>\n\n<pre><code>FnToProduct' 'False (p1 -&gt; p0 -&gt; p1) '[Bool, Bool] out0\n</code></pre>\n\n<p>Where unification variables <code>p1</code> and <code>p0</code> coming from the implicit expansion of the first argument:</p>\n\n<pre><code>(\\(a :: _p1) (b :: _p0) -&gt; a)\n</code></pre>\n\n<p>and unification variable <code>out0</code> coming from the type of <code>fromFunction</code>. Essentially, GHC doesn't know what the argument types should be, nor what the <code>fromFunction</code> call should eventually return, so it creates three variables to represent them and tries to figure out what they should be.</p>\n\n<p>No <code>instance</code> matches this constraint. The</p>\n\n<pre><code>instance _ =&gt; FnToProduct' False (input -&gt; fnOutput) (input ': tail) out'\n</code></pre>\n\n<p>would require <code>p1</code> and <code>Bool</code> to be the same, but they aren't. They <em>could</em> be, as you demonstrate with your type-annotated example, but GHC believes that they don't <em>have</em> to be. You could imagine adding</p>\n\n<pre><code>instance _ =&gt; FnToProduct' False (Int -&gt; fnOutput) (Bool ': tail) out'\n</code></pre>\n\n<p>and now you don't know whether <code>a :: Int</code> or <code>a :: Bool</code>, because both instances \"fit\". But, with the open world assumption, you have to assume new instances like this can be added whenever.</p>\n\n<p>One fix is to use <code>~</code> constraints:</p>\n\n<pre><code>instance (i ~ i', o ~ o') =&gt; FnToProduct' True (i -&gt; o) '[i'] o'\ninstance (i ~ i', FnToProduct r t o) =&gt; FnToProduct' False (i -&gt; r) (i' ': t) o\n</code></pre>\n\n<p>The second instance now matches, because the two <code>i</code> variables are different. It actually <em>guides</em> type inference now, because the <code>i ~ i'</code> requirement, in this case, translates to a <code>p1 ~ Bool</code> requirement, which is used to instantiate <code>p1</code>. Similarly for <code>p0</code>, by the first instance.</p>\n\n<p>Or, add another functional dependency. This doesn't always work, but it seems to do the job here</p>\n\n<pre><code>class FnToProduct fn ls out | fn ls -&gt; out, fn out -&gt; ls\nclass FnToProduct' (arity1 :: Bool) fn ls out | fn ls -&gt; out, fn out -&gt; ls\n</code></pre>\n\n<p>Which tells GHC that <code>fs</code> (and therefore its argument types, here <code>p1</code> and <code>p0</code>) can be figure out from <code>ls</code> (here <code>[Bool, Bool]</code>).</p>\n\n<p>That aside, I think your function could be simplified to this:</p>\n\n<pre><code>class AppHList ts o f | ts f -&gt; o, ts o -&gt; f where\n   appHList :: f -&gt; HList ts -&gt; o\ninstance AppHList '[] o o where\n   appHList x HNil = x\ninstance AppHList ts o f =&gt; AppHList (t : ts) o (t -&gt; f) where\n   appHList f (x ::: xs) = appHList (f x) xs\n</code></pre>\n\n<p>Artificially requiring the <code>HList</code> to supply all arguments is not particularly useful, and it can really blow up in polymorphic contexts, because you often can't tell what \"supplying all the arguments\" is supposed to mean. E.g. const can have any number of arguments, from 2 up. So, <code>appHList const (id ::: 'a' ::: HNil) 6</code> works (where <code>const</code> has 3 arguments), but <code>fromFunction</code> fails in that context.</p>\n\n<p>You can still impose the \"returns a not-function\" property externally to the more useful function, if you really want it.</p>\n\n<pre><code>type family IsFun f :: Bool where\n  IsFun (_ -&gt; _) = True\n  IsFun _ = False\nfullAppHList :: (IsFun o ~ False, AppHList ts o f) =&gt; f -&gt; HList ts -&gt; o\nfullAppHList = appHList\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 2, "last_activity_date": 1564941022, "last_edit_date": 1564941022, "creation_date": 1564883444, "answer_id": 57343236, "question_id": 57339753, "link": "https://stackoverflow.com/questions/57339753/typeclasses-and-type-inference-in-haskell/57343236#57343236", "title": "Typeclasses and type inference in Haskell", "body": "<p>Here's an option:</p>\n\n<pre><code>class (f ~ AbstractList ts o) =&gt; AppHList ts o f where\n  appHList :: f -&gt; HList ts -&gt; o\n\ntype family AbstractList xs o where\n  AbstractList '[] o = o\n  AbstractList (x ': xs) o =\n    x -&gt; AbstractList xs o\n\ninstance f ~ o =&gt; AppHList '[] o f where\n  appHList x HNil = x\n\ninstance (AppHList ts o f', f ~ (t -&gt; f'))  =&gt; AppHList (t ': ts) o f where\n  appHList f (x ::: xs) = appHList (f x) xs\n</code></pre>\n\n<p>Although there's only one equality constraint, this expresses dependencies in several directions. How's that? The key is that the type family can reduce as soon as the structure of the list is known; nothing is needed from the second argument and none of the list elements are needed either.</p>\n\n<p>This seems to have the same inference power as HTNW's simplified version, but it has two advantages:</p>\n\n<ol>\n<li>It's possible to get equality evidence if you need it.</li>\n<li>It plays better with the <code>PartialTypeSignatures</code> extension. GHC seems to trip over the fundep version in that context for some reason. See <a href=\"https://gitlab.haskell.org/ghc/ghc/issues/17024\" rel=\"nofollow noreferrer\">this ticket</a> I just filed.</li>\n</ol>\n\n<hr>\n\n<p>But wait! There's more! This formulation suggests that even having a class is optional! The class-based approach is likely to be the most efficient when everything specializes and inlines completely, but this version looks a lot simpler:</p>\n\n<pre><code>appHList' :: f ~ AbstractList ts o =&gt; f -&gt; HList ts -&gt; o\nappHList' x HNil = x\nappHList' f (x ::: xs) = appHList' (f x) xs\n</code></pre>\n"}], "owner": {"reputation": 247, "user_id": 1499033, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/pc2IU.jpg?s=128&g=1", "display_name": "Sergey Kolbasov", "link": "https://stackoverflow.com/users/1499033/sergey-kolbasov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 262, "favorite_count": 0, "accepted_answer_id": 57340061, "answer_count": 2, "score": 1, "last_activity_date": 1564941022, "creation_date": 1564846531, "question_id": 57339753, "link": "https://stackoverflow.com/questions/57339753/typeclasses-and-type-inference-in-haskell", "title": "Typeclasses and type inference in Haskell", "body": "<p>I'm trying to figure out how does type inference works together with type classes and so far struggle to grasp it fully.</p>\n\n<p>Let's define the following simple <code>HList</code>:</p>\n\n<pre><code>{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE GADTs #-}\n{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE UndecidableInstances #-}\n{-# LANGUAGE FunctionalDependencies #-}\n{-# LANGUAGE AllowAmbiguousTypes #-}\n{-# LANGUAGE TypeApplications #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n\ninfixr 6 :::\n\ndata HList xs where\n  HNil :: HList '[]\n  (:::) :: a -&gt; HList as -&gt; HList (a ': as)\n</code></pre>\n\n<p>Now I'm going to define type class that allows to \"uncurry\" any function into the function of a single argument of type <code>HList</code>:</p>\n\n<pre><code>class FnToProduct fn ls out | fn ls -&gt; out where\n  fromFunction :: fn -&gt; HList ls -&gt; out\n\ninstance (FnToProduct' (IsArity1 fn) fn ls out) =&gt; FnToProduct fn ls out where\n  fromFunction = fromFunction' @(IsArity1 fn)\n\nclass FnToProduct' (arity1 :: Bool) fn ls out | fn ls -&gt; out where\n  fromFunction' :: fn -&gt; HList ls -&gt; out\n\ninstance FnToProduct' True (input -&gt; output) '[input] output where\n  fromFunction' fn (a ::: tail) = fn a\n\ninstance (FnToProduct fnOutput tail out') =&gt; FnToProduct' False (input -&gt; fnOutput) (input ': tail) out' where\n  fromFunction' fn (input ::: tail) = fromFunction (fn input) tail\n\ntype family IsArity1 fn where\n  IsArity1 (a -&gt; b -&gt; c) = False\n  IsArity1 (a -&gt; b) = True\n</code></pre>\n\n<p>Now I'm going to break the compilation:</p>\n\n<pre><code>test = fromFunction (\\a b -&gt; a) (True ::: False ::: HNil)\n\n\u2022 Ambiguous type variables \u2018p0\u2019, \u2018p1\u2019,\n                               \u2018out0\u2019 arising from a use of \u2018fromFunction\u2019\n      prevents the constraint \u2018(FnToProduct'\n                                  'False (p1 -&gt; p0 -&gt; p1) '[Bool, Bool] out0)\u2019 from being solved.\n        (maybe you haven't applied a function to enough arguments?)\n      Relevant bindings include test :: out0 (bound at src/HList.hs:98:1)\n      Probable fix: use a type annotation to specify what \u2018p0\u2019, \u2018p1\u2019,\n                                                          \u2018out0\u2019 should be.\n      These potential instance exist:\n        one instance involving out-of-scope types\n        (use -fprint-potential-instances to see them all)\n    \u2022 In the expression:\n        fromFunction (\\ a b -&gt; a) (True ::: False ::: HNil)\n      In an equation for \u2018test\u2019:\n          test = fromFunction (\\ a b -&gt; a) (True ::: False ::: HNil)\n   |\n98 | test = fromFunction (\\a b -&gt; a) (True ::: False ::: HNil)\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>But if I specify types of function explicitly:</p>\n\n<pre><code>test = fromFunction (\\(a :: Bool (b :: Bool) -&gt; a) (True ::: False ::: HNil)\n</code></pre>\n\n<p>It works just nice. How could I enforce type inference here so the compiler would pick up the types of HList to figure out types in function? I also tried to use <code>infixl/r</code> operators without any luck so far.</p>\n"}, {"tags": ["haskell", "fold"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1564842208, "post_id": 57339170, "comment_id": 101166846, "body": "Hint: <code>foldr</code> is some sort of catamorphism on the list: you can replace <code>(:)</code> with the first parameter, and <code>[]</code> with the second one, and then you obtain the result of <code>foldr</code>."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 2, "creation_date": 1564842535, "post_id": 57339170, "comment_id": 101166927, "body": "Partial application/currying means that whenever you apply a function to one argument, you get back a function taking the remaining arguments. <code>foldr</code> has type <code>(a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b</code>, so if you give it two parameters (of the appropriate types) you get back a function of type <code>[a] -&gt; b</code>, which matches what you&#39;re trying to get here."}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1564845167, "post_id": 57339170, "comment_id": 101167558, "body": "<code>(+) foldr 0</code> is equivalent to <code>foldr + 0</code>, so no, that doesn&#39;t make sense. Think about why <code>evensOnly xs = filter even xs</code> is equivalent to <code>evensOnly = filter even</code> instead."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 3, "creation_date": 1564845963, "post_id": 57339170, "comment_id": 101167765, "body": "Ignoring some subtleties, <code>alternative = foldr undefined undefined</code> is equivalent to <code>alternative x = foldr undefined undefined x</code>."}, {"owner": {"reputation": 27, "user_id": 11590064, "user_type": "registered", "profile_image": "https://graph.facebook.com/2212284198864651/picture?type=large", "display_name": "rene", "link": "https://stackoverflow.com/users/11590064/rene"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1564849613, "post_id": 57339170, "comment_id": 101168708, "body": "So it seems I need the concept of currying right? And this concept brings me to the statement from @chepner right?"}, {"owner": {"reputation": 1588, "user_id": 1899494, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d8bff769c85b3fc72eec038070928ff?s=128&d=identicon&r=PG", "display_name": "hugo", "link": "https://stackoverflow.com/users/1899494/hugo"}, "edited": false, "score": 3, "creation_date": 1564854443, "post_id": 57339170, "comment_id": 101169848, "body": "@rene: How about you start writing the <code>alternative</code> function with a fold, ignoring the parameter constraint that you mentioned? Add it to your question and people will help you from there (unless you figure it out along the way, which mey very well happen!)"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1564858052, "post_id": 57339170, "comment_id": 101170692, "body": "@rene Yes, you need to understand currying and partial application. The key idea is that all functions, including <code>foldr</code>, take <i>one</i> argument. Some of them happen to return another function, so that can take another argument, and so on. Here <code>foldr</code> takes as argument <code>a-&gt;b-&gt;b</code>, and returns <code>b-&gt;[a]-&gt;b</code>. If another argument of type <code>b</code> is applied to the result, then we get another result of type <code>[a]-&gt;b</code>, which matches the type of <code>alternative</code>."}, {"owner": {"reputation": 893, "user_id": 6248287, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/tPegr.jpg?s=128&g=1", "display_name": "\u019b\u019b\u019b", "link": "https://stackoverflow.com/users/6248287/%c6%9b%c6%9b%c6%9b"}, "edited": false, "score": 0, "creation_date": 1564883446, "post_id": 57339170, "comment_id": 101174577, "body": "see definition of foldr: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.Base.html#foldr\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/base-4.12.0.0/docs/src/&hellip;</a>"}, {"owner": {"reputation": 27, "user_id": 11590064, "user_type": "registered", "profile_image": "https://graph.facebook.com/2212284198864651/picture?type=large", "display_name": "rene", "link": "https://stackoverflow.com/users/11590064/rene"}, "edited": false, "score": 0, "creation_date": 1564932917, "post_id": 57339170, "comment_id": 101183492, "body": "OK now i really got it...For anybody who is interested you shoud look at <a href=\"http://learnyouahaskell.com/higher-order-functions\" rel=\"nofollow noreferrer\">learnyouahaskell.com/higher-order-functions</a> ... a nice explanation"}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 0, "last_activity_date": 1564932820, "creation_date": 1564932820, "answer_id": 57347886, "question_id": 57339170, "link": "https://stackoverflow.com/questions/57339170/using-foldr-with-only-two-parameters/57347886#57347886", "title": "Using foldr with only two parameters", "body": "<p>A list like <code>[1,4,2,5]</code> is syntactical sugar for <code>(:) 1 ((:) 4 ((:) 2 ((:) 5 [])))</code>. <code>foldr f z</code> basically replaces the <code>(:)</code> data constructor with <code>f</code>, and the empty list data constructor <code>[]</code> with <code>z</code>. So <code>foldr f z</code> will result in <code>f 1 (f 4 (f 2 (f 5 z)))</code>.</p>\n\n<p>Since you write <code>original [] = 0</code>, this thus means that for <code>z</code>, we can use <code>0</code>. For <code>f</code> we can use <code>if x &lt; 20 then (+) (5*x-3) else id</code>, since in case <code>x &lt; 20</code>, we add <code>5*x-3</code> to the value, and otherwise, we do nothing with the recursively computed value.</p>\n\n<p>We can thus make an <code>alternative</code> implementation that looks like:</p>\n\n<pre><code>alternative :: (Foldable  f, Num a, Ord a) =&gt; f a -&gt; a\nalternative = foldr f 0\n    where f x ys | x &lt; 20 = 5*x - 3 + ys\n                 | otherwise = ys</code></pre>\n\n<p>or without the <code>where</code> clause with an inline lambda expression:</p>\n\n<pre><code>alternative :: (Foldable  f, Num a, Ord a) =&gt; f a -&gt; a\nalternative = foldr (\\x -> if x &lt; 20 then (+) (5*x-3) else id) 0</code></pre>\n"}], "owner": {"reputation": 27, "user_id": 11590064, "user_type": "registered", "profile_image": "https://graph.facebook.com/2212284198864651/picture?type=large", "display_name": "rene", "link": "https://stackoverflow.com/users/11590064/rene"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112, "favorite_count": 0, "accepted_answer_id": 57347886, "answer_count": 1, "score": 1, "last_activity_date": 1564932820, "creation_date": 1564842134, "last_edit_date": 1564931604, "question_id": 57339170, "link": "https://stackoverflow.com/questions/57339170/using-foldr-with-only-two-parameters", "title": "Using foldr with only two parameters", "body": "<p>I've got a few exercises to prepare for the exam in Haskell/Prolog.</p>\n\n<p>One Haskell task is to rewrite the function below:</p>\n\n<pre><code>original :: [Integer] -&gt; Integer\noriginal [] = 0\noriginal (x:xs) | x &lt; 20    = 5 * x - 3 + original xs\n                | otherwise = original xs\n</code></pre>\n\n<p>But the condition is that I am only allowed to remove the two \"undifined\" in the scheme below:</p>\n\n<pre><code>alternative :: [Integer] -&gt; Integer\nalternative = foldr undefined undefined\n</code></pre>\n\n<p>My problem is that I dont know how this could match the normal foldr structure with 3 parameters (function, \"start value\" or how is it called?,list)?</p>\n\n<p>Maybe an equivalent example would be helpfull, not the full soultion please!</p>\n\n<p>Futhermore I am not allowed to use \"let\" or \"where\".</p>\n\n<p>Thank you for any help!</p>\n\n<p>Sooo... I just followed the idea from @hugo to just first complete the task on the \"normal\" way, which works but is not allowed by our university correction tool:</p>\n\n<pre><code>alternative :: [Integer] -&gt; Integer\nalternative list = foldr (\\ x y -&gt; if x &lt; 20 then 5*x -3 + y else y) 0 list\n</code></pre>\n\n<p>AND after try end error i got the solution:</p>\n\n<pre><code>alternative :: [Integer] -&gt; Integer\nalternative = foldr (\\ x y -&gt; if x &lt; 20 then 5*x -3 + y else y) 0\n</code></pre>\n"}, {"tags": ["haskell", "generics", "abstract-syntax-tree", "tree-traversal"], "answers": [{"comments": [{"owner": {"reputation": 371, "user_id": 1883349, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/28793f65ef0df3da16e1c9ad1d793d60?s=128&d=identicon&r=PG", "display_name": "Ilya Chernov", "link": "https://stackoverflow.com/users/1883349/ilya-chernov"}, "edited": false, "score": 0, "creation_date": 1564816140, "post_id": 57336218, "comment_id": 101161620, "body": "Thank you for the answer! I&#39;ll look into that and using a Map instead of a list. However, in your example the B constructor has only two fields. In my case, numerous constructors have different amount of fields. Does it matter in this case?"}, {"owner": {"reputation": 371, "user_id": 1883349, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/28793f65ef0df3da16e1c9ad1d793d60?s=128&d=identicon&r=PG", "display_name": "Ilya Chernov", "link": "https://stackoverflow.com/users/1883349/ilya-chernov"}, "edited": false, "score": 0, "creation_date": 1564833759, "post_id": 57336218, "comment_id": 101164959, "body": "Also, could you please specify, which module&#39;s <code>everything</code> do you mean exactly? I tried a couple, neither have the type that matches with your example."}, {"owner": {"reputation": 371, "user_id": 1883349, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/28793f65ef0df3da16e1c9ad1d793d60?s=128&d=identicon&r=PG", "display_name": "Ilya Chernov", "link": "https://stackoverflow.com/users/1883349/ilya-chernov"}, "edited": false, "score": 0, "creation_date": 1564834124, "post_id": 57336218, "comment_id": 101165022, "body": "UPD: Looks like <code>Data.Generics.Schemes</code>, is that correct?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 371, "user_id": 1883349, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/28793f65ef0df3da16e1c9ad1d793d60?s=128&d=identicon&r=PG", "display_name": "Ilya Chernov", "link": "https://stackoverflow.com/users/1883349/ilya-chernov"}, "edited": false, "score": 1, "creation_date": 1564834503, "post_id": 57336218, "comment_id": 101165092, "body": "@IlyaChernov Correct."}, {"owner": {"reputation": 371, "user_id": 1883349, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/28793f65ef0df3da16e1c9ad1d793d60?s=128&d=identicon&r=PG", "display_name": "Ilya Chernov", "link": "https://stackoverflow.com/users/1883349/ilya-chernov"}, "edited": false, "score": 0, "creation_date": 1564835113, "post_id": 57336218, "comment_id": 101165216, "body": "Alright, I tested this approach against all the use cases I&#39;ve got so far and it works perfectly. Thank you very much! Next I&#39;ll try to employ <code>Map</code> instead of lists, as you suggest"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 5, "last_activity_date": 1564815917, "creation_date": 1564815917, "answer_id": 57336218, "question_id": 57336065, "link": "https://stackoverflow.com/questions/57336065/the-simplest-way-to-generically-traverse-a-tree-in-haskell/57336218#57336218", "title": "The simplest way to generically traverse a tree in haskell", "body": "<p>Not sure if it's the simplest, but:</p>\n\n<pre><code>&gt; data T = L | B T T deriving Data\n&gt; everything (++) (const [] `extQ` (\\x -&gt; [toConstr (x::T)])) (B L (B (B L L) L))\n[B,L,B,B,L,L,L]\n</code></pre>\n\n<p>Here <code>++</code> says how to combine the results from subterms.</p>\n\n<p><code>const []</code> is the base case for subterms who are not of type <code>T</code>. For those of type <code>T</code>, instead, we apply <code>\\x -&gt; [toConstr (x::T)]</code>.</p>\n\n<p>If you have multiple tree types, you'll need to extend the query using</p>\n\n<pre><code>const [] `extQ` (handleType1) `extQ` (handleType2) `extQ` ...\n</code></pre>\n\n<p>This is needed to identify the types for which we want to take the constructors. If there are a lot of types, probably this can be made shorter in some way.</p>\n\n<p>Note that the code above is not very efficient on large trees since using <code>++</code> in this way can lead to quadratic complexity. It would be better, performance wise, to return a <code>Data.Map.Map Constr Int</code>. (Even if we do need to define some <code>Ord Constr</code> for that)</p>\n"}, {"comments": [{"owner": {"reputation": 371, "user_id": 1883349, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/28793f65ef0df3da16e1c9ad1d793d60?s=128&d=identicon&r=PG", "display_name": "Ilya Chernov", "link": "https://stackoverflow.com/users/1883349/ilya-chernov"}, "edited": false, "score": 0, "creation_date": 1564850907, "post_id": 57338838, "comment_id": 101169017, "body": "This alternative is, of course, more concise. But will it work in my example, given that there are nodes of different types in my AST?"}, {"owner": {"reputation": 974, "user_id": 3829232, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3d2de116df80bc024b799e84dcdbc97?s=128&d=identicon&r=PG", "display_name": "soupi", "link": "https://stackoverflow.com/users/3829232/soupi"}, "reply_to_user": {"reputation": 371, "user_id": 1883349, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/28793f65ef0df3da16e1c9ad1d793d60?s=128&d=identicon&r=PG", "display_name": "Ilya Chernov", "link": "https://stackoverflow.com/users/1883349/ilya-chernov"}, "edited": false, "score": 0, "creation_date": 1564858689, "post_id": 57338838, "comment_id": 101170829, "body": "If I understand what you want correctly, <a href=\"https://hackage.haskell.org/package/uniplate-1.6.12/docs/Data-Generics-Uniplate-Operations.html#v:universeBi\" rel=\"nofollow noreferrer\"><code>universeBi</code></a> could be used to get all values of a specific type inside a different type."}, {"owner": {"reputation": 371, "user_id": 1883349, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/28793f65ef0df3da16e1c9ad1d793d60?s=128&d=identicon&r=PG", "display_name": "Ilya Chernov", "link": "https://stackoverflow.com/users/1883349/ilya-chernov"}, "edited": false, "score": 0, "creation_date": 1564863461, "post_id": 57338838, "comment_id": 101171934, "body": "I think it is easier to demonstrate what I wanted to do with my current implementation of it: <a href=\"https://github.com/ch3rn0v/dry/commit/8f4ea0bcc14087adbc9aa2c2223de437fcb5553b\" rel=\"nofollow noreferrer\">github.com/ch3rn0v/dry/commit/&hellip;</a> (particularly <code>countConstructorOccurrences</code>)"}], "tags": [], "owner": {"reputation": 974, "user_id": 3829232, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3d2de116df80bc024b799e84dcdbc97?s=128&d=identicon&r=PG", "display_name": "soupi", "link": "https://stackoverflow.com/users/3829232/soupi"}, "is_accepted": false, "score": 4, "last_activity_date": 1564839461, "creation_date": 1564839461, "answer_id": 57338838, "question_id": 57336065, "link": "https://stackoverflow.com/questions/57336065/the-simplest-way-to-generically-traverse-a-tree-in-haskell/57338838#57338838", "title": "The simplest way to generically traverse a tree in haskell", "body": "<p><a href=\"https://hackage.haskell.org/package/uniplate-1.6.12/docs/Data-Generics-Uniplate-Operations.html#v:universe\" rel=\"noreferrer\">universe</a> from the <code>Data.Generics.Uniplate.Data</code> module can give you a list of all the sub-trees of the same type. So using Ilya's example:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>data T = L | B T T deriving (Data, Show)\n\ntree :: T\ntree = B L (B (B L L) L)\n</code></pre>\n\n<pre class=\"lang-hs prettyprint-override\"><code>\u03bb&gt; import Data.Generics.Uniplate.Data\n\u03bb&gt; universe tree\n[B L (B (B L L) L),L,B (B L L) L,B L L,L,L,L]\n\u03bb&gt; fmap toConstr $ universe tree\n[B,L,B,B,L,L,L]\n</code></pre>\n"}], "owner": {"reputation": 371, "user_id": 1883349, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/28793f65ef0df3da16e1c9ad1d793d60?s=128&d=identicon&r=PG", "display_name": "Ilya Chernov", "link": "https://stackoverflow.com/users/1883349/ilya-chernov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 293, "favorite_count": 1, "accepted_answer_id": 57336218, "answer_count": 2, "score": 9, "last_activity_date": 1564839461, "creation_date": 1564814233, "question_id": 57336065, "link": "https://stackoverflow.com/questions/57336065/the-simplest-way-to-generically-traverse-a-tree-in-haskell", "title": "The simplest way to generically traverse a tree in haskell", "body": "<p>Suppose I used <code>language-javascript</code> library to build AST in Haskell. The AST has nodes of different types, and each node can have fields of those different types.\nAnd each type can have numerous constructors. (All the types instantiate <code>Data</code>, <code>Eq</code> and <code>Show</code>).</p>\n\n<p>I would like to count each type's constructor occurrence in the tree. I could use <code>toConstr</code> to get the constructor, and ideally I'd make a <code>Tree -&gt; [Constr]</code> function fisrt (then counting is easy).</p>\n\n<p>There are different ways to do that. Obviously pattern matching is too verbose (imagine around 3 types with 9-28 constructors).</p>\n\n<p>So I'd like to use a generic traversal, and I tried to find the solution in SYB library.</p>\n\n<ol>\n<li>There is an <code>everywhere</code> function, which doesn't suit my needs since I don't need a <code>Tree -&gt; Tree</code> transformation.</li>\n<li>There is <code>gmapQ</code>, which seems suitable in terms of its type, but as it turns out it's not recursive.</li>\n<li>The most viable option so far is <code>everywhereM</code>. It still does the useless transformation, but I can use a Writer to collect <code>toConstr</code> results. Still, this way doesn't really feel right.</li>\n</ol>\n\n<p>Is there an alternative that will not perform a useless (for this task) transformation and still deliver the list of constructors? (The order of their appearance in the tree doesn't matter for now)</p>\n"}, {"tags": ["haskell", "functional-programming", "state", "haskell-stack"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1564807116, "post_id": 57335386, "comment_id": 101160402, "body": "What packages are you using? What imports? What does <code>par</code> have to do with opening files and such? What does <code>par</code> have to do with the code you&#39;ve shown? What does the hanging <code>otherwise</code> represent, if anything?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1564807225, "post_id": 57335386, "comment_id": 101160415, "body": "If I had to <i>guess</i> (lots of guessing!), I would guess that <code>StateT</code> is the wrong tool for you, and that what you want is a <i>different</i> <code>MonadState</code> instance that does some sort of logging. But it&#39;s a bit hard to tell what&#39;s going on from what you&#39;ve given us."}, {"owner": {"reputation": 125, "user_id": 9982106, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-dO1cee-zNOU/AAAAAAAAAAI/AAAAAAAAAIc/Kt9AMjsNHeI/photo.jpg?sz=128", "display_name": "Aman Pandey", "link": "https://stackoverflow.com/users/9982106/aman-pandey"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1564813051, "post_id": 57335386, "comment_id": 101161122, "body": "Hi, I am using <code>par</code> for parallely open a file and write the states to it. I did this way  <code>haskell step        = &lt;opening file and writing to it&gt; `par` runUpdate (updateTest v Nothing) &gt;&gt; lift u &gt;&gt; runCampaign </code>  I did import <code>Control.Parallel</code>"}, {"owner": {"reputation": 125, "user_id": 9982106, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-dO1cee-zNOU/AAAAAAAAAAI/AAAAAAAAAIc/Kt9AMjsNHeI/photo.jpg?sz=128", "display_name": "Aman Pandey", "link": "https://stackoverflow.com/users/9982106/aman-pandey"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1564813361, "post_id": 57335386, "comment_id": 101161167, "body": "All I want to do is, write the variable <code>v</code> (which is being updated) into a file or the console."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1564817116, "post_id": 57335386, "comment_id": 101161801, "body": "That&#39;s not what <code>par</code> is for at all (also, <code>par</code> is semi-deprecated; things like <code>rpar</code> and <code>parEval</code> behave better). <code>parallel</code> is all about <i>pure</i> parallel computation. You&#39;re after *concurrency&quot;, so you need something like <code>forkIO</code>, or, better, some tool from the <code>async</code> package."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1564817293, "post_id": 57335386, "comment_id": 101161837, "body": "<code>StateT</code> really doesn&#39;t offer what you want. Your best bet might be to combine it with some sort of logging monad transformer and write a custom <code>MonadState</code> instance for the combination."}, {"owner": {"reputation": 125, "user_id": 9982106, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-dO1cee-zNOU/AAAAAAAAAAI/AAAAAAAAAIc/Kt9AMjsNHeI/photo.jpg?sz=128", "display_name": "Aman Pandey", "link": "https://stackoverflow.com/users/9982106/aman-pandey"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1564824609, "post_id": 57335386, "comment_id": 101163214, "body": "thanks for the great knowledge @dfeuer . Let me look more into the things, and find how can I make it the way I want."}], "answers": [{"comments": [{"owner": {"reputation": 125, "user_id": 9982106, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-dO1cee-zNOU/AAAAAAAAAAI/AAAAAAAAAIc/Kt9AMjsNHeI/photo.jpg?sz=128", "display_name": "Aman Pandey", "link": "https://stackoverflow.com/users/9982106/aman-pandey"}, "edited": false, "score": 0, "creation_date": 1565016492, "post_id": 57337181, "comment_id": 101208887, "body": "Hi, I&#39;m afraid I don&#39;t know that great haskell. But I&#39;ll try to fathom over the code you provided. Will mark the tick if it works for me. Many thanks."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 0, "last_activity_date": 1564861485, "last_edit_date": 1564861485, "creation_date": 1564825587, "answer_id": 57337181, "question_id": 57335386, "link": "https://stackoverflow.com/questions/57335386/catching-state-that-is-changed-by-execstatet/57337181#57337181", "title": "catching state that is changed by execStateT", "body": "<p>Here's one approach. Suppose you have a class for monads supporting logging of messages with a certain type (<code>MonadLogger</code> is one, but I don't know enough about it to use it here). I'll just use a hypothetical <code>CanLog</code> class. Now you can write</p>\n\n<pre><code>newtype LStateT s m a = LStateT\n  {runLStateT :: StateT s m a}\n  deriving (Functor, Applicative, Monad)\n\ninstance CanLog s m =&gt; MonadState s (LStateT s m) where\n   get = LStateT get\n   put x = LStateT $ do\n     lift $ -- Log the state transition\n     put x\n</code></pre>\n"}], "owner": {"reputation": 125, "user_id": 9982106, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-dO1cee-zNOU/AAAAAAAAAAI/AAAAAAAAAIc/Kt9AMjsNHeI/photo.jpg?sz=128", "display_name": "Aman Pandey", "link": "https://stackoverflow.com/users/9982106/aman-pandey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 103, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1564861485, "creation_date": 1564805374, "last_edit_date": 1564812978, "question_id": 57335386, "link": "https://stackoverflow.com/questions/57335386/catching-state-that-is-changed-by-execstatet", "title": "catching state that is changed by execStateT", "body": "<p>I am very new to Haskell. Recently, I had to work with it for my project.</p>\n\n<p>I have a certain code which is evaluating some state using <code>execStateT</code> and I want to catch each state change and return it.</p>\n\n<p>I have tried to understand what execStateT and the flow of the code, but I am failing at certain places, where I couldn't understand how to get the thing I really want.\nMaybe due to a somewhat RAW understanding of monads and other concepts, I am finding a need to change the whole structure of the code.</p>\n\n<p>In the upcoming code, I tried to use <code>par</code> to create a file and write the state of a variable into that file, and so it doesn't affect the actual work of the code. But it didn't create a file and write the inputs into it.</p>\n\n<p>I am facing the following code</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>campaign u v w ts d = let d' = fromMaybe defaultDict d in fmap (fromMaybe mempty) (view (hasLens . to knownCoverage)) &gt;&gt;= \\c -&gt; do\n  g &lt;- view (hasLens . to seed)\n  let g' = mkStdGen $ fromMaybe (d' ^. defSeed) g\n  execStateT (evalRandT runCampaign g') (Campaign ((,Open (-1)) &lt;$&gt; ts) c d') where\n    step        = runUpdate (updateTest v Nothing) &gt;&gt; lift u &gt;&gt; runCampaign\n    runCampaign = use (hasLens . tests . to (fmap snd)) &gt;&gt;= update\n    update c    = view hasLens &gt;&gt;= \\(CampaignConf tl q sl _ _) -&gt;\n      if | any (\\case Open  n   -&gt; n &lt; tl; _ -&gt; False) c -&gt; callseq v w q &gt;&gt; step\n         | any (\\case Large n _ -&gt; n &lt; sl; _ -&gt; False) c -&gt; step\n         | otherwise                                     -&gt; lift u\n</code></pre>\n\n<p>What I want here is find some way to look at the changes in variable <code>v</code>, to do my further work. This can be done either by writing a variable into a file or returning it to the console.</p>\n\n<p>Thanks for help!</p>\n\n<p><strong>[Edit 1]</strong></p>\n\n<p>Here are the imports I am making:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>import Control.Lens\nimport Control.Monad (liftM2, replicateM, when)\nimport Control.Monad.Catch (MonadCatch(..), MonadThrow(..))\nimport Control.Monad.Random.Strict (MonadRandom, RandT, evalRandT)\nimport Control.Monad.Reader.Class (MonadReader)\nimport Control.Monad.State.Strict (MonadState(..), StateT, evalStateT, execStateT)\nimport Control.Monad.Trans (lift)\nimport Control.Monad.Trans.Random.Strict (liftCatch)\nimport Data.Aeson (ToJSON(..), object)\nimport Data.Bool (bool)\nimport Data.Either (lefts)\nimport Data.Foldable (toList)\nimport Data.Map (Map, mapKeys, unionWith)\nimport Data.Maybe (fromMaybe, isNothing, maybeToList)\nimport Data.Ord (comparing)\nimport Data.Has (Has(..))\nimport Data.Set (Set, union)\nimport Data.Text (unpack)\nimport EVM\nimport EVM.Types (W256)\nimport Numeric (showHex)\nimport System.Random (mkStdGen)\n</code></pre>\n"}, {"tags": ["haskell", "recursion"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1564783026, "post_id": 57333852, "comment_id": 101157470, "body": "How is it supposed to call itself once no matter the input? If that is the case that call will result in a second call, a third one, etc."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1564783276, "post_id": 57333852, "comment_id": 101157531, "body": "The answer would have to be &quot;yes&quot;, because any function that calls itself, even (as is the case with most recursive functions) only for some inputs, is by definition recursive. However, as @WillemVanOnsem points out your situation is a logical contradiction."}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 1, "creation_date": 1564783406, "post_id": 57333852, "comment_id": 101157557, "body": "The input matters for your example. It doesn&#39;t always call itself."}, {"owner": {"reputation": 11, "user_id": 11876157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1700c8eee1b232ce965bee707dd04261?s=128&d=identicon&r=PG&f=1", "display_name": "adrien", "link": "https://stackoverflow.com/users/11876157/adrien"}, "edited": false, "score": 0, "creation_date": 1564783457, "post_id": 57333852, "comment_id": 101157570, "body": "I added an example in the question. In this case, join1 will call itself in the map but won\u2019t ever go more that one level below because it will be called either with [Just x] or [Nothing]"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1564783542, "post_id": 57333852, "comment_id": 101157588, "body": "@adrien: well then the input definitely matters. Furthermore this will in fact call <code>join1</code> multiple times: once per item in the list."}, {"owner": {"reputation": 11, "user_id": 11876157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1700c8eee1b232ce965bee707dd04261?s=128&d=identicon&r=PG&f=1", "display_name": "adrien", "link": "https://stackoverflow.com/users/11876157/adrien"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1564783735, "post_id": 57333852, "comment_id": 101157621, "body": "@willem I edited the question. The intent was that it doesn\u2019t go deeper than one level no matter the input."}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 4, "creation_date": 1564783955, "post_id": 57333852, "comment_id": 101157682, "body": "Is a loop that never iterates more than twice still considered a loop? I don&#39;t see why not. I think the real question is, <i>should</i> this function be recursive, or would it be better to write it in a way that isn&#39;t?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1564784175, "post_id": 57333852, "comment_id": 101157724, "body": "It does not make sense to call <code>join1</code> here and wrap values in lists. It is definitely more elegant and cleaner to make a helper function that unwraps the <code>Just</code>s. We can replace the above with <code>join1 = concatMap f where f (Just x) = [x]; f Nothing = []</code>."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1564784415, "post_id": 57333852, "comment_id": 101157767, "body": "If you want to implement a recursive function (as per homework, etc.). I suggest that you implement the recursion over the list itself, since a list in Haskell is a recursive data structure (and <code>map</code>, <code>concat</code>, are all implemented through recursion)."}, {"owner": {"reputation": 11, "user_id": 11876157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1700c8eee1b232ce965bee707dd04261?s=128&d=identicon&r=PG&f=1", "display_name": "adrien", "link": "https://stackoverflow.com/users/11876157/adrien"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1564784709, "post_id": 57333852, "comment_id": 101157814, "body": "@willem it\u2019s more like the opposite, implementing it without recursion. Your solution with the where is definitely more elegant, however I\u2019m wondering if the solution that I gave as an example can be considered recursive. Technically, as it will always call the termination condition (actually, even with a different input parameter type as it will be always called with a single element list), it doesn\u2019t enter a true recursion. But if we consider \u201ccalling itself\u201d as a recursion definition, it would be recursive."}], "answers": [{"comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1564785861, "post_id": 57334133, "comment_id": 101157992, "body": "of course, it <i>would</i> call itself (ad infinitum) at runtime in a non-lazy language"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1564786079, "post_id": 57334133, "comment_id": 101158035, "body": "@RobinZigmond To be pedantic, I think even -say- in JavaScript the above would work since I never <i>call</i> the function. But, in general, you are completely correct, since I could define <code>identity x = (\\_ -&gt; x) (identity x)</code> which would definitely not work in a strict language."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1564786503, "post_id": 57334133, "comment_id": 101158103, "body": "it seems you&#39;re right, I just tried in the browser console (Chrome) <code>function identity(x) {return (function(y) {return x;})(identity)}</code> and the function does indeed work fine as the identity function. I guess modern JS engines realise that since the inner function doesn&#39;t use its argument then there&#39;s no need to evaluate it - but I thought that the &quot;strict&quot; definition of &quot;strict evaluation&quot; means that all expressions need to be evaluated as soon as encountered, which would indeed lead to this function infinitely recursing."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1564786646, "post_id": 57334133, "comment_id": 101158116, "body": "and you&#39;re correct that replacing the <code>identity</code> with <code>identity(x)</code> does lead to &quot;infinite&quot; recursion (actually a call-stack error) - which I guess means I don&#39;t really understand JS&#39;s evaluation strategy, since if it really was a case of the engine figuring out that there was no need to evaluate the argument then this would cause no recursion either."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1564786819, "post_id": 57334133, "comment_id": 101158140, "body": "oh nevermind, I see the difference, <code>identity</code> is just a function value, which it doesn&#39;t really make sense to talk about &quot;evaluating&quot;. When you actually call that function, that&#39;s what forces the evaluation. (Sorry for missing the obvious, which you even explicitly stated by emphasising the word &quot;call&quot;)"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 5, "last_activity_date": 1564785526, "creation_date": 1564785526, "answer_id": 57334133, "question_id": 57333852, "link": "https://stackoverflow.com/questions/57333852/is-a-function-that-calls-itself-only-once-no-matter-the-input-recursive/57334133#57334133", "title": "Is a function that calls itself only once no matter the input recursive?", "body": "<p>Yes, it is recursive. The number of calls at runtime and the runtime recursion depth is irrelevant. A definition <code>x = expression</code> is said to be recursive if <code>x</code> appears in <code>expression</code>, referring to the <code>x</code> we are defining right now. </p>\n\n<p>Briefly put, \"recursiveness\" is a syntactic property of the definition, and does not consider the runtime behavior.</p>\n\n<p>As a silly example, this definition is recursive, even if it never calls itself at runtime. Even if it could trivially simplified into a non-recursive one.</p>\n\n<pre><code>identity :: a -&gt; a\nidentity x = (\\_ -&gt; x) identity\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 42360, "user_id": 389146, "user_type": "registered", "accept_rate": 25, "profile_image": "https://i.stack.imgur.com/zGYUq.jpg?s=128&g=1", "display_name": "Karl Bielefeldt", "link": "https://stackoverflow.com/users/389146/karl-bielefeldt"}, "is_accepted": false, "score": 0, "last_activity_date": 1564953866, "creation_date": 1564953866, "answer_id": 57350315, "question_id": 57333852, "link": "https://stackoverflow.com/questions/57333852/is-a-function-that-calls-itself-only-once-no-matter-the-input-recursive/57350315#57350315", "title": "Is a function that calls itself only once no matter the input recursive?", "body": "<p>You have underestimated the valid inputs for your function. What if you call it like:</p>\n\n<pre><code>join1 [Nothing, Just [Just 2, Nothing, Just 3], Just [Nothing, Just 4]]\n</code></pre>\n\n<p>Or going the other way, what if you call it like:</p>\n\n<pre><code>join1 [Nothing]\n</code></pre>\n\n<p>Non-infinite recursive function calls are always limited in depth. Calling itself once or even zero times for any specific input is perfectly valid.  In fact, it won't terminate if you don't allow input with zero recursive calls.</p>\n"}], "owner": {"reputation": 11, "user_id": 11876157, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1700c8eee1b232ce965bee707dd04261?s=128&d=identicon&r=PG&f=1", "display_name": "adrien", "link": "https://stackoverflow.com/users/11876157/adrien"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 250, "favorite_count": 0, "answer_count": 2, "score": -3, "last_activity_date": 1564953866, "creation_date": 1564782912, "last_edit_date": 1564783935, "question_id": 57333852, "link": "https://stackoverflow.com/questions/57333852/is-a-function-that-calls-itself-only-once-no-matter-the-input-recursive", "title": "Is a function that calls itself only once no matter the input recursive?", "body": "<p>Consider a function that does an operation and calls itself at most  once (not more than one \u201crecursion\u201d level) no matter what the input is. \nIs this function considered recursive?</p>\n\n<p>Example:</p>\n\n<pre><code>join1 :: [Maybe a] -&gt; [a]\njoin1 [Just x] = [x]\njoin1 [Nothing] = []\njoin1 (x) = concat (map join1 (map (\\k-&gt;[k]) x))\n</code></pre>\n\n<p>In this case, when calling:\n    Join1 [nothing, just 2, just 3,...]\nThe join1 function will be called on each element, entering immediately the termination condition </p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 4, "creation_date": 1564782915, "post_id": 57333788, "comment_id": 101157443, "body": "I&#39;ll leave others to comment on possible improvements to this (I don&#39;t find it very easy to understand what&#39;s going on at a glance), but it&#39;s definitely not very idiomatic in Haskell to return an <code>Int</code> and use a <code>-1</code> result as a flag to say the string wasn&#39;t found, even though this is done in many other languages. In Haskell it&#39;s most idiomatic to return a <code>Maybe Int</code>, either <code>Just</code> (index at which the substring is found) or <code>Nothing</code> if it&#39;s not found."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1564783218, "post_id": 57333788, "comment_id": 101157512, "body": "Usually one uses the Knuth-Morris-Pratt algorithm for substring search, since that one has linear time, instead of <i>m n</i> time like this one."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1564785889, "post_id": 57333788, "comment_id": 101157997, "body": "Minor style comment: <code>if x == y then prefix xs ys else False</code> is more commonly written as <code>x == y &amp;&amp; prefix xs ys</code>. Consider renaming <code>prefix</code> to <code>hasPrefix</code>, to clarify that the second argument is the prefix candidate. Alternatively, name it <code>isPrefix</code> and swap the arguments (the standard library does that)."}], "answers": [{"comments": [{"owner": {"reputation": 301, "user_id": 2773933, "user_type": "registered", "accept_rate": 50, "profile_image": "https://lh3.googleusercontent.com/-wD8zUbBMBVI/AAAAAAAAAAI/AAAAAAAAIGs/njtrAvsaRVk/photo.jpg?sz=128", "display_name": "presci", "link": "https://stackoverflow.com/users/2773933/presci"}, "edited": false, "score": 0, "creation_date": 1564787609, "post_id": 57334183, "comment_id": 101158275, "body": "Thank you for the input would try to implement using KMP algorithm"}, {"owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "edited": false, "score": 0, "creation_date": 1564793075, "post_id": 57334183, "comment_id": 101158982, "body": "Just a little correction. In Big 0 notation , it is just 0(n), no matter if you sum or multiply the n. It is lineal According the number n."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "edited": false, "score": 1, "creation_date": 1564793267, "post_id": 57334183, "comment_id": 101159008, "body": "@Dami&#225;nRafaelLattenero The use of big-O notation in this answer looks correct to me. See <a href=\"https://en.wikipedia.org/wiki/Big_O_notation#Multiple_variables\" rel=\"nofollow noreferrer\">big-O notation with multiple variables</a>."}, {"owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1564794124, "post_id": 57334183, "comment_id": 101159085, "body": "@DanielWagner yes but this is not the case, those relationships in the link are exponential"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "edited": false, "score": 0, "creation_date": 1564794597, "post_id": 57334183, "comment_id": 101159124, "body": "@Dami&#225;nRafaelLattenero So what? If there are multiple variables to consider, it is sensible to describe them all, whether they are linear or exponential or whatever else."}, {"owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1564794995, "post_id": 57334183, "comment_id": 101159160, "body": "@DanielWagner but it\u2019s a variation of O notation, <a href=\"https://cs.stackexchange.com/questions/7480/asymptotic-analysis-for-two-variables\" title=\"asymptotic analysis for two variables\">cs.stackexchange.com/questions/7480/&hellip;</a>, so..."}, {"owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1564804361, "post_id": 57334183, "comment_id": 101160112, "body": "@DanielWagner I haven\u2019t read this <a href=\"http://people.cs.ksu.edu/~rhowell/asymptotic.pdf\" rel=\"nofollow noreferrer\">people.cs.ksu.edu/~rhowell/asymptotic.pdf</a> about these new proposal of two variables in Big-O notation. After read it clarified a lot to me about the subject. Finally this question <a href=\"https://cs.stackexchange.com/questions/3149/what-is-the-meaning-of-omn\" title=\"what is the meaning of omn\">cs.stackexchange.com/questions/3149/what-is-the-meaning-of-o&zwnj;&#8203;mn</a> proves I was wrong, and you were right, thanks for the correction and the time. Listen to others and be humble helps to learn more."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 4, "last_activity_date": 1564785932, "creation_date": 1564785932, "answer_id": 57334183, "question_id": 57333788, "link": "https://stackoverflow.com/questions/57333788/is-there-a-better-way-of-writing-indexof-function/57334183#57334183", "title": "Is there a better way of writing indexof function?", "body": "<p>It looks more idiomatic to use the <code>patt</code>ern as first parameter, usually failure is not resolved with <code>-1</code> or some other value, but by using <code>Nothing</code> and thus using <code>Maybe Int</code> as return type.</p>\n\n<p>We can use a <code>foldr</code> pattern here, which makes it more elegant, and <code>Data.List</code> has an <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-List.html#v:isPrefixOf\" rel=\"nofollow noreferrer\"><strong><code>isPrefixOf :: Eq a =&gt; [a] -&gt; [a] -&gt; Bool</code></strong></a>:</p>\n\n<pre><code>import Data.List(isPrefixOf, tails)\n\nindexof :: Eq a =&gt; [a] -&gt; [a] -&gt; Maybe Int\nindexof patt = foldr helper Nothing . tails\n    where helper cur rec | isPrefixOf patt cur = Just 0\n                         | otherwise = fmap (1+) rec\n</code></pre>\n\n<p>It might however be better to implement the <a href=\"https://en.wikipedia.org/wiki/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm\" rel=\"nofollow noreferrer\"><em>Knuth-Morris-Pratt algorithm</em> [wiki]</a> since this will result in searching in <em>O(m + n)</em> with <em>m</em> the length of the pattern and <em>n</em> the length of the string. The current approach requires <em>O(m&times;n)</em>.</p>\n\n<blockquote>\n  <p>My second question is In my function is the <code>tails</code> function lazily evaluated?</p>\n</blockquote>\n\n<p><code>tails</code> is indeed lazily evaluated. The bottleneck is probably not in <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-List.html#v:tails\" rel=\"nofollow noreferrer\"><strong><code>tails :: [a] -&gt; [[a]]</code></strong></a> however, since <code>tails</code> runs in <em>O(n)</em> on an evaluated list, and requires <em>O(n)</em> memory as well, since the <code>tail</code> pointers are shared. It thus does not really constructs a new list per item, it simply each time points to the tail of the previous element.</p>\n"}, {"tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": false, "score": 2, "last_activity_date": 1564880573, "creation_date": 1564880573, "answer_id": 57343094, "question_id": 57333788, "link": "https://stackoverflow.com/questions/57333788/is-there-a-better-way-of-writing-indexof-function/57343094#57343094", "title": "Is there a better way of writing indexof function?", "body": "<p>Building on Willem's answer: usually keeping track of indices is done by zipping with <code>[0..]</code>.  The approach here is to find a list <code>[Maybe Int]</code> of possible matches, and then take the first one (which is all done lazily, of course, so we never actually compute the list of matches past the first <code>Just</code> occurrence).</p>\n\n<pre><code>indexOf :: (Eq a) =&gt; [a] -&gt; [a] -&gt; Maybe Int\nindexOf needle haystack = firstJust $ zipWith findmatch [0..] (tails haystack)\n    where\n    findmatch ix suffix\n       | needle `isPrefixOf` suffix -&gt; Just ix\n       | otherwise -&gt; Nothing\n\n    firstJust :: [Maybe a] -&gt; Maybe a\n    firstJust = getFirst . mconcat . map First\n       -- N.B. should really use `coerce` instead of `map First`\n</code></pre>\n\n<p>I find this fairly \"direct\", which I like.  We can cut the code size by being a bit cleverer:</p>\n\n<pre><code>indexOf needle haystack = listToMaybe . concat $ zipWith findmatch [0..] (tails haystack)\n    where\n    findmatch ix suffix = [ ix | needle `isPrefixOf` suffix ]\n</code></pre>\n\n<p>Essentially we are using zero- or one-element lists to simulate <code>Maybe</code>, and then using the slightly better library and notational support for lists to our advantage.  This also might fuse well... (I don't have a good intuition for that)</p>\n\n<p>But yes, if you want it to be fast, you should use KMP (on <code>Text</code>s instead of <code>String</code>s).  It's much more involved, though.</p>\n"}], "owner": {"reputation": 301, "user_id": 2773933, "user_type": "registered", "accept_rate": 50, "profile_image": "https://lh3.googleusercontent.com/-wD8zUbBMBVI/AAAAAAAAAAI/AAAAAAAAIGs/njtrAvsaRVk/photo.jpg?sz=128", "display_name": "presci", "link": "https://stackoverflow.com/users/2773933/presci"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 109, "favorite_count": 0, "accepted_answer_id": 57334183, "answer_count": 2, "score": 3, "last_activity_date": 1564880573, "creation_date": 1564782369, "question_id": 57333788, "link": "https://stackoverflow.com/questions/57333788/is-there-a-better-way-of-writing-indexof-function", "title": "Is there a better way of writing indexof function?", "body": "<p>I wrote a indexOf function in haskell. Is there a better way to write it?\nMy second question is\nIn my function is the tails function lazily evaluated? </p>\n\n<p>Following is my indexof function</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>import Data.List\nindexof :: String -&gt; String -&gt; Int\nindexof lat patt = helper (tails lat) 0\n        where helper [] _  = -1\n              helper (x:xs) a = if prefix x patt then a else helper xs (a + 1)\n\nprefix :: String -&gt; String -&gt; Bool\nprefix _ [] = True\nprefix [] _ = False\nprefix (x:xs) (y:ys)  = if x == y then prefix xs ys else False\n</code></pre>\n\n<p>This works as expected.</p>\n"}, {"tags": ["haskell", "biginteger"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 4, "creation_date": 1564772067, "post_id": 57332033, "comment_id": 101153999, "body": "Hint: <code>rem (a * b) c == rem (rem a c * rem b c) c</code>, so you do not need to use <code>Integer</code>s. In fact in a lot of programming contests/etc. this is something you can exploit to keep working with fixed-sized integers."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1564772269, "post_id": 57332033, "comment_id": 101154074, "body": "See for example: <a href=\"https://stackoverflow.com/questions/8496182/calculating-powa-b-mod-n\" title=\"calculating powa b mod n\">stackoverflow.com/questions/8496182/calculating-powa-b-mod-n</a>"}, {"owner": {"reputation": 3594, "user_id": 1293659, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/VwN8W.jpg?s=128&g=1", "display_name": "Johannes Egger", "link": "https://stackoverflow.com/users/1293659/johannes-egger"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1564772323, "post_id": 57332033, "comment_id": 101154093, "body": "Thanks. But because in every iteration I&#39;m selecting two digits (<code>recipeA</code> and <code>recipeB</code> are indices) I think I need to store the full number, right? Or how exactly would I apply your hint?"}], "answers": [{"comments": [{"owner": {"reputation": 3594, "user_id": 1293659, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/VwN8W.jpg?s=128&g=1", "display_name": "Johannes Egger", "link": "https://stackoverflow.com/users/1293659/johannes-egger"}, "edited": false, "score": 0, "creation_date": 1564782480, "post_id": 57333330, "comment_id": 101157363, "body": "You&#39;re totally right. I probably thought of <code>Integer</code>s as a compressed version of <code>[Int]</code>. In the meantime I rewrote my version using normal arrays (from <code>Data.Array</code>) but I roughly get the same result, which might be due to too much copying as you said."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 3594, "user_id": 1293659, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/VwN8W.jpg?s=128&g=1", "display_name": "Johannes Egger", "link": "https://stackoverflow.com/users/1293659/johannes-egger"}, "edited": false, "score": 0, "creation_date": 1564782833, "post_id": 57333330, "comment_id": 101157430, "body": "@JohannesEgger That seems plausible, as with <code>UArray</code> I can get up to 800,000 in (almost?) imperceptible time. In that case, it seems like the actual math operations aren&#39;t as expensive as the copying."}, {"owner": {"reputation": 3594, "user_id": 1293659, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/VwN8W.jpg?s=128&g=1", "display_name": "Johannes Egger", "link": "https://stackoverflow.com/users/1293659/johannes-egger"}, "edited": false, "score": 0, "creation_date": 1564824128, "post_id": 57333330, "comment_id": 101163120, "body": "Wow, I just implemented your fancy suggestion and I get numbers similar to yours (500,000 digits in less than 0.5 seconds). Thanks a lot \ud83d\udc4d."}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": true, "score": 2, "last_activity_date": 1564783196, "last_edit_date": 1564783196, "creation_date": 1564779311, "answer_id": 57333330, "question_id": 57332033, "link": "https://stackoverflow.com/questions/57332033/performance-of-integer-type-with-large-numbers/57333330#57333330", "title": "Performance of Integer type with large numbers", "body": "<p>I think using <code>Integer</code> for your recipes list in the first place is a big red flag. <code>Integer</code>s store numbers, but your problem does not call for a number. It calls for a list of digits. An <code>Integer</code>, whose first priority is to be a number, is basically \"compressed\": it's in binary, not decimal, and trying to extract a decimal digit from it means you have to do funky, nontrivial math, as others have said. Also, purity works against you, because each time you add new digits to your list, you end up copying the whole list. With problem sizes on the order of 100,000-1,000,000 digits (I was given a problem input of about 800,000), that's copying <code>Integer</code>s on the order of <code>log_(2^8)(10^(10^5)) = ~41000</code> bytes in size each time. This part also seems quadratic.</p>\n\n<p>I would recommend \"decompressing\" your list of digits. You can represent a single digit by 1 byte (which does waste a lot of space!)</p>\n\n<pre><code>import Data.Word\ntype Digit = <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Word.html#t:Word8\" rel=\"nofollow noreferrer\">Word8</a>\naddDigit :: Digit -> Digit -> (Digit, Digit)\naddDigit = _yourJob</code></pre>\n\n<p>You can implement the meat of the logic as a function using arrays. Yes, Haskell does have arrays, in the sense of contiguous hunks of memory with practically O(1) indexing. It's just that we like to find \"more functional\" ways to phrase a problem than with arrays. But, they're always there if you need them.</p>\n\n<pre><code>import Data.Array.Unboxed -- from the <a href=\"https://hackage.haskell.org/package/array-0.5.3.0\" rel=\"nofollow noreferrer\">array</a> package, which is a core library\nmakeRecipes ::\n  -- | Elf 1's starting score\n  Digit ->\n  -- | Elf 2's starting score\n  Digit ->\n  -- | Number of recipes to make\n  Int ->\n  -- | Scores of the recipes made, indices running from 0 upwards\n  <a href=\"https://hackage.haskell.org/package/array-0.5.3.0/docs/Data-Array-Unboxed.html#t:UArray\" rel=\"nofollow noreferrer\">UArray</a> Int Digit</code></pre>\n\n<p>The cool thing about arrays is that you can mutate them inside the <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-ST.html\" rel=\"nofollow noreferrer\"><code>ST</code></a> monad, while getting a pure result. Thus, this array does not suffer any copying, and the math involved for indexing it is minimal.</p>\n\n<pre><code>import Control.Monad.ST\nimport Data.Array.ST\nmakeRecipes elf1 elf2 need = <a href=\"https://hackage.haskell.org/package/array-0.5.3.0/docs/Data-Array-ST.html#v:runSTUArray\" rel=\"nofollow noreferrer\">runSTUArray</a> $ do\n  arr &lt;- <a href=\"https://hackage.haskell.org/package/array-0.5.3.0/docs/Data-Array-MArray.html#v:newArray_\" rel=\"nofollow noreferrer\">newArray_</a> (0, need)\n  <a href=\"https://hackage.haskell.org/package/array-0.5.3.0/docs/Data-Array-MArray.html#v:writeArray\" rel=\"nofollow noreferrer\">writeArray</a> arr 0 elf1\n  writeArray arr 1 elf2\n  loop arr 0 1 2\n  return arr\n  where\n    loop :: STUArray s Int Digit -&gt; Int -&gt; Int -&gt; Int -&gt; ST s ()\n    loop arr loc1 loc2 done = _yourJob</code></pre>\n\n<p><code>loop</code> is given the array, which is partially filled with <code>done</code> recipe scores, and the locations of the two elves, <code>loc1, loc2 &lt; done</code>. It should calculate the new recipes' scores with <code>addDigit</code> and <a href=\"https://hackage.haskell.org/package/array-0.5.3.0/docs/Data-Array-MArray.html#v:readArray\" rel=\"nofollow noreferrer\"><code>readArray</code></a> and add them to the array at the correct location with <code>writeArray</code>. If the array is full, it should terminate (it doesn't return anything useful). Otherwise, it should go on to figure out the new locations of the elves, and then recurse.</p>\n\n<p>You can then write a little adapter on top of <code>makeRecipes</code> to actually extract the last ten recipes, supply the correct inputs, etc. When I filled in all the blanks in the program, I got a runtime of .07s on my input (about 800,000) with <code>-O2</code>, and about 0.8s with <code>-O0</code>. It seems to take <code>O(n)</code> time in the input.</p>\n"}], "owner": {"reputation": 3594, "user_id": 1293659, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/VwN8W.jpg?s=128&g=1", "display_name": "Johannes Egger", "link": "https://stackoverflow.com/users/1293659/johannes-egger"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 132, "favorite_count": 0, "accepted_answer_id": 57333330, "answer_count": 1, "score": 2, "last_activity_date": 1564825777, "creation_date": 1564771954, "last_edit_date": 1564825777, "question_id": 57332033, "link": "https://stackoverflow.com/questions/57332033/performance-of-integer-type-with-large-numbers", "title": "Performance of Integer type with large numbers", "body": "<p>I'm trying to solve <a href=\"https://adventofcode.com/2018/day/14\" rel=\"nofollow noreferrer\">AdventOfCode 2018 day 14</a>. The task is roughly to create a number with a lot of digits by iteratively appending one or two digits based on two already existing digits. With Haskell I thought <code>Integer</code> might be a good fit for representing the huge number. I think my program is <em>correct</em>, at least it seems to work for the samples AoC provides. However I noticed that the performance of the program drops drastically when the number contains more than 10^4 digits (<code>recipeCount</code> in the appended program). I observed the following execution times when increasing the number up to the following number of digits:</p>\n\n<ul>\n<li>10000 digits: 0.314s</li>\n<li>20000 digits: 1.596s</li>\n<li>30000 digits: 4.306s</li>\n<li>40000 digits: 8.954s</li>\n</ul>\n\n<p>Looks like <code>O(n^2)</code> or worse, doesn't it?</p>\n\n<p>Why is that? The program only does <em>basic</em> calculations as far as I can tell.</p>\n\n<pre><code>import Data.Bool (bool)\n\nmain :: IO ()\nmain = print solve\n\nrecipeCount :: Int\nrecipeCount = 10000\n\nsolve :: Integer\nsolve = loop 0 1 37 2\n    where\n        loop recipeA recipeB recipes recipesLength\n            | recipesLength &gt;= recipeCount + 10 = recipes `rem` (10 ^ 10)\n            | otherwise =\n                let recipeAScore = digitAt (recipesLength - 1 - recipeA) recipes\n                    recipeBScore = digitAt (recipesLength - 1 - recipeB) recipes\n                    recipeSum = fromIntegral $ recipeAScore + recipeBScore\n                    recipeSumDigitCount = bool 2 1 $ recipeSum &lt; 10\n                    recipes' = recipes * (10 ^ recipeSumDigitCount) + recipeSum\n                    recipesLength' = recipesLength + recipeSumDigitCount\n                    recipeA' = (recipeA + recipeAScore + 1) `rem` recipesLength'\n                    recipeB' = (recipeB + recipeBScore + 1) `rem` recipesLength'\n                in loop recipeA' recipeB' recipes' recipesLength'\n\ndigitAt :: Int -&gt; Integer -&gt; Int\ndigitAt i number = fromIntegral $ number `quot` (10 ^ i) `rem` 10\n</code></pre>\n\n<p>P.S.: Because I'm very new to Haskell I also kindly appreciate feedback on the program itself (style, algorithm, etc.).</p>\n\n<p>EDIT:\nI found options to profile both versions of my program.\nBoth versions are compiled with <code>ghc -O2 -rtsopts ./Program.hs</code> and run with <code>./Program +RTS -sstderr</code>.</p>\n\n<p>The first version with integers produces the following output when generating 50,000 recipes:</p>\n\n<pre><code>   2,435,108,280 bytes allocated in the heap\n         886,656 bytes copied during GC\n          44,672 bytes maximum residency (2 sample(s))\n          29,056 bytes maximum slop\n               0 MB total memory in use (0 MB lost due to fragmentation)\n\n                                     Tot time (elapsed)  Avg pause  Max pause\n  Gen  0      1925 colls,     0 par    0.018s   0.017s     0.0000s    0.0001s\n  Gen  1         2 colls,     0 par    0.000s   0.000s     0.0001s    0.0001s\n\n  INIT    time    0.000s  (  0.000s elapsed)\n  MUT     time   15.208s  ( 15.225s elapsed)\n  GC      time    0.018s  (  0.017s elapsed)\n  EXIT    time    0.000s  (  0.000s elapsed)\n  Total   time   15.227s  ( 15.242s elapsed)\n\n  %GC     time       0.0%  (0.0% elapsed)\n\n  Alloc rate    160,115,875 bytes per MUT second\n\n  Productivity  99.9% of total user, 99.9% of total elapsed\n</code></pre>\n\n<p>The second version with mutable arrays produces the following output when generating ~500,000 recipes:</p>\n\n<pre><code>      93,437,744 bytes allocated in the heap\n          16,120 bytes copied during GC\n         538,408 bytes maximum residency (2 sample(s))\n          29,056 bytes maximum slop\n               0 MB total memory in use (0 MB lost due to fragmentation)\n\n                                     Tot time (elapsed)  Avg pause  Max pause\n  Gen  0        88 colls,     0 par    0.000s   0.000s     0.0000s    0.0000s\n  Gen  1         2 colls,     0 par    0.000s   0.000s     0.0001s    0.0001s\n\n  INIT    time    0.000s  (  0.000s elapsed)\n  MUT     time    0.021s  (  0.020s elapsed)\n  GC      time    0.000s  (  0.000s elapsed)\n  EXIT    time    0.000s  (  0.000s elapsed)\n  Total   time    0.021s  (  0.021s elapsed)\n\n  %GC     time       0.0%  (0.0% elapsed)\n\n  Alloc rate    4,552,375,284 bytes per MUT second\n\n  Productivity  97.0% of total user, 97.2% of total elapsed\n</code></pre>\n"}, {"tags": ["list", "haskell", "types", "interface", "algebraic-data-types"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1564768423, "post_id": 57329255, "comment_id": 101152679, "body": "Why do you need them in a list together? Are you sure you need that?"}, {"owner": {"reputation": 293, "user_id": 9715006, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eeb905e7fb1642526f814464beb1755c?s=128&d=identicon&r=PG&f=1", "display_name": "swaffelay", "link": "https://stackoverflow.com/users/9715006/swaffelay"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1564769232, "post_id": 57329255, "comment_id": 101152954, "body": "I want to make a 2 D grid full of these objects for a game"}], "answers": [{"tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": false, "score": 3, "last_activity_date": 1564759816, "last_edit_date": 1564759816, "creation_date": 1564759338, "answer_id": 57329413, "question_id": 57329255, "link": "https://stackoverflow.com/questions/57329255/same-interface-for-different-type-and-data/57329413#57329413", "title": "Same interface for different type and data", "body": "<p>You can rename your type with a constructor like:</p>\n\n<pre><code>data NewInterface = Source | Sink | T Tile | None\n</code></pre>\n\n<p>You cannot use Nothing because it is used by <code>Maybe</code> data type</p>\n\n<blockquote>\n  <p>Edit</p>\n</blockquote>\n\n<p>The <code>rotating</code> part is covered by the answer provided by @Bartek Banachewicz, I was about to edit but his answer covers all.</p>\n"}, {"tags": [], "owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "is_accepted": true, "score": 5, "last_activity_date": 1564760012, "last_edit_date": 1564760012, "creation_date": 1564759420, "answer_id": 57329430, "question_id": 57329255, "link": "https://stackoverflow.com/questions/57329255/same-interface-for-different-type-and-data/57329430#57329430", "title": "Same interface for different type and data", "body": "<p>First of, you only really have two type definitions here, since both <code>Source</code> and <code>Sink</code> are just weak aliases. You'd need to use <code>newtype</code> to differentiate between them:</p>\n\n<pre><code>newtype Source = Source (Coord, Bool)\nnewtype Sink = Sink (Coord, Bool)\n</code></pre>\n\n<p>Then, there's the <a href=\"https://lukepalmer.wordpress.com/2010/01/24/haskell-antipattern-existential-typeclass/\" rel=\"nofollow noreferrer\">Existential Typeclass Antipattern</a>:</p>\n\n<pre><code>class CommonInterface where\n    rotating :: Bool\n</code></pre>\n\n<p>And accompanying implementations:</p>\n\n<pre><code>instance CommonInterface Tile where\n    rotating (Tile _ x _) = x\n\ninstance CommonInterface Source where\n    rotating (Source (_, x) = x\n\ninstance CommonInterface Sink where\n    rotating (Sink (_, x) = x\n</code></pre>\n\n<p>And now for the \"meat\" of that antipattern, which makes it possible to create a \"heterogenous\" collection:</p>\n\n<pre><code>newtype Anything = forall a. CommonInterface a =&gt; Anything a\n\ninstance CommonInterface Anything where\n    rotating (Anything a) = rotating a\n</code></pre>\n\n<p>Of course, you should, at this point, read the linked article and understand why this approach isn't exactly the best. That being said, for an antipattern it seems to work quite well.</p>\n\n<hr>\n\n<p>Of course if you want to simply have one datatype that encompasses all of the above, that's far easier:</p>\n\n<pre><code>data Anything = AnythingSink Sink | AnythingSource Source | AnythingTile Tile | AnythingNothing\n</code></pre>\n\n<p>The implementation of <code>rotating</code> then simply has to be done for all possibilities:</p>\n\n<pre><code>rotating :: Anything -&gt; Bool\nrotating (AnythingSink ...) = ...\nrotating (AnythingTile ...) = ...\n</code></pre>\n\n<p>This is far simpler because it requires <em>all possibilities to be known beforehand</em>; in the existential approach, you can add more types fulfilling <code>CommonInterface</code> without prior knowledge about them.</p>\n"}, {"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 3, "last_activity_date": 1564769695, "creation_date": 1564769695, "answer_id": 57331624, "question_id": 57329255, "link": "https://stackoverflow.com/questions/57329255/same-interface-for-different-type-and-data/57331624#57331624", "title": "Same interface for different type and data", "body": "<p>I think I would do it this way, factoring out the parts of the data that are special to each kind of entity from the common parts:</p>\n\n<pre><code>data Entity\n    = Tile Bool -- the wiel field\n    | Source\n    | Sink\n\ndata LocatedEntity = LocatedEntity\n    { location :: Coord\n    , fixed :: Bool\n    , rotating :: Bool\n    , entity :: Entity\n    }\n</code></pre>\n\n<p>No fancy existential types needed (plus you get to avoid their antipattern!), no big case analysis needed at every call-site just to pull out the common fields. Nice and lightweight.</p>\n\n<p>If for some application you need it to be possible for there to be no <code>LocatedEntity</code>, you can use <code>Maybe LocatedEntity</code> to model that as needed.</p>\n"}], "owner": {"reputation": 293, "user_id": 9715006, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eeb905e7fb1642526f814464beb1755c?s=128&d=identicon&r=PG&f=1", "display_name": "swaffelay", "link": "https://stackoverflow.com/users/9715006/swaffelay"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "accepted_answer_id": 57329430, "answer_count": 3, "score": 1, "last_activity_date": 1565439108, "creation_date": 1564758793, "last_edit_date": 1565439108, "question_id": 57329255, "link": "https://stackoverflow.com/questions/57329255/same-interface-for-different-type-and-data", "title": "Same interface for different type and data", "body": "<p>So I would like to make some sort of interface for my different <code>type</code> and <code>data</code> objects. So I have</p>\n\n<pre><code>data Tile = Tile {\n  coord :: Coord,\n  fixed :: Bool,\n  wiel :: Bool\n  } deriving (Show)\n\n\ntype Source = (Coord , Bool)\ntype Sink = (Coord , Bool)\n</code></pre>\n\n<p>And would like to make a global interface for all of these, so I want the interface to have another field with <code>rotating :: Bool</code> and then the <code>Tile</code> or the <code>Source</code> or the <code>Sink</code>.</p>\n\n<p>Something like if they where to all implement the same interface so they have that extra field. This way I could also put them in a list together which I also need. (Maybe even a <code>Nothing</code> option just in case there isn't anything there when I traverse the list).</p>\n\n<p>I tried first doing it without the extra field like this</p>\n\n<pre><code>data newInterface = Source | Sink | Tile | Nothing\n</code></pre>\n\n<p>However this doesn't work since I get the error <em>\" <code>Tile</code> defined multiple times \"</em>. </p>\n\n<p>How would I be able to solve this ? Thx</p>\n"}, {"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1564747051, "post_id": 57325945, "comment_id": 101141880, "body": "I find it a bid weird that you say you want your type signature to be total, without having a definition for what <i>total</i> means (to you)."}, {"owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1564747506, "post_id": 57325945, "comment_id": 101142107, "body": "I think for it to be total, it must not be a partial function, but I am not entirely sure about this."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1564747593, "post_id": 57325945, "comment_id": 101142153, "body": "but a partial function deals with how it processes values, not types."}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 2, "creation_date": 1564857284, "post_id": 57325945, "comment_id": 101170486, "body": "Totality is a property of <i>functions</i>, not type signatures\u2014\u201cit\u201d refers to <code>evalA</code>, not its type. However, if a type signature is not a <i>tautology</i> when interpreted as a logical statement (Curry\u2013Howard) then it\u2019s <i>necessarily partial</i>, so you could interpret \u201ctotal\u201d of a type signature to mean that it <i>is</i> a tautology, i.e. not necessarily partial. For example, <code>head :: [a] -&gt; a</code> is necessarily partial because the empty list is a counterexample: <code>[a] -&gt; a</code> (by isomorphism)\u2192 <code>Either () [a] -&gt; a</code> \u2192 <code>(() -&gt; a, [a] -&gt; a)</code> \u2192 <code>Void</code>, so you could say <code>head</code> has a \u201cpartial type\u201d in a certain sense."}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 4, "last_activity_date": 1564774138, "last_edit_date": 1564774138, "creation_date": 1564747230, "answer_id": 57326109, "question_id": 57325945, "link": "https://stackoverflow.com/questions/57325945/haskell-what-does-it-mean-for-a-type-signature-to-be-total/57326109#57326109", "title": "Haskell: What does it mean for a type signature to be total?", "body": "<p>A type signature can not be \"total\" or \"non-total\". At best, with such terminology someone could refer to types claiming that a result is always returned (except for non termination):</p>\n\n<pre><code>foo :: .. -&gt; .. -&gt; Result\n</code></pre>\n\n<p>in contrast to types wrapping the result in <code>Maybe</code> or something similar to denote that the result might not be there, after all:</p>\n\n<pre><code>foo :: .. -&gt; .. -&gt; Maybe Result\n</code></pre>\n\n<p>This would be a stretch of terminology, and I would not use it in that way.</p>\n\n<p>Anyway, the <code>Exp a</code> type you mention is a GADT, which is a rather advanced feature of Haskell. It allows you to define</p>\n\n<pre><code>evalA :: Exp a -&gt; a\nevalA (Plus a b) = evalA a + evalA b\nevalA (Const a) = a \n-- you should cover the other cases as well here\n</code></pre>\n\n<p>without requiring you to wrap the return type using <code>Maybe</code> or something similar, as it would happen with regular algebraic types.</p>\n\n<hr>\n\n<p>Let's consider a simpler example: a language with integer and boolean literals, only.</p>\n\n<pre><code>data Exp where\n  I :: Int -&gt; Exp\n  B :: Bool -&gt; Exp\n</code></pre>\n\n<p>Now, it is impossible to define, say, <code>semExpInt :: Exp -&gt; Int</code> without using some ugly trick:</p>\n\n<pre><code>semExpInt :: Exp -&gt; Int\nsemExpInt (I i) = i                      -- OK!\nsemExpInt (B b) = error \"not an Int!\"    -- ugly!\n</code></pre>\n\n<p>In the latter case, we need to raise a runtime error, fail to terminate, or return an arbitrary integer. Essentially, we find a \"runtime type error\" inside <code>Exp</code>, which represents a value of the wrong type (<code>Bool</code> instead of <code>Int</code>).</p>\n\n<p>If we try <code>semExpBool :: Exp -&gt; Bool</code> we have a similar problem.</p>\n\n<p>We could, and should, report the error using <code>Maybe</code>:</p>\n\n<pre><code>semExpInt :: Exp -&gt; Maybe Int\nsemExpInt (I i) = Just i   -- OK\nsemExpInt (B b) = Nothing  -- OK, no result here\n</code></pre>\n\n<p>This is fine, but inconvenient. We are still reporting \"runtime errors in the expression\" in some way (<code>Nothing</code>). It would be better if we could avoid that, by taking as input an expression which we know would be of the right type. With GADTs we can write</p>\n\n<pre><code>data Exp t where\n  I :: Int -&gt; Exp Int\n  B :: Bool -&gt; Exp Bool\n\nsemExpInt :: Exp Int -&gt; Int\nsemExpInt (I i) = i     -- no other cases to handle!\n\nsemExpBool :: Exp Bool -&gt; Bool\nsemExpBool (B b) = b     -- no other cases to handle!\n</code></pre>\n\n<p>Or, even better, we can joint the two functions in a single one:</p>\n\n<pre><code>semExp :: Exp t -&gt; t\nsemExp (I i) = i\nsemExp (B b) = b\n</code></pre>\n\n<p>Here, we claim that the result type is precisely the type <code>t</code> which is carried by the input type <code>Exp t</code>. So, this function will return an <code>Int</code>, or a <code>Bool</code>, depending on the input type.</p>\n\n<p>this is even more convenient when adding operators to the expression. For instance,</p>\n\n<pre><code>data Exp where\n  I :: Int -&gt; Exp\n  B :: Bool -&gt; Exp\n  And :: Exp -&gt; Exp -&gt; Exp\n</code></pre>\n\n<p>allows <code>And (B True) (B False)</code>, which is nice, but also allows <code>And (I 2) (B False)</code> which is nonsensical, since <code>And</code> should be used on booleans, only. \nThis would have to be handled in the semantics:</p>\n\n<pre><code>semExpBool :: Exp -&gt; Maybe Bool\nsemExpBool (I i) = Nothing\nsemExpBool (B b) = Just b\nsemExpBool (And e1 e2) = case (semExpBool e1, semExpBool e3) of\n   (Just b1, Just b2) -&gt; Just (b1 &amp;&amp; b2)\n   _                  -&gt; Nothing          -- some arg was not a bool!\n</code></pre>\n\n<p>With GADTs, instead, we can express this:</p>\n\n<pre><code>data Exp t where\n  I :: Int -&gt; Exp Int\n  B :: Bool -&gt; Exp Bool\n  And :: Exp Bool -&gt; Exp Bool -&gt; Exp Bool\n</code></pre>\n\n<p>Now, <code>And (I 2) (B False)</code> is disallowed since <code>And</code> requires a <code>Exp Bool</code> argument, and <code>I 2</code> is not such.</p>\n"}, {"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1564757779, "post_id": 57328749, "comment_id": 101147961, "body": "I now understand what the actual question was: find the signature to make this definition (taken exactly as is) total. This makes a lot of sense."}, {"owner": {"reputation": 1359, "user_id": 3346496, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2b1230f0444613f0e8d74e5a71439d1e?s=128&d=identicon&r=PG&f=1", "display_name": "monocell", "link": "https://stackoverflow.com/users/3346496/monocell"}, "edited": false, "score": 0, "creation_date": 1564757974, "post_id": 57328749, "comment_id": 101148074, "body": "Would <code>evalA :: Exp Bool -&gt; Bool</code> force us to implement all of the cases, including <code>Plus</code>, given the presence of <code>Greater</code> ?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 1359, "user_id": 3346496, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2b1230f0444613f0e8d74e5a71439d1e?s=128&d=identicon&r=PG&f=1", "display_name": "monocell", "link": "https://stackoverflow.com/users/3346496/monocell"}, "edited": false, "score": 2, "creation_date": 1564758598, "post_id": 57328749, "comment_id": 101148380, "body": "@monocell <code>evalB :: Exp Bool -&gt; Bool</code> would only need to consider the <code>Not</code>, <code>And</code>, and <code>Greater</code> cases. But it would need to call something else -- perhaps <code>evalA</code> -- to decide what to do with the <code>Exp Int</code>s that it could not recurse on in the <code>Greater</code> case!"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 1359, "user_id": 3346496, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2b1230f0444613f0e8d74e5a71439d1e?s=128&d=identicon&r=PG&f=1", "display_name": "monocell", "link": "https://stackoverflow.com/users/3346496/monocell"}, "edited": false, "score": 1, "creation_date": 1564759010, "post_id": 57328749, "comment_id": 101148625, "body": "@monocell (Slight correction: <code>evalB</code> would also need to consider the <code>Const</code> case, of course. It would only be permitted to avoid considering the <code>Plus</code> case, which is the only one that evidently cannot produce the type <code>Exp Bool</code>.)"}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 3, "creation_date": 1564766829, "post_id": 57328749, "comment_id": 101152078, "body": "Also worth pointing out, if you are compiling with <code>-Wall</code> (which you should be!) so that warnings are given for incomplete patterns, using the type signature <code>evalA :: Exp a  -&gt; a</code> would generate warnings about non-exhaustive pattern matches, but with <code>evalA :: Exp Int -&gt; Int</code>, <b>no warning is generated.</b>  In fact, if you tried to handle the &quot;missing cases&quot;, you&#39;d get an additional warning that the pattern is redundant.  So, GHC understands this notion of totality and can help warn you when you haven&#39;t achieved it."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1564785169, "post_id": 57328749, "comment_id": 101157876, "body": "As far as I can tell, the typical &quot;modern&quot; view is that it doesn&#39;t make sense to talk about something even being a &quot;function&quot; without a type."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 5, "last_activity_date": 1564756968, "creation_date": 1564756968, "answer_id": 57328749, "question_id": 57325945, "link": "https://stackoverflow.com/questions/57325945/haskell-what-does-it-mean-for-a-type-signature-to-be-total/57328749#57328749", "title": "Haskell: What does it mean for a type signature to be total?", "body": "<p>The other answer explains that \"total\" is a property of functions, not type signatures; then goes on to say that if you want your function to be total, you must cover the other constructors of the GADT. But this is not the whole story.</p>\n\n<p>The true story is that, for languages with advanced type systems like Haskell, \"total\" is a <em>relation</em> between functions and type signatures. So it is true that it is not a property of type signatures (it doesn't make sense to say, \"this type signature is total\"); but it is also not the case that it is a property of functions (it doesn't make sense to say, in isolation, \"this function is total\"!<sup>1</sup>).</p>\n\n<p>So now, let's return to your question. You say:</p>\n\n<pre><code>data Exp a where\n Plus :: Exp Int -&gt; Exp Int -&gt; Exp Int\n Const :: (Show a) =&gt; a -&gt; Exp a \n Not :: Exp Bool -&gt; Exp Bool\n And :: Exp Bool -&gt; Exp Bool -&gt; Exp Bool\n Greater :: Exp Int -&gt; Exp Int -&gt; Exp Bool\n\nevalA (Plus a b) = evalA a + evalA b\nevalA (Const a) = a \n</code></pre>\n\n<p>Given our updated understanding, we can now ask a new and better, more precise question, which is: does there exist a type signature for <code>evalA</code> that, when paired with this implementation, causes the pairing to be total? The answer to this better question is <em>yes</em>, contrary to the claim in the other answer that says you must implement more cases of <code>evalA</code>. In particular, if we write</p>\n\n<pre><code>evalA :: Exp Int -&gt; Int\nevalA (Plus a b) = evalA a + evalA b\nevalA (Const a) = a\n</code></pre>\n\n<p>then any well-typed application of <code>evalA</code> to a finite input will, in finite time, produce a non-bottom answer. (This is one sensible meaning of \"total\" for functions.)</p>\n\n<p>Why may we ignore the <code>Not</code>, <code>And</code>, and <code>Greater</code> cases? Why, because we have demanded that the input have type <code>Exp Int</code>, and any well-typed term whose outer constructor is <code>Not</code>, <code>And</code>, or <code>Greater</code> will actually have type <code>Exp Bool</code> -- and so the application would not be well typed. So this can't crash with an inexhaustive pattern match error, as one might worry!</p>\n\n<p><sup>1</sup>One <em>could</em> say \"this function, given any type signature which type-checks, is total\". Indeed, it is common to say \"this function is total\" as a convenient shorthand to mean that. The other answer shows how to make your function total no matter what (correct) type signature is given.</p>\n"}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 150, "favorite_count": 0, "accepted_answer_id": 57326109, "answer_count": 2, "score": 1, "last_activity_date": 1564774138, "creation_date": 1564746618, "question_id": 57325945, "link": "https://stackoverflow.com/questions/57325945/haskell-what-does-it-mean-for-a-type-signature-to-be-total", "title": "Haskell: What does it mean for a type signature to be total?", "body": "<p>I have the following code, which outlines a language of boolean and arithmetic expressions:</p>\n\n<pre><code>data Exp a where\n Plus :: Exp Int -&gt; Exp Int -&gt; Exp Int\n Const :: (Show a) =&gt; a -&gt; Exp a \n Not :: Exp Bool -&gt; Exp Bool\n And :: Exp Bool -&gt; Exp Bool -&gt; Exp Bool\n Greater :: Exp Int -&gt; Exp Int -&gt; Exp Bool\n</code></pre>\n\n<p>Below is code for a function that evaluates only arithmetic expressions:</p>\n\n<pre><code>evalA (Plus a b) = evalA a + evalA b\nevalA (Const a) = a \n</code></pre>\n\n<p>I am trying to figure out what type signature should be given to <code>evalA</code> such that it is total. However, I don't know what it means for for a type signature to be total. Any insights are appreciated.</p>\n"}, {"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1564745998, "post_id": 57325751, "comment_id": 101141390, "body": "There are no three types, since <code>Show</code> covers an infinite set of types. The wording  &quot;<i>or a value of any type implementing Show</i>&quot; is also not strictly correct, it should be <i>or any type implementing Show</i>"}, {"owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1564746088, "post_id": 57325751, "comment_id": 101141433, "body": "So would it be correct to say that the evaluation function can return any type?"}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 1, "creation_date": 1564746341, "post_id": 57325751, "comment_id": 101141562, "body": "@ceno980 it can return any type that implements <code>Show</code>, more accurately."}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 0, "creation_date": 1564749707, "post_id": 57325751, "comment_id": 101143260, "body": "In order to evaluate <code>eval</code>, you need a value of type <code>Exp a</code>. Such value can be created by one of the five constructors, and <code>Const</code> allows any type implementing <code>Show</code> to be boxed there."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1564756858, "post_id": 57325751, "comment_id": 101147453, "body": "Given the type <code>Exp a -&gt; a</code>, it is possible <i>if the definition of <code>Exp</code> changes</i>. Do so would increase the number of values belonging to the type <code>Exp a -&gt; a</code>. You are basically asking for the union of <code>image(f)</code> for all possible functions <code>f :: Exp a -&gt; a</code>."}], "answers": [{"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 3, "last_activity_date": 1564758151, "creation_date": 1564758151, "answer_id": 57329076, "question_id": 57325751, "link": "https://stackoverflow.com/questions/57325751/haskell-understanding-generalised-algebraic-data-types/57329076#57329076", "title": "Haskell: Understanding generalised algebraic data types", "body": "<p><code>Exp a -&gt; a</code> is a type that could have <em>many</em> possible functions. For example, a valid function that probably <em>isn't</em> the one you are thinking of as \"the\" <code>eval</code> function is</p>\n\n<pre><code>foo :: Exp a -&gt; a\nfoo (Plus _ _) = 3\nfoo (Const x) = x\nfoo (Not _) = True\nfoo (And _ _) = True\nfoo (Greater _ _) = True\n</code></pre>\n\n<p>The <em>image</em> of a function is the set of values it can return. This example demonstrates that the function <code>foo</code> and the <code>eval</code> you are expecting have different images, despite having the same return type <code>forall a. a</code>.</p>\n\n<p>You are asking, in essence, what the <em>union</em> of all possible images of functions of type <code>Exp a -&gt; a</code> is. This depends greatly on the actual definition of <code>Exp</code>. As currently defined, that would be the union of <code>Int</code>, <code>Bool</code>, and <code>Show a =&gt; a</code>.</p>\n\n<p><code>Exp</code> the type constructor, though, is capable of defining <em>uninhabited</em> types. The type <code>Exp (Int -&gt; Int)</code> exists, even though you haven't defined a constructor which can create values of that type. Since you can't provide a value of type <code>Exp (Int -&gt; Int)</code> for any potential <code>eval</code> function, it can't affect the image of any such function, either.</p>\n\n<p>Changing the definition of <code>Exp</code> to include such a constructor would increase the set of values that could be passed to a function of type <code>Exp a -&gt; a</code>, thus increase the set of values that could occur in the image of such a function.</p>\n"}, {"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": false, "score": 1, "last_activity_date": 1564769148, "creation_date": 1564769148, "answer_id": 57331517, "question_id": 57325751, "link": "https://stackoverflow.com/questions/57325751/haskell-understanding-generalised-algebraic-data-types/57331517#57331517", "title": "Haskell: Understanding generalised algebraic data types", "body": "<p>To be clear, given your definition of <code>Exp</code> above, the answer is \"yes\":  any function with type signature <code>eval :: Exp a -&gt; a</code> can only return a (defined) value of type <code>Int</code>, <code>Bool</code>, or some other type with a <code>Show</code> instance.  Because any type (of kind <code>*</code>) can be given a <code>Show</code> instance, that technically means that <code>eval</code> can return any type, but within a particular program that has a fixed set of <code>Show</code> instances, <code>eval</code> will be limited to returning values from this set of types.</p>\n\n<p>You can see that this must be true as follows.  Suppose that <code>eval e</code> returned a value of some fixed type <code>t</code> for some expression <code>e</code>.  By the type signature of <code>eval</code>, that would imply that <code>e</code> must have type <code>Exp t</code>.  However, data type declarations are \"closed\" meaning that the set of constructors given in the <code>data Exp a</code> declaration is exhaustive, and they represent the only methods of constructing a (defined) value of type <code>Exp a</code>.  It's clear from the set of constructors that the only possible values of type <code>Exp a</code> are those that appear in the rightmost positions of the constructors' signatures:  <code>Exp Int</code>, <code>Exp Bool</code>, and <code>Exp a</code> with the constraint <code>Show a</code>.  Therefore, these are the only types possible for <code>e</code> implying that <code>t</code> must be <code>Int</code>, <code>Bool</code>, or some other <code>a</code> satisfying the constraint <code>Show a</code>.</p>\n\n<p>As always in reasoning about Haskell types, we have to be a little bit careful in considering undefined/bottom values.  If you consider \"returning an undefined value\" to be meaningful, then, indeed, <code>eval</code> can \"return\" an undefined value of any type, even one without a <code>Show</code> instance.  For example, the following will typecheck:</p>\n\n<pre><code>stupid :: Exp (Int -&gt; Int)\nstupid = eval undefined\n</code></pre>\n\n<p>However, if your reason for asking the question is to determine whether you'd ever be in a position where the expression <code>eval e</code> might unexpectedly have a type other than <code>Int</code>, <code>Bool</code>, or some <code>Show a =&gt; a</code> that you would somehow have to handle, then no.  The form of the GADT places limits on the possible types <code>a</code> in the signature <code>eval :: Exp a -&gt; a</code>.</p>\n"}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 81, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1564769148, "creation_date": 1564745827, "last_edit_date": 1564745875, "question_id": 57325751, "link": "https://stackoverflow.com/questions/57325751/haskell-understanding-generalised-algebraic-data-types", "title": "Haskell: Understanding generalised algebraic data types", "body": "<p>I have the following code, which outlines a language of boolean and arithmetic expressions:</p>\n\n<pre><code>data Exp a where\n     Plus :: Exp Int -&gt; Exp Int -&gt; Exp Int\n     Const :: (Show a) =&gt; a -&gt; Exp a \n     Not :: Exp Bool -&gt; Exp Bool\n     And :: Exp Bool -&gt; Exp Bool -&gt; Exp Bool\n     Greater :: Exp Int -&gt; Exp Int -&gt; Exp Bool\n</code></pre>\n\n<p>The evaluation function for the above language has the following type:</p>\n\n<pre><code>eval :: Exp a -&gt; a\n</code></pre>\n\n<p>I am trying to understand what are the possible types the <code>eval</code> function can return. The above code uses GADTs which enable the type Exp a to be defined in terms of the type signatures of its constructors.\nThe return type of the constructors is not always Exp a. I believe that the types <code>eval</code> can return include Int, Bool, or a value of any type implementing Show. However, is it possible for <code>eval</code> to return any other type besides the three I mentioned previously (since the return type of the function is <code>a</code>)? Any insights are appreciated.</p>\n"}, {"tags": ["haskell", "bifunctor"], "comments": [{"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 1, "creation_date": 1564753648, "post_id": 57325619, "comment_id": 101145520, "body": "Just because it type checks doesn&#39;t mean it&#39;s executed. <code>safeReadFile f</code> is probably returning an error value and short-circuiting the computation."}, {"owner": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "reply_to_user": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 0, "creation_date": 1564754578, "post_id": 57325619, "comment_id": 101146086, "body": "Yeah... you&#39;re right. In hindsight that&#39;s obvious. Post it as an answer and I&#39;ll be happy to accept it :D"}], "answers": [{"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 1, "last_activity_date": 1564764559, "creation_date": 1564764559, "answer_id": 57330659, "question_id": 57325619, "link": "https://stackoverflow.com/questions/57325619/why-doesnt-first-from-data-bifunctor-transform-this-value/57330659#57330659", "title": "Why doesn&#39;t `first` from Data.Bifunctor transform this value", "body": "<p>You've written</p>\n\n<pre><code>safeDecodeJSONFile t f = do\n  contents &lt;- safeReadFile f\n  tryRight $ ...\n</code></pre>\n\n<p>The <code>Monad</code> instance for <code>ExceptT</code> gives up as soon as it hits <code>Left</code>, returning exactly that. So the <code>tryRight ...</code> never happens. You need to handle the <code>Left</code> case explicitly, perhaps using <code>catchError</code>.</p>\n\n<p>While we're at it, there's still a problem. You write</p>\n\n<pre><code>safeReadFile :: FilePath -&gt; ExceptT Text IO Text\nsafeReadFile p = (lift $ doesFileExist p) &gt;&gt;= bool (throwError \"File does not exist\") (lift $ pack &lt;$&gt; readFile p)\n</code></pre>\n\n<p>Unfortunately, this isn't reliable. First off, the file not existing is only <em>one</em> reason reading it can fail--there could be permission errors, network problems for networked filesystems, device errors if the file isn't a regular file, etc. Second, someone else could <em>delete</em> the file between the time you check its existence and the time you try to read it. The usual advice when trying to deal with files is <em>not</em> to check first. Just read the file and catch any exceptions using <code>catch</code> or similar in <code>Control.Exception</code> or wrappers around them </p>\n"}], "owner": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "accepted_answer_id": 57330659, "answer_count": 1, "score": 2, "last_activity_date": 1564764601, "creation_date": 1564745331, "last_edit_date": 1564745907, "question_id": 57325619, "link": "https://stackoverflow.com/questions/57325619/why-doesnt-first-from-data-bifunctor-transform-this-value", "title": "Why doesn&#39;t `first` from Data.Bifunctor transform this value", "body": "<p>In the following:</p>\n\n<pre><code>import Data.Bifunctor\nimport qualified Data.ByteString.Lazy.UTF8 as BLU\n\nsafeReadFile :: FilePath -&gt; ExceptT Text IO Text\nsafeReadFile p = (lift $ doesFileExist p) &gt;&gt;= bool (throwError \"File does not exist\") (lift $ pack &lt;$&gt; readFile p)\n\nsafeDecodeJSONFile :: FromJSON a =&gt; Text -&gt; FilePath -&gt; ExceptT Text IO a\nsafeDecodeJSONFile t f = do\n  contents &lt;- safeReadFile f\n  tryRight $ first (\\x -&gt; pack (x ++ (unpack t))) (eitherDecode (BLU.fromString (unpack contents)))\n</code></pre>\n\n<p>When I run <code>runExceptT $ safeDecodeJSONFile \"something\" \"nonExistantFile.json\"</code> I expect to  get <code>Left \"Does not exist something\"</code> but instead I just get <code>Left \"Does not exist\"</code> - I know that the function I pass to <code>first</code> is being executed, since without the <code>pack</code> GHC complains that the type of <code>(eitherDecode (BLU.fromString (unpack contents)))</code> is <code>ExceptT String IO a</code> instead of <code>ExceptT Text IO a</code> - so why doesn't the concatenation from <code>++</code> also happen?</p>\n"}, {"tags": ["haskell", "types", "functional-programming"], "comments": [{"owner": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "edited": false, "score": 3, "creation_date": 1564741193, "post_id": 57324363, "comment_id": 101139135, "body": "You could write <code>newtype SpecialInt = Special Int</code>."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 3, "last_activity_date": 1564741286, "creation_date": 1564741286, "answer_id": 57324539, "question_id": 57324363, "link": "https://stackoverflow.com/questions/57324363/are-all-types-declared-with-newtype-phantom-types/57324539#57324539", "title": "Are all types declared with newtype phantom types", "body": "<blockquote>\n  <p>Which leads me to believe that newtypes are phantom types if the type parameter on the left hand side doesn't appear on the right hand side. E.g.</p>\n</blockquote>\n\n<p>Well this is a consequence of your quoted definitions. You say that:</p>\n\n<blockquote>\n  <p>I know that phantom types are parameterised types whose parameters do not appear on the right hand side of its definition.</p>\n</blockquote>\n\n<p>Since <code>newtype</code> is a way to define a type, and since for parameterized types with parameters that do not appear at the right side are phantom types, types originating from a <code>newtype</code> clause with a type parameter that do not appear at the right side are phantom types as well.</p>\n\n<blockquote>\n  <p>I would like to know whether all types declared with newtype are phantom types.</p>\n</blockquote>\n\n<p><strong>No</strong>, since for example a <code>newtype</code> without any type parameter, or a <code>newtype</code> with type parameters where are type parameters are used at the right side are <em>not</em> phantom types.</p>\n\n<blockquote>\n  <p>When I try to compile a program with the following code:</p>\n\n<pre><code>newtype SpecialInt Int = Special Int \n</code></pre>\n  \n  <p>I get an error (..)</p>\n</blockquote>\n\n<p>Type variables at the left side are, well, <em>variables</em>. <code>Int</code> is not a variable (it starts with an uppercase), so the above does not make much sense. If you want to define a <code>SpecialInt</code>, you should define this as:</p>\n\n<pre><code>newtype SpecialInt = Special Int</code></pre>\n\n<p>so without an <code>Int</code> at the left side of the <code>=</code> token.</p>\n"}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 119, "favorite_count": 0, "accepted_answer_id": 57324539, "answer_count": 1, "score": 1, "last_activity_date": 1605146646, "creation_date": 1564740694, "last_edit_date": 1605146646, "question_id": 57324363, "link": "https://stackoverflow.com/questions/57324363/are-all-types-declared-with-newtype-phantom-types", "title": "Are all types declared with newtype phantom types", "body": "<p>I am learning about phantom types in Haskell. I know that phantom types are parameterised types whose parameters do not appear on the right hand side of its definition.\nHowever, I would like to know whether all types declared with <code>newtype</code> are phantom types. </p>\n\n<p>When I try to compile a program with the following code:</p>\n\n<pre><code>newtype SpecialInt Int = Special Int \n</code></pre>\n\n<p>I get an error stating:</p>\n\n<pre><code> Unexpected type \u2018Int\u2019\n    In the newtype declaration for \u2018SpecialInt\u2019\n    A newtype declaration should have form\n      newtype SpecialInt a = ...\n</code></pre>\n\n<p>Which leads me to believe that newtypes are phantom types if the type parameter on the left hand side doesn't appear on the right hand side.\nE.g. </p>\n\n<pre><code>newtype SpecialInt a = Special a\n</code></pre>\n\n<p>Would not be a phantom type, but</p>\n\n<pre><code>newtype SpecialInt a = Special Int \n</code></pre>\n\n<p>would be a phantom type.\nTherefore not all types declared with <code>newtype</code> are phantom types. However, I am not sure if my reasoning is correct.</p>\n"}, {"tags": ["haskell", "type-families"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1564738996, "post_id": 57319008, "comment_id": 101138070, "body": "Would it be clearer if it was written <code>type family Times :: Nat -&gt; Nat -&gt; Nat where (...)</code>?"}], "answers": [{"comments": [{"owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "edited": false, "score": 0, "creation_date": 1564713805, "post_id": 57319047, "comment_id": 101129514, "body": "I didn\u2019t know the family types, thanks for sharing!"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 10, "last_activity_date": 1564711466, "creation_date": 1564711466, "answer_id": 57319047, "question_id": 57319008, "link": "https://stackoverflow.com/questions/57319008/understanding-type-family/57319047#57319047", "title": "Understanding type family", "body": "<p>The final <code>:: Nat</code> indicates that the type-level function returns a <code>Nat</code>.</p>\n"}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 81, "favorite_count": 0, "accepted_answer_id": 57319047, "answer_count": 1, "score": 6, "last_activity_date": 1564738848, "creation_date": 1564711053, "last_edit_date": 1564738848, "question_id": 57319008, "link": "https://stackoverflow.com/questions/57319008/understanding-type-family", "title": "Understanding type family", "body": "<p>I have the following code:</p>\n\n<pre><code>{-# LANGUAGE TypeFamilies #-}\ntype family Times (a :: Nat) (b :: Nat) :: Nat where \n   Times Z n = Z\n   Times (S m) n = Plus n (Times m n)\n</code></pre>\n\n<p>I know that type families allow you to write functions on the type level. However, for the code above, I know that <code>(a :: Nat) (b :: Nat)</code> are the types of the two parameters that are passed to the function <code>Times</code>.</p>\n\n<p>However I don't understand what the final <code>:: Nat</code> after <code>(a :: Nat) (b :: Nat)</code> means. Any insights are appreciated.</p>\n"}, {"tags": ["javascript", "haskell", "functional-programming", "memoization", "continuations"], "comments": [{"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1564691696, "post_id": 57316172, "comment_id": 101124830, "body": "Do futures/promises not answer your question? I find your question unclear because the example does not leverage continuations, so one answer would be &quot;don&#39;t use continuations&quot;. I also feel like there&#39;s a distinction to be made between &quot;sharing&quot; and &quot;memoization&quot;, that again would require more involved examples to see."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1564692061, "post_id": 57316172, "comment_id": 101124976, "body": "&quot;<i>since we&#39;re talking about continuations accessing intermediate results means calling functions</i>&quot; - no, why would it?"}, {"owner": {"reputation": 3831, "user_id": 5536315, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/38Cjm.png?s=128&g=1", "display_name": "scriptum", "link": "https://stackoverflow.com/users/5536315/scriptum"}, "reply_to_user": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1564724335, "post_id": 57316172, "comment_id": 101131762, "body": "@Li-yao Xia distinguishing memoization from sharing is probably good advice. I will look into this. Thanks."}, {"owner": {"reputation": 3831, "user_id": 5536315, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/38Cjm.png?s=128&g=1", "display_name": "scriptum", "link": "https://stackoverflow.com/users/5536315/scriptum"}, "reply_to_user": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1564729668, "post_id": 57316172, "comment_id": 101133768, "body": "@Li-yaoXia Btw, I gave a hint in my question how I leverage continuations in real life: By applying them to asynchronous computations in a language with an event loop based concurrency model. But I figured to skip this detail in order to simplify the example."}], "answers": [{"comments": [{"owner": {"reputation": 3831, "user_id": 5536315, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/38Cjm.png?s=128&g=1", "display_name": "scriptum", "link": "https://stackoverflow.com/users/5536315/scriptum"}, "edited": false, "score": 0, "creation_date": 1564724153, "post_id": 57316796, "comment_id": 101131691, "body": "Yep, this works for small chains. But as they grow it is getting a pain to thread intermediate results through to their targets. This is the Reader monad, right? Still i had to fall back to monads whenever i need to use intermediates. Monads are cool but i can not compose them except with transformers, so i try to use applicative whenever possible."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "reply_to_user": {"reputation": 3831, "user_id": 5536315, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/38Cjm.png?s=128&g=1", "display_name": "scriptum", "link": "https://stackoverflow.com/users/5536315/scriptum"}, "edited": false, "score": 0, "creation_date": 1564732215, "post_id": 57316796, "comment_id": 101134804, "body": "No, I don&#39;&#39;t think this is the <code>Reader</code> monad, which makes the values to be read available implicitly. It&#39;s just monadic usage of<code>Cont</code>."}, {"owner": {"reputation": 3831, "user_id": 5536315, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/38Cjm.png?s=128&g=1", "display_name": "scriptum", "link": "https://stackoverflow.com/users/5536315/scriptum"}, "edited": false, "score": 0, "creation_date": 1564736898, "post_id": 57316796, "comment_id": 101136959, "body": "I want to avoid threading intermediate results through long monadic chains. What I want is to break the chain and to share intermediate results in applicative/monadic computations without reevaluating them each time. I appreciate your effort but this answer is not particularly helpful to me, sorry."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "reply_to_user": {"reputation": 3831, "user_id": 5536315, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/38Cjm.png?s=128&g=1", "display_name": "scriptum", "link": "https://stackoverflow.com/users/5536315/scriptum"}, "edited": false, "score": 1, "creation_date": 1564738457, "post_id": 57316796, "comment_id": 101137783, "body": "@bob Then you will probably need to compose the Cont monad with a State monad to share results. Or break purity."}, {"owner": {"reputation": 3831, "user_id": 5536315, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/38Cjm.png?s=128&g=1", "display_name": "scriptum", "link": "https://stackoverflow.com/users/5536315/scriptum"}, "edited": false, "score": 0, "creation_date": 1564743849, "post_id": 57316796, "comment_id": 101140419, "body": "I&#39;m on to something - see my own answer. If this approach works for a proper, real world example I can bypass the monad constraint."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "reply_to_user": {"reputation": 3831, "user_id": 5536315, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/38Cjm.png?s=128&g=1", "display_name": "scriptum", "link": "https://stackoverflow.com/users/5536315/scriptum"}, "edited": false, "score": 0, "creation_date": 1564751434, "post_id": 57316796, "comment_id": 101144210, "body": "Yes, <code>Cont</code> doing the caching itself (basically becoming a <code>Lazy</code>) is what I meant by breaking purity. Should be fine if it solves your realworld problem :-)"}, {"owner": {"reputation": 3831, "user_id": 5536315, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/38Cjm.png?s=128&g=1", "display_name": "scriptum", "link": "https://stackoverflow.com/users/5536315/scriptum"}, "edited": false, "score": 0, "creation_date": 1564751888, "post_id": 57316796, "comment_id": 101144480, "body": "It does break purity in a technical sense. But if the involved functions are pure then the mutation is only local, because replacing a CPS computation with its result is just what referential transparency guarantees us. So in a way this modification enforces purity and any violation will eventually blow up your program."}, {"owner": {"reputation": 3831, "user_id": 5536315, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/38Cjm.png?s=128&g=1", "display_name": "scriptum", "link": "https://stackoverflow.com/users/5536315/scriptum"}, "edited": false, "score": 0, "creation_date": 1564752027, "post_id": 57316796, "comment_id": 101144554, "body": "Imposing purity on the consumer is not a big deal though, because if you need IO or random bytes or date related stuff just put the computation inside a continuation based <code>Task</code> or thunk based <code>Lazy</code>. Peace of cake."}], "tags": [], "owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "is_accepted": false, "score": 8, "last_activity_date": 1564693589, "last_edit_date": 1564693589, "creation_date": 1564692570, "answer_id": 57316796, "question_id": 57316172, "link": "https://stackoverflow.com/questions/57316172/how-to-share-intermediate-results-of-continuations/57316796#57316796", "title": "How to share intermediate results of continuations?", "body": "<p>Your problems seems to be that your <code>Cont</code> has no monad implementation yet. With that, it's totally simple to access previous results - they're just in scope (as constants) of nested continuation callbacks:</p>\n\n<pre><code>const contChain = tx =&gt; f =&gt;\n  Cont(k =&gt; tx.runCont(r =&gt; f(r).runCont(k)));\n\ncontChain( add(inc2) (inc3), intermediateResult =&gt; {\n  const intermediateCont = contOf(intermediateResult);\n  return mul(intermediateCont) (intermediateCont);\n}).runCont(id);\n</code></pre>\n\n<p>(Of course it's a little weird that all your functions are already lifted and take <code>Cont</code> values as arguments - they shouldn't do that and simply be functions that <em><code>return</code></em> <code>Cont</code> values)</p>\n\n<hr>\n\n<p>Your code in Haskell:</p>\n\n<pre><code>import Control.Monad.Cont\nimport Control.Applicative\n\nlet inc = liftA (+1)\nlet inc2 = inc $ return 2\nlet inc3 = inc $ return 3\nlet add = liftA2 (+)\nlet mul = liftA2 (*)\n\n(`runCont` id) $ add inc2 inc3 &gt;&gt;= \\intermediateResult -&gt;\n  let intermediateCont = return intermediateResult\n  in mul intermediateCont intermediateCont\n-- 49\n\n{- or with do notation: -}\n\n(`runCont` id) $ do\n  intermediateResult &lt;- add inc2 inc3\n  let intermediateCont = return intermediateResult\n  mul intermediateCont intermediateCont\n-- 49\n</code></pre>\n\n<p>(I haven't used monad transformers to make a <code>taggedLog</code> side effect)</p>\n"}, {"comments": [{"owner": {"reputation": 3831, "user_id": 5536315, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/38Cjm.png?s=128&g=1", "display_name": "scriptum", "link": "https://stackoverflow.com/users/5536315/scriptum"}, "edited": false, "score": 0, "creation_date": 1565093810, "post_id": 57325199, "comment_id": 101236149, "body": "@Bergi The impure approach is quite tricky. I had to shift the destructive update into the <code>runCont</code> handler so that the approach also works with continuations in an asynchronous context. This has the additional benefit that the impurity is deferred until the <code>Cont</code>s are actually run."}], "tags": [], "owner": {"reputation": 3831, "user_id": 5536315, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/38Cjm.png?s=128&g=1", "display_name": "scriptum", "link": "https://stackoverflow.com/users/5536315/scriptum"}, "is_accepted": false, "score": 0, "last_activity_date": 1565091221, "last_edit_date": 1565091221, "creation_date": 1564743731, "answer_id": 57325199, "question_id": 57316172, "link": "https://stackoverflow.com/questions/57316172/how-to-share-intermediate-results-of-continuations/57325199#57325199", "title": "How to share intermediate results of continuations?", "body": "<p>It seems that I can't avoid getting impure to obtain the desired behavior. The impurity is only local though, because I just replace the continuation chain with its result value. I can do this without changing the behavior of my program, because this is exactly what referential transparency guarantees us.</p>\n\n<p>Here is the transformation of the <code>Cont</code> constructor:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>const Cont = k =&gt; ({\n  runCont: k,\n  [Symbol.toStringTag]: \"Cont\"\n});\n\n// becomes\n\nconst Cont = k =&gt; thisify(o =&gt; { // A\n    o.runCont = (res, rej) =&gt; k(x =&gt; { // B\n      o.runCont = l =&gt; l(x); // C\n      return res(x); // D\n    }, rej); // E\n\n    o[Symbol.toStringTag] = \"Cont\";\n    return o;\n  });\n</code></pre>\n\n<p><code>thisify</code> in line <code>A</code> merely mimics <code>this</code> context, so that the <code>Object</code> to be constructed is aware of itself.</p>\n\n<p>Line <code>B</code> is the decisive change: Instead of just passing <code>res</code> to the continuation <code>k</code> I construct another lambda that stores the result <code>x</code> wrapped in a continuation under the <code>runTask</code> property of the current <code>Task</code> object (<code>C</code>), before it calls <code>res</code> with <code>x</code> (<code>D</code>).</p>\n\n<p>In case of an error <code>rej</code> is just applied to <code>x</code>, as usual (<code>E</code>).</p>\n\n<p>Here is the runnning example from above, now working as expected:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>const taggedLog = pre =&gt; s =&gt;\r\n  (console.log(pre, s), s);\r\n\r\nconst id = x =&gt; x;\r\n\r\nconst thisify = f =&gt; f({}); // mimics this context\r\n\r\nconst Cont = k =&gt; thisify(o =&gt; {\r\n    o.runCont = (res, rej) =&gt; k(x =&gt; {\r\n      o.runCont = l =&gt; l(x);\r\n      return res(x);\r\n    }, rej);\r\n    \r\n    o[Symbol.toStringTag] = \"Cont\";\r\n    return o;\r\n  });\r\n\r\nconst contAp = tf =&gt; tx =&gt;\r\n  Cont(k =&gt; tf.runCont(f =&gt; tx.runCont(x =&gt; k(f(x)))));\r\n\r\nconst contLiftA2 = f =&gt; tx =&gt; ty =&gt;\r\n  contAp(contMap(f) (tx)) (ty);\r\n\r\nconst contOf = x =&gt; Cont(k =&gt; k(x));\r\n\r\nconst contMap = f =&gt; tx =&gt;\r\n  Cont(k =&gt; tx.runCont(x =&gt; k(f(x))));\r\n                                  \r\nconst inc = contMap(x =&gt; taggedLog(\"eval inc\") (x + 1));\r\nconst inc2 = inc(contOf(2));\r\nconst inc3 = inc(contOf(3));\r\nconst add = contLiftA2(x =&gt; y =&gt; taggedLog(\"eval add\") (x + y));\r\nconst mul = contLiftA2(x =&gt; y =&gt; taggedLog(\"eval mul\") (x * y));\r\n\r\nconst intermediateResult = add(inc2) (inc3);\r\n\r\nmul(intermediateResult) (intermediateResult).runCont(id);\r\n\r\n/* should merely log\r\neval inc 3\r\neval inc 4\r\neval add 7\r\neval add 49\r\n*/</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"}], "owner": {"reputation": 3831, "user_id": 5536315, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/38Cjm.png?s=128&g=1", "display_name": "scriptum", "link": "https://stackoverflow.com/users/5536315/scriptum"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 232, "favorite_count": 1, "answer_count": 2, "score": 8, "last_activity_date": 1565096749, "creation_date": 1564689371, "last_edit_date": 1565096749, "question_id": 57316172, "link": "https://stackoverflow.com/questions/57316172/how-to-share-intermediate-results-of-continuations", "title": "How to share intermediate results of continuations?", "body": "<p>Please note that even though the example in this question is encoded in Javascript, the underlying concepts are common in Haskell and I while I prefer to express myself in Javascript I also appreciate answers in Haskell.</p>\n\n<p>In Javascript I use CPS to handle asynchronous computations according to monadic principles. For the sake of simplicity, however, I will use the normal continuation monad for this question.</p>\n\n<p>As soon as my continuation compositions grow, I keep finding myself in a situation where I need access to intermediate results of these compositions. Since Javascript is imperative it is easy to store such results in variables and access them later. But since we're talking about continuations accessing intermediate results means calling functions and accessing them several times means a lot of re-evaluation.</p>\n\n<p>This seems to be well suited for memoization. But how can I memoize a function's return value if that very function doesn't return anything but merely calls its continuation (and btw. as I mentioned before I use asynchronous functions that also don't return anything in the current cycle of Javascript's event loop).</p>\n\n<p>It seems as if I have to extract the right continuation. Maybe this is possible with delimited continuations through <code>shift</code>/<code>reset</code>, but I don't know how to apply these combinators. This issue is probably not that hard to solve and I'm just confused by the magical land of continuation passing style...so please be indulgent with me.</p>\n\n<p>Here is a simplified example of <code>Cont</code> without memoization in Javascript:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>const taggedLog = tag =&gt; s =&gt;\r\n  (console.log(tag, s), s);\r\n\r\nconst id = x =&gt; x;\r\n\r\nconst Cont = k =&gt; ({\r\n  runCont: k,\r\n  [Symbol.toStringTag]: \"Cont\"\r\n});\r\n\r\nconst contAp = tf =&gt; tx =&gt;\r\n  Cont(k =&gt; tf.runCont(f =&gt; tx.runCont(x =&gt; k(f(x)))));\r\n\r\nconst contLiftA2 = f =&gt; tx =&gt; ty =&gt;\r\n  contAp(contMap(f) (tx)) (ty);\r\n\r\nconst contOf = x =&gt; Cont(k =&gt; k(x));\r\n\r\nconst contMap = f =&gt; tx =&gt;\r\n  Cont(k =&gt; tx.runCont(x =&gt; k(f(x))));\r\n                                  \r\nconst contReset = tx =&gt; // delimited continuations\r\n  contOf(tx.runCont(id));\r\n\r\nconst contShift = f =&gt; // delimited continuations\r\n  Cont(k =&gt; f(k).runCont(id));\r\n\r\nconst inc = contMap(x =&gt; taggedLog(\"eval inc\") (x + 1));\r\nconst inc2 = inc(contOf(2));\r\nconst inc3 = inc(contOf(3));\r\nconst add = contLiftA2(x =&gt; y =&gt; taggedLog(\"eval add\") (x + y));\r\nconst mul = contLiftA2(x =&gt; y =&gt; taggedLog(\"eval mul\") (x * y));\r\n\r\nconst intermediateResult = add(inc2) (inc3);\r\n\r\nmul(intermediateResult) (intermediateResult).runCont(id);\r\n\r\n/*\r\n  should only log four lines:\r\n  eval inc 3\r\n  eval inc 4\r\n  eval add 7\r\n  eval mul 49\r\n*/</code></pre>\r\n</div>\r\n</div>\r\n</p>\n"}, {"tags": ["http", "haskell", "get", "jira"], "comments": [{"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 1, "creation_date": 1564685890, "post_id": 57313939, "comment_id": 101122696, "body": "Try <code>&quot; order by created&quot;</code> (spaces instead of <code>+</code>). Your python script is manually attaching the query string to the url, but you would have run into the same encoding problems if you passed the query arguments through <code>requests.get()</code>&#39;s <code>param</code> argument as documented: <a href=\"https://3.python-requests.org/user/quickstart/#passing-parameters-in-urls\" rel=\"nofollow noreferrer\">3.python-requests.org/user/quickstart/&hellip;</a>"}, {"owner": {"reputation": 448, "user_id": 4743466, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/35b9eee7a42e06c9845b2a5df2be4596?s=128&d=identicon&r=PG", "display_name": "Erik Vesterlund", "link": "https://stackoverflow.com/users/4743466/erik-vesterlund"}, "reply_to_user": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1564687942, "post_id": 57313939, "comment_id": 101123505, "body": "Thank you! The link also helped me deduce that I can add <code>&amp;</code> to the query, e.g. <code>&amp;maxResults=1</code>, like this: <code>= setRequestQueryString [(&quot;jql&quot;, Just (S8.append &quot;project=&quot; proj)), (&quot;maxResults&quot;, Just &quot;1&quot;)] </code>"}], "answers": [{"tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 3, "last_activity_date": 1564690843, "last_edit_date": 1564690843, "creation_date": 1564689455, "answer_id": 57316196, "question_id": 57313939, "link": "https://stackoverflow.com/questions/57313939/encoding-problem-with-get-requests-in-haskell/57316196#57316196", "title": "Encoding problem with GET requests in Haskell", "body": "<p><code>project+order+by+created</code> is the <a href=\"https://en.wikipedia.org/wiki/Percent-encoding\" rel=\"nofollow noreferrer\">URL-encoded</a> string for the actual request <code>project order by created</code> (with spaces instead of <code>+</code>). The function <code>setRequestQueryString</code> expects a raw request (with spaces, not URL-encoded), and URL-encodes it.</p>\n\n<p>The Python script you give for comparison essentially does the URL-encoding by hand.</p>\n\n<p>So the fix is to put the raw request in <code>proj</code>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>foo urlBase proj' auth' = do\n    let proj = S8.pack (proj' ++ \" order by created\")  -- spaces instead of +\n    ...\n</code></pre>\n"}], "owner": {"reputation": 448, "user_id": 4743466, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/35b9eee7a42e06c9845b2a5df2be4596?s=128&d=identicon&r=PG", "display_name": "Erik Vesterlund", "link": "https://stackoverflow.com/users/4743466/erik-vesterlund"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 0, "accepted_answer_id": 57316196, "answer_count": 1, "score": 1, "last_activity_date": 1564690843, "creation_date": 1564679452, "question_id": 57313939, "link": "https://stackoverflow.com/questions/57313939/encoding-problem-with-get-requests-in-haskell", "title": "Encoding problem with GET requests in Haskell", "body": "<p>I'm trying to get some Json data from a Jira server using Haskell. I'm counting this as \"me having problems with Haskell\" rather than encodings or Jira because my problem is when doing this in Haskell.</p>\n\n<p>The problem occurs when the URL (or query) has plus signs. After building my request for <code>theproject+order+by+created</code>, Haskell prints it as:</p>\n\n<pre><code>Request {\n  host                 = \"myjiraserver.com\"\n  port                 = 443\n  secure               = True\n  requestHeaders       = [(\"Content-Type\",\"application/json\"),(\"Authorization\",\"&lt;REDACTED&gt;\")]\n  path                 = \"/jira/rest/api/2/search\"\n  queryString          = \"?jql=project%3Dtheproject%2Border%2Bby%2Bcreated\"\n  method               = \"GET\"\n  proxy                = Nothing\n  rawBody              = False\n  redirectCount        = 10\n  responseTimeout      = ResponseTimeoutDefault\n  requestVersion       = HTTP/1.1\n}\n</code></pre>\n\n<p>But the request fails with this response:</p>\n\n<pre><code>- 'Error in the JQL Query: The character ''+'' is a reserved JQL character. You must\n  enclose it in a string or use the escape ''\\u002b'' instead. (line 1, character\n  21)'\n</code></pre>\n\n<p>So it seems like Jira didn't like Haskell's <code>%2B</code>. Do you have any suggestions on what I can do to fix this, or any resources that might be helpful? The same request sans the <code>+order+by+created</code> part is successful.</p>\n\n<p>The code (patched together from <a href=\"https://haskell.fpcomplete.com/library/http-client\" rel=\"nofollow noreferrer\">these examples</a>):</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\nimport           Data.Aeson\nimport qualified Data.ByteString.Char8 as S8\nimport qualified Data.Yaml             as Yaml\nimport           Network.HTTP.Simple\nimport           System.Environment    (getArgs)\n\n-- auth' is echo -e \"username:passwd\" | base64\nfoo urlBase proj' auth' = do\n    let proj = S8.pack (proj' ++ \"+order+by+created\")\n        auth = S8.pack auth'\n    request'' &lt;- parseRequest urlBase\n    let request'\n            = setRequestMethod \"GET\"\n            $ setRequestPath \"/jira/rest/api/2/search\"\n            $ setRequestHeader \"Content-Type\" [\"application/json\"]\n            $ request''\n        request\n            = setRequestQueryString [(\"jql\", Just (S8.append \"project=\" proj))]\n            $ setRequestHeader \"Authorization\" [S8.append \"Basic \" auth]\n            $ request'\n    return request\n\nmain :: IO ()\nmain = do\n    args &lt;- getArgs\n    case args of\n      (urlBase:proj:auth:_) -&gt; do\n          request &lt;- foo urlBase proj auth\n          putStrLn $ show request\n          response &lt;- httpJSON request\n          S8.putStrLn $ Yaml.encode (getResponseBody response :: Value) -- apparently this is required\n          putStrLn \"\"\n\n      _ -&gt; putStrLn \"usage...\"\n</code></pre>\n\n<p>(If you know a simpler way to do the above then I'd take such suggestions as well, I'm just trying to do something analogous to this Python:</p>\n\n<pre><code>import requests\nimport sys\nif len(sys.argv) &gt;= 4:\n    urlBase = sys.argv[1]\n    proj = sys.argv[2]\n    auth = sys.argv[3]\n    urlBase += \"/jira/rest/api/2/search?jql=project=\"\n    proj += \"+order+by+created\"\n    h = {}\n    h[\"content-type\"] = \"application/json\"\n    h[\"authorization\"] = \"Basic \" + auth\n    r = requests.get(urlBase + proj, headers=h)\n    print(r.json())\n</code></pre>\n\n<p>)</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 5, "creation_date": 1564667968, "post_id": 57310715, "comment_id": 101113734, "body": "Classes are used for &quot;ad hoc&quot; polymorphism. You can see it as interfaces in object-oriented programming."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 4, "creation_date": 1564672994, "post_id": 57310715, "comment_id": 101116763, "body": "Is this a joke? There&#39;s dozens of classes outside the prelude in the <code>base</code> package alone, and probably thousands more on Hackage. Ord, Eq, and Show are just a tiny tip of an ice cube chipped off the top of the iceberg."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 4, "creation_date": 1564674561, "post_id": 57310715, "comment_id": 101117664, "body": "You make two great points, or at least allude to them.  1. You can get very far with data types and first class functions - ad hoc polymorphism is often unnecessary or over-used.  2. Internalizing what classes give that are not provided by data types and higher order functions will help you design your code."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1564680721, "post_id": 57310715, "comment_id": 101120454, "body": "As others have indicated, there are plenty of useful and/or powerful classes out there. You should learn to use some of them and to define your own instances. But you don&#39;t have to jump straight into defining your own <i>classes</i>. It takes a fair bit of experience, trial, and error to work out what makes a good class. Take your time."}], "answers": [{"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 16, "last_activity_date": 1564673767, "last_edit_date": 1564673767, "creation_date": 1564668346, "answer_id": 57310908, "question_id": 57310715, "link": "https://stackoverflow.com/questions/57310715/what-can-you-do-that-is-useful-with-haskell-type-classes/57310908#57310908", "title": "What can you do that is useful with Haskell Type Classes?", "body": "<p>Type classes provide <em>ad hoc</em> polymorphism, as opposed to parametric polymorphism: a function does not need to be defined the same way (or at all) for each type. In addition, it does so in an <em>open</em> fashion: you don't need to enumerate all the types that implement the class when you define the class itself.</p>\n\n<p>Some prominent examples of non-standard type classes are the various <code>MonadFoo</code> classes provided by <code>mtl</code> (monad transformer library), <code>ToJSON</code> and <code>FromJSON</code> provided by the <code>aeson</code> library, and <code>IsString</code>, which makes the <code>OverloadedString</code> extension work.</p>\n\n<hr>\n\n<p>Without type classes, you can define a function that works for a single argument type</p>\n\n<pre><code>foo :: Int -&gt; Int\n</code></pre>\n\n<p>or one that works for <em>all</em> argument types</p>\n\n<pre><code>foo :: a -&gt; Int\n</code></pre>\n\n<p>The only way to work for some subset of types is to use a sum type</p>\n\n<pre><code>foo :: Either Int Bool -&gt; Int\n</code></pre>\n\n<p>but you can't later define <code>foo</code> for <code>Float</code> without changing the type of <code>foo</code> itself</p>\n\n<pre><code>foo :: Either Int (Either Bool Float) -&gt; Int\n</code></pre>\n\n<p>or</p>\n\n<pre><code>data IntBoolFloat = T1 Int | T2 Bool | T3 Float\nfoo :: IntBoolFloat -&gt; Int\n</code></pre>\n\n<p>either or which will be cumbersome to work with.</p>\n\n<p>Typeclasses let you work with one type at a time, and let you add new types in a nonintrusive fashion.</p>\n\n<pre><code>class ToInt a where\n    foo :: a -&gt; Int\n\ninstance ToInt Int where foo = id\ninstance ToInt Bool where\n    foo True = 1\n    foo False = 2\ninstance ToInt Float where\n    foo x = 3  -- Kind of pointless, but valid\n</code></pre>\n\n<p>An instance of <code>ToInt</code> can be defined anywhere, although in practice it's a good idea for it to be defined either in the module where the class itself is defined, or in the module where the type being instantiated is defined.</p>\n\n<hr>\n\n<p>Underneath the hood, a method (a function defined by a type class) is essentially a mapping of types to functions. The <code>TypeApplications</code> extension makes that more explicit. For example, the following are equivalent.</p>\n\n<pre><code>foo True == 1\nfoo @Bool True == 1 -- foo :: ToInt a =&gt; a -&gt; Int, but foo @Bool :: Bool -&gt; Int\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": false, "score": 4, "last_activity_date": 1564684730, "last_edit_date": 1564684730, "creation_date": 1564672187, "answer_id": 57312061, "question_id": 57310715, "link": "https://stackoverflow.com/questions/57310715/what-can-you-do-that-is-useful-with-haskell-type-classes/57312061#57312061", "title": "What can you do that is useful with Haskell Type Classes?", "body": "<p>The definition </p>\n\n<pre><code>class Foo a where\n    bar :: a -&gt; a -&gt; Bool\n</code></pre>\n\n<p>is very simililar to</p>\n\n<pre><code>class Eq a where\n    (==) :: a -&gt; a -&gt; Bool \n    (/=) :: a -&gt; a -&gt; Bool \n</code></pre>\n\n<p>and here is when you can find how useful can it be:</p>\n\n<p>Imagine you've got slugs, and want to know if they can procreate, and there is a rare species with hermaphrodite type, you can use your typeclass:</p>\n\n<pre><code>data Slug = M | F | H\n\nclass Foo a where\n    bar :: a -&gt; a -&gt; Bool\n\ninstance Foo Slug where\n   bar H _ = True\n   bar _ H = True\n   bar F M = True\n   bar M F = True\n   bar _ _ = False  \n</code></pre>\n\n<p>Or, with temperatures:\nYou want to know if mixing water will get you warm water:</p>\n\n<pre><code>data Temp = Cold | Hot | Warm\n\ninstance Foo Temp where\n   bar Warm _    = True\n   bar _ Warm    = True\n   bar Hot Cold  = True\n   bar Cold Hot  = True\n   bar _ _       = False  \n</code></pre>\n\n<p>So, that typeclass now could be named sort of \"Mixable\", and the method, \"mix\", and it would be less confusing to read for type <code>Slug</code> and <code>Temperature</code>.</p>\n\n<p>Now, if you want to watch it in action with some example, I can came up now with something like...</p>\n\n<pre><code>mix :: Foo a =&gt; [a] -&gt; [a] -&gt; [Bool]\nmix xs ys = zipWith bar xs ys\n\n$&gt;  mix [M,M,H,F] [F,F,F,F]\n=&gt; [True,True,True,False]\n</code></pre>\n\n<p>but there is a restriction with mix, you can just mix Mixable things. so if you do:</p>\n\n<pre><code>mix [1,1] [2,2]\n</code></pre>\n\n<p>will break:</p>\n\n<pre><code>9:1: error:\n    \u2022 No instance for (Foo Bool) arising from a use of \u2018mix\u2019\n    \u2022 In the expression: mix [True, True] [False, True]\n      In an equation for \u2018it\u2019: it = mix [True, True] [False, \n</code></pre>\n\n<p>And that means, that you can organize you data types to satisfy the <code>mix</code> function according its structure, or your needs.</p>\n\n<p>Level 2:</p>\n\n<p>What if you want a default implementation for Slug and Temp? Because you saw they where similar, so you could do:</p>\n\n<pre><code>class (Bounded a, Eq a) =&gt; Mixable a where\n    mix :: a -&gt; a -&gt; Bool\n    mix e1 e2 = e1 /= e2 || any (\\x -&gt; x /= minBound &amp;&amp; x /= maxBound) [e1, e2]\n\ndata Slug = F | H | M deriving (Bounded, Eq, Show)\ndata Temp = Cold | Warm | Hot deriving (Bounded, Eq, Show)\n\ninstance Mixable Slug\ninstance Mixable Temp\n\nmixAll :: Mixable a =&gt; [a] -&gt; [a] -&gt; [Bool]\nmixAll xs ys = zipWith mix xs ys\n\nmain = do\n  putStrLn $ show (mixAll [F,F,F,M,M,M,H] [F,M,H,M,F,H,H])\n  putStrLn $ show (mixAll [Cold,Cold,Cold,Hot,Hot,Hot,Warm] [Cold,Hot,Warm,Hot,Cold,Warm,Warm])\n</code></pre>\n\n<blockquote>\n  <p>[False,True,True,False,True,True,True]</p>\n  \n  <p>[False,True,True,False,True,True,True]</p>\n</blockquote>\n"}, {"tags": [], "owner": {"reputation": 14543, "user_id": 235908, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/rTstt.jpg?s=128&g=1", "display_name": "Simon Shine", "link": "https://stackoverflow.com/users/235908/simon-shine"}, "is_accepted": false, "score": 7, "last_activity_date": 1564677458, "last_edit_date": 1564677458, "creation_date": 1564672524, "answer_id": 57312152, "question_id": 57310715, "link": "https://stackoverflow.com/questions/57310715/what-can-you-do-that-is-useful-with-haskell-type-classes/57312152#57312152", "title": "What can you do that is useful with Haskell Type Classes?", "body": "<p>In adition to chepner's explanation of the usefulness of type classes, here are some more practical examples of type classes outside of Prelude:</p>\n\n<ul>\n<li><a href=\"http://hackage.haskell.org/package/QuickCheck/docs/Test-QuickCheck-Arbitrary.html\" rel=\"nofollow noreferrer\"><code>Arbitrary</code></a> from QuickCheck (<a href=\"https://www.stackbuilders.com/news/a-quickcheck-tutorial-generators\" rel=\"nofollow noreferrer\">A QuickCheck Tutorial: Generators</a>).</li>\n<li><a href=\"https://hackage.haskell.org/package/hspec/docs/Test-Hspec.html#t:Example\" rel=\"nofollow noreferrer\"><code>Example</code></a> from Hspec, which is similar but not exactly equivalent.</li>\n<li><a href=\"https://github.com/kowainik/co-log/blob/master/co-log/tutorials/2-custom/Custom.md#example\" rel=\"nofollow noreferrer\"><code>WithLog</code></a> (or rather, <code>HasLog</code>) from <a href=\"https://github.com/kowainik/co-log\" rel=\"nofollow noreferrer\">co-log</a>.</li>\n<li><a href=\"http://hackage.haskell.org/package/safecopy/docs/Data-SafeCopy-Internal.html#t:SafeCopy\" rel=\"nofollow noreferrer\"><code>SafeCopy</code></a> is another serialization class, but with different constraints than Aeson's <code>FromJSON</code>, <code>ToJSON</code>, since it also deals with data format migrations.</li>\n</ul>\n\n<p>Since there's a whole design space for using type classes in different ways, here are some more thoughts:</p>\n\n<ul>\n<li><p>The <em>Has</em> Type Class Pattern: <a href=\"https://medium.com/hackernoon/the-has-type-class-pattern-ca12adab70ae\" rel=\"nofollow noreferrer\">Tutorial 1</a>, <a href=\"https://rashadg1030.github.io/rashad-blog/7.html#appenv-and-the-has-typeclass-pattern\" rel=\"nofollow noreferrer\">Tutorial 2</a>, and the package <a href=\"https://hackage.haskell.org/package/data-has\" rel=\"nofollow noreferrer\">data-has</a>.</p></li>\n<li><p>An interesting library related to QuickCheck is <a href=\"http://hackage.haskell.org/package/hedgehog\" rel=\"nofollow noreferrer\">Hedgehog</a>, which does away with type classes for a <a href=\"https://www.fpcomplete.com/blog/quickcheck-hedgehog-validity\" rel=\"nofollow noreferrer\">strong reason</a> (tutorial and generally an eye-opener). So there may be lots of reasons to use and not use type classes; often there simply already exists exactly the type class you're looking for.</p></li>\n<li><p>It may be worth to read Gabriel Gonzalez' <a href=\"http://www.haskellforall.com/2012/05/scrap-your-type-classes.html\" rel=\"nofollow noreferrer\">Scrap Your Type Classes</a> which highlights some of the downsides of the uses of type classes. As the blog post starts with, his \"<em>opinion on type classes has mellowed since I wrote this post, but I still keep it around as a critique against the excesses of type classes.</em>\"</p></li>\n</ul>\n\n<blockquote>\n  <p>If there is a reason to use type classes, does anyone have a good project for a beginner to practice using them or some good form guides for them?</p>\n</blockquote>\n\n<p>It really depends on whether you want to define a type class, or just define type class instances for existing type classes, use an existing type class in base, or use some type class in an extended library.</p>\n\n<p>It can be fun to define type class instances for things that are <a href=\"http://hackage.haskell.org/package/base/docs/Data-Monoid.html\" rel=\"nofollow noreferrer\"><code>Monoid</code></a> or <a href=\"http://hackage.haskell.org/package/base/docs/Prelude.html#t:Semigroup\" rel=\"nofollow noreferrer\"><code>Semigroup</code></a> (<a href=\"http://learnyouahaskell.com/functors-applicative-functors-and-monoids\" rel=\"nofollow noreferrer\">tutorial</a>). It can also be fun to define your own <code>ToJSON</code> and <code>FromJSON</code> instances for some JSON data format that you might find interesting (<a href=\"https://artyom.me/aeson\" rel=\"nofollow noreferrer\">tutorial</a>).</p>\n"}], "owner": {"reputation": 657, "user_id": 11672176, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RJ2UolcBU3Y/AAAAAAAAAAI/AAAAAAAABb4/PR3tZ6Jz7Bw/photo.jpg?sz=128", "display_name": "BryceTheGrand", "link": "https://stackoverflow.com/users/11672176/brycethegrand"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 247, "favorite_count": 0, "accepted_answer_id": 57310908, "answer_count": 3, "score": 10, "last_activity_date": 1564684730, "creation_date": 1564667744, "last_edit_date": 1564669577, "question_id": 57310715, "link": "https://stackoverflow.com/questions/57310715/what-can-you-do-that-is-useful-with-haskell-type-classes", "title": "What can you do that is useful with Haskell Type Classes?", "body": "<p>I understand that type classes are very useful for organizing data and for type checking etc., but other than what is already included in prelude, is there ever a need to define your own class?</p>\n\n<p>Under almost any circumstance one could just define a data or newtype and get almost the same effect anyways. Using the built in \"Ord\", \"Eq\", \"Show\", and others seems to be enough to do anything you would want to do with classes.</p>\n\n<p>When I looked up projects for classes in Haskell I get a lot of example classes like so:</p>\n\n<pre><code>class Foo a where\n    bar :: a -&gt; a -&gt; Bool\n</code></pre>\n\n<p>If there is a reason to use type classes, does anyone have a good project for a beginner to practice using them or some good form guides for them?</p>\n"}, {"tags": ["haskell", "fold", "recursion-schemes", "foldable", "catamorphism"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1564665721, "post_id": 57305209, "comment_id": 101112297, "body": "Can you make the question more precise? In particular, does any of the answers below fit your intended question?"}, {"owner": {"reputation": 1324, "user_id": 3882308, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/6c8a96b960efdca5a76900447e295b30?s=128&d=identicon&r=PG", "display_name": "Michael Thomas", "link": "https://stackoverflow.com/users/3882308/michael-thomas"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1564666449, "post_id": 57305209, "comment_id": 101112729, "body": "I added &#39;in all cases&#39; to clarify;  Mark&#39;s answer was what I was looking for. Happy to edit again if you have some language which is more precise?"}], "answers": [{"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1564656283, "post_id": 57306798, "comment_id": 101106922, "body": "I thought the question was about whether we can do something like this to every type which supports <code>cata</code>. Here, AFAICS, <code>deriveBifoldable</code> can fail in the general case."}, {"owner": {"reputation": 1324, "user_id": 3882308, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/6c8a96b960efdca5a76900447e295b30?s=128&d=identicon&r=PG", "display_name": "Michael Thomas", "link": "https://stackoverflow.com/users/3882308/michael-thomas"}, "edited": false, "score": 0, "creation_date": 1564667152, "post_id": 57306798, "comment_id": 101113189, "body": "&#39;I say &quot;want&quot;...&#39; - hahaha, yeah this is mindbending. Very, very cool too!"}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1564716113, "post_id": 57306798, "comment_id": 101129891, "body": "What makes <code>foldMap</code> the fundamental operation of Foldable, rather than <code>foldr</code>?"}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": false, "score": 4, "last_activity_date": 1564654670, "creation_date": 1564654670, "answer_id": 57306798, "question_id": 57305209, "link": "https://stackoverflow.com/questions/57305209/can-i-write-foldr-or-foldmap-in-terms-of-recursion-schemes-cata/57306798#57306798", "title": "Can I write `foldr` (or `foldMap`) in terms of &#39;recursion schemes&#39; `cata`?", "body": "<p><code>foldMap</code>, being the fundamental operation of <code>Foldable</code>, is a better candidate for implementation than <code>foldr</code>. The answer is a qualified yes. <code>cata</code> only handles recursion; it doesn't tell you where to \"find\" all the values in a structure. (In the same way, implementing <code>foldMap @[]</code> with <code>foldr</code> still requires knowing the inner details of <code>[]</code>.) Doing so requires <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bifoldable.html#t:Bifoldable\" rel=\"nofollow noreferrer\">a little help</a>:</p>\n\n<pre><code>class Bifoldable f where\n  bifoldMap :: Monoid m =&gt; (a -&gt; m) -&gt; (b -&gt; m) -&gt; f a b -&gt; m\n</code></pre>\n\n<p>You can then define</p>\n\n<pre><code>foldMapDefault ::\n  (Recursive (f a), Base (f a) ~ b a, Bifoldable b) =&gt;\n  Monoid m =&gt; (a -&gt; m) -&gt; f a -&gt; m\nfoldMapDefault f = cata (bifoldMap f id)\n</code></pre>\n\n<p>This allows you to do things like</p>\n\n<pre><code>data Tree a = Leaf | Branch (Tree a) a (Tree a)\nmakeBaseFunctor ''Tree\nderiveBifoldable ''TreeF\ninstance Foldable Tree where foldMap = foldMapDefault\n</code></pre>\n\n<p>(Though you may as well have just said <code>deriving Foldable</code> on <code>Tree</code>.) For maximum genericity, you may want something more like this (I say \"want\"...)</p>\n\n<pre><code>newtype Fixed f a = Fixed { getFixed :: f a }\nnewtype Bibase f a b = Bibase { getBibase :: Base (f a) b }\ninstance (forall a. Recursive (f a), Bifoldable (Bibase f)) =&gt;\n         Foldable (Fixed f) where\n  foldMap :: forall a m. Monoid m =&gt; (a -&gt; m) -&gt; Fixed f a -&gt; m\n  foldMap f = cata (bifoldMap f id . Bibase @f @a @m) . getFixed\n</code></pre>\n\n<p>You can now say things like</p>\n\n<pre><code>data Tree a = Leaf | Branch (Tree a) a (Tree a)\nmakeBaseFunctor ''Tree\nderiveBifoldable ''TreeF\nderiving via TreeF instance Bifoldable (Bibase Tree)\nderiving via (Fixed Tree) instance Foldable Tree\n</code></pre>\n\n<p>But now your <code>Base</code> functors can be more irregular:</p>\n\n<pre><code>data List a = Nil | Cons a (List a)\ntype instance Base (List a) = Compose Maybe ((,) a)\ninstance Recursive (List a) where\n  project Nil = Compose Nothing\n  project (Cons x xs) = Compose (Just (x, xs))\ninstance Bifoldable (Bibase List) where\n  bifoldMap f g (Bibase (Compose Nothing)) = mempty\n  bifoldMap f g (Bibase (Compose (Just (x, xs)))) = f x &lt;&gt; g xs\nderiving via (Fixed List) instance Foldable List\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1564665601, "post_id": 57308666, "comment_id": 101112225, "body": "I think the question was about whether a <i>parametric</i> type admitting <code>cata</code> also admits <code>foldMap</code>. This does not really make a counterexample, IMO. (The question could have specified the goal better, though.)"}], "tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": true, "score": 3, "last_activity_date": 1564666403, "last_edit_date": 1564666403, "creation_date": 1564661145, "answer_id": 57308666, "question_id": 57305209, "link": "https://stackoverflow.com/questions/57305209/can-i-write-foldr-or-foldmap-in-terms-of-recursion-schemes-cata/57308666#57308666", "title": "Can I write `foldr` (or `foldMap`) in terms of &#39;recursion schemes&#39; `cata`?", "body": "<p>You <a href=\"https://blog.ploeh.dk/2019/04/29/catamorphisms\" rel=\"nofollow noreferrer\">often can, but not universally</a>. All it takes is a single counter-example. Several exist, but consider the simplest one that comes to (my) mind.</p>\n\n<p>While completely unnecessary, <a href=\"https://blog.ploeh.dk/2019/05/06/boolean-catamorphism\" rel=\"nofollow noreferrer\">you can define Boolean values with an F-algebra</a>:</p>\n\n<pre><code>data\u00a0BoolF\u00a0a\u00a0=\u00a0TrueF\u00a0|\u00a0FalseF\u00a0deriving\u00a0(Show,\u00a0Eq,\u00a0Read) \n\ninstance\u00a0Functor\u00a0BoolF\u00a0where     \u00a0\n  fmap\u00a0_\u00a0\u00a0TrueF\u00a0=\u00a0\u00a0TrueF\n\u00a0\u00a0fmap\u00a0_\u00a0FalseF\u00a0=\u00a0FalseF\n</code></pre>\n\n<p>From this (as the linked article explains) you can derive the catamorphism:</p>\n\n<pre><code>boolF\u00a0::\u00a0a\u00a0-&gt;\u00a0a\u00a0-&gt;\u00a0Fix\u00a0BoolF\u00a0-&gt;\u00a0a\nboolF\u00a0x\u00a0y\u00a0=\u00a0cata\u00a0alg\n\u00a0\u00a0where\u00a0alg TrueF\u00a0=\u00a0x\n       \u00a0alg\u00a0FalseF\u00a0=\u00a0y\n</code></pre>\n\n<p>The type <code>Fix BoolF</code> is isomorphic to <code>Bool</code>, which isn't parametrically polymorphic (i.e. it doesn't have a type parameter), yet a catamorphism exists.</p>\n\n<p>The <code>Foldable</code> type class, on the other hand, is defined for a parametrically polymorphic container <code>t</code>, e.g.</p>\n\n<pre><code>foldr\u00a0:: (a -&gt; b -&gt; b) -&gt; b -&gt; t a -&gt; b\n</code></pre>\n\n<p>Since <code>Bool</code> isn't parametrically polymorphic, it can't be <code>Foldable</code>, yet a catamorphism exists. <a href=\"https://blog.ploeh.dk/2019/05/13/peano-catamorphism\" rel=\"nofollow noreferrer\">The same is true for Peano numbers</a>. </p>\n\n<hr>\n\n<p>For parametrically polymorphic types, on the other hand, you often (perhaps always?) can. Here's a <code>Foldable</code> instance for a tree <a href=\"https://blog.ploeh.dk/2019/06/10/tree-catamorphism\" rel=\"nofollow noreferrer\">defined with its catamorphism</a>:</p>\n\n<pre><code>instance\u00a0Foldable\u00a0TreeFix\u00a0where\n\u00a0\u00a0foldMap\u00a0f\u00a0=\u00a0treeF\u00a0(\\x\u00a0xs\u00a0-&gt;\u00a0f\u00a0x\u00a0&lt;&gt;\u00a0fold\u00a0xs)\n</code></pre>\n\n<p>Here's <a href=\"https://blog.ploeh.dk/2019/05/20/maybe-catamorphism\" rel=\"nofollow noreferrer\">one for <code>Maybe</code></a>:</p>\n\n<pre><code>instance\u00a0Foldable\u00a0MaybeFix\u00a0where\n  foldMap\u00a0=\u00a0maybeF\u00a0mempty\n</code></pre>\n\n<p>and <a href=\"https://blog.ploeh.dk/2019/05/27/list-catamorphism\" rel=\"nofollow noreferrer\">one for linked lists</a>:</p>\n\n<pre><code>instance\u00a0Foldable\u00a0ListFix\u00a0where\n  foldr\u00a0=\u00a0listF\n</code></pre>\n"}], "owner": {"reputation": 1324, "user_id": 3882308, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/6c8a96b960efdca5a76900447e295b30?s=128&d=identicon&r=PG", "display_name": "Michael Thomas", "link": "https://stackoverflow.com/users/3882308/michael-thomas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 224, "favorite_count": 0, "accepted_answer_id": 57308666, "answer_count": 2, "score": 8, "last_activity_date": 1564666403, "creation_date": 1564649535, "last_edit_date": 1564665545, "question_id": 57305209, "link": "https://stackoverflow.com/questions/57305209/can-i-write-foldr-or-foldmap-in-terms-of-recursion-schemes-cata", "title": "Can I write `foldr` (or `foldMap`) in terms of &#39;recursion schemes&#39; `cata`?", "body": "<p>I recently <a href=\"https://blog.sumtypeofway.com/recursion-schemes-part-2/\" rel=\"nofollow noreferrer\">read about recursion schemes</a> where catamorphisms are described as analogous to generalized <code>foldr</code>. </p>\n\n<p>Is is possible to write an instance of <code>Foldable</code> (via either <code>foldr</code> or <code>foldMap</code>) in terms of <code>cata</code> in all cases?</p>\n"}, {"tags": ["class", "haskell", "instance"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1564647087, "post_id": 57302561, "comment_id": 101101967, "body": "Your motivation for using a class seem weak. If you do not need at least two instances <code>instance Parser SomeType</code> and <code>instance Parser SomeOtherType</code>, using a class is not a good idea."}, {"owner": {"reputation": 81, "user_id": 11867102, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-qWtDnzqlbxo/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rc89Bfo8PaVxbWJM5Ew6i9JhEiRXA/photo.jpg?sz=128", "display_name": "CimimUxMaio", "link": "https://stackoverflow.com/users/11867102/cimimuxmaio"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1564727536, "post_id": 57302561, "comment_id": 101132833, "body": "Yeah, I understand. But I&#180;ve been reading about classes so I thought I could try them out as exercise."}], "answers": [{"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 6, "creation_date": 1564646951, "post_id": 57302862, "comment_id": 101101888, "body": "A higher kinded class is also a basic option, even if a bit less general: <code>class Parser p where parse :: p t -&gt; String -&gt; ParserOutput t</code>"}], "tags": [], "owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "is_accepted": true, "score": 7, "last_activity_date": 1564683645, "last_edit_date": 1564683645, "creation_date": 1564640338, "answer_id": 57302862, "question_id": 57302561, "link": "https://stackoverflow.com/questions/57302561/whats-wrong-with-the-types-for-my-parser-class/57302862#57302862", "title": "What&#39;s wrong with the types for my Parser class?", "body": "<p>The type signature</p>\n\n<pre><code>parse :: p -&gt; String -&gt; ParserOutput t\n</code></pre>\n\n<p>says <code>parse</code> can be used with any types <code>p</code> and <code>t</code> chosen by the caller.</p>\n\n<p>Now <code>p</code> is actually somewhat restricted because it must be an instance of <code>Parser</code>, so the effective type is</p>\n\n<pre><code>parse :: (Parser p) =&gt; p -&gt; String -&gt; ParserOutput t\n</code></pre>\n\n<p>but <code>t</code> is still completely free and unrelated to <code>p</code>.</p>\n\n<p>As a user of a function, I should (given a parser value <code>px</code>) be able to write e.g.</p>\n\n<pre><code>( parse px \"\" :: ParserOutput Int,\n  parse px \"\" :: ParserOutput String,\n  parse px \"\" :: ParserOutput (Double -&gt; Double -&gt; [Bool])\n)\n</code></pre>\n\n<p>Again, the type signature says I can choose <code>t</code> freely and differently in each call.</p>\n\n<p>Your <code>MyParser</code> instance doesn't satisfy this requirement. For clarity, let's use a different name for the type parameter:</p>\n\n<pre><code>instance Parser (MyParser r) where\n    parse (MyParser parserDefinition) = parserDefinition\n</code></pre>\n\n<p>In this instance, <code>parse</code> should have type</p>\n\n<pre><code>parse :: MyParser r -&gt; String -&gt; ParserOutput t\n</code></pre>\n\n<p>but the actual type is</p>\n\n<pre><code>parse :: MyParser r -&gt; String -&gt; ParserOutput r\n</code></pre>\n\n<p>With <code>parserDefinition</code> the result type depends directly on the parser type, but the <code>class</code> declaration doesn't reflect that.</p>\n\n<hr>\n\n<p>If you really want to use a class for this, you need to make this relationship explicit.</p>\n\n<p>For example, you could abstract over the type constructor <code>MyParser</code>, not <code>MyParser t</code>:</p>\n\n<pre><code>class Parser p where\n    parse :: p t -&gt; String -&gt; ParserOutput t\n\ninstance Parser MyParser where\n    parse (MyParser parserDefinition) = parserDefinition\n</code></pre>\n\n<p>This is slightly less general than your original attempt because it requires <code>Parser</code> instances to be parameterized by their result type.</p>\n\n<p>To allow arbitrary parser / result types, we'd have to use something like <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#extension-FunctionalDependencies\" rel=\"nofollow noreferrer\">functional dependencies</a>:</p>\n\n<pre><code>{-# LANGUAGE FunctionalDependencies, FlexibleInstances #-}\n\nclass Parser p t | p -&gt; t where\n    parse :: p -&gt; String -&gt; ParserOutput t\n\ninstance Parser (MyParser t) t where\n    parse (MyParser parserDefinition) = parserDefinition\n</code></pre>\n\n<p>Or using <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#associated-data-and-type-families\" rel=\"nofollow noreferrer\">associated type families</a>:</p>\n\n<pre><code>{-# LANGUAGE TypeFamilies #-}\n\nclass Parser p where\n    type Result p\n    parse :: p -&gt; String -&gt; ParserOutput (Result p)\n\ninstance Parser (MyParser t) where\n    type Result (MyParser t) = t\n    parse (MyParser parserDefinition) = parserDefinition\n</code></pre>\n"}], "owner": {"reputation": 81, "user_id": 11867102, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-qWtDnzqlbxo/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rc89Bfo8PaVxbWJM5Ew6i9JhEiRXA/photo.jpg?sz=128", "display_name": "CimimUxMaio", "link": "https://stackoverflow.com/users/11867102/cimimuxmaio"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 109, "favorite_count": 1, "accepted_answer_id": 57302862, "answer_count": 1, "score": 3, "last_activity_date": 1564683645, "creation_date": 1564638744, "last_edit_date": 1564643372, "question_id": 57302561, "link": "https://stackoverflow.com/questions/57302561/whats-wrong-with-the-types-for-my-parser-class", "title": "What&#39;s wrong with the types for my Parser class?", "body": "<p>I've been having some free time these days so I decided to learn some haskell.</p>\n\n<p>For practice I am translating a project I made in one of my classes in SCALA.\nBut I have problems with this part of the code. It is pretty simple to understand.</p>\n\n<p>The idea is to model some Parsers that would take some string and would parse it to a ParserOutput that contains the parsed element \"output\" and the \"remainder\" (part of the string that couldn't be parsed).</p>\n\n<p>I could have done this without defining a new class (just using the data \"MyParser\") but I thought it would be interesting to define a class so that I could define in one place all the methods that I expect Parsers to work on.</p>\n\n<pre><code>data ParserOutput a = \n    Failure | Success { output :: a, remainder :: String } \n        deriving (Show)\n\ndata MyParser t = MyParser (String -&gt; ParserOutput t)\n\nclass Parser p where\n    parse :: p -&gt; String -&gt; ParserOutput t\n\ninstance Parser (MyParser t) where\n    parse (MyParser parserDefinition) = parserDefinition\n</code></pre>\n\n<p>The error I am getting is:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>* Couldn't match type `t1' with `t'\n      `t1' is a rigid type variable bound by\n        the type signature for:\n          parse :: forall t1. MyParser t -&gt; String -&gt; ParserOutput t1\n        at ...\n      `t' is a rigid type variable bound by\n        the instance declaration\n        at ...\n      Expected type: String -&gt; ParserOutput t1\n        Actual type: String -&gt; ParserOutput t\n    * In the expression: parserDefinition\n      In an equation for `parse':\n          parse (MyParser parserDefinition) = parserDefinition\n      In the instance declaration for `Parser (MyParser t)'\n    * Relevant bindings include\n        parserDefinition :: String -&gt; ParserOutput t\n          (bound at ...)\n        parse :: MyParser t -&gt; String -&gt; ParserOutput t1\n          (bound at ...)\n</code></pre>\n"}]