[{"tags": ["haskell"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 5, "creation_date": 1572480278, "post_id": 58635162, "comment_id": 103577266, "body": "<code>() \u2243 a-&gt;() \u2243 a-&gt;a-&gt;() \u2243 ...</code> \u2014 Do you maybe mean some <code>m ()</code> result, rather than just <code>()</code>?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1572481279, "post_id": 58635162, "comment_id": 103577477, "body": "What makes you think this is such a common thing that it deserves a name?"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 2, "creation_date": 1572492779, "post_id": 58635162, "comment_id": 103579693, "body": "Looks like some sort of relation.  Functions returning JUST <code>()</code> in Haskell are very seldom useful (they come up when you are trying to control strictness, but only then).  But if you replace <code>()</code> with some other thing like <code>Bool</code> or <code>m () </code>for some <code>m</code> then I would call this a (perhaps generalized) relation."}], "answers": [{"comments": [{"owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "edited": false, "score": 1, "creation_date": 1572488607, "post_id": 58635773, "comment_id": 103578931, "body": "To be really pedantic, they&#39;re not all equivalent to <code>sink</code>. <code>seq</code> leads to one such exception. (Granted, you&#39;d have to case-match on the <code>()</code> for it to matter, but still...)"}], "tags": [], "owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "is_accepted": false, "score": 6, "last_activity_date": 1572485833, "last_edit_date": 1572485833, "creation_date": 1572485314, "answer_id": 58635773, "question_id": 58635162, "link": "https://stackoverflow.com/questions/58635162/is-there-a-name-for-a-function-that-takes-a-type-a-and-returns-a-function-from/58635773#58635773", "title": "Is there a name for a function that takes a type a, and returns a function from a to unit?", "body": "<p>All possible implementations of <code>something</code> are equivalent to</p>\n\n<pre><code>sink :: a -&gt; a -&gt; ()\nsink x y = ()\n</code></pre>\n\n<p>which you could also write as</p>\n\n<pre><code>sink = const $ const ()\n</code></pre>\n\n<p>As you can imagine, this is not a very frequently used function (it is guaranteed to never do anything interesting), and so there is no special name for it.</p>\n\n<p>Your second question, about <code>a -&gt; a -&gt; a</code>, is more interesting. If the function is to be polymorphic, i.e. to work over any <code>a</code> at all, there are just two possible implementations:</p>\n\n<pre><code>first x y = x\nsecond x y = y\n</code></pre>\n\n<p>But this type can be specialized to do something interesting for more specific <code>a</code> types. </p>\n\n<pre><code>(+) :: Int -&gt; Int -&gt; Int\n</code></pre>\n\n<p>is one example of such a specialization. Indeed this is the type of a binary operator, and any binary operator taking and returning <code>a</code> values has this type, or a specialization of it.</p>\n\n<p>Functions of this type are related to Monoid and to Semigroup, in a way, but not all such functions meet the rules necessary to be part of a Monoid or Semigroup instance.</p>\n"}], "owner": {"reputation": 32687, "user_id": 85931, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/a6d1f2e792d99695d610498b1170b6c6?s=128&d=identicon&r=PG", "display_name": "tpdi", "link": "https://stackoverflow.com/users/85931/tpdi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 69, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1572485833, "creation_date": 1572479550, "question_id": 58635162, "link": "https://stackoverflow.com/questions/58635162/is-there-a-name-for-a-function-that-takes-a-type-a-and-returns-a-function-from", "title": "Is there a name for a function that takes a type a, and returns a function from a to unit?", "body": "<p><code>something :: a -&gt; (a -&gt; ())</code></p>\n\n<p>Is there a name/concept for <code>something</code>, the function that takes an a and returns a function from a to unit? </p>\n\n<p>That is given an a, it returns a sink/consumer of a? </p>\n\n<p>Is <code>something</code> just <code>a -&gt; a -&gt; ()</code>, a bi-consumer of a?</p>\n\n<p>.</p>\n\n<p>What about:\n<code>somethingElse :: a -&gt; (a -&gt; a)</code></p>\n\n<p>the function from a to a function from a to a? </p>\n\n<p><code>somethingElse</code> is basically a combiner or binary operator on a, <code>a -&gt; a -&gt; a</code>, right?</p>\n"}, {"tags": ["list", "haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1572461898, "post_id": 58632047, "comment_id": 103571137, "body": "You are mixing <code>IO ()</code> with <code>String</code>s."}, {"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 0, "creation_date": 1572469141, "post_id": 58632047, "comment_id": 103574097, "body": "You may do like <code>putStrLn . join . map ((&#39; &#39;:) . show)</code>"}], "answers": [{"tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": false, "score": 3, "last_activity_date": 1572462162, "creation_date": 1572462162, "answer_id": 58632118, "question_id": 58632047, "link": "https://stackoverflow.com/questions/58632047/haskell-print-int-from-list-one-by-one/58632118#58632118", "title": "Haskell: Print Int from list one by one", "body": "<p>Well you are confusing things here, first of all:</p>\n\n<pre><code>putStr :: String -&gt; IO ()\n</code></pre>\n\n<p>And you are returning a <code>String</code>, so no need to use that. Also, you have no patter for <code>[]</code> and singleton list, you can add them to get a better output like this:</p>\n\n<pre><code>printLst :: [Int] -&gt; String\nprintLst [] = \"\"\nprintLst [x] = (show x)\nprintLst (x:xs) = (show x) ++ \" \" ++ printLst xs\n</code></pre>\n\n<p>If you want to use <code>IO ()</code> function, use it in the main function:</p>\n\n<pre><code>main = do\n  putStrLn (printLst [1..8])\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 0, "last_activity_date": 1572462181, "creation_date": 1572462181, "answer_id": 58632124, "question_id": 58632047, "link": "https://stackoverflow.com/questions/58632047/haskell-print-int-from-list-one-by-one/58632124#58632124", "title": "Haskell: Print Int from list one by one", "body": "<p>This is a list processing problem. For an empty list, we can return the empty string, for a non-empty list, we can first yield a space, followed by the <code>show</code> of that item, and then recurse on the rest of that list, like:</p>\n\n<pre><code>prefixSpace :: Show a =&gt; [a] -&gt; String\nprefixSpace [] = \"\"\nprefixSpace (x:xs) = ' ' : show x ++ prefixSpace xs\n</code></pre>\n\n<p>Or as a \"fold\" pattern:</p>\n\n<pre><code>prefixSpace :: Show a =&gt; [a] -&gt; String\nprefixSpace = foldr (\\x -&gt; ((' ' : show x) ++)) \"\"\n</code></pre>\n\n<p>This will <em>not</em> print the string. For that you need <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:putStrLn\" rel=\"nofollow noreferrer\"><strong><code>putStrLn :: String -&gt; IO ()</code></strong></a>, but as the signature indicates, if you <code>putStrLn some_string</code>, you work with an <code>IO ()</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 6, "last_activity_date": 1572462312, "creation_date": 1572462312, "answer_id": 58632145, "question_id": 58632047, "link": "https://stackoverflow.com/questions/58632047/haskell-print-int-from-list-one-by-one/58632145#58632145", "title": "Haskell: Print Int from list one by one", "body": "<p>First, define a function which converts an <code>Int</code> to a <code>String</code>, then prepends a space to the result.</p>\n\n<pre><code>\\x -&gt; ' ' : show x\n</code></pre>\n\n<p>Now map this over your list:</p>\n\n<pre><code>&gt;  map (\\x -&gt; ' ' : show x) [1..8]\n[\" 1\",\" 2\",\" 3\",\" 4\",\" 5\",\" 6\",\" 7\",\" 8\"]\n</code></pre>\n\n<p>Now we just need to concatenate all the strings into one:</p>\n\n<pre><code>&gt; concat (map (\\x -&gt; ' ' : show x) [1..8])\n\" 1 2 3 4 5 6 7 8\"\n</code></pre>\n\n<p>This can be simplied using the <code>concatMap</code> function:</p>\n\n<pre><code>&gt; concatMap (\\x -&gt; ' ':show x) [1..8]\n\" 1 2 3 4 5 6 7 8\"\n</code></pre>\n\n<p>which forms the basis for the <code>Monad</code> instance for lists:</p>\n\n<pre><code>&gt; [1..8] &gt;&gt;= (\\x -&gt; ' ' : show x)\n\" 1 2 3 4 5 6 7 8\"\n</code></pre>\n\n<p>or even more briefly, using function composition</p>\n\n<pre><code>&gt; [1..8] &gt;&gt;= (' ' :) . show\n\" 1 2 3 4 5 6 7 8\"\n</code></pre>\n\n<p>Once you have the final string, <em>now</em> you can worry about printing it.</p>\n\n<pre><code>&gt; putStrLn $ [1..8] &gt;&gt;= (' ' :) . show\n 1 2 3 4 5 6 7 8\n</code></pre>\n"}], "owner": {"reputation": 190, "user_id": 12105730, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0733efb1cec773dd7b2a6bab463b11cc?s=128&d=identicon&r=PG&f=1", "display_name": "DonnumS", "link": "https://stackoverflow.com/users/12105730/donnums"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 366, "favorite_count": 0, "accepted_answer_id": 58632145, "answer_count": 3, "score": 3, "last_activity_date": 1572473444, "creation_date": 1572461792, "question_id": 58632047, "link": "https://stackoverflow.com/questions/58632047/haskell-print-int-from-list-one-by-one", "title": "Haskell: Print Int from list one by one", "body": "<p>I've got a short question regarding something I want to do in Haskell.\nWhat I basically aim to achieve is to make a list of integers from 1 to a specific value y. Like [1..y], and the print this list with spaces between each number</p>\n\n<p>Let's say i have [1..8]</p>\n\n<p>My desired output is (\"_\" represents spaces): </p>\n\n<pre><code>_1_2_3_4_5_6_7_8\n</code></pre>\n\n<p>I have played a little bit with different things but without any luck</p>\n\n<p>This is basically what Iv' got so far</p>\n\n<pre><code>printLst :: [Int] -&gt; String\nprintLst (x:xs) = \" \" ++ putStr (show x) &gt;&gt; printLst xs\n</code></pre>\n\n<p>I've been searching around the web to find any solution to this, but I have not found anything that helps me do this.</p>\n\n<p>Help is greatly appreciated</p>\n"}, {"tags": ["haskell", "recursion"], "comments": [{"owner": {"reputation": 5663, "user_id": 6505847, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/MhmSw.jpg?s=128&g=1", "display_name": "AzyCrw4282", "link": "https://stackoverflow.com/users/6505847/azycrw4282"}, "edited": false, "score": 0, "creation_date": 1582753155, "post_id": 58630721, "comment_id": 106890213, "body": "I am new to haskell and currently working on creating a similar game to this. I have tried to run your code but how do I run the move function? And what is the type of the Board?"}], "answers": [{"tags": [], "owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "is_accepted": true, "score": 4, "last_activity_date": 1572462309, "creation_date": 1572462309, "answer_id": 58632144, "question_id": 58630721, "link": "https://stackoverflow.com/questions/58630721/nim-in-haskell-recursive-function-for-creating-board/58632144#58632144", "title": "Nim in Haskell : recursive function for creating board", "body": "<p>Your function <code>putRow</code> takes two arguments: the row number <code>row</code>, and the number of stars in that row <code>num</code>.</p>\n\n<p>When you call that function from <code>putBoard</code>, you're passing the same <code>x</code> for both <code>row</code> and <code>num</code></p>\n\n<pre><code>putRow x x\n</code></pre>\n\n<p>So it's no wonder that the number printed to the left matches the number of stars!</p>\n\n<p>What you need to do is pass <code>x</code> (which is the number of stars) for <code>num</code>, but pass the actual index of the row for <code>row</code>:</p>\n\n<pre><code>putRow idx x\n</code></pre>\n\n<p>But where to get the <code>idx</code>? Well, let's see: the first time you call <code>putBoard</code>, <code>idx</code> would be <code>1</code>. And then every time you call <code>putBoard</code> recursively - that would be printing the next row, so <code>idx</code> should get incremented by one. Let's write that down:</p>\n\n<pre><code>putBoard :: Int -&gt; Board -&gt; IO ()\nputBoard idx (x:xs) = putRow idx x &gt;&gt; putBoard (idx+1) xs\nputBoard idx [] = putStr \" 1 2 3\"\n</code></pre>\n\n<p>But now whoever calls <code>putBoard</code> has to provide the initial <code>1</code>:</p>\n\n<pre><code>putBoard 1 board\n</code></pre>\n\n<p>That's a bit inconvenient, so you can wrap that up in an inner function like this:</p>\n\n<pre><code>putBoard :: Board -&gt; IO ()\nputBoard = go 1\n  where\n    go idx (x:xs) = putRow idx x &gt;&gt; go (idx+1) xs\n    go idx [] = putStr \" 1 2 3\"\n</code></pre>\n"}], "owner": {"reputation": 190, "user_id": 12105730, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0733efb1cec773dd7b2a6bab463b11cc?s=128&d=identicon&r=PG&f=1", "display_name": "DonnumS", "link": "https://stackoverflow.com/users/12105730/donnums"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 454, "favorite_count": 0, "accepted_answer_id": 58632144, "answer_count": 1, "score": 4, "last_activity_date": 1572462309, "creation_date": 1572456156, "last_edit_date": 1572457397, "question_id": 58630721, "link": "https://stackoverflow.com/questions/58630721/nim-in-haskell-recursive-function-for-creating-board", "title": "Nim in Haskell : recursive function for creating board", "body": "<p>I'm creating a game called nim using haskell. To summarize the game short:\nBy calling nim followed by a number up to to 9 I create the board for the game:</p>\n\n<pre><code>&gt;&gt; nim 3\n</code></pre>\n\n<pre><code>1 *\n2 * *\n3 * * *\n  1 2 3\n</code></pre>\n\n<p>This is working as it should. The game goes as follows: You can remove any number of stars fro any row, but you have to remove at least 1 star. You cannot remove stars from row 1 and 2 in the same turn. Person to remove last star wins. </p>\n\n<p>Okay, so the game plays as it should, but a problem occurs when I'm printing the board after each turn.</p>\n\n<p>Let's say I have the board above, and give input to remove 1 1 (remove 1 star from row 1)</p>\n\n<p>This is what I get:</p>\n\n<pre><code>0 \n2 * *\n3 * * *\n  1 2 3\n</code></pre>\n\n<p>The 0 should still be 1. </p>\n\n<p>These are my functions responsible for printing the board\n<code>putRow</code> takes in the row number and the number of stars. These two arguments are the same but I had no luck with changing the function to only accept 1.</p>\n\n<p><code>putBoard</code> takes in the list that represents the board for the game. putBoard [1,2,3] creates the board from the game above. I runs putStr in the first element and then recursively calls putRow in the remainder of the list. </p>\n\n<pre><code>putRow :: Int -&gt; Int -&gt; IO ()\nputRow row num = do putStr (show row)\n                    putStr \" \"\n                    putStrLn (concat (replicate num \"* \"))\n\nputBoard :: Board -&gt; IO ()\nputBoard (x:xs) =    putRow x x &gt;&gt; putBoard xs\nputBoard [] = putStr \" 1 2 3\"\n</code></pre>\n\n<p><code>putBoard []</code> is going to be replaced later to create column numbers under the board, but thats for later. For now its just a string that only works with game with boardsize 3.</p>\n\n<p>This is the function that handles moves when row and number of stars is specified</p>\n\n<pre><code>move :: Board -&gt; Int -&gt; Int -&gt; Board\nmove board row num = [update r n | (r, n) &lt;- zip [1..] board]\n   where update r n = if r == row then (n - num) else n\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 1, "creation_date": 1572455299, "post_id": 58630353, "comment_id": 103568166, "body": "Did you mean to write <code>data Payoffs a = ...</code> perhaps?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1572456191, "post_id": 58630353, "comment_id": 103568581, "body": "Complete side comment: don&#39;t <code>NZS (a,a)</code>. Instead <code>NZS a a</code>. The extra tuple constructor isn&#39;t doing anything good for you (and is doing something bad: extra allocation and indirection)."}, {"owner": {"reputation": 129, "user_id": 11940374, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-sHjkCuSC4Ig/AAAAAAAAAAI/AAAAAAAAABE/jyw9QYcSD2Y/photo.jpg?sz=128", "display_name": "Agent 008", "link": "https://stackoverflow.com/users/11940374/agent-008"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1572459707, "post_id": 58630353, "comment_id": 103570179, "body": "@DanielWagner I&#39;m using a tuple because it is supposed to be a tuple mathematically"}, {"owner": {"reputation": 129, "user_id": 11940374, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-sHjkCuSC4Ig/AAAAAAAAAAI/AAAAAAAAABE/jyw9QYcSD2Y/photo.jpg?sz=128", "display_name": "Agent 008", "link": "https://stackoverflow.com/users/11940374/agent-008"}, "reply_to_user": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1572460027, "post_id": 58630353, "comment_id": 103570324, "body": "@n.m. if I write <code>data Payoffs a = ...</code> will I still be able to compare a payoff of <code>Int</code>s with a payoff of <code>Fractional</code>s?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1572464836, "post_id": 58630353, "comment_id": 103572343, "body": "Mathematically, you may think of the author having added a short sentence at the start of their manuscript saying, &quot;When I write the syntax <code>(x, y)</code> as the payoffs of a non-zero sum game, I am using this as a pretty notation whose actual meaning is <code>NZS x y</code>.&quot;. Then you may feel free to move forward with <code>NZS a a</code> instead of <code>NZS (a,a)</code>. (After all, I bet you are implicitly already imagining a similar sentence for your other constructor... or do the math definitions you are reading really include <code>ZS</code> tags all over the place...?)"}, {"owner": {"reputation": 129, "user_id": 11940374, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-sHjkCuSC4Ig/AAAAAAAAAAI/AAAAAAAAABE/jyw9QYcSD2Y/photo.jpg?sz=128", "display_name": "Agent 008", "link": "https://stackoverflow.com/users/11940374/agent-008"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1572466090, "post_id": 58630353, "comment_id": 103572852, "body": "@DanielWagner ok I guess I could do that, just reluctant because the ordered pair is 1 thing, like a point. In Haskell graphics libraries, are points constructed using tuples or with multiple arguments?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1572478956, "post_id": 58630353, "comment_id": 103576979, "body": "@Agent008 There are libraries that make each of those choices, and there are more choices besides that which you have not yet imagined. I don&#39;t really see how that&#39;s relevant, though."}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1572498630, "post_id": 58630353, "comment_id": 103580833, "body": "If you can compare an Int with a Fractional without having any Payoff, then you can do the same when wrapped in a Payoff. Can you?"}, {"owner": {"reputation": 129, "user_id": 11940374, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-sHjkCuSC4Ig/AAAAAAAAAAI/AAAAAAAAABE/jyw9QYcSD2Y/photo.jpg?sz=128", "display_name": "Agent 008", "link": "https://stackoverflow.com/users/11940374/agent-008"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1572583295, "post_id": 58630353, "comment_id": 103612690, "body": "@DanielWagner I was just wondering if it is idiomatic to have these kinds of functions without using tuples, and judging by your responses I think it is!"}], "answers": [{"comments": [{"owner": {"reputation": 129, "user_id": 11940374, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-sHjkCuSC4Ig/AAAAAAAAAAI/AAAAAAAAABE/jyw9QYcSD2Y/photo.jpg?sz=128", "display_name": "Agent 008", "link": "https://stackoverflow.com/users/11940374/agent-008"}, "edited": false, "score": 0, "creation_date": 1572458568, "post_id": 58630441, "comment_id": 103569657, "body": "I will use GADT syntax. Is it also worth it to then make <code>Payoffs</code> an instance of <code>Num</code>, <code>Eq</code>, and <code>Ord</code>, or is this unnecessary?"}], "tags": [], "owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "is_accepted": true, "score": 4, "last_activity_date": 1572455707, "last_edit_date": 1572455707, "creation_date": 1572455071, "answer_id": 58630441, "question_id": 58630353, "link": "https://stackoverflow.com/questions/58630353/type-constraint-in-constructor/58630441#58630441", "title": "Type Constraint in Constructor", "body": "<p><strong>Short answer</strong> (and probably not the one you need):<br>\nTo make your code work as is, you need a <code>forall</code> quantifier (for which you need to enable <code>ExistentialQuantification</code>):</p>\n\n<pre><code>{-# LANGUAGE ExistentialQuantification #-}\n\ndata Payoffs =\n      forall a. (Num a, Eq a, Ord a) =&gt; ZS a\n    | forall a. (Num a, Eq a, Ord a) =&gt; NZS (a,a)\n</code></pre>\n\n<hr>\n\n<p>If you have a type variable in the data constructor (i.e. <code>ZS a</code>), then you have two choices: either that variable has to appear in the type constructor (i.e. <code>data Payoffs a =</code>), or you need to say \"<em>I don't care what type it is, as long as it supports these classes</em>\" - which is achieved via the <code>forall</code> quantifier.</p>\n\n<p>But this looks kinda useless to me, which suggests that you may be misunderstanding what it means. If you write the above code, every value of your <code>Payoffs</code> type will be able to wrap a value of <em>any</em> type, as long as that type supports <code>Num</code>, <code>Eq</code>, and <code>Ord</code>. One subtle consequence of this is that, if you have two values of <code>Payoffs</code> lying around, they <em>will not necessarily wrap the same type</em>. For example:</p>\n\n<pre><code>let x = ZS (42 :: Int)  -- wraps an Int\nlet y = NZS (2.71 :: Double, 3.14)  -- wraps two Doubles\n</code></pre>\n\n<p>This means that, upon unpacking them, you won't be able to, for example, add them together, because, even though they both implement <code>Num</code>, the compiler doesn't have any proof that they're actually the same type.</p>\n\n<p>What I suspect you actually need is a parametrized type, like this:</p>\n\n<pre><code>data Payoffs a = ZS a | NZS (a, a)\n</code></pre>\n\n<p>But then, of course, you lose the constraints: anybody can go and create <code>ZS String</code> or something. You can use the GADT syntax (with the <code>GADTs</code> extension) to bring them back:</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\n\ndata Payoffs a where\n    ZS :: (Num a, Ord a, Eq a) =&gt; a -&gt; Payoffs a\n    NZS :: (Num a, Ord a, Eq a) =&gt; (a, a) -&gt; Payoffs a\n</code></pre>\n\n<p>This notation is equivalent to <code>ZS a | NZS (a, a)</code>, except you get to define each constructor with the same syntax as any function - including constraints. A type defined like this won't allow for creating values of type <code>Payoffs a</code> unless <code>a</code> satisfies the constraints.</p>\n\n<p>At the same time, if you have a value of a type like this lying around, you know what type it wraps inside. And this allows you to tell if two <code>Payoffs</code> values wrap the same type or different. And then, if you know that they're the same, you can do things with them using the supported classes, for example:</p>\n\n<pre><code>addPayoffs :: Payoffs a -&gt; Payoffs a -&gt; Payoffs a\naddPayoffs (ZS a) (ZS b) = ZS (a + b)\naddPayoffs (ZS a) (NZS (x,y)) = NZS (a+x, a+y)\n... etc.\n</code></pre>\n"}], "owner": {"reputation": 129, "user_id": 11940374, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-sHjkCuSC4Ig/AAAAAAAAAAI/AAAAAAAAABE/jyw9QYcSD2Y/photo.jpg?sz=128", "display_name": "Agent 008", "link": "https://stackoverflow.com/users/11940374/agent-008"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 69, "favorite_count": 0, "closed_date": 1572456109, "accepted_answer_id": 58630441, "answer_count": 1, "score": 1, "last_activity_date": 1572455707, "creation_date": 1572454677, "question_id": 58630353, "link": "https://stackoverflow.com/questions/58630353/type-constraint-in-constructor", "closed_reason": "Duplicate", "title": "Type Constraint in Constructor", "body": "<p>I am trying to make a normal form game solver for game theory, and I'm trying to make it as generic as possible for good practice and for my own convenience. I would like to use the same functions to solve both zero-sum and non-zero-sum games, so I am using the following data type:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>data Payoffs = (Num a, Eq a, Ord a) =&gt; ZS a\n    | (Num a, Eq a, Ord a) =&gt; NZS (a,a)\n</code></pre>\n\n<p>However, this is not correct syntax. Is there any way to constrain <code>a</code> so that it must satisfy those type constraints?</p>\n"}, {"tags": ["haskell", "graph-theory", "induction"], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1572456412, "post_id": 58630506, "comment_id": 103568673, "body": "@IgnatInsarov You can make it inductive by recursively matching, and keeping track of the boundary between the matched and unmatched parts of the graph (as you go, insert predecessors of nodes you process into the set and delete the nodes you process from the set). But I don&#39;t think the asymptotics will be better, and it will be much harder to read. I also considered cooking up a more modern generalization of <code>gmap</code> that lets you operate in some <code>Applicative</code> (so that you could store the boundary set in <code>State</code>, say, instead of writing a custom recursion), but it has similar drawbacks."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1572464041, "post_id": 58630506, "comment_id": 103572016, "body": "However, the problem would not exist if the <i>&quot;suspended&quot;</i> edges were not removed from the graph in the first place. It is inductive on the nodes, and it still would be."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1572464648, "post_id": 58630506, "comment_id": 103572255, "body": "@IgnatInsarov No, that would not be inductive, for essentially analogous reasons that inductive processing of trees cannot see the parents of a node, only its descendants."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1572467605, "post_id": 58630506, "comment_id": 103573419, "body": "I am not sure I follow. When you are saying <i>&quot;inductive processing of trees cannot see the parents of a node&quot;</i>, you are meaning other <i>nodes</i>, while in this case I ask to merely suspend <i>edges</i>, and even only those attached to the boundary. As I see it, the induction on nodes is not affected by edges in any way."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1572468315, "post_id": 58630506, "comment_id": 103573737, "body": "<b>P.S.</b> I actually hacked <code>fgl</code> and it works, on my few simple examples."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1572469154, "post_id": 58630506, "comment_id": 103574100, "body": "It does insert some edges twice. Not sure if that can be fixed."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1572478855, "post_id": 58630506, "comment_id": 103576961, "body": "@IgnatInsarov The analog of edges in standard ADTs is just other fields than the recursive one. When processing a child node, you generally do not have access to the parents&#39; other fields; and if you want that ability, you write a custom recursion that passes it along as state. And hey presto, we&#39;re in the very situation we are with fgl: passing around some extra state about the supergraph we&#39;re a part of!"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 1, "last_activity_date": 1572455286, "creation_date": 1572455286, "answer_id": 58630506, "question_id": 58630314, "link": "https://stackoverflow.com/questions/58630314/how-to-uniformly-map-over-an-inductive-graph/58630506#58630506", "title": "How to uniformly map over an inductive graph?", "body": "<p>If you want to look at the context in the original graph, then you need a copy of the original graph:</p>\n\n<pre><code>isLeaf :: Graph gr =&gt; gr a b -&gt; Context a b -&gt; Bool\nisLeaf g (_, n, _, _) = null (suc g n)\n</code></pre>\n\n<p>Then:</p>\n\n<pre><code>&gt; gmap (mark (isLeaf ab)) ab\nmkGraph [(1,('a',False)),(2,('b',False))] [(1,2,()),(2,1,())]\n</code></pre>\n"}], "owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 58, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1572455286, "creation_date": 1572454544, "question_id": 58630314, "link": "https://stackoverflow.com/questions/58630314/how-to-uniformly-map-over-an-inductive-graph", "title": "How to uniformly map over an inductive graph?", "body": "<p>This post is about <a href=\"https://hackage.haskell.org/package/fgl\" rel=\"nofollow noreferrer\"><code>fgl</code></a>, the usual Haskell graph library.</p>\n\n<p>Suppose I have a graph and I want to label the leaves, a leaf being a vertex without outgoing edges. I draft the trivial predicate on a context:</p>\n\n<pre><code>isLeaf :: Context a b -&gt; Bool\nisLeaf (_, _, _, [ ]) = True\nisLeaf (_, _, _, _  ) = False\n</code></pre>\n\n<p>\u2014 And then I draft an equally trivial, if verbose, function to label a context with a predicate.</p>\n\n<pre><code>mark :: (Context a b -&gt; Bool) -&gt; Context a b -&gt; Context (a, Bool) b\nmark p x@(edgesIn, identifier, label       , edgesOut)\n       = (edgesIn, identifier, (label, p x), edgesOut)\n</code></pre>\n\n<p>What could go wrong. And yet.</p>\n\n<pre><code>\u03bb ab\nmkGraph [(1,'a'),(2,'b')] [(1,2,()),(2,1,())]\n\u03bb gmap (mark isLeaf) ab\nmkGraph [(1,('a',False)),(2,('b',True))] [(1,2,()),(2,1,())]\n</code></pre>\n\n<p><code>ab</code>, being a cycle, has no leaves, and yet a node is marked. After a bit of thinking, I understand that this is due exactly to the inductive nature of the function <code>gmap</code>: when it removes a context from <code>ab</code>, it modifies the context of the remaining nodes, removing the edges they share with the departed context.</p>\n\n<p>But this is not what I want. It gives me a <em>stack</em>; what I want is a <em>zipper</em>. I want to have my <em>symmetry</em>. I am sure I can hack around this problem, but I wonder if there is a clean, obvious, <em>standard</em> solution.</p>\n"}, {"tags": ["haskell", "types"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 3, "creation_date": 1572438609, "post_id": 58625328, "comment_id": 103558410, "body": "Go back to the first error shown - the problem seems to be because you&#39;ve defined <code>treeFromList</code> as taking 2 inputs, a list and a tree, while calling it with just the first, list argument. So how do you want this function to behave? The name to me implies that it should take a list and output a tree, and the way you called it suggests you want it to work that way. But in this case your definition is wrong. (It looks to me that what you have should be a helper function internal to the function, and the main function should call that with <code>EmptyTree</code> as the second argument.)"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1572448091, "post_id": 58625328, "comment_id": 103564150, "body": "If you are interested, <code>treeFromList</code> is &quot;just&quot; <code>execState . traverse (modify . treeInsert)</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1572451625, "post_id": 58625328, "comment_id": 103566176, "body": "Or <code>treeFromList = flip (foldl&#39; (flip treeInsert))</code>."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 6, "last_activity_date": 1572438678, "creation_date": 1572438678, "answer_id": 58625453, "question_id": 58625328, "link": "https://stackoverflow.com/questions/58625328/haskell-instance-of-show-for-user-defined-type-constructor-not-in-scope/58625453#58625453", "title": "Haskell Instance of Show for user defined type - constructor not in scope", "body": "<p>You are confusing the <em>type</em> constructors (<code>BTree</code>), with the <em>data</em> constructors (<code>EmptyTree</code> and <code>Node</code>). If you define <code>instance &hellip;</code>, then you are on the type level, so <code>instance Show <s>EmptyTree</s></code> makes no sense. You can only define this with <code>BTree a</code> (and you likely want to add a type constraint to <code>a</code>).</p>\n\n<p>Furthermore in your defininition of <code>show &hellip; = ...</code> you are are working with values, so <code>show (Node <s>(BTree a)</s> b <s>(BTree c)</s>) = &hellip;</code> makes no sense either.</p>\n\n<p>You thus can define an instance for <code>Show</code> as:</p>\n\n<pre><code>instance <b>Show a</b> =&gt; Show (<b>BTree</b> a) where\n    show <b>EmptyTree</b> = \"\"\n    show (Node <b>a</b> b <b>c</b>) = show a ++ \" \" ++ <b>show</b> b ++ \" \" ++ show c</code></pre>\n\n<p>Here we thus map <code>EmptyTree</code> to the empty string, and for a <code>Node a b c</code> with <code>a</code> and <code>c</code> values of the type <code>BTree a</code>, we return <code>show a ++ \" \" ++ show b ++ \" \" + show c</code>.</p>\n\n<p>Note however that your implementation of <code>Show</code> will result in strings that are <em>ambiguous</em>, since <em>different</em> trees can return the <em>same</em> string.</p>\n\n<p>That being said, defining an instance for <code>Show (BTree a)</code> will <em>not</em> solve the underlying problem. Indeed the reason it complains is <em>not</em> because it can not show a <code>Show a =&gt; BTree a</code>, the error says it can not display a <code>BTree Integer -&gt; BTree Integer</code>, that is a function.</p>\n\n<p>You should construct a tree with:</p>\n\n<p><Pre><code>treeFromList [1,2,3] <b>EmptyTree</b></code></pre></p>\n"}, {"tags": [], "owner": {"reputation": 14543, "user_id": 235908, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/rTstt.jpg?s=128&g=1", "display_name": "Simon Shine", "link": "https://stackoverflow.com/users/235908/simon-shine"}, "is_accepted": true, "score": 7, "last_activity_date": 1572438780, "creation_date": 1572438780, "answer_id": 58625490, "question_id": 58625328, "link": "https://stackoverflow.com/questions/58625328/haskell-instance-of-show-for-user-defined-type-constructor-not-in-scope/58625490#58625490", "title": "Haskell Instance of Show for user defined type - constructor not in scope", "body": "<blockquote>\n<pre><code>treeFromList [1,2,3]\n</code></pre>\n  \n  <p>No instance for (Show (BTree Integer -> BTree Integer)) arising from a use of `print'</p>\n</blockquote>\n\n<p>This is because <code>treeFromList</code> takes two arguments.</p>\n\n<pre><code>\u03bb&gt; treeFromList [1,2,3] EmptyTree\nNode EmptyTree 1 (Node EmptyTree 2 (Node EmptyTree 3 EmptyTree))\n</code></pre>\n\n<p>You probably want to rearrange <code>treeFromList</code> so that it only takes one argument and initially assumes an empty tree. For example like:</p>\n\n<pre><code>treeFromList :: (Ord a) =&gt; [a] -&gt; BTree a\ntreeFromList [] = EmptyTree\ntreeFromList (node:nodes) = treeInsert node (treeFromList nodes)\n</code></pre>\n\n<p>or using a fold,</p>\n\n<pre><code>treeFromList :: (Ord a) =&gt; [a] -&gt; BTree a\ntreeFromList = foldr treeInsert EmptyTree\n</code></pre>\n"}], "owner": {"reputation": 126, "user_id": 9046524, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/34a06c20c674bbed6b6c4c6fe9c3d6e2?s=128&d=identicon&r=PG&f=1", "display_name": "twigonometry", "link": "https://stackoverflow.com/users/9046524/twigonometry"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 58625490, "answer_count": 2, "score": 3, "last_activity_date": 1572438780, "creation_date": 1572438299, "question_id": 58625328, "link": "https://stackoverflow.com/questions/58625328/haskell-instance-of-show-for-user-defined-type-constructor-not-in-scope", "title": "Haskell Instance of Show for user defined type - constructor not in scope", "body": "<p>Fairly new to Haskell and trying to wrap my head around user defined classes and, after lots of messing around and reading <em>learnyouahaskell</em>, I managed to define the following class for a binary tree:</p>\n\n<pre><code>data BTree a = EmptyTree | Node (BTree a) a (BTree a) deriving (Ord, Eq, Show)\n\n{- compares value of new node x to root\nif same, don't insert (no duplicates); if smaller, insert into left subtree lSub; if larger, insert into right subtree rSub -}\ntreeInsert :: (Ord a) =&gt; a -&gt; BTree a -&gt; BTree a\ntreeInsert x EmptyTree = Node EmptyTree x EmptyTree\ntreeInsert x (Node lSub root rSub)\n    | x == root = Node lSub x rSub\n    | x &lt; root = Node (treeInsert x lSub) root rSub\n    | x &gt; root = Node lSub root (treeInsert x rSub)\n\n--recurses over list of nodes to add\ntreeFromList :: (Ord a) =&gt; [a] -&gt; BTree a -&gt; BTree a\ntreeFromList [] tree = tree\ntreeFromList (node:nodes) tree = treeFromList nodes (treeInsert node tree)\n</code></pre>\n\n<p>The code above compiles, but when I try to run the following:</p>\n\n<pre><code>treeFromList [1,2,3]\n</code></pre>\n\n<p>I get an error saying \"No instance for (Show (BTree Integer -> BTree Integer))\n            arising from a use of `print'\"</p>\n\n<p>So I tried to define some instances of show (working from a stack overflow post on a similar example)</p>\n\n<pre><code>instance Show (BTree a) where\n    show (BTree a) = show a\n\ninstance Show EmptyTree where\n    show (EmptyTree) = \"\"\n\ninstance Show (Node (BTree a) a (BTree a)) where\n    show (Node (BTree a) b (BTree c)) = show BTree a ++ \" \" ++ b ++ \" \" ++ show BTree c\n</code></pre>\n\n<p>But the code doesn't compile and all of my reference to either BTree, Node, or EmptyTree give the error \"Not in scope: data constructor\"</p>\n\n<p>I can't figure out why they wouldn't be in scope, so I'm wondering if my definition of the instances are wrong somehow. Thanks in advance for any help</p>\n"}, {"tags": ["parsing", "haskell", "infinite-loop", "lazy-evaluation", "alternative-functor"], "comments": [{"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 1, "creation_date": 1572449521, "post_id": 58625324, "comment_id": 103564951, "body": "Also, if you&#39;re using a list instead of a Maybe, I&#39;d expect your <code>&lt;|&gt;</code> implementation to be to call both parsers unconditionally, and combine their results with <code>(++)</code>; <code>(Parser p) &lt;|&gt; (Parser q) = Parser $ (\\s -&gt; p s ++ q s)</code>"}, {"owner": {"reputation": 2418, "user_id": 1232832, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2c492983af89b49d44250c79579a2641?s=128&d=identicon&r=PG", "display_name": "Shou Ya", "link": "https://stackoverflow.com/users/1232832/shou-ya"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1572450934, "post_id": 58625324, "comment_id": 103565786, "body": "@amalloy: You&#39;re right, but either way it will stuck into the same loop."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 1, "creation_date": 1572452508, "post_id": 58625324, "comment_id": 103566701, "body": "@ShouYa It&#39;s not just &quot;those two different approaches are conceptually the same&quot;, but &quot;you&#39;ve pasted the exact same code twice and are asking why it only works once&quot;."}, {"owner": {"reputation": 2418, "user_id": 1232832, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2c492983af89b49d44250c79579a2641?s=128&d=identicon&r=PG", "display_name": "Shou Ya", "link": "https://stackoverflow.com/users/1232832/shou-ya"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1572452963, "post_id": 58625324, "comment_id": 103566955, "body": "@amalloy oops my fault. fixed :)"}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 8, "last_activity_date": 1572464476, "last_edit_date": 1572464476, "creation_date": 1572457562, "answer_id": 58631068, "question_id": 58625324, "link": "https://stackoverflow.com/questions/58625324/applicative-parser-stuck-in-infinite-loop/58631068#58631068", "title": "Applicative parser stuck in infinite loop", "body": "<p>Fact \"star\": in your implementation of <code>(&lt;*&gt;)</code>:</p>\n\n<pre><code>Parser p1 &lt;*&gt; Parser p2 = ...\n</code></pre>\n\n<p>...we must compute enough to know that both arguments are actually applications of the <code>Parser</code> constructor to something before we may proceed to the right-hand side of the equation.</p>\n\n<p>Fact \"pipe strict\": in this implementation:</p>\n\n<pre><code>Parser p1 &lt;|&gt; Parser p2 = ...\n</code></pre>\n\n<p>...we must compute enough to know that both parsers are actually applications of the <code>Parser</code> constructor to something before we may proceed to the right-hand side of the equals sign.</p>\n\n<p>Fact \"pipe lazy\": in this implementation:</p>\n\n<pre><code>p1 &lt;|&gt; p2 = Parser $ ...\n</code></pre>\n\n<p>...we may proceed to the right-hand side of the equals sign without doing any computation on <code>p1</code> or <code>p2</code>.</p>\n\n<p>This is important, because:</p>\n\n<pre><code>some v = some_v where\n    some_v = pure (:) &lt;*&gt; v &lt;*&gt; (some_v &lt;|&gt; pure [])\n</code></pre>\n\n<p>Let's take your first implementation, the one about which we know the \"pipe strict\" fact. We want to know if <code>some_v</code> is an application of <code>Parser</code> to something. Thanks to fact \"star\", we must therefore know whether <code>pure (:)</code>, <code>v</code>, and <code>some_v &lt;|&gt; pure []</code> are applications of <code>Parser</code> to something. To know this last one, by fact \"pipe strict\", we must know whether <code>some_v</code> and <code>pure []</code> are applications of <code>Parser</code> to something. Whoops! We just showed that to know whether <code>some_v</code> is an application of <code>Parser</code> to something, we need to know whether <code>some_v</code> is an application of <code>Parser</code> to something -- an infinite loop!</p>\n\n<p>On the other hand, with your second implementation, to check whether <code>some_v</code> is a <code>Parser _</code>, we still must check <code>pure (:)</code>, <code>v</code>, and <code>some_v &lt;|&gt; pure []</code>, but thanks to fact \"pipe lazy\", that's <em>all</em> we need to check -- we can be confident that <code>some_v &lt;|&gt; pure []</code> is a <code>Parser _</code> without first checking recursively that <code>some_v</code> and <code>pure []</code> are.</p>\n\n<p>(And next, you will learn about <code>newtype</code> -- and be confused yet again when changing from <code>data</code> to <code>newtype</code> makes <em>both</em> implementation work!)</p>\n"}], "owner": {"reputation": 2418, "user_id": 1232832, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2c492983af89b49d44250c79579a2641?s=128&d=identicon&r=PG", "display_name": "Shou Ya", "link": "https://stackoverflow.com/users/1232832/shou-ya"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 183, "favorite_count": 0, "accepted_answer_id": 58631068, "answer_count": 1, "score": 2, "last_activity_date": 1613886407, "creation_date": 1572438292, "last_edit_date": 1613886407, "question_id": 58625324, "link": "https://stackoverflow.com/questions/58625324/applicative-parser-stuck-in-infinite-loop", "title": "Applicative parser stuck in infinite loop", "body": "<p>I'm trying to implement my own Applicative parser, here's the code I use:</p>\n\n<pre><code>{-# LANGUAGE ApplicativeDo, LambdaCase #-}\n\nmodule Parser where\n\n-- Implementation of an Applicative Parser\n\nimport Data.Char\nimport Control.Applicative (some, many, empty, (&lt;*&gt;), (&lt;$&gt;), (&lt;|&gt;), Alternative)\n\ndata Parser a = Parser { runParser :: String -&gt; [(a, String)] }\n\ninstance Functor Parser where\n  -- fmap :: (a -&gt; b) -&gt; (Parser a -&gt; Parser b)\n  fmap f (Parser p) = Parser (\\s -&gt; [(f a, s') | (a,s') &lt;- p s])\n\ninstance Applicative Parser where\n  -- pure :: a -&gt; Parser a\n  -- &lt;*&gt; :: Parser (a -&gt; b) -&gt; Parser a -&gt; Parser b\n  pure x = Parser $ \\s -&gt; [(x, s)]\n  (Parser pf) &lt;*&gt; (Parser p) = Parser $ \\s -&gt; \n               [(f a, s'') | (f, s') &lt;- pf s, (a, s'') &lt;- p s']\n\ninstance Alternative Parser where\n  -- empty :: Parser a\n  -- &lt;|&gt; :: Parser a -&gt; Parser a -&gt; Parser a\n  empty = Parser $ \\_s -&gt; []\n  (Parser p1) &lt;|&gt; (Parser p2) = Parser $ \\s -&gt;\n      case p1 s of [] -&gt; p2 s\n                   xs -&gt; xs\n\nchar :: Char -&gt; Parser Char\nchar c = Parser $ \\case (c':cs) | c == c' -&gt; [(c,cs)] ; _ -&gt; []\n\nmain = print $ runParser (some $ char 'A') \"AAA\"\n</code></pre>\n\n<p>When I run it, it gets stuck and never returns. After digging into the problem I pinpointed the root cause to be my implementation of the <code>&lt;|&gt;</code> method. If I use the following implementation then everything goes as expected:</p>\n\n<pre><code>instance Alternative Parser where\n  empty = Parser $ \\_s -&gt; []\n  p1 &lt;|&gt; p2 = Parser $ \\s -&gt;\n    case runParser p1 s of [] -&gt; runParser p2 s\n                           xs -&gt; xs\n</code></pre>\n\n<p>These two implementations are, in my understanding, quite equivalent. What I guess is that this may have something to do with Haskell's lazy evaluation scheme. Can someone explain what's going on?</p>\n"}, {"tags": ["haskell", "monads", "typeclass", "monad-transformers"], "comments": [{"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1572376978, "post_id": 58613931, "comment_id": 103538157, "body": "How doesn&#39;t it work?"}, {"owner": {"reputation": 8888, "user_id": 4967403, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/JjcvA.jpg?s=128&g=1", "display_name": "J. Antonio Perez", "link": "https://stackoverflow.com/users/4967403/j-antonio-perez"}, "reply_to_user": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1572377315, "post_id": 58613931, "comment_id": 103538264, "body": "I added some information explaining what error I&#39;m getting"}], "answers": [{"comments": [{"owner": {"reputation": 8888, "user_id": 4967403, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/JjcvA.jpg?s=128&g=1", "display_name": "J. Antonio Perez", "link": "https://stackoverflow.com/users/4967403/j-antonio-perez"}, "edited": false, "score": 0, "creation_date": 1572377903, "post_id": 58614231, "comment_id": 103538490, "body": "Thank you! I tested this and it works! Is there any way to get this behavior in a more standard way, i.e. without enabling extensions?"}, {"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 2, "creation_date": 1572378692, "post_id": 58614231, "comment_id": 103538772, "body": "You misunderstand extensions. They are not hacks, they&#39;re part of the language, only selectable independently."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 8888, "user_id": 4967403, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/JjcvA.jpg?s=128&g=1", "display_name": "J. Antonio Perez", "link": "https://stackoverflow.com/users/4967403/j-antonio-perez"}, "edited": false, "score": 5, "creation_date": 1572379127, "post_id": 58614231, "comment_id": 103538952, "body": "@J.AntonioPerez You had to enable an extension to allow multiparameter type classes in the first place."}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": true, "score": 5, "last_activity_date": 1572377516, "creation_date": 1572377516, "answer_id": 58614231, "question_id": 58613931, "link": "https://stackoverflow.com/questions/58613931/how-can-i-write-a-function-run-that-calls-runstatet-or-runreadert/58614231#58614231", "title": "How can I write a function `run` that calls `runStateT` or `runReaderT`?", "body": "<p>The output type of <code>run</code> is totally determined by the input type to it. Represent this as a functional dependency (<code>-XFunctionalDependencies</code>):</p>\n\n<pre><code>class Runnable a b | a -&gt; b where\n  run :: a -&gt; b\n  -- side note: (//) does not belong here\n(//) :: Runnable a b =&gt; a -&gt; b\n(//) = run\n-- instances as given\n</code></pre>\n\n<p>Now it works. The reason your version doesn't work is because there's no way to know what the output type should be. If you have e.g.</p>\n\n<pre><code>act :: ReaderT Env Identity Ret\n</code></pre>\n\n<p>Then</p>\n\n<pre><code>run act :: Runnable (ReaderT Env Identity Ret) b =&gt; b\n</code></pre>\n\n<p>And then we're stuck, there's no way to figure out what <code>b</code> should be. It's e.g. possible to add another instance</p>\n\n<pre><code>instance Runnable (ReaderT r m a) (ReaderT r m a) where\n  run = id\n</code></pre>\n\n<p>And now <code>run act</code> can be either a <code>ReaderT Env Identity Ret</code> or <code>Env -&gt; Identity Ret</code>. The dependency <code>a -&gt; b</code> a) allows us to infer <code>b</code> from <code>a</code> and b) restricts <code>instance</code> declarations to make this possible. Conflicting instances like the one I gave are rejected, and <code>run act</code> has the <code>b</code> type inferred to <code>Env -&gt; Identity Ret</code> by looking at the <code>instance</code> you gave, as desired.</p>\n"}, {"tags": [], "owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "is_accepted": false, "score": 6, "last_activity_date": 1572434981, "last_edit_date": 1572434981, "creation_date": 1572378587, "answer_id": 58614427, "question_id": 58613931, "link": "https://stackoverflow.com/questions/58613931/how-can-i-write-a-function-run-that-calls-runstatet-or-runreadert/58614427#58614427", "title": "How can I write a function `run` that calls `runStateT` or `runReaderT`?", "body": "<p><strong>Short answer:</strong> you need a functional dependency on your class.</p>\n\n<p><strong>Long answer</strong>:</p>\n\n<p>When the compiler sees <code>run</code>, it needs to find the appropriate instance of <code>Runnable</code> in order to determine which implementation of <code>run</code> to use. And in order to find that instance, it needs to know what <code>a</code> and <code>b</code> are. It knows that <code>a</code> is a <code>ReaderT</code>, so that one is covered. But what is <code>b</code>?</p>\n\n<p>The compiler sees that you're using <code>b</code> as a function, passing <code>()</code> to it as argument. Therefore, thinks the compiler, <code>b</code> must be of shape <code>() -&gt; t</code>, where <code>t</code> is not known yet.</p>\n\n<p>And here is where it kinda stops: the compiler has nowhere to get <code>t</code> from, therefore it doesn't know <code>b</code>, therefore it can't find the appropriate instance, so kaboom!</p>\n\n<p>But there is a remedy for this situation. If we look closer at what your <code>Runnable</code> class actually means, it's easy to see that <code>b</code> should be strictly defined by <code>a</code>. That is, if we know what the monad is, we know what the return value would be. Therefore, it should be possible for the compiler to determine <code>b</code> by knowing <code>a</code>. But alas, the compiler doesn't know that!</p>\n\n<p>But there is a way to explain that to the compiler. It's called \"functional dependency\", and it's written like this:</p>\n\n<pre><code>class Runnable a b | a -&gt; b where\n</code></pre>\n\n<p>This notation <code>a -&gt; b</code> tells the compiler that <code>b</code> should be unambiguously determined by <code>a</code>. This will mean that, on one hand, the compiler won't let you define instances that violate this rule, and on the other hand, it will be able to find the appropriate instance of <code>Runnable</code> just by knowing <code>a</code>, and then determine <code>b</code> from that instance.</p>\n"}], "owner": {"reputation": 8888, "user_id": 4967403, "user_type": "registered", "accept_rate": 43, "profile_image": "https://i.stack.imgur.com/JjcvA.jpg?s=128&g=1", "display_name": "J. Antonio Perez", "link": "https://stackoverflow.com/users/4967403/j-antonio-perez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 160, "favorite_count": 0, "accepted_answer_id": 58614231, "answer_count": 2, "score": 2, "last_activity_date": 1572434981, "creation_date": 1572376142, "last_edit_date": 1572377174, "question_id": 58613931, "link": "https://stackoverflow.com/questions/58613931/how-can-i-write-a-function-run-that-calls-runstatet-or-runreadert", "title": "How can I write a function `run` that calls `runStateT` or `runReaderT`?", "body": "<p>How can I write a generic function <code>run</code> that takes an object of some monad transformer, and calls the corresponding function?</p>\n\n<p>Given <code>run s</code>, </p>\n\n<ul>\n<li>If <code>s</code> is a <code>StateT</code>, <code>run = runStateT</code></li>\n<li>If <code>s</code> is a <code>ReaderT</code>, <code>run = runReaderT</code></li>\n<li>If <code>s</code> is a <code>MaybeT</code>, <code>run = runMaybeT</code></li>\n</ul>\n\n<p>I've tried creating a typeclass <code>Runnable</code>:</p>\n\n<pre><code>:set -XMultiParamTypeClasses\n:set -XFlexibleInstances\n\nclass Runnable a b where\n  run :: a -&gt; b\n  (//) :: a -&gt; b\n  (//) = run\n\ninstance Runnable (StateT s m a) (s -&gt; m (a, s)) where\n run = runStateT\n\ninstance Runnable (ReaderT r m a) (r -&gt; m a) where\n run = runReaderT\n</code></pre>\n\n<p>But when I try using <code>run</code>, it doesn't work. For example, let's define <code>simpleReader</code>, which just returns <code>10</code> when read:</p>\n\n<pre><code>simpleReader = ReaderT $ \\env -&gt; Just 10\n\nrunReaderT simpleReader ()\n</code></pre>\n\n<p>This outputs <code>Just 10</code>, like expected. </p>\n\n<p>However, when I try using <code>run</code>, it gives me an error:</p>\n\n<pre><code>run simpleReader ()\n</code></pre>\n\n<pre><code>&lt;interactive&gt;:1:1: error:\n    \u2022 Non type-variable argument in the constraint: Runnable (ReaderT r Maybe a) (() -&gt; t)\n      (Use FlexibleContexts to permit this)\n    \u2022 When checking the inferred type\n        it :: forall r a t. (Runnable (ReaderT r Maybe a) (() -&gt; t), Num a) =&gt; t\n</code></pre>\n\n<p>If I enable <code>FlexibleContexts</code> like it suggests, I get a different error:</p>\n\n<pre><code>&lt;interactive&gt;:1:1: error:\n    \u2022 Could not deduce (Runnable (ReaderT r0 Maybe a0) (() -&gt; t))\n        (maybe you haven't applied a function to enough arguments?)\n      from the context: (Runnable (ReaderT r Maybe a) (() -&gt; t), Num a)\n        bound by the inferred type for \u2018it\u2019:\n                   forall r a t. (Runnable (ReaderT r Maybe a) (() -&gt; t), Num a) =&gt; t\n        at &lt;interactive&gt;:1:1-19\n      The type variables \u2018r0\u2019, \u2018a0\u2019 are ambiguous\n    \u2022 In the ambiguity check for the inferred type for \u2018it\u2019\n      To defer the ambiguity check to use sites, enable AllowAmbiguousTypes\n      When checking the inferred type\n        it :: forall r a t. (Runnable (ReaderT r Maybe a) (() -&gt; t), Num a) =&gt; t\n</code></pre>\n"}, {"tags": ["haskell", "tuples", "fold"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1572370506, "post_id": 58612696, "comment_id": 103535559, "body": "The first parameter in the &quot;fold-function&quot; is the accumulator, not a 2-tuple, so the distance &quot;thus far&quot;."}, {"owner": {"reputation": 53, "user_id": 2929507, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Ud2BO.png?s=128&g=1", "display_name": "bluewolfxD", "link": "https://stackoverflow.com/users/2929507/bluewolfxd"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1572370632, "post_id": 58612696, "comment_id": 103535618, "body": "I thought i could use other things besides the acc. So i need to do another function that gives me the tuples right?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1572370834, "post_id": 58612696, "comment_id": 103535709, "body": "not <i>per se</i>, but I&#39;m not convinced that a <code>foldl</code> will produce the most elegant code, no :)"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1572371435, "post_id": 58612696, "comment_id": 103535971, "body": "Hint: <code>(zip &lt;*&gt; tail) [p1, p2, p3, p4, ...]</code> will give you a list <code>[(p1, p2), (p2, p3), (p3, p4), ...]</code>. Also, <code>(zip &lt;*&gt; tail) [x] == []</code>, so the only special case is an empty input."}], "answers": [{"comments": [{"owner": {"reputation": 53, "user_id": 2929507, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Ud2BO.png?s=128&g=1", "display_name": "bluewolfxD", "link": "https://stackoverflow.com/users/2929507/bluewolfxd"}, "edited": false, "score": 0, "creation_date": 1572538157, "post_id": 58613291, "comment_id": 103599553, "body": "Thanks a lot for the explanation. i have to use for my homework either foldl or map, so i guess i&#39;ll use map. thanks a lot sir!"}], "tags": [], "owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "is_accepted": false, "score": 5, "last_activity_date": 1572386868, "last_edit_date": 1572386868, "creation_date": 1572373071, "answer_id": 58613291, "question_id": 58612696, "link": "https://stackoverflow.com/questions/58612696/total-distance-using-foldl/58613291#58613291", "title": "Total Distance using Foldl", "body": "<p>Folding, even if it feels like a reasonable approach, is not the right tool for this particuluar case since to calculate an accumulator value you need two items from the list at once along with the accumulator itself. This is not possible so no folding.</p>\n\n<p>Could be done like;</p>\n\n<pre><code>Prelude&gt; :{\nPrelude| let dist = sum . (zipWith hypot &lt;*&gt; tail)\nPrelude|            where hypot = \\(a,b) (c,d) -&gt; sqrt((a-c)^2 + (b-d)^2)\nPrelude| :}\nPrelude&gt; dist [(0,0), (0,0), (1,0), (1,10)]\n11.0\nPrelude&gt; dist [(1,1), (3,4)]\n3.605551275463989\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 1, "creation_date": 1572554666, "post_id": 58650624, "comment_id": 103606682, "body": "If you insist on using folding you need an accumulator in the type of <code>(Float, (Float,Float))</code> wheras the first is the distance and the second is the starting coordinate. I leave it up to you to discover the iterating function. Then there is another problem as whether the origin would be the starting point... ie <code>(0,(0,0))</code>  or what? It might be a time to consider <code>head</code>s and <code>tail</code>s :)"}], "tags": [], "owner": {"reputation": 53, "user_id": 2929507, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Ud2BO.png?s=128&g=1", "display_name": "bluewolfxD", "link": "https://stackoverflow.com/users/2929507/bluewolfxd"}, "is_accepted": false, "score": 0, "last_activity_date": 1572554241, "last_edit_date": 1572554241, "creation_date": 1572553068, "answer_id": 58650624, "question_id": 58612696, "link": "https://stackoverflow.com/questions/58612696/total-distance-using-foldl/58650624#58650624", "title": "Total Distance using Foldl", "body": "<p>So i was trying to come up with a way to use foldl, because on this function i really have to use a foldl or foldr. But i can't get all the examples working</p>\n\n<pre><code>distancia :: [(Float,Float)] -&gt; Float\ndistancia [] = 0.0\ndistancia [(_,_)] = 0.0\ndistancia (x:y:xs) = foldl(\\acc -&gt; acc + (hypo x y)) 0 (y:xs)\n where\n  hypo (xa,ya)(xb,yb) =  sqrt (((xa-xb)**2)+((ya-yb)**2))\n</code></pre>\n\n<p>I'm getting a wrong input when a list begins with [(0,0),(0,0)], it always gives me a wrong input, but if the list begins with [(0,0),(1,0),(0,0)] it works.</p>\n\n<pre><code>*Main&gt; distancia [(0,0), (0,0), (1,0), (1,10)]\n0,0\n</code></pre>\n\n<p>but if i do this</p>\n\n<pre><code>*Main&gt; distancia [(0,0), (1,0), (0,0), (1,10)]\n3,0\n</code></pre>\n\n<p>but when use this examples it works</p>\n\n<pre><code>*Main&gt; distancia [(0,0), (1,1), (0,0), (-1, -1), (0,0)]\n5.656854\n\n*Main&gt; distancia [(1,1), (0,0)]\n1.4142135\n</code></pre>\n\n<p>What is wrong?</p>\n"}], "owner": {"reputation": 53, "user_id": 2929507, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Ud2BO.png?s=128&g=1", "display_name": "bluewolfxD", "link": "https://stackoverflow.com/users/2929507/bluewolfxd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 103, "favorite_count": 1, "answer_count": 2, "score": 1, "last_activity_date": 1572554241, "creation_date": 1572370396, "last_edit_date": 1572375997, "question_id": 58612696, "link": "https://stackoverflow.com/questions/58612696/total-distance-using-foldl", "title": "Total Distance using Foldl", "body": "<p>I want get the total distance of a given list, that contains tuples of Floats. I have to guarantee that a list with less than 2 elements is going to output 0.0</p>\n\n<p>What i did so far was this:</p>\n\n<pre><code>distancia :: [(Float,Float)] -&gt; Float\ndistancia [] = 0.0\ndistancia [(_,_)] = 0.0\ndistancia (x:y:xs) = foldl(\\(xa,ya)(xb,yb) -&gt; sqrt(((xa-xb)**2)+((ya-yb)**2))) 0 xs\n</code></pre>\n\n<p>so the outputs i\u00b4m expecting is </p>\n\n<pre><code>ghci&gt; distancia [(0,0), (0,0), (1,0), (1,10)]\n11.0\nghci&gt; distancia [(1,1), (3,4)]\n3.6055512\n</code></pre>\n\n<p>but im getting the following error:</p>\n\n<pre><code>t3_fc42035.hs:9:22: error:\n    * Couldn't match expected type `Float'\n                  with actual type `(Float, Float)'\n    * In the expression:\n        foldl\n          (\\ (xa, ya) (xb, yb) -&gt; sqrt (((xa - xb) ** 2) + ((ya - yb) ** 2)))\n          0\n          xs\n      In an equation for `distancia':\n          distancia (x : y : xs)\n            = foldl\n                (\\ (xa, ya) (xb, yb) -&gt; sqrt (((xa - xb) ** 2) + ((ya - yb) ** 2)))\n                0\n                xs\n  |\n9 | distancia (x:y:xs) = foldl(\\(xa,ya)(xb,yb) -&gt; sqrt(((xa-xb)**2)+((ya- yb)**2))) 0 xs\n  |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nt3_fc42035.hs:9:47: error:\n    * Couldn't match expected type `(Float, Float)'\n                  with actual type `Float'\n    * In the expression: sqrt (((xa - xb) ** 2) + ((ya - yb) ** 2))\n      In the first argument of `foldl', namely\n        `(\\ (xa, ya) (xb, yb)\n            -&gt; sqrt (((xa - xb) ** 2) + ((ya - yb) ** 2)))'\n      In the expression:\n        foldl\n          (\\ (xa, ya) (xb, yb) -&gt; sqrt (((xa - xb) ** 2) + ((ya - yb) ** 2)))\n      0\n      xs\n  |\n9 | distancia (x:y:xs) = foldl(\\(xa,ya)(xb,yb) -&gt; sqrt(((xa-xb)**2)+((ya-yb)**2))) 0 xs\n  |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>I don't understand why i have to match the type (Float,Float)</p>\n"}, {"tags": ["haskell", "existential-type"], "comments": [{"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 4, "creation_date": 1572357431, "post_id": 58608470, "comment_id": 103528516, "body": "Haskell doesn&#39;t have implicit type conversions of any kind. And this is a good thing. I personally consider this to be a deficiency of Scala, not an advantage. Consequently, everybody is ok with having to convert manually. Users of your API won&#39;t mind (unless they too come from Scala)."}, {"owner": {"reputation": 4734, "user_id": 736508, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/2b30f4fcb5b2b34a8468a8d378cab9d1?s=128&d=identicon&r=PG", "display_name": "Gal", "link": "https://stackoverflow.com/users/736508/gal"}, "reply_to_user": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 2, "creation_date": 1572357575, "post_id": 58608470, "comment_id": 103528598, "body": "I&#39;m the user of my API, and I mind."}, {"owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "edited": false, "score": 3, "creation_date": 1572359471, "post_id": 58608470, "comment_id": 103529630, "body": "@Gal in the point 2 of your question you say that <code>type Consumer a b = a -&gt; IO b</code> force you to carry <i>useless</i> type <code>b</code>. If <code>b</code> is useless, Can&#39;t you define it as <code>()</code>?. If not please edit your question to show a use case  :)"}, {"owner": {"reputation": 4734, "user_id": 736508, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/2b30f4fcb5b2b34a8468a8d378cab9d1?s=128&d=identicon&r=PG", "display_name": "Gal", "link": "https://stackoverflow.com/users/736508/gal"}, "edited": false, "score": 0, "creation_date": 1572359999, "post_id": 58608470, "comment_id": 103529893, "body": "As I mentioned, defining the output type as <code>IO ()</code> forces my to use <code>Data.Functor.void</code> to discard the type at the call-site."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1572375421, "post_id": 58608470, "comment_id": 103537575, "body": "The usual option is to generalize the type of the function which &quot;consumes the consumer&quot;, i.e. instead of <code>foo :: (a -&gt; IO ()) -&gt; ...</code> we can use <code>foo :: (a -&gt; IO b) -&gt; ...</code>. Alternatively, we could use an existential type as you propose, but those in Haskell require a constructor wrapper to be used, and that would be similar to <code>void</code>."}], "answers": [{"comments": [{"owner": {"reputation": 4734, "user_id": 736508, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/2b30f4fcb5b2b34a8468a8d378cab9d1?s=128&d=identicon&r=PG", "display_name": "Gal", "link": "https://stackoverflow.com/users/736508/gal"}, "edited": false, "score": 0, "creation_date": 1572453325, "post_id": 58629364, "comment_id": 103567170, "body": "Why is this preferable to my second option of declaring <code>type Consumer a b = a -&gt; IO b</code>?"}, {"owner": {"reputation": 1602, "user_id": 5947247, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f5212b96ae435bb73b9980f34b2913e8?s=128&d=identicon&r=PG&f=1", "display_name": "Isaac van Bakel", "link": "https://stackoverflow.com/users/5947247/isaac-van-bakel"}, "reply_to_user": {"reputation": 4734, "user_id": 736508, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/2b30f4fcb5b2b34a8468a8d378cab9d1?s=128&d=identicon&r=PG", "display_name": "Gal", "link": "https://stackoverflow.com/users/736508/gal"}, "edited": false, "score": 0, "creation_date": 1572547859, "post_id": 58629364, "comment_id": 103603947, "body": "Because it makes it possible to write function signatures which accept <code>a -&gt; IO _</code> as an argument by constraining to <code>Consumer c a</code>, since every such function has an instance of the class. This isn&#39;t <i>perfect</i>, because what you&#39;re trying to do isn&#39;t a Haskell-ism. It is preferable to explicitly require <code>void</code>, or otherwise be polymorphic over the type <code>b</code>."}], "tags": [], "owner": {"reputation": 1602, "user_id": 5947247, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f5212b96ae435bb73b9980f34b2913e8?s=128&d=identicon&r=PG&f=1", "display_name": "Isaac van Bakel", "link": "https://stackoverflow.com/users/5947247/isaac-van-bakel"}, "is_accepted": false, "score": 0, "last_activity_date": 1572451142, "creation_date": 1572451142, "answer_id": 58629364, "question_id": 58608470, "link": "https://stackoverflow.com/questions/58608470/haskell-how-to-write-a-type-of-function-from-a-specific-type-to-any-type/58629364#58629364", "title": "Haskell: How to write a type of function from a specific type to any type?", "body": "<blockquote>\n  <p>I wouldn't mind if Consumer were a class if anyone knows how to make that work.</p>\n</blockquote>\n\n<p>You can <em>simulate</em> existential types for classes with an associated type family.</p>\n\n<p>But Haskell doesn't allow ambiguous types in classes without using something like a <code>GADT</code> existential wrapper, so you would still have the type information there <em>somewhere</em>.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE TypeFamilies, MultiParamTypeClasses #-}\n\nclass Consumer c a where\n  type Output c\n\n  consume :: c -&gt; a -&gt; IO (Output c)\n</code></pre>\n\n<p><code>c</code> is necessary here to allow for the reconstruction of the type of <code>Output c</code>, so it is not strictly an existential. But you can now write</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE FlexibleInstances, InstanceSigs #-}\n\ninstance Consumer (a -&gt; IO b) a where\n  type Output (a -&gt; IO b) = b\n\n  consume :: (a -&gt; IO b) -&gt; a -&gt; IO b\n  consume = id\n</code></pre>\n\n<p>This may not fit your use case, because there will not be a type signature that can express <code>Consumer a</code> in a truly existential way. But it is possible to write</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>... :: (Consumer c a) =&gt; c -&gt; ...\n</code></pre>\n\n<p>(You could also make use of <code>FunctionalDependencies</code> here to clarify the class somewhat.)</p>\n"}, {"tags": [], "owner": {"reputation": 1027, "user_id": 8201661, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-ZnbSrY_hynY/AAAAAAAAAAI/AAAAAAAAAGg/DP36j8HxldM/photo.jpg?sz=128", "display_name": "Nick", "link": "https://stackoverflow.com/users/8201661/nick"}, "is_accepted": false, "score": 1, "last_activity_date": 1577124995, "last_edit_date": 1577124995, "creation_date": 1572486710, "answer_id": 58635925, "question_id": 58608470, "link": "https://stackoverflow.com/questions/58608470/haskell-how-to-write-a-type-of-function-from-a-specific-type-to-any-type/58635925#58635925", "title": "Haskell: How to write a type of function from a specific type to any type?", "body": "<p>To get an existentially-quantified type in Haskell, you need to write down a <code>data</code> declaration (as opposed to a <code>newtype</code> declaration or a type alias declaration, like you used.).</p>\n\n<p>Here's a <code>Consumer</code> type that fits your purposes:</p>\n\n<pre><code>{-# LANGUAGE ExistentialQuantification #-}\ndata Consumer input = forall output. Consumer { runDiscardingOutput :: input -&gt; IO output }\n</code></pre>\n\n<p>And, analogously, here is what your example would look like with the new type:</p>\n\n<pre><code>f :: Int -&gt; IO Int\nf = undefined\n\ng :: Consumer Int\ng = Consumer f\n</code></pre>\n\n<p>This doesn't really avoid your concerns about client code needing an extra call, though. (I mean, this is no better than exporting a <code>consumer = Data.Functor.void</code> binding from your library.) Also, it complicates how clients will be able to use a consumer, too:</p>\n\n<pre><code>consumer :: Consumer Int\nconsumer = Consumer (\\x -&gt; return [x])\n\n{- This doesn't typecheck -}\nmain1 :: IO ()\nmain1 = runIgnoringOutput consumer 4\n\n{- This doesn't typecheck (!!!) -}\nmain2 :: IO ()\nmain2 = void (runIgnoringOutput consumer 4)\n\n{- Only this typechecks :( -}\nmain3 :: IO ()\nmain3 =\n  case consumer of\n  Consumer f -&gt; Data.Functor.void (f 4)\n</code></pre>\n\n<p>So it would probably make sense to have a <code>apply</code> function in your library that did the dirty work, just as there was an <code>apply</code> function in the Scala library.</p>\n\n<pre><code>apply :: Consumer a -&gt; a -&gt; IO ()\napply (Consumer f) x = void (f x)\n</code></pre>\n"}], "owner": {"reputation": 4734, "user_id": 736508, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/2b30f4fcb5b2b34a8468a8d378cab9d1?s=128&d=identicon&r=PG", "display_name": "Gal", "link": "https://stackoverflow.com/users/736508/gal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 186, "favorite_count": 0, "answer_count": 2, "score": 4, "last_activity_date": 1577124995, "creation_date": 1572356058, "last_edit_date": 1572369956, "question_id": 58608470, "link": "https://stackoverflow.com/questions/58608470/haskell-how-to-write-a-type-of-function-from-a-specific-type-to-any-type", "title": "Haskell: How to write a type of function from a specific type to any type?", "body": "<p>In Scala, I could write the following <code>trait</code>:</p>\n\n<pre><code>trait Consumer[A] {\n  def apply(a: A): Unit\n}\n</code></pre>\n\n<p>And scala would <strong>convert</strong> whatever I want to <code>Unit</code>, i.e., it would discard the type. Equivalently, I could have said that <code>apply</code> returns <code>Any</code> and ignore the result.</p>\n\n<p>However, in Haskell, if I defined the type as <code>type Consumer = a -&gt; IO ()</code>, I wouldn't be able to pass an <code>Int -&gt; IO Int</code> function, as <code>Int</code> isn't <code>()</code>.</p>\n\n<p>There are two ways I know of solving this issue, but none are satisfactory:</p>\n\n<ol>\n<li>Use <code>Data.Functor.void</code> at the call site to manual change <code>IO a</code> to <code>IO ()</code>. This is annoying as an API user.</li>\n<li>define <code>type Consumer a b = a -&gt; IO b</code>, but then every time I would want to use <code>Consumer</code> in a signature, I would have to carry the useless type <code>b</code>.</li>\n</ol>\n\n<p>Is there any way to define the <code>Consumer</code> type as a function from <code>a</code> to \"<code>IO Any</code>\"? As far as I know, Haskell does not support something like <code>exists x. a -&gt; IO x</code>.</p>\n\n<p>Using <code>forall</code> results in the opposite of what I want, e.g.,</p>\n\n<pre><code>type Consumer = forall b. a -&gt; IO b\nfoo :: Int -&gt; IO Int\nfoo = undefined\nbar :: Consumer Int\nbar = foo\n</code></pre>\n\n<p>results in the error: </p>\n\n<pre><code>    \u2022 Couldn't match type \u2018b\u2019 with \u2018Int\u2019\n      \u2018b\u2019 is a rigid type variable bound by\n        the type signature for:\n          bar :: Consumer Int\n      Expected type: Int -&gt; IO b\n        Actual type: Int -&gt; IO Int\n    \u2022 In the expression: foo\n      In an equation for \u2018bar\u2019: bar = foo\n    \u2022 Relevant bindings include\n        bar :: Int -&gt; IO b\n</code></pre>\n\n<p>Note that I specifically want <code>Consumer</code> to a be <code>type</code> alias, and not a <code>data</code> constructor, as is described here: <a href=\"https://stackoverflow.com/q/33063853\">Haskell function returning existential type</a>. I wouldn't mind if <code>Consumer</code> were a <code>class</code> if anyone knows how to make that work.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1572341760, "post_id": 58604572, "comment_id": 103520445, "body": "What is <code>day month year = ...</code> doing here?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1572341855, "post_id": 58604572, "comment_id": 103520503, "body": "It is furthermore not clear to me why you expect <code>mod (day + x + ...)</code> should return a <code>String</code> here?"}], "answers": [{"tags": [], "owner": {"reputation": 17170, "user_id": 1671066, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/bd4c9461f2d17a884fba66eeed20e320?s=128&d=identicon&r=PG", "display_name": "Micha Wiedenmann", "link": "https://stackoverflow.com/users/1671066/micha-wiedenmann"}, "is_accepted": false, "score": 8, "last_activity_date": 1572341798, "creation_date": 1572341798, "answer_id": 58604699, "question_id": 58604572, "link": "https://stackoverflow.com/questions/58604572/couldnt-match-expected-type-int-char-with-actual-type-int-possible-cau/58604699#58604699", "title": "Couldn&#39;t match expected type \u2018Int -&gt; [Char]\u2019 with actual type \u2018Int\u2019 Possible cause: \u2018mod\u2019 is applied to too many arguments", "body": "<p>You can simplify your code to determine the cause of the error. For example</p>\n\n<pre><code>weekDay :: Int -&gt; Int -&gt; Int -&gt; Int -&gt; [Char]\nweekDay day month year = mod 4 7\n</code></pre>\n\n<p>would result in the same problem as would</p>\n\n<pre><code>weekDay :: Int -&gt; Int -&gt; Int -&gt; Int -&gt; [Char]\nweekDay day month year = 10\n</code></pre>\n\n<p>and</p>\n\n<pre><code>weekDay :: Int -&gt; [Char]\nweekDay = 10\n</code></pre>\n\n<p>I found this technique extremely versatile and useful to solve all sorts of nasty problems.</p>\n"}], "owner": {"reputation": 51, "user_id": 12290526, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ef0a9965f9a92c5f2c3d8b1f5a5a58dd?s=128&d=identicon&r=PG&f=1", "display_name": "123", "link": "https://stackoverflow.com/users/12290526/123"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 91, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1573805280, "creation_date": 1572341337, "last_edit_date": 1573805280, "question_id": 58604572, "link": "https://stackoverflow.com/questions/58604572/couldnt-match-expected-type-int-char-with-actual-type-int-possible-cau", "title": "Couldn&#39;t match expected type \u2018Int -&gt; [Char]\u2019 with actual type \u2018Int\u2019 Possible cause: \u2018mod\u2019 is applied to too many arguments", "body": "<p>my code:</p>\n\n<pre><code>weekDay :: Int -&gt; Int -&gt; Int -&gt; Int -&gt; [Char]\nweekDay day month year = mod (day + x + (31 * m0) `div` 12) 7\n          where y0 = year - ((14 - month) `div` 12)\n                 x = y0 + y0 `div` 4 - y0 `div `100 + y0 `div` 400\n                 m0 = month + 12 * ((14 - month) `div` 12) - 2\n                 day month year = case day month year of\n                           0 -&gt; Sonntag\n                           1 -&gt; Montag\n                           2 -&gt; Dienstag\n                           3 -&gt; Mittwoch\n                           4 -&gt; Donnerstag\n                           5 -&gt; Freitag\n                           6 -&gt; Samstag\n                           otherwise -&gt; error\n</code></pre>\n\n<p>Errors:</p>\n\n<pre><code> error:\n    \u2022 Couldn't match expected type \u2018Int -&gt; [Char]\u2019\n                  with actual type \u2018Int\u2019\n    \u2022 Possible cause: \u2018mod\u2019 is applied to too many arguments\n      In the expression: mod (day + x + (31 * m0) `div` 12) 7\nerror:\n \u2022 Non type-variable argument in the constraint: Eq ([Char] -&gt; a)\n      (Use FlexibleContexts to permit this)\n    \u2022 When checking the inferred type\n        day :: forall a t1 t2.\n               (Eq ([Char] -&gt; a), Num ([Char] -&gt; a)) =&gt;\n               t1 -&gt; t2 -&gt; [Char] -&gt; a\n</code></pre>\n"}, {"tags": ["haskell", "cabal"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1572312370, "post_id": 58600068, "comment_id": 103512934, "body": "<code>cabal v2-build &amp;&amp; cabal v2-exec -- ghci -e &quot;print 123&quot;</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "is_accepted": true, "score": 0, "last_activity_date": 1572340939, "creation_date": 1572340939, "answer_id": 58604458, "question_id": 58600068, "link": "https://stackoverflow.com/questions/58600068/how-can-i-run-a-ghci-statement-in-cabal-v2-repl-directly-from-command-line/58604458#58604458", "title": "How can I run a GHCi statement in cabal v2-repl directly from command line?", "body": "<p>The simplest way is to use shell piping capabilities. See:</p>\n\n<pre><code>% cabal v2-repl &lt;&lt;&lt; ':type zip'\n...\n\u03bb zip :: [a] -&gt; [b] -&gt; [(a, b)]\n\u03bb Leaving GHCi.\n</code></pre>\n\n<p>This <code>&lt;&lt;&lt;</code> notation, in <code>sh</code> script interpreter, means that the quoted string is sent to the standard input of the command, followed by newline, then end of file.</p>\n\n<p>There are other ways. For example, if you wish to supply more lines, you can use the so-called <a href=\"https://en.wikipedia.org/wiki/Here_document\" rel=\"nofollow noreferrer\">\"here-doc\"</a>:</p>\n\n<pre><code>% cabal repl &lt;&lt;EOF\n:type zip\n:type fst\nEOF\n</code></pre>\n\n<p>The <code>&lt;&lt;&lt;</code> notation is a shorthand for a one-line \"here-doc\".</p>\n\n<p>In general, a program may know whether its standard input is a terminal <em>(assuming, live user)</em> or a file <em>(which <code>heredoc</code> pretends to be)</em>, and behave differently. But ordinarily it would work either way, and, if you can send things to its standard input, you can automate it.</p>\n"}], "owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 85, "favorite_count": 0, "accepted_answer_id": 58604458, "answer_count": 1, "score": 1, "last_activity_date": 1572340939, "creation_date": 1572309220, "question_id": 58600068, "link": "https://stackoverflow.com/questions/58600068/how-can-i-run-a-ghci-statement-in-cabal-v2-repl-directly-from-command-line", "title": "How can I run a GHCi statement in cabal v2-repl directly from command line?", "body": "<p>How can I replicate <code>ghci -e \"print 123\"</code> in <code>cabal v2-repl</code>?</p>\n\n<p>I've searched for \"expression\" or \"statement\" in <code>cabal v2-repl --help</code> with no luck.</p>\n"}, {"tags": ["haskell", "testing", "multiline", "ghci"], "comments": [{"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 1, "creation_date": 1572444735, "post_id": 58599796, "comment_id": 103562027, "body": "I would not recommend doing performance testing with GHCi, as the results can be very different from (or even opposite to) the real results when compiling with optimizations enabled."}, {"owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "reply_to_user": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1572551040, "post_id": 58599796, "comment_id": 103605309, "body": "I do recall reading about this, however in this particular case my code is probably doing something like O(n)(squared) - so it&#39;s fairly easy to replicate the behavior with GHCi."}], "answers": [{"tags": [], "owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "is_accepted": false, "score": 4, "last_activity_date": 1572307143, "creation_date": 1572307143, "answer_id": 58599851, "question_id": 58599796, "link": "https://stackoverflow.com/questions/58599796/how-can-i-run-multiple-statements-in-ghci/58599851#58599851", "title": "How can I run multiple statements in GHCi?", "body": "<p>One way I've found is creating a separate file:</p>\n\n<pre><code>myfunction 0 100\nmyfunction 0 200\nmyfunction 0 300\n:r\n</code></pre>\n\n<p>and then using:</p>\n\n<p><code>:script path/to/file</code></p>\n"}, {"comments": [{"owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "edited": false, "score": 0, "creation_date": 1572308035, "post_id": 58599928, "comment_id": 103512198, "body": "What about <code>:r</code> which is not a function but a GHCi statement."}, {"owner": {"reputation": 767, "user_id": 814796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZQemO.jpg?s=128&g=1", "display_name": "madgen", "link": "https://stackoverflow.com/users/814796/madgen"}, "reply_to_user": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "edited": false, "score": 0, "creation_date": 1572310169, "post_id": 58599928, "comment_id": 103512573, "body": "@ChrisStryczynski The effect of <code>:r</code> is to reload the file, now every time you save a file, it will reload the file."}], "tags": [], "owner": {"reputation": 767, "user_id": 814796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZQemO.jpg?s=128&g=1", "display_name": "madgen", "link": "https://stackoverflow.com/users/814796/madgen"}, "is_accepted": false, "score": 2, "last_activity_date": 1572307849, "creation_date": 1572307849, "answer_id": 58599928, "question_id": 58599796, "link": "https://stackoverflow.com/questions/58599796/how-can-i-run-multiple-statements-in-ghci/58599928#58599928", "title": "How can I run multiple statements in GHCi?", "body": "<p>One way of doing it is to create a testing suite in your Cabal file in which you place your function calls as tests, then use <code>stack test --file-watch</code>. That recompiles and reruns the tests every time you save a file.</p>\n"}, {"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 3, "last_activity_date": 1572338635, "creation_date": 1572338635, "answer_id": 58603903, "question_id": 58599796, "link": "https://stackoverflow.com/questions/58599796/how-can-i-run-multiple-statements-in-ghci/58603903#58603903", "title": "How can I run multiple statements in GHCi?", "body": "<p>You can define a custom GHCi command using <code>:def</code> in this way:</p>\n\n<pre><code>&gt; :def foo (\\_ -&gt; return \"print 100\\nprint 200\\n:t length\")\n&gt; :foo\n100\n200\nlength :: Foldable t =&gt; t a -&gt; Int\n</code></pre>\n\n<p>In the returned string, <code>:</code>-commands can be included as well, like <code>:t</code> above.</p>\n"}], "owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 122, "favorite_count": 0, "accepted_answer_id": 58603903, "answer_count": 3, "score": -1, "last_activity_date": 1572551152, "creation_date": 1572306565, "last_edit_date": 1572551152, "question_id": 58599796, "link": "https://stackoverflow.com/questions/58599796/how-can-i-run-multiple-statements-in-ghci", "title": "How can I run multiple statements in GHCi?", "body": "<p>I'm doing some very simple performance testing of a simple function that I believe has O(n)(squared) performance (or worse).</p>\n\n<p>Currently I'm running multiple statements which is tedious to repeat:</p>\n\n<pre><code>ghci&gt; myfunction 0 100\ntrue\nghci&gt; myfunciton 0 200\ntrue\nghci&gt; myfunction 0 300\ntrue\nghci&gt; :r\n</code></pre>\n\n<p>Is there a way I can run all four <strong>GHCi</strong> statements? I can't just combine them using \"native\" Haskell as I'd like to include the <code>:r</code> (which is a GHCi statement - not exactly Haskell) that gets run at the end.</p>\n"}, {"tags": ["haskell", "types", "dependent-type", "theorem-proving"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1572301949, "post_id": 58598616, "comment_id": 103510989, "body": "I think you need reflection so that you can pattern match on <code>x</code> and <code>y</code>. I&#39;m afraid I&#39;m not very knowledgeable when it comes to that, though."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1572302501, "post_id": 58598616, "comment_id": 103511133, "body": "I think you&#39;ll not be able to persuade GHC to take the second equation for <code>Choose</code>. I believe that is chosen only when <code>x</code> and <code>y</code> are instantiated to &quot;definitely different types&quot;, e.g. different constructors."}, {"owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "edited": false, "score": 1, "creation_date": 1572304815, "post_id": 58598616, "comment_id": 103511622, "body": "I don\u2019t know how to do this in Haskell or any other language. But I think in a made-up dependently typed language it would look something like <code>lem {x:Type} {y:Type} (refutation : x :~: y -&gt; Void) : Choose x y :~: 2 = match Choose x y with | 1 -&gt; (match refutation Refl with | _ -&gt; .) | 2 -&gt; Refl | _ -&gt; .</code> That is you need to have <code>x</code> and <code>y</code> in scope and then by matching on <code>Choose x y</code> you can get a proof that <code>x :~: y</code> in the 1 branch and apply your refutation to it to construct <code>Void</code>. Then you can prove anything from that so you can prove your consequent. The 2 case is direct."}, {"owner": {"reputation": 767, "user_id": 814796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZQemO.jpg?s=128&g=1", "display_name": "madgen", "link": "https://stackoverflow.com/users/814796/madgen"}, "reply_to_user": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "edited": false, "score": 0, "creation_date": 1572305739, "post_id": 58598616, "comment_id": 103511814, "body": "@DanRobertson am I correct in thinking that the <code>1</code> case uses the injectivity of the <code>Choose</code> and wouldn&#39;t work if it wasn&#39;t?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1572309919, "post_id": 58598616, "comment_id": 103512541, "body": "You might also like <a href=\"https://stackoverflow.com/q/36680830/791604\">How can I use contradictory evidence?</a>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "edited": false, "score": 1, "creation_date": 1572319303, "post_id": 58598616, "comment_id": 103514199, "body": "@DanRobertson, I very much doubt that <code>Choose</code> can be implemented at all in a real dependently typed language."}], "answers": [{"tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 3, "last_activity_date": 1572440760, "last_edit_date": 1572440760, "creation_date": 1572412949, "answer_id": 58619200, "question_id": 58598616, "link": "https://stackoverflow.com/questions/58598616/how-to-use-a-refutation-to-direct-the-type-checker-in-haskell/58619200#58619200", "title": "How to use a refutation to direct the type checker in Haskell?", "body": "<p>If you try hard enough to implement a function, you can convince yourself\nthat it is not possible. If you're not convinced, the argument can be made\nmore formal: we enumerate programs exhaustively to find that none is possible. It turns out there's only half a dozen of meaningful cases to consider.</p>\n\n<p>I wonder why this argument is not made more often.</p>\n\n<p>Totally not accurate summary:</p>\n\n<ul>\n<li>Act I: proof search is easy.</li>\n<li>Act II: dependent types too.</li>\n<li>Act III: Haskell is still fine for writing dependently typed programs.</li>\n</ul>\n\n<h1>I. The proof search game</h1>\n\n<p>First we define the search space.</p>\n\n<p>We can reduce any Haskell definition to one of the form</p>\n\n<pre><code>lem = (exp)\n</code></pre>\n\n<p>for some expression <code>(exp)</code>. Now we only need to find a single expression.</p>\n\n<p>Look at all possible ways of making an expression in Haskell:\n<a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-220003\" rel=\"nofollow noreferrer\">https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-220003</a>\n(this doesn't account for extensions, exercise for the reader).</p>\n\n<p>It fits a page in a single column, so it's not <em>that</em> big to start with.\nMoreover, most of them are sugar for some form of function application or\npattern-matching; we can also desugar away type classes with dictionary\npassing, so we're left with a ridiculously small lambda calculus:</p>\n\n<ul>\n<li>lambdas, <code>\\x -&gt; ...</code></li>\n<li>pattern-matching, <code>case ... of ...</code></li>\n<li>function application, <code>f x</code></li>\n<li>constructors, <code>C</code> (including integer literals)</li>\n<li>constants, <code>c</code> (for primitives that cannot be written in terms of the constructs above, so various built-ins (<code>seq</code>) and maybe FFI if that counts)</li>\n<li>variables (bound by lambdas and cases)</li>\n</ul>\n\n<p>We can exclude every constant on the grounds that I think the question is\nreally about pure lambda calculus (or the reader can enumerate the constants,\nto exclude black-magic constants like <code>undefined</code>, <code>unsafeCoerce</code>,\n<code>unsafePerformIO</code> that make everything collapse (any type is inhabited and, for\nsome of those, the type system is unsound), and to be left with white-magic\nconstants to which the present theoretical argument can be generalized via a\nwell-funded thesis).</p>\n\n<p>We can also reasonably assume that we want a solution with no recursion involved\n(to get rid of noise like <code>lem = lem</code>, and <code>fix</code> if you felt like you couldn't\npart with it before), and which actually has a normal form, or preferably, a\ncanonical form with respect to \u03b2\u03b7-equivalence. In other words, we refine and\nexamine the set of possible solutions as follows.</p>\n\n<ul>\n<li><p><code>lem :: _ -&gt; _</code> has a function type, so we can assume <a href=\"https://en.wikipedia.org/wiki/Without_loss_of_generality\" rel=\"nofollow noreferrer\">WLOG</a> that its definition starts with a lambda:</p>\n\n<pre><code>-- Any solution\nlem = (exp)\n\n-- is \u03b7-equivalent to a lambda\nlem = \\refutation -&gt; (exp) refutation\n\n-- so let's assume we do have a lambda\nlem = \\refutation -&gt; _hole\n</code></pre></li>\n</ul>\n\n<p>Now enumerate what could be under the lambda.</p>\n\n<ul>\n<li><p>It could be a constructor,\nwhich then has to be <code>Refl</code>, but there is no proof that <code>Choose x y ~ 2</code> in\nthe context (here we could formalize and enumerate the type equalities the\ntypechecker knows about and can derive, or make the syntax of coercions\n(proofs of equalities) explicit and keep playing this proof search game\nwith them), so this doesn't type check:</p>\n\n<pre><code>lem = \\refutation -&gt; Refl\n</code></pre>\n\n<p>Maybe there is some way of constructing that equality proof, but then the\nexpression would start with something else, which is going to be another\ncase of the proof.</p></li>\n<li><p>It could be some application of a constructor <code>C x1 x2 ...</code>, or the\nvariable <code>refutation</code> (applied or not); but there's no possible way that's\nwell-typed, it has to somehow produce a <code>(:~:)</code>, and <code>Refl</code> is really the\nonly way.</p></li>\n<li><p>Or it could be a <code>case</code>. WLOG, there is no nested <code>case</code> on the left, nor any\nconstructor, because the expression could be simplified in both cases:</p>\n\n<pre><code>-- Any left-nested case expression\ncase (case (e) of { C x1 x2 -&gt; (f) }) { D y1 y2 -&gt; (g) }\n\n-- is equivalent to a right-nested case\ncase (e) of { C x1 x2 -&gt; case (f) of { D y1 y2 -&gt; (g) } }\n\n\n\n-- Any case expression with a nested constructor\ncase (C u v) of { C x1 x2 -&gt; f x1 x2 }\n\n-- reduces to\nf u v\n</code></pre>\n\n<p>So the last subcase is the variable case:</p>\n\n<pre><code>lem = \\refutation -&gt; case refutation (_hole :: x :~: y) of {}\n</code></pre>\n\n<p>and we have to construct a <code>x :~: y</code>. We enumerate ways of filling the\n<code>_hole</code> again. It's either <code>Refl</code>, but no proof is available, or\n(skipping some steps) <code>case refutation (_anotherHole :: x :~: y) of {}</code>,\nand we have an infinite descent on our hands, which is also absurd.\nA different possible argument here is that we can pull out the <code>case</code>\nfrom the application, to remove this case from consideration WLOG.</p>\n\n<pre><code>-- Any application to a case\nf (case e of C x1 x2 -&gt; g x1 x2)\n\n-- is equivalent to a case with the application inside\ncase e of C x1 x2 -&gt; f (g x1 x2)\n</code></pre></li>\n</ul>\n\n<p>There are no more cases. The search is complete, and we didn't find an\nimplementation of <code>(x :~: y -&gt; Void) -&gt; Choose x y :~: 2</code>. QED.</p>\n\n<p>To read more on this topic, I guess a course/book about lambda calculus up\nuntil the normalization proof of the simply-typed lambda calculus should give\nyou the basic tools to start with. The following thesis contains an\nintroduction on the subject in its first part, but admittedly I'm a poor judge\nof the difficulty of such material: <a href=\"http://gallium.inria.fr/~scherer/phd_thesis/\" rel=\"nofollow noreferrer\">Which types have a unique inhabitant?\nFocusing on pure program equivalence</a>,\nby Gabriel Scherer.</p>\n\n<p>Feel free to suggest more adequate resources and literature.</p>\n\n<hr>\n\n<h1>II. Fixing the proposition and proving it with dependent types</h1>\n\n<p>Your initial intuition that this should encode a valid proposition\nis definitely valid. How might we fix it to make it provable?</p>\n\n<p>Technically, the type we are looking at is quantified with <code>forall</code>:</p>\n\n<pre><code>forall x y. (x :~: y -&gt; Void) -&gt; Choose x y :~: 2\n</code></pre>\n\n<p>An important feature of <code>forall</code> is that it is an <em>irrelevant</em> quantifier.\nThe variables it introduces <em>cannot be used \"directly\"</em> in a term of this type. Although that aspect becomes more prominent in the presence of dependent types,\nit still pervades Haskell <em>today</em>, providing another intuition for why this (and many other examples) is not \"provable\" in Haskell: if you think about why you\nthink that proposition is valid, you will naturally start with a case split about whether <code>x</code> is equal to <code>y</code>, but to even do such a case split you need a way to\n<em>decide</em> which side you're on, which will of course have to look at <code>x</code> and <code>y</code>,\nso they cannot be irrelevant. <code>forall</code> in Haskell is not at all like what most people mean with \"for all\".</p>\n\n<p>Some discussion on the matter of relevance can be found in the thesis <a href=\"https://repository.brynmawr.edu/cgi/viewcontent.cgi?article=1074&amp;context=compsci_pubs\" rel=\"nofollow noreferrer\">Dependent Types in Haskell</a>, by Richard Eisenberg (in particular, Section 3.1.1.5 for an initial example, Section 4.3 for relevance in Dependent Haskell and Section 8.7 for comparison with other languages with dependent types).</p>\n\n<p>Dependent Haskell will need a <em>relevant</em> quantifier to complement <code>forall</code>, and\nwhich would get us closer to proving this:</p>\n\n<pre><code>foreach x y. (x :~: y -&gt; Void) -&gt; Choose x y :~: 2\n</code></pre>\n\n<p>Then we could probably write this:</p>\n\n<pre><code>lem :: foreach x y. (x :~: y -&gt; Void) -&gt; Choose x y :~: 2\nlem x y p = case x ==? u of\n  Left r -&gt; absurd (p r)  -- x ~ y, that's absurd!\n  Right Irrefl -&gt; Refl    -- x /~ y, so Choose x y = 2\n</code></pre>\n\n<p>That also assumes a first-class notion of disequality <code>/~</code>, complementing <code>~</code>,\nto help <code>Choose</code> reduce when it is in the context and a decision function\n<code>(==?) :: foreach x y. Either (x :~: y) (x :/~: y)</code>.\nActually, that machinery isn't necessary, that just makes for a shorter\nanswer.</p>\n\n<p>At this point I'm making stuff up because Dependent Haskell does not exist yet,\nbut that is easily doable in related dependently typed languages (Coq, Agda,\nIdris, Lean), modulo an adequate replacement of the type family <code>Choose</code>\n(type families are in some sense too powerful to be translated as mere\nfunctions, so may be cheating, but I digress).</p>\n\n<p>Here is a comparable program in Coq, showing also that <code>lem</code> applied to 1 and 2\nand a suitable proof does reduce to a proof by reflexivity of <code>choose 1 2 = 2</code>.</p>\n\n<p><a href=\"https://gist.github.com/Lysxia/5a9b6996a3aae741688e7bf83903887b\" rel=\"nofollow noreferrer\">https://gist.github.com/Lysxia/5a9b6996a3aae741688e7bf83903887b</a></p>\n\n<hr>\n\n<h1>III. Without dependent types</h1>\n\n<p>A critical source of difficulty here is that <code>Choose</code> is a closed type\nfamily with overlapping instances. It is problematic because there is\nno proper way to express the fact that <code>x</code> and <code>y</code> are not equal in Haskell,\nto know that the first clause <code>Choose x x</code> does not apply.</p>\n\n<p>A more fruitful avenue if you're into Pseudo-Dependent Haskell is to use a\nboolean type equality:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>-- In the base library\nimport Data.Type.Bool (If)\nimport Data.Type.Equality (type (==))\n\ntype Choose x y = If (x == y) 1 2\n</code></pre>\n\n<p>An alternative encoding of equality constraints becomes useful for this style:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>type x ~~ y = ((x == y) ~ 'True)\ntype x /~ y = ((x == y) ~ 'False)\n</code></pre>\n\n<p>with that, we can get another version of the type-proposition above,\nexpressible in current Haskell (where <code>SBool</code> is the singleton type of <code>Bool</code>),\nwhich essentially can be read as adding the assumption that the equality of <code>x</code>\nand <code>y</code> is decidable. This does not contradict the earlier claim about \"irrelevance\" of <code>forall</code>, the function is inspecting a boolean (or rather an <code>SBool</code>), which postpones the inspection of <code>x</code> and <code>y</code> to whoever calls <code>lem</code>.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>lem :: forall x y. SBool (x == y) -&gt; ((x ~~ y) =&gt; Void) -&gt; Choose x y :~: 2\nlem decideEq p = case decideEq of\n  STrue -&gt; absurd p\n  SFalse -&gt; Refl\n</code></pre>\n"}], "owner": {"reputation": 767, "user_id": 814796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZQemO.jpg?s=128&g=1", "display_name": "madgen", "link": "https://stackoverflow.com/users/814796/madgen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 1, "accepted_answer_id": 58619200, "answer_count": 1, "score": 5, "last_activity_date": 1572440760, "creation_date": 1572297929, "last_edit_date": 1572300547, "question_id": 58598616, "link": "https://stackoverflow.com/questions/58598616/how-to-use-a-refutation-to-direct-the-type-checker-in-haskell", "title": "How to use a refutation to direct the type checker in Haskell?", "body": "<p>Does filling the hole in the following program necessarily require non-constructive means? If yes, is it still the case if <code>x :~: y</code> decidable?</p>\n\n<p>More generally, how do I use a refutation to guide the type checker?</p>\n\n<p>(I am aware that I can work around the problem by defining <code>Choose</code> as a GADT, I'm asking specifically for type families)</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE TypeOperators #-}\n\nmodule PropositionalDisequality where\n\nimport Data.Type.Equality\nimport Data.Void\n\ntype family Choose x y where\n  Choose x x = 1\n  Choose x _ = 2\n\nlem :: (x :~: y -&gt; Void) -&gt; Choose x y :~: 2\nlem refutation = _\n</code></pre>\n"}, {"tags": ["haskell", "io", "monads", "lazy-evaluation", "pointfree"], "answers": [{"comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 1, "creation_date": 1572305706, "post_id": 58597919, "comment_id": 103511805, "body": "This may be a case of confusing <code>(&lt;*)</code> with <code>flip (*&gt;)</code>, which I&#39;ve certainly been guilty of"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 7, "last_activity_date": 1572296656, "last_edit_date": 1572296656, "creation_date": 1572294340, "answer_id": 58597919, "question_id": 58597840, "link": "https://stackoverflow.com/questions/58597840/question-about-hflush-and-lazy-evaluation/58597919#58597919", "title": "Question about hFlush and lazy evaluation", "body": "<p>Because that's not what you asked for. Since</p>\n\n<pre><code>prompt = (getLine &lt;*) . (hFlush stdout &lt;*) . putStrLn\n</code></pre>\n\n<p>we can just add an argument to see what we get:</p>\n\n<pre><code>prompt str = ((getLine &lt;*) . (hFlush stdout &lt;*) . putStrLn) str\n           = getLine &lt;* hFlush stdout &lt;* putStrLn str\n</code></pre>\n\n<p>This asks to run the actions <code>getLine</code>, <code>hFlush stdout</code>, and <code>putStrLn str</code>, in that order. (Then the result value of that sequence of actions is whatever result value <code>getLine</code> had at the very beginning.) You want this instead:</p>\n\n<pre><code>prompt str = putStrLn str *&gt; hFlush stdout *&gt; getLine\n</code></pre>\n\n<p>or:</p>\n\n<pre><code>prompt = (*&gt; getLine) . (*&gt; hFlush stdout) . putStrLn\n</code></pre>\n\n<p>(In fact, the default buffering in most cases is line buffering or less, and you are calling <code>putStrLn</code>, not <code>putStr</code>, so <em>none</em> of these solutions actually need a call to <code>hFlush stdout</code>!)</p>\n"}], "owner": {"reputation": 33, "user_id": 5338180, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-PNIZvYk9Pa4/AAAAAAAAAAI/AAAAAAAAAOM/ybc8goQ_Mjc/photo.jpg?sz=128", "display_name": "Sarah Ohlin", "link": "https://stackoverflow.com/users/5338180/sarah-ohlin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 0, "accepted_answer_id": 58597919, "answer_count": 1, "score": 2, "last_activity_date": 1572343696, "creation_date": 1572293955, "last_edit_date": 1572343696, "question_id": 58597840, "link": "https://stackoverflow.com/questions/58597840/question-about-hflush-and-lazy-evaluation", "title": "Question about hFlush and lazy evaluation", "body": "<p>I've got three definitions of the same function:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>prompt :: String -&gt; IO String\nprompt = (getLine &lt;*) . (hFlush stdout &lt;*) . putStrLn\n\nprompt' :: String -&gt; IO String\nprompt' str = do\n    putStrLn str\n    hFlush stdout\n    getLine\n\nprompt'' :: String -&gt; IO String\nprompt'' str = putStrLn str &gt;&gt; hFlush stdout &gt;&gt; getLine\n</code></pre>\n\n<p><code>prompt'</code> and <code>prompt''</code> both flush stdout before running <code>getLine</code>, but not <code>prompt</code>. Why is this?</p>\n"}, {"tags": ["haskell", "functor", "newtype"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1572285203, "post_id": 58595972, "comment_id": 103504822, "body": "<code>fmap</code> does not take two <code>Test</code>s, it has signature <code>fmap :: (a -&gt; b) -&gt; Test m a -&gt; Test m b</code> here."}, {"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 0, "creation_date": 1572287441, "post_id": 58595972, "comment_id": 103505763, "body": "<code>fmap</code> operator is defined at the Functor instance of the function type <code>(-&gt;) r</code>  as the composition operator <code>(.)</code>. In other words applying <code>f</code> to the result of that function. This should give you an idea."}], "answers": [{"comments": [{"owner": {"reputation": 712, "user_id": 2326106, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/576f57ddb3d4b124d5bd5d9ad62f9c0c?s=128&d=identicon&r=PG", "display_name": "mBrice1024", "link": "https://stackoverflow.com/users/2326106/mbrice1024"}, "edited": false, "score": 0, "creation_date": 1572311791, "post_id": 58596084, "comment_id": 103512827, "body": "Thanks! To be sure I fully understood all the concepts at play here I added my own solution to the original question without using Arrow. Does my solution look valid?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 712, "user_id": 2326106, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/576f57ddb3d4b124d5bd5d9ad62f9c0c?s=128&d=identicon&r=PG", "display_name": "mBrice1024", "link": "https://stackoverflow.com/users/2326106/mbrice1024"}, "edited": false, "score": 1, "creation_date": 1572335152, "post_id": 58596084, "comment_id": 103517744, "body": "@mBrice1024: without the <code>first</code>, you can write it as <code>fmap f (Test g) = Test (\\x -&gt; let (a, b) = g x in (f a, b))</code>"}, {"owner": {"reputation": 712, "user_id": 2326106, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/576f57ddb3d4b124d5bd5d9ad62f9c0c?s=128&d=identicon&r=PG", "display_name": "mBrice1024", "link": "https://stackoverflow.com/users/2326106/mbrice1024"}, "edited": false, "score": 1, "creation_date": 1572355132, "post_id": 58596084, "comment_id": 103527203, "body": "Nice, way more concise. I forgot about let, in."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 7, "last_activity_date": 1572285506, "creation_date": 1572285506, "answer_id": 58596084, "question_id": 58595972, "link": "https://stackoverflow.com/questions/58595972/how-to-construct-fmap-for-a-newtype-that-houses-functions/58596084#58596084", "title": "How to construct fmap for a newtype that houses functions", "body": "<blockquote>\n  <p>Since the newtype houses functions there's no way to use pattern matching to break <code>f1</code> and <code>f2</code> apart.</p>\n</blockquote>\n\n<p>There is a problem with your <code>fmap</code> signature here. <code>fmap</code> has signature <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:fmap\" rel=\"noreferrer\"><strong><code>fmap :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b</code></strong></a> so if <code>f ~ Test m</code>, then the signature is <code>fmap :: (a -&gt; b) -&gt; Test m a -&gt; Test m b</code>.</p>\n\n<p>We thus can here define an <code>fmap</code> where we \"post-process\" the result of the function. We thus construct a new function that will use the old function to construct a 2-tuple <code>(a, m)</code>, and then call <code>f</code> on the first item, such that we construct a tuple <code>(b, m)</code>:</p>\n\n<pre><code>import Control.Arrow(<b>first</b>)\n\ninstance Functor (Test m) where\n    fmap f (Test g) = Test (<b>first f . g</b>)</code></pre>\n"}], "owner": {"reputation": 712, "user_id": 2326106, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/576f57ddb3d4b124d5bd5d9ad62f9c0c?s=128&d=identicon&r=PG", "display_name": "mBrice1024", "link": "https://stackoverflow.com/users/2326106/mbrice1024"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 98, "favorite_count": 0, "accepted_answer_id": 58596084, "answer_count": 1, "score": 5, "last_activity_date": 1572311534, "creation_date": 1572284940, "last_edit_date": 1572311534, "question_id": 58595972, "link": "https://stackoverflow.com/questions/58595972/how-to-construct-fmap-for-a-newtype-that-houses-functions", "title": "How to construct fmap for a newtype that houses functions", "body": "<p>So let's say I want to define a newtype that houses a function:</p>\n\n<pre><code>newtype Test m a = Test(m -&gt; (a, m))\n</code></pre>\n\n<p>This could be used to house state of some sort. </p>\n\n<p>Now let's say I would like to implement fmap for this newtype. </p>\n\n<pre><code>instance Functor (Test m) where\n    --fmap :: (a -&gt; b) -&gt; Test m a -&gt; Test m a -&gt; b\n    fmap f (Test f1) (Test f2) = ?\n</code></pre>\n\n<p>Since the newtype houses functions there's no way to use pattern matching to break f1 and f2 apart. </p>\n\n<p>For instance I initially thought maybe I could pass the input value of f2 into the call f1 to yield a (a, m) tuple, but I don't think you can do that.<br>\nie</p>\n\n<pre><code>tup = f1 (get input of f2)\n</code></pre>\n\n<p>Is anyone able to provide me with what concepts I'm missing to deal with this scenario or is this just not possible?</p>\n\n<p>Thanks</p>\n\n<p><strong>UPDATE</strong> </p>\n\n<p>Big thanks to Redu and Willem Van Onsem.</p>\n\n<p>Looks like I was lacking in understanding of how to use the composition operator (.). </p>\n\n<p>Basically the key here is use (.) to grab the first element of the tuple and then do a bunch of partial function definitions to get into the state needed by fmap. Here is my fmap implementation without using the library function. Purposefully verbose to help with understanding. </p>\n\n<pre><code>alterParamStateHelper :: (a -&gt; b) -&gt; (m -&gt; a) -&gt; m -&gt; (b, m)\nalterParamStateHelper f1 f2 m = (b, m)\n  where \n    a = f2 e\n    b = f1 a\n\nalterParamState :: (a -&gt; b) -&gt; (m -&gt; (a, m)) -&gt; (m -&gt; (b, m))\nalterParamState f1 f2 = alterParamStateHelper f1 h1\n  where\n    h1 = fst . f2--m -&gt; a\n\ninstance Functor (Test m) where\n  -- fmap :: (a -&gt; b) -&gt; Test m a -&gt; Test m b\n  fmap f1 (Test f2) = Test (alterParamState f1 f2)\n</code></pre>\n"}, {"tags": ["haskell", "typeclass", "applicative", "algebraic-data-types", "custom-data-type"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1572275089, "post_id": 58593349, "comment_id": 103499703, "body": "Your <code>instance Applicative</code> seems to be working over a <code>ZipList&#39;</code> type that you did not define here?"}, {"owner": {"reputation": 2088, "user_id": 4281998, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/q8Jvt.png?s=128&g=1", "display_name": "Brady Dean", "link": "https://stackoverflow.com/users/4281998/brady-dean"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1572275158, "post_id": 58593349, "comment_id": 103499742, "body": "@WillemVanOnsem Forgot to paste that in, I updated the question"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 3, "creation_date": 1572275532, "post_id": 58593349, "comment_id": 103499950, "body": "Your <code>pure</code> is incorrect, and once you&#39;ve figured out the correct implementation, you will see which function beginning with <code>r</code> is being referred to. The key is to think about the requirement for a lawful <code>Applicative</code> instance that <code>fmap f x == (pure f) &lt;*&gt; x</code>, and recognise that there is no upper limit on the length of the list <code>x</code>. That should be enough hints for you to figure it out."}, {"owner": {"reputation": 2088, "user_id": 4281998, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/q8Jvt.png?s=128&g=1", "display_name": "Brady Dean", "link": "https://stackoverflow.com/users/4281998/brady-dean"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1572275950, "post_id": 58593349, "comment_id": 103500193, "body": "@RobinZigmond <code>pure 1 :: ZipList Int</code> creates an infinite list so that seems to be my problem, I&#39;m trying to work out how it satisfies the law now."}], "answers": [{"comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 2, "creation_date": 1572282699, "post_id": 58595159, "comment_id": 103503640, "body": "you can make it formal by structural induction, substituting the definitions of <code>zipWith</code>, <code>repeat</code> and <code>map</code>: <code>zW ($) (f:rep f) (x:xs) = (f $ x) : zW ($) (rep f) xs = (f x) : map f xs</code> where <code>zW ($) (rep f) xs == map f xs</code> holds by IH, and <code>zW ($) (rep f) [] = [] = map f []</code> is the base case."}, {"owner": {"reputation": 1672, "user_id": 11143763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HWExJ.png?s=128&g=1", "display_name": "Zhiltsoff Igor", "link": "https://stackoverflow.com/users/11143763/zhiltsoff-igor"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1572283000, "post_id": 58595159, "comment_id": 103503817, "body": "@WillNess True, this is what I wanted to post originally, but what is the point since we&#39;ve got all the definitions at hand? Sometimes RT-analyses could be a way more useful skill, rather than strict proof."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1572283042, "post_id": 58595159, "comment_id": 103503837, "body": "what is &quot;RT&quot; please?"}, {"owner": {"reputation": 1672, "user_id": 11143763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HWExJ.png?s=128&g=1", "display_name": "Zhiltsoff Igor", "link": "https://stackoverflow.com/users/11143763/zhiltsoff-igor"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1572283825, "post_id": 58595159, "comment_id": 103504192, "body": "@WillNess Runtime analysis. (Sorry, there should have been an &#39;i&#39;, not &#39;e&#39;, i.e. not plural)."}], "tags": [], "owner": {"reputation": 1672, "user_id": 11143763, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HWExJ.png?s=128&g=1", "display_name": "Zhiltsoff Igor", "link": "https://stackoverflow.com/users/11143763/zhiltsoff-igor"}, "is_accepted": false, "score": 3, "last_activity_date": 1572282351, "last_edit_date": 1572282351, "creation_date": 1572281607, "answer_id": 58595159, "question_id": 58593349, "link": "https://stackoverflow.com/questions/58593349/implement-applicative-for-custom-ziplist/58595159#58595159", "title": "Implement Applicative for custom ZipList", "body": "<p>Reading the thread under the original post, I came to a conclusion the author of the post is trying to prove that the implementation satisfies the law (<code>fmap f xs = (pure f) &lt;*&gt; xs</code>):</p>\n\n<p>Let's try proving it as a classical identity, getting rid of the wrapper. Thus, let's work with the right hand:</p>\n\n<p><code>(pure f) &lt;*&gt; xs = (repeat' f) &lt;*&gt; xs = zipWith' ($) (repeat' f) xs</code>;</p>\n\n<p>As far as identity goes, proving that <code>zipWith' ($) (repeat' f) xs</code> equals <code>fmap f xs</code> would suffice. </p>\n\n<p>The reason they are the same is pretty obvious: </p>\n\n<p><code>length (zipWith op xs ys) == min (length xs) (length ys)</code>; (this expression could not be evaluated in case of both <code>xs</code> and <code>ys</code> being infinite).</p>\n\n<p>Since <code>repeat' f</code> is infinite, <code>length $ zipWith' ($) (repeat' f) xs</code> is, in fact, <code>length xs</code> (here, it does not actually matter, whether such a value exists: the existence of indices would suffice). Each element of <code>xs</code> gets applied to the same function <code>f</code>, which is repeated. As you can see, the size is preserved and every element is morphed by a constant function, which is the definition of <code>fmap</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1572294881, "post_id": 58597711, "comment_id": 103508635, "body": "Yes, that&#39;s it :-) You can check for yourself by comparing with the <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/src/Control.Applicative.html#line-132\" rel=\"nofollow noreferrer\">official implementation</a> (it&#39;s near the bottom of the code)"}], "tags": [], "owner": {"reputation": 2088, "user_id": 4281998, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/q8Jvt.png?s=128&g=1", "display_name": "Brady Dean", "link": "https://stackoverflow.com/users/4281998/brady-dean"}, "is_accepted": true, "score": 2, "last_activity_date": 1572293504, "last_edit_date": 1572293504, "creation_date": 1572293325, "answer_id": 58597711, "question_id": 58593349, "link": "https://stackoverflow.com/questions/58593349/implement-applicative-for-custom-ziplist/58597711#58597711", "title": "Implement Applicative for custom ZipList", "body": "<p>I thought about it for a bit after <a href=\"https://stackoverflow.com/questions/58593349/implement-applicative-for-custom-ziplist#comment103499950_58593349\">Robin Zigmond's comment</a>:</p>\n\n<blockquote>\n  <p>The key is to think about the requirement for a lawful <code>Applicative</code> instance that <code>fmap f x == (pure f) &lt;*&gt; x</code>, and recognise that there is no upper limit on the length of the list <code>x</code>.</p>\n</blockquote>\n\n<p>This implementation should satisfy the Applicative laws.</p>\n\n<pre><code>data List a =\n    Nil\n  | Cons a (List a)\n  deriving (Eq, Show)\n\nzipWith' :: (a -&gt; b -&gt; c) -&gt; List a -&gt; List b -&gt; List c\nzipWith' _ Nil _ = Nil\nzipWith' _ _ Nil = Nil\nzipWith' f (Cons x xs) (Cons y ys) = Cons (f x y) (zipWith' f xs ys)\n\nrepeat' :: a -&gt; List a\nrepeat' x = Cons x $ repeat' x\n\nnewtype ZipList' a = ZipList' (List a)\n  deriving (Eq, Show)\n\ninstance Functor ZipList' where\n  fmap f (ZipList' xs) = ZipList' $ fmap f xs\n\ninstance Applicative ZipList' where\n  pure x = ZipList' $ repeat' x\n  (ZipList' fs) &lt;*&gt; (ZipList' xs) = ZipList' $ zipWith' ($) fs xs\n</code></pre>\n"}], "owner": {"reputation": 2088, "user_id": 4281998, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/q8Jvt.png?s=128&g=1", "display_name": "Brady Dean", "link": "https://stackoverflow.com/users/4281998/brady-dean"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 144, "favorite_count": 0, "accepted_answer_id": 58597711, "answer_count": 2, "score": 3, "last_activity_date": 1572293546, "creation_date": 1572274940, "last_edit_date": 1572293546, "question_id": 58593349, "link": "https://stackoverflow.com/questions/58593349/implement-applicative-for-custom-ziplist", "title": "Implement Applicative for custom ZipList", "body": "<p>This comes from an exercise in book <em>Haskell from First Principles</em>. The exercise is to implement <code>Applicative</code> for <code>ZipList'</code>, which is analogous to the Prelude's <code>ZipList</code>. The book has this hint</p>\n\n<blockquote>\n  <p>Check Prelude\n  for functions that can give you what you need. One starts\n  with the letter <code>z</code>, the other with the letter <code>r</code>. You\u2019re looking\n  for inspiration from these functions, not to be able to directly\n  reuse them as you\u2019re using a custom <code>List</code> type, not the \n  <code>Prelude</code> provided list type.</p>\n</blockquote>\n\n<p>I guessed the function that starts with <code>z</code> is <code>zipWith</code>, but I do not know about a function that starts with <code>r</code>.</p>\n\n<pre><code>data List a =\n    Nil\n  | Cons a (List a)\n  deriving (Eq, Show)\n\nzipWith' :: (a -&gt; b -&gt; c) -&gt; List a -&gt; List b -&gt; List c\nzipWith' _ Nil _ = Nil\nzipWith' _ _ Nil = Nil\nzipWith' f (Cons x xs) (Cons y ys) = Cons (f x y) (zipWith' f xs ys)\n\nnewtype ZipList' a = ZipList' (List a)\n  deriving (Eq, Show)\n\ninstance Functor ZipList' where\n  fmap f (ZipList' xs) = ZipList' $ fmap f xs\n\ninstance Applicative ZipList' where\n  pure x = ZipList' $ Cons x Nil\n  (ZipList' fs) &lt;*&gt; (ZipList' xs) = ZipList' $ zipWith' ($) fs xs\n</code></pre>\n\n<p>This passes a test case in the book, but I am wondering if there's a better way to implement it since I did not use a function that starts with <code>r</code>. I have a feeling this was supposed to be <code>repeat</code> because it's also supposed to work over infinite lists.</p>\n"}, {"tags": ["mysql", "amazon-web-services", "haskell", "aws-lambda", "servant"], "comments": [{"owner": {"reputation": 1891, "user_id": 5927442, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/49784b9a56ce274ecb2d78e7ab4cf147?s=128&d=identicon&r=PG&f=1", "display_name": "LostJon", "link": "https://stackoverflow.com/users/5927442/lostjon"}, "edited": false, "score": 0, "creation_date": 1572275630, "post_id": 58593207, "comment_id": 103500009, "body": "What does your Lambda code look like"}], "answers": [{"tags": [], "owner": {"reputation": 327, "user_id": 6651168, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/2b45f362ea8f2d6346f9008a1df0afff?s=128&d=identicon&r=PG&f=1", "display_name": "Jimbo", "link": "https://stackoverflow.com/users/6651168/jimbo"}, "is_accepted": false, "score": 0, "last_activity_date": 1573770640, "creation_date": 1573770640, "answer_id": 58867487, "question_id": 58593207, "link": "https://stackoverflow.com/questions/58593207/serverless-works-locally-but-not-when-deployed/58867487#58867487", "title": "Serverless works locally but not when deployed", "body": "<p>This turned out to be my resolver. I needed to use LTS 13.*.</p>\n"}], "owner": {"reputation": 327, "user_id": 6651168, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/2b45f362ea8f2d6346f9008a1df0afff?s=128&d=identicon&r=PG&f=1", "display_name": "Jimbo", "link": "https://stackoverflow.com/users/6651168/jimbo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 185, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1573770640, "creation_date": 1572274468, "question_id": 58593207, "link": "https://stackoverflow.com/questions/58593207/serverless-works-locally-but-not-when-deployed", "title": "Serverless works locally but not when deployed", "body": "<p>I have written a simple servant server and converted it into a lambda function that queries a MySQL db in amazon RDS. I can get it to work locally with <code>serverless offline start</code> however when I deploy it (<code>serverless deploy</code>) I get the following error in my dashboard when trying to access my simple test endpoint.</p>\n\n<pre><code>10:24:00 am\nSTART RequestId: 9577f510-712c-4204-b9ac-05d75defcb42 Version: $LATEST\n10:24:00 am\n2019-10-28T14:24:00.167Z    9577f510-712c-4204-b9ac-05d75defcb42    INFO    \n10:24:00 am\n2019-10-28T14:24:00.169Z    9577f510-712c-4204-b9ac-05d75defcb42    ERROR   ReferenceError: exe is not defined\n    at Object.&lt;anonymous&gt; (/var/task/s_apigw.js:14:66)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Module.require (internal/modules/cjs/loader.js:692:17)\n    at require (internal/modules/cjs/helpers.js:25:18)\n    at _tryRequire (/var/runtime/UserFunction.js:75:12)\n    at _loadUserApp (/var/runtime/UserFunction.js:95:12)\n10:24:00 am\n2019-10-28T14:24:00.185Z    9577f510-712c-4204-b9ac-05d75defcb42    ERROR   Invoke Error    {\n    \"errorType\": \"ReferenceError\",\n    \"errorMessage\": \"exe is not defined\",\n    \"stack\": [\n        \"ReferenceError: exe is not defined\",\n        \"    at Object.&lt;anonymous&gt; (/var/task/s_apigw.js:14:66)\",\n        \"    at Module._compile (internal/modules/cjs/loader.js:778:30)\",\n        \"    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\",\n        \"    at Module.load (internal/modules/cjs/loader.js:653:32)\",\n        \"    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\",\n        \"    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\",\n        \"    at Module.require (internal/modules/cjs/loader.js:692:17)\",\n        \"    at require (internal/modules/cjs/helpers.js:25:18)\",\n        \"    at _tryRequire (/var/runtime/UserFunction.js:75:12)\",\n        \"    at _loadUserApp (/var/runtime/UserFunction.js:95:12)\"\n    ]\n}\n10:24:00 am\nEND RequestId: 9577f510-712c-4204-b9ac-05d75defcb42\n10:24:00 am\nREPORT RequestId: 9577f510-712c-4204-b9ac-05d75defcb42  Duration: 30.73 ms  Billed Duration: 100 ms Memory Size: 1024 MB    Max Memory Used: 83 MB  Init Duration: 210.80 ms\n</code></pre>\n"}, {"tags": ["haskell", "yesod", "template-haskell"], "answers": [{"comments": [{"owner": {"reputation": 161, "user_id": 12147490, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/90b4bec77f92f0db5db412409f1275e4?s=128&d=identicon&r=PG&f=1", "display_name": "bg2000 Reinstate Monica", "link": "https://stackoverflow.com/users/12147490/bg2000-reinstate-monica"}, "edited": false, "score": 0, "creation_date": 1572529320, "post_id": 58601029, "comment_id": 103594474, "body": "This is a great and detailed answer, this worked, my thanks to you @alexandre-lucchesi"}, {"owner": {"reputation": 685, "user_id": 3222117, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/uEbIs.jpg?s=128&g=1", "display_name": "Alexandre Lucchesi", "link": "https://stackoverflow.com/users/3222117/alexandre-lucchesi"}, "reply_to_user": {"reputation": 161, "user_id": 12147490, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/90b4bec77f92f0db5db412409f1275e4?s=128&d=identicon&r=PG&f=1", "display_name": "bg2000 Reinstate Monica", "link": "https://stackoverflow.com/users/12147490/bg2000-reinstate-monica"}, "edited": false, "score": 0, "creation_date": 1572546654, "post_id": 58601029, "comment_id": 103603399, "body": "No problem! Glad it helped. :)"}], "tags": [], "owner": {"reputation": 685, "user_id": 3222117, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/uEbIs.jpg?s=128&g=1", "display_name": "Alexandre Lucchesi", "link": "https://stackoverflow.com/users/3222117/alexandre-lucchesi"}, "is_accepted": true, "score": 4, "last_activity_date": 1572319173, "creation_date": 1572319173, "answer_id": 58601029, "question_id": 58591677, "link": "https://stackoverflow.com/questions/58591677/mystery-of-subsite-types/58601029#58601029", "title": "Mystery of subsite types", "body": "<p>Try to add <code>liftHandler</code> before <code>widgetToPageContent</code>:</p>\n\n<pre><code>...\npc &lt;- liftHandler $ widgetToPageContent $ do\n    $(widgetFile \"custom-auth-layout\")\n...\n</code></pre>\n\n<p>Key lines in the error message are:</p>\n\n<pre><code>  Could not deduce: m ~ HandlerFor App\n  ...\n  Expected type: m (PageContent (Route App))\n    Actual type: HandlerFor App (PageContent (Route App))\n</code></pre>\n\n<p>It is basically telling us that it expected a more generic type <code>m</code>, but instead it got a <code>HandlerFor App</code>. So the solution is simply to <em>lift</em> the call to <code>widgetToPageContent</code> using the <code>liftHandler</code> function.</p>\n\n<p>To elaborate further, if we look at the type signature of the function <a href=\"https://www.stackage.org/haddock/lts-14.12/yesod-core-1.6.16.1/Yesod-Core.html#v:widgetToPageContent\" rel=\"nofollow noreferrer\"><code>widgetToPageContent</code></a>, we see that it returns <code>HandlerFor site (PageContent (Route site))</code>. In this case, <code>site</code> instantiates to <code>App</code>, and that is the <code>HandlerFor App (PageContent (Route App))</code> you see in the error message.</p>\n\n<p>Similarly, your <code>customLayout</code> function returns <code>AuthHandler site Html</code>. <a href=\"https://www.stackage.org/haddock/lts-14.12/yesod-auth-1.6.8/Yesod-Auth.html#t:AuthHandler\" rel=\"nofollow noreferrer\"><code>AuthHandler</code></a> is just a type synonym that constrains <code>site</code> to a type equivalent to <code>HandlerSite m</code> which is also an instance of <code>YesodAuth</code>. This also resolves to <code>App</code>, and that is why we get <code>MonadAuthHandler App m</code> and <code>m (PageContent (Route App))</code> in the error message.</p>\n"}], "owner": {"reputation": 161, "user_id": 12147490, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/90b4bec77f92f0db5db412409f1275e4?s=128&d=identicon&r=PG&f=1", "display_name": "bg2000 Reinstate Monica", "link": "https://stackoverflow.com/users/12147490/bg2000-reinstate-monica"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "accepted_answer_id": 58601029, "answer_count": 1, "score": 2, "last_activity_date": 1572319173, "creation_date": 1572268757, "question_id": 58591677, "link": "https://stackoverflow.com/questions/58591677/mystery-of-subsite-types", "title": "Mystery of subsite types", "body": "<p>I can not figure out what types should go in my <code>Foundation.hs</code> when implementing type classes from the authentication plugin / it's use of the auth subsite:</p>\n\n<p>I can feel that I am very close, but I lack understanding. I am simply trying to use a different layout for the login/registration pages.</p>\n\n<p>In Foundation.hs:</p>\n\n<pre><code>\ninstance YesodAuthSimple App where\n    type AuthSimpleId App = UserId\n\n    ...\n\n    -- Works\n    onRegisterSuccess :: YesodAuthSimple site =&gt; AuthHandler site Html\n    onRegisterSuccess = authLayout $ [whamlet|\n      $newline never\n      &lt;div&gt;\n        &lt;h1&gt;You Registered successfully.\n        &lt;p&gt;\n          Some text here.\n    |]  \n\n    -- Works when I do not write a type signature\n    loginTemplate toParent mErr = $(widgetFile \"authpartials/login\")\n\n\n    -- Does not work with or without type signatures\n    customAuthLayout widget = do \n        master &lt;- getYesod\n        mmsg &lt;- getMessage\n        muser &lt;- maybeAuthPair\n        mcurrentRoute &lt;- getCurrentRoute\n        pc &lt;- widgetToPageContent $ do\n            $(widgetFile \"custom-auth-layout\")\n        withUrlRenderer $(hamletFile \"templates/default-layout-wrapper.hamlet\")\n</code></pre>\n\n<p>The 432:15 is referring to the <code>widgetToPageContent</code> call.</p>\n\n<p>In the type class definition Simple.hs:</p>\n\n<pre><code>class (YesodAuth site, PathPiece (AuthSimpleId site)) =&gt; YesodAuthSimple site where\n  type AuthSimpleId site\n\n  ...\n\n  customAuthLayout :: WidgetFor site () -&gt; AuthHandler site Html\n\n  ...\n\n</code></pre>\n\n<p>I pasted in the definition of <code>customAuthLayout</code> from <code>defaultLayout</code> from Foundation.hs </p>\n\n<p>Here is the error I get from GHC:</p>\n\n<pre><code>Foundation.hs:432:15: error:\n    \u2022 Could not deduce: m ~ HandlerFor App\n      from the context: MonadAuthHandler App m\n        bound by the type signature for:\n                   customAuthLayout :: WidgetFor App () -&gt; AuthHandler App Html\n        at src/Foundation.hs:(427,5)-(434,79)\n      \u2018m\u2019 is a rigid type variable bound by\n        the type signature for:\n          customAuthLayout :: WidgetFor App () -&gt; AuthHandler App Html\n        at src/Foundation.hs:(427,5)-(434,79)\n      Expected type: m (PageContent (Route App))\n        Actual type: HandlerFor App (PageContent (Route App))\n    \u2022 In a stmt of a 'do' block:\n        pc &lt;- widgetToPageContent\n                $ do (do do (asWidgetT GHC.Base.. toWidget)\n                              ((blaze-markup-0.8.2.2:Text.Blaze.Internal.preEscapedText\n                                  GHC.Base.. Data.Text.pack)\n                                 \"&lt;!--  custom-auth-layout --&gt;\n&lt;body class=\"d-flex align-items-center bg-auth border-top border-top-2 border-primary\"&gt;\")\n                            ....)\n      In the expression:\n        do master &lt;- getYesod\n           mmsg &lt;- getMessage\n           muser &lt;- maybeAuthPair\n           mcurrentRoute &lt;- getCurrentRoute\n           ....\n      In an equation for \u2018customAuthLayout\u2019:\n          customAuthLayout widget\n            = do master &lt;- getYesod\n                 mmsg &lt;- getMessage\n                 muser &lt;- maybeAuthPair\n                 ....\n    |\n432 |         pc &lt;- widgetToPageContent $ do\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^...\n\n\n</code></pre>\n\n<p>I have used this tutorial successfully for normal (non-subsite pages) <a href=\"https://ersocon.net/cookbooks/yesod/html-and-seo/custom-layouts\" rel=\"nofollow noreferrer\">https://ersocon.net/cookbooks/yesod/html-and-seo/custom-layouts</a></p>\n\n<p>But I am getting tripped up by the subsite types. I have read Michael Snoyman's very good old blog post on subsite types but I cannot understand GHC's error message.</p>\n\n<p>I suspect either the type signature in Simple.hs is wrong, or I am missing something from the function definition.</p>\n"}, {"tags": ["haskell", "char", "boolean", "haskell-platform"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1572268596, "post_id": 58590808, "comment_id": 103496230, "body": "A space is a consonant?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1572268943, "post_id": 58590808, "comment_id": 103496420, "body": "@chepner well... no, it&#39;s a non-consonant! Interesting that \u201cA\u201d, \u201c\u03c9\u201d and \u201c\u2318\u201d seem to be consonants though..."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1572269043, "post_id": 58590808, "comment_id": 103496467, "body": "Oops, yeah, I read that backwards."}], "answers": [{"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1572269009, "post_id": 58590885, "comment_id": 103496449, "body": "I prefer <code>consonant = (`elem`&quot;aeiou &quot;)</code>. I generally find <code>flip</code> awkward, often it&#39;s better to just introduce a binding rather than taking point-free to the extreme."}, {"owner": {"reputation": 2485, "user_id": 11282404, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c1e3829cb91cc6be3541a37381b5ff21?s=128&d=identicon&r=PG&f=1", "display_name": "jpmarinier", "link": "https://stackoverflow.com/users/11282404/jpmarinier"}, "edited": false, "score": 0, "creation_date": 1572280248, "post_id": 58590885, "comment_id": 103502454, "body": "I used to think that consonant x = elem x &quot;bcdfghjklmnpqrtuvwxz&quot;, but I am not a native speaker of English; that comes a long way towards explaining why we can&#39;t understand native speakers."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 2485, "user_id": 11282404, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c1e3829cb91cc6be3541a37381b5ff21?s=128&d=identicon&r=PG&f=1", "display_name": "jpmarinier", "link": "https://stackoverflow.com/users/11282404/jpmarinier"}, "edited": false, "score": 0, "creation_date": 1572280275, "post_id": 58590885, "comment_id": 103502477, "body": "@jpmarinier: you are right, somehow, I lost track of the &quot;not&quot; through the <code>if</code>-<code>then</code>-<code>else</code>."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 3, "last_activity_date": 1572284514, "last_edit_date": 1572284514, "creation_date": 1572265406, "answer_id": 58590885, "question_id": 58590808, "link": "https://stackoverflow.com/questions/58590808/haskell-comparing-characters/58590885#58590885", "title": "Haskell: Comparing Characters", "body": "<p>The expression <code>x == 'a'|'e'|'i'|'o'|'u'|' '</code> does not make sense, the pipe character (<code>|</code>) is used for guards, or when defining several data constructors for a data type.</p>\n\n<p>Replacing <code>|</code> with <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:-124--124-\" rel=\"nofollow noreferrer\"><strong><code>(||) :: Bool -&gt; Bool -&gt; Bool</code></strong></a> will not help either, since <code>'e'</code> is not a <code>Bool</code>. We can however write several conditions:</p>\n\n<pre><code>consonant :: Char -&gt; Bool\nconsonant x = not (x == 'a'<b>|| x ==</b> 'e'<b>|| x ==</b> 'i'<b>|| x ==</b>'o'<b>|| x ==</b>'u'<b>|| x ==</b>' ')</code></pre>\n\n<p>or we can make use of <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:elem\" rel=\"nofollow noreferrer\"><strong><code>elem :: (Eq a, Foldable f) =&gt; a -&gt; f a -&gt; Bool</code></strong></a>:</p>\n\n<pre><code>consonant :: Char -&gt; Bool\nconsonant = not . <b>flip elem \"aeiou \"</b></code></pre>\n\n<p>or we can make use of an operator sectioning as <a href=\"https://stackoverflow.com/questions/58590808/haskell-comparing-characters/58590885?noredirect=1#comment103496449_58590885\">@leftroundabout suggests</a>:</p>\n\n<pre><code>consonant :: Char -&gt; Bool\nconsonant = not . <b>(`elem` \"aeiou \")</b></code></pre>\n\n<p>or do the \"flipping\" ourselves with a variable:</p>\n\n<pre><code>consonant :: Char -&gt; Bool\nconsonant <b>x</b> = not (elem <b>x</b> \"aeiou \")</code></pre>\n\n<p>Or we can make use <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:notElem\" rel=\"nofollow noreferrer\"><strong><code>notElem :: (Eq a, Foldable f) =&gt; a -&gt; f a -&gt; Bool</code></strong></a> which negates the <code>elem</code>:</p>\n\n<pre><code>consonant :: Char -&gt; Bool\nconsonant = (<b>`notElem`</b> \"aeiou \")</code></pre>\n"}], "owner": {"reputation": 15, "user_id": 12285658, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c01b5bca18122d2e089df184b5e37d3e?s=128&d=identicon&r=PG&f=1", "display_name": "sambud_Ger", "link": "https://stackoverflow.com/users/12285658/sambud-ger"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 324, "favorite_count": 0, "accepted_answer_id": 58590885, "answer_count": 1, "score": 0, "last_activity_date": 1572284514, "creation_date": 1572265084, "question_id": 58590808, "link": "https://stackoverflow.com/questions/58590808/haskell-comparing-characters", "title": "Haskell: Comparing Characters", "body": "<p>I want to create a function consonant which check, whether an char is an consonant(True) or a vowel(False).\nI try something like this:</p>\n\n<pre><code>consonant :: Char -&gt; Bool\nconsonant x = if (x == 'a'|'e'|'i'|'o'|'u'|' ') then False else True\n</code></pre>\n\n<p>But it doesn't work, i think it is just a problem with the Syntax.\nI hope anyone can help me :)\nThanks</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1572265128, "post_id": 58590801, "comment_id": 103494630, "body": "<code>12.34</code> is not an <code>Int</code>. You can parse it to a <code>Float</code>, or a <code>Decimal</code>."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1572269840, "post_id": 58590801, "comment_id": 103496876, "body": "I feel like a lot of people answered without even knowing what the question was. What result do you <i>want</i> when given the input <code>&quot;12.34&quot;</code>? 12? 1234? Program dies? An error that you can dispatch on but doesn&#39;t kill the program? A split of the string into <code>&quot;12&quot;</code> and <code>&quot;.34&quot;</code>? ...something else?"}, {"owner": {"reputation": 639, "user_id": 10654293, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-N3y4b1ilweA/AAAAAAAAAAI/AAAAAAAAAAQ/nO5VTzQiUu0/photo.jpg?sz=128", "display_name": "McBear Holden", "link": "https://stackoverflow.com/users/10654293/mcbear-holden"}, "edited": false, "score": 0, "creation_date": 1572272636, "post_id": 58590801, "comment_id": 103498321, "body": "What about &quot;12,343&quot; with a thousand seperator?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1572277687, "post_id": 58590801, "comment_id": 103501120, "body": "What if I told you that in some parts of the world, the <code>.</code> in <code>12.345</code> is <i>also</i> a thousands separator? So I ask again: what result do you <i>want</i> when given the input <code>&quot;12.345&quot;</code>?"}, {"owner": {"reputation": 639, "user_id": 10654293, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-N3y4b1ilweA/AAAAAAAAAAI/AAAAAAAAAAQ/nO5VTzQiUu0/photo.jpg?sz=128", "display_name": "McBear Holden", "link": "https://stackoverflow.com/users/10654293/mcbear-holden"}, "edited": false, "score": 0, "creation_date": 1572338042, "post_id": 58590801, "comment_id": 103518755, "body": "Sorry for not being clear. My question is how to parse Int when given a string containing separators. Anyway, I see that I could simply use a filter to get rid of the separators. Thanks"}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 6, "last_activity_date": 1572265492, "creation_date": 1572265492, "answer_id": 58590905, "question_id": 58590801, "link": "https://stackoverflow.com/questions/58590801/how-to-read-parse-int-from-string/58590905#58590905", "title": "How to read/parse Int from String", "body": "<p>This does not work, since <code>12.34</code> is <em>not</em> an <code>Int</code>eger. You can parse this as a <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Float\" rel=\"noreferrer\"><strong><code>Float</code></strong></a> or a <a href=\"https://hackage.haskell.org/package/Decimal-0.5.1/docs/Data-Decimal.html#t:Decimal\" rel=\"noreferrer\"><strong><code>Decimal</code></strong></a> for example:</p>\n\n<pre><code>Prelude&gt; read \"12.34\" :: Float\n12.34\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 639, "user_id": 10654293, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-N3y4b1ilweA/AAAAAAAAAAI/AAAAAAAAAAQ/nO5VTzQiUu0/photo.jpg?sz=128", "display_name": "McBear Holden", "link": "https://stackoverflow.com/users/10654293/mcbear-holden"}, "edited": false, "score": 0, "creation_date": 1572272699, "post_id": 58590987, "comment_id": 103498352, "body": "Thanks for taking the time to reply. What about a number format with a thousand seperator such as &quot;12,345&quot; ?"}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 639, "user_id": 10654293, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-N3y4b1ilweA/AAAAAAAAAAI/AAAAAAAAAAQ/nO5VTzQiUu0/photo.jpg?sz=128", "display_name": "McBear Holden", "link": "https://stackoverflow.com/users/10654293/mcbear-holden"}, "edited": false, "score": 0, "creation_date": 1572275255, "post_id": 58590987, "comment_id": 103499799, "body": "@McBearHolden This is not optimistic. I updated my answer. In short, use <code>filter (&#47;= &#39;,&#39;)</code>."}, {"owner": {"reputation": 639, "user_id": 10654293, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-N3y4b1ilweA/AAAAAAAAAAI/AAAAAAAAAAQ/nO5VTzQiUu0/photo.jpg?sz=128", "display_name": "McBear Holden", "link": "https://stackoverflow.com/users/10654293/mcbear-holden"}, "edited": false, "score": 0, "creation_date": 1572338061, "post_id": 58590987, "comment_id": 103518764, "body": "Thanks. Adding a filter function is the simplest one."}], "tags": [], "owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "is_accepted": true, "score": 2, "last_activity_date": 1572275220, "last_edit_date": 1572275220, "creation_date": 1572265862, "answer_id": 58590987, "question_id": 58590801, "link": "https://stackoverflow.com/questions/58590801/how-to-read-parse-int-from-string/58590987#58590987", "title": "How to read/parse Int from String", "body": "<h2>Read a floating point number.</h2>\n\n<p>Consider reading a floating point number first, then rounding it as fits your application.</p>\n\n<pre><code>\u03bb (round  . read) \"12.34\"   \n12\n</code></pre>\n\n<p>Note that it can read a number without a dot as well:</p>\n\n<pre><code>\u03bb (round  . read) \"12\"                  \n12\n</code></pre>\n\n<h2>There are more rounding methods.</h2>\n\n<p><code>Prelude</code> offers several functions for transforming fractions into integral numbers: beside the obvious <code>round</code>, there are <code>floor</code>, <code>ceiling</code> and <code>truncate</code>. <a href=\"https://en.wikipedia.org/wiki/Decimal_separator#Digit_grouping\" rel=\"nofollow noreferrer\">There are subtleties to them.</a></p>\n\n<h2>Rounding methods have polymorphic powers.</h2>\n\n<p>If you enable <code>-Wtype-defaults</code>, you will see that the number \"12.34\" is read as a <code>Double</code> and then transformed to <code>Integer</code>. If you inspect <code>round</code> though, you will see that it is quite general:</p>\n\n<pre><code>\u03bb :type round\nround :: (RealFrac a, Integral b) =&gt; a -&gt; b\n</code></pre>\n\n<p>So, for instance, you may retrieve an <code>Int</code>.</p>\n\n<pre><code>\u03bb (round  . read) \"12.34\" :: Int\n12\n</code></pre>\n\n<h2>You can give type arguments to your functions.</h2>\n\n<p>You can use the <code>TypeApplications</code> language extension to get concise and flexible code. For instance, if you wish to parse an exotic looking <code>Rational</code> to a <code>Word8</code>:</p>\n\n<pre><code>\u03bb round @_ @Word8 . read @Rational $ \"2833 % 11\"\n2\n</code></pre>\n\n<h2>You can avoid run time errors.</h2>\n\n<p>You can get a run time error from any of the above, if someone supplies gibberish. One tiny typo is enough to bring the whole program down. And the <a href=\"https://stackoverflow.com/a/23862038\">problem is remedied</a> already: we now have <code>readMaybe</code> in <code>Prelude</code>. See:</p>\n\n<pre><code>\u03bb fmap round . readMaybe @Rational $ \"339 % 108\"\nJust 3\n\u03bb fmap round . readMaybe @Rational $ \"3.14159\"\nNothing\n</code></pre>\n\n<p>I think <code>readMaybe</code> should be preferred to <code>read</code> whenever possible.</p>\n\n<h2>Limitations of <code>instance Read</code> of basic number types.</h2>\n\n<p>The <code>Read</code> instances available in <code>Prelude</code> are geared towards the <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch2.html#x7-190002.5\" rel=\"nofollow noreferrer\">lexical syntax of Haskell</a>, which means there is a single unified reading. It supports some notational conventions, like exponential notation, by default, optionally admits some more, like <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#extension-BinaryLiterals\" rel=\"nofollow noreferrer\">binary literals</a>, and eschews others. For example, omitting <code>0</code> before the decimal separator is widely accepted in some countries, but it is not supported by any <code>Read</code> instance in <code>base</code>. The use of <a href=\"https://en.wikipedia.org/wiki/Decimal_separator#Digit_grouping\" rel=\"nofollow noreferrer\">thousands separators</a>, while it greatly facilitates the human understanding of large numbers, is, to my knowledge, also ignored. There is no effort whatsoever to support various regional standards and conventions in <code>base</code>, and, as far as I know, there is no <em>\"go-to\"</em> library to achieve more flexible support for parsing numbers at the moment.</p>\n\n<p>So, if you require something <em>\"unusual\"</em> \u2014 that is, exceeding the Haskell standard \u2014 the advice is twofold:</p>\n\n<ul>\n<li>Use a parsing library to construct a specialized parser. There is <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Text-ParserCombinators-ReadP.html\" rel=\"nofollow noreferrer\">a parser combinator module in <code>base</code></a>, along with a wide choice of advanced and modern parsing libraries on Hackage.</li>\n<li>Use a simple hack. For instance, if you wish to support thousands separators, you may do something like <code>filter (/= ',')</code>. Some <a href=\"https://github.com/sol/doctest/blob/4da836a9b8bc2efbba5f27033c5a8fdc690e49b3/src/Parse.hs\" rel=\"nofollow noreferrer\">widely used tools</a> in Haskell are built on hacks of this sort.</li>\n</ul>\n\n<p>In the latter case, you should beware of possible ambiguity. For example, if you simply remove all non-number characters from the input string, you will cripple hexadecimals and exponential notation:</p>\n\n<pre><code>\u03bb (round  . read) \"2.6356e5\"                  \n263560\n\u03bb (round  . read . filter isNumber) \"2.6356e5\"\n263565\n</code></pre>\n\n<p>I wish one day we will have stronger localization support. I think this comes with wide adoption, and Haskell is yet a local language.</p>\n"}], "owner": {"reputation": 639, "user_id": 10654293, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-N3y4b1ilweA/AAAAAAAAAAI/AAAAAAAAAAQ/nO5VTzQiUu0/photo.jpg?sz=128", "display_name": "McBear Holden", "link": "https://stackoverflow.com/users/10654293/mcbear-holden"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 113, "favorite_count": 0, "accepted_answer_id": 58590987, "answer_count": 2, "score": 2, "last_activity_date": 1572275220, "creation_date": 1572265052, "last_edit_date": 1572272817, "question_id": 58590801, "link": "https://stackoverflow.com/questions/58590801/how-to-read-parse-int-from-string", "title": "How to read/parse Int from String", "body": "<p>I use <code>read \"123\" :: Int</code> to read in Int from String. This works great for a simple case such as <code>\"123\"</code>; But it fails when the input is <code>\"12.34\"</code>.</p>\n\n<p>What do people usually do in such cases?</p>\n\n<p>Edit: I also would like to know if there is a simple way to parse numbers with thousand separator such as <code>\"12,345\"</code></p>\n"}, {"tags": ["haskell", "haskell-diagrams"], "answers": [{"tags": [], "owner": {"reputation": 1943, "user_id": 305559, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cc113924265dbeb535c8b2fefe4e33ee?s=128&d=identicon&r=PG", "display_name": "Brent Yorgey", "link": "https://stackoverflow.com/users/305559/brent-yorgey"}, "is_accepted": true, "score": 5, "last_activity_date": 1572310021, "creation_date": 1572310021, "answer_id": 58600138, "question_id": 58590431, "link": "https://stackoverflow.com/questions/58590431/how-to-control-scale-invariance/58600138#58600138", "title": "How to control scale invariance?", "body": "<p>The <a href=\"https://diagrams.github.io/doc/manual.html#measurement-units\" rel=\"noreferrer\">user manual section on measurement units</a> is what you want to look at.  Things like arrowheads are by default measured in \"normalized\" units, which are scaled so that they are always a constant proportion of the size of the whole picture.  If I understand your use case correctly, I think you probably want to use local units instead.  Use the primed variant of whatever arrow function you are using, and give it an options record something like</p>\n\n<pre><code>(with &amp; headLength .~ local 0.1)\n</code></pre>\n\n<p>but with whatever number makes your pictures look the way you want.  See the <a href=\"https://diagrams.github.io/doc/arrow.html#arrowopts\" rel=\"noreferrer\">arrow tutorial</a> for more on arrow options.</p>\n"}], "owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 2, "accepted_answer_id": 58600138, "answer_count": 1, "score": 9, "last_activity_date": 1572310021, "creation_date": 1572263412, "question_id": 58590431, "link": "https://stackoverflow.com/questions/58590431/how-to-control-scale-invariance", "title": "How to control scale invariance?", "body": "<p>I am trying to put several diagrams together in a kind of a table. I think this is called <em>\"index\nprint\"</em>, photography people do that when they have to review many photographs at once. Anyway,\nthis is the code:</p>\n\n<pre><code>main :: IO ()\nmain = mainWith @(Diagram B)\n     $ (tile . fmap renderOne) examples\n\nrenderOne :: AnyGraph -&gt; Diagram B\nrenderOne (AnyGraph gr) = ...\n\ntile :: [Diagram B] -&gt; Diagram B\ntile xs = let columns = (ceiling . sqrt . fromIntegral . length) xs\n          in (vcat . fmap hcat . List.chunksOf columns) xs\n</code></pre>\n\n<p>It does not work as I expect. But let us approach it gradually. First, here is a render of a\nsingle tile:</p>\n\n<p><a href=\"https://i.stack.imgur.com/5rzMU.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/5rzMU.png\" alt=\"one\"></a></p>\n\n<p>Now, let us <code>hcat</code> four tiles together.</p>\n\n<p><a href=\"https://i.stack.imgur.com/tjNYB.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/tjNYB.png\" alt=\"hcat\"></a></p>\n\n<p>Add a second row: <em>(See how <a href=\"https://archives.haskell.org/projects.haskell.org/diagrams/doc/manual.html#scale-invariance\" rel=\"noreferrer\">scale invariant</a> features thicken.)</em></p>\n\n<p><a href=\"https://i.stack.imgur.com/FeR7d.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/FeR7d.png\" alt=\"tile2\"></a></p>\n\n<p>And this is how it looks with 4 rows:</p>\n\n<p><a href=\"https://i.stack.imgur.com/PbonK.png\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/PbonK.png\" alt=\"tile\"></a></p>\n\n<p>Out of hand!</p>\n\n<p>It seems to me that scale invariant features, such as arrow heads, are scaled in proportion to the <em>area</em> of the picture. But in this case, I need to grow my diagram without re-scaling those features. How can I achieve that?</p>\n"}, {"tags": ["haskell", "types", "pattern-matching", "gadt", "type-families"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 1, "creation_date": 1572264269, "post_id": 58590189, "comment_id": 103494222, "body": "Could you elaborate on the error you get?"}, {"owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 1, "creation_date": 1572264506, "post_id": 58590189, "comment_id": 103494318, "body": "Sure, have just done it"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1572265007, "post_id": 58590189, "comment_id": 103494562, "body": "You need a singleton <code>data AnyOp where  AnyOp :: SType t -&gt; Operator t -&gt; AnyOp</code> and <code>data SType t where SNumeric :: SType &#39;Numeric ; SBoolean :: STYpe &#39;Boolean</code>. You should find many examples of singletons in Haskell GADTs in you search for them."}], "answers": [{"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 3, "last_activity_date": 1572877366, "last_edit_date": 1572877366, "creation_date": 1572283622, "answer_id": 58595659, "question_id": 58590189, "link": "https://stackoverflow.com/questions/58590189/pattern-match-on-a-data-family-in-haskell/58595659#58595659", "title": "Pattern match on a data family in Haskell", "body": "<p>From a distance, data families look a little like GADTs, in that two constructors for a data family can produce results of different types. But data families are not the same as GADTs! They're really much more like type families. You can't actually match on <code>Add</code> or <code>Sub</code> until you know that you have an <code>Operator 'Numeric</code>. Why is this? You can think of it operationally. Each constructor has to have a \"tag\" so that <code>case</code> expressions can distinguish them. If two Data instances are defined in different modules, then they may well end up using the same tag for different constructors! Furthermore, a newtype instance doesn't even get a tag, so there's no way to distinguish them at all! As chi indicates, you can work around this by wrapping up a singleton in your existential to keep track of which data instance you have.</p>\n\n<hr>\n\n<p>My understanding is that data families don't really offer much, if any, power that can't be obtained without them. Let's see how a data family slightly more complex than yours can be expressed, very awkwardly, with a newtype, a type family, and pattern synonyms.</p>\n\n<pre><code>import Data.Kind (Type)\n\ndata Typ = Numeric Bool | Boolean\n\nnewtype Operator t = Operator (OperatorF t)\n\ntype family OperatorF (t :: Typ) :: Type\n\ntype instance OperatorF ('Numeric b) = OpNum b\ntype instance OperatorF 'Boolean = OpBool\n\n-- This makes no sense; it's just for demonstration\n-- purposes.\ndata OpNum b where\n  Add' :: OpNum 'True\n  Sub' :: OpNum 'False\n\ndata OpBool = And' | Or'\n\npattern Add :: () =&gt; (b ~ 'True) =&gt; Operator ('Numeric b)\npattern Add = Operator Add'\n\npattern Sub :: () =&gt; (b ~ 'False) =&gt; Operator ('Numeric b)\npattern Sub = Operator Sub'\n\npattern And :: Operator 'Boolean\npattern And = Operator And'\n\npattern Or :: Operator 'Boolean\npattern Or = Operator Or'\n</code></pre>\n"}], "owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 146, "favorite_count": 1, "accepted_answer_id": 58595659, "answer_count": 1, "score": 6, "last_activity_date": 1572877366, "creation_date": 1572262365, "last_edit_date": 1572264482, "question_id": 58590189, "link": "https://stackoverflow.com/questions/58590189/pattern-match-on-a-data-family-in-haskell", "title": "Pattern match on a data family in Haskell", "body": "<p>I have wrapped up whole data family in a single existential:</p>\n\n<pre><code>data Type = Numeric | Boolean \n\ndata family Operator (t :: Type)\ndata instance Operator 'Numeric = Add | Sub\ndata instance Operator 'Boolean = And | Or\n\ndata AnyOp where\n  AnyOp :: Operator t -&gt; AnyOp\n</code></pre>\n\n<p>Now I would like to do some pattern matching on it</p>\n\n<pre><code>pp :: AnyOp -&gt; String\npp op = case op of\n  AnyOp Add -&gt; \"+\"\n  AnyOp Sub -&gt; \"-\"\n  AnyOp And -&gt; \"&amp;\"\n  AnyOp Or  -&gt; \"|\"\n</code></pre>\n\n<p>But the typechecker yells at me because</p>\n\n<blockquote>\n<pre><code>      \u2018t\u2019 is a rigid type variable bound by\n        a pattern with constructor:\n          AnyOp :: forall (t :: TType). Operator t -&gt; AnyOp,\n        in a case alternative\n        at somesource/somefile/someposition\n      Expected type: Operator t\n        Actual type: Operator 'Boolean ```\n</code></pre>\n</blockquote>\n\n<p>Why? What is the proper way of doing this?</p>\n"}, {"tags": ["haskell", "haskell-stack", "nix"], "answers": [{"tags": [], "owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "is_accepted": false, "score": 0, "last_activity_date": 1572807027, "creation_date": 1572807027, "answer_id": 58683528, "question_id": 58589415, "link": "https://stackoverflow.com/questions/58589415/stack-exec-failed-when-using-http-client-http-client-tls-in-pure-nix/58683528#58683528", "title": "stack exec failed when using http-client/http-client-tls in pure nix", "body": "<p><code>pure: true</code> means to exclude executable defined in your 'existing' shell.</p>\n\n<p>So it looks like you probably just need to explicitly define the packages you depend on.</p>\n"}], "owner": {"reputation": 93, "user_id": 4939115, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FhXgf.png?s=128&g=1", "display_name": "eatt1029", "link": "https://stackoverflow.com/users/4939115/eatt1029"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 136, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1572807027, "creation_date": 1572259096, "question_id": 58589415, "link": "https://stackoverflow.com/questions/58589415/stack-exec-failed-when-using-http-client-http-client-tls-in-pure-nix", "title": "stack exec failed when using http-client/http-client-tls in pure nix", "body": "<p>I'm using <a href=\"https://nixos.org/nix/\" rel=\"nofollow noreferrer\">nix</a>, <a href=\"https://docs.haskellstack.org/en/stable/README/\" rel=\"nofollow noreferrer\">stack</a> and <a href=\"https://hackage.haskell.org/package/http-client-tls\" rel=\"nofollow noreferrer\">http-client-tls</a> to GET/POST data from/to HTTPS in Haskell. </p>\n\n<p>The problem is, <code>stack exec project-exec</code> fails with:</p>\n\n<blockquote>\n  <p>project-exe: security: createProcess: runInteractiveProcess: exec: does not exist (No such file or directory)</p>\n</blockquote>\n\n<p>However, if I setup <code>pure: false</code> for nix in stack.yaml, it can work normally. </p>\n\n<p>So did I lose something in my nix env? How can I solve this?</p>\n\n<hr>\n\n<p>main.hs:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE OverloadedStrings #-}\n--\nmodule Main where\n--\nimport qualified Data.ByteString.Lazy as B\n--\nimport Network.HTTP.Client\nimport Network.HTTP.Client.TLS\n--\nurl = \"https://www.google.com.tw/search?q=test\"\n--\nmain :: IO ()\nmain = do\n    mgt &lt;- newManager tlsManagerSettings\n    request &lt;- parseRequest url\n    res &lt;- httpLbs request mgt :: IO (Response B.ByteString)\n    print res\n</code></pre>\n\n<p>stack.yaml:</p>\n\n<pre><code>resolver: lts-14.11\n\npackages:\n- .\n\nnix:\n  enable: true\n  pure: true\n  # shell-file: shell.nix\n  # packages: [ ]\n</code></pre>\n"}, {"tags": ["loops", "haskell", "monads", "forall", "st-monad"], "comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 2, "creation_date": 1572248373, "post_id": 58586955, "comment_id": 103487703, "body": "<code>Monad m</code> isn&#39;t enough.  Consider if <code>m</code> were a backtracking monad like <code>[]</code> which would render <code>ST</code> unsafe due to its &quot;teleportation&quot; abilities.  I suspect you need <a href=\"http://hackage.haskell.org/package/primitive-0.7.0.0/docs/Control-Monad-Primitive.html\" rel=\"nofollow noreferrer\"><code>Primitive</code></a>."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1572316070, "post_id": 58586955, "comment_id": 103513629, "body": "That use of <code>runST</code> also looks really fishy. It shouldn&#39;t be compatible with that type signature. The scoping on the <code>s</code> type variable is wrong."}], "owner": {"reputation": 71, "user_id": 8846793, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/585b1ea1b9eccf132be32bd295de6f65?s=128&d=identicon&r=PG&f=1", "display_name": "Evelyn Schneider", "link": "https://stackoverflow.com/users/8846793/evelyn-schneider"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 82, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1572253562, "creation_date": 1572247194, "last_edit_date": 1572253562, "question_id": 58586955, "link": "https://stackoverflow.com/questions/58586955/looping-inside-the-st-monad", "title": "Looping inside the ST monad", "body": "<p>I'm trying to implement insertion sort in Haskell on <code>Data.Array.ST</code>, with a monadic comparison function. i.e., <code>sortByM :: (Monad m, Ix i, Enum i, Eq i) =&gt; (e -&gt; e -&gt; Ordering) -&gt; STArray s i e -&gt; m (ST s ())</code>. Here's my code, for context:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>import Data.Ord\nimport Data.Foldable\nimport Data.Array.ST\nimport Control.Monad.ST\n\nsortByM :: (Monad m, Ix i, Enum i, Eq i) \n        =&gt; (e -&gt; e -&gt; m Ordering) \n        -&gt; STArray s i e -&gt; m (ST s ())\nsortByM cmp xs = sequence_ &lt;$&gt; traverse (bubbleBack xs) [start..end]\n  where \n        (start, end) = runST $ getBounds xs\n        bubbleBack :: (Monad m, Ix i, Enum i, Eq i) \n                   =&gt; STArray s i e -&gt; i -&gt; m (ST s ())\n        bubbleBack ary = loopM $ fmap (mapLeft runST) . bubbleBackOnce ary\n        bubbleBackOnce :: (Monad m, Ix i, Enum i, Eq i) \n                        =&gt; STArray s i e \n                        -&gt; i -&gt; m (Either (ST s i) (ST s ()))\n        bubbleBackOnce ary bubble = \n           if bubble == start\n           then return $ Right $ return ()\n           else do\n                  let elem = runST $ readArray ary bubble\n                  let prev = runST $ readArray ary (pred bubble)\n                  ordering &lt;- cmp elem prev\n                  return $ if ordering == LT\n                           then Left $ do\n                                         writeArray ary bubble prev\n                                         writeArray ary (pred bubble) elem\n                                         return $ pred bubble\n                           else Right $ return ()\n-- ...\nmapLeft :: (a -&gt; r) -&gt; Either a b -&gt; Either r b\nmapLeft f (Left x)  = Left (f x)\nmapLeft _ (Right x) = Right x\n</code></pre>\n\n<p>The problem I'm running into, as I understand it, is that <code>loopM</code>'s first parameter is expected to have type <code>ST s i -&gt; m (Either i (ST s ()))</code>, but because of <code>runST</code>'s method of hiding <code>ST</code>'s internal state, <code>fmap (mapLeft runST) . bubbleBackOnce ary</code> has type <code>(forall s'. ST s' i) -&gt; Either i (ST s i)</code>. This is my first time using ST, so I'm not sure how to address this. Additionally, this is for a pet project, so I'm trying to avoid relying on existing libraries that would simplify things, e.g. STMonadTrans.</p>\n"}, {"tags": ["haskell", "type-families"], "answers": [{"comments": [{"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1572288852, "post_id": 58586788, "comment_id": 103506305, "body": "Besides following the definitions, another way of exploring the type families provided by a library is to &quot;run&quot; them from ghci, using the <code>:kind!</code> command: <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/ghci.html?highlight=kind#ghci-cmd-:kind\" rel=\"nofollow noreferrer\">downloads.haskell.org/~ghc/latest/docs/html/users_guide/&hellip;</a> We can even use it with <code>(~)</code> itself, like <code>:kind! (~)</code> or or <code>:kind! ((~) Int)</code> or <code>:kind! (Int ~ Int)</code>."}], "tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": true, "score": 4, "last_activity_date": 1572246370, "last_edit_date": 1572246370, "creation_date": 1572246037, "answer_id": 58586788, "question_id": 58586434, "link": "https://stackoverflow.com/questions/58586434/understanding-type-equality-in-function-signature/58586788#58586788", "title": "Understanding type equality in function signature", "body": "<p>It's <code>BufferColor (Color c (ColorElement c)) h</code> what must be equal to <code>b</code>, not <code>h</code>.</p>\n\n<p><a href=\"https://hackage.haskell.org/package/GPipe-2.2.4/docs/Graphics-GPipe-Buffer.html#t:BufferColor\" rel=\"nofollow noreferrer\"><code>BufferColor</code></a> is a two-argument <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html?highlight=type%20families#extension-TypeFamilies\" rel=\"nofollow noreferrer\">type family</a>. Type families behave a bit like functions at the type level. You put types in, and receive another type in return. </p>\n\n<p>And \"type family application\" has higher precedence than the type equality operator <code>~</code>.</p>\n"}], "owner": {"reputation": 841, "user_id": 4927711, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/98c32e7161133d8461c3d78fce3245ed?s=128&d=identicon&r=PG&f=1", "display_name": "DevNewb", "link": "https://stackoverflow.com/users/4927711/devnewb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 69, "favorite_count": 0, "accepted_answer_id": 58586788, "answer_count": 1, "score": 1, "last_activity_date": 1572246370, "creation_date": 1572243313, "question_id": 58586434, "link": "https://stackoverflow.com/questions/58586434/understanding-type-equality-in-function-signature", "title": "Understanding type equality in function signature", "body": "<p>In GPipe there is a <a href=\"https://hackage.haskell.org/package/GPipe-2.2.4/docs/Graphics-GPipe-Texture.html#v:writeTexture2D\" rel=\"nofollow noreferrer\">function</a> for writing to texture:</p>\n\n<pre><code>writeTexture2D :: forall ctx b c h w os f m. (ContextHandler ctx, MonadIO m, BufferFormat b, ColorSampleable c, BufferColor (Color c (ColorElement c)) h ~ b, h ~ HostFormat b) =&gt; Texture2D os (Format c) -&gt; Level -&gt; StartPos2 -&gt; Size2 -&gt; [h] -&gt; ContextT ctx os m () \n</code></pre>\n\n<p>I have a problem understanding part of the signature where type equality is used. There is a <a href=\"http://tobbebex.blogspot.com/2015/10/gpu-programming-in-haskell-using-gpipe_21.html\" rel=\"nofollow noreferrer\">tutorial</a> that sort of talks about it, but does not go into detail explaining what I assume is obvious.</p>\n\n<pre><code>BufferColor (Color c (ColorElement c)) h ~ b, h ~ HostFormat b\n</code></pre>\n\n<p>So what I know:</p>\n\n<ul>\n<li>there is an instance of <code>BufferFormat</code> for <code>b</code></li>\n<li><code>BufferFormat</code> class has an associated type <code>HostFormat</code></li>\n<li><code>h ~ HostFormat b</code> tells me that <code>h</code> must be that <code>HostFormat</code> for a given <code>b</code> ?</li>\n<li><code>h ~ b</code> this tells me that h and b must be the same type ?</li>\n</ul>\n\n<p>But when I look at the <a href=\"https://hackage.haskell.org/package/GPipe-2.2.4/docs/Graphics-GPipe-Buffer.html#t:BufferFormat\" rel=\"nofollow noreferrer\">instances</a> of <code>BufferFormat b</code> I don't think there is any such instance that would have <code>b</code> equal to its own<code>HostFormat b</code> ? Where am I making a mistake?</p>\n"}, {"tags": ["haskell", "syntax"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1572215089, "post_id": 58583869, "comment_id": 103482020, "body": "The <code>where</code> is scoped over all guards, so you should put it at the end of the guards."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1572222065, "post_id": 58583869, "comment_id": 103483139, "body": "<code>execStateN n m s = execState (replicateM n m) s</code>"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1572223161, "post_id": 58583869, "comment_id": 103483288, "body": "And just to note, if you change <code>fibStep</code> to <code>state $ (\\a, b) -&gt; (a, (b, a+b))</code>, then <code>evalState (replicateM n fibStep) (0, 1)</code> will give you a list of the first <code>n</code> Fibonacci numbers."}, {"owner": {"reputation": 19222, "user_id": 789186, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/9d232cc5abe46092d3972d4f85833e42?s=128&d=identicon&r=PG", "display_name": "user4035", "link": "https://stackoverflow.com/users/789186/user4035"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1572259797, "post_id": 58583869, "comment_id": 103492303, "body": "@chepner &quot;evalState (replicateM n fibStep) (0, 1) will give you a list of the first n Fibonacci numbers&quot; - this is what it was intended to do. I eventually created almost the same function as you: <code>execStateN n m = execState $ replicateM_ n m</code> (s parameter omitted)."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 6, "last_activity_date": 1572215187, "creation_date": 1572215187, "answer_id": 58583888, "question_id": 58583869, "link": "https://stackoverflow.com/questions/58583869/function-with-guards-syntax-error-when-using-where/58583888#58583888", "title": "Function with guards: syntax error when using &quot;where&quot;", "body": "<p>The <code>where</code> is scoped over all the guards, so you put it at the end of the guards, like:</p>\n\n<pre><code>execStateN :: Int -&gt; State s a -&gt; s -&gt; s\nexecStateN n m s\n  | n == 1 = execState m s\n  | n &gt; 1 = execStateN (n - 1) m s'\n  | otherwise = error &quot;undefined behaviour&quot;\n  <b>where</b> s' = execState m s</code></pre>\n"}], "owner": {"reputation": 19222, "user_id": 789186, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/9d232cc5abe46092d3972d4f85833e42?s=128&d=identicon&r=PG", "display_name": "user4035", "link": "https://stackoverflow.com/users/789186/user4035"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 39, "favorite_count": 0, "accepted_answer_id": 58583888, "answer_count": 1, "score": 2, "last_activity_date": 1572215187, "creation_date": 1572215049, "question_id": 58583869, "link": "https://stackoverflow.com/questions/58583869/function-with-guards-syntax-error-when-using-where", "title": "Function with guards: syntax error when using &quot;where&quot;", "body": "<p>MWE:</p>\n\n<pre><code>import Control.Monad.State.Lazy\n\nfibStep :: State (Integer, Integer) ()\nfibStep = state $ \\(a, b) -&gt; ((), (b, a + b))\n\nexecStateN :: Int -&gt; State s a -&gt; s -&gt; s\nexecStateN n m s\n  | n == 1 = execState m s\n  | n &gt; 1 = let s' = execState m s in\n              execStateN (n - 1) m s'\n  -- | n &gt; 1 = execStateN (n - 1) m s' where s' = execState m s\n  | otherwise = error \"undefined behaviour\"\n</code></pre>\n\n<p>It works, but as soon as I uncomment <code>where</code> variant and comment the <code>let</code> one, it gives syntax error:</p>\n\n<blockquote>\n  <p>error: parse error on input \u2018|\u2019</p>\n</blockquote>\n\n<p>I checked the indents, they are fine. What's wrong?</p>\n"}, {"tags": ["scala", "haskell", "functional-programming", "lenses", "monocle-scala"], "answers": [{"comments": [{"owner": {"reputation": 926, "user_id": 1486968, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/WvBqy.png?s=128&g=1", "display_name": "Joe", "link": "https://stackoverflow.com/users/1486968/joe"}, "edited": false, "score": 1, "creation_date": 1572214486, "post_id": 58583731, "comment_id": 103481930, "body": "This is conveniently completely fine for my use case, which is a &quot;just for fun&quot; Scala Optics Library where I&#39;ve written the Functor Hierarchy from scratch, and can therefore do whatever I like with it.   Am I right in thinking that this suggests that If I also had a another type-class between <code>Functor</code> and <code>Applicative</code> with <code>liftA2</code>, but no pure, then that would define an optic with <i>one to many</i> targets? Does this have a name?"}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "reply_to_user": {"reputation": 926, "user_id": 1486968, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/WvBqy.png?s=128&g=1", "display_name": "Joe", "link": "https://stackoverflow.com/users/1486968/joe"}, "edited": false, "score": 1, "creation_date": 1572215553, "post_id": 58583731, "comment_id": 103482090, "body": "It does suggest that. I have no idea what the optic would be called."}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "reply_to_user": {"reputation": 926, "user_id": 1486968, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/WvBqy.png?s=128&g=1", "display_name": "Joe", "link": "https://stackoverflow.com/users/1486968/joe"}, "edited": false, "score": 4, "creation_date": 1572215723, "post_id": 58583731, "comment_id": 103482112, "body": "@Joe That intermediate class is called <code>Apply</code> in the &quot;semigroupoids&quot; package. <a href=\"http://hackage.haskell.org/package/semigroupoids-5.3.3/docs/Data-Functor-Apply.html#t:Apply\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/semigroupoids-5.3.3/docs/&hellip;</a>"}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 2, "creation_date": 1572287640, "post_id": 58583731, "comment_id": 103505856, "body": "... and the corresponding optic in the <code>lens</code> package is called <a href=\"http://hackage.haskell.org/package/lens-4.18.1/docs/Control-Lens-Traversal.html#t:Traversal1\" rel=\"nofollow noreferrer\"><code>Traversal1</code></a>"}, {"owner": {"reputation": 2845, "user_id": 593934, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/nPK3i.jpg?s=128&g=1", "display_name": "winitzki", "link": "https://stackoverflow.com/users/593934/winitzki"}, "edited": false, "score": 0, "creation_date": 1587020425, "post_id": 58583731, "comment_id": 108345466, "body": "@Carl How can we verify that this <code>type Optional s t a b</code> is indeed the correct representation for that optic, and that all the appropriate laws hold? This seems like a magical trick. Why was it <code>Pointed</code> and not, say, <code>Copointed</code>? For another given optic, how can we guess the correct profunctor representation?"}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "reply_to_user": {"reputation": 2845, "user_id": 593934, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/nPK3i.jpg?s=128&g=1", "display_name": "winitzki", "link": "https://stackoverflow.com/users/593934/winitzki"}, "edited": false, "score": 2, "creation_date": 1587052728, "post_id": 58583731, "comment_id": 108363856, "body": "@winitzki If you write a bunch of van Laarhoven lenses and traversals by hand (very highly recommended - they&#39;re not magic), you eventually get a handle on how the operations correspond to the number of targets present in a data structure. <code>fmap</code> handles a structure with a single target. <code>pure</code> handles a structure with no targets. <code>(&lt;*&gt;)</code> combines substructures that have each handled targets. From this you can observe that something with only <code>fmap</code> and <code>pure</code> will let you handle 0 or 1 targets, but not more than 1. And that&#39;s <code>Pointed</code>."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1587053090, "post_id": 58583731, "comment_id": 108364076, "body": "As for <code>Profunctor</code> optics... Dunno. I&#39;ve never really seen the appeal, so I haven&#39;t written enough of them by hand to see what the blocks are. My impression from the little I have done is that they don&#39;t seem as amenable to piecewise breakdowns. (That impression may be wrong.)"}], "tags": [], "owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "is_accepted": true, "score": 10, "last_activity_date": 1572233733, "last_edit_date": 1572233733, "creation_date": 1572213572, "answer_id": 58583731, "question_id": 58583458, "link": "https://stackoverflow.com/questions/58583458/is-there-a-van-laarhoven-representation-of-optional/58583731#58583731", "title": "Is there a van Laarhoven representation of `Optional`", "body": "<p>There would be a way to represent it if the Functor/Applicative/Monad hierarchy were more fine-grained. In particular:</p>\n\n<pre><code>class Functor f =&gt; Pointed f where\n    pure :: a -&gt; f a\n\ntype Optional s t a b = forall f. Pointed f =&gt; (a -&gt; f b) -&gt; s -&gt; f t\n</code></pre>\n\n<p>Note that the type would probably be named <code>Affine</code> in the lens library if that was neatly in the class hierarchy.</p>\n"}], "owner": {"reputation": 926, "user_id": 1486968, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/WvBqy.png?s=128&g=1", "display_name": "Joe", "link": "https://stackoverflow.com/users/1486968/joe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 720, "favorite_count": 4, "accepted_answer_id": 58583731, "answer_count": 1, "score": 16, "last_activity_date": 1572233733, "creation_date": 1572211178, "last_edit_date": 1572216266, "question_id": 58583458, "link": "https://stackoverflow.com/questions/58583458/is-there-a-van-laarhoven-representation-of-optional", "title": "Is there a van Laarhoven representation of `Optional`", "body": "<p>Many types of optics have a van Laarhoven representation. </p>\n\n<p>For example, a <code>Lens</code> of type <code>Lens s t a b</code>  can be represented as:</p>\n\n<pre><code> Functor f =&gt; (a -&gt; f b) -&gt; s -&gt; f t\n</code></pre>\n\n<p>Similarly a <code>Traversal</code>, can be represented in a similar way, swapping the <code>Functor</code> constraint for <code>Applicative</code>:</p>\n\n<pre><code> Applicative f =&gt; (a -&gt; f b) -&gt; s -&gt; f t\n</code></pre>\n\n<p>Several optics frameworks, such as <a href=\"http://julien-truffaut.github.io/Monocle/\" rel=\"noreferrer\">Monocle</a> and <a href=\"https://arrow-kt.io/docs/optics/optional/\" rel=\"noreferrer\">Arrow</a> define a type called <code>Optional</code>. </p>\n\n<p><a href=\"https://julien-truffaut.github.io/Monocle/optics.html\" rel=\"noreferrer\">In Monocle's Optics heirarchy</a> <code>Optional</code> fits between <code>Lens</code> and <code>Traversal</code></p>\n\n<p>As I understand it: If a <code>Traversal</code> is like a <code>Lens</code> that may have <em>zero to many</em> targets, then an <code>Optional</code> is like a <code>Lens</code> that may have <em>zero to one</em> targets. </p>\n\n<p>In Monocle, <code>Optional</code> is defined as a pair of functions:</p>\n\n<pre><code>getOrModify :: s -&gt; Either t a \nset :: (b, s) -&gt; t\n</code></pre>\n\n<p><a href=\"https://github.com/julien-truffaut/Monocle/blob/master/core/shared/src/main/scala/monocle/Optional.scala\" rel=\"noreferrer\">Comments in the Monocle source code</a> suggest that it's also possible to represent an <code>Optional</code> \"as a weaker <code>PLens</code> and weaker <code>PPrism</code>\"</p>\n\n<p>Is it possible to represent an <code>Optional</code> as a van Laarhoven function? </p>\n"}, {"tags": ["haskell", "nix"], "owner": {"reputation": 2332, "user_id": 615030, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/Yd1uW.png?s=128&g=1", "display_name": "Artyom", "link": "https://stackoverflow.com/users/615030/artyom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 137, "favorite_count": 2, "answer_count": 0, "score": 4, "last_activity_date": 1572255572, "creation_date": 1572207839, "last_edit_date": 1572255572, "question_id": 58583058, "link": "https://stackoverflow.com/questions/58583058/when-building-a-haskell-dependency-with-nix-how-to-avoid-building-executables", "title": "When building a Haskell dependency with Nix, how to avoid building executables?", "body": "<p>In my <code>.nix</code> file I have packages <code>foo</code> and <code>bar</code>, with <code>bar</code> depending on <code>foo</code>:</p>\n\n<pre><code>let\n  haskellPackages = reflex-platform.ghcjs.override {\n    overrides = self: super: {\n      foo =\n        pkgs.haskell.lib.dontCheck\n          (pkgs.haskell.lib.dontHaddock\n             (self.callCabal2nix \"foo\" ./foo { }));\n      bar = self.callCabal2nix \"bar\" ./bar { };\n    };\n  };\n\nin\n  haskellPackages.bar\n</code></pre>\n\n<p>How can I disable building executables contained in <code>foo</code>? I only want to build the library.</p>\n\n<p>I tried <code>overrideCabal</code>, but without luck. This still builds the <code>foo</code> executable:</p>\n\n<pre><code>let\n  haskellPackages = reflex-platform.ghcjs.override {\n    overrides = self: super: {\n      foo =\n        pkgs.haskell.lib.overrideCabal\n          (pkgs.haskell.lib.dontCheck\n             (pkgs.haskell.lib.dontHaddock\n                (self.callCabal2nix \"foo\" ./foo { })));\n          (drv: { isExecutable = false; });\n      bar = self.callCabal2nix \"bar\" ./bar { };\n    };\n  };\n\nin\n  haskellPackages.bar\n</code></pre>\n\n<p>I can reproduce the same problem with GHC instead of GHCJS.</p>\n"}, {"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 6, "creation_date": 1572205495, "post_id": 58582746, "comment_id": 103479896, "body": "No, you simply changed the name of the type <i>variables</i>. As long as you do not rename a variable to another variable (such that there is a name clash), there is no problem."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1572295390, "post_id": 58582746, "comment_id": 103508829, "body": "Depends on whether/how the type variables are bound elsewhere."}], "answers": [{"tags": [], "owner": {"reputation": 2976, "user_id": 7493840, "user_type": "registered", "accept_rate": 79, "profile_image": "https://graph.facebook.com/227486944377608/picture?type=large", "display_name": "Sereja Bogolubov", "link": "https://stackoverflow.com/users/7493840/sereja-bogolubov"}, "is_accepted": false, "score": 16, "last_activity_date": 1572205638, "creation_date": 1572205638, "answer_id": 58582778, "question_id": 58582746, "link": "https://stackoverflow.com/questions/58582746/is-there-a-difference-between-type-signatures-a-b-a-and-c-a-c/58582778#58582778", "title": "Is there a difference between type signatures a -&gt; b -&gt; a and c -&gt; a -&gt; c?", "body": "<p>Nope. Think of <code>a -&gt; b -&gt; a</code> as <code>This Type -&gt; Another Type -&gt; This Type</code>. Then both of them fit given pattern. However, something like <code>a -&gt; b -&gt; c</code> wont fit: <code>This Type -&gt; That Type -&gt; Yet Another Type</code> is (generally) different; except the edge case when <code>c = a</code>, which yields the pattern you're interested in. </p>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 17, "last_activity_date": 1572205663, "creation_date": 1572205663, "answer_id": 58582783, "question_id": 58582746, "link": "https://stackoverflow.com/questions/58582746/is-there-a-difference-between-type-signatures-a-b-a-and-c-a-c/58582783#58582783", "title": "Is there a difference between type signatures a -&gt; b -&gt; a and c -&gt; a -&gt; c?", "body": "<p>There is no difference. Since <code>a</code>, <code>b</code> and <code>c</code> start with a <em>lowercase</em>, these are <em>variables</em>. You can rename variables, and this remains the same, as long as two (or more) variables do not \"<em>clash</em>\".</p>\n\n<p>Such clashes can happen if you rename a variable such that it has the same name as another variable, or when you rename two (or more) variables to the same new name. If you would rename the variable <code>a</code> for example to <code>b</code> in your first code fragment, then we would get <code>b -&gt; b -&gt; b</code>, but that is not the same, since then we enforce that the first and second parameter are of the same type. Whereas in your type signature, we have the freedom to pick two types that can be the same, but that is <em>not</em> necessary.</p>\n"}], "owner": {"reputation": 420, "user_id": 9687872, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Q8Nva.jpg?s=128&g=1", "display_name": "Dreana", "link": "https://stackoverflow.com/users/9687872/dreana"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1624, "favorite_count": 0, "accepted_answer_id": 58582783, "answer_count": 2, "score": 16, "last_activity_date": 1572205663, "creation_date": 1572205389, "question_id": 58582746, "link": "https://stackoverflow.com/questions/58582746/is-there-a-difference-between-type-signatures-a-b-a-and-c-a-c", "title": "Is there a difference between type signatures a -&gt; b -&gt; a and c -&gt; a -&gt; c?", "body": "<p>This question is a theoretical question about Haskell functions which can take arguments of any type. Is there a difference between the way functions with the type signatures of </p>\n\n<pre><code>a -&gt; b -&gt; a \n</code></pre>\n\n<p>and </p>\n\n<pre><code>c -&gt; a -&gt; c \n</code></pre>\n\n<p>are instantiated?\nAny help is appreciated.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1572203787, "post_id": 58582514, "comment_id": 103479438, "body": "These are &quot;interface files&quot;. These store the data that another module that depends on the module needs to know."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1572204898, "post_id": 58582514, "comment_id": 103479750, "body": "The compiler usually processes each .hs source file and produces two binary files: .hi (&quot;Haskell interface&quot;, containing type info, code to inline elsewhere, and other data) and .o (object file with the machine code)."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1572208380, "post_id": 58582514, "comment_id": 103480636, "body": "The hs files should still exist. They shouldn&#39;t be deleted or otherwise &quot;replaced&quot;.  The hi files should simply coexist."}], "owner": {"reputation": 601, "user_id": 1390395, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/e8aeb7905a3e1d1ad211d3fb44f0e2b2?s=128&d=identicon&r=PG", "display_name": "frankie", "link": "https://stackoverflow.com/users/1390395/frankie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 64, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1572203544, "creation_date": 1572203544, "question_id": 58582514, "link": "https://stackoverflow.com/questions/58582514/haskell-hs-files-turning-into-hi-files", "title": "Haskell .hs files turning into .hi files?", "body": "<p>I just installed an application that has a number of .hs Haskell files\n<a href=\"https://github.com/tidalcycles/Tidal/tree/master/src/Sound/Tidal\" rel=\"nofollow noreferrer\">https://github.com/tidalcycles/Tidal/tree/master/src/Sound/Tidal</a></p>\n\n<p>After installation via cabal, all of the .hs files are .hi files. Is this something that cabal does to the files? </p>\n"}, {"tags": ["haskell", "haskell-stack"], "comments": [{"owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "edited": false, "score": 0, "creation_date": 1572220890, "post_id": 58582288, "comment_id": 103482965, "body": "Noting that this was also asked at <a href=\"https://old.reddit.com/r/haskell/comments/dnxpcs/trouble_installing_haskelly/\" rel=\"nofollow noreferrer\">old.reddit.com/r/haskell/comments/dnxpcs/&hellip;</a> (although I think this is okay since Reddit isn&#39;t an SE site)."}], "answers": [{"tags": [], "owner": {"reputation": 5707, "user_id": 344223, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/VT9Cs.gif?s=128&g=1", "display_name": "brianberns", "link": "https://stackoverflow.com/users/344223/brianberns"}, "is_accepted": false, "score": 1, "last_activity_date": 1576252311, "last_edit_date": 1576252311, "creation_date": 1576250888, "answer_id": 59325484, "question_id": 58582288, "link": "https://stackoverflow.com/questions/58582288/error-installing-haskelly-to-use-with-vscode/59325484#59325484", "title": "Error installing haskelly to use with VSCode", "body": "<p>This is a problem installing <code>stack-run</code>, documented here: <a href=\"https://github.com/yamadapc/stack-run/issues/21\" rel=\"nofollow noreferrer\">https://github.com/yamadapc/stack-run/issues/21</a>.</p>\n\n<p>I solved it by adding the following to my <code>stack.yaml</code>:</p>\n\n<pre><code>extra-deps:\n    - url: https://github.com/Magicloud/stack-run/archive/master.zip\n</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 12113661, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3313fdcc3bc3a9d7e961a195fca5793b?s=128&d=identicon&r=PG&f=1", "display_name": "Andreas C", "link": "https://stackoverflow.com/users/12113661/andreas-c"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 238, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1576252311, "creation_date": 1572201952, "question_id": 58582288, "link": "https://stackoverflow.com/questions/58582288/error-installing-haskelly-to-use-with-vscode", "title": "Error installing haskelly to use with VSCode", "body": "<p>I'm trying to install Haskelly so that I can use VSCode to build and debug Haskell. The issue here is that when I try to install intero, Quick Check and stack-run using the following command:</p>\n\n<blockquote>\n  <p>stack install intero QuickCheck stack-run</p>\n</blockquote>\n\n<p>I get the following error:</p>\n\n<blockquote>\n  <p>Error: While constructing the build plan, the following exceptions\n  were encountered:</p>\n  \n  <p>In the dependencies for stack-run-0.1.1.4:\n      conduit-1.3.1.1 from stack configuration does not match >1.1 &amp;&amp; &lt;1.3  (latest matching version is 1.2.13.1)\n      conduit-extra-1.3.4 from stack configuration does not match >=1.1 &amp;&amp; &lt;1.2  (latest matching version is 1.1.17) needed since stack-run is\n  a build target.</p>\n  \n  <p>Some different approaches to resolving this:</p>\n  \n  <ul>\n  <li><p>Set 'allow-newer: true' in C:\\sr\\config.yaml to ignore all version\n  constraints and build anyway.</p></li>\n  <li><p>Recommended action: try adding the following to your extra-deps in\n  C:\\sr\\global-project\\stack.yaml:</p>\n  \n  <ul>\n  <li>conduit-1.2.13.1@sha256:afd4db7fe66ae7af3d418e1a932384a8dee08df2f6299cca80e53ba964ce1228,4371</li>\n  <li>conduit-extra-1.1.17@sha256:dfa0d00dc11a8a4c3fdff15374c378ee34c25a2255b52194aa1ea3c1f1a63fd7,4521</li>\n  </ul></li>\n  </ul>\n  \n  <p>Plan construction failed.</p>\n</blockquote>\n\n<p>Now while it does provide some clues as to what I'm supposed to do, I have no clue what it means to add these things to stack.yaml. I found stack.yaml, and it's just a file that I seemingly can't open or modify. Does anyone know how I can fix this issue?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1572191581, "post_id": 58580971, "comment_id": 103476372, "body": "Can you please show the exact attempt you made?"}, {"owner": {"reputation": 6004, "user_id": 6471538, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/rX1ss.png?s=128&g=1", "display_name": "Robert Columbia", "link": "https://stackoverflow.com/users/6471538/robert-columbia"}, "edited": false, "score": 0, "creation_date": 1572451202, "post_id": 58580971, "comment_id": 103565956, "body": "What do you mean that your attempt &quot;didn&#39;t work&quot;? Did you get a specific error message? Did you get a result other than what you expected? Can you explain?"}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 6, "last_activity_date": 1572192008, "creation_date": 1572192008, "answer_id": 58581019, "question_id": 58580971, "link": "https://stackoverflow.com/questions/58580971/printing-out-each-element-of-list-of-tuples-several-times/58581019#58581019", "title": "Printing out each element of list of tuples several times", "body": "<p>If you have a list of items, you can use <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:map\" rel=\"noreferrer\"><strong><code>map :: (a -&gt; b) -&gt; [a] -&gt; [b]</code></strong></a> to construct a list where the given function is applied to all elements of the given list. We thus here can make use of <code>replicate</code>, like:</p>\n\n<pre><code>map (\\x -&gt; replicate (snd x) (fst x))\n</code></pre>\n\n<p>to obtain a list of items, where for an item <code>('a', 2)</code>, we are thus given <code>\"aa\"</code>. For the sample data, we thus obtain:</p>\n\n<pre><code>Prelude&gt; map (\\x -&gt; replicate (snd x) (fst x)) [('a',2), ('b', 6), ('c', 1)]\n[\"aa\",\"bbbbbb\",\"c\"]\n</code></pre>\n\n<p>This is of course a list of list of elements. We can use <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:concat\" rel=\"noreferrer\"><strong><code>concat :: Foldable f =&gt; f [a] -&gt; [a]</code></strong></a> to concatenate the elements together, or use <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:concatMap\" rel=\"noreferrer\"><strong><code>concatMap :: Foldable f =&gt; (a -&gt; [b]) -&gt; f a -&gt; [b]</code></strong></a> to combine <code>map</code> and <code>concat</code>:</p>\n\n<pre><code>Prelude&gt; concatMap (\\x -&gt; replicate (snd x) (fst x)) [('a',2), ('b', 6), ('c', 1)]\n\"aabbbbbbc\"\n</code></pre>\n\n<p>We can use pattern matching here to avoid using <code>fst</code> and <code>snd</code>:</p>\n\n<pre><code>concatMap (\\<b>(x, y)</b> -&gt; replicate <b>y</b> <b>x</b>)</code></pre>\n\n<p>or we can make use of <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:uncurry\" rel=\"noreferrer\"><strong><code>uncurry :: (a -&gt; b -&gt; c) -&gt; (a, b) -&gt; c</code></strong></a> and <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:flip\" rel=\"noreferrer\"><strong><code>flip :: (a -&gt; b -&gt; c) -&gt; b -&gt; a -&gt; c</code></strong></a> and write the function as:</p>\n\n<pre><code>concatMap (<b>uncurry</b> (<b>flip</b> replicate))</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1201, "user_id": 7506861, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dfa43944dd74a96c82dfd990626da2d5?s=128&d=identicon&r=PG&f=1", "display_name": "Emily", "link": "https://stackoverflow.com/users/7506861/emily"}, "is_accepted": false, "score": 7, "last_activity_date": 1572192150, "creation_date": 1572192150, "answer_id": 58581040, "question_id": 58580971, "link": "https://stackoverflow.com/questions/58580971/printing-out-each-element-of-list-of-tuples-several-times/58581040#58581040", "title": "Printing out each element of list of tuples several times", "body": "<p>This could be done using <a href=\"http://wiki.haskell.org/List_comprehension\" rel=\"noreferrer\">list comprehensions</a> (where <code>xs</code> is your list of tuples):</p>\n\n<pre><code>concat [replicate n x | (x, n) &lt;- xs]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 1, "last_activity_date": 1588142504, "last_edit_date": 1588142504, "creation_date": 1572192464, "answer_id": 58581087, "question_id": 58580971, "link": "https://stackoverflow.com/questions/58580971/printing-out-each-element-of-list-of-tuples-several-times/58581087#58581087", "title": "Printing out each element of list of tuples several times", "body": "<p>Let's start by just making the definition</p>\n\n<pre><code>foo [('a',2), ('b', 6), ('c', 1)] = \"aabbbbbbc\"\n</code></pre>\n\n<p>Is this a correct definition? Yes.</p>\n\n<p>Is there some problem with it? Yes, it is not general enough. It will only accept a very very specific and narrow form of input, and error out on everything else:</p>\n\n<pre><code>&gt; foo [('a',2), ('b', 6), ('c', 1)]\n\"aabbbbbbc\"\nit :: [Char]\n\n&gt; foo [('a',2), ('b', 6), ('c', 2)]\n\"*** Exception: &lt;interactive&gt;:13:5-51: Non-exhaustive patterns in function foo\n</code></pre>\n\n<p>Anything else wrong with that definition? Well, not wrong per se, but it's lacking a <em>type signature</em>. GHCi can infer the type for us:</p>\n\n<pre><code>&gt; :t foo\nfoo :: (Num t, Eq t) =&gt; [(Char, t)] -&gt; [Char]\n</code></pre>\n\n<p>but it seems too general for comfort. We can specialize is e.g. as </p>\n\n<pre><code>foo ::                [(Char, Int)] -&gt; [Char]\n</code></pre>\n\n<p>So, with this type, what can be done about the definition? Starting from the missing case, we add</p>\n\n<pre><code>foo [('a',2), ('b', 6), ('c', 2)] = \"aabbbbbbcc\"\nfoo [('a',2), ('b', 6), ('c', 3)] = \"aabbbbbbccc\"\n</code></pre>\n\n<p>All correct cases. But what about making them more general?</p>\n\n<p>For that, we try re-writing it and trying to see some patterns in it:</p>\n\n<pre><code>foo [('a',2), ('b', 6), ('c', 4)] = \"aabbbbbbcccc\"\n                   = \"aabbbbbb\" ++ \"cccc\"\n                   = \"aabbbbbb\" ++ replicate _ 'c'\n</code></pre>\n\n<p>What is the value to go into that <code>_</code> slot? </p>\n\n<p>When you've answered that, you'll be able to also complete this one:</p>\n\n<pre><code>foo [('a',2), ('b', 6), ('c', n)] = \"aabbbbbbcccc\"\n                   = \"aabbbbbb\" ++ \"cccc\"\n                   = \"aabbbbbb\" ++ replicate _ 'c'\n</code></pre>\n\n<p>and this one:</p>\n\n<pre><code>foo [('a',2), ('b', m), ('c', n)] = \"aabbbbbbcccc\"\n                   = \"aabbbbbb\" ++ \"cccc\"\n                   = \"aa\" ++ replicate _ _ ++ replicate _ 'c'\n</code></pre>\n\n<p>and isn't this the same as </p>\n\n<pre><code>foo ( ('a',2) : [('b', m), ('c', n)] ) = \n                   = replicate _ 'a' ++ foo [('b', m), ('c', n)]\n</code></pre>\n\n<p>or even </p>\n\n<pre><code>foo ( h : t )  \n    | h == ('a',2)\n    , t == [('b', m), ('c', n)] ) \n                   = replicate _ (fst h) ++ foo t\n</code></pre>\n\n<p>&hellip; right?</p>\n\n<p>Could you continue this line of thought to its conclusion? Do you see how the code practically <em>writes itself</em> when we <em>generalize</em> our concrete cases by replacing concrete terms with variables? </p>\n"}, {"tags": [], "owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "is_accepted": false, "score": 1, "last_activity_date": 1572197245, "last_edit_date": 1572197245, "creation_date": 1572194078, "answer_id": 58581309, "question_id": 58580971, "link": "https://stackoverflow.com/questions/58580971/printing-out-each-element-of-list-of-tuples-several-times/58581309#58581309", "title": "Printing out each element of list of tuples several times", "body": "<p>This is basically a folding job.</p>\n\n<pre><code>Prelude&gt; foldr (\\(c,n) r -&gt; replicate n c ++ r) \"\" [('a',2), ('b', 6), ('c', 1)]\n\"aabbbbbbc\"\n</code></pre>\n\n<p>I use <code>foldr</code> to make concatenations to the head of the accumulator <code>r</code> which is more efficient.</p>\n\n<p>Or as for a monadic approach you may write like</p>\n\n<pre><code>Prelude&gt; let decode = (uncurry (flip replicate) =&lt;&lt;)\nPrelude&gt; decode [('a',2), ('b', 6), ('c', 1)]\nPrelude&gt; \"aabbbbbbc\"\n</code></pre>\n"}], "owner": {"reputation": 39, "user_id": 12113339, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-7yaVfZGgIxc/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdRvHOiKuXEKu7SC_tpk5h4Hn809A/photo.jpg?sz=128", "display_name": "Western56", "link": "https://stackoverflow.com/users/12113339/western56"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 126, "favorite_count": 0, "closed_date": 1572451158, "answer_count": 4, "score": 3, "last_activity_date": 1588142504, "creation_date": 1572191532, "last_edit_date": 1572451194, "question_id": 58580971, "link": "https://stackoverflow.com/questions/58580971/printing-out-each-element-of-list-of-tuples-several-times", "closed_reason": "Not suitable for this site", "title": "Printing out each element of list of tuples several times", "body": "<p>Given a list of tuples like this <code>[('a',2), ('b', 6), ('c', 1)]</code> I'm trying to print out the char each time in a string.</p>\n\n<p>I'm looking for an output like this <code>\"aabbbbbbc\"</code> in a string on one  line.</p>\n\n<p>I'm trying to do this using <code>replicate</code>, for example <code>replicate (snd x) (fst x)</code> but this didn't work.</p>\n"}, {"tags": ["haskell", "concurrency"], "answers": [{"comments": [{"owner": {"reputation": 227, "user_id": 1973301, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/ab75998ab022d1de6d0075b79d942d73?s=128&d=identicon&r=PG", "display_name": "somebody", "link": "https://stackoverflow.com/users/1973301/somebody"}, "edited": false, "score": 0, "creation_date": 1574151182, "post_id": 58918120, "comment_id": 104118639, "body": "Just a basic question: Why is <code>unsafeDupablePerformIO (atomically $ writeTVar t &quot;bla&quot;)</code> faster than just running <code>atomically $ writeTVar t &quot;bla&quot;</code>?"}, {"owner": {"reputation": 1894, "user_id": 412417, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/880a205c1958574d83803d5e30da95ca?s=128&d=identicon&r=PG&f=1", "display_name": "MCH", "link": "https://stackoverflow.com/users/412417/mch"}, "reply_to_user": {"reputation": 227, "user_id": 1973301, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/ab75998ab022d1de6d0075b79d942d73?s=128&d=identicon&r=PG", "display_name": "somebody", "link": "https://stackoverflow.com/users/1973301/somebody"}, "edited": false, "score": 0, "creation_date": 1574158459, "post_id": 58918120, "comment_id": 104122460, "body": "It has less compiler guarantees than monad IO or even unsafePerformIO and can be dangerous in a multi threaded environment especially if you are writing, reading would be a little less dangerous. Unfortunately I don&#39;t know enough about the GHC internals to give a more in depth answer but there are a few details here: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-IO-Unsafe.html\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/base-4.12.0.0/docs/&hellip;</a>"}, {"owner": {"reputation": 1894, "user_id": 412417, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/880a205c1958574d83803d5e30da95ca?s=128&d=identicon&r=PG&f=1", "display_name": "MCH", "link": "https://stackoverflow.com/users/412417/mch"}, "reply_to_user": {"reputation": 227, "user_id": 1973301, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/ab75998ab022d1de6d0075b79d942d73?s=128&d=identicon&r=PG", "display_name": "somebody", "link": "https://stackoverflow.com/users/1973301/somebody"}, "edited": false, "score": 0, "creation_date": 1574158692, "post_id": 58918120, "comment_id": 104122615, "body": "I would be curious to hear more about the actual problem. Maybe there is another way to design it so you do not have the end bottleneck of writing every thing sequentially. For example if instead of sequentially updating a list of tvars you instead had a vector of tvars, slice it (O(1) operation) into a few smaller pieces, fork for each sub vector and update them separately it would probably run faster."}], "tags": [], "owner": {"reputation": 1894, "user_id": 412417, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/880a205c1958574d83803d5e30da95ca?s=128&d=identicon&r=PG&f=1", "display_name": "MCH", "link": "https://stackoverflow.com/users/412417/mch"}, "is_accepted": false, "score": 1, "last_activity_date": 1574091449, "creation_date": 1574091449, "answer_id": 58918120, "question_id": 58580756, "link": "https://stackoverflow.com/questions/58580756/unsafe-version-of-writetvar/58918120#58918120", "title": "Unsafe version of writeTVar", "body": "<p>Looking around I do not see any exposed primitives.</p>\n\n<p>The documentation says you can use <code>unsafePerformIO</code> with <code>atomically</code>, but warns that it may subvert some of the guarantees that it offers: <a href=\"https://hackage.haskell.org/package/stm-2.5.0.0/docs/Control-Monad-STM.html#v:atomically\" rel=\"nofollow noreferrer\">Control.Monad.STM.atomically</a>. Apparently <code>unsafeDupablePerformIO</code> has better performance than <code>unsafePerformIO</code>, but more caveats. If it is performance critical it is worth benchmarking to see if these offer any performance advantages. </p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>import Control.Concurrent.STM.TVar\nimport Control.Monad.STM\nimport Control.Monad\nimport System.IO.Unsafe\n\nt1 &lt;- newTVarIO \"Hello\"\nt2 &lt;- newTVarIO \"Goodbye\"\nunsafeDupablePerformIO $ sequence $ (\\t -&gt; atomically $ writeTVar t \"Hola\") &lt;$&gt;  [t1,t2] \nunsafeDupablePerformIO $ sequence $ (putStrLn &lt;=&lt; readTVarIO) &lt;$&gt; [t1,t2]\n</code></pre>\n"}], "owner": {"reputation": 227, "user_id": 1973301, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/ab75998ab022d1de6d0075b79d942d73?s=128&d=identicon&r=PG", "display_name": "somebody", "link": "https://stackoverflow.com/users/1973301/somebody"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1574091449, "creation_date": 1572189968, "last_edit_date": 1572191280, "question_id": 58580756, "link": "https://stackoverflow.com/questions/58580756/unsafe-version-of-writetvar", "title": "Unsafe version of writeTVar", "body": "<p>I'm using a list of <code>TVar</code>s that are accessed by multiple threads. \nHowever, there is one performance-critical section in my code that reads as follows:</p>\n\n<pre><code> sequence [ atomically $ writeTVar tvar1 someValue | tvar1 &lt;- listOfTVars ]\n</code></pre>\n\n<p>It is guaranteed that, at the time when this code is reached, no other thread will be accessing <em>any</em> of the <code>TVar</code>s in <code>listOfTVars</code> until <code>sequence</code> has completed, neither by reading nor writing.</p>\n\n<p>Does GHC expose any primitives that would allow me to \"unsafely\" perform these value updates? <strong>My goal</strong> would be to do this faster without going through the STM-overhead of committing a transaction for each of them. In other words, I don't need the atomicity that STM provides for <code>writeTVar</code>; Instead, I would just need a fast way to update the values stored in the <code>TVar</code>s. </p>\n"}, {"tags": ["list", "haskell", "nested"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1572177729, "post_id": 58579225, "comment_id": 103473238, "body": "have you done any research on this at all? There is a standard, basic library function which does exactly this."}, {"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 0, "creation_date": 1572179674, "post_id": 58579225, "comment_id": 103473711, "body": "Lists are monads so you may just bind them like <code>[[1],[2],[3]] &gt;&gt;= id</code> to achieve your goal."}, {"owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "reply_to_user": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 4, "creation_date": 1572181335, "post_id": 58579225, "comment_id": 103474046, "body": "@Redu why overcomplicate it?"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "edited": false, "score": 1, "creation_date": 1572182539, "post_id": 58579225, "comment_id": 103474274, "body": "well if we&#39;re introducing monads (which I agree with @JosephSible is overkill here) then <code>join</code> is the easiest way (indeed the very definition is <code>join x = x &gt;&gt;= id</code>)."}, {"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "reply_to_user": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "edited": false, "score": 0, "creation_date": 1572182992, "post_id": 58579225, "comment_id": 103474365, "body": "@Joseph Sible This is Haskell 101 level code. Besides if your flow is right to left this would be a much better alternative than using <code>concat</code> or <code>join</code> on the left of the whole code with <code>$</code> sign. Also.. <code>join</code> is fine but i wouldn&#39;t advise using <code>concat</code> since i think it is a misnomer. To me <code>concat</code> should be <code>(++)</code> operator."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 3, "creation_date": 1572183453, "post_id": 58579225, "comment_id": 103474456, "body": "<code>concat</code>&#39;s name is fine, it is about concatenation. <code>(++)</code> is the binary version, while <code>concat</code> is the list version - indeed <code>concat == foldr (++) []</code>. Same thing as <code>max</code> vs <code>maximum</code>, or <code>(||)</code> vs <code>any</code>. Mind you, the comments to this question is a bit of a silly place to have this discussion."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1572184245, "post_id": 58579225, "comment_id": 103474608, "body": "And just to bring this full-circle, if the <code>Monad</code> typeclass defined <code>join</code> instead of <code>&gt;&gt;=</code>, the <code>[]</code> instance would almost certainly define <code>join = concat</code>."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 5, "last_activity_date": 1572177917, "creation_date": 1572177917, "answer_id": 58579269, "question_id": 58579225, "link": "https://stackoverflow.com/questions/58579225/how-to-remove-nested-list-of-lists/58579269#58579269", "title": "How to remove nested list (of lists)?", "body": "<p>You are likely looking for the <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:concat\" rel=\"noreferrer\"><strong><code>concat :: Foldable f =&gt; f [a] -&gt; [a]</code></strong></a> function. This can take a <code>Foldable</code> type of <code>[a]</code>s, and return an <code>[a]</code> as a result. Since a list is a <code>Foldable</code> type, that thus means that <code>concat</code> can be \"<em>specialized</em>\" to <code>[[a]] -&gt; [a]</code>. It will thus concatenate the sublists together into a list.</p>\n\n<p>For example:</p>\n\n<pre><code>Prelude&gt; concat [[1],[2],[3]]\n[1,2,3]\n</code></pre>\n\n<p>This can work on other <code>Foldable</code> types as well, like <code>Maybe</code>, <code>Tree</code>, etc.</p>\n"}], "owner": {"reputation": 11, "user_id": 8844620, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-7FdadE5m0GI/AAAAAAAAAAI/AAAAAAAAADM/3UjzmNaNOiM/photo.jpg?sz=128", "display_name": "Donatoris", "link": "https://stackoverflow.com/users/8844620/donatoris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 118, "favorite_count": 0, "accepted_answer_id": 58579269, "answer_count": 1, "score": 1, "last_activity_date": 1572178726, "creation_date": 1572177631, "last_edit_date": 1572178726, "question_id": 58579225, "link": "https://stackoverflow.com/questions/58579225/how-to-remove-nested-list-of-lists", "title": "How to remove nested list (of lists)?", "body": "<p>I would like to remove nested list from a list of lists. I'm pretty new to Haskell and found this difficult. </p>\n\n<p>For example</p>\n\n<pre><code>[[a],[b],[c]] --&gt; [a,b,c] \n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 3, "creation_date": 1572166830, "post_id": 58577809, "comment_id": 103471003, "body": "Use a <a href=\"http://hackage.haskell.org/package/containers-0.6.2.1/docs/Data-Map-Strict.html\" rel=\"nofollow noreferrer\"><code>Data.Map</code></a> to store your symbols where names as key and charcode as value. Then <code>elems</code> function should give you the <code>cohomology_algebra</code> list."}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 1, "last_activity_date": 1572166478, "creation_date": 1572166478, "answer_id": 58577869, "question_id": 58577809, "link": "https://stackoverflow.com/questions/58577809/haskell-initialise-a-list-with-symbols/58577869#58577869", "title": "Haskell: initialise a list with symbols?", "body": "<p>Not a perfect solution, but you could use</p>\n\n<pre><code>let cohomology_algebra@[lambda, bol, xi] = [\"\\x03BB\", \"\\x926\", \"\\x1D539\"]\n</code></pre>\n\n<p>This will trigger a  <em>runtime</em> error if the two lists above have different length (at the point where the names are demanded).</p>\n\n<p>It's not optimal, since this check should be at compile time instead. Further, in this code style we have to separate the identifier form its value too much, making it possible to swap some definitions by mistake.</p>\n"}], "owner": {"reputation": 463, "user_id": 3203476, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2c7935bf89df5baff4e39ea43be4ce4e?s=128&d=identicon&r=PG&f=1", "display_name": "user3203476", "link": "https://stackoverflow.com/users/3203476/user3203476"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 58, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1572176907, "creation_date": 1572165941, "last_edit_date": 1572176907, "question_id": 58577809, "link": "https://stackoverflow.com/questions/58577809/haskell-initialise-a-list-with-symbols", "title": "Haskell: initialise a list with symbols?", "body": "<p>In Haskell, is there a way of initialising a list and declaring symbols in that list at the same time?</p>\n\n<p>Currently I do this:</p>\n\n<pre><code>import Data.List\nmain = do\n  let lambda = \"\\x03BB\"\n      xi = \"\\x926\"\n      bol = \"\\x1D539\"\n      cohomology_algebra = [ lambda, bol, xi]\n  putStrLn $ xi\n  putStrLn $ show cohomology_algebra\n</code></pre>\n\n<p>However I have a long list of symbols and I worry that i forget to put them all in the list (it has happened)</p>\n\n<p>Ideally I would do something like:</p>\n\n<pre><code>main = do\n  let cohomology_algebra = [ lambda = \"\\x03BB\", bol = \"\\x1D539\", xi= \"\\x926\"] -- does not compile\n  putStrLn $ show cohomology_algebra\n</code></pre>\n\n<p>Is there a way around this?</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 151, "user_id": 11942834, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/70f181df0083ec8a2bbf29f470deec50?s=128&d=identicon&r=PG&f=1", "display_name": "elikoga", "link": "https://stackoverflow.com/users/11942834/elikoga"}, "is_accepted": false, "score": 1, "last_activity_date": 1572132955, "creation_date": 1572132955, "answer_id": 58575528, "question_id": 58575385, "link": "https://stackoverflow.com/questions/58575385/recursive-fixpoint-function-in-haskell/58575528#58575528", "title": "Recursive Fixpoint function in Haskell", "body": "<p>Check the types:</p>\n\n<pre><code>x :: Int\nfixpointL f (f x) :: [Int]\n(++) :: [a] -&gt; [a] -&gt; [a]\n</code></pre>\n\n<pre><code>x ++ fixpointL f (f x) :: ??????????\n</code></pre>\n\n<pre><code>[????] :: ?????\n</code></pre>\n\n<p>The line should be <code>x : fixpointL f (f x)</code></p>\n\n<p>Keep in mind I haven't tested it yet, could you post a function you'd like to test?</p>\n"}, {"tags": [], "owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "is_accepted": true, "score": 5, "last_activity_date": 1572132965, "creation_date": 1572132965, "answer_id": 58575532, "question_id": 58575385, "link": "https://stackoverflow.com/questions/58575385/recursive-fixpoint-function-in-haskell/58575532#58575532", "title": "Recursive Fixpoint function in Haskell", "body": "<p>You didn't share what exactly wasn't working - Haskell's (or rather GHC's) compile-time errors can sometimes look a little impenetrable, but are always full of information if you know how to interpret them. Here the errors are:</p>\n\n<pre><code>&lt;interactive&gt;:4:30: error:\n    * Couldn't match expected type `[Int]' with actual type `Int'\n    * In the first argument of `(++)', namely `x'\n      In the expression: x ++ fixpointL f (f x)\n      In the expression: [x ++ fixpointL f (f x)]\n\n&lt;interactive&gt;:4:30: error:\n    * Couldn't match expected type `Int' with actual type `[Int]'\n    * In the expression: x ++ fixpointL f (f x)\n      In the expression: [x ++ fixpointL f (f x)]\n      In an equation for `fixpointL':\n          fixpointL f x\n            | x == (f x) = [x]\n            | otherwise = [x ++ fixpointL f (f x)]\n</code></pre>\n\n<p>As you can see, there are two different errors to do with type mismatches - but they're in fact closely related. Both are quite clear as to exactly what was wrong.</p>\n\n<p>In the first one, it's complaining that the <code>x</code> in <code>x ++ fixpointL f (f x)</code> was supposed to be a <code>[Int]</code> (list of <code>Int</code>s), but was in fact an <code>Int</code>. This makes sense - the <code>x</code> is the second argument given to the function, which the type signature proclaims to be an <code>Int</code>. But you're trying to apply the <code>(++)</code> operator to it, and this operator has type:</p>\n\n<pre><code>Prelude&gt; :t (++)\n(++) :: [a] -&gt; [a] -&gt; [a]\n</code></pre>\n\n<ul>\n<li>that is, it takes two lists (which can hold any element), and returns another list of the same type. An <code>Int</code> certainly isn't a list, so it's no wonder that GHC can't make sense of this.</li>\n</ul>\n\n<p>As for the second error - it's telling you that the expression <code>x ++ fixpointL f (f x)</code> was expected to be an <code>Int</code> but is actually a list (<code>[Int]</code>). The latter is because it's essentially pretending that you'll fix the first error and make <code>x</code> into the <code>[Int]</code> it's expecting - then that expression <code>x ++ fixpointL f (f x)</code> will indeed be a list of <code>Int</code>s (that is, a <code>[Int]</code>). But you've enclosed it in square brackets:</p>\n\n<pre><code>[x ++ fixpointL f (f x)]\n</code></pre>\n\n<p>which means a list containing only one element, that element being <code>x ++ fixpointL f (f x)</code>, which as I've just explained is currently assumed to be of type <code>[Int]</code>. But since this is the return value of your function, and you've declared the return type to be <code>[Int]</code>, that means that the contents of the <code>[...]</code> must be zero or more values (in this case one) of type <code>Int</code>. So that explains the other type mismatch.</p>\n\n<p>How can we fix them? It seems that you want to take the output of <code>fixpointL f (f x)</code> - which we're assuming to be a list of <code>Int</code>s (your type signature says it is, so this is what GHC has to assume), and append the starting value, <code>x</code>, to the front of it. The correct way to write this, assuming you want to use the <code>(++)</code> operator, is like this:</p>\n\n<pre><code>[x] ++ fixPointL f (f x)\n</code></pre>\n\n<p>this takes the singleton list containing only <code>x</code>, and the result of the recursive call, and puts them together in one list. This typechecks, compiles, and works as presumably intended:</p>\n\n<pre><code>Prelude&gt; fixpointL (^2) 1\n[1]\nPrelude&gt; fixpointL (*2) 1\n[1,2,4,8,16,32,64,128,256,512,...]\n</code></pre>\n\n<p>(Obviously in that second example I killed it as soon as I could, the actual output before I could was much longer but you get the idea.)</p>\n\n<p>One final way you could improve the function is to use the \"cons\" operator <code>(:)</code>, whose purpose is to add an element to the start of the list, without needing to construct a singleton list first. Since Haskell's lists are simple linked lists where each element contains a pointer to the next, this is always an efficient operation (as opposed to appending items to the end, which takes time proportional to the length of the list). While the performance difference here is miniscule, it's still considered much more idiomatic. So here is the working, idiomatic, version:</p>\n\n<pre><code>fixpointL :: (Int -&gt; Int) -&gt; Int -&gt; [Int]\nfixpointL f x | x == (f x) = [x]\n              | otherwise = x : fixpointL f (f x)\n</code></pre>\n"}], "owner": {"reputation": 422, "user_id": 5000759, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/414464cba2bb1dad8bb77798b6f04d6f?s=128&d=identicon&r=PG&f=1", "display_name": "Scott Myers", "link": "https://stackoverflow.com/users/5000759/scott-myers"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 84, "favorite_count": 0, "accepted_answer_id": 58575532, "answer_count": 2, "score": 1, "last_activity_date": 1572132965, "creation_date": 1572131169, "question_id": 58575385, "link": "https://stackoverflow.com/questions/58575385/recursive-fixpoint-function-in-haskell", "title": "Recursive Fixpoint function in Haskell", "body": "<p>I'm trying to create a function that finds the fixpoint of a function <code>f</code> (the case in which <code>x = f x</code>) while maintaining a list of the values recursive calls. I'm having trouble with the part of appending the recursive call to the previous list. Here's my code so far -- Thanks!</p>\n\n<pre><code>fixpointL :: (Int -&gt; Int) -&gt; Int -&gt; [Int]\nfixpointL f x | x == (f x) = [x]\n              | otherwise = [x ++ fixpointL f (f x)]\n</code></pre>\n"}, {"tags": ["haskell", "uninstallation", "haskell-stack"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1572129513, "post_id": 58575205, "comment_id": 103466571, "body": "No, deleting the binary won&#39;t reverse all the effects that <code>stack install</code> had. And unfortunately, as far as I know, neither stack nor cabal has a clean story for uninstalling."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 1, "creation_date": 1572131378, "post_id": 58575205, "comment_id": 103466812, "body": "<code>stack</code> doesn\u2019t contain a command for uninstallation. See <a href=\"https://github.com/commercialhaskell/stack/issues/361\" rel=\"nofollow noreferrer\">github.com/commercialhaskell/stack/issues/361</a> for more details about why this is the case. Also see <a href=\"https://stackoverflow.com/questions/38636436/how-to-uninstall-a-haskell-package-installed-with-stack\" title=\"how to uninstall a haskell package installed with stack\">stackoverflow.com/questions/38636436/&hellip;</a> for a manual way to remove a package, for if you really really want to."}, {"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 0, "creation_date": 1572180746, "post_id": 58575205, "comment_id": 103473942, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/38636436/how-to-uninstall-a-haskell-package-installed-with-stack\">How to uninstall a Haskell package installed with stack?</a>"}], "owner": {"reputation": 79, "user_id": 11972131, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-ftpuGrBsu5M/AAAAAAAAAAI/AAAAAAAAAAA/AAnnY7rDLImau73Ng1duuAS9ooewP7mmJw/mo/photo.jpg?sz=128", "display_name": "Lucas Cruz dos Reis", "link": "https://stackoverflow.com/users/11972131/lucas-cruz-dos-reis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 436, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1583634896, "creation_date": 1572128863, "last_edit_date": 1583634896, "question_id": 58575205, "link": "https://stackoverflow.com/questions/58575205/how-to-uninstall-a-stack-package", "title": "How To uninstall a stack package", "body": "<p>I installed yesod via</p>\n\n<blockquote>\n  <p>stack install yesod-bin</p>\n</blockquote>\n\n<p>And it installed it on my $HOME/.local/bin directory, I'm trying to uninstall it over stack uninstall yesod-bin, but I'm not being successful, wonder if I just delete it, it'll be enough to getting it off my system.</p>\n"}, {"tags": ["haskell", "applicative", "some-and-many", "alternative-functor"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 3, "creation_date": 1572126626, "post_id": 58574793, "comment_id": 103466031, "body": "<code>some</code> and <code>many</code> are a little strange and I don&#39;t really have experience using them, but they are recursively defined in terms of each other, and in a way that basically doesn&#39;t work at all for the List (<code>[]</code>) instance of <code>Alternative</code>, in which <code>&lt;|&gt;</code> is simply list concatenation. I believe they&#39;re most commonly used for parsers, in which <code>&lt;|&gt;</code> instead models the concept of choice between alternatives. (Although I see you&#39;ve got Attoparsec loaded, you&#39;ve chosen to use <code>some</code> on a list rather than on a parser.)"}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1572127409, "post_id": 58574793, "comment_id": 103466195, "body": "I am reading the book pratical haskell and there is an exercise about <code>Parser</code>. It uses the <code>some</code> function."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 3, "creation_date": 1572127713, "post_id": 58574793, "comment_id": 103466266, "body": "As I said, parsers do use <code>some</code> and <code>many</code> (not that I&#39;ve personally yet explored them in any detail). But in your example, you don&#39;t have a parser, you have a list. As far as I can tell, <code>some</code> and <code>many</code> simply don&#39;t work on lists - they will just loop indefinitely."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1592412507, "post_id": 58574793, "comment_id": 110418896, "body": "<a href=\"https://stackoverflow.com/q/7671009/849891\">related question</a>."}], "answers": [{"comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1572186681, "post_id": 58580244, "comment_id": 103475223, "body": "This isn&#39;t <i>quite</i> right; as it doesn&#39;t address the notion of &quot;failure&quot; that <code>&lt;|&gt;</code> assumes which can allow it to move on to its second argument. Compare <code>some Nothing</code> which evaluates to <code>Nothing</code> with <code>some (Just 3)</code> which likewise goes into an infinite loop."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 0, "last_activity_date": 1572186234, "creation_date": 1572186234, "answer_id": 58580244, "question_id": 58574793, "link": "https://stackoverflow.com/questions/58574793/how-to-use-the-function-some/58580244#58580244", "title": "How to use the function `some`?", "body": "<p>Consider what happens when you try to expand <code>some [1]</code>:</p>\n\n<pre><code>some [3443] == some_v\n            == liftA2 (:) [3443]  many_v  -- definition of some_v\n            == [x:y | x &lt;- [3443], y &lt;- many_v]  -- definition of liftA2\n            == [x:y | x &lt;- [3443], y &lt;- some_v ++ pure []] -- definition of many_v\n</code></pre>\n\n<p>Here's I've immediately replaced <code>&lt;|&gt;</code> with <code>(++)</code>. Because <code>(++)</code> is strict in its first argument, you have to evaluate <code>some_v</code> before proceeding, but that gets us into an infinite loop.</p>\n\n<hr>\n\n<p><code>Alternative</code> is described as a monoid for applicative functors. If I understand correctly, <code>some xs</code> would be the infinite list of non-empty lists you could create by taking one element from <code>xs</code> at a time.</p>\n\n<pre><code>some [3443] == [[3443], [3443, 3443], [3443, 3443, 3443], ...]\n</code></pre>\n\n<p>and <code>many xs</code> would be the infinite list of (possibly empty) lists (essentially, just <code>[]:some xs</code>.) Because of the strictness of <code>(++)</code>, though, the result is not computed lazily, so you never actually terminate.</p>\n"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 76, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1613784885, "creation_date": 1572124500, "last_edit_date": 1613784885, "question_id": 58574793, "link": "https://stackoverflow.com/questions/58574793/how-to-use-the-function-some", "title": "How to use the function `some`?", "body": "<p>I would like to use the <code>some</code> function from <code>Alternative</code> <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.Base.html#some\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.Base.html#some</a>. </p>\n\n<p>I've tried: </p>\n\n<pre><code>*MyParser Data.Attoparsec.Text Control.Applicative Data.Text&gt; some [3443]\n\n\newrewrew\newrwwwwww545\n43535\n435\n\n^CInterrupted. \n</code></pre>\n\n<p>As you can see, I interrupted the input. How can I use the <code>some</code> function?</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 422, "user_id": 5000759, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/414464cba2bb1dad8bb77798b6f04d6f?s=128&d=identicon&r=PG&f=1", "display_name": "Scott Myers", "link": "https://stackoverflow.com/users/5000759/scott-myers"}, "edited": false, "score": 0, "creation_date": 1572124510, "post_id": 58574694, "comment_id": 103465649, "body": "What would that look like, something like <code>assoc _[] = def</code>   ?"}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "reply_to_user": {"reputation": 422, "user_id": 5000759, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/414464cba2bb1dad8bb77798b6f04d6f?s=128&d=identicon&r=PG&f=1", "display_name": "Scott Myers", "link": "https://stackoverflow.com/users/5000759/scott-myers"}, "edited": false, "score": 0, "creation_date": 1572126632, "post_id": 58574694, "comment_id": 103466033, "body": "That can&#39;t be right, because your function has three arguments, not two. But you&#39;re close."}], "tags": [], "owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "is_accepted": true, "score": 4, "last_activity_date": 1572124056, "last_edit_date": 1572124056, "creation_date": 1572123690, "answer_id": 58574694, "question_id": 58574669, "link": "https://stackoverflow.com/questions/58574669/recursive-paired-list-search-in-haskell/58574694#58574694", "title": "Recursive Paired List Search in Haskell", "body": "<p>You are missing an <code>=</code> after your <code>otherwise</code>. </p>\n\n<p>As for the second part, you will need a base case to handle the empty list.</p>\n"}, {"tags": [], "owner": {"reputation": 14543, "user_id": 235908, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/rTstt.jpg?s=128&g=1", "display_name": "Simon Shine", "link": "https://stackoverflow.com/users/235908/simon-shine"}, "is_accepted": false, "score": 1, "last_activity_date": 1572124638, "creation_date": 1572124638, "answer_id": 58574816, "question_id": 58574669, "link": "https://stackoverflow.com/questions/58574669/recursive-paired-list-search-in-haskell/58574816#58574816", "title": "Recursive Paired List Search in Haskell", "body": "<p>One way to construct this function using the standard library is via <a href=\"http://hackage.haskell.org/package/base/docs/Data-List.html#v:lookup\" rel=\"nofollow noreferrer\"><code>Data.List.lookup</code></a>. Since what your function does is perform a lookup, but provide a default if not found, I might call it <code>lookupWithDefault</code>:</p>\n\n<pre><code>import Data.Maybe (fromMaybe)\n\nlookupWithDefault :: Eq a =&gt; b -&gt; a -&gt; [(a, b)] -&gt; b\nlookupWithDefault def key pairs = fromMaybe def (lookup key pairs)\n</code></pre>\n\n<p>If, however, you're practicing recursive functions, the missing base case that amalloy speaks of is:</p>\n\n<pre><code>assoc :: Int -&gt; String -&gt; [(String, Int)] -&gt; Int\nassoc def _key [] = undefined -- here\nassoc def key ((k,v) : ps)\n  | key == k = v\n  | otherwise = assoc def key ps\n</code></pre>\n"}], "owner": {"reputation": 422, "user_id": 5000759, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/414464cba2bb1dad8bb77798b6f04d6f?s=128&d=identicon&r=PG&f=1", "display_name": "Scott Myers", "link": "https://stackoverflow.com/users/5000759/scott-myers"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 109, "favorite_count": 0, "accepted_answer_id": 58574694, "answer_count": 2, "score": 0, "last_activity_date": 1572124638, "creation_date": 1572123503, "question_id": 58574669, "link": "https://stackoverflow.com/questions/58574669/recursive-paired-list-search-in-haskell", "title": "Recursive Paired List Search in Haskell", "body": "<p>I'm trying to create a function that recursively searches a list of key - value pairs for a given key, and returns the value. If the list doesn't contain the given key, it is to return a given integer value 'def'. I haven't added the second part yet, but the beginning of my function is throwing a parse error, and I'm not sure why. Also any tips as to how to implement the second part of the function would be much appreciated!\nHere's my function: </p>\n\n<pre><code>assoc :: Int -&gt; String -&gt; [(String, Int)] -&gt; Int\nassoc def key ((k,v) : ps)\n  | key == k = v\n  | otherwise assoc def key ps\n\n</code></pre>\n"}, {"tags": ["haskell", "matrix", "increment"], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 10620131, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf5591e384754e09eef73176193b3680?s=128&d=identicon&r=PG&f=1", "display_name": "netugi", "link": "https://stackoverflow.com/users/10620131/netugi"}, "edited": false, "score": 0, "creation_date": 1572127883, "post_id": 58574861, "comment_id": 103466303, "body": "Thanks so much! Though I wasn&#39;t able to use the {-# extension #-} format in my code for some reason, so I had to use :set -XDeriveTraversable."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 13, "user_id": 10620131, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf5591e384754e09eef73176193b3680?s=128&d=identicon&r=PG&f=1", "display_name": "netugi", "link": "https://stackoverflow.com/users/10620131/netugi"}, "edited": false, "score": 0, "creation_date": 1572127944, "post_id": 58574861, "comment_id": 103466314, "body": "@netugi You need to put it before the <code>module ... where</code> line."}, {"owner": {"reputation": 13, "user_id": 10620131, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf5591e384754e09eef73176193b3680?s=128&d=identicon&r=PG&f=1", "display_name": "netugi", "link": "https://stackoverflow.com/users/10620131/netugi"}, "edited": false, "score": 0, "creation_date": 1572129354, "post_id": 58574861, "comment_id": 103466542, "body": "Thank you. I just want you to know I did give your exercise a go for a little bit, but I didn&#39;t wanna spend too much time on it at the moment since this is for a big university assignment due in a few days. I&#39;ll give it another go if I have the free time after that. I do appreciate the challenge, it helped with me understand how the code works better."}], "tags": [], "owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "is_accepted": true, "score": 1, "last_activity_date": 1572128433, "last_edit_date": 1572128433, "creation_date": 1572125214, "answer_id": 58574861, "question_id": 58574605, "link": "https://stackoverflow.com/questions/58574605/haskell-assigning-unique-char-to-matrix-values-if-x-0/58574861#58574861", "title": "Haskell: Assigning unique char to matrix values if x &gt; 0", "body": "<p>Your problem is an instance of an ancient art: labelling of various structures with a stream of\nlabels. It dates back at least to <a href=\"https://www.cs.tufts.edu/~nr/cs257/archive/chris-okasaki/breadth-first.pdf\" rel=\"nofollow noreferrer\">Chris Okasaki</a>, and my favourite treatment is by <a href=\"http://www.cs.ox.ac.uk/jeremy.gibbons/publications/uitbaf.pdf\" rel=\"nofollow noreferrer\">Jeremy\nGibbons</a>.</p>\n\n<p>As you can see from these two examples, there is some variety to the way a structure may be\nlabelled. But in this present case, I suppose the most straightforward way will do. And in Haskell\nit would be really short. Let us dive in.</p>\n\n<h2>The recipe is this:</h2>\n\n<ul>\n<li>Define a polymorphic type for your matrices. It must be such that a matrix of numbers and a\nmatrix of characters are both rightful members.</li>\n<li>Provide an instance of <code>Traversable</code> class. It may in many cases be derived automagically.</li>\n<li>Pick a monad to your liking. One simple choice is <code>State</code>. <em>(Actually, that is the only choice I\ncan think of.)</em></li>\n<li>Create an <em>action</em> in this monad that takes a number to a character.</li>\n<li>Traverse a matrix with this action.</li>\n</ul>\n\n<h2>Let's cook!</h2>\n\n<ul>\n<li><p>A type may be as simple as this:</p>\n\n<pre><code>newtype Matrix a = Matrix [[a]] deriving Show\n</code></pre>\n\n<p>It is entirely possible that the inner lists will be of unequal length \u2014 this type does not\nprotect us from making a <em>\"ragged\"</em> matrix. This is poor design. But I am going to skim over\nit for now. Haskell provides an <a href=\"https://www.reddit.com/r/haskell/comments/dm13dn/how_far_is_haskell_as_used_in_production_from/\" rel=\"nofollow noreferrer\">endless depth</a> for perfection. This type is <em>good enough</em> for\nour needs here.</p>\n\n<p>We can immediately define an example of a matrix:</p>\n\n<pre><code>example :: Matrix Int\nexample = Matrix [[0,2,1],[2,2,0],[0,0,2]]\n</code></pre></li>\n<li><p>How hard is it to define a <code>Traversable</code>? 0 hard.</p>\n\n<pre><code>{-# language DeriveTraversable #-}\n\n...\n\nnewtype Matrix a = Matrix [[a]] deriving (Show, Functor, Foldable, Traversable)\n</code></pre>\n\n<p>Presto.</p></li>\n<li><p>Where do we get labels from? It is a side effect. The function <em>reaches somewhere</em>, takes a\nstream of labels, takes the head, and puts the tail back in the extra-dimensional pocket. A\nmonad that can do this is <code>State</code>.</p></li>\n<li><p>It works like this:</p>\n\n<pre><code>label :: Int -&gt; State String Char\nlabel 0 = return '_'\nlabel x = do\n    ls &lt;- get\n    case ls of\n        [ ] -&gt; error \"No more labels!\"\n        (l: ls') -&gt; do\n            put ls'\n            return l\n</code></pre>\n\n<p>I hope the code explains itself. When a function <em>\"creates\"</em> a monadic value, we call it\n<em>\"effectful\"</em>, or an <em>\"action\"</em> in a given monad. For instance, <code>print</code> is an action that,\nwell, prints stuff. Which is an effect. <code>label</code> is also an action, though in a different\nmonad.  Compare and see for youself.</p></li>\n<li><p>Now we are ready to cook a solution:</p>\n\n<pre><code>matrixGroupings m = evalState (traverse label m) ['a'..'z']\n</code></pre></li>\n</ul>\n\n<h2>This is it.</h2>\n\n<pre><code>\u03bb matrixGroupings example\nMatrix [\"_ab\",\"cd_\",\"__e\"]\n</code></pre>\n\n<h2>Bon appetit!</h2>\n\n<p>&nbsp;</p>\n\n<p><strong>P.S.</strong> &nbsp; I took all glory from you, it is unfair. To make things fun again, I challenge you for an exercise: can you define a <code>Traversable</code> instance that labels a matrix in another order \u2014 by columns first, then rows?</p>\n"}], "owner": {"reputation": 13, "user_id": 10620131, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf5591e384754e09eef73176193b3680?s=128&d=identicon&r=PG&f=1", "display_name": "netugi", "link": "https://stackoverflow.com/users/10620131/netugi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 58, "favorite_count": 0, "accepted_answer_id": 58574861, "answer_count": 1, "score": 1, "last_activity_date": 1572128433, "creation_date": 1572123022, "last_edit_date": 1572123794, "question_id": 58574605, "link": "https://stackoverflow.com/questions/58574605/haskell-assigning-unique-char-to-matrix-values-if-x-0", "title": "Haskell: Assigning unique char to matrix values if x &gt; 0", "body": "<p>So my goal for the program is for it to receive an Int matrix for input, and program converts all numbers > 0 to a unique sequential char, while 0's convert into a '_' (doesn't matter, just any character not in the sequence).</p>\n\n<p>eg.</p>\n\n<pre><code>main&gt; matrixGroupings [[0,2,1],[2,2,0],[[0,0,2]]\n[[\"_ab\"],[\"cd_\"],[\"__e\"]]\n</code></pre>\n\n<p>The best I've been able to achieve is</p>\n\n<pre><code>[[\"_aa\"],[\"aa_\"],[\"__a\"]]\n</code></pre>\n\n<p>using:</p>\n\n<pre><code>matrixGroupings xss = map (map (\\x -&gt; if x &gt; 0 then 'a' else '_')) xss\n</code></pre>\n\n<p>As far as I can tell, the issue I'm having is getting the program to remember what its last value was, so that when the value check is > 0, it picks the next char in line. I can't for the life of me figure out how to do this though.</p>\n\n<p>Any help would be appreciated.</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1572127031, "post_id": 58574540, "comment_id": 103466124, "body": "I did not understand, what do you mean with <b>there would be more to include in the parsed decimal</b>. With <code>feed (parse greetingYearParser &quot;hello172&quot;) &quot;34&quot;</code>, why I still get the <code>Partial</code>?"}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1572127149, "post_id": 58574540, "comment_id": 103466148, "body": "The <code>greetingYearParser</code> function is a type <code>Parser</code> and it should work with the <code>parse</code> function. Why for example <code>parse (string &quot;hello&quot;) &quot;hello&quot;</code> works?"}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1572127499, "post_id": 58574540, "comment_id": 103466216, "body": "could you please explain it with an example?"}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "reply_to_user": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 2, "creation_date": 1572128907, "post_id": 58574540, "comment_id": 103466478, "body": "You still get <code>Partial</code> because the <code>decimal</code> parser doesn&#39;t have a state where it both matches and doesn&#39;t accept more input.  The <code>string</code> parser is different - once it matches, it no longer accepts more input, so it&#39;s done.  The only way you can get a <code>Done</code> result from a parser that ends with <code>decimal</code> is to tell the parser the input is finished.  That&#39;s what <code>parseOnly</code> does."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "reply_to_user": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1572194897, "post_id": 58574540, "comment_id": 103477240, "body": "You&#39;ve already got all the examples that can help.  What you need is to think about the question &quot;When does a parser know it&#39;s done?&quot;"}], "tags": [], "owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "is_accepted": true, "score": 4, "last_activity_date": 1572122371, "creation_date": 1572122371, "answer_id": 58574540, "question_id": 58574353, "link": "https://stackoverflow.com/questions/58574353/why-do-i-receive-the-partial-datatype/58574540#58574540", "title": "Why do I receive the Partial datatype?", "body": "<p>Attoparsec builds incremental parsers. The <code>parse</code> function does not assume it's been given all the input , only a chunk of it. If the next chunk of input started with <code>\"32\"</code> , there would be more to include in the parsed <code>decimal</code>. I think you probably want <code>parseOnly</code> instead of <code>parse</code>, which makes the additional assumption that it's been given the full remaining input.</p>\n"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 52, "favorite_count": 0, "accepted_answer_id": 58574540, "answer_count": 1, "score": 1, "last_activity_date": 1572122371, "creation_date": 1572120762, "question_id": 58574353, "link": "https://stackoverflow.com/questions/58574353/why-do-i-receive-the-partial-datatype", "title": "Why do I receive the Partial datatype?", "body": "<p>I have the following code snippet:</p>\n\n<pre><code>import Control.Applicative\nimport Data.Text\nimport Data.Attoparsec.Text\n\ndata GreetingYear = GreetingYear Text Int deriving Show\n\n\ngreetingYearParser :: Parser GreetingYear\ngreetingYearParser = GreetingYear &lt;$&gt; (string \"hello\" &lt;|&gt; string \"bye\")  \n                                  &lt;*&gt; decimal\n</code></pre>\n\n<p>When I use it as follows: </p>\n\n<pre><code>parse greetingYearParser \"hello172\" \n</code></pre>\n\n<p>I've got </p>\n\n<pre><code>Partial _\n</code></pre>\n\n<p>Why do I not receive:</p>\n\n<pre><code>Done \"\" (GreetingYear \"hello\" 172)\n</code></pre>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["haskell", "algebraic-data-types", "type-level-computation"], "comments": [{"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1572117470, "post_id": 58573934, "comment_id": 103464151, "body": "Perhaps related: <a href=\"https://stackoverflow.com/questions/53692296/constructing-a-n-ary-product-with-all-the-values-of-a-simple-sum-type\" title=\"constructing a n ary product with all the values of a simple sum type\">stackoverflow.com/questions/53692296/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": true, "score": 2, "last_activity_date": 1572160732, "last_edit_date": 1572160732, "creation_date": 1572125870, "answer_id": 58574930, "question_id": 58573934, "link": "https://stackoverflow.com/questions/58573934/updating-an-n-ary-product-from-sop-core-with-a-compatible-sum/58574930#58574930", "title": "Updating an n-ary product from sop-core with a compatible sum", "body": "<p>The solution did not require <a href=\"http://hackage.haskell.org/package/sop-core-0.5.0.0/docs/Data-SOP.html#v:injections\" rel=\"nofollow noreferrer\"><code>injections</code></a> after all, but the <a href=\"http://hackage.haskell.org/package/sop-core-0.5.0.0/docs/Data-SOP-NS.html#v:expand_NS\" rel=\"nofollow noreferrer\"><code>expand_NS</code></a> function which converts a sum into a product by filling the non-matching components of the product with a default value.</p>\n\n<p>The trick is to build a product of <em>setters</em> that we can apply to the original record using <a href=\"http://hackage.haskell.org/package/sop-core-0.5.0.0/docs/Data-SOP-NP.html#v:liftA2_NP\" rel=\"nofollow noreferrer\"><code>liftA2_NP</code></a>. When we expand the sum, the non-matching components are filled with the identity function. But we overwrite the matching component with the value in the sum.</p>\n\n<p>First we need this auxiliary type</p>\n\n<pre><code>newtype Mendo a = Mendo { getMendo :: Maybe a -&gt; Maybe a }\n</code></pre>\n\n<p>and the code for <code>patch</code> would be:</p>\n\n<pre><code>patch :: forall xs. SListI xs =&gt; NS I xs -&gt; NP Maybe xs -&gt; NP Maybe xs\npatch piece =\n  let mendos :: NP Mendo xs -- product of setters\n      mendos = expand_NS (Mendo id) (liftA_NS (\\(I x) -&gt; Mendo (\\_ -&gt; Just x)) piece)\n   in liftA2_NP (\\(Mendo f) x -&gt; f x) mendos\n</code></pre>\n"}], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 44, "favorite_count": 0, "accepted_answer_id": 58574930, "answer_count": 1, "score": 2, "last_activity_date": 1572160732, "creation_date": 1572117440, "question_id": 58573934, "link": "https://stackoverflow.com/questions/58573934/updating-an-n-ary-product-from-sop-core-with-a-compatible-sum", "title": "Updating an n-ary product from sop-core with a compatible sum", "body": "<p>I'm working with the <a href=\"http://hackage.haskell.org/package/sop-core\" rel=\"nofollow noreferrer\">sop-core</a> library, and I want to write a function with the following type:</p>\n\n<pre><code>patch :: NS I xs -&gt; NP Maybe xs -&gt; NP Maybe xs\n</code></pre>\n\n<p><code>xs</code> is a type-level list of types like <code>'[Int,Char,Bool]</code>. <a href=\"http://hackage.haskell.org/package/sop-core-0.5.0.0/docs/Data-SOP.html#t:I\" rel=\"nofollow noreferrer\"><code>I</code></a> is an identity functor. <a href=\"http://hackage.haskell.org/package/sop-core-0.5.0.0/docs/Data-SOP.html#t:NS\" rel=\"nofollow noreferrer\"><code>NS I xs</code></a> is an n-ary sum type. <a href=\"http://hackage.haskell.org/package/sop-core-0.5.0.0/docs/Data-SOP.html#t:NP\" rel=\"nofollow noreferrer\"><code>NP Maybe xs</code></a> is an n-ary product where each component may or may not exist.</p>\n\n<p><code>patch</code> should take the value from the n-ary sum and fill the corresponding slot of the n-ary product, overwriting it if it already exists. For example:</p>\n\n<pre><code>patched :: NP Maybe '[Int,Char,Bool]\npatched = patch (Z (I 3)) (Nothing :* Nothing :* Nothing :* Nil)\n-- patched == Just 3 :* Nothing :* Nothing :* Nil\n</code></pre>\n\n<p>I suspect the solution might involve the <a href=\"http://hackage.haskell.org/package/sop-core-0.5.0.0/docs/Data-SOP.html#v:injections\" rel=\"nofollow noreferrer\"><code>injections</code></a> function, but I'm stumped.</p>\n"}, {"tags": ["haskell", "ghc", "ghci"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1572114844, "post_id": 58573586, "comment_id": 103463546, "body": "You reverse the order of the <code>let</code> statement and the genrator."}, {"owner": {"reputation": 13, "user_id": 12279067, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c5ee26a3038c78b6850c2b0c2ad900?s=128&d=identicon&r=PG&f=1", "display_name": "Saturanal", "link": "https://stackoverflow.com/users/12279067/saturanal"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1572115032, "post_id": 58573586, "comment_id": 103463579, "body": "<code>func1 xs = [x| (_,c) &lt;- func3 xs, let x = func2 (-c) xs ]</code> Is how it looks now, is that what you meant? The last error is gone, the other 2 still persist tho. Also, why did that fix that error?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1572115085, "post_id": 58573586, "comment_id": 103463591, "body": "No, <code>func1 xs = [ x | (_,c) &lt;- func3 xs, let x = func2 (-c) xs ]</code>."}, {"owner": {"reputation": 13, "user_id": 12279067, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c5ee26a3038c78b6850c2b0c2ad900?s=128&d=identicon&r=PG&f=1", "display_name": "Saturanal", "link": "https://stackoverflow.com/users/12279067/saturanal"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1572115139, "post_id": 58573586, "comment_id": 103463604, "body": "Yes sorry, I accidentally posted the comment before I was done writing."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1572115273, "post_id": 58573586, "comment_id": 103463635, "body": "these look like type errors. You will need to take a look to the types of the results of <code>func2</code>, <code>func3</code>, etc. and see what types these use as parameter."}, {"owner": {"reputation": 13, "user_id": 12279067, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c5ee26a3038c78b6850c2b0c2ad900?s=128&d=identicon&r=PG&f=1", "display_name": "Saturanal", "link": "https://stackoverflow.com/users/12279067/saturanal"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1572115625, "post_id": 58573586, "comment_id": 103463722, "body": "func2 needs an integer and String as input and returns a String, func 3 expects a String as input and returns a Tuple. They do what they&#39;re supposed to do independently, and I can simulate the function of func1 by inserting c, or (-c) in this case, into func2 which I get by running func3. Your solution returns a new error, saying func2 doesn&#39;t match the expected type String. What would be the best way to post those error messages, as it&#39;s kinda unwieldy to post them in a comment."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1572116170, "post_id": 58573586, "comment_id": 103463859, "body": "since you did not even share the signature of these functions, it is impossible to help you with that. I suggest you ask a new question where you add some extra information about these functions."}, {"owner": {"reputation": 13, "user_id": 12279067, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c5ee26a3038c78b6850c2b0c2ad900?s=128&d=identicon&r=PG&f=1", "display_name": "Saturanal", "link": "https://stackoverflow.com/users/12279067/saturanal"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1572116418, "post_id": 58573586, "comment_id": 103463913, "body": "By signatures you mean their type? Those are <code>func1 :: String -&gt; String</code>, <code>func2 :: Int -&gt; String -&gt; String</code> and <code>func3 :: String -&gt; (Float,Int)</code>. What other information should I include in a new question?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1572116590, "post_id": 58573586, "comment_id": 103463952, "body": "If <code>func3</code> has as result <code>(Float, Int)</code>, then that is not a list, and thus you can not write <code>(_, c) &lt;- func3 xs</code>"}, {"owner": {"reputation": 13, "user_id": 12279067, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c5ee26a3038c78b6850c2b0c2ad900?s=128&d=identicon&r=PG&f=1", "display_name": "Saturanal", "link": "https://stackoverflow.com/users/12279067/saturanal"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1572116675, "post_id": 58573586, "comment_id": 103463970, "body": "That&#39;s what I figured, but <code>let (_,c) = func3 xs</code> didn&#39;t work either. How&#39;d I properly define it elsewise?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1572116816, "post_id": 58573586, "comment_id": 103464001, "body": "well you here do not list comprehension at all, list comprehension is used when you want to iterate over a list. Strictly speaking, you could make something like <code>[ x | let (_, c) = func3 xs, x &lt;- func2 (-c) xs ]</code>, but that would only make it more &quot;ugly&quot; imho."}, {"owner": {"reputation": 13, "user_id": 12279067, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c5ee26a3038c78b6850c2b0c2ad900?s=128&d=identicon&r=PG&f=1", "display_name": "Saturanal", "link": "https://stackoverflow.com/users/12279067/saturanal"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1572117053, "post_id": 58573586, "comment_id": 103464057, "body": "Alright, that removed the matching type error, but now the error   <code>Programm.hs:206:18: error: Variable not in scope: c :: Integer     | 206 |         func2 (-c) xs</code>  persists. I assume you switched func3 and func2 by mistake in your comment?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1572117132, "post_id": 58573586, "comment_id": 103464076, "body": "it looks like one of the functions does not use an <code>Int</code>, but an <code>Integer</code>..."}, {"owner": {"reputation": 13, "user_id": 12279067, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c5ee26a3038c78b6850c2b0c2ad900?s=128&d=identicon&r=PG&f=1", "display_name": "Saturanal", "link": "https://stackoverflow.com/users/12279067/saturanal"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1572117258, "post_id": 58573586, "comment_id": 103464103, "body": "Which one would that be? ctrl+f ing for &quot;Integer&quot; returns no results, and all of the signatures are as I posted."}, {"owner": {"reputation": 13, "user_id": 12279067, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c5ee26a3038c78b6850c2b0c2ad900?s=128&d=identicon&r=PG&f=1", "display_name": "Saturanal", "link": "https://stackoverflow.com/users/12279067/saturanal"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1572117359, "post_id": 58573586, "comment_id": 103464120, "body": "Also, why wouldn&#39;t I use list comprehension? The result is supposed to be a String, and thus a list, right?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1572117421, "post_id": 58573586, "comment_id": 103464136, "body": "@Saturanai: because <code>func2</code> already returns the entire list, by using that in list comprehension, you will, worst case, only add an extra loop over that list."}], "answers": [{"comments": [{"owner": {"reputation": 13, "user_id": 12279067, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c5ee26a3038c78b6850c2b0c2ad900?s=128&d=identicon&r=PG&f=1", "display_name": "Saturanal", "link": "https://stackoverflow.com/users/12279067/saturanal"}, "edited": false, "score": 0, "creation_date": 1572117986, "post_id": 58573603, "comment_id": 103464278, "body": "<code>func1 :: String -&gt; String func1 xs = func2 (-(snd (func3 xs))) xs</code>  Worked, thank you. But, if you don&#39;t mind explaining, I don&#39;t understand why it expected x to be a char in the first place, or why c wasn&#39;t in the scope, do I always have to define a variable before using it, I thought Haskell works &quot;backwards&quot;, as it basically builds up a backlog of all expected inputs, and then works from there, as I understood it."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 13, "user_id": 12279067, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c5ee26a3038c78b6850c2b0c2ad900?s=128&d=identicon&r=PG&f=1", "display_name": "Saturanal", "link": "https://stackoverflow.com/users/12279067/saturanal"}, "edited": false, "score": 0, "creation_date": 1572118073, "post_id": 58573603, "comment_id": 103464300, "body": "@Saturanal: because the signature of your function is <code>String -&gt; String</code>, it reasons that your list comprehension will yield a list of <code>Char</code>s, and therefore tath <code>x</code> should be a <code>Char</code>."}, {"owner": {"reputation": 13, "user_id": 12279067, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c5ee26a3038c78b6850c2b0c2ad900?s=128&d=identicon&r=PG&f=1", "display_name": "Saturanal", "link": "https://stackoverflow.com/users/12279067/saturanal"}, "edited": false, "score": 0, "creation_date": 1572118244, "post_id": 58573603, "comment_id": 103464327, "body": "Oh, of course. God I&#39;m dumb. But why didn&#39;t it recognize c as defined?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 13, "user_id": 12279067, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c5ee26a3038c78b6850c2b0c2ad900?s=128&d=identicon&r=PG&f=1", "display_name": "Saturanal", "link": "https://stackoverflow.com/users/12279067/saturanal"}, "edited": false, "score": 0, "creation_date": 1572119782, "post_id": 58573603, "comment_id": 103464671, "body": "Because your list comprehension is something like <code>let x = func2 (-c) xs in (_, c) &lt;- func3 xs &gt;&gt;= return x</code>, and thus you use <code>c</code> in the head of the <code>let</code> statment, but it only appears in the <i>body</i>."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 1, "last_activity_date": 1572118028, "last_edit_date": 1572118028, "creation_date": 1572114936, "answer_id": 58573603, "question_id": 58573586, "link": "https://stackoverflow.com/questions/58573586/how-do-i-bring-a-variable-into-scope-and-how-to-match-types/58573603#58573603", "title": "How do I bring a variable into scope, and how to match types", "body": "<p>You should swap the order of the <code>let</code> clause and the generator clause to:</p>\n\n<pre><code>func1 xs = [ x | (_,<b>c</b>) &lt;- func3 xs, let x = func2 (-<b>c</b>) xs ]</code></pre>\n\n<p>but since you here only use <code>x</code> in the \"yield\" part of the list comprehension, you can simply omit the <code>let x = &hellip;</code>, and work with:</p>\n\n<pre><code>func1 xs = [ <b>func2 (-c) xs</b> | (_,c) &lt;- func3 xs ]</code></pre>\n\n<p>Based on the <a href=\"https://stackoverflow.com/questions/58573586/how-do-i-bring-a-variable-into-scope-and-how-to-match-types/58573603#comment103463913_58573586\">signatures of your function</a>:</p>\n\n<pre><code>func1 :: String -&gt; String\nfunc2 :: Int -&gt; String -&gt; String\nfunc3 :: String -&gt; (Float,Int)\n</code></pre>\n\n<p>your <code>func3</code> does not return a list: it returns a 2-tuple. In that case, your <code>func1</code> should probably look like:</p>\n\n<pre><code>func1 :: String -&gt; String\nfunc1 = negate . snd . func3 &gt;&gt;= func2\n</code></pre>\n\n<p>or simpler:</p>\n\n<pre><code>func1 :: String -&gt; String\nfunc1 xs = func2 (- (snd (func3 xs))) xs\n</code></pre>\n"}], "owner": {"reputation": 13, "user_id": 12279067, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c5ee26a3038c78b6850c2b0c2ad900?s=128&d=identicon&r=PG&f=1", "display_name": "Saturanal", "link": "https://stackoverflow.com/users/12279067/saturanal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 54, "favorite_count": 0, "accepted_answer_id": 58573603, "answer_count": 1, "score": 1, "last_activity_date": 1572118028, "creation_date": 1572114775, "question_id": 58573586, "link": "https://stackoverflow.com/questions/58573586/how-do-i-bring-a-variable-into-scope-and-how-to-match-types", "title": "How do I bring a variable into scope, and how to match types", "body": "<p>Everytime I try to load the modul which contains func1 I encounter an error, and I don't know how to fix it.</p>\n\n<p>func2 and func3 work independently, and do exactly what they're supposed to do.</p>\n\n<pre><code>func1 xs = [x| let x = func2 (-c) xs, (_,c) &lt;- func3 xs] \n</code></pre>\n\n<p>func1 expects a String and is supposed to deliver another String. xs is the input String, x is the output String. func 2 expects an Int and String, c is the Int, and produces another String. func3 expects a String, and puts out a Tuple. (_,c) is the Output, the first element is _ because it's irrelevant in this function, and the second element is an integer.</p>\n\n<p>There is no output,  and I get the following error message:</p>\n\n<pre><code>Programm.hs:205:18: error:\n    Variable not in scope: c :: Integer\n    |\n205 |         func2 (-c) xs\n    |                  ^\n\nProgramm.hs:208:16: error:\n    * Couldn't match type `[Char]' with `Char'\n      Expected type: Char\n        Actual type: String\n    * In the expression: x\n      In the expression:\n        [x | let x = func2 (- c) xs, (_, c) &lt;- func3 xs]\n      In an equation for `decypher':\n          func1 xs = [x | let x = func2 (- c) xs, (_, c) &lt;- func3 xs]\n    |\n208 | func1 xs = [x| let x = func2 (-c) xs, (_,c) &lt;- func3 xs]\n    |                \n\nProgramm.hs:208:36: error:\n    Variable not in scope: c :: Int\n    |\n208 | func1 xs = [x| let x = func2 (-c) xs, (_,c) &lt;- func3 xs]\n    |                                    \nFailed, no modules loaded.\n</code></pre>\n\n<p>Now, my questions are: Why does it say c isn't an Integer when I have defined it (I also tried it with \"let (_,c) = func3 xs\") as second element of the output of func3, which is necessarily an Integer?</p>\n\n<p>Why does it expect x to be a Char when the output of func2 is necessarily a String?</p>\n\n<p>Thank you in advance, and please have patience with me, I'm just learning Haskell :*</p>\n"}, {"tags": ["haskell", "compilation"], "answers": [{"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 2, "last_activity_date": 1572119128, "creation_date": 1572119128, "answer_id": 58574148, "question_id": 58570228, "link": "https://stackoverflow.com/questions/58570228/how-to-read-simplifier-output/58574148#58574148", "title": "How to read simplifier output?", "body": "<p>There is no manual or standalone documentation on Core that I'm aware of that goes into the kind of detail you are looking for.  There is of course this <a href=\"https://gitlab.haskell.org/ghc/ghc/wikis/commentary/compiler/core-syn-type\" rel=\"nofollow noreferrer\">page on Core</a> from the Wiki, but it just explains the Core language at a high level and does so in mostly in terms of the compiler data structures used to represent a Core abstract syntax tree, rather than the concrete \"pretty print\" syntax.</p>\n\n<p>The only way to get the detail you want is to download a copy of the GHC source and start looking through the code in <code>ghc/compiler/coreSyn/</code>.</p>\n\n<p>GHC is big and complicated, but most of it is written in Haskell, and so much of the code is very high level and quite readable, and the source code is heavily commented with excellent explanations and notes sprinkled everywhere.</p>\n\n<p>If you want to know what <code>WorkFree=True</code> means, for example, you would:</p>\n\n<ol>\n<li><p>Find the code in <code>PprCore.hs</code> that generates the annotation, to determine that it's the <code>uf_is_work_free</code> field of <code>CoreUnfolding</code>.</p></li>\n<li><p>Check the definition of <code>CoreUnfolding</code> in <code>CoreSyn.hs</code> and its related comments, where you can see that an <code>Unfolding</code> is a representation of an identifier that can be substituted while inlining, and the <code>uf_is_work_free</code> flag is a cached copy of <code>exprIsWorkFree</code> that somehow indicates that inlining the unfolding doesn't \"waste work\".</p></li>\n<li><p>Look through comments in <code>CoreSyn.hs</code>, <code>CoreUnfold.hs</code>, and <code>CoreUtils.hs</code> to find an additional explanation of <code>exprIsWorkFree</code> and what it means:</p>\n\n<blockquote>\n  <p><code>exprIsWorkFree</code> is used when deciding whether to inline something; we\n      don't inline it if doing so might duplicate work, by peeling off a\n      complete copy of the expression.</p>\n</blockquote>\n\n<p>An example is given:</p>\n\n<pre><code>let x = a #+ b in x +# x  -- I think `#+` is a typo and should be `+#`\n</code></pre>\n\n<p>where it's pointed out that <code>x</code> is not \"work free\", since if it was inlined on the RHS, that would cause the <code>a +# b</code> operation to be evaluated twice</p></li>\n</ol>\n\n<p>In your case, the version of <code>myButLast</code> in your Core output is work-free because it doesn't evaluate any expressions independently of the arguments that could be reused every time <code>myButLast</code> is applied.</p>\n"}], "owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 75, "favorite_count": 0, "accepted_answer_id": 58574148, "answer_count": 1, "score": 6, "last_activity_date": 1572119128, "creation_date": 1572088334, "last_edit_date": 1572088691, "question_id": 58570228, "link": "https://stackoverflow.com/questions/58570228/how-to-read-simplifier-output", "title": "How to read simplifier output?", "body": "<p>Consider a simple function from the <a href=\"https://stackoverflow.com/q/58541687\">recent question</a>:</p>\n\n<pre><code>myButLast :: [a] -&gt; a\nmyButLast [x, y] = x\nmyButLast (x : xs) = myButLast xs\nmyButLast _ = error \"List too short\"\n</code></pre>\n\n<p>We can ask GHC to give us the simplifier output with <code>ghc -ddump-simpl</code>. <em>(Possibly with <a href=\"https://stackoverflow.com/q/10693638\">some\nadditional flags</a> like <code>-dsuppress-module-prefixes</code> <code>-dsuppress-uniques</code>.)</em> As I understand, it\nis the last stage of compilation where the result still has any semblance to the original high\nlevel code. So here is what it says:</p>\n\n<pre><code>-- RHS size: {terms: 21, types: 22, coercions: 0, joins: 0/0}\nmyButLast :: forall a. [a] -&gt; a\n[GblId,\n Arity=1,\n Str=&lt;S,1*U&gt;,\n Unf=Unf{Src=&lt;vanilla&gt;, TopLvl=True, Value=True, ConLike=True,\n         WorkFree=True, Expandable=True, Guidance=IF_ARGS [30] 100 0}]\nmyButLast\n  = \\ (@ a) (ds :: [a]) -&gt;\n      case ds of {\n        [] -&gt; myButLast1 @ a;\n        : x ds1 -&gt;\n          case ds1 of {\n            [] -&gt; myButLast1 @ a;\n            : y ds2 -&gt;\n              case ds2 of {\n                [] -&gt; x;\n                : ipv ipv1 -&gt; myButLast_$smyButLast1 @ a y ipv ipv1\n              }\n          }\n      }\n</code></pre>\n\n<p>What is happening here? Let us see.</p>\n\n<ol>\n<li><p>To the type signature, now with an explicit quantifier, some sort of annotations are attached.\nI may guess that they say <em>\"global identifier, unary, top level\"</em>, which is all true for this\nfunction.  The other annotations, like <code>WorkFree=True</code>, <code>Str=&lt;S,1*U&gt;</code>, are to me cryptic.</p></li>\n<li><p>The <em>\"value\"</em> definition is now a lambda that accepts, in addition to a list, a type variable\nargument, and proceeds to study the list by case analysis. <code>[] -&gt; myButLast1 @ a</code> is a glorified\nerror call, so let us ignore it for now. The interesting part is the call to\n<code>myButLast_$smyButLast1</code> <em>(What kind of name is that? I thought <code>$</code> sign could not be a part of an\nidentifier.)</em>, which turns out to be a tail recursive function that actually traverses the list.</p></li>\n<li><p>And here it is, a single member of what we recognize as a mutually recursive block:</p>\n\n<pre><code>Rec {\n-- RHS size: {terms: 13, types: 12, coercions: 0, joins: 0/0}\nmyButLast_$smyButLast1 [Occ=LoopBreaker]\n  :: forall a. a -&gt; a -&gt; [a] -&gt; a\n[GblId,\n Arity=3,\n Caf=NoCafRefs,\n Str=&lt;L,1*U&gt;&lt;L,1*U&gt;&lt;S,1*U&gt;,\n Unf=OtherCon []]\nmyButLast_$smyButLast1\n  = \\ (@ a) (sc :: a) (sc1 :: a) (sc2 :: [a]) -&gt;\n      case sc2 of {\n        [] -&gt; sc;\n        : ipv ipv1 -&gt; myButLast_$smyButLast1 @ a sc1 ipv ipv1\n      }\nend Rec }\n</code></pre>\n\n<p>It is quite lucid, but it does have some features new to us, like the recursive block\ndelimiter <code>Rec ... end Rec</code> and a cryptic remark <code>[Occ=LoopBreaker]</code>. The annotations are also\ndifferent: the <code>Unf</code> array is empty, and a <code>Caf</code> field appears instead. I can only infer that\nthe <code>Unf</code> field being interesting is a quality of names defined by the programmer, while\n<code>myButLast_$smyButLast1</code> is created by the compiler.</p></li>\n</ol>\n\n<p>So, I can understand about half of what the simplifier gives me, by line count, but of some parts I cannot even begin to guess the meaning.</p>\n\n<p>&nbsp;</p>\n\n<ul>\n<li><p>Is the premise, that the simplifier output is usually the most useful intermediate\nrepresentation, correct?</p></li>\n<li><p>Is my reading correct so far?</p></li>\n<li><p>Is there a manual to all these cryptic remarks? What do they mean?</p></li>\n</ul>\n"}, {"tags": ["database", "haskell", "esqueleto"], "answers": [{"comments": [{"owner": {"reputation": 1502, "user_id": 2545980, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/FaKkG.jpg?s=128&g=1", "display_name": "Alojzy Leszcz", "link": "https://stackoverflow.com/users/2545980/alojzy-leszcz"}, "edited": false, "score": 1, "creation_date": 1572290456, "post_id": 58595141, "comment_id": 103506939, "body": "Thanks - this compiles and looks fine. Any way to free the result from the &quot;Value&quot; wrapper ? I&#39;ve got an idea - posted that in the updated question. Does it look acceptable ?"}], "tags": [], "owner": {"reputation": 841, "user_id": 4927711, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/98c32e7161133d8461c3d78fce3245ed?s=128&d=identicon&r=PG&f=1", "display_name": "DevNewb", "link": "https://stackoverflow.com/users/4927711/devnewb"}, "is_accepted": false, "score": 1, "last_activity_date": 1572294523, "last_edit_date": 1572294523, "creation_date": 1572281523, "answer_id": 58595141, "question_id": 58569635, "link": "https://stackoverflow.com/questions/58569635/esqueleto-to-return-just-a-single-column/58595141#58595141", "title": "Esqueleto to return just a single column", "body": "<p>I do not have any experience with esqueleto, but after a quick look at the tutorials I think this should work:</p>\n\n<pre><code>getAllTickers :: (MonadIO m, MonadLogger m) =&gt; SqlReadT m [Value String]\ngetAllTickers = select $ from $ \\instrument -&gt; return (instrument ^. InstrumentTicker)\n</code></pre>\n\n<p>note different type in signature and different lens. Hope it helps.</p>\n\n<p>EDIT: </p>\n\n<p>I don't see anything wrong with <code>unValue</code> in your solution, but don't cite me on that. If you want to avoid do-notation, one of the ways is you can exploit the fact that a Monad is also a Functor, so you can use infix <code>&lt;$&gt;</code> also known as <code>fmap</code> :</p>\n\n<pre><code>getAllTickers' :: (MonadIO m, MonadLogger m) =&gt; SqlReadT m [String]\ngetAllTickers' = \n  map unValue &lt;$&gt; (select $ from $ \\i -&gt; return (i ^. InstrumentTicker))\n</code></pre>\n"}], "owner": {"reputation": 1502, "user_id": 2545980, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/FaKkG.jpg?s=128&g=1", "display_name": "Alojzy Leszcz", "link": "https://stackoverflow.com/users/2545980/alojzy-leszcz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 123, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1572294523, "creation_date": 1572082683, "last_edit_date": 1572290712, "question_id": 58569635, "link": "https://stackoverflow.com/questions/58569635/esqueleto-to-return-just-a-single-column", "title": "Esqueleto to return just a single column", "body": "<p>I'm quite new to Haskell, currently doing my best to prevent my brain from going inside out.\nI've got a very simple DB schema defined in that way:</p>\n\n<pre><code>share [mkPersist sqlSettings, mkMigrate \"migrateAll\"] [persistLowerCase|\n  Instrument\n    ticker String\n    source String\n    exchange String\n    deriving Eq Show\n|]\n</code></pre>\n\n<p>I noticed that I can query for the all entries in the table in the following way:</p>\n\n<pre><code>getAllInstruments :: (MonadIO m, MonadLogger m) =&gt; SqlReadT m [Entity Instrument]\ngetAllInstruments = select $ from $ \\instrument -&gt; do return instrument\n</code></pre>\n\n<p>However, what if I'd like to get just a single column ? I tried something like this:</p>\n\n<pre><code>-- doesn't compile\ngetAllTickers :: (MonadIO m, MonadLogger m) =&gt; SqlReadT m [String]\ngetAllTickers = select $ from $ \\instrument -&gt; do return (Value (instrument ^. ticker))\n</code></pre>\n\n<p>But I get an error message:</p>\n\n<pre><code>\u2022 Couldn't match expected type \u2018EntityField val0 typ0\u2019\n  with actual type \u2018StockPrice -&gt; Ticker\u2019\n</code></pre>\n\n<p>I found a similar question on how to return a subset of columns here:\n<a href=\"https://stackoverflow.com/questions/50143910/haskell-esqueleto-project-subset-of-columns-to-list-of-custom-records\">Haskell Esqueleto project subset of columns to list of custom records</a></p>\n\n<p>And my question is: do I need to implement all the types like described in the article I posted in my application as well (i.e. only for a single column/field) ?</p>\n\n<p>EDIT</p>\n\n<p>Thanks to the hint I managed to come up with the following piece of code:</p>\n\n<pre><code>getAllTickers' :: (MonadIO m, MonadLogger m) =&gt; SqlReadT m [String]\ngetAllTickers' = do \n  res &lt;- select $ from $ \\i -&gt; return (i ^. InstrumentTicker)\n  return $ map unValue res\n</code></pre>\n\n<p>1.) Is it acceptable solution ?\n2.) For my education: is there a way to avoid the \"&lt;-\" notation ? Specifically I wonder if there's a way to write it in the following way:</p>\n\n<pre><code>-- Doesn't compile - need to enter with the map into the m***d - how ?\ngetAllTickers'' = map unValue (select $ from $ \\i -&gt; return (i ^. InstrumentTicker))\n</code></pre>\n"}, {"tags": ["haskell", "recursion", "huffman-code"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 6, "creation_date": 1572063068, "post_id": 58567971, "comment_id": 103453782, "body": "Is this assignment due tonight or something? Lots of different people have been asking about the same code. Anyway, you have multiple definitions for <code>traT _ c bs res</code>."}], "answers": [{"tags": [], "owner": {"reputation": 2485, "user_id": 11282404, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c1e3829cb91cc6be3541a37381b5ff21?s=128&d=identicon&r=PG&f=1", "display_name": "jpmarinier", "link": "https://stackoverflow.com/users/11282404/jpmarinier"}, "is_accepted": false, "score": 2, "last_activity_date": 1572229847, "creation_date": 1572229847, "answer_id": 58585137, "question_id": 58567971, "link": "https://stackoverflow.com/questions/58567971/huffman-tree-decoding/58585137#58585137", "title": "Huffman Tree decoding", "body": "<p>Well, you seem to be on the right track.</p>\n\n<blockquote>\n  <p>it only returns the first symbol in the tree.</p>\n</blockquote>\n\n<p>Your main problem is with these 2 lines:</p>\n\n<pre><code>traT (Leaf v) c bs res= (res++[v], True)\n...\ntraT _ c bs res = traT c c (bs) res\n</code></pre>\n\n<p>The first one masks the second one for all leaf nodes. And the second one is your only forward recursive call that could operate at leaf nodes, hence your only hope to process any further bits.<br></p>\n\n<p>A couple of remarks:</p>\n\n<ol>\n<li>the <code>res++[v]</code> expression forces the code to <em>rescan</em> the whole symbol list at each new symbol.</li>\n<li>The second line would call itself endlessly (but it is masked by the first one).</li>\n</ol>\n\n<p>Another (smaller) problem is that returning just one flag for the presence of \"extra\" bits at the end of the bit stream loses information, as we would like to know what the extra bits are. It is a bit risky to do this in your core recursive function. Of course, it is perfectly OK to do it in the final outer <code>decode</code> function.</p>\n\n<p>This is why in the code sample below, I have used an extra <code>symBits</code> argument to keep the bits that have been processed but not yet attributed to a symbol. I keep them in reverse order, because Haskell prefers to prepend items to a list, rather than to put them at the end, rescanning the whole list to do so. Hence the call to <code>reverse</code> in the final stage of processing. It is a cheap <code>reverse</code> call, as it is limited in length to the depth of our Huffman tree.</p>\n\n<p>So here is some suggested reworked code, where I have tried to distinguish the 4 cases: leaf node or fork node AND at end of bit stream or not. I also took the liberty to rename your <code>c</code> argument as htop.</p>\n\n<pre><code>data BTree a = Leaf a | Fork (BTree a) (BTree a)  deriving (Show, Eq)\n\ntype Bit = Bool\n\n\n--            hnode   htop     symBits    bs\ntravHT :: BTree a -&gt; BTree a -&gt; [Bit] -&gt; [Bit] -&gt; ([a], [Bit])\n\n-- situations where at least one input bit remains:\ntravHT (Leaf v) htop symBits (b:rbs) =  -- CHANGE: forward recursive call\n                     -- symbol completed, jump from leaf node to top of htree:\n                     let  fwdRes      = travHT htop htop [] (b:rbs)\n                          nextSyms    = fst fwdRes\n                          lastSymBits = snd fwdRes\n                     in   (v : nextSyms, lastSymBits)\ntravHT (Fork left right) htop symBits (b:rbs)\n   | b          = travHT right htop  (b:symBits)  rbs\n   | otherwise  = travHT left htop   (b:symBits)  rbs\n\n-- situations where we have reached the end of the bit stream:\ntravHT (Leaf v)           htop  symBits [] = ([v],[])\n--   no more bits and not at a leaf --&gt; incomplete last symbol:\ntravHT (Fork left right)  htop  symBits [] = ([], reverse symBits)\n\n-- homework-mandated interface:\ndecode :: BTree a -&gt; [Bit] -&gt; ([a], Bool)\ndecode htree bs =\n   let pair = travHT htree htree [] bs\n       (symbols, restOfBits) = pair\n       weUsedAllBits = null restOfBits\n   in  (symbols, weUsedAllBits)\n</code></pre>\n\n<h2>Testing code with token main program:</h2>\n\n<pre><code>xyz_code :: BTree Char\nxyz_code = Fork (Leaf 'x') (Fork (Leaf 'y') (Leaf 'z'))\n\n-- Bit streams for test purposes:\n------      Y           Z          X       X       X      Y/Z??\nbl0 = [True,False,  True,True  , False,  False,  False]\nbl1 = [True,False,  True,True  , False,  False,  False,  True]\n\n\nmain = do\n    let bitList = bl0\n    let htree   = xyz_code\n    let result = decode  htree  bitList\n    putStrLn $ \"result = \" ++ show result\n</code></pre>\n\n<h2>Program output:</h2>\n\n<pre><code>result = (\"yzxxx\",True)\n</code></pre>\n\n<p>Hope it helps. I will also ask the <em>powers that be</em> to add the [huffman-code] tag to your question. Tags are a nice way to help people find the questions of interest to them. And we do have a tag for Huffman codes.</p>\n"}], "owner": {"reputation": 95, "user_id": 12203144, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-AYHpiGKoZh4/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdf7jX3UTZ2lBsn2XVaA47VSeIsdA/photo.jpg?sz=128", "display_name": "Lmmmmmmc", "link": "https://stackoverflow.com/users/12203144/lmmmmmmc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 199, "favorite_count": 0, "answer_count": 1, "score": -3, "last_activity_date": 1572245928, "creation_date": 1572062962, "last_edit_date": 1572245928, "question_id": 58567971, "link": "https://stackoverflow.com/questions/58567971/huffman-tree-decoding", "title": "Huffman Tree decoding", "body": "<p>Given a <a href=\"https://en.wikipedia.org/wiki/Huffman_coding\" rel=\"nofollow noreferrer\">Huffman tree</a> and a stream of bits, return a pair containing (1) the\n-- string of symbols encoded by the bits (according to the Huffman tree), and\n-- (2) a Bool indicating whether the output stream contains every bit from the\n-- input (that is, return False if there were any bits left over).</p>\n\n<p>Here is the code, it only returns the first symbol in the tree. What's the problem?</p>\n\n<pre><code>data BTree a = Leaf a | Fork (BTree a) (BTree a) deriving (Show, Eq)\n\ntraT :: BTree a -&gt; BTree a -&gt; [Bool] -&gt; [a] -&gt; ([a], Bool)\ntraT (Leaf v) c bs res= (res++[v], True)\ntraT (Fork left right) c (b:bs) res\n   | b         = traT right c bs res\n   | otherwise = traT left c bs res\ntraT _ c [] res = (res, True)\ntraT _ c bs res = traT c c (bs) res\ntraT _ c bs res = (res, False)\n\ndecode :: BTree a -&gt; [Bool] -&gt; ([a], Bool)\ndecode (Fork x y) bs = traT (Fork x y) (Fork x y) bs []\ndecode (Leaf x) bs = traT(Leaf x) (Leaf x) bs []\n</code></pre>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 161, "user_id": 7681501, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c1875a29c771ebce5d3c6649caa63690?s=128&d=identicon&r=PG&f=1", "display_name": "Braedon Wooding", "link": "https://stackoverflow.com/users/7681501/braedon-wooding"}, "edited": false, "score": 0, "creation_date": 1572066619, "post_id": 58567852, "comment_id": 103454191, "body": "This is literally exactly the thing I was looking for thanks!"}], "tags": [], "owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "is_accepted": true, "score": 8, "last_activity_date": 1572061172, "creation_date": 1572061172, "answer_id": 58567852, "question_id": 58567827, "link": "https://stackoverflow.com/questions/58567827/is-there-a-nicer-way-to-write-a-self-referential-let-expression/58567852#58567852", "title": "Is there a nicer way to write a self referential let expression", "body": "<p>First, rewrite it like this, so that you'll be able to easily eta-reduce away <code>out_env</code> in the next step:</p>\n\n<pre><code>bar in_env a = let out_env = foo in_env . R a $ out_env in out_env\n</code></pre>\n\n<p>Then, use the fact that recursive <code>let</code> is equivalent to <code>fix</code>:</p>\n\n<pre><code>import Data.Function (fix)\nbar in_env a = fix $ foo in_env . R a\n</code></pre>\n"}], "owner": {"reputation": 161, "user_id": 7681501, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c1875a29c771ebce5d3c6649caa63690?s=128&d=identicon&r=PG&f=1", "display_name": "Braedon Wooding", "link": "https://stackoverflow.com/users/7681501/braedon-wooding"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 2, "accepted_answer_id": 58567852, "answer_count": 1, "score": 3, "last_activity_date": 1572061172, "creation_date": 1572060783, "question_id": 58567827, "link": "https://stackoverflow.com/questions/58567827/is-there-a-nicer-way-to-write-a-self-referential-let-expression", "title": "Is there a nicer way to write a self referential let expression", "body": "<p>i.e. can we write the following more concisely?</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>bar in_env a = let out_env = foo in_env (R a out_env) in out_env\n</code></pre>\n\n<p>I want to write it something like</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>bar in_env a = foo in_env (R a ??)\n</code></pre>\n\n<p>But maybe it isn't possible?</p>\n"}, {"tags": ["multithreading", "haskell", "concurrency"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1572086470, "post_id": 58567605, "comment_id": 103457254, "body": "I&#39;m a bit confused by this question. <code>Data.Map</code> is a purely functional structure, and as such <i>always</i> thread safe, no? Ok, the purely-functional <code>insert</code> etc. isn&#39;t as fast as a destructive one could be \u2013 but that&#39;s kind of orthogonal to thread-safety. I guess what you actually mean to ask is, \u201cwhat&#39;s an associative container that&#39;s faster than <code>Data.Map</code>, but still thread-safe\u201d?"}, {"owner": {"reputation": 1643, "user_id": 1258501, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/11b3eb48be2b9a142900976946f75fdc?s=128&d=identicon&r=PG&f=1", "display_name": "Peter", "link": "https://stackoverflow.com/users/1258501/peter"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1572096799, "post_id": 58567605, "comment_id": 103459302, "body": "@leftaroundabout To clarify: what I meant is a data structure that multiple threads can access <i>and</i> observe the results of each other&#39;s modifications. Pure data structures are immutable by design and hence there&#39;s no way an <code>insert</code> by thread A is witnessed by thread B&#39;s <code>lookup</code> later on, simply because the <code>insert</code> results in a new <code>Data.Map</code>, while thread B still has the original."}], "owner": {"reputation": 1643, "user_id": 1258501, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/11b3eb48be2b9a142900976946f75fdc?s=128&d=identicon&r=PG&f=1", "display_name": "Peter", "link": "https://stackoverflow.com/users/1258501/peter"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 80, "favorite_count": 1, "answer_count": 0, "score": 2, "last_activity_date": 1572057324, "creation_date": 1572057324, "question_id": 58567605, "link": "https://stackoverflow.com/questions/58567605/thread-safe-data-structures-with-data-map-operations", "title": "Thread-safe data structures with Data.Map operations", "body": "<p>I'm looking for thread-safe data structures that have an interface similar to <code>Data.Map</code>, i.e., support fast <code>insert</code>, <code>lookup</code>, <code>delete</code> operations. By \"thread-safe\" I mean that these operations are atomic/linearizable. I know that I could simply use</p>\n\n<pre><code>data MyThreadSafeDS k a = MyThreadSafeDS (TVar (Map k a))\n</code></pre>\n\n<p>but benchmarks show that this performs very poorly when multiple threads are trying to do insertions/deletions concurrently. Interestingly, using an <code>MVar</code> gives worse results in this context. </p>\n\n<p><strong>Background:</strong> I've written a <a href=\"https://hackage.haskell.org/package/concurrent-hashtable\" rel=\"nofollow noreferrer\">concurrent hash table</a> and I'm looking for other <em>thread-safe</em> data structures to include in my benchmark results. I'm aware of <a href=\"https://hackage.haskell.org/package/hashtables\" rel=\"nofollow noreferrer\">hashtables</a>, which doesn't seem to be thread-safe. </p>\n"}, {"tags": ["haskell", "functional-programming"], "answers": [{"tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": false, "score": 6, "last_activity_date": 1572054405, "creation_date": 1572054405, "answer_id": 58567417, "question_id": 58567390, "link": "https://stackoverflow.com/questions/58567390/trying-to-understand-zip/58567417#58567417", "title": "Trying to understand zip", "body": "<p>Haskell function calls don't use brackets or commas.</p>\n\n<p>You can write the <code>createList</code> function as:</p>\n\n<pre><code>createList xs ys = zip xs ys\n</code></pre>\n\n<p>or simply</p>\n\n<pre><code>createList = zip\n</code></pre>\n\n<p>Thus, the <code>createList</code> function is redundant; it's just <code>zip</code>. The only potential use for the alias that I can think of is if you truly want to constrain the type as given.</p>\n"}, {"tags": [], "owner": {"reputation": 14545, "user_id": 42188, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/0b0abbefc6a9375882ea3cc0c6da61c8?s=128&d=identicon&r=PG", "display_name": "muhuk", "link": "https://stackoverflow.com/users/42188/muhuk"}, "is_accepted": false, "score": 4, "last_activity_date": 1572054839, "creation_date": 1572054839, "answer_id": 58567444, "question_id": 58567390, "link": "https://stackoverflow.com/questions/58567390/trying-to-understand-zip/58567444#58567444", "title": "Trying to understand zip", "body": "<p>If you remove the parenthesis around <code>zip</code> call, your code should work:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>createList :: [Char] -&gt; [Char] -&gt; [(Char,Char)]\n\ncreateList xs ys = zip xs ys\n</code></pre>\n\n<h2>Explanation:</h2>\n\n<p>Full error I am getting when I run <code>zip ([1, 2, 3], [4, 5, 6])</code> (notice the parens):</p>\n\n<pre><code>&lt;interactive&gt;:4:5:\n    Couldn't match expected type \u2018[a]\u2019\n                with actual type \u2018([Integer], [Integer])\u2019\n    Relevant bindings include\n      it :: [b] -&gt; [(a, b)] (bound at &lt;interactive&gt;:4:1)\n    In the first argument of \u2018zip\u2019, namely \u2018([1, 2, 3], [4, 5, 6])\u2019\n    In the expression: zip ([1, 2, 3], [4, 5, 6])\n    In an equation for \u2018it\u2019: it = zip ([1, 2, 3], [4, 5, 6])\n</code></pre>\n\n<p>Notice the part that says <code>In the first argument of \u2018zip\u2019, namely \u2018([1, 2, 3], [4, 5, 6])\u2019</code>.  The parens are interpreted as <a href=\"https://hoogle.haskell.org/?hoogle=%28%2C%29&amp;scope=set%3Astackage\" rel=\"nofollow noreferrer\">tuple constructor</a>.  <code>zip</code> function expects a list as its first argument but we are passing it a tuple.</p>\n"}], "owner": {"reputation": 189, "user_id": 8666716, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/a6f8f3e5b56d1e647be3944cec3bfc07?s=128&d=identicon&r=PG&f=1", "display_name": "Carlos Romero", "link": "https://stackoverflow.com/users/8666716/carlos-romero"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 55, "favorite_count": 0, "answer_count": 2, "score": -1, "last_activity_date": 1572054839, "creation_date": 1572053975, "last_edit_date": 1572054442, "question_id": 58567390, "link": "https://stackoverflow.com/questions/58567390/trying-to-understand-zip", "title": "Trying to understand zip", "body": "<p>I am attempting to understand how to use zip in Haskell. I've been learning Haskell recently and am trying to create a list of tuples from two separate lists</p>\n\n<p>I have the following:</p>\n\n<pre><code>createList :: [Char] -&gt; [Char] -&gt; [(Char,Char)]    \ncreateList xs ys = zip(xs,ys)\n</code></pre>\n\n<p>I understand zip is supposed to create a list of tuples given two lists, but I get the following error: </p>\n\n<pre><code>Couldn't match expected type \u2018[a0]\u2019\n              with actual type \u2018([Char], [Char])\u2019\n</code></pre>\n\n<p>Can anyone explain to me where I am stumbling?</p>\n"}, {"tags": ["haskell", "recursion", "functional-programming", "huffman-code"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 2, "creation_date": 1572053585, "post_id": 58567334, "comment_id": 103452812, "body": "The compiler thinks <code>decode (Leaf v) [bs]</code> doesn\u2019t cover lists of length \u2265 2."}, {"owner": {"reputation": 19, "user_id": 12276493, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/75932cf24614b118923e9da3d4033742?s=128&d=identicon&r=PG&f=1", "display_name": "tacotac1999", "link": "https://stackoverflow.com/users/12276493/tacotac1999"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1572053636, "post_id": 58567334, "comment_id": 103452818, "body": "how can i fix it?"}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1572053684, "post_id": 58567334, "comment_id": 103452823, "body": "In general, if it\u2019s never supposed to happen, either define it as an error or rearrange your types so it can never exist."}, {"owner": {"reputation": 19, "user_id": 12276493, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/75932cf24614b118923e9da3d4033742?s=128&d=identicon&r=PG&f=1", "display_name": "tacotac1999", "link": "https://stackoverflow.com/users/12276493/tacotac1999"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1572053750, "post_id": 58567334, "comment_id": 103452830, "body": "could you be more specific? i don&#39;t understand what&#39;s wrong and what i should be changing"}], "answers": [{"tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": false, "score": 1, "last_activity_date": 1572055247, "creation_date": 1572055247, "answer_id": 58567475, "question_id": 58567334, "link": "https://stackoverflow.com/questions/58567334/non-exhaustive-pattern-error-when-decoding-huffman-tree/58567475#58567475", "title": "Non exhaustive pattern error when decoding Huffman tree?", "body": "<p>The title seems to indicate that you get a warning about an incomplete pattern-match. Consider it:</p>\n\n<pre><code>58567334.hs:6:1: warning: [-Wincomplete-patterns]\n    Pattern match(es) are non-exhaustive\n    In an equation for `decode': Patterns not matched: (Leaf _) (_:_:_)\n  |\n6 | decode _ [] = ([],True)\n  | ^^^^^^^^^^^^^^^^^^^^^^^^...\n</code></pre>\n\n<p>It says that the pattern that involves any <code>Leaf</code> with a list of Booleans longer than two isn't covered.</p>\n\n<p>The first pattern that matches on <code>[]</code> matches the empty list.</p>\n\n<p>The next pattern that matches on <code>[bs]</code> matches on a list with <em>a single element</em> called <code>bs</code>. This is a common mistake.</p>\n\n<p>You probably want this pattern instead:</p>\n\n<pre><code>decode (Leaf v) bs = -- ...\n</code></pre>\n\n<p>where <code>bs</code> is a <code>[Bool]</code> value (i.e. a list of Boolean values).</p>\n\n<p>Now you have to figure out how to aggregate that list of Boolean values to a single <code>Bool</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "is_accepted": false, "score": 1, "last_activity_date": 1572056260, "creation_date": 1572056260, "answer_id": 58567544, "question_id": 58567334, "link": "https://stackoverflow.com/questions/58567334/non-exhaustive-pattern-error-when-decoding-huffman-tree/58567544#58567544", "title": "Non exhaustive pattern error when decoding Huffman tree?", "body": "<ul>\n<li><code>_ []</code> covers empty lists</li>\n<li><code>(Fork left right) (b:bs)</code> covers non-empty lists for <code>Fork</code>s</li>\n<li><code>(Leaf v) [bs]</code> covers lists of length 1 for <code>Leaf</code>s</li>\n</ul>\n\n<p>So what\u2019s missing that the compiler is warning you about? Lists of length > 1 for <code>Leaf</code>s. You need to define this case as something. If reaching that state isn\u2019t logically valid, an error is okay:</p>\n\n<pre><code>data BTree a = Leaf a | Fork (BTree a) (BTree a) deriving (Show, Eq)\n\ndecode :: BTree a -> [Bool] -> ([a], Bool)\ndecode _ [] = ([], True)\ndecode (Leaf v) [bs] = ([v], bs)\n<b>decode (Leaf v) _ = error \"Too much code left at leaf\"</b>\ndecode (Fork left right) (b:bs)\n   | b         = decode right bs\n   | otherwise = decode left bs</code></pre>\n"}], "owner": {"reputation": 19, "user_id": 12276493, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/75932cf24614b118923e9da3d4033742?s=128&d=identicon&r=PG&f=1", "display_name": "tacotac1999", "link": "https://stackoverflow.com/users/12276493/tacotac1999"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 64, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1572176297, "creation_date": 1572052997, "last_edit_date": 1572176297, "question_id": 58567334, "link": "https://stackoverflow.com/questions/58567334/non-exhaustive-pattern-error-when-decoding-huffman-tree", "title": "Non exhaustive pattern error when decoding Huffman tree?", "body": "<p>I'm trying to turn a Huffman tree and a stream of bits into a list of characters plus a boolean indicating whether or not the output consumed all the input bits. Here's an example:</p>\n\n<pre><code>decode xyz_code [True,False,True,True,True,False,False,True] = \n(\"yzyx\",False)\n</code></pre>\n\n<p>Here's what I have so far, but it doesn't work. What's going wrong? Help!</p>\n\n<pre><code>data BTree a = Leaf a | Fork (BTree a) (BTree a) deriving (Show, Eq)\n\ndecode :: BTree a -&gt; [Bool] -&gt; ([a], Bool)\ndecode _ [] = ([],True)\ndecode (Leaf v) [bs] = ([v], bs)\ndecode (Fork left right) (b:bs)\n   | b         = decode right bs\n   | otherwise = decode left bs\n</code></pre>\n"}, {"tags": ["c++", "multithreading", "haskell"], "answers": [{"tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": true, "score": 8, "last_activity_date": 1572063202, "last_edit_date": 1572063202, "creation_date": 1572051321, "answer_id": 58567221, "question_id": 58567188, "link": "https://stackoverflow.com/questions/58567188/when-is-a-haskell-thread-joined/58567221#58567221", "title": "When is a Haskell thread joined?", "body": "<p>As far as I understand, threads are never joined, and the program ends when <code>main</code> ends.  This is special to <code>main</code> \u2013\u2013 in general threads are not associated to each other in any kind of hierarchy.    The concept of joining a thread does not exist: a thread runs until its action is finished or until it is explicitly killed with <code>killThread</code>, and then it evaporates (thanks, garbage collector).  If you want to wait for a thread to complete you have to do it yourself, probably with an <code>MVar</code>.</p>\n\n<p>It follows that there is no analogue of <code>detach</code> \u2013\u2013\u00a0all threads are automatically detached.  </p>\n\n<p>Another thing worth mentioning is that there is not a 1:1 correspondence between OS threads and Haskell threads.  The Haskell runtime system has its own scheduler that can run multiple Haskell threads on a single OS thread; and in general a Haskell thread will bounce around between different OS threads over the course of its lifetime.  There is a concept of <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Concurrent.html#g:8\" rel=\"nofollow noreferrer\">bound threads</a> which are tied to an OS thread, but really the only reason to use that is if you are interfacing with code in other languages that distinguishes between OS threads.</p>\n"}], "owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 117, "favorite_count": 0, "accepted_answer_id": 58567221, "answer_count": 1, "score": 4, "last_activity_date": 1572063202, "creation_date": 1572050687, "last_edit_date": 1572056926, "question_id": 58567188, "link": "https://stackoverflow.com/questions/58567188/when-is-a-haskell-thread-joined", "title": "When is a Haskell thread joined?", "body": "<p>As a former C++ programmer, the behaviour of Haskell threads is confusing. Refer to the following Haskell code snippet:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>import Control.Concurrent\nimport Control.Concurrent.MVar\nimport Data.Functor.Compose\nimport System.Random\n\nrandomTill0 :: MVar () -&gt; IO () -- Roll a die until 0 comes\nrandomTill0 mV = do\n    x &lt;- randomRIO (0,65535) :: IO Int\n    if 0 == x\n        then putMVar mV ()\n        else randomTill0 mV\n\nmain :: IO ()\nmain = do\n    n &lt;- getNumCapabilities\n    mV &lt;- newEmptyMVar\n    sequence (replicate n (forkIO (randomTill0 mV)))\n    readMVar mV\n    putStrLn \"Excution complete.\"\n</code></pre>\n\n<p>As far as I know, Haskell's <code>forkIO</code> is roughly equivalent to C++'s <code>std::async</code>. In C++, I store a <code>std::future</code> which is returned by <code>std::async</code>, then <code>std::future::wait</code> for it, then the thread will be <code>std::thread::join</code>ed.</p>\n\n<p>(Regarding the tiny delay before the message, I don't think any laziness is involved here.)</p>\n\n<p>My question is:</p>\n\n<ol>\n<li><p>In the above Haskell code snippet, when are the threads resulting from <code>forkIO</code>s joined? Is it upon <code>readMVar mV</code>, or the end of <code>main</code>?</p></li>\n<li><p>Is there a Haskell equivalent of <code>std::thread::detach</code>?</p></li>\n</ol>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 3, "creation_date": 1572044753, "post_id": 58566673, "comment_id": 103451598, "body": "looks like some strange indentation on your top line. You&#39;ll also get parse errors for <code>main</code> when you fix that, if you want to assign to a variable inside a <code>do</code> block you must precede it with <code>let</code>. (And I encourage you to learn the basics of Haskell: <a href=\"http://learnyouahaskell.com/chapters\" rel=\"nofollow noreferrer\">LYAH</a> is the best starting point.}"}], "answers": [{"tags": [], "owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "is_accepted": false, "score": 3, "last_activity_date": 1572058053, "creation_date": 1572058053, "answer_id": 58567665, "question_id": 58566673, "link": "https://stackoverflow.com/questions/58566673/error-handling-incorrect-indention-haskell/58567665#58567665", "title": "Error Handling: Incorrect Indention Haskell", "body": "<p>Lots of problems here. Let's fix them one by one:</p>\n\n<pre><code> opMe x y op = if op ==\"+\" let x+y\n\nmain=do\n  op = \"+\"\n  x = 8\n  y = 10\n  print(opMe (x, y, op))\n</code></pre>\n\n\n\n<pre><code>q58566673.hs:3:1: error:\n    parse error (possibly incorrect indentation or mismatched brackets)\n  |\n3 | main=do\n  | ^\n</code></pre>\n\n<p>The problem here isn't actually indentation. It's that your <code>if</code> statement doesn't have a <code>then</code> or <code>else</code>, so the parser is expecting it to continue, rather than you starting a new declaration. It looks like you used <code>let</code> where you meant to use <code>then</code>, so let's change that. Also, <code>else</code> is mandatory in Haskell. Since you didn't define any other operations yet, I'll use <code>undefined</code> for now, which will let your program compile, but crash if you ever end up there.</p>\n\n<pre><code> opMe x y op = if op ==\"+\" then x+y else undefined\n\nmain=do\n  op = \"+\"\n  x = 8\n  y = 10\n  print(opMe (x, y, op))\n</code></pre>\n\n\n\n<pre><code>q58566673.hs:3:1: error: parse error on input \u2018main\u2019\n  |\n3 | main=do\n  | ^^^^\n</code></pre>\n\n<p>Still doesn't work. Ironically, now the problem is indentation, but the new error message no longer mentions that as a possibility. Specifically, the problem is the leading space before <code>opMe</code>. Let's remove that.</p>\n\n<pre><code>opMe x y op = if op ==\"+\" then x+y else undefined\n\nmain=do\n  op = \"+\"\n  x = 8\n  y = 10\n  print(opMe (x, y, op))\n</code></pre>\n\n\n\n<pre><code>q58566673.hs:4:6: error:\n    parse error on input \u2018=\u2019\n    Perhaps you need a 'let' in a 'do' block?\n    e.g. 'let x = 5' instead of 'x = 5'\n  |\n4 |   op = \"+\"\n  |      ^\n</code></pre>\n\n<p>Here, GHC's suggestion is correct. You need to use <code>let</code> to declare variables in a <code>do</code> block.</p>\n\n<pre><code>opMe x y op = if op ==\"+\" then x+y else undefined\n\nmain=do\n  let op = \"+\"\n  let x = 8\n  let y = 10\n  print(opMe (x, y, op))\n</code></pre>\n\n\n\n<pre><code>q58566673.hs:5:11: error:\n    \u2022 Ambiguous type variable \u2018a0\u2019 arising from the literal \u20188\u2019\n      prevents the constraint \u2018(Num a0)\u2019 from being solved.\n      Relevant bindings include x :: a0 (bound at q58566673.hs:5:7)\n      Probable fix: use a type annotation to specify what \u2018a0\u2019 should be.\n      These potential instances exist:\n        instance Num Integer -- Defined in \u2018GHC.Num\u2019\n        instance Num Double -- Defined in \u2018GHC.Float\u2019\n        instance Num Float -- Defined in \u2018GHC.Float\u2019\n        ...plus two others\n        ...plus one instance involving out-of-scope types\n        (use -fprint-potential-instances to see them all)\n    \u2022 In the expression: 8\n      In an equation for \u2018x\u2019: x = 8\n      In the expression:\n        do let op = \"+\"\n           let x = 8\n           let y = 10\n           print (opMe (x, y, op))\n  |\n5 |   let x = 8\n  |           ^\n\nq58566673.hs:6:11: error:\n    \u2022 Ambiguous type variable \u2018b0\u2019 arising from the literal \u201810\u2019\n      prevents the constraint \u2018(Num b0)\u2019 from being solved.\n      Relevant bindings include y :: b0 (bound at q58566673.hs:6:7)\n      Probable fix: use a type annotation to specify what \u2018b0\u2019 should be.\n      These potential instances exist:\n        instance Num Integer -- Defined in \u2018GHC.Num\u2019\n        instance Num Double -- Defined in \u2018GHC.Float\u2019\n        instance Num Float -- Defined in \u2018GHC.Float\u2019\n        ...plus two others\n        ...plus one instance involving out-of-scope types\n        (use -fprint-potential-instances to see them all)\n    \u2022 In the expression: 10\n      In an equation for \u2018y\u2019: y = 10\n      In the expression:\n        do let op = \"+\"\n           let x = 8\n           let y = 10\n           print (opMe (x, y, op))\n  |\n6 |   let y = 10\n  |           ^^\n\nq58566673.hs:7:3: error:\n    \u2022 No instance for (Show\n                         ((a0, b0, [Char]) -&gt; [Char] -&gt; (a0, b0, [Char])))\n        arising from a use of \u2018print\u2019\n        (maybe you haven't applied a function to enough arguments?)\n    \u2022 In a stmt of a 'do' block: print (opMe (x, y, op))\n      In the expression:\n        do let op = \"+\"\n           let x = 8\n           let y = 10\n           print (opMe (x, y, op))\n      In an equation for \u2018main\u2019:\n          main\n            = do let op = ...\n                 let x = ...\n                 let y = ...\n                 ....\n  |\n7 |   print(opMe (x, y, op))\n  |   ^^^^^^^^^^^^^^^^^^^^^^\n\nq58566673.hs:7:9: error:\n    \u2022 No instance for (Num (a0, b0, [Char]))\n        arising from a use of \u2018opMe\u2019\n    \u2022 In the first argument of \u2018print\u2019, namely \u2018(opMe (x, y, op))\u2019\n      In a stmt of a 'do' block: print (opMe (x, y, op))\n      In the expression:\n        do let op = \"+\"\n           let x = 8\n           let y = 10\n           print (opMe (x, y, op))\n  |\n7 |   print(opMe (x, y, op))\n  |         ^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>That's a spectacularly unhelpful set of error messages. The reason these errors are so unhelpful is that they're a type mismatch error, but you didn't specify a type for <code>opMe</code>, so GHC inferred one that was more polymorphic (and thus gives more complicated error messages) than necessary. Let's add a type signature to get a better error message.</p>\n\n<pre><code>opMe :: Integer -&gt; Integer -&gt; String -&gt; Integer\nopMe x y op = if op ==\"+\" then x+y else undefined\n\nmain=do\n  let op = \"+\"\n  let x = 8\n  let y = 10\n  print(opMe (x, y, op))\n</code></pre>\n\n\n\n<pre><code>q58566673.hs:8:14: error:\n    \u2022 Couldn't match expected type \u2018Integer\u2019\n                  with actual type \u2018(Integer, Integer, [Char])\u2019\n    \u2022 In the first argument of \u2018opMe\u2019, namely \u2018(x, y, op)\u2019\n      In the first argument of \u2018print\u2019, namely \u2018(opMe (x, y, op))\u2019\n      In a stmt of a 'do' block: print (opMe (x, y, op))\n  |\n8 |   print(opMe (x, y, op))\n  |              ^^^^^^^^^^\n</code></pre>\n\n<p>Much more clear. The problem here is that you defined your function curried (i.e., <code>opMe x y op</code>), but then called it as if it were uncurried (i.e., <code>opMe (x, y, op)</code>). To fix it, pick one or the other and stick to it. Since currying is idiomatic in Haskell, let's go with it:</p>\n\n<pre><code>opMe :: Integer -&gt; Integer -&gt; String -&gt; Integer\nopMe x y op = if op ==\"+\" then x+y else undefined\n\nmain=do\n  let op = \"+\"\n  let x = 8\n  let y = 10\n  print(opMe x y op)\n</code></pre>\n\n\n\n<pre><code>18\n</code></pre>\n\n<p>And we're done! It works now.</p>\n"}], "owner": {"reputation": 1, "user_id": 6912640, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-HWBhx550DE4/AAAAAAAAAAI/AAAAAAAAAMc/ZOVp3VJAFJM/photo.jpg?sz=128", "display_name": "L0cus", "link": "https://stackoverflow.com/users/6912640/l0cus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 61, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1615150826, "creation_date": 1572044477, "last_edit_date": 1615150826, "question_id": 58566673, "link": "https://stackoverflow.com/questions/58566673/error-handling-incorrect-indention-haskell", "title": "Error Handling: Incorrect Indention Haskell", "body": "<p>I am having trouble with this simple code as it is giving me an error stating that there is an incorrect Indention.</p>\n<pre class=\"lang-hs prettyprint-override\"><code>    opMe x y op = if op ==&quot;+&quot; let x+y\n    \n    main=do\n      op = &quot;+&quot;\n      x = 8\n      y = 10\n      print(opMe (x, y, op))\n</code></pre>\n<p>The return I am looking for is 18.\nThe return I have received is Incorrect Indention.</p>\n"}, {"tags": ["haskell", "types", "dependent-type"], "answers": [{"comments": [{"owner": {"reputation": 767, "user_id": 814796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZQemO.jpg?s=128&g=1", "display_name": "madgen", "link": "https://stackoverflow.com/users/814796/madgen"}, "edited": false, "score": 0, "creation_date": 1572047887, "post_id": 58566736, "comment_id": 103452100, "body": "Yeah, I tried injective type families as well, but it still didn&#39;t get me anywhere..."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1572070289, "post_id": 58566736, "comment_id": 103454633, "body": "Injective type families are very weakly handled in Haskell. The injectivity property is not used at all during type checking <i>except</i> to accept some types which would otherwise be considered ambiguous. This is much less than what one would expect, i.e. to type check something like <code>foo :: F a ~ F b =&gt; a -&gt; b ; foo x = x</code> which is now rejected."}], "tags": [], "owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "is_accepted": true, "score": 2, "last_activity_date": 1572045805, "last_edit_date": 1572045805, "creation_date": 1572045108, "answer_id": 58566736, "question_id": 58566130, "link": "https://stackoverflow.com/questions/58566130/how-to-properly-wrap-over-a-datatype-indexed-by-an-inductive-datatype/58566736#58566736", "title": "How to properly wrap over a datatype indexed by an inductive datatype?", "body": "<p>Type families are non-injective, which technically means that you can't go from result to arguments, right to left. Except not. GHC 8.0 introduced <code>TypeFamilyDependencies</code>, which lets you specify injectivity for type families, like this:</p>\n\n<pre><code>type family Add (el :: k) (set :: Set k) = (set' :: Set k) | set' -&gt; el set where\n  Add el ('S xs) = 'S (el ': xs)\n</code></pre>\n\n<p>However, for some reason that I don't yet completely understand, this still doesn't work in your case, causing the same issue. I suspect it may have something to do with the fact that the list in question is double wrapped, not sure.</p>\n\n<p>But I do have another workaround: you can ditch the whole injectivity issue and specify your type family the other way around - from the list to the tuple. Except you'd need <em>two</em> type families - one for head and one for tail:</p>\n\n<pre><code>type family Head set where Head ('S (el ': xs)) = el\ntype family Tail set where Tail ('S (el ': xs)) = 'S xs\n\nuncons :: SSet set -&gt; (Proxy (Head set), SSet (Tail set))\nuncons (SS (x `SCons` xs)) = (x, SS xs)\n</code></pre>\n\n<p>But this seems a bit overengineered to me. If you just need to uncons these type sets, I would go with a good ol' type class, which has the unbeatable advantage of wrapping types and values together, so you don't have to jump through hoops to match them manually:</p>\n\n<pre><code>class Uncons set res | set -&gt; res  where\n    uncons :: SSet set -&gt; res\n\ninstance Uncons ('S (el ': xs)) (Proxy el, SSet ('S xs)) where\n    uncons (SS (x `SCons` xs)) = (x, SS xs)\n</code></pre>\n"}], "owner": {"reputation": 767, "user_id": 814796, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZQemO.jpg?s=128&g=1", "display_name": "madgen", "link": "https://stackoverflow.com/users/814796/madgen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 41, "favorite_count": 0, "accepted_answer_id": 58566736, "answer_count": 1, "score": 1, "last_activity_date": 1572045805, "creation_date": 1572039958, "question_id": 58566130, "link": "https://stackoverflow.com/questions/58566130/how-to-properly-wrap-over-a-datatype-indexed-by-an-inductive-datatype", "title": "How to properly wrap over a datatype indexed by an inductive datatype?", "body": "<p>I'm trying to thinly wrap around a singleton version of a list. I have trouble deconstructing it. Here's a minimal implementation:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE GADTs #-}\n{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE PolyKinds #-}\n{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE ExplicitForAll #-}\n\nmodule InductiveWrapper where\n\nimport Data.Kind (Type)\nimport Data.Proxy (Proxy)\n\nimport GHC.Prim (coerce)\n\ndata List a = Nil | Cons a (List a)\n\ndata SList :: [ k ] -&gt; Type where\n  SNil  ::                        SList '[]\n  SCons :: Proxy k -&gt; SList ks -&gt; SList (k ': ks)\n\nnewtype Set a = S [ a ]\n\ndata SSet :: Set k -&gt; Type where\n  SS :: SList xs -&gt; SSet ('S xs)\n\ntype family Add (el :: k) (set :: Set k) :: Set k where\n  Add el ('S xs) = 'S (el ': xs)\n\nuncons :: forall k (el :: k) (set :: Set k)\n        . SSet (Add el set) -&gt; (Proxy el, SSet set)\nuncons (SS (x `SCons` xs)) = (x, SS xs)\n</code></pre>\n\n<p>Here's the relevant bit of the error:</p>\n\n<pre><code>Could not deduce: set ~ 'S ks\n      from the context: Add el set ~ 'S xs\n        bound by a pattern with constructor:\n                   SS :: forall k (xs :: [k]). SList xs -&gt; SSet ('S xs),\n                 in an equation for \u2018uncons\u2019\n[...]\n or from: xs ~ (k1 : ks)\n        bound by a pattern with constructor:\n                   SCons :: forall k1 (k2 :: k1) (ks :: [k1]).\n                            Proxy k2 -&gt; SList ks -&gt; SList (k2 : ks),\n[...]\n\u2022 Relevant bindings include\n        xs :: SList ks (bound at InductiveWrapper.hs:37:29)\n        x :: Proxy k1 (bound at InductiveWrapper.hs:37:19)\n        xs' :: SList xs (bound at InductiveWrapper.hs:37:14)\n        s :: SSet (Add el set) (bound at InductiveWrapper.hs:37:8)\n</code></pre>\n\n<p>The problem as I understand is that <code>Add el set</code> gets stuck because the type checker doesn't understand that the only way <code>set</code> could be constructed is by using <code>'S</code>.</p>\n\n<p>How do I unstuck it or resolve this problem by other means? Apart from using <code>type</code> instead of <code>newtype</code>. The whole reason I'm doing this is to completely hide the use of <code>[ k ]</code> and <code>SList</code>.</p>\n"}, {"tags": ["haskell", "import", "operators", "type-families"], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 7, "last_activity_date": 1572647014, "last_edit_date": 1592644375, "creation_date": 1572037031, "answer_id": 58565640, "question_id": 58565505, "link": "https://stackoverflow.com/questions/58565505/import-a-type-family-that-is-an-operator-in-haskell/58565640#58565640", "title": "Import a type family that is an operator in Haskell", "body": "<p>From <a href=\"https://downloads.haskell.org/%7Eghc/latest/docs/html/users_guide/glasgow_exts.html#extension-TypeOperators\" rel=\"noreferrer\">the manual</a>:</p>\n<blockquote>\n<p>There is now some potential ambiguity in import and export lists; for example if you write <code>import M( (+) )</code> do you mean the function <code>(+)</code> or the type constructor <code>(+)</code>? The default is the former, but with <code>ExplicitNamespaces</code> (which is implied by <code>TypeOperators</code>) GHC allows you to specify the latter by preceding it with the keyword type, thus:</p>\n<pre><code>import M( type (+) )\n</code></pre>\n</blockquote>\n"}], "owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 140, "favorite_count": 0, "accepted_answer_id": 58565640, "answer_count": 1, "score": 4, "last_activity_date": 1572647014, "creation_date": 1572036274, "question_id": 58565505, "link": "https://stackoverflow.com/questions/58565505/import-a-type-family-that-is-an-operator-in-haskell", "title": "Import a type family that is an operator in Haskell", "body": "<p><code>GHC.TypeNats</code> exports type family of the following signature:</p>\n\n<pre><code>type family (m :: Nat) + (n :: Nat) :: Nat \n</code></pre>\n\n<p>How can I import it explicitly? <code>import GHC.TypeNats((+))</code> does not work, because it says that <code>GHC.TypeNats</code> does not export <code>(+)</code>...</p>\n\n<p>Everything compiles okay when I import whole module implicitly, but this really is not what I want to have in my code. </p>\n\n<hr>\n\n<p>I am using GHC 8.6.5</p>\n"}, {"tags": ["haskell", "huffman-code"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1572027458, "post_id": 58563701, "comment_id": 103446123, "body": "Can you show one of these awkward implementations?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1572027637, "post_id": 58563701, "comment_id": 103446195, "body": "@WillemVanOnsem, it&#39;s the <i>group</i> that satisfies the predicate. This is an inherently inefficient function."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1572027672, "post_id": 58563701, "comment_id": 103446214, "body": "@dfeuer: yes, but not per se a non-lazy one :)"}, {"owner": {"reputation": 800, "user_id": 2201526, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/62aea8cbdb14cba828e2bbaa52122b54?s=128&d=identicon&r=PG", "display_name": "composerMike", "link": "https://stackoverflow.com/users/2201526/composermike"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1572028053, "post_id": 58563701, "comment_id": 103446376, "body": "@WillemVanOnsem I never got any of them to work, hence didn&#39;t bother to copy in. But it could be instructive."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1572028086, "post_id": 58563701, "comment_id": 103446392, "body": "@composerMike: the fact that these do not (fully) work is not that important. Usually it helps to show what can be improved :)"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1572030516, "post_id": 58563701, "comment_id": 103447346, "body": "What should <code>takeChunkUntil</code> return if the predicate is never satisfied?"}], "answers": [{"comments": [{"owner": {"reputation": 800, "user_id": 2201526, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/62aea8cbdb14cba828e2bbaa52122b54?s=128&d=identicon&r=PG", "display_name": "composerMike", "link": "https://stackoverflow.com/users/2201526/composermike"}, "edited": false, "score": 1, "creation_date": 1572029042, "post_id": 58563824, "comment_id": 103446773, "body": "Thanks for great idea with zipping the inits and tails. Are inits and tails lazy? They must be. I think you put <code>find (p . fst)</code> into the hole, right? Thanks for giving as hint. Much more fun!"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1572029749, "post_id": 58563824, "comment_id": 103447046, "body": "You don&#39;t really need <code>Maybe</code>, do you? I don&#39;t think there&#39;s any difference between <code>(x, [])</code> and <code>Nothing</code> for input list <code>x</code>."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1572029867, "post_id": 58563824, "comment_id": 103447089, "body": "@chepner There&#39;s certainly a difference, namely: <code>Just (x, [])</code> says that <code>x</code> satisfies the predicate, while <code>Nothing</code> says it doesn&#39;t."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1572030458, "post_id": 58563824, "comment_id": 103447321, "body": "I&#39;m thinking of the function as being more like <code>take</code>, i.e. <code>take n == fst . takeChunkUntil (\\ys -&gt; length ys == n)</code>; if you reach the end of the list without satisfying the predicate, you just take the entire list."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1572031204, "post_id": 58563824, "comment_id": 103447629, "body": "@chepner, I would want to see the use case for this function to know which of these two boundary options to use."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 1, "creation_date": 1572031592, "post_id": 58563824, "comment_id": 103447791, "body": "@luqui Agreed. The description in the question is vague, implying that a satisfactory prefix exists."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 3, "last_activity_date": 1572027823, "creation_date": 1572027823, "answer_id": 58563824, "question_id": 58563701, "link": "https://stackoverflow.com/questions/58563701/how-do-i-make-this-function-consume-its-input-bit-stream-lazily/58563824#58563824", "title": "How do I make this function consume its input bit stream lazily?", "body": "<p>Here's a hint. I've swapped the argument order to get something more idiomatic, and I've changed the result type to reflect the fact that you may not find an acceptable chunk.</p>\n\n<pre><code>import Data.List (inits, tails)\n\ntakeChunkUntil :: ([a] -&gt; Bool) -&gt; [a] -&gt; Maybe ([a], [a])\ntakeChunkUntil p as = _ $ zip (inits as) (tails as)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 2, "last_activity_date": 1572028505, "creation_date": 1572028505, "answer_id": 58563970, "question_id": 58563701, "link": "https://stackoverflow.com/questions/58563701/how-do-i-make-this-function-consume-its-input-bit-stream-lazily/58563970#58563970", "title": "How do I make this function consume its input bit stream lazily?", "body": "<p>We can use explicit recursion here, where if the predicate is satisfied, we prepend to the first item of the tuple. If not, we make a 2-tuple where we put the (remaining) list in the second item of the 2-tuple. For example:</p>\n\n<pre><code>import Control.Arrow(first)\n\ntakeChunkUntil :: ([a] -&gt; Bool) -&gt; [a] -&gt; ([a], [a])\ntakeChunkUntil p = go []\n    where go _ [] = ([], [])\n          go gs xa@(x:xs) | not (p (x:gs)) = first (x:) (go (x:gs) xs)\n                          | otherwise = ([], xa)\n</code></pre>\n\n<p>We here make the assumption that the order of the elements in the group is not relevant to the predicate (since we each time pass the list in reverse order). If that is relevant, we can use a <em>difference list</em> for example. I leave that as an exercise.</p>\n\n<p>This works on an infinite list as well, for example:</p>\n\n<pre><code>Prelude Control.Arrow&gt; take 10 (fst (takeChunkUntil (const False) (repeat 1)))\n[1,1,1,1,1,1,1,1,1,1]\n</code></pre>\n"}], "owner": {"reputation": 800, "user_id": 2201526, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/62aea8cbdb14cba828e2bbaa52122b54?s=128&d=identicon&r=PG", "display_name": "composerMike", "link": "https://stackoverflow.com/users/2201526/composermike"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 198, "favorite_count": 0, "answer_count": 2, "score": 7, "last_activity_date": 1572103233, "creation_date": 1572027285, "last_edit_date": 1572103233, "question_id": 58563701, "link": "https://stackoverflow.com/questions/58563701/how-do-i-make-this-function-consume-its-input-bit-stream-lazily", "title": "How do I make this function consume its input bit stream lazily?", "body": "<p>I'm imagining a function like</p>\n\n<p><code>takeChunkUntil :: [a] -&gt; ([a] -&gt; Bool) -&gt; ([a], [a])</code></p>\n\n<p>Hopefully lazy.</p>\n\n<p>It takes elements from the first list until the group of them satisfies the predicate, then returns that sublist as well as the remaining elements. </p>\n\n<p><b>TO ANSWER SOME QUESTIONS:</b><br>\nThe ultimate goal is to make something that reads <a href=\"https://en.wikipedia.org/wiki/Huffman_coding\" rel=\"nofollow noreferrer\">Huffman codes</a> lazily. So if you have a string of bits, here represented as Bool, <code>bs</code>, you can write <code>take n $ decode huffmanTree bs</code> to take the first n coded values while consuming only as much of <code>bs</code> as necessary. If you would like I'll post more details and my attempted solutions. This could get long :) (Note I'm a tutor who was given this problem by a student, but I didn't try to help him as it was beyond me, however I'm very curious now.)</p>\n\n<p><b>CONTINUED:</b> Here goes the whole thing:</p>\n\n<p>Definition of Huffman tree:</p>\n\n<pre><code>data BTree a = Leaf a | Fork (BTree a) (BTree a) deriving (Show, Eq)\n</code></pre>\n\n<p>Goal: write a lazy decode function that returns a pair of the decoded values and a Boolean indicating if there were any values left over that were not fully long enough to be decoded into a value. Note: we are using Bool to represent a bit: True =1, False = 0.</p>\n\n<pre><code>decode :: BTree a -&gt; [Bool] -&gt; ([a], Bool)\n</code></pre>\n\n<p>Here's the essence: The first function I wrote was a function that decodes one value. Returns Nothing if the input list was empty, otherwise returns the decoded value and the remaining \"bit\".</p>\n\n<pre><code>decode1 :: BTree a -&gt; [Bool] -&gt; Maybe (a, [Bool])\ndecode1 (Leaf v) bs = Just (v, bs)\ndecode1 _ [] = Nothing\ndecode1 (Fork left right) (b:bs) \n  | b         = decode1 right bs\n  | otherwise = decode1 left bs\n</code></pre>\n\n<p>First, I figured that I needed some kind of tail recursion to make this lazy. Here's what <em>doesn't</em> work. I think it doesn't, anyway. Notice how it's recursive, but I'm passing a list of \"symbols decoded so far\" and appending the new one. Inefficient and maybe (if my understanding is right) won't lead to tail recursion.</p>\n\n<pre><code>decodeHelp :: BTree a -&gt; [a] -&gt; [Bool] -&gt; ([a],Bool)\ndecodeHelp t symSoFar bs = case decode1 t bs of\n    Nothing -&gt; (symSoFar,False)\n    Just (s,remain) -&gt; decodeHelp t (symSoFar ++ [s]) remain\n</code></pre>\n\n<p>So I thought, how can I write a better kind of recursion in which I decode a symbol and append it to the next call? The key is to return a list of [Maybe a], in which <code>Just a</code> is a successfully decoded symbol and <code>Nothing</code> means no symbol could be decoded (i.e. remaining booleans were not sufficient)</p>\n\n<pre><code>decodeHelp2 :: BTree a -&gt; [Bool] -&gt; [Maybe a]\ndecodeHelp2 t bs = case decode1 t bs of\n    Nothing -&gt; [Nothing]\n    Just (s, remain) -&gt; case remain of\n        [] -&gt; []\n        -- in the following line I can just cons Just s onto the\n        -- recursive call. My understand is that's what make tail\n        -- recursion work and lazy.\n        _  -&gt; Just s : decodeHelp2 t remain \n</code></pre>\n\n<p>But obviously this is not what the problem set wants out of the result. How can I turn all these <code>[Maybe a]</code> into a <code>([a], Bool)</code>? My first thought was to apply <code>scanl</code></p>\n\n<p>Here's the scanning function. It accumulates <code>Maybe a</code> into <code>([a], Bool)</code></p>\n\n<pre><code>sFunc :: ([a], Bool) -&gt; Maybe a -&gt; ([a], Bool)\nsFunc (xs, _) Nothing = (xs, False)\nsFunc (xs, _) (Just x) = (xs ++ [x], True)\n</code></pre>\n\n<p>Then you can write</p>\n\n<pre><code>decodeSortOf :: BTree a -&gt; [Bool] -&gt; [([a], Bool)]\ndecodeSortOf t bs = scanl sFunc ([],True) (decodeHelp2 t bs)\n</code></pre>\n\n<p>I verified this works and is lazy:</p>\n\n<p><code>take 3 $ decodeSortOf xyz_code [True,False,True,True,False,False,False,error \"foo\"]</code> gives <code>[(\"\",True),(\"y\",True),(\"yz\",True)]</code></p>\n\n<p>But this is not the desired result. Help, I'm stuck!</p>\n"}, {"tags": ["haskell", "category-theory"], "comments": [{"owner": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "edited": false, "score": 5, "creation_date": 1572015554, "post_id": 58560909, "comment_id": 103440989, "body": "Have you done any research?"}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "reply_to_user": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "edited": false, "score": 0, "creation_date": 1572015809, "post_id": 58560909, "comment_id": 103441124, "body": "@M.Aroosi of course <a href=\"https://en.wikipedia.org/wiki/Functor\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/Functor</a>. But how to interpret it in Haskell?"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1572016134, "post_id": 58560909, "comment_id": 103441292, "body": "<a href=\"https://hackage.haskell.org/package/transformers-0.3.0.0/docs/Data-Functor-Identity.html\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/transformers-0.3.0.0/docs/&hellip;</a>"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1572020390, "post_id": 58560909, "comment_id": 103443351, "body": "From wikipedia: &quot;[The identity functor] maps an object to itself and a morphism to itself.&quot; The objects here are types. Can you define a type constructor <code>data Identity a = ...</code> that maps any type to itself, and if so, define a <code>Functor</code> instance for that type?"}], "answers": [{"tags": [], "owner": {"reputation": 151, "user_id": 11942834, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/70f181df0083ec8a2bbf29f470deec50?s=128&d=identicon&r=PG&f=1", "display_name": "elikoga", "link": "https://stackoverflow.com/users/11942834/elikoga"}, "is_accepted": true, "score": 3, "last_activity_date": 1572016175, "creation_date": 1572016175, "answer_id": 58561187, "question_id": 58560909, "link": "https://stackoverflow.com/questions/58560909/how-the-identity-functor-looks-like/58561187#58561187", "title": "How the identity functor looks like?", "body": "<p>Yes, the identity functor exists:</p>\n\n<p>From the documentation:</p>\n\n<blockquote>\n  <p>The identity functor and monad.</p>\n  \n  <p>This trivial type constructor serves two purposes:</p>\n  \n  <ul>\n  <li>It can be used with functions parameterized by functor or monad classes.</li>\n  <li>It can be used as a base monad to which a series of monad transformers may be applied to construct a composite monad. Most monad transformer modules include the special case of applying the transformer to Identity. For example, State s is an abbreviation for StateT s Identity.</li>\n  </ul>\n</blockquote>\n\n<p><a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Functor-Identity.html\" rel=\"nofollow noreferrer\">https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Functor-Identity.html</a></p>\n\n<p>The definition in the source is here: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/src/Data.Functor.Identity.html\" rel=\"nofollow noreferrer\">https://hackage.haskell.org/package/base-4.12.0.0/docs/src/Data.Functor.Identity.html</a></p>\n"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 154, "favorite_count": 0, "accepted_answer_id": 58561187, "answer_count": 1, "score": -5, "last_activity_date": 1572016175, "creation_date": 1572015220, "question_id": 58560909, "link": "https://stackoverflow.com/questions/58560909/how-the-identity-functor-looks-like", "title": "How the identity functor looks like?", "body": "<p>In Haskell there is an identity function, that just return the feeded value.  </p>\n\n<pre><code>id :: a -&gt; a \n</code></pre>\n\n<p>There is also the identity functor and how such a functor is defined in Haskell?</p>\n"}, {"tags": ["haskell", "ghc", "megaparsec"], "comments": [{"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 1, "creation_date": 1572015587, "post_id": 58560791, "comment_id": 103441010, "body": "It looks like the fundep wants <code>s</code> to follow from <code>m</code>, so you can&#39;t have different <code>s</code> (<code>String</code> or <code>ByteString</code>) for the same <code>m</code>. Have you tried fixing <code>m</code> instead, like <code>m ~ Parsec e ByteString a</code>?"}, {"owner": {"reputation": 2824, "user_id": 187223, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9ab705e8ee51d24c8e52192f7fde8d76?s=128&d=identicon&r=PG", "display_name": "James Brock", "link": "https://stackoverflow.com/users/187223/james-brock"}, "reply_to_user": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1572015931, "post_id": 58560791, "comment_id": 103441189, "body": "@fyodor-soykin I have tried fixing <code>m</code> in ways similar to what you suggest, and I still can&#39;t get it to build, and even if it did build it wouldn&#39;t be quite right because I want this to work for all of the instances of <code>MonadParsec</code>, not just <code>ParsecT</code>."}, {"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 1, "creation_date": 1572016525, "post_id": 58560791, "comment_id": 103441531, "body": "Do you have to have a <code>RULE</code>? Can you do a type class instead?"}, {"owner": {"reputation": 2824, "user_id": 187223, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9ab705e8ee51d24c8e52192f7fde8d76?s=128&d=identicon&r=PG", "display_name": "James Brock", "link": "https://stackoverflow.com/users/187223/james-brock"}, "reply_to_user": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1572016685, "post_id": 58560791, "comment_id": 103441619, "body": "@FyodorSoikin I&#39;m willing to try any solution, but I don&#39;t want to change the public API type signature of <code>combin</code> in any way. I don&#39;t want to add any special class constraints to the public API."}, {"owner": {"reputation": 2824, "user_id": 187223, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9ab705e8ee51d24c8e52192f7fde8d76?s=128&d=identicon&r=PG", "display_name": "James Brock", "link": "https://stackoverflow.com/users/187223/james-brock"}, "reply_to_user": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1572016763, "post_id": 58560791, "comment_id": 103441664, "body": "<a href=\"https://stackoverflow.com/questions/19745038/ghc-rewrite-rule-specialising-a-function-for-a-type-class\" title=\"ghc rewrite rule specialising a function for a type class\">stackoverflow.com/questions/19745038/&hellip;</a>"}, {"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 2, "creation_date": 1572017002, "post_id": 58560791, "comment_id": 103441801, "body": "Yes, you can totally use <code>ifcxt</code>"}], "answers": [{"tags": [], "owner": {"reputation": 2824, "user_id": 187223, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9ab705e8ee51d24c8e52192f7fde8d76?s=128&d=identicon&r=PG", "display_name": "James Brock", "link": "https://stackoverflow.com/users/187223/james-brock"}, "is_accepted": true, "score": 0, "last_activity_date": 1572176286, "last_edit_date": 1572176286, "creation_date": 1572101830, "answer_id": 58571916, "question_id": 58560791, "link": "https://stackoverflow.com/questions/58560791/functional-dependency-with-specialization-rule/58571916#58571916", "title": "Functional dependency with specialization rule", "body": "<p>This rule works, but only for GHC 8.8.1, not for GHC 8.6.5.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE TypeApplications #-}\n\n{-# RULES \"combin/ByteString\" forall e. forall. \n    combin @e @B.ByteString = combinByteString @e @B.ByteString\n#-}\n</code></pre>\n\n<p>This rule works with GHC 8.6.5 and 8.0.2</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# RULES \"combin/ByteString\"\n forall (pa :: ParsecT e B.ByteString m a).\n combin @e @B.ByteString @(ParsecT e B.ByteString m) @a pa = \n combinByteString @e @B.ByteString @(ParsecT e B.ByteString m) @a pa\n#-}\n</code></pre>\n"}], "owner": {"reputation": 2824, "user_id": 187223, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9ab705e8ee51d24c8e52192f7fde8d76?s=128&d=identicon&r=PG", "display_name": "James Brock", "link": "https://stackoverflow.com/users/187223/james-brock"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 87, "favorite_count": 0, "accepted_answer_id": 58571916, "answer_count": 1, "score": 4, "last_activity_date": 1572176286, "creation_date": 1572014828, "question_id": 58560791, "link": "https://stackoverflow.com/questions/58560791/functional-dependency-with-specialization-rule", "title": "Functional dependency with specialization rule", "body": "<p>I want to write a <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#specialisation\" rel=\"nofollow noreferrer\">specialization rewrite rule</a> \nfor a Megaparsec combinator so that the rule only fires when the input type is a <code>ByteString</code>.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE ExplicitForAll #-}\n{-# LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE TypeFamilies #-}\n\nimport Data.Void\nimport Text.Megaparsec\nimport qualified Data.ByteString as B\n\ncombin :: forall e s m a. (MonadParsec e s m)\n    =&gt; m a\n    -&gt; m a\ncombin = label \"String generic\"\n\ncombinByteString :: forall e s m a. (MonadParsec e s m, s ~ B.ByteString)\n    =&gt; m a\n    -&gt; m a\ncombinByteString = label \"ByteString specialized\"\n\nmain = do\n    parseTest (combin empty :: Parsec Void String String) \"\"\n    parseTest (combin empty :: Parsec Void B.ByteString String) \"\"\n\n{-# NOINLINE combin #-}\n{-# NOINLINE combinByteString #-}\n{-# RULES \"combin/ByteString\" combin = combinByteString #-}\n\n</code></pre>\n\n<p>When I try to build this it fails:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ cabal v2-run\nBuild profile: -w ghc-8.6.5 -O1\nMain.hs:25:40: error:\n    \u2022 Couldn't match type \u2018s\u2019 with \u2018B.ByteString\u2019\n        arising from a functional dependency between constraints:\n          \u2018MonadParsec e B.ByteString m\u2019\n            arising from a use of \u2018combinByteString\u2019 at Main.hs:25:40-55\n          \u2018MonadParsec e s m\u2019\n            arising from the RULE \"combin/ByteString\" at Main.hs:25:11-55\n      \u2018s\u2019 is a rigid type variable bound by\n        the RULE \"combin/ByteString\"\n        at Main.hs:25:11-55\n    \u2022 In the expression: combinByteString\n      When checking the transformation rule \"combin/ByteString\"\n   |\n25 | {-# RULES \"combin/ByteString\" combin = combinByteString #-}\n</code></pre>\n\n<p>The input stream type parameter <code>s</code> of <a href=\"http://hackage.haskell.org/package/megaparsec-7.0.5/docs/Text-Megaparsec.html#t:MonadParsec\" rel=\"nofollow noreferrer\"><code>MonadParsec</code></a> has a <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#functional-dependencies\" rel=\"nofollow noreferrer\">functional dependency</a> on the <code>Monad</code> parameter <code>m</code>. </p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>class (Stream s, MonadPlus m) =&gt; MonadParsec e s m | m -&gt; e s where\n</code></pre>\n\n<p>Here's a <code>specialize.cabal</code> file for trying the build.</p>\n\n<pre><code>cabal-version:       &gt;=1.10\nname:                specialize\nversion:             0.1.0.0\nbuild-type:          Simple\n\nexecutable specialize\n  main-is:             Main.hs\n  build-depends:       base &gt;= 4\n                      ,megaparsec\n                      ,bytestring\n  default-language:    Haskell2010\n</code></pre>\n\n<p>If successful, the output should look like this:</p>\n\n<pre><code>1:1:\n  |\n1 | &lt;empty line&gt;\n  | ^\nexpecting String generic\n1:1:\n  |\n1 | &lt;empty line&gt;\n  | ^\nexpecting ByteString specialized\n</code></pre>\n\n<p>Advice?</p>\n"}, {"tags": ["haskell", "profiling", "ghc"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1572030106, "post_id": 58560775, "comment_id": 103447181, "body": "I don&#39;t know. But you&#39;re going to have a much better time if you set things up so that you can run your test without user interaction anyway (e.g. by mocking that interaction and supplying a fixed list of user inputs, if necessary). I bet you&#39;re going to want to run this experiment a lot of times; the more frictionless one run of the experiment is, the better your experience of fixing this thing will be."}], "owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 54, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1572014769, "creation_date": 1572014769, "question_id": 58560775, "link": "https://stackoverflow.com/questions/58560775/how-do-i-profile-a-haskell-program-by-cpu-time", "title": "How do I profile a Haskell program by CPU time?", "body": "<p>I've got an interactive GHC program based on <a href=\"https://hackage.haskell.org/package/gi-gtk\" rel=\"nofollow noreferrer\">GTK</a>. One of the interactive functions is running strangely slowly and I'd like to profile it to find out why. However AFAICT GHC time profiling doesn't distinguish between a busy CPU and being suspended waiting for user input. Is it possible to tell GHC to only count actual CPU time instead of wall-clock time?</p>\n"}, {"tags": ["haskell", "category-theory"], "comments": [{"owner": {"reputation": 506, "user_id": 10863327, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0e1604b54844ca72235865e7bb3bf1ca?s=128&d=identicon&r=PG&f=1", "display_name": "Kyle Parsons", "link": "https://stackoverflow.com/users/10863327/kyle-parsons"}, "edited": false, "score": 0, "creation_date": 1572013640, "post_id": 58560222, "comment_id": 103439920, "body": "The constant functor maps every object in the source category to a single object in the destination category.  It maps every morphism to the identity morphism on that single object."}], "answers": [{"comments": [{"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1572014837, "post_id": 58560478, "comment_id": 103440591, "body": "what is the <code>identity function on r</code>. I can not see it."}, {"owner": {"reputation": 3203, "user_id": 2622234, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/a4b0faa804acdb74ea677bc421d5caac?s=128&d=identicon&r=PG", "display_name": "sara", "link": "https://stackoverflow.com/users/2622234/sara"}, "reply_to_user": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 2, "creation_date": 1572015126, "post_id": 58560478, "comment_id": 103440762, "body": "The identity function is <code>id x = x</code>. What I&#39;m referring to is the fact that <code>fmap f (Const r) == id (Const r) == Const r</code> for all possible pairs of <code>f</code> and <code>r</code>"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1572015496, "post_id": 58560478, "comment_id": 103440958, "body": "@sara Not quite; the function doesn&#39;t change the wrapped value, but it does change the type. If <code>f :: t1 -&gt; t2</code> and <code>v :: Const a t1</code>, then <code>fmap f v :: Const a t2</code>, but <code>id v :: Const a t1</code>."}, {"owner": {"reputation": 3203, "user_id": 2622234, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/a4b0faa804acdb74ea677bc421d5caac?s=128&d=identicon&r=PG", "display_name": "sara", "link": "https://stackoverflow.com/users/2622234/sara"}, "edited": false, "score": 0, "creation_date": 1572016351, "post_id": 58560478, "comment_id": 103441424, "body": "I choose to adopt the categorical view that &quot;equal up to isomorphism&quot; is quite close enough to equal :p"}, {"owner": {"reputation": 3203, "user_id": 2622234, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/a4b0faa804acdb74ea677bc421d5caac?s=128&d=identicon&r=PG", "display_name": "sara", "link": "https://stackoverflow.com/users/2622234/sara"}, "edited": false, "score": 0, "creation_date": 1572016435, "post_id": 58560478, "comment_id": 103441483, "body": "Or in haskell land, equal up to safe coercion!"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1572024631, "post_id": 58560478, "comment_id": 103445037, "body": "@sara It&#39;s an important point, though, because it explains why you can&#39;t simply define <code>fmap _ = id</code>. (A question on this point <a href=\"https://stackoverflow.com/q/58494308/1126841\">came up</a> just a few days ago.)"}], "tags": [], "owner": {"reputation": 3203, "user_id": 2622234, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/a4b0faa804acdb74ea677bc421d5caac?s=128&d=identicon&r=PG", "display_name": "sara", "link": "https://stackoverflow.com/users/2622234/sara"}, "is_accepted": true, "score": 7, "last_activity_date": 1572013697, "creation_date": 1572013697, "answer_id": 58560478, "question_id": 58560222, "link": "https://stackoverflow.com/questions/58560222/what-is-a-constant-functor/58560478#58560478", "title": "What is a Constant functor?", "body": "<p>A constant functor is a functor whose object function is a constant function. In haskell:</p>\n\n<pre><code>newtype Const r a = Const { unConst :: r }\n\ninstance Functor (Const r) where\n  fmap _ (Const r) = Const r\n</code></pre>\n\n<p>It maps every type <code>a</code> to <code>r</code> in a sense, and every function of type <code>a -&gt; b</code> to the identity function on <code>r</code></p>\n\n<p>It is good for similar things that the <code>const</code> function is good for! Passing to higher order functions, etc.</p>\n\n<p>One interesting use case is in the definition of lens based getters. </p>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 3, "last_activity_date": 1572025249, "last_edit_date": 1572025249, "creation_date": 1572013735, "answer_id": 58560489, "question_id": 58560222, "link": "https://stackoverflow.com/questions/58560222/what-is-a-constant-functor/58560489#58560489", "title": "What is a Constant functor?", "body": "<p>From <code>Data.Functor.Const</code>:</p>\n\n<pre><code>newtype Const a b = Const { getConst :: a } deriving Show\n</code></pre>\n\n<p><code>Const a b</code> is a type that holds a value of type <code>a</code>, but \"tagged\" with type <code>b</code> as well. Given that <code>Const</code> has type <code>Type -&gt; Type -&gt; Type</code>, it itself is not a functor, but <code>Const a</code> is for any given type <code>a</code>.</p>\n\n<pre><code>instance Functor (Const m) where\n    fmap _ (Const v) = Const v\n</code></pre>\n\n<p>No matter what function you apply, it is ignored and the original value is returned, though with a (possibly) new type.</p>\n\n<hr>\n\n<p>As an example, let's create a value involving a <code>Char</code>. The argument sets the first type, leaving the second type unconstrained.</p>\n\n<pre><code>&gt; v = Const 'c'\n&gt; v\nConst {getConst = 'c'}\n&gt; :t v\nv :: Const Char b\n</code></pre>\n\n<p>Mapping a function over <code>v</code> constrains the second type to be the return value of that function.</p>\n\n<pre><code>&gt; fmap (+1) v\nConst {getConst = 'c'}\n&gt; :t fmap (+1) v\nfmap (+1) v :: Num b =&gt; Const Char b\n</code></pre>\n\n<p>Mapping a different function works the same, but constrains the second type in a different way, again consistent with the return value of the function.</p>\n\n<pre><code>&gt; fmap (++\"foo\") v\nConst {getConst = 'c'}\n&gt; :t fmap (++\"foo\") v\nfmap (++\"foo\") v :: Const Char [Char]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 4, "last_activity_date": 1572013893, "creation_date": 1572013893, "answer_id": 58560535, "question_id": 58560222, "link": "https://stackoverflow.com/questions/58560222/what-is-a-constant-functor/58560535#58560535", "title": "What is a Constant functor?", "body": "<p>Like with constant functions: a constant functor is any functor that \u201cignores\u201d its parameter, and furthermore has a trivial <code>fmap</code> operation.</p>\n\n<p>In Haskell, what this means is that every value <code>F a</code> contains only data that doesn't contain <code>a</code> in any way. I.e., it's just <em>some other fixed type</em>, say <code>R</code>. Clearly, this could be <em>any</em> type, so the actual <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Applicative.html#t:Const\" rel=\"nofollow noreferrer\">standard <code>Const</code> functor</a> has this as another parameter:</p>\n\n<pre><code>newtype Const r x = Const { getConst :: r }\n</code></pre>\n\n<p>This is a (<strong>Hask</strong>-endo-)functor because it maps any type <code>x</code> to another type <code>Const r x</code> \u2013 which is actually isomorphic to just <code>r</code>. And <code>fmap</code>ping, which should change only the <code>x</code> values within the <code>Const r x</code> structure... well, there are none, so nothing is changed.</p>\n\n<pre><code>instance Functor (Const r) where\n  fmap _ (Const r) = Const r\n</code></pre>\n"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 437, "favorite_count": 0, "accepted_answer_id": 58560478, "answer_count": 3, "score": 2, "last_activity_date": 1572025249, "creation_date": 1572012704, "question_id": 58560222, "link": "https://stackoverflow.com/questions/58560222/what-is-a-constant-functor", "title": "What is a Constant functor?", "body": "<p>I am trying to understand <strong>Constant Functor</strong> from the <a href=\"https://en.wikipedia.org/wiki/Functor\" rel=\"nofollow noreferrer\">https://en.wikipedia.org/wiki/Functor</a> website and can not imaging visually. </p>\n\n<p>It would be also good, if someone can show it as a haskell code, what a <strong>Constant Functor</strong> is and for what is good for.</p>\n"}, {"tags": ["haskell", "functional-programming", "algebraic-data-types"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1572012025, "post_id": 58560010, "comment_id": 103439000, "body": "If you have a data constructor like <code>data SomeData x y = SomeData x y</code>, with <code>x</code> and <code>y</code> two types, then the number of <code>SomeData</code> items you can construct is <code>|x| * |y|</code>, a sum type, like <code>data SomeData x y = Foo x | Bar y</code>, means the number of <code>SomeData</code>s you can construct is <code>|x| + |y|</code>."}], "answers": [{"tags": [], "owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "is_accepted": true, "score": 8, "last_activity_date": 1572014906, "creation_date": 1572014906, "answer_id": 58560814, "question_id": 58560010, "link": "https://stackoverflow.com/questions/58560010/why-sum-of-products-can-be-viewed-as-normal-form-in-algebraic-data-types/58560814#58560814", "title": "Why sum of products can be viewed as normal form in algebraic data types?", "body": "<p>Let's declare ourselves some types to represent the numbers:</p>\n\n<pre><code>data Two = OneOfTwo | TwoOfTwo\ndata Three = OneOfThree | TwoOfThree | ThreeOfThree\ndata Four = ... (similar)\n</code></pre>\n\n<p>Now we can see that the number of possible values of type <code>Two</code> is, in fact, <code>2</code>. Same for <code>Three</code>, <code>Four</code>, and <code>Seven</code>.</p>\n\n<p>Now if we construct a sum type:</p>\n\n<pre><code>data A = A Two\n</code></pre>\n\n<p>This type just straight up wraps a value of <code>Two</code>, so the number of possible values of <code>A</code> is also <code>2</code>. So far so good?</p>\n\n<p>Now let's construct a more complex one:</p>\n\n<pre><code>data B = B1 Three | B2 Four\n</code></pre>\n\n<p>Now, this type wraps <em>either</em> a value of type <code>Three</code> <em>or</em> a value of type <code>Four</code> (but not both at the same time!) This means that the number of possible values would be <code>3 + 4</code>. Following so far?</p>\n\n<p>Now, going further:</p>\n\n<pre><code>data C = C Two B\n</code></pre>\n\n<p>This type wraps two values <em>at the same time</em> - one value of type <code>Two</code> and one value of type <code>B</code>. This means that the number of possible values of <code>C</code> is the number of possible combinations of <code>Two</code> and <code>B</code>, which, as we know from middle-school mathematics, would be their product, or <code>2 * (3 + 4) = 2 * (7) = 14</code>.</p>\n\n<p>But here's the trick: we can write down an <em>equivalent</em> type in a different way:</p>\n\n<pre><code>data CNew = C1 Two Three | C2 Two Four\n</code></pre>\n\n<p>See what I did there? For <code>CNew</code>, the set of all possible combinations between values of <code>Two</code>, <code>Three</code>, and <code>Four</code> is the same as for <code>C</code>. Look: in both cases it's either a value of <code>Two</code> combined with a value of <code>Three</code>, or it's a value of <code>Two</code> combined with a value of <code>Four</code>. Except in <code>CNew</code> they're combined directly, but in <code>C</code> they're combined via <code>B</code>.</p>\n\n<p>But the formula for <code>CNew</code> would be different: <code>2 * 3 + 2 * 4 = (6) + (8) = 14</code>. This is what the book means.</p>\n\n<p>Now to answer this bit more directly: </p>\n\n<blockquote>\n  <p>Is sum of products (2 * 3 + 2 * 4) a normal form? This expression can be reduced further more because fully reduced expression would be 14</p>\n</blockquote>\n\n<p>This would be true if we were dealing with integer numbers, but we're not. We can rewrite <code>C</code> in the form of <code>CNew</code>, because that gives us all the same possible combinations of values. But we cannot rewrite them as a type that has straight up 14 possible values without combining <code>2</code>, <code>3</code>, and <code>4</code>. That would be a completely new, unrelated type, as opposed to a combination of <code>Two</code>, <code>Three</code>, and <code>Four</code>.</p>\n\n<p>And a possible terminology misunderstanding:</p>\n\n<blockquote>\n  <p>Is sum of products (2 * 3 + 2 * 4) a normal form?</p>\n</blockquote>\n\n<p>The term \"normal form\" doesn't mean \"the shortest\". This term is usually used to denote a form that is very regular, and therefore easier to work with, and, crucially, that can represent all possible cases in the domain. In this case, normal form is defined as a \"sum of products\". </p>\n\n<p>Could it be a \"product of sums\" instead? No, it couldn't, because, while a product of sums can <em>always</em> be converted to a sum of products, the reverse is not always possible, and this means that not every possible type would be representable in the normal form defined as \"product of sums\".</p>\n\n<p>Could it be \"just the number of possible values\", like <code>14</code>? Again no, because converting to such form loses some information (see above).</p>\n"}], "owner": {"reputation": 440, "user_id": 9304999, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3970fc1fd87d29ff362f86310cce7b06?s=128&d=identicon&r=PG&f=1", "display_name": "jinbeom hong", "link": "https://stackoverflow.com/users/9304999/jinbeom-hong"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 186, "favorite_count": 1, "accepted_answer_id": 58560814, "answer_count": 1, "score": 2, "last_activity_date": 1572014906, "creation_date": 1572011903, "last_edit_date": 1572012505, "question_id": 58560010, "link": "https://stackoverflow.com/questions/58560010/why-sum-of-products-can-be-viewed-as-normal-form-in-algebraic-data-types", "title": "Why sum of products can be viewed as normal form in algebraic data types?", "body": "<p>I am reading a <a href=\"http://haskellbook.com/index.html\" rel=\"nofollow noreferrer\">haskell book</a> (page 412). In this book, there is an explanation about normal form for sum of products:</p>\n\n<blockquote>\n  <p>All the existing algebraic rules for products and sums apply in type systems, and that includes the distributive property. Let\u2019s take a look at how that works in arithmetic:</p>\n</blockquote>\n\n<pre><code>2 * (3 + 4)\n2 * (7)\n14\n</code></pre>\n\n<blockquote>\n  <p>We can rewrite this with the multiplication distributed over the addition and obtain the same result:</p>\n</blockquote>\n\n<pre><code>2 * 3 + 2 * 4\n(6) + (8)\n14\n</code></pre>\n\n<blockquote>\n  <p>This is known as a \u201csum of products.\u201d In normal arithmetic, the expression is in normal form when it\u2019s been reduced to a final result. However, if you think of the numerals in the above expressions as representations of set cardinality, then the sum of products expression is in normal form, as there is no computation to perform.</p>\n</blockquote>\n\n<p>I've known that a normal form indiciates that an expression is fully reduced. In the above description, author of the book explains that sum of products can be seen as in normal form when we think of expression as representations of set cardinality. I don't understand that.</p>\n\n<p>Cardinality of types means how many different values can be included in that type (like set). For example, <code>Bool</code> type in haskell has cardinality of <code>2</code>, which is addition of 1 for <code>False</code> and 1 for <code>True</code> each.</p>\n\n<p>Is sum of products (<code>2 * 3 + 2 * 4</code>) a normal form? This expression can be reduced furthre more because fully reduced expression would be <code>14</code>. I don't understand why sum of products and cardinality of it are related to be normal form.</p>\n"}, {"tags": ["haskell", "cabal"], "answers": [{"comments": [{"owner": {"reputation": 4140, "user_id": 710951, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/17c5431e8c7629bc407ef47e76542d80?s=128&d=identicon&r=PG", "display_name": "Alba Mendez", "link": "https://stackoverflow.com/users/710951/alba-mendez"}, "edited": false, "score": 0, "creation_date": 1572036221, "post_id": 58562623, "comment_id": 103449436, "body": "Downvoter(s): I know this isn&#39;t a real solution, that&#39;s why it&#39;s not accepted. But so far I haven&#39;t seen a solution to this, so posting it in case it&#39;s useful to someone."}], "tags": [], "owner": {"reputation": 4140, "user_id": 710951, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/17c5431e8c7629bc407ef47e76542d80?s=128&d=identicon&r=PG", "display_name": "Alba Mendez", "link": "https://stackoverflow.com/users/710951/alba-mendez"}, "is_accepted": false, "score": -1, "last_activity_date": 1572037024, "last_edit_date": 1572037024, "creation_date": 1572021976, "answer_id": 58562623, "question_id": 58559840, "link": "https://stackoverflow.com/questions/58559840/cabal-stack-ignores-ghc-options-for-custom-setup-scripts/58562623#58562623", "title": "Cabal / Stack ignores ghc-options for custom Setup scripts", "body": "<p>EDIT: I found the relevant issues; it doesn't seem to be possible:</p>\n\n<p><strong><a href=\"https://github.com/commercialhaskell/stack/issues/3409\" rel=\"nofollow noreferrer\">stack: Can't use system GHC without static libraries at all (#3409)</a></strong><br>\n<strong><a href=\"https://github.com/haskell/cabal/issues/1720\" rel=\"nofollow noreferrer\">cabal: <code>executable-dynamic: True</code> should apply to <code>build-type: Custom</code> setup #1720</a></strong>  </p>\n\n<p>Related: It seems cabal will always attempt to build static + dynamic in some cases, even if you tell it otherwise.</p>\n\n<hr>\n\n<p>For now, a partial solution I ended up using is to force the option with a wrapper.</p>\n\n<p>At ~/.local/bin/ghc-8.6.5 put:</p>\n\n<pre><code>#!/bin/sh\nexec /usr/bin/ghc-8.6.5 -dynamic \"$@\"\n</code></pre>\n\n<p>Then:</p>\n\n<pre><code>cd ~/.local/bin\nchmod +x ghc-8.6.5\nln -s ghc{-8.6.5,}\n\nln -s {/usr/bin,.}/ghc-pkg-8.6.5\nln -s {/usr/bin,.}/runghc-8.6.5\nln -s {/usr/bin,.}/haddock-ghc-8.6.5\n</code></pre>\n\n<p>Make sure it's in your PATH and you're good to go.</p>\n"}], "owner": {"reputation": 4140, "user_id": 710951, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/17c5431e8c7629bc407ef47e76542d80?s=128&d=identicon&r=PG", "display_name": "Alba Mendez", "link": "https://stackoverflow.com/users/710951/alba-mendez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 128, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1572037024, "creation_date": 1572011391, "last_edit_date": 1572036441, "question_id": 58559840, "link": "https://stackoverflow.com/questions/58559840/cabal-stack-ignores-ghc-options-for-custom-setup-scripts", "title": "Cabal / Stack ignores ghc-options for custom Setup scripts", "body": "<p>I'm trying to get Stack working on an Arch system. I've done the usual:</p>\n\n<pre><code>pacman -S ghc stack cabal-install\n</code></pre>\n\n<p>And then placed the following in <code>~/.stack/config.yaml</code>, so that the system GHC is used and dynamic libraries are used (the packages above do <em>not</em> include static libraries):</p>\n\n<pre><code>system-ghc: true\nghc-options:\n  \"$everything\": -dynamic\nconfigure-options:\n  \"$everything\":\n  - -dynamic\n</code></pre>\n\n<p>But when I try to install something, (i.e. <code>stack install wai</code>) I see that it attempts to build a custom Setup script:</p>\n\n<pre><code>/usr/bin/ghc-8.6.5 -rtsopts -threaded -clear-package-db -global-package-db -hide-all-packages -package base -main-is StackSetupShim.mainOverride -package Cabal-2.4.0.1 /home/alba/.stack/setup-exe-src/setup-mPHDZzAJ.hs /home/alba/.stack/setup-exe-src/setup-shim-mPHDZzAJ.hs -o /home/alba/.stack/setup-exe-cache/x86_64-linux/tmp-Cabal-simple_mPHDZzAJ_2.4.0.1_ghc-8.6.5\n</code></pre>\n\n<p>And my options are not honored, so the build tries to use static libraries (and fails). Is there any way to get Stack/Cabal to use certain options when building <code>Setup.hs</code>?</p>\n"}, {"tags": ["haskell", "tree"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1572005389, "post_id": 58556268, "comment_id": 103435602, "body": "<code>[] :: [a]</code> is the empty list for <i>all</i> list types, including nested list types (where <code>a ~ [b]</code>)."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 7, "last_activity_date": 1571997651, "creation_date": 1571997651, "answer_id": 58556339, "question_id": 58556268, "link": "https://stackoverflow.com/questions/58556268/haskell-lists-from-root-to-leaves/58556339#58556339", "title": "Haskell- lists from root to leaves", "body": "<p>This is due to the fact that your <code>paths Tip = [[]]</code> returns a list with <em>one</em> element: an empty list.</p>\n\n<p>This thus means that for a <code>Bin Tip 4 (Bin Tip 3 Tip)</code> for example, the <code>paths left</code> will thus return a <code>[[]]</code>, and you prepend that list with <code>4</code>, so <code>[4]</code> will be yielded as well.</p>\n\n<p>If you change this to <code>paths Tip = []</code>, you fix the problem, since then it will not yield an element:</p>\n\n<pre><code>paths :: Tree a -&gt; [[a]]\n<b>paths Tip = []</b>\npaths (Bin Tip x Tip) = [[x]]\npaths (Bin left x right) = map (x:) (paths left ++ paths right)</code></pre>\n"}], "owner": {"reputation": 95, "user_id": 12203144, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-AYHpiGKoZh4/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdf7jX3UTZ2lBsn2XVaA47VSeIsdA/photo.jpg?sz=128", "display_name": "Lmmmmmmc", "link": "https://stackoverflow.com/users/12203144/lmmmmmmc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 97, "favorite_count": 0, "answer_count": 1, "score": 6, "last_activity_date": 1572028827, "creation_date": 1571997423, "last_edit_date": 1572028827, "question_id": 58556268, "link": "https://stackoverflow.com/questions/58556268/haskell-lists-from-root-to-leaves", "title": "Haskell- lists from root to leaves", "body": "<p>The code suppose to return a list of every path from a root to a leaf in the tree, in order from left to right. Nodes with one child (one <code>Tip</code> and one <code>Bin</code>) are not considered leaf nodes.</p>\n\n<p>I tried to code like</p>\n\n<pre><code>paths :: Tree a -&gt; [[a]]\npaths Tip = [[]]\npaths (Bin Tip x Tip) = [[x]]\npaths (Bin left x right) = map (x:) (paths left ++ paths right)\n</code></pre>\n\n<p>But it seems return the path include nodes with one child. This will lead to paths like <code>[[4,3],[4]]</code> on <code>Bin (Bin Tip 3 Tip) 4 Tip</code>.</p>\n"}, {"tags": ["haskell", "io", "monads", "lazy-evaluation", "syntactic-sugar"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1571985941, "post_id": 58553006, "comment_id": 103426679, "body": "I think they should be equivalent since the IO monad is strict, even if I don&#39;t completely understand the GHC guarantees on <code>seq</code>, which allows some &quot;reordering&quot; in some cases. <code>pseq</code> is stronger, and should guarantee that the code order is indeed the evaluation order, roughly speaking. Note that WHNF is not enough to force all the list."}], "answers": [{"comments": [{"owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "edited": false, "score": 0, "creation_date": 1572133530, "post_id": 58572842, "comment_id": 103467083, "body": "What if you write <code>seq x $ return ()</code> instead of <code>return $ seq x ()</code>?"}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "reply_to_user": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "edited": false, "score": 0, "creation_date": 1572136519, "post_id": 58572842, "comment_id": 103467421, "body": "Those are identical to <code>x `seq` return ()</code> and <code>return (x `seq` ())</code>, so they would behave just like <code>foo</code> and <code>bar</code>."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 2, "last_activity_date": 1572111931, "last_edit_date": 1572111931, "creation_date": 1572109173, "answer_id": 58572842, "question_id": 58553006, "link": "https://stackoverflow.com/questions/58553006/does-io-monad-become-strict-when-bang-pattern-is-used/58572842#58572842", "title": "Does IO monad become strict when bang pattern is used?", "body": "<p>The specific code samples you've given generate identical compiled code.  If you take the following program:</p>\n\n<pre><code>{-# LANGUAGE BangPatterns #-}\n\nmodule Bang where\n\nimport System.CPUTime\n\nmain1 = do\n    let !x = [2,3,5,2,3,5,6,7,1,3,0,1]\n    begin &lt;- getCPUTime\n    let !rx = reverse x\n    end &lt;- getCPUTime\n    putStrLn $ \"Calculation time: \" ++ show (end - begin) ++ \" ps.\"\n    putStrLn $ \"Result: \" ++ show rx\n\nmain2 = do\n    let x = [2,3,5,2,3,5,6,7,1,3,0,1]\n    begin &lt;- x `seq` getCPUTime\n    let rx = reverse x\n    end &lt;- rx `seq` getCPUTime\n    putStrLn $ \"Calculation time: \" ++ show (end - begin) ++ \" ps.\"\n    putStrLn $ \"Result: \" ++ show rx\n</code></pre>\n\n<p>and compile it with (with GHC version 8.6.5):</p>\n\n<pre><code>stack ghc -- -dsuppress-all -dsuppress-uniques -ddump-simpl -fforce-recomp -O2 Bang.hs\n</code></pre>\n\n<p>you will find in the dumped GHC core that <code>main1</code> and <code>main2</code> are compiled to exactly the same code, which is actually pulled out into a separate <code>main4</code> function:</p>\n\n<pre><code>main1\nmain1 = main4 `cast` &lt;Co:3&gt;\n\nmain2\nmain2 = main4 `cast` &lt;Co:3&gt;\n</code></pre>\n\n<p><strong>HOWEVER</strong>, in general, the <code>let !x = ...</code> construct isn't precisely equivalent to using <code>let x = ...</code> followed by <code>x `seq` y</code>.  For example, the following two IO actions are different:</p>\n\n<pre><code>foo :: IO ()\nfoo = do\n  let !x = undefined\n  return ()\n\nbar :: IO ()\nbar = do\n  let x = undefined\n  return $ x `seq` ()\n</code></pre>\n\n<p>The first generates an exception immediately:</p>\n\n<pre><code>main = do\n    print 1\n    foo       -- EXCEPTION!\n    print 2\n</code></pre>\n\n<p>The second does nothing when executed but will generate an exception if you try to scrutinize it's result:</p>\n\n<pre><code>main = do\n    print 1\n    bar        -- does nothing\n    print 2\n    x &lt;- bar   -- also does nothing\n    print 3\n    () &lt;- bar  -- EXCEPTION!\n    print 4\n</code></pre>\n\n<p>I believe that after desugaring, <code>bar</code> and <code>foo</code> are equivalent to:</p>\n\n<pre><code>bar = return (undefined `seq` ())\nfoo = undefined `seq` return ()\n</code></pre>\n\n<p>which explains their different behavior.</p>\n"}], "owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112, "favorite_count": 1, "accepted_answer_id": 58572842, "answer_count": 1, "score": 2, "last_activity_date": 1572111931, "creation_date": 1571983431, "question_id": 58553006, "link": "https://stackoverflow.com/questions/58553006/does-io-monad-become-strict-when-bang-pattern-is-used", "title": "Does IO monad become strict when bang pattern is used?", "body": "<p>I expect the following code snippet:</p>\n\n<pre><code>main = do\n    let !x = [2,3,5,2,3,5,6,7,1,3,0,1]\n    begin &lt;- getCPUTime\n    let !rx = reverse x\n    end &lt;- getCPUTime\n    putStrLn $ \"Calculation time: \" ++ show (end - begin) ++ \" ps.\"\n    putStrLn $ \"Result: \" ++ show rx\n</code></pre>\n\n<p>is identical to the following version:</p>\n\n<pre><code>main = do\n    let x = [2,3,5,2,3,5,6,7,1,3,0,1]\n    begin &lt;- x `seq` getCPUTime\n    let rx = reverse x\n    end &lt;- rx `seq` getCPUTime\n    putStrLn $ \"Calculation time: \" ++ show (end - begin) ++ \" ps.\"\n    putStrLn $ \"Result: \" ++ show rx\n</code></pre>\n\n<p>Is this true? This is false if <code>x</code> and <code>rx</code> evaluates to WHNF when \"needed\", in the first version.</p>\n\n<p>Btw, I want to propose a syntactic sugar for deep evaluation, named \"double bang pattern\".</p>\n"}, {"tags": ["haskell", "encoding", "emoji"], "answers": [{"tags": [], "owner": {"reputation": 938, "user_id": 3894179, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8c6b1c2c08d1075995cb780ee8a2e36e?s=128&d=identicon&r=PG", "display_name": "Andra", "link": "https://stackoverflow.com/users/3894179/andra"}, "is_accepted": false, "score": 1, "last_activity_date": 1571976112, "creation_date": 1571976112, "answer_id": 58552023, "question_id": 58550967, "link": "https://stackoverflow.com/questions/58550967/how-to-use-the-emojis-in-haskell/58552023#58552023", "title": "How to use the emojis in Haskell?", "body": "<p>The question are not well-written, you're not explain where your problem is.</p>\n\n<p>You can start from something like this</p>\n\n<pre><code>import Data.Char\n\ntoAnimal :: Char -&gt; Char\ntoAnimal c = chr . (+127970) $ ord c\n\ntoSmileyEmoji :: Char-&gt; Char\ntoSmileyEmoji c = chr . (+128415) $ ord c\n\nencode :: String -&gt; String\nencode xs = map (\\c -&gt; if isUpper c then toAnimal c else toSmileyEmoji c) xs\n\nfromAnimal :: Char -&gt; Char\nfromAnimal c = chr $ (ord c) - 127970\n\nfromSmileyEmoji :: Char-&gt; Char\nfromSmileyEmoji c = chr $ (ord c) - 128415\n\nisAnimal :: Char -&gt; Bool\nisAnimal c = if ((ord c &gt;= ord '\ud83d\udc23') &amp;&amp; (ord c &lt;= ord '\ud83d\udc3c')) then True else False\n\ndecode :: String -&gt; String\ndecode xs = map (\\c -&gt; if isAnimal c then fromAnimal c else fromSmileyEmoji c) xs\n\nmain = do\n    contents1 &lt;- getLine\n    contents2 &lt;- getLine\n    putStr $ (encode contents1) ++ \"\\n\" ++ (decode contents2)\n</code></pre>\n\n<p><strong>Input</strong></p>\n\n<pre><code>ABCDEFGHIJKLMNOPQRSTUVWXYZ\n\ud83d\udc23\ud83d\udc24\ud83d\udc25\ud83d\udc26\ud83d\udc27\ud83d\udc28\ud83d\udc29\ud83d\udc2a\ud83d\udc2b\ud83d\udc2c\ud83d\udc2d\ud83d\udc2e\ud83d\udc2f\ud83d\udc30\ud83d\udc31\ud83d\udc32\ud83d\udc33\ud83d\udc34\ud83d\udc35\ud83d\udc36\ud83d\udc37\ud83d\udc38\ud83d\udc39\ud83d\udc3a\ud83d\udc3b\ud83d\udc3c\n</code></pre>\n\n<p><strong>Output</strong></p>\n\n<pre><code>\ud83d\udc23\ud83d\udc24\ud83d\udc25\ud83d\udc26\ud83d\udc27\ud83d\udc28\ud83d\udc29\ud83d\udc2a\ud83d\udc2b\ud83d\udc2c\ud83d\udc2d\ud83d\udc2e\ud83d\udc2f\ud83d\udc30\ud83d\udc31\ud83d\udc32\ud83d\udc33\ud83d\udc34\ud83d\udc35\ud83d\udc36\ud83d\udc37\ud83d\udc38\ud83d\udc39\ud83d\udc3a\ud83d\udc3b\ud83d\udc3c\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n</code></pre>\n\n<p><a href=\"https://ideone.com/iePD1a\" rel=\"nofollow noreferrer\">https://ideone.com/iePD1a</a></p>\n\n<p>Smiley emoji starts from 128512 and animal emoji starts from 128045 (Well, not the real actual 'start', but at least it can fit the alphabet letter). ASCII lowercase alphabet starts from 97 and 65 for the uppercase. You only have to add it so it will become the emoji you desire</p>\n\n<p>e.g</p>\n\n<pre><code>65 [A] + (128045 [\ud83d\udc23] - 65 [A]) = 128045 [\ud83d\udc23]\nand so on...\n</code></pre>\n"}], "owner": {"reputation": 298, "user_id": 12127295, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/89e07b6af34c7bccf3e50e2e61fcafa1?s=128&d=identicon&r=PG&f=1", "display_name": "John C.", "link": "https://stackoverflow.com/users/12127295/john-c"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 313, "favorite_count": 0, "answer_count": 1, "score": -3, "last_activity_date": 1571989641, "creation_date": 1571966086, "last_edit_date": 1571989641, "question_id": 58550967, "link": "https://stackoverflow.com/questions/58550967/how-to-use-the-emojis-in-haskell", "title": "How to use the emojis in Haskell?", "body": "<p>I am working on doing the following :</p>\n\n<p>a)  Implement  a  function enc ::  String -> String that  converts  all  lowercase  ASCII  letters into emojis and all uppercase ASCII letters into symbols representing animals.</p>\n\n<p>b)  Implement a function dec ::  String -> String that implements the inverse function, converting emojis and symbols representing animals into ASCII letters.</p>\n\n<p>I have started doing the following to check whether to decode or encode based on the input :</p>\n\n<pre><code>-- Peek into the content to decide whether we encode or decode.\nconvert :: String -&gt; String\nconvert xs\n | null $ filter (\\c -&gt; isLetter c &amp;&amp; isAscii c) xs = dec xs\n | otherwise = enc xs   \n\nmain = do\n    contents &lt;- getContents\n    putStr $ convert contents\n</code></pre>\n\n<p>The problem is how to use the emojis in the haskell workflow. using emojis inside haskell always give me <code>parse input error</code> even when i am using <code>Data.Char</code></p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 19, "user_id": 11777117, "user_type": "registered", "profile_image": "https://graph.facebook.com/2278657319062617/picture?type=large", "display_name": "Kris", "link": "https://stackoverflow.com/users/11777117/kris"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1571962847, "post_id": 58549992, "comment_id": 103422079, "body": "i feel so lost for this problem..."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1571962932, "post_id": 58549992, "comment_id": 103422103, "body": "Aha, that&#39;s a reasonable attempt. How about you also add the error message?"}, {"owner": {"reputation": 19, "user_id": 11777117, "user_type": "registered", "profile_image": "https://graph.facebook.com/2278657319062617/picture?type=large", "display_name": "Kris", "link": "https://stackoverflow.com/users/11777117/kris"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1571963242, "post_id": 58549992, "comment_id": 103422155, "body": "i added those errors....."}], "answers": [{"comments": [{"owner": {"reputation": 19, "user_id": 11777117, "user_type": "registered", "profile_image": "https://graph.facebook.com/2278657319062617/picture?type=large", "display_name": "Kris", "link": "https://stackoverflow.com/users/11777117/kris"}, "edited": false, "score": 0, "creation_date": 1571965519, "post_id": 58550741, "comment_id": 103422565, "body": "i got error that parse error on input &#39;=&#39; for your code......"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1571996543, "post_id": 58550741, "comment_id": 103431380, "body": "@WillemVanOnsem that doesn&#39;t make sense, typed holes aren&#39;t parse errors."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 19, "user_id": 11777117, "user_type": "registered", "profile_image": "https://graph.facebook.com/2278657319062617/picture?type=large", "display_name": "Kris", "link": "https://stackoverflow.com/users/11777117/kris"}, "edited": false, "score": 0, "creation_date": 1571996703, "post_id": 58550741, "comment_id": 103431452, "body": "@Kris there&#39;s no parse error in my code. Make sure you&#39;ve actually got the indentation and all right."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 1, "last_activity_date": 1571996672, "last_edit_date": 1571996672, "creation_date": 1571963761, "answer_id": 58550741, "question_id": 58549992, "link": "https://stackoverflow.com/questions/58549992/find-and-return-the-height-of-subtree-rooted-at-that-node-in-haskell/58550741#58550741", "title": "Find and return the height of subtree rooted at that node in Haskell", "body": "<p>The problem is that you're trying to <em>extract</em> the height information from the recursive calls. That's in principle a good approach, but the problem is that <code>heights</code> gives back a whole tree, not just the height of a given tree. However, you can easily extract <strong>the</strong> height from that:</p>\n\n<pre><code>extractPrecomputedHeight :: Tree (Integer, a) -&gt; Integer\nextractPrecomputedHeight Tip = 1\nextractPrecomputedHeight (Bin _ (h,_) _) = h\n</code></pre>\n\n<p>Then, just use that to measure the subtrees. Preferrably only go down into these <em>once</em> each, with a <code>where</code> binding:</p>\n\n<pre><code>heights (Bin l x r) = Bin _ _ _\n where [l', r'] = heights &lt;$&gt; [l,r]\n       h = 1 + max (extractPrecomputedHeight l') (extractPrecomputedHeight r')\n</code></pre>\n\n<p>Fill in the <code>_</code> gaps yourself. (GHC can help you with that: it will show for each <code>_</code>, what type it expects there, and what type the available local bindings have, so it's easy to find the right definition.)</p>\n"}], "owner": {"reputation": 19, "user_id": 11777117, "user_type": "registered", "profile_image": "https://graph.facebook.com/2278657319062617/picture?type=large", "display_name": "Kris", "link": "https://stackoverflow.com/users/11777117/kris"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 178, "favorite_count": 0, "accepted_answer_id": 58550741, "answer_count": 1, "score": -3, "last_activity_date": 1571996672, "creation_date": 1571956654, "last_edit_date": 1571963251, "question_id": 58549992, "link": "https://stackoverflow.com/questions/58549992/find-and-return-the-height-of-subtree-rooted-at-that-node-in-haskell", "title": "Find and return the height of subtree rooted at that node in Haskell", "body": "<pre><code>data Tree a = Tip | Bin (Tree a) a (Tree a) deriving (Show, Eq)\n</code></pre>\n\n<p>I need to return a tree with the same shape as its argument, but with each node label replaced with a pair containing the original label in the second field. The first field should be the height of the subtree rooted at that node.\nHere is what I wrote: </p>\n\n<pre><code>heights :: Tree a -&gt; Tree (Integer, a)\n\nheights Tip = Tip\nheights (Bin Tip x Tip) = Bin Tip (1,x) Tip\nheights (Bin l x r) = heights (Bin (heights l) (1 + max(heights l)(heights r)) (heights r))\n</code></pre>\n\n<p>I got errors for my code:</p>\n\n<pre><code>Couldn't match type `a' with `(Integer, a)'\n\u00a0 \u00a0 \u00a0 `a' is a rigid type variable bound by\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 the type signature for heights :: Tree a -&gt; Tree (Integer, a)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 at Project2.hs:47:12\n\u00a0 \u00a0 Expected type: Tree a\n\u00a0 \u00a0 \u00a0 Actual type: Tree (Integer, a)\n\u00a0 \u00a0 In the return type of a call of `heights'\n\u00a0 \u00a0 In the first argument of `Bin', namely `(heights l)'\n\u00a0 \u00a0 In the first argument of `heights', namely\n\u00a0 \u00a0 \u00a0 `(Bin (heights l) ((1 + max (heights l) (heights r))) (heights r))'\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 7, "creation_date": 1571952936, "post_id": 58549345, "comment_id": 103419776, "body": "You haven&#39;t violated referential transparency there, you&#39;ve just made a pathological <code>Eq</code> instance. Sure, the language doesn&#39;t forbid you from doing this, but nor does it forbid you from making unlawful <code>Functor</code> or <code>Monad</code> instances. If you apply a function to values which are <i>actually the same</i> as opposed to <i>decreed to be the same by some weird rule I made up</i>, then the output values are indeed guaranteed to be the same. In short, <code>(==)</code> in Haskell doesn&#39;t have to actually mean &quot;the same&quot; (although to be a sensible instance, it should)."}, {"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1571958092, "post_id": 58549345, "comment_id": 103421140, "body": "@RobinZigmond you should post this as an answer, and specially clarify that <code>(==)</code> is not magic, but just a function."}, {"owner": {"reputation": 199, "user_id": 9227540, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IafJU.jpg?s=128&g=1", "display_name": "Algeboy", "link": "https://stackoverflow.com/users/9227540/algeboy"}, "edited": false, "score": 0, "creation_date": 1571974438, "post_id": 58549345, "comment_id": 103424096, "body": "To clarify, this example is a &quot;weird rule&quot; so as to make it short. But real data types I use often need to override == to be defined properly, but this opens the door to functions ignoring this -- often with very subtle seemingly natural intentions.  <code>==</code> ain&#39;t magic but it is a primitive notion with documented intentions of equality and once set, it is the equality your type has.  So seems a thin answer to me."}, {"owner": {"reputation": 34864, "user_id": 237428, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/ThNhZ.jpg?s=128&g=1", "display_name": "Antal Spector-Zabusky", "link": "https://stackoverflow.com/users/237428/antal-spector-zabusky"}, "edited": false, "score": 1, "creation_date": 1571983983, "post_id": 58549345, "comment_id": 103425978, "body": "To restate what Robin Zigmond said: the notion of referential equality is about mathematical equality, and <i>not</i> about any Haskell function, even if it happens to have a similar-sounding name."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1571990054, "post_id": 58549345, "comment_id": 103428364, "body": "OK, so the correct statement is that Haskell is guaranteed to be referentially transparent with respect to &quot;ordinary equality&quot;. Any custom <code>Eq</code> instances you make will only give &quot;referentially transparency&quot; with respect to functions that you yourself ensure respect that."}, {"owner": {"reputation": 199, "user_id": 9227540, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IafJU.jpg?s=128&g=1", "display_name": "Algeboy", "link": "https://stackoverflow.com/users/9227540/algeboy"}, "edited": false, "score": 0, "creation_date": 1572014051, "post_id": 58549345, "comment_id": 103440127, "body": "So I think the phrase should be &quot;judgmental equality&quot;, in particular a type class for modular integers Z/nZ would have a &quot;mathematical equality&quot; upon which Haskell wouldn&#39;t be referentially transparent.  So its RT is only for a subset of types.  That is much weaker than &quot;replacing equals for equals&quot;."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1572016064, "post_id": 58549345, "comment_id": 103441255, "body": "No, it&#39;s exactly &quot;replacing equals for equals&quot;. You just have to realise that &quot;equals&quot; here is meant literally, not in the sense of an arbitrary implementation of <code>Eq</code> in Haskell (which can in theory be completely arbitrary). And you can certainly define integers modulo a particular <code>n</code> as a Haskell type if you want to - but if you want to do so by making a <code>newtype</code> for <code>Int</code> with a custom <code>Eq</code> instance, it&#39;s up to you to make sure any functions you define on this type are well defined, aka referentially transparent."}, {"owner": {"reputation": 199, "user_id": 9227540, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IafJU.jpg?s=128&g=1", "display_name": "Algeboy", "link": "https://stackoverflow.com/users/9227540/algeboy"}, "edited": false, "score": 0, "creation_date": 1572018507, "post_id": 58549345, "comment_id": 103442535, "body": "Well we can&#39;t have it both ways.  If a type definition depends on an equivalence rel. (some do) then terms of this type are equal exactly when that eq. rel. says so (by defn.). So on such types Haskell isn&#39;t RT, as everyone seems to confirm here.  I think this is enough to clarify my question so I&#39;ll close.  It isn&#39;t my intent to provoke argument over jargon, but this thread seems to confirm that Haskell views RT as something weaker than the logical statement that symbols x==y imply f(x)==f(y). Either one disavows some == or one disavows some types (partition types) as domains. Thx!"}], "answers": [{"comments": [{"owner": {"reputation": 199, "user_id": 9227540, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IafJU.jpg?s=128&g=1", "display_name": "Algeboy", "link": "https://stackoverflow.com/users/9227540/algeboy"}, "edited": false, "score": 0, "creation_date": 1571973953, "post_id": 58549793, "comment_id": 103424006, "body": "Tautology in the sense I was using is to say that writing <code>f(x)=f(x)</code> when <code>=</code> is an equivalence relation doesn&#39;t communicate anything you meaningfully test because one law of <code>=</code> is that <code>whatever=whatever</code>.  If however you have different symbols on each side then there is a question that can be tested, i.e. <code>x=y</code> implies <code>f(x)=f(y)</code> may or may not be true."}], "tags": [], "owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "is_accepted": false, "score": 7, "last_activity_date": 1571955288, "creation_date": 1571955288, "answer_id": 58549793, "question_id": 58549345, "link": "https://stackoverflow.com/questions/58549345/in-what-logical-sense-is-haskell-referentially-transparent/58549793#58549793", "title": "In what logical sense is Haskell referentially transparent?", "body": "<blockquote>\n  <p><code>f(x)=f(x)</code> for every x</p>\n</blockquote>\n\n<p>is by no means a tautology. In many popular languages, this property does not hold. Consider Java, for instance:</p>\n\n<pre><code>import java.util.*;\n\npublic class Transparency {\n  static int f(List&lt;Object&gt; xs) {\n    xs.add(xs.size());\n    return xs.size();\n  }\n\n  public static void main(String[] args) {\n    List&lt;Object&gt; x = new ArrayList&lt;&gt;();\n    System.out.println(\"Is java referentially transparent? \" + (f(x) == f(x)));\n  }\n}\n\n$ javac Transparency.java\n$ java Transparency \nIs java referentially transparent? false\n</code></pre>\n\n<p>Here, because <code>f</code> mutates its input <code>x</code>, it would change behavior if we substitute x's definition into <code>f(x) == f(x)</code>: <code>f(new ArrayList&lt;&gt;()) == f(new ArrayList&lt;&gt;())</code> is in fact true, but when using a variable to reduce duplication it evaluates to false. In Haskell, such a substitution is always valid (disregarding cheats like <code>unsafePerformIO</code>).</p>\n"}, {"comments": [{"owner": {"reputation": 199, "user_id": 9227540, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IafJU.jpg?s=128&g=1", "display_name": "Algeboy", "link": "https://stackoverflow.com/users/9227540/algeboy"}, "edited": false, "score": 0, "creation_date": 1571973697, "post_id": 58550445, "comment_id": 103423963, "body": "I don&#39;t think this gets at the question.  While == is a function it plays a fixed role in the language, once overridden, it is == my type has.  I think the line &quot;fails to be a well-defined mathematical function&quot; says exactly my concern.   Well-defined means exactly that x=y implies f(x)=f(y).  If that isn&#39;t what is meant by referential transparency then what is?"}, {"owner": {"reputation": 199, "user_id": 9227540, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IafJU.jpg?s=128&g=1", "display_name": "Algeboy", "link": "https://stackoverflow.com/users/9227540/algeboy"}, "edited": false, "score": 0, "creation_date": 1572014322, "post_id": 58550445, "comment_id": 103440279, "body": "I don&#39;t think it is &quot;generalized equality&quot; at all.  Some types are only defined by the added equivalence, e.g. integers modulo n.  With this interpretation RT doesn&#39;t hold on all types.  But my actual question: is it that you agree x=y -&gt; f(x)=f(y) is what is truly meant by RT (even though only true in limited interpretations)?"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 199, "user_id": 9227540, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IafJU.jpg?s=128&g=1", "display_name": "Algeboy", "link": "https://stackoverflow.com/users/9227540/algeboy"}, "edited": false, "score": 0, "creation_date": 1572015848, "post_id": 58550445, "comment_id": 103441152, "body": "Yes, that&#39;s definitely what it means. As far as I understand it, RT is a programming term rather than a mathematical one - in mathematics all functions are RT because that&#39;s basically the definition, in programming it isn&#39;t true in most languages (due to things like implicit state, I/O, and so on). Btw I don&#39;t see how the integers modulo n argue against my characterisation of equivalence relations as &quot;generalised equality&quot; - it&#39;s obviously a canonical example, and the whole point of it is to say that &quot;we consider all integers that differ by a multiple of n to be the same&quot;."}, {"owner": {"reputation": 199, "user_id": 9227540, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IafJU.jpg?s=128&g=1", "display_name": "Algeboy", "link": "https://stackoverflow.com/users/9227540/algeboy"}, "edited": false, "score": 0, "creation_date": 1572017136, "post_id": 58550445, "comment_id": 103441861, "body": "I found RT in logic/philosophy back to Frege so it predates programming, but I&#39;m attempting to understand how faithfully the term is used in programming. The distinction of equals vs. eq. rel. is that the latter is on the original type, the former is on the associated partition -- the new type."}], "tags": [], "owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "is_accepted": true, "score": 8, "last_activity_date": 1571962305, "last_edit_date": 1571962305, "creation_date": 1571960336, "answer_id": 58550445, "question_id": 58549345, "link": "https://stackoverflow.com/questions/58549345/in-what-logical-sense-is-haskell-referentially-transparent/58550445#58550445", "title": "In what logical sense is Haskell referentially transparent?", "body": "<p>Expanding slightly on what I already said in my comment (thanks @FyodorSolkin for the prod):</p>\n\n<p>You haven't violated referential transparency there, you've just made a pathological <code>Eq</code> instance.</p>\n\n<p>While, as you've observed, the language doesn't forbid you from doing this, nor does it forbid one from making unlawful <code>Functor</code> or <code>Monad</code> instances. (Because it would be totally unfeasible to try to check these laws in practice.) But just because something doesn't cause a compiler error doesn't necessarily mean it's the right thing to do.</p>\n\n<p>So the problem with your example is that while, semantically, <code>(==)</code> in Haskell indeed means \"equal\", it's just a function, in fact a method of a typeclass - which you can therefore implement however you want. Nothing stops me from defining, for example:</p>\n\n<pre><code>instance (Eq) (a -&gt; b) where\n    _ == _ = True\n</code></pre>\n\n<p>and suddenly all functions will be considered \"equal\" under this definition. Clearly referential transparency will be violated if we consider this to be a true definition of equality. My point is that it's not. In fact it's quite obvious what \"equality\" means for any type which isn't either a function or otherwise depends on or \"contains\" function types. (It's actually obvious what equality of functions should mean too, it's just impossible for there to be a general algorithm to determine if two arbitrary functions are equal.)</p>\n\n<p>[EDIT: I just remembered it also doesn't make much sense to talk about equality of <code>IO</code> actions. There might be some other abstract types like that where there's no clear definition of what equality would mean.]</p>\n\n<p>To stray into abstract mathematics for a minute: your <code>Eq</code> instance certainly defines an equivalence relation, which is considered to be a sort of \"generalised equality\" - and indeed is equality if you use the relation to make equivalence classes. But then it's nonsense to try to apply a function to such a domain/type which differs on different elements of the same equivalence class. Such a thing - as in your example - actually fundamentally fails to be a well-defined mathematical function, because you're defining it on the individual elements in a way which fails to respect the equivalence relation.</p>\n"}], "owner": {"reputation": 199, "user_id": 9227540, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IafJU.jpg?s=128&g=1", "display_name": "Algeboy", "link": "https://stackoverflow.com/users/9227540/algeboy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 142, "favorite_count": 0, "accepted_answer_id": 58550445, "answer_count": 2, "score": -2, "last_activity_date": 1571962305, "creation_date": 1571952487, "question_id": 58549345, "link": "https://stackoverflow.com/questions/58549345/in-what-logical-sense-is-haskell-referentially-transparent", "title": "In what logical sense is Haskell referentially transparent?", "body": "<p>Haskell is sometimes said to \"replace equals for equals\".  The following code shows this isn't true under every interpretation of such a sentence.  <a href=\"https://en.wikipedia.org/wiki/Referential_transparency\" rel=\"nofollow noreferrer\">Wikipedia</a> follows that by saying <code>f(x)=f(x)</code> for every <code>x</code> but that doesn't seem to carry any actual logical content one can test, it would be true by the reflexive law, a tautology.</p>\n\n<p>I think the phrasing needed to make a logical claim like this is more like Leibniz' law (or indistinguishable identicals) where \n<code>x=y</code> implies for every <code>f</code>, <code>f(x)=f(y)</code>.  That claim fails in the illustration below within Haskell.  (We override <code>==</code> to make a partition type, but our function definition can freely ignore this and do.)</p>\n\n<p>My question is, can one actually state referential transparency in a way that can be logically tested, and does Haskell actually uphold that logical claim?</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>module Main (main) where\n\ndata Floop = One | Two | Three\ninstance Eq Floop where\n    One == One         = True\n    One == Two         = False\n    One == Three       = False\n    Two == One         = False\n    Two == Two         = True\n    Two == Three       = True   --- 2=3\n    Three == One       = False\n    Three == Two       = True   --- 3=2\n    Three == Three     = True\n\nshuffle       :: Floop -&gt; Floop\nshuffle One   = Two\nshuffle Two   = Two    --- fix 2\nshuffle Three = One    --- move 3\n\nmain = print ( (Two == Three) &amp;&amp; (shuffle Two /= shuffle Three) )\n--- prints \"True\" proving Haskell violates Leibniz Law\n</code></pre>\n"}, {"tags": ["haskell", "instance", "typeclass", "custom-type"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1571934928, "post_id": 58545603, "comment_id": 103412374, "body": "You can use pattern matching, so <code>from_ZZ_to_Zed (Plus x) = ...</code>"}, {"owner": {"reputation": 53, "user_id": 6041125, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/510bd8449a5dc39c3ba9ecbcf82cf963?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Drucker", "link": "https://stackoverflow.com/users/6041125/florian-drucker"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1571936805, "post_id": 58545603, "comment_id": 103413222, "body": "Guess thats all I needed. Thank you Sir!"}], "answers": [{"comments": [{"owner": {"reputation": 53, "user_id": 6041125, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/510bd8449a5dc39c3ba9ecbcf82cf963?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Drucker", "link": "https://stackoverflow.com/users/6041125/florian-drucker"}, "edited": false, "score": 0, "creation_date": 1571936807, "post_id": 58546043, "comment_id": 103413225, "body": "Just figuerd it out myself  Willem Van Osem got me on the right track!  Thanks for helping tho! :)"}], "tags": [], "owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "is_accepted": true, "score": 2, "last_activity_date": 1571936632, "creation_date": 1571936632, "answer_id": 58546043, "question_id": 58545603, "link": "https://stackoverflow.com/questions/58545603/own-data-types-conversion-between-them-and-native-ones/58546043#58546043", "title": "Own Data Types - Conversion between them and native ones", "body": "<p>The way to \"unwrap\" values wrapped in algebraic data types is by pattern matching. Each function parameter is not just an identifier, but actually a <em>pattern</em>. A pattern may be just an identifier, but it can also be other things. In particular, a pattern may be specified as a data constructor name (such as <code>Plus</code>) followed by one or more other patterns, one for each parameter of that constructor.</p>\n\n<p>In your case:</p>\n\n<pre><code>from_ZZ_to_Zed :: ZZ -&gt; Zed\nfrom_ZZ_to_Zed Zero = 0\nfrom_ZZ_to_Zed (Plus x) = ...\nfrom_ZZ_to_Zed (Minus x) = ...\n</code></pre>\n\n<p>Then, to convert from <code>IN_1</code> to <code>Zed</code>, use recursion similar to how you have implemented <code>helper</code>:</p>\n\n<pre><code>unhelper :: IN_1 -&gt; Zed\nunhelper One = 1\nunhelper (Follower x) = unhelper x + 1\n</code></pre>\n\n<p>And use that for <code>Plus</code> and <code>Minus</code> cases:</p>\n\n<pre><code>from_ZZ_to_Zed (Plus x) = unhelper x\nfrom_ZZ_to_Zed (Minus x) = - (unhelper x)\n</code></pre>\n"}], "owner": {"reputation": 53, "user_id": 6041125, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/510bd8449a5dc39c3ba9ecbcf82cf963?s=128&d=identicon&r=PG&f=1", "display_name": "Florian Drucker", "link": "https://stackoverflow.com/users/6041125/florian-drucker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 42, "favorite_count": 0, "accepted_answer_id": 58546043, "answer_count": 1, "score": 3, "last_activity_date": 1571936632, "creation_date": 1571934813, "question_id": 58545603, "link": "https://stackoverflow.com/questions/58545603/own-data-types-conversion-between-them-and-native-ones", "title": "Own Data Types - Conversion between them and native ones", "body": "<p>I need to make my own datatype for the representation of natural numbers.\nThe datatypes are (pre) defined as in the following.\nFurthermore I need to create functions to convert between the native datatype Int and the one(s) given.\nI managed to convert from Int to the given ones as well as checking if my ZZ datatype is Zero.\nAlthough I really cant figure out a way to convert anything but Zero back to Int.\nIm hoping you guys can give me a hint on how to do this.</p>\n\n<pre><code>data IN_1 = One | Follower IN_1 deriving Show\ndata ZZ   = Zero | Plus IN_1 | Minus IN_1 deriving Show\n\ntype Zed = Int\n\n\nfrom_Zed_to_ZZ :: Zed-&gt; ZZ\nfrom_Zed_to_ZZ x \n | x == 0 = Zero\n | x &gt; 0 = Plus (helper(x))\n | x &lt; 0 = Minus (helper(abs(x)))\n\nhelper :: Zed -&gt; IN_1\nhelper x \n | x==1 = One\n | otherwise = Follower (helper(x-1))\n\n\ninstance Eq ZZ where\n    (==) Zero Zero = True\n\n\nfrom_ZZ_to_Zed :: ZZ -&gt; Zed\nfrom_ZZ_to_Zed x |x == Zero = 0\n</code></pre>\n\n<p>Those are my current test cases:\n<a href=\"https://i.stack.imgur.com/IBPKh.png\" rel=\"nofollow noreferrer\">testcases</a></p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 5, "creation_date": 1571921493, "post_id": 58541687, "comment_id": 103405115, "body": "<code>init</code> has been optimized to avoid &quot;unpacking&quot; the list multiple times."}, {"owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1571923385, "post_id": 58541687, "comment_id": 103406181, "body": "@WillemVanOnsem but why is <code>myButLast</code> much slower?. It seems that is not unpacking any list, but just traversing it as <code>init</code> function does..."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1571923551, "post_id": 58541687, "comment_id": 103406285, "body": "@Ismor: it is <code>[x, y]</code> is short for <code>(x:(y:[]))</code>, so it unpacks the outer cons, a second cons, and checks if the tail of the second <code>cons</code> is <code>[]</code>. Furthermore the second clause will unpack the list again in <code>(x:xs)</code>. Yes that unpacking is reasonably efficient, but of course if it happens very often, that will slow down the process."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1571929001, "post_id": 58541687, "comment_id": 103409481, "body": "Looking in <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.List.html#init\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/base-4.12.0.0/docs/src/&hellip;</a>, the optimization seems to be that <code>init</code> doesn&#39;t repeatedly check if its argument is a singleton list or an empty list. Once the recursion starts, it just assumes that the first element will be tacked onto the result of the recursive call."}, {"owner": {"reputation": 8556, "user_id": 4892417, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NaBTj.jpg?s=128&g=1", "display_name": "oisdk", "link": "https://stackoverflow.com/users/4892417/oisdk"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1571929050, "post_id": 58541687, "comment_id": 103409502, "body": "@WillemVanOnsem I think unpacking probably isn&#39;t the issue here: GHC does call-pattern specialisation which should give you the optimised version of <code>myButLast</code> automatically. I think it&#39;s more likely list fusion that is to blame for the speedup."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1571936215, "post_id": 58541687, "comment_id": 103412987, "body": "@WillemVanOnsem Kindly take a look at my answer. If I expressed what you mean  correctly in my <code>butLast2</code>, then it actually makes no difference."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1571936323, "post_id": 58541687, "comment_id": 103413029, "body": "@IgnatInsarov: the idea is that <code>init</code> uses <code>init&#39;</code>, which uses two parameters, to avoid unpacking twice: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.List.html#init\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/base-4.12.0.0/docs/src/&hellip;</a>"}, {"owner": {"reputation": 2485, "user_id": 11282404, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c1e3829cb91cc6be3541a37381b5ff21?s=128&d=identicon&r=PG&f=1", "display_name": "jpmarinier", "link": "https://stackoverflow.com/users/11282404/jpmarinier"}, "edited": false, "score": 0, "creation_date": 1572005907, "post_id": 58541687, "comment_id": 103435832, "body": "FWIW I tried to do it using the State monad, the basic action being <code>shifter  = \\v -&gt; do { (x0,x1) &lt;- get; put (x1,v); return () }</code>. With that, the expression <code>execState  (mapM_ shifter [3..1000])  (1,2)</code> evaluates to (999,1000). The performance at ghc -O2 seems good, and I think this is a bit more adaptable to different but similar goals."}], "answers": [{"comments": [{"owner": {"reputation": 340, "user_id": 4496794, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-Ag6sWHOikqI/AAAAAAAAAAI/AAAAAAAABas/Ogf19q_MijI/photo.jpg?sz=128", "display_name": "storm125", "link": "https://stackoverflow.com/users/4496794/storm125"}, "edited": false, "score": 0, "creation_date": 1571987873, "post_id": 58545563, "comment_id": 103427451, "body": "Very informative, and also a little overwhelming for me at this stage.   In this case, all the &quot;benchmarking&quot; I did was run all the function for 100 million item list and notice that one takes longer than the other.   Benchmark with criterion seems rather useful. In addition, <code>ghci</code> seems to give different results (in terms of speed) as compared to making an exe first, like you said."}], "tags": [], "owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "is_accepted": true, "score": 9, "last_activity_date": 1572087491, "last_edit_date": 1572087491, "creation_date": 1571934655, "answer_id": 58545563, "question_id": 58541687, "link": "https://stackoverflow.com/questions/58541687/when-finding-last-but-second-element-of-a-list-why-is-using-last-the-fastest/58545563#58545563", "title": "When finding last but second element of a list, why is using `last` the fastest among these?", "body": "<p>When studying speed and optimization, it is very easy to <a href=\"https://stackoverflow.com/a/48412705\">obtain wildly wrong results</a>. In\nparticular, you cannot really say that one variant is faster than another without mentioning the\ncompiler version and the optimization mode of your benchmarking setup. Even then, modern\nprocessors are so sophisticated as to feature neural network based branch predictors, not to\nmention all kinds of caches, so, even with careful set-up, benchmarking results will be blurry.</p>\n\n<p>That being said...</p>\n\n<h2>Benchmarking is our friend.</h2>\n\n<p><a href=\"https://hackage.haskell.org/package/criterion\" rel=\"nofollow noreferrer\"><code>criterion</code></a> is a package that provides advanced benchmarking tools. I quickly drafted a\nbenchmark like this:</p>\n\n<pre><code>module Main where\n\nimport Criterion\nimport Criterion.Main\n\n-- slow\nmyButLast :: [a] -&gt; a\nmyButLast [x, y] = x\nmyButLast (x : xs) = myButLast xs\nmyButLast _ = error \"List too short\"\n\n-- decent\nmyButLast' :: [a] -&gt; a\nmyButLast' = (!! 1) . reverse\n\n-- fast\nmyButLast'' :: [a] -&gt; a\nmyButLast'' = last . init\n\nbutLast2 :: [a] -&gt; a\nbutLast2 (x :     _ : [ ] ) = x\nbutLast2 (_ : xs@(_ : _ ) ) = butLast2 xs\nbutLast2 _ = error \"List too short\"\n\nsetupEnv = do\n  let xs = [1 .. 10^7] :: [Int]\n  return xs\n\nbenches xs =\n  [ bench \"slow?\"   $ nf myButLast   xs\n  , bench \"decent?\" $ nf myButLast'  xs\n  , bench \"fast?\"   $ nf myButLast'' xs\n  , bench \"match2\"  $ nf butLast2    xs\n  ]\n\nmain = defaultMain\n    [ env setupEnv $ \\ xs -&gt; bgroup \"main\" $ let bs = benches xs in bs ++ reverse bs ]\n</code></pre>\n\n<p>As you see, I added the variant that explicitly matches on two elements at once, but otherwise it\nis the same code verbatim. I also run the benchmarks in reverse, so as to be aware of the bias due\nto caching. So, let us run and see!</p>\n\n<pre><code>% ghc --version\nThe Glorious Glasgow Haskell Compilation System, version 8.6.5\n\n\n% ghc -O2 -package criterion A.hs &amp;&amp; ./A\nbenchmarking main/slow?\ntime                 54.83 ms   (54.75 ms .. 54.90 ms)\n                     1.000 R\u00b2   (1.000 R\u00b2 .. 1.000 R\u00b2)\nmean                 54.86 ms   (54.82 ms .. 54.93 ms)\nstd dev              94.77 \u03bcs   (54.95 \u03bcs .. 146.6 \u03bcs)\n\nbenchmarking main/decent?\ntime                 794.3 ms   (32.56 ms .. 1.293 s)\n                     0.907 R\u00b2   (0.689 R\u00b2 .. 1.000 R\u00b2)\nmean                 617.2 ms   (422.7 ms .. 744.8 ms)\nstd dev              201.3 ms   (105.5 ms .. 283.3 ms)\nvariance introduced by outliers: 73% (severely inflated)\n\nbenchmarking main/fast?\ntime                 84.60 ms   (84.37 ms .. 84.95 ms)\n                     1.000 R\u00b2   (1.000 R\u00b2 .. 1.000 R\u00b2)\nmean                 84.46 ms   (84.25 ms .. 84.77 ms)\nstd dev              435.1 \u03bcs   (239.0 \u03bcs .. 681.4 \u03bcs)\n\nbenchmarking main/match2\ntime                 54.87 ms   (54.81 ms .. 54.95 ms)\n                     1.000 R\u00b2   (1.000 R\u00b2 .. 1.000 R\u00b2)\nmean                 54.85 ms   (54.81 ms .. 54.92 ms)\nstd dev              104.9 \u03bcs   (57.03 \u03bcs .. 178.7 \u03bcs)\n\nbenchmarking main/match2\ntime                 50.60 ms   (47.17 ms .. 53.01 ms)\n                     0.993 R\u00b2   (0.981 R\u00b2 .. 0.999 R\u00b2)\nmean                 60.74 ms   (56.57 ms .. 67.03 ms)\nstd dev              9.362 ms   (6.074 ms .. 10.95 ms)\nvariance introduced by outliers: 56% (severely inflated)\n\nbenchmarking main/fast?\ntime                 69.38 ms   (56.64 ms .. 78.73 ms)\n                     0.948 R\u00b2   (0.835 R\u00b2 .. 0.994 R\u00b2)\nmean                 108.2 ms   (92.40 ms .. 129.5 ms)\nstd dev              30.75 ms   (19.08 ms .. 37.64 ms)\nvariance introduced by outliers: 76% (severely inflated)\n\nbenchmarking main/decent?\ntime                 770.8 ms   (345.9 ms .. 1.004 s)\n                     0.967 R\u00b2   (0.894 R\u00b2 .. 1.000 R\u00b2)\nmean                 593.4 ms   (422.8 ms .. 691.4 ms)\nstd dev              167.0 ms   (50.32 ms .. 226.1 ms)\nvariance introduced by outliers: 72% (severely inflated)\n\nbenchmarking main/slow?\ntime                 54.87 ms   (54.77 ms .. 55.00 ms)\n                     1.000 R\u00b2   (1.000 R\u00b2 .. 1.000 R\u00b2)\nmean                 54.95 ms   (54.88 ms .. 55.10 ms)\nstd dev              185.3 \u03bcs   (54.54 \u03bcs .. 251.8 \u03bcs)\n</code></pre>\n\n<p>Looks like our <em>\"slow\"</em> version is not slow at all! And the intricacies of pattern matching do not\nadd anything. <em>(A slight speed up we see between two consecutive runs of <code>match2</code> I ascribe to the\neffects of caching.)</em></p>\n\n<p>There is a way to get more <em>\"scientific\"</em> data: we can <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/debugging.html#ghc-flag--ddump-simpl\" rel=\"nofollow noreferrer\"><code>-ddump-simpl</code></a> and take a look at the\nway the compiler sees our code.</p>\n\n<h2>Inspection of intermediate structures is our friend.</h2>\n\n<p><em>\"Core\"</em> is an internal language of GHC. Every Haskell source file is simplified to Core before\nbeing transformed into the final functional graph for the run time system to execute. If we look\nat this intermediate stage, it will tell us that <code>myButLast</code> and <code>butLast2</code> are equivalent. It\ndoes take looking, since, at the renaming stage, all our nice identifiers are randomly mangled.</p>\n\n<pre><code>% for i in `seq 1 4`; do echo; cat A$i.hs; ghc -O2 -ddump-simpl A$i.hs &gt; A$i.simpl; done\n\nmodule A1 where\n\n-- slow\nmyButLast :: [a] -&gt; a\nmyButLast [x, y] = x\nmyButLast (x : xs) = myButLast xs\nmyButLast _ = error \"List too short\"\n\nmodule A2 where\n\n-- decent\nmyButLast' :: [a] -&gt; a\nmyButLast' = (!! 1) . reverse\n\nmodule A3 where\n\n-- fast\nmyButLast'' :: [a] -&gt; a\nmyButLast'' = last . init\n\nmodule A4 where\n\nbutLast2 :: [a] -&gt; a\nbutLast2 (x :     _ : [ ] ) = x\nbutLast2 (_ : xs@(_ : _ ) ) = butLast2 xs\nbutLast2 _ = error \"List too short\"\n\n% ./EditDistance.hs *.simpl\n((\"A1.simpl\",\"A2.simpl\"),3866)\n((\"A1.simpl\",\"A3.simpl\"),3794)\n((\"A2.simpl\",\"A3.simpl\"),663)\n((\"A1.simpl\",\"A4.simpl\"),607)\n((\"A2.simpl\",\"A4.simpl\"),4188)\n((\"A3.simpl\",\"A4.simpl\"),4113)\n</code></pre>\n\n<p>It seems that <code>A1</code> and <code>A4</code> are the most similar. Thorough inspection will show that indeed the\ncode structures in <code>A1</code> and <code>A4</code> are identical. That <code>A2</code> and <code>A3</code> are alike is also reasonable\nsince both are defined as a composition of two functions.</p>\n\n<p>If you are going to examine the <code>core</code> output extensively, it makes sense to also <a href=\"https://stackoverflow.com/q/10693638\">supply flags</a> such as <code>-dsuppress-module-prefixes</code> and <code>-dsuppress-uniques</code>. They make it so much easier to read.</p>\n\n<h2>A short list of our enemies, too.</h2>\n\n<p>So, what can go wrong with benchmarking and optimization?</p>\n\n<ul>\n<li><code>ghci</code>, being designed for interactive play and quick iteration, compiles Haskell source to a certain flavour of byte code, rather than final executable, and eschews expensive optimizations in favour of quicker reload.</li>\n<li>Profiling seems like a nice tool to look into performance of individual bits and pieces of a complex program, but it can wreck compiler optimizations so badly, the results will be orders of magnitude off base.\n\n<ul>\n<li>Your safeguard is to profile every small bit of code as a separate executable, with its own benchmark runner.</li>\n</ul></li>\n<li>Garbage collection is tuneable. <a href=\"https://www.reddit.com/r/haskell/comments/dmci6o/merge_nonmoving_garbage_collector_7f72b540/\" rel=\"nofollow noreferrer\">Just today a new major feature was released.</a> Delays for garbage collection will affect performance in ways that are not straightforward to predict.</li>\n<li>As I mentioned, different compiler versions will build different code with different performance, so you have to know what version the <em>user</em> of your code will likely use to build it, and benchmark with that, before you make any promises.</li>\n</ul>\n\n<p>This may look sad. But it is really not the thing that should concern a Haskell programmer, most of the time. Real story: I have a friend who just recently started learning Haskell. They had written a program for numerical integration, and it was turtle slow. So we sat down together and wrote a <a href=\"https://en.wikipedia.org/wiki/Category_theory\" rel=\"nofollow noreferrer\">categorial</a> description of the algorithm, with diagrams and stuff. When they re-wrote the code to align with the abstract description, it magically became, like, cheetah fast, and slim on memory too. We calculated \u03c0 in no time. Moral of the story? Perfect abstract structure, and your code will optimize itself.</p>\n"}], "owner": {"reputation": 340, "user_id": 4496794, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-Ag6sWHOikqI/AAAAAAAAAAI/AAAAAAAABas/Ogf19q_MijI/photo.jpg?sz=128", "display_name": "storm125", "link": "https://stackoverflow.com/users/4496794/storm125"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 160, "favorite_count": 2, "accepted_answer_id": 58545563, "answer_count": 1, "score": 10, "last_activity_date": 1572087491, "creation_date": 1571921042, "question_id": 58541687, "link": "https://stackoverflow.com/questions/58541687/when-finding-last-but-second-element-of-a-list-why-is-using-last-the-fastest", "title": "When finding last but second element of a list, why is using `last` the fastest among these?", "body": "<p>There are 3 function given below which find the last but second element in a list. The one using <code>last . init</code> seems much faster than the rest. I can't seem to figure out why.</p>\n\n<p>For testing, I used an input list of <code>[1..100000000]</code> (100 million). The last one runs almost instantly whereas the others take several seconds.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>-- slow\nmyButLast :: [a] -&gt; a\nmyButLast [x, y] = x\nmyButLast (x : xs) = myButLast xs\nmyButLast _ = error \"List too short\"\n\n-- decent\nmyButLast' :: [a] -&gt; a\nmyButLast' = (!! 1) . reverse\n\n-- fast\nmyButLast'' :: [a] -&gt; a\nmyButLast'' = last . init\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1571913253, "post_id": 58538798, "comment_id": 103400818, "body": "Have you tried adding <code>Ord</code> to the <code>deriving</code> clause for the <code>Card</code> type?"}, {"owner": {"reputation": 893, "user_id": 6248287, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/tPegr.jpg?s=128&g=1", "display_name": "\u019b\u019b\u019b", "link": "https://stackoverflow.com/users/6248287/%c6%9b%c6%9b%c6%9b"}, "edited": false, "score": 0, "creation_date": 1571919136, "post_id": 58538798, "comment_id": 103403899, "body": "Read the first 2 paragraphs to understand how Ord is derived for user-defined datatype. <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/base-4.12.0.0/docs/Data-Ord.html</a>"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1571929812, "post_id": 58538798, "comment_id": 103409885, "body": "<code>sortHand = sortOn (\\(Card s _) -&gt; s)</code>."}], "answers": [{"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 1, "last_activity_date": 1571920907, "creation_date": 1571920907, "answer_id": 58541645, "question_id": 58538798, "link": "https://stackoverflow.com/questions/58538798/how-do-you-sort-a-list-of-tuple-by-one-of-the-tuple-haskell/58541645#58541645", "title": "How do you sort a list of tuple by one of the tuple-Haskell", "body": "<p>This is easy if you make <code>Card</code> a <em>record type</em>:</p>\n\n<pre><code>data Card = Card { cardSuit::Suit, cardRank::Rank }\n  deriving (Eq)\n</code></pre>\n\n<pre><code>*Main> :m +Data.List\n*Main Data.List> :m +Data.Ord\n*Main Data.List Data.Ord> sortBy (comparing cardSuit) [Card Club Three, Card Diamond Two, Card Spade Eight, Card Spade Five]\n[Card {cardSuit = Spade, cardRank = Eight},Card {cardSuit = Spade, cardRank = Five},Card {cardSuit = Club, cardRank = Three},Card {cardSuit = Diamond, cardRank = Two}]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "edited": false, "score": 0, "creation_date": 1571972637, "post_id": 58542192, "comment_id": 103423789, "body": "Why <code>sortBy</code> and <code>comparing</code> when <code>sortOn</code> does the same thing in one function?"}], "tags": [], "owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "is_accepted": false, "score": 3, "last_activity_date": 1571922808, "creation_date": 1571922808, "answer_id": 58542192, "question_id": 58538798, "link": "https://stackoverflow.com/questions/58538798/how-do-you-sort-a-list-of-tuple-by-one-of-the-tuple-haskell/58542192#58542192", "title": "How do you sort a list of tuple by one of the tuple-Haskell", "body": "<p>This is what the <a href=\"https://www.stackage.org/haddock/lts-14.11/base-4.12.0.0/Data-List.html#v:sortBy\" rel=\"nofollow noreferrer\"><code>sortBy :: (a -&gt; a -&gt; Ordering) -&gt; [a] -&gt; [a]</code></a> and <a href=\"https://www.stackage.org/haddock/lts-14.11/base-4.12.0.0/Data-Ord.html#v:comparing\" rel=\"nofollow noreferrer\"><code>comparing :: Ord b =&gt; (a -&gt; b) -&gt; (b -&gt; b -&gt; Ordering)</code></a> functions are for. The first lets you sort by a custom ordering, the other lets you define an ordering by mapping <code>a</code>'s to some <code>b</code> which has an ordering (a card to a suit in this example).</p>\n\n<p>You could use these together to define</p>\n\n<pre><code>sortBySuit hand = sortBy (comparing $ \\(Card suit _) -&gt; suit) hand\n</code></pre>\n\n<p>Note however due to how the automatically derived <code>Ord</code> instances work your <code>Card</code> type would already be ordered by suit first and then rank if you just added a <code>deriving Ord</code> to your data definition.</p>\n"}], "owner": {"reputation": 1, "user_id": 10424430, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-X5OVOMMccrA/AAAAAAAAAAI/AAAAAAAAAAA/AAN31DUYBFSKo85OM9KBWQXY8lKIyEnm_A/mo/photo.jpg?sz=128", "display_name": "Josh", "link": "https://stackoverflow.com/users/10424430/josh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 118, "favorite_count": 0, "answer_count": 2, "score": -2, "last_activity_date": 1571922808, "creation_date": 1571910973, "last_edit_date": 1571912813, "question_id": 58538798, "link": "https://stackoverflow.com/questions/58538798/how-do-you-sort-a-list-of-tuple-by-one-of-the-tuple-haskell", "title": "How do you sort a list of tuple by one of the tuple-Haskell", "body": "<p>I have a list of cards and want to sort list of cards([Card]) by suit but the way Card is defined makes it confusing to navigate. Can someone help me define a simple function to sort the list.</p>\n\n<p>Tried things like :</p>\n\n<pre><code>sortHand ::[Card]-&gt; [Card] \nsortHand hand = sort hand\n</code></pre>\n\n<p>but I can't figure out how to filter the suit only</p>\n\n<p>Card is defined:</p>\n\n<pre><code>data Suit = Spade | Club | Diamond | Heart\n  deriving (Eq, Ord, Enum, Bounded)\n\ndata Rank = Two | Three | Four | Five | Six | Seven | Eight | Nine | Ten\n          | Jack | Queen | King | Ace\n  deriving (Eq, Ord, Enum, Bounded)\n\ndata Card = Card Suit Rank\n  deriving (Eq)\n</code></pre>\n"}, {"tags": ["haskell", "aeson"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1571907408, "post_id": 58537640, "comment_id": 103397735, "body": "related: <a href=\"https://stackoverflow.com/q/48474587/67579\">stackoverflow.com/q/48474587/67579</a>"}], "owner": {"reputation": 999, "user_id": 8604871, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/36382829e5be7f6da95308288d976949?s=128&d=identicon&r=PG&f=1", "display_name": "Madderote", "link": "https://stackoverflow.com/users/8604871/madderote"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 38, "favorite_count": 0, "closed_date": 1571912895, "answer_count": 0, "score": 2, "last_activity_date": 1571906999, "creation_date": 1571906999, "question_id": 58537640, "link": "https://stackoverflow.com/questions/58537640/haskell-type-record-syntax", "closed_reason": "Duplicate", "title": "Haskell type record syntax", "body": "<p>Need Aeson to encode API commands, but one of the keywords I need in the type's record syntax is <code>data</code> which is obviously not allowed. How can I still use it? </p>\n\n<pre><code>data\u00a0MatrixTX\u00a0=\u00a0MatrixTX\u00a0\u00a0  {\u00a0op\u00a0\u00a0\u00a0::\u00a0T.Text\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0,\u00a0data\u00a0\u00a0::\u00a0T.Text\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0,\u00a0kwl\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0::\u00a0T.Text\u00a0--\u00a0keyword\u00a0list\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0,\u00a0kw\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0::\u00a0T.Text\u00a0--\u00a0keyword\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\u00a0deriving\u00a0(Show,\u00a0Generic)\u00a0\n</code></pre>\n"}, {"tags": ["haskell", "functional-programming", "huffman-code"], "comments": [{"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 1, "creation_date": 1571886859, "post_id": 58533383, "comment_id": 103390392, "body": "You&#39;ve chosen a rather nontrivial example to understand how recursion works. Try traversing lists for a start."}, {"owner": {"reputation": 37, "user_id": 11342136, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/74465da242c8a582db7f6f6292b5cc25?s=128&d=identicon&r=PG&f=1", "display_name": "napqueen6078", "link": "https://stackoverflow.com/users/11342136/napqueen6078"}, "reply_to_user": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 1, "creation_date": 1571886991, "post_id": 58533383, "comment_id": 103390422, "body": "I actually know how to traverse lists pretty well, I think, and have written a lot of functions with lists. I get the basics of this kind of thinking, I just can&#39;t apply it to anything, which is frustrating."}, {"owner": {"reputation": 396, "user_id": 2951059, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/306b73823397b4e4e9b511229689f5e0?s=128&d=identicon&r=PG", "display_name": "Garrison", "link": "https://stackoverflow.com/users/2951059/garrison"}, "edited": false, "score": 3, "creation_date": 1571896301, "post_id": 58533383, "comment_id": 103392694, "body": "<code>there aren&#39;t a lot of online resources</code> Is there a particular type of resource you find most helpful? A lot of people recommend &quot;Learn you a Haskell&quot;. It&#39;s free online. Here is the chapter on recursion: <a href=\"http://learnyouahaskell.com/recursion\" rel=\"nofollow noreferrer\">learnyouahaskell.com/recursion</a>"}], "answers": [{"comments": [{"owner": {"reputation": 37, "user_id": 11342136, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/74465da242c8a582db7f6f6292b5cc25?s=128&d=identicon&r=PG&f=1", "display_name": "napqueen6078", "link": "https://stackoverflow.com/users/11342136/napqueen6078"}, "edited": false, "score": 0, "creation_date": 1571890368, "post_id": 58533760, "comment_id": 103391070, "body": "Dang, this is EXTREMELY informative. Thank you so much! I do have a question though, if you don&#39;t mind answering: why is the base case have outer brackets but the recursive case does not? This may seem like a stilly question, but I still have a hard time understanding certain Haskell syntax (Just the other day, you helped me out with some code I&#39;d correctly thought out but couldn&#39;t get the syntax right on, and I&#39;d like to avoid those situations going forward). Again, thank you!"}, {"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "reply_to_user": {"reputation": 37, "user_id": 11342136, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/74465da242c8a582db7f6f6292b5cc25?s=128&d=identicon&r=PG&f=1", "display_name": "napqueen6078", "link": "https://stackoverflow.com/users/11342136/napqueen6078"}, "edited": false, "score": 0, "creation_date": 1571890484, "post_id": 58533760, "comment_id": 103391096, "body": "Both the base and the recursive cases return a list. The base case constructs the list using the bracket syntax. The recursive case constructs the list by concatenating two other lists with the <code>++</code> operator."}], "tags": [], "owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "is_accepted": true, "score": 7, "last_activity_date": 1571888944, "last_edit_date": 1571888944, "creation_date": 1571888019, "answer_id": 58533760, "question_id": 58533383, "link": "https://stackoverflow.com/questions/58533383/difficulty-implementing-huffman-tree-in-haskell/58533760#58533760", "title": "Difficulty implementing Huffman tree in Haskell", "body": "<p>Consider the <code>Fork</code>. It has two subtrees, and each of those subtrees has some encoding.</p>\n\n<p>Let's say that the left subtree encoding is:</p>\n\n<pre><code>[(x, pathToX), (y, pathToY)]\n</code></pre>\n\n<p>And let's say that the right subtree encoding is:</p>\n\n<pre><code>[(a, pathToA), (b, pathToB)]\n</code></pre>\n\n<p>Now, can you see what the encoding of the whole fork should be? It should be this:</p>\n\n<pre><code>[(a, True : pathToA), (b, True : pathToB), (x, False : pathToX), (y, False : pathToY)]\n</code></pre>\n\n<p>Do you agree with that? If not, give it a think. Maybe work through some small examples. Until you agree that this is the case.</p>\n\n<p>See what I did there? I prepended a <code>False</code> to each path in the left subtree, and then I prepended <code>True</code> to each path of the right subtree.</p>\n\n<p>Let's write that down in Haskell syntax:</p>\n\n<pre><code>encode (Fork left right) = prependToEach False (encode left) ++ prependToEach True (encode right)\n</code></pre>\n\n<p>Now you may have noticed that I cheated here: I'm using a function <code>prependToEach</code> that doesn't exist. Well, no matter, let's define it!</p>\n\n<pre><code>prependToEach x list = map (prepend x) list\n</code></pre>\n\n<p>See? Prepending a thing to each element of the list is just mapping a single-element prepending function over the list.</p>\n\n<p>But of course, I cheated again: there is no such function as <code>prepend</code> yet. So let there be one!</p>\n\n<pre><code>prepend x (a, path) = (a, x : path)\n</code></pre>\n\n<p>And there you go! Now all that's left is to define the base case: what should the path of a <code>Leaf</code> be? Well, according to the example you gave, each <code>Leaf</code> would have an empty path, reflecting the fact that you don't need to take any turns to get from that leaf to that same leaf:</p>\n\n<pre><code>encode (Leaf a) = [(a, [])]\n</code></pre>\n\n<p>And now, putting it all together:</p>\n\n<pre><code>encode :: HTree a -&gt; [(a, [Bool])]\nencode (Leaf a) = [(a, [])]\nencode (Fork left right) = prependToEach False (encode left) ++ prependToEach True (encode right)\n    where\n    prependToEach x list = map (prepend x) list\n    prepend x (a, path) = (a, x : path)\n</code></pre>\n\n<p>And now that we understand how it was constructed and why, we may shorten it a little by making use of list comprehensions (though I consider this step very much optional):</p>\n\n<pre><code>encode :: HTree a -&gt; [(a, [Bool])]\nencode (Leaf a) = [(a, [])]\nencode (Fork left right) = [(x, False : p) | (x, p) &lt;- encode left] ++ [(x, True : p) | (x, p) &lt;- encode right]\n</code></pre>\n\n<hr>\n\n<p>P.S. note that a type cannot be named <code>htree</code>, because type names in Haskell must be capitalized. You may notice that I renamed it to <code>HTree</code> in my final snippet.</p>\n"}, {"comments": [{"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1572013375, "post_id": 58544095, "comment_id": 103439777, "body": "Concatenating lists indeed requires reallocation of the whole list in languages with applicative evaluation order, such as Scala, F#, Ocaml, and pretty much every other language. In Haskell, however, due to its normal evaluation order, concatenation does not perform a reallocation until you force the result, and even then reallocation only happens once for the whole result, not once per concatenation."}], "tags": [], "owner": {"reputation": 20310, "user_id": 525980, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/8dafe66793ee2f32192e9fcefb389a12?s=128&d=identicon&r=PG", "display_name": "Clinton", "link": "https://stackoverflow.com/users/525980/clinton"}, "is_accepted": false, "score": 0, "last_activity_date": 1571929243, "creation_date": 1571929243, "answer_id": 58544095, "question_id": 58533383, "link": "https://stackoverflow.com/questions/58533383/difficulty-implementing-huffman-tree-in-haskell/58544095#58544095", "title": "Difficulty implementing Huffman tree in Haskell", "body": "<p><a href=\"https://stackoverflow.com/a/58533760/525980\">Fyodor's</a> answer is a good one, but it's worth being wary of using <code>(++)</code>. Often if you're not cafeful it can cause your code to run really slowly for particular inputs, in this case an unbalanced tree.</p>\n\n<p>The reason is that (list of N elements) ++ (list of 1 element) has to construct an entirely new list with N+1 elements. So adding only a few elements at a time this way can be slow.</p>\n\n<p>A way to avoid this is to have your intermediate functions, instead of returning lists, returning functions that when passed a list return a list. That way you can just combine functions (which is fast) and construct the list at the end, which will now be done left to right without recreating elements.</p>\n\n<p>Here's an example <code>encode</code> function using this method:</p>\n\n<pre><code>data HTree a = Leaf a | Fork (HTree a) (HTree a) deriving (Show, Eq)\n\nencode :: HTree a -&gt; [(a, [Bool])]\nencode tree = go [] tree [] where\n  go :: [Bool] -&gt; HTree a -&gt; [(a, [Bool])] -&gt; [(a, [Bool])]\n  go path (Leaf leaf) = ((leaf, path):)\n  go path (Fork left right) = go (False:path) left . go (True:path) right\n</code></pre>\n\n<p>Note you don't really need the type signatures, I've just included them for clarity (and it's probably good practice) but removed it's only 3 lines:</p>\n\n<pre><code>encode tree = go [] tree [] where\n  go path (Leaf leaf) = ((leaf, path):)\n  go path (Fork left right) = go (False:path) left . go (True:path) right\n</code></pre>\n\n<p>Note this returns the paths from leaf to root, if you want them root to leaf you can either just reverse them at the end or use my return a function trick again.</p>\n"}], "owner": {"reputation": 37, "user_id": 11342136, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/74465da242c8a582db7f6f6292b5cc25?s=128&d=identicon&r=PG&f=1", "display_name": "napqueen6078", "link": "https://stackoverflow.com/users/11342136/napqueen6078"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 254, "favorite_count": 0, "accepted_answer_id": 58533760, "answer_count": 2, "score": 2, "last_activity_date": 1571929243, "creation_date": 1571884817, "last_edit_date": 1571885228, "question_id": 58533383, "link": "https://stackoverflow.com/questions/58533383/difficulty-implementing-huffman-tree-in-haskell", "title": "Difficulty implementing Huffman tree in Haskell", "body": "<p>I'm trying to learn Haskell, but find it really difficult, and there aren't a lot of online resources. I seem to have some major lack of understanding of how the recursive calls are supposed to look, and would appreciate being pointed in the right direction. I'm trying to take in a tree and return every leaf node with the symbol stored there, as well as the path taken to get there. (So the input (Fork (Leaf x) (Leaf y)) would have the output [(x,[False]) ,(y,[True])] ). My code looks like this:</p>\n\n<pre><code>data htree a = Leaf a | Fork (htree a) (htree a) deriving (Show, Eq)\n\nencode :: htree a -&gt; [(a, [Bool])]\nencode (Leaf a) = [(a, ????)]\n</code></pre>\n\n<p>I understand this isn't much to go off of. I've identified the base case, which is whenever you reach a leaf, you return the symbol stored at the leaf, and the path you've taken to get there. Left is false, right is true. I'm not sure how to put all this information together to get moving on my code. I would appreciate any kind of guidance here.</p>\n"}]