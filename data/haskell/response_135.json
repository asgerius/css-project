[{"tags": ["haskell", "yesod", "hamlet"], "comments": [{"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 2, "creation_date": 1502307838, "post_id": 45599050, "comment_id": 78158247, "body": "<code>preEscapedText &quot;&lt;div class=\\&quot;c\\&quot;&gt;a&lt;&#47;div&gt;&quot;</code> doesn&#39;t work for you somehow?"}, {"owner": {"reputation": 71, "user_id": 3679331, "user_type": "registered", "profile_image": "https://graph.facebook.com/521210191/picture?type=large", "display_name": "ricardos", "link": "https://stackoverflow.com/users/3679331/ricardos"}, "reply_to_user": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1502349642, "post_id": 45599050, "comment_id": 78172686, "body": "No. It is not dry. I will have to make duplicated functions with just different classes. for example <code>userPhotoProfile = preEscapedText &quot;&lt;div class=&quot;user-photo-profile&quot;&gt;&lt;img....</code>, and  <code>userPhotoOther = preEscapedText &quot;&lt;div class=&quot;user-photo&quot;&gt;&lt;img....</code>  where ... can be something long and repeated."}, {"owner": {"reputation": 754, "user_id": 2140910, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CtvpI.jpg?s=128&g=1", "display_name": "Bjartur Thorlacius", "link": "https://stackoverflow.com/users/2140910/bjartur-thorlacius"}, "edited": false, "score": 1, "creation_date": 1502361641, "post_id": 45599050, "comment_id": 78181045, "body": "Which one are you using, preEscapedToHtml or preEscapedText? In any case, can you not refactor your code to use the <code>H.div &quot;a&quot; ! class_ &quot;c&quot;</code> method? That seems much cleaner."}, {"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1502374201, "post_id": 45599050, "comment_id": 78191089, "body": "@ricardos if you want DRY, you can just parametrize it: <code>mkDiv c = preEscapedText (&quot;&lt;div class=\\&quot;&quot; ++ c ++ &quot;\\&quot;&gt;a&lt;&#47;div&gt;&quot;)</code>. The point of <code>preEscapedText</code> is that you just give it some text, and it doesn&#39;t really know if there are any tags inside it or anything. So naturally it can&#39;t do anything about injecting classes."}, {"owner": {"reputation": 71, "user_id": 3679331, "user_type": "registered", "profile_image": "https://graph.facebook.com/521210191/picture?type=large", "display_name": "ricardos", "link": "https://stackoverflow.com/users/3679331/ricardos"}, "reply_to_user": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1502390469, "post_id": 45599050, "comment_id": 78202000, "body": "@FyodorSoikin Not good enough, in some cases I want to add a class, maybe in other case I will need to add some &quot;data-*&quot; attribute or whatever the requirements will be."}, {"owner": {"reputation": 71, "user_id": 3679331, "user_type": "registered", "profile_image": "https://graph.facebook.com/521210191/picture?type=large", "display_name": "ricardos", "link": "https://stackoverflow.com/users/3679331/ricardos"}, "reply_to_user": {"reputation": 754, "user_id": 2140910, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CtvpI.jpg?s=128&g=1", "display_name": "Bjartur Thorlacius", "link": "https://stackoverflow.com/users/2140910/bjartur-thorlacius"}, "edited": false, "score": 0, "creation_date": 1502390608, "post_id": 45599050, "comment_id": 78202098, "body": "@BjarturThorlacius, that is the current solution, and the question is how to avoid this. But personally I don&#39;t find it very attractive. I agree it is type safe, is it? and also editable."}], "answers": [{"comments": [{"owner": {"reputation": 71, "user_id": 3679331, "user_type": "registered", "profile_image": "https://graph.facebook.com/521210191/picture?type=large", "display_name": "ricardos", "link": "https://stackoverflow.com/users/3679331/ricardos"}, "edited": false, "score": 0, "creation_date": 1502533933, "post_id": 45635277, "comment_id": 78257027, "body": "I think the best solution will be to keep the parent in a tag, and the children in shamlet or preescaped, example: <code>linkToHello = a ! href &quot;&#47;hello&quot; $ [shamlet| ...|]</code> so, the inner part will be written in html while the parent is editable."}], "tags": [], "owner": {"reputation": 754, "user_id": 2140910, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CtvpI.jpg?s=128&g=1", "display_name": "Bjartur Thorlacius", "link": "https://stackoverflow.com/users/2140910/bjartur-thorlacius"}, "is_accepted": false, "score": 0, "last_activity_date": 1502454572, "creation_date": 1502454572, "answer_id": 45635277, "question_id": 45599050, "link": "https://stackoverflow.com/questions/45599050/how-can-i-add-class-to-preescapedtohtml-in-haskell-blaze-or-hamlet/45635277#45635277", "title": "How can I add class_ to preEscapedToHtml in Haskell Blaze or Hamlet?", "body": "<p>The most accurate type in Blaze for an HTML tag is <code>Tag</code>. <code>H.div</code> is of that type, is it not? What should <code>preEscapedText \"&lt;title&gt;Example&lt;/title&gt;&lt;p&gt;HTML document\" ! class_ \"c\"</code> do anyway? Attributes can only be added to tags, and not to HTML documents or fragments. Thus you should keep your tags with type <code>Tag</code> until you've added all attributes you need and are ready to combine multiple tags into a HTML fragment or document. If you need to keep track of multiple nodes you're generating in parallel, you can store them in a list, tuple or a record while you're modifying them. Then merge then into an <code>HTML</code> at the end.</p>\n"}], "owner": {"reputation": 71, "user_id": 3679331, "user_type": "registered", "profile_image": "https://graph.facebook.com/521210191/picture?type=large", "display_name": "ricardos", "link": "https://stackoverflow.com/users/3679331/ricardos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 98, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1502454572, "creation_date": 1502306601, "last_edit_date": 1502307724, "question_id": 45599050, "link": "https://stackoverflow.com/questions/45599050/how-can-i-add-class-to-preescapedtohtml-in-haskell-blaze-or-hamlet", "title": "How can I add class_ to preEscapedToHtml in Haskell Blaze or Hamlet?", "body": "<p>How can I add a class to a <code>preEscapedToHtml</code>?</p>\n\n<pre><code>renderHtml $ preEscapedText \"&lt;div&gt;a&lt;/div&gt;\" ! class_ \"c\"\n\"&lt;div&gt;a&lt;/div&gt;\"\n</code></pre>\n\n<p>or to an HTML generated by a hamlet template?</p>\n\n<p>however this works:</p>\n\n<pre><code>renderHtml $ H.div \"a\" ! class_ \"c\"\n\"&lt;div class=\\\"c\\\"&gt;a&lt;/div&gt;\"\n</code></pre>\n"}, {"tags": ["haskell", "cabal", "haskell-stack"], "comments": [{"owner": {"reputation": 3075, "user_id": 1164871, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d6a54a3752ab47170d790085935988f?s=128&d=identicon&r=PG", "display_name": "mgsloan", "link": "https://stackoverflow.com/users/1164871/mgsloan"}, "edited": false, "score": 3, "creation_date": 1502305294, "post_id": 45597371, "comment_id": 78156904, "body": "Unfortunately, this is a known issue, related to deficiencies in Cabal, see <a href=\"https://github.com/commercialhaskell/stack/issues/1406\" rel=\"nofollow noreferrer\">github.com/commercialhaskell/stack/issues/1406</a>"}, {"owner": {"reputation": 37486, "user_id": 371753, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/znFEK.jpg?s=128&g=1", "display_name": "sclv", "link": "https://stackoverflow.com/users/371753/sclv"}, "reply_to_user": {"reputation": 3075, "user_id": 1164871, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d6a54a3752ab47170d790085935988f?s=128&d=identicon&r=PG", "display_name": "mgsloan", "link": "https://stackoverflow.com/users/1164871/mgsloan"}, "edited": false, "score": 0, "creation_date": 1517003254, "post_id": 45597371, "comment_id": 83933883, "body": "@mgsloan it looks like the latest stack should resolve this? can you provide that as an answer if so?"}, {"owner": {"reputation": 1496, "user_id": 7350814, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bd7e1bdad619c54ab51e05ff9cfaa199?s=128&d=identicon&r=PG&f=1", "display_name": "Jogger", "link": "https://stackoverflow.com/users/7350814/jogger"}, "reply_to_user": {"reputation": 37486, "user_id": 371753, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/znFEK.jpg?s=128&g=1", "display_name": "sclv", "link": "https://stackoverflow.com/users/371753/sclv"}, "edited": false, "score": 0, "creation_date": 1517066053, "post_id": 45597371, "comment_id": 83947467, "body": "@sclv: Many thanks for the hint. What is <i>latest version</i>?  Is it what I get with <code>stack upgrade</code> (1.6.3 as of today 27. Feb 2018) or is it the current version from <a href=\"https://github.com/commercialhaskell/stack\" rel=\"nofollow noreferrer\">https://github.com/commercialhaskell/stack</a>?"}, {"owner": {"reputation": 37486, "user_id": 371753, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/znFEK.jpg?s=128&g=1", "display_name": "sclv", "link": "https://stackoverflow.com/users/371753/sclv"}, "edited": false, "score": 0, "creation_date": 1517121938, "post_id": 45597371, "comment_id": 83960503, "body": "From my reading of the above referenced ticket (which is where I got my info) this should be in 1.6.3"}, {"owner": {"reputation": 1496, "user_id": 7350814, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bd7e1bdad619c54ab51e05ff9cfaa199?s=128&d=identicon&r=PG&f=1", "display_name": "Jogger", "link": "https://stackoverflow.com/users/7350814/jogger"}, "reply_to_user": {"reputation": 37486, "user_id": 371753, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/znFEK.jpg?s=128&g=1", "display_name": "sclv", "link": "https://stackoverflow.com/users/371753/sclv"}, "edited": false, "score": 0, "creation_date": 1517142804, "post_id": 45597371, "comment_id": 83965454, "body": "@sclv: I retested and unfortunately, I have to report <i>no success</i>. The problem is still here! I&#39;m using: stack 1.6.3, lts-10.0, ghc 8.2.2, cabal-install 2.0.0.1 Cabal library 2.0.1.0. The above referenced issue 1406 points to <a href=\"https://github.com/commercialhaskell/stack/issues/3486\" rel=\"nofollow noreferrer\">issue #3486 stack build copies unnecessary executables when asked to build just a single executable</a> and this is issue is still open."}, {"owner": {"reputation": 3075, "user_id": 1164871, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d6a54a3752ab47170d790085935988f?s=128&d=identicon&r=PG", "display_name": "mgsloan", "link": "https://stackoverflow.com/users/1164871/mgsloan"}, "edited": false, "score": 0, "creation_date": 1517417045, "post_id": 45597371, "comment_id": 84090184, "body": "The latest version of stack solves this, but only if you&#39;ve built all executables at least once.  You can probably trick it by shimming in an empty file in the directory that it checks"}, {"owner": {"reputation": 1496, "user_id": 7350814, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bd7e1bdad619c54ab51e05ff9cfaa199?s=128&d=identicon&r=PG&f=1", "display_name": "Jogger", "link": "https://stackoverflow.com/users/7350814/jogger"}, "reply_to_user": {"reputation": 3075, "user_id": 1164871, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d6a54a3752ab47170d790085935988f?s=128&d=identicon&r=PG", "display_name": "mgsloan", "link": "https://stackoverflow.com/users/1164871/mgsloan"}, "edited": false, "score": 0, "creation_date": 1517489948, "post_id": 45597371, "comment_id": 84122371, "body": "@mgsloan: Many thanks for your kind hint! Yes, this way it works! It&#39;s a little bit tricky, but I&#39;ll get used to it..."}], "owner": {"reputation": 1496, "user_id": 7350814, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bd7e1bdad619c54ab51e05ff9cfaa199?s=128&d=identicon&r=PG&f=1", "display_name": "Jogger", "link": "https://stackoverflow.com/users/7350814/jogger"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 285, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1502300574, "creation_date": 1502300574, "question_id": 45597371, "link": "https://stackoverflow.com/questions/45597371/compile-only-one-target-from-a-stack-project-with-multiple-targets-in-the-cabal", "title": "Compile only one target from a stack project with multiple targets in the cabal file", "body": "<p>I have a <a href=\"https://stackoverflow.com/questions/14238729/producing-multiple-executables-from-single-project\">similar setup like this SO question</a>.\nHowever I'm working with <em>stack</em> and not directoly with <em>cabal</em>:</p>\n\n<pre><code>stack.yaml\nTest.cabal\nsrc/FirstExe\nsrc/SecondExe\n</code></pre>\n\n<p>The stack file is minimal</p>\n\n<pre><code>resolver: lts-8.17\npackages:\n- '.'\n</code></pre>\n\n<p>The file <em>Test.cabal</em> has 2 executables:</p>\n\n<pre><code>name:               Test\nversion:            0.1.0.0\nbuild-type:         Simple\ncabal-version:      &gt;=1.8\n\nexecutable FirstExe\n  hs-source-dirs:   src\n  main-is:          FirstExe.hs\n  build-depends:    base &gt;=4.8 &amp;&amp; &lt;4.10\n\nexecutable SecondExe\n  hs-source-dirs:   src\n  main-is:          SecondExe.hs\n  build-depends:    base &gt;=4.8 &amp;&amp; &lt;4.10\n</code></pre>\n\n<p>The <em>src/FirstExe.hs</em> compiles successfully:</p>\n\n<pre><code>main :: IO ()\nmain = putStrLn \"FirstExe compiles nicely\"\n</code></pre>\n\n<p>The <em>src/SecondExe.hs</em> has an error:</p>\n\n<pre><code>main :: IO ()\nmain = \"SecondExe gives compiler error\"  -- putStrLn is missing ...\n</code></pre>\n\n<p>(Note: The goal of this error is to see, when stack builds the <em>SecondExe</em>.)</p>\n\n<p>When I do a <code>stack ide targets</code> I get</p>\n\n<pre><code>Test:exe:FirstExe\nTest:exe:SecondExe\n</code></pre>\n\n<p>Now I want to compile <strong>only</strong> the first target <em>FirstExe</em> without compiling the second and without changing\nthe <em>Test.cabal</em> file. In reallity I will switch between the 2 executables.</p>\n\n<p>According to the <a href=\"https://docs.haskellstack.org/en/v1.4.0/build_command/#target-syntax\" rel=\"nofollow noreferrer\"><em>Haskell Tool Stack</em> documentation</a> it should\nbe possible </p>\n\n<p>I tried two possibilies:</p>\n\n<pre><code>stack build  :FirstExe\nstack build Test:exe:FirstExe\n</code></pre>\n\n<p>In both cases it compiles the second executable too!</p>\n\n<pre><code>Test-0.1.0.0: configure (exe)\nConfiguring Test-0.1.0.0...\nTest-0.1.0.0: build (exe)\nPreprocessing executable 'FirstExe' for Test-0.1.0.0...\nPreprocessing executable 'SecondExe' for Test-0.1.0.0...\n[1 of 1] Compiling Main             ( src/SecondExe.hs, .stack-work/dist/x86_64-linux-nopie/Cabal-1.24.2.0/build/SecondExe/SecondExe-tmp/Main.o )\n\n/home/roland/Projekte/HaskellTutorials/Test/src/SecondExe.hs:2:8: error:\n    * Couldn't match expected type `IO ()' with actual type `[Char]'\n    * In the expression: \"SecondExe gives compiler error\"\n      In an equation for `main': main = \"SecondExe gives compiler error\"\n\n--  While building package Test-0.1.0.0 using:\n      /home/roland/.stack/setup-exe-cache/x86_64-linux-nopie/Cabal-simple_mPHDZzAJ_1.24.2.0_ghc-8.0.2 --builddir=.stack-work/dist/x86_64-linux-nopie/Cabal-1.24.2.0 build exe:FirstExe exe:SecondExe --ghc-options \" -ddump-hi -ddump-to-file\"\n    Process exited with code: ExitFailure 1\n</code></pre>\n\n<p>What am I doing wrong?</p>\n"}, {"tags": ["haskell", "yesod", "persistent"], "comments": [{"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 1, "creation_date": 1502291306, "post_id": 45594313, "comment_id": 78148396, "body": "What do you mean by non persisted field ? Can you explain with a example possibly."}, {"owner": {"reputation": 427, "user_id": 7941330, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/u7jCJ.jpg?s=128&g=1", "display_name": "F&#225;bio Roberto Teodoro", "link": "https://stackoverflow.com/users/7941330/f%c3%a1bio-roberto-teodoro"}, "reply_to_user": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 0, "creation_date": 1502299511, "post_id": 45594313, "comment_id": 78153539, "body": "Thank you @Sibi. Edited to include an example. HTH"}, {"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 1, "creation_date": 1502308318, "post_id": 45594313, "comment_id": 78158469, "body": "As far as I know, persistent doesn&#39;t support that. But this seems to me like a <a href=\"https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem\">case of XY problem</a>. Can you say what you are trying to achieve via that ?"}, {"owner": {"reputation": 427, "user_id": 7941330, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/u7jCJ.jpg?s=128&g=1", "display_name": "F&#225;bio Roberto Teodoro", "link": "https://stackoverflow.com/users/7941330/f%c3%a1bio-roberto-teodoro"}, "reply_to_user": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 0, "creation_date": 1502376981, "post_id": 45594313, "comment_id": 78193387, "body": "I want the benefit of automatic generation of json instances and Entity datatype, but one field is always null in the database. I could wrap the Entity in another type that have this field, but I found it much complicated the access to the fields this way. The actual code is the <code>Task</code> entity in this <a href=\"https://github.com/frt/happyscheduler/blob/master/config/models#L13\" rel=\"nofollow noreferrer\">models</a> file and this <a href=\"https://github.com/frt/happyscheduler/blob/master/Model.hs#L16\" rel=\"nofollow noreferrer\">instance declaration</a>. I am looking for ways to make it cleaner."}], "owner": {"reputation": 427, "user_id": 7941330, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/u7jCJ.jpg?s=128&g=1", "display_name": "F&#225;bio Roberto Teodoro", "link": "https://stackoverflow.com/users/7941330/f%c3%a1bio-roberto-teodoro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 74, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1502299417, "creation_date": 1502291012, "last_edit_date": 1502299417, "question_id": 45594313, "link": "https://stackoverflow.com/questions/45594313/can-i-include-a-not-persisted-field-in-models-file", "title": "Can I include a not persisted field in models file?", "body": "<p>In a Yesod scaffolded site, the <code>config/models</code> file syntax support the addition of a field not persisted in the database to an Entity description?</p>\n\n<p>If yes, How can this be done?</p>\n\n<p>Example:</p>\n\n<pre><code>User\n    ident Text\n    password Text Maybe\n</code></pre>\n\n<p>This <code>password</code> field will generate a column in the database. What I want is that the <code>User</code> data type generated have this <code>password</code> field but that the table <code>user</code> in the database does not have the <code>password</code> column. Is this possible?</p>\n\n<p>I want to only persist the <code>ident</code> field, but want to use the following data type in my haskell code:</p>\n\n<pre><code>data User = User {ident :: Text, password :: Maybe Text}\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 5, "creation_date": 1502287639, "post_id": 45592769, "comment_id": 78145319, "body": "The simplest way would be to add a function <code>fromList :: [a] -&gt; List a</code> and implement it as <code>fromList arbitrary</code>. Or do you want to implement it from scratch?"}], "answers": [{"comments": [{"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 1, "creation_date": 1502347531, "post_id": 45596628, "comment_id": 78171334, "body": "You should use <code>sized</code> instead of an arbitrary <code>length</code>. Alternatively, use <code>getSize</code>."}], "tags": [], "owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "is_accepted": false, "score": 1, "last_activity_date": 1502369989, "last_edit_date": 1502369989, "creation_date": 1502297957, "answer_id": 45596628, "question_id": 45592769, "link": "https://stackoverflow.com/questions/45592769/instance-of-arbitrary-for-custom-list-like-type/45596628#45596628", "title": "Instance of Arbitrary for custom list-like type", "body": "<p>How about this?</p>\n\n<pre><code>replicateM 0 action = Nil\nreplicateM n action = Cons &lt;$&gt; action &lt;*&gt; replicateM (n-1) action\n\ninstance Arbitrary a =&gt; Arbitrary [a] where\n    arbitrary = do\n        length &lt;- getSize\n        replicateM length arbitrary\n</code></pre>\n\n<p>This version of <code>replicateM</code> is just like <a href=\"http://hackage.haskell.org/package/base-4.10.0.0/docs/Control-Monad.html#v:replicateM\" rel=\"nofollow noreferrer\">the standard version</a>, except it returns a <code>List</code> rather than a <code>[]</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1502347515, "post_id": 45596657, "comment_id": 78171323, "body": "You should use <code>sized</code> instead."}], "tags": [], "owner": {"reputation": 13441, "user_id": 2199600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8sl6u.jpg?s=128&g=1", "display_name": "Igor Drozdov", "link": "https://stackoverflow.com/users/2199600/igor-drozdov"}, "is_accepted": false, "score": 4, "last_activity_date": 1502300374, "last_edit_date": 1502300374, "creation_date": 1502298103, "answer_id": 45596657, "question_id": 45592769, "link": "https://stackoverflow.com/questions/45592769/instance-of-arbitrary-for-custom-list-like-type/45596657#45596657", "title": "Instance of Arbitrary for custom list-like type", "body": "<p>What about using <a href=\"http://hackage.haskell.org/package/QuickCheck-2.1.0.1/docs/Test-QuickCheck-Gen.html#v:oneof\" rel=\"nofollow noreferrer\">oneof</a> function?</p>\n\n<pre><code>instance Arbitrary a =&gt; Arbitrary (List a) where\n  arbitrary = oneof [pure Nil, Cons &lt;$&gt; arbitrary &lt;*&gt; arbitrary]\n</code></pre>\n\n<p>It will generate either the empty value <code>Nil</code> or non-empty list. <code>oneof</code> takes the list of <code>Gen a</code> values, that's why <code>pure</code> and <code>&lt;$&gt;</code> with <code>&lt;*&gt;</code> needed to wrap the value into <code>Gen</code>. <code>return</code> and <code>liftM2</code> can also be used.</p>\n\n<p>After defining the <code>instance</code> what about quickChecking a trivial test:</p>\n\n<pre><code>prop_nil_mappend :: List Int -&gt; Bool\nprop_nil_mappend xs = mappend Nil xs == xs\n\nmain :: IO ()\nmain = quickCheck prop_nil_mappend\n</code></pre>\n\n<p>By the way in most of cases <code>Nil</code> is not as useful as non-empty list, so you can define the frequency of generating of each of these:</p>\n\n<pre><code>instance Arbitrary a =&gt; Arbitrary (List a) where\n  arbitrary =\n    frequency [(1, pure Nil),\n               (5, Cons &lt;$&gt; arbitrary &lt;*&gt; arbitrary)]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1502369479, "post_id": 45606318, "comment_id": 78186885, "body": "I keep wondering if there&#39;s some <code>recursion-schemes</code>-like way to do this. Something like <code>replicateM :: (Base t ~ ListF a, Corecursive t, Applicative f) =&gt; Int -&gt; f a -&gt; f t</code>. I think that should actually be doable, but doing it efficiently I think requires <code>embed</code> rather than anything higher-level."}], "tags": [], "owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "is_accepted": false, "score": 3, "last_activity_date": 1502347471, "creation_date": 1502347471, "answer_id": 45606318, "question_id": 45592769, "link": "https://stackoverflow.com/questions/45592769/instance-of-arbitrary-for-custom-list-like-type/45606318#45606318", "title": "Instance of Arbitrary for custom list-like type", "body": "<p>We split this into two functions. First of all, a function where we generate a list of a fixed length:</p>\n\n<pre><code>vectorList :: (Arbitrary a) =&gt; Int -&gt; Gen (List a)\nvectorList n = if n &lt;= 0 \n                 then return Nil\n                 else Cons &lt;$&gt; arbitrary &lt;*&gt; vectorList (n - 1)\n</code></pre>\n\n<p>Now that we can generate arbitray lists of a fixed size, we can use <a href=\"https://hackage.haskell.org/package/QuickCheck-2.10.0.1/docs/Test-QuickCheck-Gen.html#v:sized\" rel=\"nofollow noreferrer\"><code>sized</code></a> to generate lists:</p>\n\n<pre><code>instance Arbitrary a =&gt; Arbitrary (List a) where\n  arbitrary = sized vectorList\n</code></pre>\n\n<p>This makes sure that we enable QuickCheck to choose the size of the list. Generally, QuickCheck will choose small size parameters first in its test and increase the size. If you were to choose a random size, you might create very long lists where a small list already suffices to check your test case.</p>\n\n<p>Note that <code>vectorList</code> is just <code>replicateM n arbitrary</code> for your data type. If you provide <code>fromList :: [a] -&gt; List a</code>, you can change <code>vectorList</code> to</p>\n\n<pre><code>vectorList n = fromList (replicateM n arbitrary)\n</code></pre>\n\n<p>But then you can just use</p>\n\n<pre><code>instance Arbitrary a =&gt; Arbitrary (List a) where\n  arbitrary = fmap fromList arbitrary\n</code></pre>\n"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 672, "favorite_count": 0, "answer_count": 3, "score": 1, "last_activity_date": 1502369989, "creation_date": 1502286904, "last_edit_date": 1502298501, "question_id": 45592769, "link": "https://stackoverflow.com/questions/45592769/instance-of-arbitrary-for-custom-list-like-type", "title": "Instance of Arbitrary for custom list-like type", "body": "<p>I have following datatype(like a list):</p>\n\n<pre><code>  data List a =\n      Nil\n    | Cons a (List a)\n    deriving (Eq, Show)\n</code></pre>\n\n<p>and created an instance for <code>Monoid</code>:</p>\n\n<pre><code>  instance Monoid (List a) where\n    mempty = Nil\n    mappend Nil ys = ys\n    mappend (Cons x xs) ys = Cons x (mappend xs ys) \n</code></pre>\n\n<p>I try to write an instance for <code>Arbitrary</code> for testing latter but could not complete it:</p>\n\n<pre><code>  instance Arbitrary a =&gt; Arbitrary (List a) where\n    arbitrary = do  \n</code></pre>\n\n<p>Help me please to complete the function. </p>\n"}, {"tags": ["haskell", "haskell-stack", "io-monad", "scotty", "wreq"], "answers": [{"comments": [{"owner": {"reputation": 44, "user_id": 4457099, "user_type": "registered", "profile_image": "https://graph.facebook.com/1473465026/picture?type=large", "display_name": "Kahlil Abreu", "link": "https://stackoverflow.com/users/4457099/kahlil-abreu"}, "edited": false, "score": 0, "creation_date": 1502289573, "post_id": 45593484, "comment_id": 78146956, "body": "Thanks a lot for your reply.  However I was still getting an error with this code.  I edited the second last line to include LiftIO to make it run correctly.                 r &lt;- liftIO $ Wreq.get &quot;<a href=\"https://www.metaweather.com/api/location/search/?query=New%20York\" rel=\"nofollow noreferrer\">metaweather.com/api/location/search/?query=New%20York</a>&quot;"}, {"owner": {"reputation": 44, "user_id": 4457099, "user_type": "registered", "profile_image": "https://graph.facebook.com/1473465026/picture?type=large", "display_name": "Kahlil Abreu", "link": "https://stackoverflow.com/users/4457099/kahlil-abreu"}, "edited": false, "score": 0, "creation_date": 1502289755, "post_id": 45593484, "comment_id": 78147106, "body": "Is there any quick and easy way to convert a ByteString to text? (which is what i would need to use html instead of raw)"}, {"owner": {"reputation": 34669, "user_id": 34409, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4dfdadcd9bb62300eb1a54f02fe5dc18?s=128&d=identicon&r=PG", "display_name": "Chad Gilbert", "link": "https://stackoverflow.com/users/34409/chad-gilbert"}, "reply_to_user": {"reputation": 44, "user_id": 4457099, "user_type": "registered", "profile_image": "https://graph.facebook.com/1473465026/picture?type=large", "display_name": "Kahlil Abreu", "link": "https://stackoverflow.com/users/4457099/kahlil-abreu"}, "edited": false, "score": 1, "creation_date": 1502289945, "post_id": 45593484, "comment_id": 78147257, "body": "Woops! I forgot the <code>liftIO</code>. Thanks, I&#39;ve updated the answer"}, {"owner": {"reputation": 34669, "user_id": 34409, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4dfdadcd9bb62300eb1a54f02fe5dc18?s=128&d=identicon&r=PG", "display_name": "Chad Gilbert", "link": "https://stackoverflow.com/users/34409/chad-gilbert"}, "reply_to_user": {"reputation": 44, "user_id": 4457099, "user_type": "registered", "profile_image": "https://graph.facebook.com/1473465026/picture?type=large", "display_name": "Kahlil Abreu", "link": "https://stackoverflow.com/users/4457099/kahlil-abreu"}, "edited": false, "score": 0, "creation_date": 1502290270, "post_id": 45593484, "comment_id": 78147523, "body": "The <a href=\"https://hackage.haskell.org/package/string-conversions-0.4.0.1/docs/Data-String-Conversions.html\" rel=\"nofollow noreferrer\"><code>string-conversions</code></a> package&#39;s <a href=\"https://hackage.haskell.org/package/string-conversions-0.4.0.1/docs/Data-String-Conversions.html#v:cs\" rel=\"nofollow noreferrer\"><code>cs</code></a> function is a pretty easy way to convert. e.g <code>cs (r ^. responseBody) :: Text</code>"}], "tags": [], "owner": {"reputation": 34669, "user_id": 34409, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4dfdadcd9bb62300eb1a54f02fe5dc18?s=128&d=identicon&r=PG", "display_name": "Chad Gilbert", "link": "https://stackoverflow.com/users/34409/chad-gilbert"}, "is_accepted": true, "score": 1, "last_activity_date": 1502289921, "last_edit_date": 1502289921, "creation_date": 1502288774, "answer_id": 45593484, "question_id": 45592557, "link": "https://stackoverflow.com/questions/45592557/how-to-display-response-from-an-http-get-request-in-front-end-using-scotty/45593484#45593484", "title": "How to display Response from an HTTP GET Request in front-end using Scotty?", "body": "<p>If you are just looking for a quick proof of concept and aren't worried about erroneous responses, you could use the <a href=\"https://hackage.haskell.org/package/wreq-0.5.1.0/docs/Network-Wreq.html#v:responseBody\" rel=\"nofollow noreferrer\"><code>responseBody</code></a> lens and send the lazy byte string to <a href=\"https://hackage.haskell.org/package/scotty-0.11.0/docs/Web-Scotty.html#v:raw\" rel=\"nofollow noreferrer\"><code>raw</code></a> instead of <code>html</code>:</p>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>main :: IO ()\nmain =\n  scotty 3000 $\n   Scotty.get \"/\" $ do\n     r &lt;- liftIO $ Wreq.get \"https://www.metaweather.com/api/location/search/?query=New%20York\"\n     raw (r ^. responseBody)\n</code></pre>\n"}], "owner": {"reputation": 44, "user_id": 4457099, "user_type": "registered", "profile_image": "https://graph.facebook.com/1473465026/picture?type=large", "display_name": "Kahlil Abreu", "link": "https://stackoverflow.com/users/4457099/kahlil-abreu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 190, "favorite_count": 0, "accepted_answer_id": 45593484, "answer_count": 1, "score": -1, "last_activity_date": 1502289921, "creation_date": 1502286409, "last_edit_date": 1502288926, "question_id": 45592557, "link": "https://stackoverflow.com/questions/45592557/how-to-display-response-from-an-http-get-request-in-front-end-using-scotty", "title": "How to display Response from an HTTP GET Request in front-end using Scotty?", "body": "<p>I'm trying out Scotty for the first time and I can't seem to get past making my GET request. The Response is returned as type  </p>\n\n<pre><code>IO (Response bytestring-0.10.8.1:Data.ByteString.Lazy.Internal.ByteString)\n</code></pre>\n\n<p>I know I need to convert it to a type that can be output by Scotty but I can't figure out how to do that.</p>\n\n<p>My full code is : </p>\n\n<pre><code>{-# LANGUAGE DeriveGeneric     #-}\n{-# LANGUAGE OverloadedStrings #-}\nmodule Main where\n\nimport           Control.Lens\nimport           Control.Monad.IO.Class\nimport           Data.Aeson             (FromJSON, ToJSON, Value, decode,\n                                         encode)\nimport           Data.Map               as Map\nimport           GHC.Generics\nimport           Lib\nimport           Network.Wreq           as Wreq\nimport           Web.Scotty             as Scotty\n\nmain :: IO ()\nmain =\n  scotty 3000 $\n   Scotty.get \"/\" $ do\n    -- html \"Hello World!\"\n     Wreq.get\"https://www.metaweather.com/api/location/search/?query=New%20York\"\n</code></pre>\n\n<p>I tried using LiftIO but that is still giving me a Type Error. I wanted to know how exactly I should convert my Response so that I can display it in the front-end just like I displayed my initial \"Hello World\" with html.</p>\n"}, {"tags": ["haskell", "types", "ghc"], "comments": [{"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 1, "creation_date": 1502284414, "post_id": 45591689, "comment_id": 78142504, "body": "<code>getWorlds :: Set Foo -&gt; Set World</code> has to be <code>getWorlds :: Set Foo -&gt; Set Foo</code>"}, {"owner": {"reputation": 1755, "user_id": 3666591, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/70206265199564bb40833280d34ce9cb?s=128&d=identicon&r=PG&f=1", "display_name": "just.me", "link": "https://stackoverflow.com/users/3666591/just-me"}, "reply_to_user": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 0, "creation_date": 1502284487, "post_id": 45591689, "comment_id": 78142555, "body": "@Redu I know that that will work, but I am looking for an alternative in order to be able to declare functions (e.g. <code>foo</code> above) for a subset only."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1502284516, "post_id": 45591689, "comment_id": 78142578, "body": "You can unwrap the constructor in <code>getWorlds</code>: <code>getWorlds :: Set Foo -&gt; Set Int</code>. But it is not possible (afaik) to restruct the constructors that can be used."}, {"owner": {"reputation": 1755, "user_id": 3666591, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/70206265199564bb40833280d34ce9cb?s=128&d=identicon&r=PG&f=1", "display_name": "just.me", "link": "https://stackoverflow.com/users/3666591/just-me"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1502284757, "post_id": 45591689, "comment_id": 78142781, "body": "@WillemVanOnsem Thank you, I considered that, but I think it will become ugly for more complex data types. I was looking for something like a union type as present in other languages, so I could define <code>data World = World Int</code>, <code>data Hello = Hello Int</code>, <code>type Foo = World | Hello</code>, but I didn&#39;t find  an analogy in Haskell."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1502284804, "post_id": 45591689, "comment_id": 78142827, "body": "@just.me: well you can use <code>type Foo = Either World Hello</code>."}, {"owner": {"reputation": 1755, "user_id": 3666591, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/70206265199564bb40833280d34ce9cb?s=128&d=identicon&r=PG&f=1", "display_name": "just.me", "link": "https://stackoverflow.com/users/3666591/just-me"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1502284938, "post_id": 45591689, "comment_id": 78142956, "body": "@WillemVanOnsem But that won&#39;t let me use the same semantics as <code>data Foo = ...</code>, right? And it won&#39;t work for types with more than two possible subsets, unless I use it recursively."}, {"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 0, "creation_date": 1502285309, "post_id": 45591689, "comment_id": 78143291, "body": "When defining a type, type constructors and value constructors are used. They may have the same name like <code>data Hello = Hello String Int Hello</code> (even recursive) however in the type signature you have to express the function&#39;s type by using the the type constructors."}], "answers": [{"comments": [{"owner": {"reputation": 1755, "user_id": 3666591, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/70206265199564bb40833280d34ce9cb?s=128&d=identicon&r=PG&f=1", "display_name": "just.me", "link": "https://stackoverflow.com/users/3666591/just-me"}, "edited": false, "score": 0, "creation_date": 1502286196, "post_id": 45592185, "comment_id": 78144081, "body": "But for more than two types, this will quickly become ugly, right? <code>type Foo = Either Hello (Either World Bla)</code>"}, {"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 8, "creation_date": 1502286304, "post_id": 45592185, "comment_id": 78144175, "body": "You can construct your own thing instead of using <code>Either</code> - e.g. <code>data Foo =   Hello Hello | World World | Bla Bla</code>, etc."}], "tags": [], "owner": {"reputation": 2863, "user_id": 2297560, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/948d4a17494b3c616a0873453b74670c?s=128&d=identicon&r=PG", "display_name": "user2297560", "link": "https://stackoverflow.com/users/2297560/user2297560"}, "is_accepted": true, "score": 5, "last_activity_date": 1502285502, "creation_date": 1502285502, "answer_id": 45592185, "question_id": 45591689, "link": "https://stackoverflow.com/questions/45591689/return-set-of-subtype/45592185#45592185", "title": "Return Set of subtype", "body": "<p>The easiest way to accomplish this is to simply make a type for the value of each constructor.</p>\n\n<pre><code>newtype Hello = Hello Int deriving (Eq,Ord)\nnewtype World = World Int deriving (Eq,Ord)\ntype Foo = Either Hello World\n\ngetWorlds :: Set Foo -&gt; Set World\ngetWorlds = Set.fromList . rights . Set.toList       -- import Data.Either\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2861, "user_id": 2847643, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/PmATO.jpg?s=128&g=1", "display_name": "user2847643", "link": "https://stackoverflow.com/users/2847643/user2847643"}, "is_accepted": false, "score": 4, "last_activity_date": 1502361091, "last_edit_date": 1502361091, "creation_date": 1502286295, "answer_id": 45592508, "question_id": 45591689, "link": "https://stackoverflow.com/questions/45591689/return-set-of-subtype/45592508#45592508", "title": "Return Set of subtype", "body": "<p>The problem is that you want to have a list (edit: or rather a set but same logic applies) of two possible things while regular lists in Haskell are homegenous. But if you define your data like so, by wrapping a set of separate types in another data type:</p>\n\n<pre><code>newtype Hello = Hello Int\nnewtype World = World Int\ndata Foo = FooHello Hello\n         | FooWorld World\n</code></pre>\n\n<p>You can still:</p>\n\n<ul>\n<li>have a list of <code>Foo</code></li>\n<li>filter <code>Foo</code> using a function of type <code>Foo -&gt; Bool</code> to achieve <code>f Foo -&gt; f World</code> (as an example)</li>\n<li>extend Foo to an arbitrary number of constructors as needed</li>\n</ul>\n\n<p>Depending on what you're trying to do there are probably already some libraries that tackle similar issues. I can think of at least <a href=\"https://hackage.haskell.org/package/dependent-sum\" rel=\"nofollow noreferrer\">one</a> that seems relevant.</p>\n"}, {"tags": [], "owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "is_accepted": false, "score": 2, "last_activity_date": 1502288064, "creation_date": 1502288064, "answer_id": 45593213, "question_id": 45591689, "link": "https://stackoverflow.com/questions/45591689/return-set-of-subtype/45593213#45593213", "title": "Return Set of subtype", "body": "<p>In your code <code>World</code> is not a type, it's only a constructor.</p>\n\n<p>The idiomatic solution in Haskell is to use <code>Either</code> to create a union of types:</p>\n\n<pre><code>newtype Hello = Hello { getHello :: Int } deriving (Ord, Eq)\nnewtype World = World { getWorld :: Int } deriving (Ord, Eq)\ntype Foo = Either Hello World\n\nisWorld :: Foo -&gt; Bool\nisWorld = Data.Either.isRight\n\ngetWorlds :: Set Foo -&gt; Set World\ngetWorlds = Set.fromDistinctAscList . Data.Either.rights . Set.toAscList\n\nfoo :: World -&gt; Int\nfoo = getWorld\n</code></pre>\n\n<p>It works just fine for more than two constructors</p>\n\n<pre><code>newtype Cheese = Cheese { getCheese :: Int }\nnewtype Bread = Bread { getBread :: Int }\nnewtype Wine = Wine { getWine :: Int }\n\ntype Comestible = Either Cheese (Either Bread Wine)\n</code></pre>\n\n<p>but if you find parens distasteful, you can use <code>Either</code> infix:</p>\n\n<pre><code>{-# LANGUAGE TypeOperators #-}\n-- ...\ntype Comestible = Cheese `Either` Bread `Either` Wine\n-- (NOTE: this parses as Either (Either Cheese Bread) Wine\n</code></pre>\n\n<p>and if that's too verbose, you can declare your own operator:</p>\n\n<pre><code>type (+) = Either\ninfixr 5 +\ntype Comestible = Cheese + Bread + Wine\n</code></pre>\n\n<p>I used <code>+</code> here because <code>Either a b</code> is a <em>sum</em> type, in contrast to <code>(a,b)</code> which is a <em>product</em> type.</p>\n"}, {"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 1, "last_activity_date": 1502369806, "last_edit_date": 1502369806, "creation_date": 1502364103, "answer_id": 45612329, "question_id": 45591689, "link": "https://stackoverflow.com/questions/45591689/return-set-of-subtype/45612329#45612329", "title": "Return Set of subtype", "body": "<p>Two more options you could take:</p>\n\n<h2>Keep it simple</h2>\n\n<p>and just deal with the <em>contents</em> of the individual alternatives. I.e. you could just write</p>\n\n<pre><code>getWorlds :: Set Foo -&gt; Set Int\ngetWorlds = Set.mapMonotonic (\\(World i)-&gt;i) $ Set.filter isWorld\n</code></pre>\n\n<h2>Use only one <code>data</code> type...</h2>\n\n<p>but restrict which alteratives can be taken through type constraints:</p>\n\n<pre><code>{-# LANGUAGE GADTs, DataKinds, KindSignatures #-}\n\ndata Foo (a :: FooC) where\n  Hello :: CanHello a =&gt; Int -&gt; Foo a\n  World :: CanWorld a =&gt; Int -&gt; Foo a\n\ndata FooC = FooC | HelloC | WorldC\n\nclass CanHello (a :: FooC)\ninstance CanHello 'FooC\ninstance CanHello 'HelloC\n\nclass CanWorld (a :: FooC)\ninstance CanWorld 'FooC\ninstance CanWorld 'WorldC\n</code></pre>\n\n<p>At this point, you have three different \u201cflavours\u201d of <code>Foo</code>:</p>\n\n<ul>\n<li><code>Foo' 'FooC</code> is like your original type: its value can be either <code>Hello</code> or <code>World</code>, because <code>FooC</code> is an instance of both classes.</li>\n<li><code>Foo' 'WorldC</code> is like what you meant by the <code>World</code> type: its constructor <code>World</code> is just the same as for <code>Foo</code>, but it does not allow the <code>Hello</code> constructor.</li>\n<li><code>Foo' 'HelloC</code> <em>only</em> allows the <code>Hello</code> constructor.</li>\n</ul>\n\n<p>So you can now give them names...</p>\n\n<pre><code>type Foo = Foo' 'FooC\ntype World = Foo' 'WorldC\ntype Hello = Foo' 'HelloC\n</code></pre>\n\n<p>and then write</p>\n\n<pre><code>getWorlds :: Set Foo -&gt; Set World\ngetWorlds = Set.mapMonotonic (\\(World i)-&gt;World i) $ Set.filter isWorld\n</code></pre>\n\n<p>The function <code>\\(World i) -&gt; World i</code> looks superfluous, but is actually necessary: you wrap the data in a new constraint, which actually witnesses that it's always <code>World</code>.</p>\n"}], "owner": {"reputation": 1755, "user_id": 3666591, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/70206265199564bb40833280d34ce9cb?s=128&d=identicon&r=PG&f=1", "display_name": "just.me", "link": "https://stackoverflow.com/users/3666591/just-me"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 186, "favorite_count": 0, "accepted_answer_id": 45592185, "answer_count": 4, "score": 2, "last_activity_date": 1502369806, "creation_date": 1502284296, "last_edit_date": 1502284347, "question_id": 45591689, "link": "https://stackoverflow.com/questions/45591689/return-set-of-subtype", "title": "Return Set of subtype", "body": "<p>Assuming I have a data type defined as</p>\n\n<pre><code>data Foo = Hello Int | World Int\n</code></pre>\n\n<p>and functions as</p>\n\n<pre><code>isWorld :: Foo -&gt; Bool\nisWorld (World i) = True\nisWorld (Hello i) = False\n\ngetWorlds :: Set Foo -&gt; Set World\ngetWorlds = Set.filter isWorld\n</code></pre>\n\n<p>This does not work:</p>\n\n<pre><code>Not in scope: type constructor or class `World'\n</code></pre>\n\n<p>This makes sense as <code>World</code> is just a function, but I have no idea how to model this in Haskell. Is using <code>data</code> correct? I would like to be able to define functions for certain instances only:</p>\n\n<pre><code>foo :: World -&gt; Int\nfoo (World i) = i\n</code></pre>\n\n<p>As expected, this raises the same error, as <code>World</code> is not a type. Is there a way to do this, preferably without GHC extensions?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1502272949, "post_id": 45586652, "comment_id": 78133687, "body": "Hey, no fair -- you said &quot;no built-in functions&quot;, but I see a bunch of built-ins in your code already: <code>(==)</code>, <code>(:)</code>, <code>drop</code>, and <code>length</code> are built-in functions, and <code>True</code>, <code>False</code>, <code>otherwise</code>, <code>[]</code>, and <code>&#39; &#39;</code> are built-in non-functions."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1502273193, "post_id": 45586652, "comment_id": 78133852, "body": "(My previous comment is a bit tongue-in-cheek, but only a bit: you should say carefully what goals you&#39;re trying to achieve by avoiding built-ins. Are you satisfying some assignment&#39;s requirements? If so, what are the exact requirements? Are you trying to learn how things work right down to the barest bones? If so, why not try implementing <code>(==)</code> and <code>length</code> and friends so you get the complete experience? Or is there another goal, and if so, what is it? Are you sure avoiding built-ins is in good service of that goal?)"}, {"owner": {"reputation": 27, "user_id": 8257302, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f156c241fc481d03bd39b62950384727?s=128&d=identicon&r=PG&f=1", "display_name": "dsvjksv", "link": "https://stackoverflow.com/users/8257302/dsvjksv"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1502273959, "post_id": 45586652, "comment_id": 78134433, "body": "Sorry I meant existing function"}, {"owner": {"reputation": 14006, "user_id": 3798102, "user_type": "registered", "accept_rate": 62, "profile_image": "https://graph.facebook.com/100002464470905/picture?type=large", "display_name": "pamu", "link": "https://stackoverflow.com/users/3798102/pamu"}, "edited": false, "score": 0, "creation_date": 1502274806, "post_id": 45586652, "comment_id": 78135072, "body": "@dsvjksv Added implementation all user-defined functions."}], "answers": [{"comments": [{"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1502280142, "post_id": 45587441, "comment_id": 78138934, "body": "Isn&#39;t this quadratic time due to the use of <code>++</code>?"}, {"owner": {"reputation": 13441, "user_id": 2199600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8sl6u.jpg?s=128&g=1", "display_name": "Igor Drozdov", "link": "https://stackoverflow.com/users/2199600/igor-drozdov"}, "reply_to_user": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1502280958, "post_id": 45587441, "comment_id": 78139594, "body": "@FyodorSoikin yes, it is. <code>(++)</code> is used here for demonstration purpose, I think the code is more readable. As an option <code>(:)</code> can be used with inverting the final result. And I would be glad to hear a better alternative for this"}, {"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 1, "creation_date": 1502282481, "post_id": 45587441, "comment_id": 78140885, "body": "I don&#39;t think there is a better alternative. I just wanted to make this clear for the benefit of those who come across this answer. Reversing is totally fine. Intuitively it looks like this &quot;totally unnecessary waste of resources, if only I could skip it&quot;, but really it&#39;s linear, so no real harm."}], "tags": [], "owner": {"reputation": 13441, "user_id": 2199600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8sl6u.jpg?s=128&g=1", "display_name": "Igor Drozdov", "link": "https://stackoverflow.com/users/2199600/igor-drozdov"}, "is_accepted": false, "score": 4, "last_activity_date": 1502280783, "last_edit_date": 1502280783, "creation_date": 1502272783, "answer_id": 45587441, "question_id": 45586652, "link": "https://stackoverflow.com/questions/45586652/splitting-strings-in-haskell-programming/45587441#45587441", "title": "splitting strings in haskell programming", "body": "<p>There's a cool one-line to perform what you need</p>\n\n<pre><code>[\"For example,\", \"love,\", \"hate.\"] &gt;&gt;= words\n</code></pre>\n\n<p><code>&gt;&gt;=</code> has type <code>(&gt;&gt;=) :: Monad m =&gt; m a -&gt; (a -&gt; m b) -&gt; m b</code>, which takes a function which returns a monadic structure and joins the result into the monadic structure.</p>\n\n<p>If you want to implement <code>words</code> by yourself:</p>\n\n<pre><code>words' xs =\n  let\n    waitForBlank (acc, buff) [] = (acc ++ [buff], buff)\n    waitForBlank (acc, buff) (x:xs) =\n      if x == ' ' then\n        waitForBlank (acc ++ [buff], []) xs\n      else\n        waitForBlank (acc, buff ++ [x]) xs\n  in\n    fst (waitForBlank ([], []) xs)\n</code></pre>\n\n<p>Or with using <code>(:)</code> and <code>reverse</code> the result (for better performance):</p>\n\n<pre><code>words'' xs =\n  let\n    waitForBlank (acc, buff) [] = (reverse (buff : acc), buff)\n    waitForBlank (acc, buff) (x:xs) =\n      if x == ' ' then\n        waitForBlank ((reverse buff) : acc, []) xs\n      else\n        waitForBlank (acc, x:buff) xs\n  in\n    fst (waitForBlank ([], []) xs)\n</code></pre>\n"}], "owner": {"reputation": 27, "user_id": 8257302, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f156c241fc481d03bd39b62950384727?s=128&d=identicon&r=PG&f=1", "display_name": "dsvjksv", "link": "https://stackoverflow.com/users/8257302/dsvjksv"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 119, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1502280783, "creation_date": 1502270729, "last_edit_date": 1502274541, "question_id": 45586652, "link": "https://stackoverflow.com/questions/45586652/splitting-strings-in-haskell-programming", "title": "splitting strings in haskell programming", "body": "<p>Hi i am trying to do a function input is a list of strings, and the output is again a list of all words occurring in the input. </p>\n\n<p>for example input [\"For example,\", \"love,\", \"hate.\"]\noutput [\"For\",\"example\",\"love\",\"hate\"]</p>\n\n<p>atm i have this. Any help would be appreciated. Also how can i remove the blank space with just one function and in linear time?\nAnd not using any  existing function</p>\n\n<pre><code>split' :: String -&gt; [String]\nsplit' [] = []\nsplit' (x:xs)\n     | isBlank x = split' xs\n     | otherwise = waitForBlank (x:xs) : split' (drop (length (waitForBlank (x:xs))) xs)\n\nisBlank :: Char -&gt; Bool\nisBlank x = if x == ' ' then True else False\n\nwaitForBlank :: String -&gt; String\nwaitForBlank [] = []\nwaitForBlank (x:xs)\n     | isBlank x = []\n     | otherwise = x : waitForBlank xs\n</code></pre>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "is_accepted": false, "score": 11, "last_activity_date": 1502279621, "last_edit_date": 1502279621, "creation_date": 1502265181, "answer_id": 45584700, "question_id": 45583247, "link": "https://stackoverflow.com/questions/45583247/how-to-read-compiler-error/45584700#45584700", "title": "How to read compiler error", "body": "<pre><code>* Couldn't match type `b' with `Sum a b'\n</code></pre>\n\n<p>Translation: I (the compiler) expected a <code>b</code> and got a <code>Sum a b</code> instead.</p>\n\n<pre><code>  `b' is a rigid type variable bound by\n    the type signature for:\n      (&gt;&gt;=) :: forall a1 b. Sum a a1 -&gt; (a1 -&gt; Sum a b) -&gt; Sum a b\n</code></pre>\n\n<p>Translation: Because of the signature of <code>&gt;&gt;=</code> the concrete type value of the type variable <code>b</code> can't be choosen by you, but by your caller. You can't just hand me any kind of value and expect <code>b</code> to take the type of your expression as its type value (remember <code>b</code> is a type variable).</p>\n\n<pre><code>  Expected type: Sum a b\n    Actual type: Sum a (Sum a b)\n</code></pre>\n\n<p>Translation: To make it easier for you, I hand you a little bit more context. I expected a <code>Sum a b</code> and you handed me a <code>Sum a (Sum a b)</code>. You can now already see, that the problem is here in bold</p>\n\n<pre><code>      (>>=) :: forall a1 b. Sum a a1 -> (a1 -> Sum a b) -> <b>Sum a b</b>\n</code></pre>\n\n<p>because that is the type of the values your implementation of that function should produce.</p>\n\n<pre><code>* In the expression: Second (k a)\n  In an equation for `&gt;&gt;=': (Second a) &gt;&gt;= k = Second (k a)\n  In the instance declaration for `Monad (Sum a)'\n</code></pre>\n\n<p>More context for you. I (the compiler) don't like the expression</p>\n\n<pre><code> Second (k a)\n</code></pre>\n\n<p>in the equation</p>\n\n<pre><code> (Second a) &gt;&gt;= k = Second (k a)\n</code></pre>\n\n<p>here you can infer, that <code>Second (k a)</code> has type <code>Sum a (Sum a b)</code> instead of <code>Sum a b</code>.</p>\n\n<p>And even more helpful messages for you:</p>\n\n<pre><code>* Relevant bindings include\n    k :: a1 -&gt; Sum a b\n      (bound at D:\\haskell\\chapter18\\src\\SumMonad.hs:39:20)\n    (&gt;&gt;=) :: Sum a a1 -&gt; (a1 -&gt; Sum a b) -&gt; Sum a b\n      (bound at D:\\haskell\\chapter18\\src\\SumMonad.hs:38:5)\n</code></pre>\n\n<p>Translation: The result of <code>k a</code> already is a <code>Sum a b</code>, you see? So if you think of my former (hopefully helpful messages), <code>Second (k a)</code> will be of type <code>Sum a (Sum a b)</code>, which is not <code>Sum a b</code> as I already told you.</p>\n"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 96, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1502279621, "creation_date": 1502260602, "question_id": 45583247, "link": "https://stackoverflow.com/questions/45583247/how-to-read-compiler-error", "title": "How to read compiler error", "body": "<p>I wrote an implementation of Monad for custom type:</p>\n\n<pre><code>  data Sum a b =\n      First a\n    | Second b\n    deriving (Eq, Show)\n\n  instance Functor (Sum a) where\n    fmap _ (First x) = First x\n    fmap f (Second y) = Second (f y)\n\n  instance Applicative (Sum a) where\n    pure = Second\n    First x &lt;*&gt; _ = First x\n    _ &lt;*&gt; First x = First x \n    Second f &lt;*&gt; Second x = Second (f x)\n\n  instance Monad (Sum a) where\n    return = pure\n    (First a) &gt;&gt;= _ = First a\n    (Second a) &gt;&gt;= k = Second (k a)\n</code></pre>\n\n<p>and I know it is wrong. The compiler complains:</p>\n\n<pre><code>D:\\haskell\\chapter18\\src\\SumMonad.hs:39:24: error:\n    * Couldn't match type `b' with `Sum a b'\n      `b' is a rigid type variable bound by\n        the type signature for:\n          (&gt;&gt;=) :: forall a1 b. Sum a a1 -&gt; (a1 -&gt; Sum a b) -&gt; Sum a b\n        at D:\\haskell\\chapter18\\src\\SumMonad.hs:38:15\n      Expected type: Sum a b\n        Actual type: Sum a (Sum a b)\n    * In the expression: Second (k a)\n      In an equation for `&gt;&gt;=': (Second a) &gt;&gt;= k = Second (k a)\n      In the instance declaration for `Monad (Sum a)'\n    * Relevant bindings include\n        k :: a1 -&gt; Sum a b\n          (bound at D:\\haskell\\chapter18\\src\\SumMonad.hs:39:20)\n        (&gt;&gt;=) :: Sum a a1 -&gt; (a1 -&gt; Sum a b) -&gt; Sum a b\n          (bound at D:\\haskell\\chapter18\\src\\SumMonad.hs:38:5)\nFailed, modules loaded: none. \n</code></pre>\n\n<p>How to read the compiler error?</p>\n"}, {"tags": ["haskell", "recursive-datastructures", "recursion-schemes", "fixpoint-combinators"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1502250624, "post_id": 45580858, "comment_id": 78121999, "body": "I don&#39;t know too much theory, but I gather that for more proofy languages, <code>Mu</code> is the least fixed point and <code>Nu</code> is the greatest fixed point. In Haskell, these three are all supposed to be equivalent (I believe). Note that it&#39;s super-easy to implement <code>cata</code> for <code>Mu</code> and <code>ana</code> for <code>Nu</code>."}, {"owner": {"reputation": 431, "user_id": 3042847, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/20812bf59589551344aeae214de49f6a?s=128&d=identicon&r=PG&f=1", "display_name": "xgrommx", "link": "https://stackoverflow.com/users/3042847/xgrommx"}, "edited": false, "score": 4, "creation_date": 1502404693, "post_id": 45580858, "comment_id": 78208520, "body": "Try to solve this kata <a href=\"https://www.codewars.com/kata/folding-through-a-fixed-point/haskell\" rel=\"nofollow noreferrer\">codewars.com/kata/folding-through-a-fixed-point/haskell</a>"}], "answers": [{"comments": [{"owner": {"reputation": 509, "user_id": 1573086, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/290879ed00272236f5ba0c234ab7c06c?s=128&d=identicon&r=PG", "display_name": "Sergey Cherepanov", "link": "https://stackoverflow.com/users/1573086/sergey-cherepanov"}, "edited": false, "score": 1, "creation_date": 1535815274, "post_id": 45581539, "comment_id": 91209341, "body": "Great explanation, thank you! Is there a sources (articles/papers/books) that explain it even more detailed? For example, analogues for term-level fix points and why Nu (as representation a recursive type as its fold) is least fixed point at type level. There is also important links between LFP and initial algebras and also between GFP and terminal coalgebra."}, {"owner": {"reputation": 445, "user_id": 8325918, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6d1e006df16aae84a423c8268656e4ba?s=128&d=identicon&r=PG&f=1", "display_name": "B. Mehta", "link": "https://stackoverflow.com/users/8325918/b-mehta"}, "edited": false, "score": 1, "creation_date": 1535862878, "post_id": 45581539, "comment_id": 91218258, "body": "I&#39;m sure I&#39;m missing something, but <code>Nu Maybe</code> seems to have many more inhabitants - at least many that Haskell happily type-checks. For instance, <code>Nu Just []</code>, <code>Nu Just &quot;abcd&quot;</code>, <code>Nu (const Nothing) 42</code> all seem appropriately typed. What am I getting wrong?"}, {"owner": {"reputation": 2115, "user_id": 1934349, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/LyNoA.jpg?s=128&g=1", "display_name": "paulotorrens", "link": "https://stackoverflow.com/users/1934349/paulotorrens"}, "edited": false, "score": 0, "creation_date": 1535992000, "post_id": 45581539, "comment_id": 91257087, "body": "Wait. Conatural numbers? Is that a thing?"}, {"owner": {"reputation": 8690, "user_id": 712548, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0f468e49dc69e4f281faf3e9516adcf5?s=128&d=identicon&r=PG", "display_name": "shachaf", "link": "https://stackoverflow.com/users/712548/shachaf"}, "edited": false, "score": 0, "creation_date": 1536691096, "post_id": 45581539, "comment_id": 91512609, "body": "Sergey Cherepanov: I don&#39;t know of one off-hand, though <a href=\"http://web.archive.org/web/20150922131653/http://sneezy.cs.nott.ac.uk/fplunch/weblog/?p=83\" rel=\"nofollow noreferrer\">here</a>&#39;s a proof of initiality using parametricity. The connection between initial algebras and initial fixed points is sometimes called Lambek&#39;s lemma. B. Mehta: In the same way that id :: forall a. a -&gt; a can&#39;t distinguish between different inputs, the outside world can&#39;t distinguish between Nu Just [] and Nu Just 0. paulotorrens: It&#39;s at least an idiomatic name for this type, the one-point compactification of the naturals, for this reason."}, {"owner": {"reputation": 8690, "user_id": 712548, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0f468e49dc69e4f281faf3e9516adcf5?s=128&d=identicon&r=PG", "display_name": "shachaf", "link": "https://stackoverflow.com/users/712548/shachaf"}, "edited": false, "score": 0, "creation_date": 1537286678, "post_id": 45581539, "comment_id": 91726226, "body": "<a href=\"https://fplab.bitbucket.io/posts/2008-01-26-parametricity.html\" rel=\"nofollow noreferrer\">Updated link</a> for the proof of initiality."}, {"owner": {"reputation": 2526, "user_id": 666371, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eac0bf787b5279aca5e699ece096956e?s=128&d=identicon&r=PG", "display_name": "inamiy", "link": "https://stackoverflow.com/users/666371/inamiy"}, "edited": false, "score": 1, "creation_date": 1594100947, "post_id": 45581539, "comment_id": 110999723, "body": "Thanks for fun exercise! I uploaded my answer here if anyone is interested: <a href=\"https://gist.github.com/inamiy/7488380da6001cb0f778b59d9f7230cd\" rel=\"nofollow noreferrer\">gist.github.com/inamiy/7488380da6001cb0f778b59d9f7230cd</a>"}], "tags": [], "owner": {"reputation": 8690, "user_id": 712548, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0f468e49dc69e4f281faf3e9516adcf5?s=128&d=identicon&r=PG", "display_name": "shachaf", "link": "https://stackoverflow.com/users/712548/shachaf"}, "is_accepted": true, "score": 29, "last_activity_date": 1502296547, "last_edit_date": 1502296547, "creation_date": 1502251687, "answer_id": 45581539, "question_id": 45580858, "link": "https://stackoverflow.com/questions/45580858/what-is-the-difference-between-fix-mu-and-nu-in-ed-kmetts-recursion-scheme-pac/45581539#45581539", "title": "What is the difference between Fix, Mu and Nu in Ed Kmett&#39;s recursion scheme package", "body": "<p><code>Mu</code> represents a recursive type as its fold, and <code>Nu</code> represents it as its unfold. In Haskell, these are isomorphic, and are different ways to represent the same type. If you pretend that Haskell doesn't have arbitrary recursion, the distinction between these types becomes more interesting: <code>Mu f</code> is the least (initial) fixed point of <code>f</code>, and <code>Nu f</code> is its greatest (terminal) fixed point.</p>\n\n<p>A fixed point of <code>f</code> is a type <code>T</code> an isomorphism between <code>T</code> and <code>f T</code>, i.e. a pair of inverse functions <code>in :: f T -&gt; T</code>, <code>out :: T -&gt; f T</code>. The type <code>Fix</code> just uses Haskell's built-in type recursion to declare the isomorphism directly. But you can implement in/out for both <code>Mu</code> and <code>Nu</code>.</p>\n\n<p>For a concrete example, pretend for a moment that you can't write recursive values. The inhabitants of <code>Mu Maybe</code> , i.e. values <code>:: forall r. (Maybe r -&gt; r) -&gt; r</code>, are the naturals, {0, 1, 2, ...}; the inhabitants of <code>Nu Maybe</code>, i.e. values <code>:: exists x. (x, x -&gt; Maybe x)</code>, are the conaturals {0, 1, 2, ..., \u221e}. Think about the possible values of these types to see why <code>Nu Maybe</code> has an extra inhabitant.</p>\n\n<p>If you want to get some intuition for these types, it can be a fun exercise to implement the following without recursion (roughly in increasing order of difficulty):</p>\n\n<ul>\n<li><code>zeroMu :: Mu Maybe</code>, <code>succMu :: Mu Maybe -&gt; Mu Maybe</code></li>\n<li><code>zeroNu :: Nu Maybe</code>, <code>succNu :: Nu Maybe -&gt; Nu Maybe</code>, <code>inftyNu :: Nu Maybe</code></li>\n<li><code>muTofix :: Mu f -&gt; Fix f</code>, <code>fixToNu :: Fix f -&gt; Nu f</code></li>\n<li><code>inMu :: f (Mu f) -&gt; Mu f</code>, <code>outMu :: Mu f -&gt; f (Mu f)</code></li>\n<li><code>inNu :: f (Nu f) -&gt; Nu f</code>, <code>outNu :: Nu f -&gt; f (Nu f)</code></li>\n</ul>\n\n<p>You can also try to implement these, but they require recursion:</p>\n\n<ul>\n<li><code>nuToFix :: Nu f -&gt; Fix f</code>, <code>fixToMu :: Fix f -&gt; Mu f</code></li>\n</ul>\n\n<p><code>Mu f</code> is the least fixed point, and <code>Nu f</code> is the greatest, so writing a function <code>:: Mu f -&gt; Nu f</code> is very easy, but writing a function <code>:: Nu f -&gt; Mu f</code> is hard; it's like swimming against the current.</p>\n\n<p>(At one point I was meaning to write a more detailed explanation of these types, but it might be a little too long for this format.)</p>\n"}], "owner": {"reputation": 4639, "user_id": 3986708, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/g0JCF.jpg?s=128&g=1", "display_name": "hgiesel", "link": "https://stackoverflow.com/users/3986708/hgiesel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2848, "favorite_count": 7, "accepted_answer_id": 45581539, "answer_count": 1, "score": 26, "last_activity_date": 1563171889, "creation_date": 1502246713, "last_edit_date": 1563171889, "question_id": 45580858, "link": "https://stackoverflow.com/questions/45580858/what-is-the-difference-between-fix-mu-and-nu-in-ed-kmetts-recursion-scheme-pac", "title": "What is the difference between Fix, Mu and Nu in Ed Kmett&#39;s recursion scheme package", "body": "<p>In Ed Kmett's <code>recursion-scheme</code> package, there are three declarations:</p>\n\n<pre><code>newtype Fix f = Fix (f (Fix f))\n\nnewtype Mu f = Mu (forall a. (f a -&gt; a) -&gt; a)\n\ndata Nu f where \n  Nu :: (a -&gt; f a) -&gt; a -&gt; Nu f\n</code></pre>\n\n<p>What is the difference between those three data types?</p>\n"}, {"tags": ["haskell", "stack-trace", "partial-functions"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1502236898, "post_id": 45579549, "comment_id": 78118922, "body": "Can you qualify &quot;best&quot;? In general, stack traces don&#39;t make as much sense in a lazy functional language as you probably expect them to, so probably your &quot;best&quot; bet is to enable profiling. Otherwise, use <a href=\"https://hackage.haskell.org/package/base-4.10.0.0/docs/GHC-Stack.html\" rel=\"nofollow noreferrer\"><code>CallStack</code></a>."}, {"owner": {"reputation": 5774, "user_id": 105137, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/253329f6f7506a5299db1cb608d8defd?s=128&d=identicon&r=PG", "display_name": "kostmo", "link": "https://stackoverflow.com/users/105137/kostmo"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1502238715, "post_id": 45579549, "comment_id": 78119280, "body": "I guess I would settle for any method that identifies the line in source code at which the error occurs.  When you say enable profiling, does that mean I could run <code>stack build</code> with some extra parameters (which ones?), and then when I execute the program it will accompany the error with more information?"}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1502246081, "post_id": 45580633, "comment_id": 78120877, "body": "In the latest GHC release, <code>error</code> <i>is</i> <code>errorWithCallStack</code>. And the docs seem to suggest you get better stack traces from a profiled build than using <code>HasCallStack</code>. I haven&#39;t tried the profiled way yet."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1502253957, "post_id": 45580633, "comment_id": 78122854, "body": "@dfeuer Do I understand the claim correctly that GHC 8.2.1 w/ <code>-prof</code> should produce better call stacks?  It doesn&#39;t seem to be so: <a href=\"https://gist.github.com/TomMD/7d1fb8dc762fc37bf80b7b7dd447e29a\" rel=\"nofollow noreferrer\">gist.github.com/TomMD/7d1fb8dc762fc37bf80b7b7dd447e29a</a>"}, {"owner": {"reputation": 5774, "user_id": 105137, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/253329f6f7506a5299db1cb608d8defd?s=128&d=identicon&r=PG", "display_name": "kostmo", "link": "https://stackoverflow.com/users/105137/kostmo"}, "edited": false, "score": 0, "creation_date": 1502253975, "post_id": 45580633, "comment_id": 78122858, "body": "Even with profiling enabled (via <code>stack build --profile</code>), I see only the error message &quot;divide by zero&quot; with no additional context.  Let&#39;s say there is a codebase in which the division operation (<code>&#47;</code> or <code>`div`</code>) appears at dozens of call sites.  When one encounters the error message &quot;divide by zero&quot; at runtime, and any of those call sites seem to be equally likely candidates as the source of error, how does one approach debugging?  Must one swap out each instance of the division operation with some annotated version (at best, narrowing down the offending call sites in a binary search)?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1502260275, "post_id": 45580633, "comment_id": 78125272, "body": "@ThomasM.DuBuisson, I really don&#39;t know, but take a look at <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#compared-with-other-sources-of-stack-traces\" rel=\"nofollow noreferrer\">downloads.haskell.org/~ghc/latest/docs/html/users_guide/&hellip;</a>"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1502285638, "post_id": 45580633, "comment_id": 78143582, "body": "I don&#39;t see any such implication there."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1502376500, "post_id": 45580633, "comment_id": 78192980, "body": "@ThomasM.DuBuisson <code>-prof</code> with <code>-fprof-auto</code> or manually added SCC annotations make more descriptive callstacks."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1502388891, "post_id": 45580633, "comment_id": 78201123, "body": "Indeed.  While it doesn&#39;t retain/print the entire stack it does yield the final function that actually calls error. Useful."}], "tags": [], "owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "is_accepted": false, "score": 1, "last_activity_date": 1502245195, "last_edit_date": 1592644375, "creation_date": 1502244827, "answer_id": 45580633, "question_id": 45579549, "link": "https://stackoverflow.com/questions/45579549/how-to-generate-a-stack-trace-upon-division-by-zero-with-ghc-7-10-3/45580633#45580633", "title": "How to generate a stack trace upon division by zero with ghc 7.10.3?", "body": "<p>GHC doesn't support stack traces as such because <em>there isn't a call stack</em>. The best you can do is to use the simulated stack trace machinery in the base module <a href=\"https://hackage.haskell.org/package/base-4.10.0.0/docs/GHC-Stack.html\" rel=\"nofollow noreferrer\"><code>GHC.Stack</code></a>.</p>\n<p>Starting with GHC 7.8, and thus available in 7.10.3, <code>GHC.Stack</code> exposes</p>\n<pre><code>errorWithStackTrace :: String -&gt; a\n</code></pre>\n<p>which acts like <code>error</code> on normal builds but uses the SCC annotations (e.g., from <code>--fprof-auto</code>) to construct an approximate stack trace on profiled builds. You will need to recompile with profiling enabled to support this. If you are using cabal, you can run</p>\n<pre><code>cabal configure --enable-library-profiling --enable-executable-profiling\n</code></pre>\n<p>and rebuild.</p>\n<p>Starting with GHC 8.0, <code>errorWithStackTrace</code> is deprecated and support for call-site generation is provided by the <code>HasCallStack</code> machinery.</p>\n<p>Quoting now from the <code>GHC.Stack</code> documentation,</p>\n<blockquote>\n<p>A function can request its call-site with the <code>HasCallStack</code> constraint. For example, we can define</p>\n<pre><code>errorWithCallStack :: HasCallStack =&gt; String -&gt; a\n</code></pre>\n<p>as a variant of <code>error</code> that will get its call-site. We can access the call-stack inside <code>errorWithCallStack</code> with <code>callStack</code>.</p>\n<pre><code>errorWithCallStack :: HasCallStack =&gt; String -&gt; a\nerrorWithCallStack msg = error (msg ++ &quot;n&quot; ++ prettyCallStack callStack)\n</code></pre>\n<p>Thus, if we call <code>errorWithCallStack</code> we will get a formatted call-stack alongside our error message.</p>\n<pre><code>&gt;&gt;&gt; errorWithCallStack &quot;die&quot;\n*** Exception: die\nCallStack (from HasCallStack):\n  errorWithCallStack, called at &lt;interactive&gt;:2:1 in interactive:Ghci1\n</code></pre>\n</blockquote>\n<p>(I'm guessing <code>msg ++ &quot;\\n&quot;</code> was meant, but <code>&quot;n&quot;</code> is what is written.)</p>\n<p>While you can get some very limited stack trace support with GHC 7.8 and on, I would recommend upgrading to GHC 8 if possible for significantly better support. Either way, it won't be what you are used to from other languages, but it's better than nothing.</p>\n"}], "owner": {"reputation": 5774, "user_id": 105137, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/253329f6f7506a5299db1cb608d8defd?s=128&d=identicon&r=PG", "display_name": "kostmo", "link": "https://stackoverflow.com/users/105137/kostmo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 320, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1502245195, "creation_date": 1502235614, "question_id": 45579549, "link": "https://stackoverflow.com/questions/45579549/how-to-generate-a-stack-trace-upon-division-by-zero-with-ghc-7-10-3", "title": "How to generate a stack trace upon division by zero with ghc 7.10.3?", "body": "<p>If a program is run and crashes with the message \"Divide by zero\", what is the best way to identify where in the code this error was generated?</p>\n"}, {"tags": ["haskell", "bit-manipulation"], "answers": [{"comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1502227164, "post_id": 45578171, "comment_id": 78115852, "body": "Doesn&#39;t this return the lowest set bit. Like <code>0011001</code> will return <code>1</code>. <code>13</code> maps to <code>2</code>."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1502227203, "post_id": 45578171, "comment_id": 78115872, "body": "@WillemVanOnsem \u201c(Assuming the input Bit just has 1 bit set in it?)\u201d"}], "tags": [], "owner": {"reputation": 52741, "user_id": 555045, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/182d0ce855c8324a596648c04643e8f9?s=128&d=identicon&r=PG", "display_name": "nicomp", "link": "https://stackoverflow.com/users/555045/nicomp"}, "is_accepted": false, "score": 3, "last_activity_date": 1502228909, "last_edit_date": 1502228909, "creation_date": 1502227080, "answer_id": 45578171, "question_id": 45577968, "link": "https://stackoverflow.com/questions/45577968/the-index-of-the-first-bit/45578171#45578171", "title": "The index of the first bit", "body": "<p><code>popCount $ x-1</code> does that, effectively by counting the number of trailing zeroes. Subtracting 1 turns the trailing zeroes into ones and resets the only one that should be there.</p>\n\n<hr>\n\n<p>This is easy to adapt to a more general case without the assumption that only one bit of the input is set: <code>popCount $ complement x .&amp;. (x-1)</code></p>\n\n<p>The main idea is the same, and the ANDing with the complement of <code>x</code> gets rid of the ones that aren't newly created by the subtraction (which are the only ones that should be counted).</p>\n"}, {"tags": [], "owner": {"reputation": 179940, "user_id": 20713, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/09b9758a4a83cc25547eb93891f19df7?s=128&d=identicon&r=PG", "display_name": "ephemient", "link": "https://stackoverflow.com/users/20713/ephemient"}, "is_accepted": true, "score": 7, "last_activity_date": 1502229637, "creation_date": 1502229637, "answer_id": 45578680, "question_id": 45577968, "link": "https://stackoverflow.com/questions/45577968/the-index-of-the-first-bit/45578680#45578680", "title": "The index of the first bit", "body": "<p>Since <a href=\"http://hackage.haskell.org/package/base-4.8.0.0/docs/Data-Bits.html#t:FiniteBits\" rel=\"noreferrer\">base-4.8.0.0</a> there are</p>\n\n<pre><code>countLeadingZeros :: FiniteBits b =&gt; b -&gt; Int\ncountTrailingZeros :: FiniteBits b =&gt; b -&gt; Int\n</code></pre>\n\n<p>Those index the most-significant and least-significant set bits starting from the most-significant and least-significant ends respectively. Subtract from <code>finiteBitSize :: FiniteBits b =&gt; b -&gt; Int</code> to count from the other end.</p>\n"}], "owner": {"reputation": 23111, "user_id": 1319998, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/9f600f4583bec89109ce8c0c098951ae?s=128&d=identicon&r=PG", "display_name": "Michal Charemza", "link": "https://stackoverflow.com/users/1319998/michal-charemza"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 153, "favorite_count": 0, "accepted_answer_id": 45578680, "answer_count": 2, "score": 4, "last_activity_date": 1502229637, "creation_date": 1502226191, "question_id": 45577968, "link": "https://stackoverflow.com/questions/45577968/the-index-of-the-first-bit", "title": "The index of the first bit", "body": "<p>I can see in <a href=\"http://hackage.haskell.org/package/base-4.7.0.0/docs/Data-Bits.html#v:bit\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/base-4.7.0.0/docs/Data-Bits.html#v:bit</a> how to convert from an Int, n, to a Bit that has the nth bit set, using</p>\n\n<pre><code>bit :: Int -&gt; a\n</code></pre>\n\n<p>However, how can I do the inverse of this? (Assuming the input Bit just has 1 bit set in it?)</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 7, "creation_date": 1502224084, "post_id": 45577347, "comment_id": 78114420, "body": "<code>decrement (Just 5) :: VersionCompound</code> should give it the info it needs to compile. You should really be using a <code>newtype</code> though."}, {"owner": {"reputation": 1496, "user_id": 7350814, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bd7e1bdad619c54ab51e05ff9cfaa199?s=128&d=identicon&r=PG&f=1", "display_name": "Jogger", "link": "https://stackoverflow.com/users/7350814/jogger"}, "edited": false, "score": 1, "creation_date": 1502267821, "post_id": 45577347, "comment_id": 78129975, "body": "<code>decrement (Just (5 :: Int))</code> is an other way to make it compile"}], "answers": [{"tags": [], "owner": {"reputation": 231, "user_id": 5824635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c43dd400f3c9c2cbaeb8986532cd359b?s=128&d=identicon&r=PG&f=1", "display_name": "homura", "link": "https://stackoverflow.com/users/5824635/homura"}, "is_accepted": true, "score": 3, "last_activity_date": 1502224659, "last_edit_date": 1502224659, "creation_date": 1502224547, "answer_id": 45577593, "question_id": 45577347, "link": "https://stackoverflow.com/questions/45577347/no-instance-for-num-a0-arising-from-a-use-of-it/45577593#45577593", "title": "No instance for (Num a0) arising from a use of \u2018it\u2019", "body": "<p>Ghc is saying that it cannot infer what type to use. If you run <code>:t decrement (Just 5)</code>, you will see that it has type <code>(Num a, VersionOperations (Maybe a)) =&gt; Maybe a</code>.</p>\n\n<p>We can see that there is only one value of \"a\" that satisfies this currently, but Ghc cannot. Indeed, if someone were to add an instance such as <code>instance VersionOperations (Maybe Float) where</code> somewhere else in the program, it would become truly ambiguous.</p>\n\n<p>The easiest solution is to just add an explicit type signature. <code>decrement (Just 5) :: Maybe Int</code> should work.</p>\n"}], "owner": {"reputation": 5242, "user_id": 50962, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e39b7acdae85aedee02487bed17ff5f6?s=128&d=identicon&r=PG", "display_name": "altern", "link": "https://stackoverflow.com/users/50962/altern"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 773, "favorite_count": 0, "accepted_answer_id": 45577593, "answer_count": 1, "score": -2, "last_activity_date": 1502224659, "creation_date": 1502223413, "question_id": 45577347, "link": "https://stackoverflow.com/questions/45577347/no-instance-for-num-a0-arising-from-a-use-of-it", "title": "No instance for (Num a0) arising from a use of \u2018it\u2019", "body": "<p>I have following code:</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings, FlexibleInstances #-}\n\ntype VersionCompound = Maybe Int\n\nclass VersionOperations a where\n    decrement :: a -&gt; a\n\ninstance VersionOperations VersionCompound where\n        decrement Nothing = Nothing\n        decrement (Just 0) = Just 0\n        decrement (Just num) = Just (num - 1)\n</code></pre>\n\n<p>When I try to run command <code>decrement (Just 5)</code>, I get following error:</p>\n\n<pre><code>&lt;interactive&gt;:8:1:\n    No instance for (Num a0) arising from a use of \u2018it\u2019\n    The type variable \u2018a0\u2019 is ambiguous\n    Note: there are several potential instances:\n      instance Num Data.Attoparsec.Internal.Types.Pos\n        -- Defined in \u2018Data.Attoparsec.Internal.Types\u2019\n      instance Integral a =&gt; Num (GHC.Real.Ratio a)\n        -- Defined in \u2018GHC.Real\u2019\n      instance Num Integer -- Defined in \u2018GHC.Num\u2019\n      ...plus five others\n    In the first argument of \u2018print\u2019, namely \u2018it\u2019\n    In a stmt of an interactive GHCi command: print it\n</code></pre>\n\n<p>Any ideas how to fix it?</p>\n"}, {"tags": ["haskell", "aeson", "ghc-generics"], "comments": [{"owner": {"reputation": 20980, "user_id": 241990, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/265f1d52e6e484c9abe60b4da20fb8ee?s=128&d=identicon&r=PG", "display_name": "Shaun the Sheep", "link": "https://stackoverflow.com/users/241990/shaun-the-sheep"}, "edited": false, "score": 0, "creation_date": 1502206864, "post_id": 45572422, "comment_id": 78104725, "body": "Does it work with the <a href=\"https://downloads.haskell.org/~ghc/7.8.4/docs/html/users_guide/deriving.html\" rel=\"nofollow noreferrer\"><code>StandaloneDeriving</code> extension</a>?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1502216989, "post_id": 45572422, "comment_id": 78110647, "body": "Why don&#39;t you want to derive <code>Generic</code> where you define the type? Orphan instances are evil!"}, {"owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "edited": false, "score": 0, "creation_date": 1502217310, "post_id": 45572422, "comment_id": 78110825, "body": "Yes, that would be the right solution, but at this point in time I don&#39;t want to submit a PR which modifies <code>Foo.hs</code>."}], "answers": [{"comments": [{"owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "edited": false, "score": 0, "creation_date": 1502212189, "post_id": 45572852, "comment_id": 78107986, "body": "Ah - I was following the recipe <a href=\"https://artyom.me/aeson#records-and-json-generics\" rel=\"nofollow noreferrer\">here</a> and just used <code>instance ...</code> not  <code>deriving instance</code>."}, {"owner": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "reply_to_user": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "edited": false, "score": 3, "creation_date": 1502305789, "post_id": 45572852, "comment_id": 78157171, "body": "@ErikR Giving an empty instance declaration works for <code>ToJSON</code>, but not for <code>Generic</code>. The reasons are a bit subtle: <code>Generic</code> is a class for which deriving is built-in. <code>ToJSON</code> is a class for which generic &quot;default signatures&quot; and implementations are given."}], "tags": [], "owner": {"reputation": 20980, "user_id": 241990, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/265f1d52e6e484c9abe60b4da20fb8ee?s=128&d=identicon&r=PG", "display_name": "Shaun the Sheep", "link": "https://stackoverflow.com/users/241990/shaun-the-sheep"}, "is_accepted": true, "score": 4, "last_activity_date": 1502216446, "last_edit_date": 1502216446, "creation_date": 1502207493, "answer_id": 45572852, "question_id": 45572422, "link": "https://stackoverflow.com/questions/45572422/deriving-generic-and-tojson-at-the-same-time/45572852#45572852", "title": "deriving Generic and ToJSON at the same time?", "body": "<p>Enable <code>StandaloneDeriving</code> and use <code>deriving instance ...</code> since this doesn't require that the derivation is in the same module as the data type. </p>\n\n<p>Example:</p>\n\n<pre><code>{-# LANGUAGE DeriveGeneric, StandaloneDeriving, DeriveAnyClass #-}\n\nimport GHC.Generics\nimport Data.Aeson\nimport Foo\n\nderiving instance Generic Blather\nderiving instance ToJSON Blather\n\nmain = undefined\n</code></pre>\n"}], "owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 325, "favorite_count": 0, "accepted_answer_id": 45572852, "answer_count": 1, "score": 2, "last_activity_date": 1502216645, "creation_date": 1502206241, "last_edit_date": 1502216645, "question_id": 45572422, "link": "https://stackoverflow.com/questions/45572422/deriving-generic-and-tojson-at-the-same-time", "title": "deriving Generic and ToJSON at the same time?", "body": "<p>I have a module <code>Foo.hs</code> which contains a definition which does not derive <code>Generic</code>:</p>\n\n<pre><code>-- Foo.hs\ndata Blather = Blather ...  -- Generic not derived here\n</code></pre>\n\n<p>And in another module I want to derive <code>ToJSON</code>:</p>\n\n<pre><code>-- Bar.hs\n{-# LANGUAGE DeriveGeneric, DeriveAnyClass #-}\n\nimport GHC.Generics\nimport Data.Aeson\n\ninstance Generic Blather\ninstance ToJSON Blather\n</code></pre>\n\n<p>but it doesn't compile. If I derive Generic in <code>Foo.hs</code> at the definition site I can later derive <code>ToJSON</code> in another module.</p>\n\n<p>Can I derive <code>ToJSON Blather</code> in <code>Bar.hs</code> without modifying the original <code>Foo.hs</code>?</p>\n\n<p>Or is there a simple way to write <code>instance ToJSON Blather</code> by hand?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 4, "creation_date": 1502205706, "post_id": 45572202, "comment_id": 78103895, "body": "The problem is not that &quot;partially curried&quot; functions can not be stored in a &quot;associative&quot; list. The problem is that the two functions do not have the same type. Furthermore in the <code>case</code>, <code>Just func1</code> will not check if the function is indeed <code>func1</code>, in this case <code>func1</code> is a <i>local variable</i>."}, {"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1502205966, "post_id": 45572202, "comment_id": 78104071, "body": "If your <code>callFunc</code> function has to know about all functions anyway, what&#39;s the point of keeping the dictionary?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1502205997, "post_id": 45572202, "comment_id": 78104092, "body": "Try to write the type for <code>funcTable</code>. You will discover that it is ill typed."}, {"owner": {"reputation": 447, "user_id": 2812201, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/a5900e009117b30b90fb5bce64d6fd8e?s=128&d=identicon&r=PG&f=1", "display_name": "user2812201", "link": "https://stackoverflow.com/users/2812201/user2812201"}, "edited": false, "score": 0, "creation_date": 1502206340, "post_id": 45572202, "comment_id": 78104336, "body": "ok I see. so ghc goes down very deep in verifying lists are homogeneous!"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1502206424, "post_id": 45572202, "comment_id": 78104400, "body": "Yes. Since everything has to have a type. So it derives that the type is <code>[(Int,?)]</code> and it can not resolve <code>?</code> since the first is a <code>String -&gt; IO()</code> while the other is an <code>IO ()</code>. Furthermore what should the result type of <code>lookup</code> look like?"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 2, "creation_date": 1502210557, "post_id": 45572202, "comment_id": 78107034, "body": "&quot;Any trick to make it work?&quot; - Change <code>func1</code> to <code>func1 :: x -&gt; IO(); func1 _ = putStrLn &quot;1&quot;</code>. (Aside - this is a very obvious type error, making it easy to spot for commenters/potential answeres, but in general, your question should include the error, verbatim, as produced by the compiler)"}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 2, "creation_date": 1502217486, "post_id": 45572202, "comment_id": 78110921, "body": "<i>&quot;However, the following code won&#39;t compile&quot;</i>. Always add your error messages."}], "answers": [{"tags": [], "owner": {"reputation": 4763, "user_id": 1065586, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qYTQe.jpg?s=128&g=1", "display_name": "tomferon", "link": "https://stackoverflow.com/users/1065586/tomferon"}, "is_accepted": false, "score": 2, "last_activity_date": 1502220854, "creation_date": 1502220854, "answer_id": 45576699, "question_id": 45572202, "link": "https://stackoverflow.com/questions/45572202/partially-curried-functions-in-association-list-maps/45576699#45576699", "title": "Partially Curried Functions in Association List (Maps)", "body": "<p>Your issue has nothing to do with applying values to functions. The problem is that both values have different types. What would be the type of <code>[(1,func1),(2,func2)]</code>? <code>[(Int,IO ())]</code>? <code>[(Int, String -&gt; IO ())]</code>? Both are wrong.</p>\n\n<p>The simplest solution is to wrap your values of different types into a new one.</p>\n\n<pre><code>data Action \n  = SimpleAction (IO ())\n  | StringAction (String -&gt; IO ())\n\ntable :: [(Int, Action)]\ntable = [(1, SimpleAction func1), (2, StringAction func2)]\n\ncallFunc :: Int -&gt; IO ()\ncallFunc i = case lookup i table of\n  Just (SimpleAction action) -&gt; action\n  Just (StringAction action) -&gt; action \"OK\"\n  Nothing -&gt; error \"wrong\"\n</code></pre>\n\n<p>Note that <code>func1</code> is not a function by the way.</p>\n"}], "owner": {"reputation": 447, "user_id": 2812201, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/a5900e009117b30b90fb5bce64d6fd8e?s=128&d=identicon&r=PG&f=1", "display_name": "user2812201", "link": "https://stackoverflow.com/users/2812201/user2812201"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 65, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1502220854, "creation_date": 1502205604, "question_id": 45572202, "link": "https://stackoverflow.com/questions/45572202/partially-curried-functions-in-association-list-maps", "title": "Partially Curried Functions in Association List (Maps)", "body": "<p>So I want to build a function table using association list (or maps). I did some simple tests and found the following: fully curried functions work fine but partially curried functions cannot be stored in an association list. Here is the code that works fine:</p>\n\n<pre><code>import Data.List\nimport System.IO\n\nfunc1 :: IO ()\nfunc1 = putStrLn \"1\"\n\nfunc2 :: IO ()\nfunc2 = putStrLn \"2\"\n\nfuncTable = [ (1, func1)\n            , (2, func2)]\n\ncallFunc :: Int -&gt; IO ()\ncallFunc i = do\n  let justFunc = lookup i funcTable\n  case justFunc of\n  Just func -&gt; func\n  Nothing -&gt; putStrLn \"Wrong!\"\n\nmain = do\n  callFunc 1\n  callFunc 2\n  callFunc 3\n</code></pre>\n\n<p>However, the following code won't compile:</p>\n\n<pre><code>import Data.List\nimport System.IO\n\nfunc1 :: IO ()\nfunc1 = putStrLn \"1\"\n\nfunc2 :: String -&gt; IO ()\nfunc2 s = putStrLn s\n\nfuncTable = [ (1, func1)\n            , (2, func2)]\n\ncallFunc :: Int -&gt; IO ()\ncallFunc i = do\n  let justFunc = lookup i funcTable\n  case justFunc of\n    Just func1 -&gt; func1\n    Just func2 -&gt; func2 \"OK\"\n    Nothing -&gt; putStrLn \"Wrong!\"\n\nmain = do\n  callFunc 1\n  callFunc 2\n  callFunc 3\n</code></pre>\n\n<p>The only change I made in the code that does not compile is that I changed func2 to a partially curried function. Any trick to make it work?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 36134, "user_id": 493729, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/bU0Kx.jpg?s=128&g=1", "display_name": "Peter Hall", "link": "https://stackoverflow.com/users/493729/peter-hall"}, "edited": false, "score": 0, "creation_date": 1502199754, "post_id": 45569876, "comment_id": 78099278, "body": "You need to <i>sometimes</i> return a <code>First a</code> and <i>sometimes</i> return a <code>Second b</code>."}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 8, "last_activity_date": 1502199748, "creation_date": 1502199748, "answer_id": 45570034, "question_id": 45569876, "link": "https://stackoverflow.com/questions/45569876/testing-sum-applicative/45570034#45570034", "title": "Testing Sum applicative", "body": "<p>You need to randomly choose between <code>First</code> and <code>Second</code>, and then generate a suitable first / second component.</p>\n\n<p>Choosing between a finite amount of choices can be quickly done with <code>oneOf</code>.</p>\n\n<pre><code> instance (Arbitrary a, Arbitrary b) =&gt; Arbitrary (Sum a b) where\n    arbitrary = oneOf [ First &lt;$&gt; arbitrary, Second &lt;$&gt; arbitrary ]\n</code></pre>\n\n<p>The above is equivalent to the following lower-level instance, which you might find more understandable at first.</p>\n\n<pre><code> instance (Arbitrary a, Arbitrary b) =&gt; Arbitrary (Sum a b) where\n    arbitrary = do\n       which &lt;- arbitrary   -- a random Bool\n       if which\n         then do\n            a &lt;- arbitrary\n            return (First a)\n         else do\n            b &lt;- arbitrary\n            return (Second b)\n</code></pre>\n"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 98, "favorite_count": 0, "accepted_answer_id": 45570034, "answer_count": 1, "score": 4, "last_activity_date": 1502199748, "creation_date": 1502199357, "question_id": 45569876, "link": "https://stackoverflow.com/questions/45569876/testing-sum-applicative", "title": "Testing Sum applicative", "body": "<p>I want to test the applicative instance on the custom type:</p>\n\n<pre><code>module SumMonad where\n\n  import Test.QuickCheck (Arbitrary, arbitrary, elements, Gen)\n  import Test.QuickCheck.Checkers (quickBatch, eq, (=-=), EqProp)\n  import Test.QuickCheck.Classes (applicative)\n\n  data Sum a b =\n      First a\n    | Second b\n    deriving (Eq, Show)\n\n  instance Functor (Sum a) where\n    fmap _ (First x) = First x\n    fmap f (Second y) = Second (f y)\n\n  instance Applicative (Sum a) where\n    pure = Second\n    First x &lt;*&gt; _ = First x\n    _ &lt;*&gt; First x = First x \n    Second f &lt;*&gt; Second x = Second (f x)\n\n  instance Arbitrary a =&gt; Arbitrary (Sum a b) where\n    arbitrary = do\n      a &lt;- arbitrary\n      b &lt;- arbitrary\n      return ???(What should I write here)\n\n  instance (Eq a, Eq b)  =&gt; EqProp (Sum a b) where (=-=) = eq \n</code></pre>\n\n<p>As you can see, the triple question marks highlighted, that I do not know what comes there?</p>\n"}, {"tags": ["haskell", "type-mismatch", "type-systems", "automatic-differentiation"], "comments": [{"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1502181567, "post_id": 45563186, "comment_id": 78085709, "body": "Could this be the dreaded monomorphism restriction?"}, {"owner": {"reputation": 4773, "user_id": 4148211, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/DiKJf.jpg?s=128&g=1", "display_name": "frasertweedale", "link": "https://stackoverflow.com/users/4148211/frasertweedale"}, "reply_to_user": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1502181833, "post_id": 45563186, "comment_id": 78085915, "body": "It is not the monomorphism restriction."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 2, "creation_date": 1502181835, "post_id": 45563186, "comment_id": 78085916, "body": "This is indeed a limitation in the type system. The failing program would required impredicative types to be type-checked correctly (<code>[test1,test2]::[forall a . ...]</code> is impredicative), which as the <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#impredicative-polymorphism\" rel=\"nofollow noreferrer\">docs</a> claim, GHC only has &quot;extremely flaky support&quot; for. The best workaround is a <code>newtype</code> wrapper. Alternatively, turn on <code>ImpredicativeTypes</code> and add type annotations to each subterm of the program until it typechecks."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1502182449, "post_id": 45563186, "comment_id": 78086361, "body": "I&#39;ve also just remembered that <code>ad</code> has several modules to address precisely this limitation in GHC, e.g. for <a href=\"https://hackage.haskell.org/package/ad-4.3.4/docs/Numeric-AD-Rank1-Forward.html#v:diff\" rel=\"nofollow noreferrer\"><code>diff</code></a>."}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 3, "last_activity_date": 1502182587, "creation_date": 1502182587, "answer_id": 45563823, "question_id": 45563186, "link": "https://stackoverflow.com/questions/45563186/why-is-a-function-type-required-to-be-wrapped-for-the-type-checker-to-be-satis/45563823#45563823", "title": "Why is a function type required to be &quot;wrapped&quot; for the type checker to be satisfied?", "body": "<p>The type inference algorithm will not infer higher rank types (those with <code>forall</code> at the left of <code>-&gt;</code>). If I remember correctly, it becomes undecidable. Anyway, consider this code</p>\n\n<pre><code>foo f = (f True, f 'a')\n</code></pre>\n\n<p>what should its type be? We could have</p>\n\n<pre><code>foo :: (forall a. a -&gt; a) -&gt; (Bool, Char)\n</code></pre>\n\n<p>but we could also have</p>\n\n<pre><code>foo :: (forall a. a -&gt; Int) -&gt; (Int, Int)\n</code></pre>\n\n<p>or, for any type constructor <code>F :: * -&gt; *</code></p>\n\n<pre><code>foo :: (forall a. a -&gt; F a) -&gt; (F Bool, F Char)\n</code></pre>\n\n<p>Here, as far as I can see, we can not find a principal type -- a type which is the most general type we can assign to <code>foo</code>.</p>\n\n<p>If a principal type does not exist, the type inference machinery can only pick a suboptimal type for <code>foo</code>, which can cause type errors later on. This is bad. Instead, GHC relies on a Hindley-Milner style type inference engine, which was greatly extended so to cover more advanced Haskell types. This mechanism, unlike plain Hindley-Milner, will assign <code>f</code> a polymorphic type <em>provided</em> the user explicitly required that, e.g. by giving <code>foo</code> a signature.</p>\n\n<p>Using a wrapper newtype like <code>Fun</code> also instructs GHC in a similar way, providing the polymorphic type for <code>f</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1502208014, "post_id": 45563845, "comment_id": 78105472, "body": "<code>ImpredicativeTypes</code> is not actually supported in any meaningful way."}], "tags": [], "owner": {"reputation": 49501, "user_id": 784338, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ae195ac7c8a5e9002a808544572cc5fc?s=128&d=identicon&r=PG", "display_name": "Daniel Gratzer", "link": "https://stackoverflow.com/users/784338/daniel-gratzer"}, "is_accepted": true, "score": 8, "last_activity_date": 1502183069, "last_edit_date": 1502183069, "creation_date": 1502182653, "answer_id": 45563845, "question_id": 45563186, "link": "https://stackoverflow.com/questions/45563186/why-is-a-function-type-required-to-be-wrapped-for-the-type-checker-to-be-satis/45563845#45563845", "title": "Why is a function type required to be &quot;wrapped&quot; for the type checker to be satisfied?", "body": "<p>This is an issue with GHC's type system. It is really GHC's type system by the way; the original type system for Haskell/ML like languages don't support higher rank polymorphism, let alone impredicative polymorphism which is what we're using here.</p>\n\n<p>The issue is that in order to type check this we need to support <code>forall</code>s at any position in a type. Not only bunched all the way at the front of the type (the normal restriction which allows for type inference). Once you leave this area type inference becomes undecidable in general (for rank n polymorphism and beyond). In our case, the type of <code>[test1, test2]</code> would need to be <code>[forall a. Num a =&gt; a -&gt; a]</code> which is a problem considering that it doesn't fit into the scheme discussed above. It would require us to use impredicative polymorphism, so called because <code>a</code> ranges over types with <code>forall</code>s in them and so <code>a</code> could be replaced with the type in which it's being used.</p>\n\n<p>So, therefore there's going to be some cases that misbehave just because the problem is not fully solvable. GHC does have some support for rank n polymorphism and a bit of support for impredicative polymorphism but it's generally better to just use newtype wrappers to get reliable behavior. To the best of my knowledge, GHC also discourages using this feature precisely because it's so hard to figure out exactly what the type inference algorithm will handle.</p>\n\n<p>In summary, <a href=\"http://www.sciencedirect.com/science/article/pii/S0168007298000475\" rel=\"noreferrer\">math</a> says that there will be flaky cases and <code>newtype</code> wrappers are the best, if somewhat dissatisfying way, to cope with it.</p>\n"}], "owner": {"reputation": 4773, "user_id": 4148211, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/DiKJf.jpg?s=128&g=1", "display_name": "frasertweedale", "link": "https://stackoverflow.com/users/4148211/frasertweedale"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 124, "favorite_count": 0, "accepted_answer_id": 45563845, "answer_count": 2, "score": 3, "last_activity_date": 1502258822, "creation_date": 1502180961, "last_edit_date": 1502258822, "question_id": 45563186, "link": "https://stackoverflow.com/questions/45563186/why-is-a-function-type-required-to-be-wrapped-for-the-type-checker-to-be-satis", "title": "Why is a function type required to be &quot;wrapped&quot; for the type checker to be satisfied?", "body": "<p>The following program type-checks:</p>\n\n<pre><code>{-# LANGUAGE RankNTypes #-}\n\nimport Numeric.AD (grad)\n\nnewtype Fun = Fun (forall a. Num a =&gt; [a] -&gt; a)\n\ntest1 [u, v] = (v - (u * u * u))\ntest2 [u, v] = ((u * u) + (v * v) - 1)\n\nmain = print $ fmap (\\(Fun f) -&gt; grad f [1,1]) [Fun test1, Fun test2]\n</code></pre>\n\n<p>But this program fails:</p>\n\n<pre><code>main = print $ fmap (\\f -&gt; grad f [1,1]) [test1, test2]\n</code></pre>\n\n<p>With the type error:</p>\n\n<pre><code>Grad.hs:13:33: error:\n    \u2022 Couldn't match type \u2018Integer\u2019\n                     with \u2018Numeric.AD.Internal.Reverse.Reverse s Integer\u2019\n      Expected type: [Numeric.AD.Internal.Reverse.Reverse s Integer]\n                     -&gt; Numeric.AD.Internal.Reverse.Reverse s Integer\n        Actual type: [Integer] -&gt; Integer\n    \u2022 In the first argument of \u2018grad\u2019, namely \u2018f\u2019\n      In the expression: grad f [1, 1]\n      In the first argument of \u2018fmap\u2019, namely \u2018(\\ f -&gt; grad f [1, 1])\u2019\n</code></pre>\n\n<p>Intuitively, the latter program looks correct.  After all, the\nfollowing, seemingly equivalent program does work:</p>\n\n<pre><code>main = print $ [grad test1 [1,1], grad test2 [1,1]]\n</code></pre>\n\n<p>It looks like a limitation in GHC's type system.  I would like to know\nwhat causes the failure, why this limitation exists, and any possible\nworkarounds besides wrapping the function (per <code>Fun</code> above).</p>\n\n<p>(Note: this is not caused by the monomorphism restriction; compiling\nwith <code>NoMonomorphismRestriction</code> does not help.)</p>\n"}, {"tags": ["algorithm", "haskell"], "comments": [{"owner": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "edited": false, "score": 0, "creation_date": 1502171785, "post_id": 45560254, "comment_id": 78079926, "body": "You don&#39;t use <code>n</code> in countSequence, or am i missing the obvious?"}, {"owner": {"reputation": 314, "user_id": 6511076, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/487c13a063ce60218c89fab121214e92?s=128&d=identicon&r=PG&f=1", "display_name": "Mark", "link": "https://stackoverflow.com/users/6511076/mark"}, "reply_to_user": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "edited": false, "score": 0, "creation_date": 1502171919, "post_id": 45560254, "comment_id": 78079990, "body": "I don&#39;t really see a place that using n gains me anything (I didn&#39;t make this problem, I was given it).  As n = length xs, unless I can get a solution faster than O(n) I can always just compute it first if it&#39;s needed.  That being said, if it ends up being useful for something I&#39;d be interested in seeing it."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1502172536, "post_id": 45560254, "comment_id": 78080239, "body": "@Mark, You could do the same solution as python, but construct a <code>Data.Map</code> with the necessary counts, that would get you to O(m log m).  This also might be a good fit for <a href=\"https://hackage.haskell.org/package/data-inttrie\" rel=\"nofollow noreferrer\">data-inttrie</a>, which would be O(m log M) (where M is the largest number in the list)."}, {"owner": {"reputation": 314, "user_id": 6511076, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/487c13a063ce60218c89fab121214e92?s=128&d=identicon&r=PG&f=1", "display_name": "Mark", "link": "https://stackoverflow.com/users/6511076/mark"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1502172784, "post_id": 45560254, "comment_id": 78080358, "body": "@luqui I&#39;m really interested in solutions that <i>aren&#39;t</i> just porting the Python one.  I&#39;m mostly just curious what an efficient functional solution to a problem like this is, and said o(n*m) because I wanted one more efficient than the &quot;easy&quot; one I found."}, {"owner": {"reputation": 314, "user_id": 6511076, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/487c13a063ce60218c89fab121214e92?s=128&d=identicon&r=PG&f=1", "display_name": "Mark", "link": "https://stackoverflow.com/users/6511076/mark"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1502172963, "post_id": 45560254, "comment_id": 78080453, "body": "@luqui Also, do you have a reference for time complexities of <code>data-inttrie</code>?"}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 1, "creation_date": 1502174484, "post_id": 45560254, "comment_id": 78081277, "body": "Anything you can do in O(n) with an impure algorithm can be done in at worst O(n log n) with a pure algorithm (by, e.g., replacing an array with a binary tree) (<a href=\"http://www.cs.princeton.edu/courses/archive/fall03/cs528/handouts/Pure%20Versus%20Impure%20LISP.pdf\" rel=\"nofollow noreferrer\">source</a>). In this case, I would suggest an IntMap. You could also achieve O(n + m) with a mutable vector (in <code>ST</code> or <code>IO</code>) and a direct port of the python algorithm."}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1502175754, "post_id": 45560254, "comment_id": 78082004, "body": "Can you count the frequencies of all occurrences rather than just the ones in <code>[0..m]</code>? If so, <code>foldl&#39; (\\a b -&gt; IM.insertWith (+) b 1 a) IM.empty</code> is reasonable (where <code>IM</code> is <code>Data.IntMap</code>). I assume that you want to use machine integers (so <code>Int</code>, not <code>Integer</code>) since you&#39;re trying to compare with a python implementation."}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1502176241, "post_id": 45560254, "comment_id": 78082251, "body": "I&#39;ll also note that <code>Data.IntMap.insertWith</code> is <code>O(min(n, 64))</code> (or 32 for 32-bit machine ints) in the number of elements so it quickly becomes linear for most use cases."}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1502176609, "post_id": 45560254, "comment_id": 78082474, "body": "I&#39;ll also also note that if you do want to count only items <code>[0..m]</code> then you can just filter the list first to only include those items without changing the asymptotics."}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1502176752, "post_id": 45560254, "comment_id": 78082564, "body": "I&#39;ll also also also note that the type of <code>countSequence</code> is incorrect. A list comprehension must give a list. I think that&#39;s it."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 1, "creation_date": 1502177963, "post_id": 45560254, "comment_id": 78083324, "body": "@ReinHenrichs Immutable arrays offer the right operation as well (no need for <code>IO</code> or <code>ST</code>), and then you don&#39;t need to pfaff about with the extra worries about whether the tree shape of <code>IntMap</code> incurs an extra log-cost or not (it has always struck me as a bit disingenuous to ignore the log factor just because <code>Int</code>s are constant-width)."}, {"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 0, "creation_date": 1502179795, "post_id": 45560254, "comment_id": 78084514, "body": "Your <code>countSequence</code> function doesn&#39;t type check in the first place."}], "answers": [{"comments": [{"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 1, "creation_date": 1502178785, "post_id": 45561909, "comment_id": 78083847, "body": "This also has the advantage of not requiring the bounds to be known up front if you remove the <code>filter</code> and the <code>m</code> argument."}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 0, "creation_date": 1502241061, "post_id": 45561909, "comment_id": 78119744, "body": "To produce the same output as the original function, where <code>countSequence m xs !! i == count xs i</code> for all <code>i</code> in <code>[0..m]</code>, you can make the initial accumulator <code>IntMap.fromList [(x, 0) | x &lt;- [0..m]]</code> and add <code>IntMap.elems</code> to the composition. Or you can leave it as an <code>IntMap</code> and use <code>IntMap.findWithDefault 0</code>, in which case it\u2019s fine to start with <code>IntMap.empty</code> (or <code>mempty</code>)."}], "tags": [], "owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "is_accepted": false, "score": 2, "last_activity_date": 1502178045, "last_edit_date": 1502178045, "creation_date": 1502177344, "answer_id": 45561909, "question_id": 45560254, "link": "https://stackoverflow.com/questions/45560254/finding-a-count-sequence/45561909#45561909", "title": "Finding a &quot;Count Sequence&quot;", "body": "<p>In <code>O(n+m)</code> (sort of, I think, maybe):</p>\n\n<pre><code>import Data.Ix (inRange)\nimport qualified Data.IntMap.Strict as IM\n\ncountSequence m =\n  foldl' count IM.empty . filter (inRange (0,m))\n    where count a b = IM.insertWith (+) b 1 a\n</code></pre>\n\n<p>gives</p>\n\n<pre><code>&gt; countSequence 2 [1,2,3,1,2,-1]\nfromList [(1,2),(2,2)]\n</code></pre>\n\n<p>I haven't used <code>n</code> because you also didn't use <code>n</code> and I'm not sure what it's supposed to be. I also moved the list to the last argument to put it in a position to be eta reduced.</p>\n"}, {"comments": [{"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 1, "creation_date": 1502178099, "post_id": 45562029, "comment_id": 78083411, "body": "Someone should benchmark our answers in their copious free time."}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1502178456, "post_id": 45562029, "comment_id": 78083636, "body": "Also, what is the asymptotic time of <code>accumArray</code>? The docs don&#39;t give it."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1502178611, "post_id": 45562029, "comment_id": 78083730, "body": "@ReinHenrichs The docs don&#39;t say, but the main drivers are allocating and initializing an array of the appropriate size (O(m)) and running the given function once for each element in the input list (O(n)). It&#39;s a really thin wrapper around your proposed solution from the comments: allocating a mutable array and freezing it once you&#39;re done."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 1, "last_activity_date": 1502178152, "last_edit_date": 1502178152, "creation_date": 1502177662, "answer_id": 45562029, "question_id": 45560254, "link": "https://stackoverflow.com/questions/45560254/finding-a-count-sequence/45562029#45562029", "title": "Finding a &quot;Count Sequence&quot;", "body": "<p>I think you should use your Python intuition -- iterate through the one list and increment a counter in another list. Here's an implementation with O(n+m) runtime:</p>\n\n<pre><code>import Data.Array\ncountSequence xs m = accumArray (+) 0 (0,m) [(x, 1) | x &lt;- xs, inRange (0,m) x]\n</code></pre>\n\n<p>(This use case is even the motivating example for the existence of <code>accumArray</code> in the documentation!) In ghci:</p>\n\n<pre><code>&gt; countSequence ([1..5] ++ [1,3..5] ++ [1,4..5] ++ [1,5]) 3\narray (0,3) [(0,0),(1,4),(2,1),(3,2)]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "is_accepted": false, "score": 1, "last_activity_date": 1502192059, "last_edit_date": 1502192059, "creation_date": 1502190423, "answer_id": 45566671, "question_id": 45560254, "link": "https://stackoverflow.com/questions/45560254/finding-a-count-sequence/45566671#45566671", "title": "Finding a &quot;Count Sequence&quot;", "body": "<p>I guess using <code>Data.IntMap</code> would be as efficient as it gets for this job. One <code>foldr</code> pass is done to establish the <code>IntMap</code> (<code>cm</code>) and a <code>map</code> to construct a new list holding the counts of elements at corresponding positions.</p>\n\n<pre><code>import qualified Data.IntMap.Lazy as IM\n\ncountSequence :: [Int] -&gt; [Int]\ncountSequence xs = map (\\x -&gt; let cm = foldr (\\x m -&gt; IM.alter (\\mx -&gt; if mx == Nothing then Just 1 else fmap (+1) mx) x m) IM.empty xs\n                              in IM.findWithDefault 0 x cm) xs\n\n*Main&gt; countSequence [1,2,5,1,3,7,8,5,6,4,1,2,3,7,9,3,4,8]\n[3,2,2,3,3,2,2,2,1,2,3,2,3,2,1,3,2,2]\n*Main&gt; countSequence [4,5,4]\n[2,1,2]\n*Main&gt; *Main&gt; countSequence [9,8,7,6,5]\n[1,1,1,1,1]\n</code></pre>\n"}], "owner": {"reputation": 314, "user_id": 6511076, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/487c13a063ce60218c89fab121214e92?s=128&d=identicon&r=PG&f=1", "display_name": "Mark", "link": "https://stackoverflow.com/users/6511076/mark"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 108, "favorite_count": 0, "answer_count": 3, "score": 3, "last_activity_date": 1502192059, "creation_date": 1502171553, "question_id": 45560254, "link": "https://stackoverflow.com/questions/45560254/finding-a-count-sequence", "title": "Finding a &quot;Count Sequence&quot;", "body": "<p>Given a list of integers <code>xs</code>, let:</p>\n\n<pre><code>count :: [Integer] -&gt; Integer -&gt; Integer\ncount xs n = length . filter (==n) $ xs\n</code></pre>\n\n<p>count the number of times the integer <code>n</code> occurs in the list.</p>\n\n<p>Now, given a \"list\" (some sort of array of integers, can be something besides a List) of length <code>n</code>, write a function</p>\n\n<pre><code>countSequence :: [Integer] -&gt; Integer -&gt; Integer -&gt; Integer\ncountSequence xs n m = [count xs x | x &lt;- [0..m]]\n</code></pre>\n\n<p>that outputs the \"list of counts\" (0th index contains number of times 0 occurs in the list, 1st index contains number of times 1 occurs in the list, etc) <strong>that has time compleity o(m*n)</strong></p>\n\n<p>The above implementation I've given has complexity O(m*n).  In Python (which I'm more familiar with), it's easy to do this in O(m + n) time --- iterate through the list, and each element increment a counter in some other list, which is initialized to be all zeros and length (m+1).</p>\n\n<p>How could I get a better implementation in Haskell?  I'd prefer if it wasn't some trivial way to implement the Python solution (such as adding another input to the function to keep the \"list of counts\" in and then interating through it).</p>\n"}, {"tags": ["haskell", "monads", "maybe"], "comments": [{"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 11, "creation_date": 1502163773, "post_id": 45558914, "comment_id": 78077343, "body": "GHCi defaults to the IO monad if you don&#39;t specify one. It&#39;s just printing the contents of an <code>IO (Maybe a)</code>"}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "reply_to_user": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 7, "creation_date": 1502166275, "post_id": 45558914, "comment_id": 78077928, "body": "@4castle To slightly misquote shachaf: An <code>IO (Maybe a)</code> contains a <code>Maybe a</code> in the same way that <code>&#47;bin&#47;ls</code> contains a list of files. This might sound a bit pedantic, but it isn&#39;t printing the contents of <code>IO (Maybe a)</code>. It is running an <code>IO (Maybe a)</code> and then printing the results of that. The distinction can be important."}, {"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "reply_to_user": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 1, "creation_date": 1502166629, "post_id": 45558914, "comment_id": 78078026, "body": "@DavidYoung I don&#39;t personally find the distinction to be important, because it&#39;s the IO monad&#39;s job to know the internal representation of the value. For reasoning purposes, I usually think of all monads as containers (whether they actually contain the value or not)."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 2, "creation_date": 1502184411, "post_id": 45558914, "comment_id": 78087766, "body": "@4castle I see your point, but still think we should avoid talking about \u201c<code>IO a</code> containing an <code>a</code> value\u201d. Especially beginners coming from procedural/OO languages tend to think that <code>IO String</code> actually just contains one <code>String</code> object (which the type system waywardly prevents them from properly accessing). But that&#39;s just wrong \u2013 you can only say an <code>IO String</code> value contains \u2013 abstractly \u2013 <i>all</i> possible results that running the <code>IO</code> action could possibly yield, however not any one particular result. I really like the <code>&#47;bin&#47;ls</code> analogy."}], "answers": [{"tags": [], "owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "is_accepted": true, "score": 21, "last_activity_date": 1502164143, "creation_date": 1502164143, "answer_id": 45558972, "question_id": 45558914, "link": "https://stackoverflow.com/questions/45558914/why-does-return-nothing-return-nothing/45558972#45558972", "title": "Why does &quot;return Nothing&quot; return Nothing?", "body": "<p>When GHCi goes to print a value, it tries two different things. First, it tries to unify the type with <code>IO a</code> for some <code>a</code>. If it can do that then it executes the IO action and tries to print the result. If it can't do that, it tries to print the given value. In your case, <code>Monad m =&gt; m (Maybe a)</code> can be unified with <code>IO (Maybe a)</code>.</p>\n\n<p>Reviewing this GHCi session might help:</p>\n\n<pre><code>Prelude&gt; return Nothing\nNothing\nPrelude&gt; return Nothing :: IO (Maybe a)\nNothing\nPrelude&gt; return Nothing :: Maybe (Maybe a)\nJust Nothing\nPrelude&gt; Nothing\nNothing\n</code></pre>\n"}], "owner": {"reputation": 2588, "user_id": 916142, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/cf88a560a7f987712350b7d629ed2bc7?s=128&d=identicon&r=PG", "display_name": "Jeffrey Benjamin Brown", "link": "https://stackoverflow.com/users/916142/jeffrey-benjamin-brown"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1565, "favorite_count": 0, "accepted_answer_id": 45558972, "answer_count": 1, "score": 11, "last_activity_date": 1502164143, "creation_date": 1502163697, "question_id": 45558914, "link": "https://stackoverflow.com/questions/45558914/why-does-return-nothing-return-nothing", "title": "Why does &quot;return Nothing&quot; return Nothing?", "body": "<p>\"return a\" is supposed to wrap a in the context of some Monad:</p>\n\n<pre><code>*Main&gt; :i return\nclass Applicative m =&gt; Monad (m :: * -&gt; *) where\n  ...\n  return :: a -&gt; m a\n  ...\n        -- Defined in \u2018GHC.Base\u2019\n</code></pre>\n\n<p>If I ask GHCI what the type of \"return Nothing\" is, it conforms to that:</p>\n\n<pre><code>*Main&gt; :t return Nothing\nreturn Nothing :: Monad m =&gt; m (Maybe a)\n</code></pre>\n\n<p>But if I evaluate it, I see no outer Monad, just the inner Maybe:</p>\n\n<pre><code>*Main&gt;  return Nothing\nNothing\n</code></pre>\n"}, {"tags": ["haskell", "types", "compile-time"], "comments": [{"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 1, "creation_date": 1502150953, "post_id": 45557350, "comment_id": 78074690, "body": "Values can&#39;t cause type errors in Haskell because values and types do not interact. What you are asking for is known as <i>dependent typing</i>, which Haskell does not have (at least, not enough to do what you are asking)."}, {"owner": {"reputation": 382, "user_id": 2726855, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/846041e713129fc0ad740c66553871fc?s=128&d=identicon&r=PG", "display_name": "goteguru", "link": "https://stackoverflow.com/users/2726855/goteguru"}, "reply_to_user": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1502151674, "post_id": 45557350, "comment_id": 78074819, "body": "Thanks @ReinHenrichs I indeed found some papers about dependent typing but I can&#39;t say I understood it well enough to decide whether it can be used in my case or not."}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1502151747, "post_id": 45557350, "comment_id": 78074838, "body": "It certainly could be, just not with Haskell. You might be interested in the book <i>Type-Driven Development with Idris</i> for a pragmatic introduction to dependent types."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "reply_to_user": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 1, "creation_date": 1502153231, "post_id": 45557350, "comment_id": 78075139, "body": "@ReinHenrichs You can sometimes get a surprising amount of mileage out of the level of dependent type support Haskell has already. Possibly <i>just</i> enough to get this example working (depending on how the actual problem looks, at least). The problem, as written, looks like it could involve a slight extension of the <a href=\"https://wiki.haskell.org/Phantom_type\" rel=\"nofollow noreferrer\">&quot;phantom types as &#39;validation&#39; tagging&quot;</a> thing (just with multiple valid combinations, instead of just one). It does depend a bit on how this function is to be used, though (and the level of code complexity you&#39;re ok with)."}], "answers": [{"comments": [{"owner": {"reputation": 382, "user_id": 2726855, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/846041e713129fc0ad740c66553871fc?s=128&d=identicon&r=PG", "display_name": "goteguru", "link": "https://stackoverflow.com/users/2726855/goteguru"}, "edited": false, "score": 0, "creation_date": 1502151500, "post_id": 45557381, "comment_id": 78074783, "body": "Of course the compiler can&#39;t deduce user input (since it&#39;s impure) that&#39;s what exceptions are for. But it definitely could do this all in my pure code."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 382, "user_id": 2726855, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/846041e713129fc0ad740c66553871fc?s=128&d=identicon&r=PG", "display_name": "goteguru", "link": "https://stackoverflow.com/users/2726855/goteguru"}, "edited": false, "score": 2, "creation_date": 1502151850, "post_id": 45557381, "comment_id": 78074853, "body": "@goteguru: no, that is still an undecidable problem, since for the program can get stuck into an infinite loop. See the <a href=\"https://cs.stackexchange.com/questions/69868/emptiness-problem\">emptiness problem</a>."}, {"owner": {"reputation": 382, "user_id": 2726855, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/846041e713129fc0ad740c66553871fc?s=128&d=identicon&r=PG", "display_name": "goteguru", "link": "https://stackoverflow.com/users/2726855/goteguru"}, "edited": false, "score": 1, "creation_date": 1502152486, "post_id": 45557381, "comment_id": 78074979, "body": "Your program can stuck into an infinite loop even if it typechecks. I&#39;m not asking for proof of correctness, I just want to generate a compile error at certain illegal cases."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 382, "user_id": 2726855, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/846041e713129fc0ad740c66553871fc?s=128&d=identicon&r=PG", "display_name": "goteguru", "link": "https://stackoverflow.com/users/2726855/goteguru"}, "edited": false, "score": 0, "creation_date": 1502152635, "post_id": 45557381, "comment_id": 78075014, "body": "@goteguru: no, it is a common misconception that Haskells typesystem is Turing complete. It is not. Some <i>extensions</i> make it Turing complete, but the default one is quite simple."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "reply_to_user": {"reputation": 382, "user_id": 2726855, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/846041e713129fc0ad740c66553871fc?s=128&d=identicon&r=PG", "display_name": "goteguru", "link": "https://stackoverflow.com/users/2726855/goteguru"}, "edited": false, "score": 4, "creation_date": 1502154772, "post_id": 45557381, "comment_id": 78075460, "body": "@goteguru You still run into a fundamental problem: There are cases where you won&#39;t be able to &quot;prove&quot; to the compiler that something will be an <code>A ...</code>. For example, you could have an <code>unknown :: F a</code> that will give you back an <code>A &quot;Eureka!&quot;</code> if some unproven (or even undecidable!) mathematical conjecture is true and a <code>B</code> if it is false. Whether or not this causes an actual issue, though, somewhat depends on the broader context."}, {"owner": {"reputation": 382, "user_id": 2726855, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/846041e713129fc0ad740c66553871fc?s=128&d=identicon&r=PG", "display_name": "goteguru", "link": "https://stackoverflow.com/users/2726855/goteguru"}, "reply_to_user": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1502156296, "post_id": 45557381, "comment_id": 78075774, "body": "wow, you are right @DavidYoung . I&#39;ve never thought about that. Thanks both of you."}, {"owner": {"reputation": 382, "user_id": 2726855, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/846041e713129fc0ad740c66553871fc?s=128&d=identicon&r=PG", "display_name": "goteguru", "link": "https://stackoverflow.com/users/2726855/goteguru"}, "edited": false, "score": 0, "creation_date": 1502308817, "post_id": 45557381, "comment_id": 78158708, "body": "While certainly nice haskeller style (and I often use it), I can&#39;t accept this as solution, because I still would have to check Nothing in runtime and that still would be a &quot;runtime error&quot;."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "reply_to_user": {"reputation": 382, "user_id": 2726855, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/846041e713129fc0ad740c66553871fc?s=128&d=identicon&r=PG", "display_name": "goteguru", "link": "https://stackoverflow.com/users/2726855/goteguru"}, "edited": false, "score": 0, "creation_date": 1502864609, "post_id": 45557381, "comment_id": 78370723, "body": "@goteguru Not necessarily a runtime error. You can pattern match on a <code>Maybe</code>. You can also <code>fmap</code> over it (since it&#39;s a <code>Functor</code>) and it&#39;s also an <code>Applicative</code>, a <code>Monad</code> and an <a href=\"https://hackage.haskell.org/package/base-4.10.0.0/docs/Control-Applicative.html#t:Alternative\" rel=\"nofollow noreferrer\"><code>Alternative</code></a>, so you can combine <code>Maybe</code>s together in a number of ways (and often avoid having to pattern match on them in the first place, eliminating all potential runtime errors related to the <code>Maybe</code>)."}, {"owner": {"reputation": 382, "user_id": 2726855, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/846041e713129fc0ad740c66553871fc?s=128&d=identicon&r=PG", "display_name": "goteguru", "link": "https://stackoverflow.com/users/2726855/goteguru"}, "reply_to_user": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1502874106, "post_id": 45557381, "comment_id": 78376528, "body": "@DavidYoung I can&#39;t understand. It&#39;s clear I can use Maybe in Applicative style and as a Monad, but that won&#39;t save me from my own errors. It will generate a Nothing where I certainly do not want Nothing being generated. The main goal here was to warn me (preferably fail) immediately in compile time, if I&#39;m mistakenly combining items in my code which logically cannot be combined. It would be a countermeasure in some library against programmer&#39;s errors and not some input validation (where Maybe certainly a good idea)."}], "tags": [], "owner": {"reputation": 1039, "user_id": 3209348, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/30cc6bf1460b8cc9b5ff83178dfce208?s=128&d=identicon&r=PG", "display_name": "DirkyJerky", "link": "https://stackoverflow.com/users/3209348/dirkyjerky"}, "is_accepted": false, "score": 4, "last_activity_date": 1502151022, "creation_date": 1502151022, "answer_id": 45557381, "question_id": 45557350, "link": "https://stackoverflow.com/questions/45557350/how-can-i-trigger-a-type-error-in-haskell/45557381#45557381", "title": "How can I trigger a type error in Haskell?", "body": "<p>To my knowledge, the \"Haskell way\" of doing this would not be throwing an runtime error , but instead returning a <code>Maybe F</code></p>\n\n<p>Change the signature of <code>f</code> to be <code>f :: F a -&gt; F a -&gt; Maybe (F a)</code>,\nand add another type catch:</p>\n\n<pre><code>f (A x) B = Just $ A x\nf B (A _) = Just $ B\nf (A _) (A x) = Just $ A x\nf B B = Nothing\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p>The compiler has all the information</p>\n</blockquote>\n\n<p>No the compiler does not have all the information.</p>\n\n<p>How about, what if the user of your program decided what was input to the <code>f</code> function, and they chose two <code>B</code> data types? What would happen then? You can't throw a compile error after a program has been compiled.</p>\n"}, {"comments": [{"owner": {"reputation": 382, "user_id": 2726855, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/846041e713129fc0ad740c66553871fc?s=128&d=identicon&r=PG", "display_name": "goteguru", "link": "https://stackoverflow.com/users/2726855/goteguru"}, "edited": false, "score": 0, "creation_date": 1502153711, "post_id": 45557444, "comment_id": 78075237, "body": "Interesting. I need some time to grok what you did above. I do not want to do anything particular. I just wanted to know if it is possible to do or not. I know I could use Maybe. Both Dependent Types suggested by Rein Heinrich and your above solution are promising."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "reply_to_user": {"reputation": 382, "user_id": 2726855, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/846041e713129fc0ad740c66553871fc?s=128&d=identicon&r=PG", "display_name": "goteguru", "link": "https://stackoverflow.com/users/2726855/goteguru"}, "edited": false, "score": 0, "creation_date": 1502153871, "post_id": 45557444, "comment_id": 78075276, "body": "@goteguru Well, this technically is using dependent types (since there are types depending on values). Haskell doesn&#39;t have much support for this, as Rein Henrichs said, but it has a little bit. There is a plan to add more dependent type support to Haskell. You can let me know if you have any questions. This answer might be throwing a lot of things at once."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1502159563, "post_id": 45557444, "comment_id": 78076502, "body": "Your <code>ValidCombo</code> type family can be rejiggered to reduce (just about) whenever possible if you use <code>DataKinds</code>, <code>data T = AType | BType</code>. Indeed, it can be written as an <i>open</i> type family. It has to be written in a somewhat strange way to satisfy the rules, but it works: <code>type family ValidCombo (x :: T) (y :: T) :: Constraint; type instance ValidCombo &#39;BType t2 = t2 ~ &#39;AType; type instance ValidCombo t1 &#39;BType = t1 ~ &#39;AType; type instance ValidCombo &#39;AType _ = &#39;AType ~ &#39;AType; type instance ValidCombo _ &#39;AType = &#39;AType ~ &#39;AType</code>"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1502159928, "post_id": 45557444, "comment_id": 78076563, "body": "Whether this is written as an open or closed type family, it will reduce as soon as GHC identifies <i>either</i> argument. The closed kind is only important if you care about the type family reducing when passed something <i>other</i> than <code>AType</code> or <code>BType</code>, which I guess you don&#39;t...."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1502160655, "post_id": 45557444, "comment_id": 78076705, "body": "@dfeuer That is true. That is what I meant by &quot;You can go a little bit further with <code>ConstraintKinds</code> [...]&quot; (although I got the extension name wrong. I&#39;ll change that to <code>DataKinds</code> now), but I didn&#39;t want to throw too many extra concepts in this all at once so I just made a side note. It is good that you fill in some of the details though. Maybe I should add a section at the end. Also I wasn&#39;t aware it would work as an open type family, I assumed it had to be closed. That&#39;s interesting (especially the way you implement it)."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1502161650, "post_id": 45557444, "comment_id": 78076901, "body": "The whole special rule for compatibility of overlapping type family instances is very weird, but it works out nicely in this case. GHC sees, for example, that if <code>ValidCombo &#39;BType t2</code> matches and <code>ValidCombo t1 &#39;AType</code> matches, then <code>t2</code> is <code>AType</code>, and therefore <code>t2 ~ &#39;AType</code> unifies with <code>&#39;AType ~ &#39;AType</code>, so all is well. There was no flexibility in the peculiar way I expressed the trivial constraint."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1502171922, "post_id": 45557444, "comment_id": 78079993, "body": "To be very pedantic: there are no dependent types here (Haskell doesn&#39;t yet support dependent types); the first type argument to <code>F</code> is not a phantom type (if it were, a function <code>F x a -&gt; F y a</code> would exist); and this <code>F</code> is not the same <code>F</code> as the one in the OP (to recover the original <code>F</code>, you must write <code>exists i . F i x</code>)."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1502172924, "post_id": 45557444, "comment_id": 78080433, "body": "@user2407038 Haskell does have minor support for dependent types. The definition of a dependent type, I believe, is a type depending on a value. That is what is happening with these two constructors. Incidentally, this why a function <code>F x a -&gt; F y a</code> cannot be constructed (Also, I was not familiar with this requirement of a phantom type, several examples I&#39;ve seen contradict that). Also, it seems possible to me to recover the original <code>F</code> without anything fancy (calling the original <code>F&#39;</code> with constructors <code>A&#39;</code> and <code>B&#39;</code>): <code>recoverF&#39; :: F x a -&gt; F&#39; a; recoverF&#39; (A a) = A&#39; a; recoverF&#39; B = B&#39;</code>."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1502211189, "post_id": 45557444, "comment_id": 78107401, "body": "@DavidYoung You have confused actual dependent typing and faking dependent typing (which is why I said &quot;very pedantic&quot;). In the context of a GADT, a parameter is not phantom if it is used as an index (ADTs cannot have indices anyways). Phantom type parameters represent precisely no information at runtime (which is patently not the case for an index). When I say &quot;the same&quot;, I mean isomorphic; <code>recoverF&#39;</code> has no inverse (indeed, there is no sensible type one could even assign to a function which is a candidate to be an inverse for <code>recoverF&#39;</code> - you would have to create the index by some magic..)"}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1502251519, "post_id": 45557444, "comment_id": 78122209, "body": "@user2407038 I&#39;ve never claimed Haskell has &quot;actual&quot; dependent typing. I claimed it has a limited subset (the difference between that and &quot;faking&quot; is just naming, I&#39;d say). It looks like I was mistaken about phantom types. I forgot that the defining connection was to runtime information. As far as the <code>recoverF&#39;</code> inverse goes: that is true. <a href=\"https://gist.github.com/roboguy13/22f4912431221a1e8375fd62410b6140\" rel=\"nofollow noreferrer\">You can get around that to some extent, though</a>. There is also the <a href=\"http://hackage.haskell.org/package/dependent-sum\" rel=\"nofollow noreferrer\"><code>dependent-sum</code></a> package that is somewhat along these lines."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1502259933, "post_id": 45557444, "comment_id": 78125104, "body": "@user2407038 (I do hope we do get real sigma types in Haskell soon, though. <a href=\"https://github.com/roboguy13/natural-constructions\" rel=\"nofollow noreferrer\">I was sort of trying &quot;fake it&quot; a couple years ago</a>. I know they&#39;re working on real dependent types, but I haven&#39;t looked through the details yet.)"}], "tags": [], "owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "is_accepted": true, "score": 10, "last_activity_date": 1502251564, "last_edit_date": 1502251564, "creation_date": 1502151607, "answer_id": 45557444, "question_id": 45557350, "link": "https://stackoverflow.com/questions/45557350/how-can-i-trigger-a-type-error-in-haskell/45557444#45557444", "title": "How can I trigger a type error in Haskell?", "body": "<p>This is possible with some type tricks, but whether or not its worth it depends on what you're doing (incidentally, you should provide some more context so we can help determine how much type machinery seems like it is worth using).</p>\n\n<pre><code>{-# LANGUAGE GADTs           #-}\n{-# LANGUAGE TypeFamilies    #-}\n{-# LANGUAGE DataKinds       #-}\n{-# LANGUAGE ConstraintKinds #-}\n\nimport Data.Constraint\n\ndata AType\ndata BType\n\ndata F x y where\n  A :: a -&gt; F AType a\n  B ::      F BType a\n\ntype family ValidCombo x y :: Constraint where\n  ValidCombo BType ty2 = ty2 ~ AType\n  ValidCombo ty1   ty2 = ()\n\nf :: ValidCombo ty1 ty2 =&gt; F ty1 a -&gt; F ty2 a -&gt; F ty1 a\nf (A x) B     = A x\nf B     (A _) = B\nf (A _) (A x) = A x\n</code></pre>\n\n<p>At compile time, it is both impossible to make a definition <code>f B B = ...</code> and it is impossible to try to call it like <code>f B B</code>. Your example <code>let z = f (f B (A 1)) B</code> will not type check (although more complex examples can run into issues).</p>\n\n<p>The first thing that was done is I've added an extra argument to the <code>F</code> type constructor. This is a type index (there are no values of that type in anywhere, it is just a type level marker). I've created two different empty types (<code>AType</code> and <code>BType</code>) to use as phantom type arguments to <code>F</code>.</p>\n\n<p>The type family <code>ValidCombo</code> acts as a function at the type level (notice that the definition is very similar to how a typical Haskell value-level function is defined, but with types instead of values). <code>()</code> is an empty constraint that never causes a type error (because an empty constraint is always, trivially, satisfied). At a type level, <code>a ~ b</code> constrains <code>a</code> and <code>b</code> to be the same type (<code>~</code> is type-level equality) and will give an error if they are not the same type. It is roughly analogous to value-level code that looks like this (using your original <code>F</code> type), but at a type-level:</p>\n\n<pre><code>data Tag = ATag | BTag\n  deriving Eq\n\ngetTag :: F a -&gt; Tag\ngetTag (A _) = ATag\ngetTag B     = BTag\n\nvalidCombo :: F a -&gt; F a -&gt; Bool\nvalidCombo B tag2 = (getTag tag2) == ATag\nvalidCombo _ _    = True\n</code></pre>\n\n<p>(this could be reduced, but I've left the \"tag checking\" and explicit equality in for a more clear comparison.)</p>\n\n<p>You can go a little bit further with <code>DataKinds</code> to require the first type argument of <code>F</code> to either be <code>AType</code> or <code>BType</code>, but I don't want to add too much extra stuff (this is discussed a bit in the comments).</p>\n\n<p>All that said, in many cases, the <code>Maybe</code> solution that @DirkyJerky has provided is the way to go (due to the added complexity of the type-level manipulations).</p>\n\n<p>Sometimes this type-level technique is not even fully possible in Haskell at the moment (it potentially works on the example you've provided, but it depends on how it is going to be used), but you will need to provide more information for us to determine that.</p>\n"}, {"comments": [{"owner": {"reputation": 382, "user_id": 2726855, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/846041e713129fc0ad740c66553871fc?s=128&d=identicon&r=PG", "display_name": "goteguru", "link": "https://stackoverflow.com/users/2726855/goteguru"}, "edited": false, "score": 0, "creation_date": 1502305722, "post_id": 45579498, "comment_id": 78157138, "body": "Hah clever! :)  But it&#39;s targeting my particular example isn&#39;t it? Now if I change the declaration to <code>f (A _) (A a) = B</code> I had to introduce another  type operator <code>^|</code> and implement some sort of type level XOR (in order to define result type of <code>f</code>). Am I right?  BTW Is it possible to derive instances despite using TypeOperators? deriving(Show) throws an error now :-("}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "reply_to_user": {"reputation": 382, "user_id": 2726855, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/846041e713129fc0ad740c66553871fc?s=128&d=identicon&r=PG", "display_name": "goteguru", "link": "https://stackoverflow.com/users/2726855/goteguru"}, "edited": false, "score": 0, "creation_date": 1502318906, "post_id": 45579498, "comment_id": 78163009, "body": "@goteguru: Yeah, you\u2019d need to change it to enforce different things, but the type-level logic is reusable. You don\u2019t need to use <code>TypeOperators</code>\u2014you could name them <code>Or</code>, <code>Xor</code>, <code>And</code>, <code>Implies</code>, etc. The error you see is probably because of <code>GADTs</code>, not <code>TypeOperators</code>\u2014it should say \u201cPossible fix: use a standalone deriving declaration instead\u201d, which you can do by enabling <code>{-# LANGUAGE StandaloneDeriving #-}</code> and writing <code>deriving instance (Show a) =&gt; Show (F x a)</code>. Basically GHC just needs more information from you (the <code>Show a</code> constraint) to be able to derive an instance for a GADT."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1502322922, "post_id": 45579498, "comment_id": 78164075, "body": "FYI: the best version of <code>||</code> I was able to come up with (from the perspective of getting it to reduce whenever possible) was this: <code>type family a || b where &#39;True || _ = &#39;True; _ || &#39;True = &#39;True; &#39;False || y = y; x || &#39;False = x; x || x = x</code>. I have the feeling this might be the best possible, but I don&#39;t know how one would prove such a thing."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1502337225, "post_id": 45579498, "comment_id": 78167487, "body": "And it turns out that&#39;s the very definition used in <code>Data.Type.Bool</code>!"}, {"owner": {"reputation": 382, "user_id": 2726855, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/846041e713129fc0ad740c66553871fc?s=128&d=identicon&r=PG", "display_name": "goteguru", "link": "https://stackoverflow.com/users/2726855/goteguru"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1502454178, "post_id": 45579498, "comment_id": 78229266, "body": "@dfeuer is it possible to use wildcards ( <code>_</code> ) at type level? If I remember well, it threw error for me."}, {"owner": {"reputation": 382, "user_id": 2726855, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/846041e713129fc0ad740c66553871fc?s=128&d=identicon&r=PG", "display_name": "goteguru", "link": "https://stackoverflow.com/users/2726855/goteguru"}, "edited": false, "score": 0, "creation_date": 1502454705, "post_id": 45579498, "comment_id": 78229621, "body": "yes the error was because of GADTs. There were several new concepts for me, I was not able to identify the exact source of the problem. Thx @JonPurdy"}], "tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": false, "score": 2, "last_activity_date": 1502235556, "last_edit_date": 1502235556, "creation_date": 1502235210, "answer_id": 45579498, "question_id": 45557350, "link": "https://stackoverflow.com/questions/45557350/how-can-i-trigger-a-type-error-in-haskell/45579498#45579498", "title": "How can I trigger a type error in Haskell?", "body": "<p>Here\u2019s another solution with type families, which you may find simpler since it just relies on Boolean logic.</p>\n\n<pre><code>{-# LANGUAGE DataKinds, GADTs, TypeFamilies, TypeOperators #-}\n\ndata F x a where\n  A :: a -&gt; F 'True a\n  B :: F 'False a\n\nf\n  :: ((x || y) ~ 'True)\n  =&gt; F x a\n  -&gt; F y a\n  -&gt; F (x || Not y) a\n\nf (A a) B = A a\nf B (A _) = B\nf (A _) (A a) = A a\n\n----\n\ntype family Not a where\n  Not 'True = 'False\n  Not 'False = 'True\n\ntype family a || b where\n  'True || 'True = 'True  -- *\n  'True || b = 'True\n  a || 'True = 'True\n  a || b = 'False\n</code></pre>\n\n<p>* This case isn\u2019t necessary, but I included it for completeness.</p>\n\n<p>Now it\u2019s a type error to:</p>\n\n<ul>\n<li>Return <code>B</code> where <code>A</code> is expected, or vice versa</li>\n<li>Include the case for <code>f B B</code> (\u201cinaccessible code\u201d)</li>\n<li>Call <code>f B B</code>, even indirectly with something like <code>f (f B (A 1)) B</code></li>\n</ul>\n"}], "owner": {"reputation": 382, "user_id": 2726855, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/846041e713129fc0ad740c66553871fc?s=128&d=identicon&r=PG", "display_name": "goteguru", "link": "https://stackoverflow.com/users/2726855/goteguru"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 533, "favorite_count": 0, "accepted_answer_id": 45557444, "answer_count": 3, "score": 4, "last_activity_date": 1502314248, "creation_date": 1502150695, "last_edit_date": 1502314248, "question_id": 45557350, "link": "https://stackoverflow.com/questions/45557350/how-can-i-trigger-a-type-error-in-haskell", "title": "How can I trigger a type error in Haskell?", "body": "<p>Let's suppose I have a type</p>\n\n<pre><code>data F a = A a | B\n</code></pre>\n\n<p>I implement the function <code>f :: F a -&gt; F a -&gt; F a</code> like this:</p>\n\n<pre><code>f (A x) B = A x\nf B (A _) = B\nf (A _) (A x) = A x\n</code></pre>\n\n<p>However no such thing as <code>f B B</code> it's logically impossible, so I want:</p>\n\n<pre><code>f B B = GENERATE_HASKELL_COMPILE_ERROR\n</code></pre>\n\n<p>which is not working of course. Omitting definition or using <code>f B B = undefined</code> is not a solution, because it generates runtime exception. I'd like to get a compile time type error. </p>\n\n<p>The compiler has all the information, it should be able to deduce I made a logic error. If say I declare <code>let z = f (f B (A 1)) B</code> that should be an immediate compile time error and not some runtime exception which can hide in my code for years. </p>\n\n<p>I have found some info about contracts but I do not know how to use them here, and I'm curious if there is any standard way to do this in Haskell.</p>\n\n<hr>\n\n<p>EDIT: it's turned out, what I was trying to do is called dependent type which is not fully supported in Haskell (yet). Nevertheless it's possible to generate type error using index types and several extensions. David Young's solution seems to be more straightforward approach while Jon Purdy is using type operators creatively. I accept the first but I like both.</p>\n"}, {"tags": ["haskell", "version-numbering"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1502137046, "post_id": 45555012, "comment_id": 78070103, "body": "But <code>VersionNumber</code> is a <i>type alias</i>..."}, {"owner": {"reputation": 5242, "user_id": 50962, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e39b7acdae85aedee02487bed17ff5f6?s=128&d=identicon&r=PG", "display_name": "altern", "link": "https://stackoverflow.com/users/50962/altern"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1502137638, "post_id": 45555012, "comment_id": 78070366, "body": "If I do <code>data VersionNumber = [VersionCompound]     deriving (Show, Eq)</code>, it causes another error: <code>Cannot parse data constructor in a data&#47;newtype declaration: [VersionCompound]</code>"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1502137675, "post_id": 45555012, "comment_id": 78070384, "body": "you should use <code>data VersionNumber = VersionNumber [VersionCompound]</code> with a constructor."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1502137776, "post_id": 45555012, "comment_id": 78070423, "body": "@altern For basic syntax errors, see the syntax section of the <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch10.html#x17-18000010.5\" rel=\"nofollow noreferrer\">Haskell report</a>."}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1502139810, "post_id": 45555264, "comment_id": 78071327, "body": "Perhaps <code>(=*=) = (==) `on` catMaybes</code>."}, {"owner": {"reputation": 5242, "user_id": 50962, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e39b7acdae85aedee02487bed17ff5f6?s=128&d=identicon&r=PG", "display_name": "altern", "link": "https://stackoverflow.com/users/50962/altern"}, "edited": false, "score": 0, "creation_date": 1502191286, "post_id": 45555264, "comment_id": 78092729, "body": "@Willem Van Onsem: I appreciate the last edit about the <code>catMaybes</code>, but this is not quite what I want to achieve. I want to disregard any arbitrary list of <code>x</code>s (or <code>Nothing</code>s) on the left hand side of the given version. So, for example, <code>x.x.x.x.x</code> will be equal to <code>x.x.x</code> and to <code>x</code>. Likewise, <code>x.x.x.1</code> would be equal to <code>x.x.1</code> and to <code>1</code>. If there&#39;s an <code>x</code> in the middle, it won&#39;t be thrown away. So, for this case, <code>x.x.1.x.0</code> would be equal to <code>x.1.x.0</code> and <code>1.x.0</code>.  What I am still struggling with after reading your answer is how to get <code>x.x.x =*= x</code> -&gt; <code>True</code> with pattern matching."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 5242, "user_id": 50962, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e39b7acdae85aedee02487bed17ff5f6?s=128&d=identicon&r=PG", "display_name": "altern", "link": "https://stackoverflow.com/users/50962/altern"}, "edited": false, "score": 0, "creation_date": 1502195210, "post_id": 45555264, "comment_id": 78095782, "body": "@altern: and is <code>x.1.x.x.0.x</code> equal to <code>x.1.x.0.x</code>? Currently I still have some trouble understanding the specs when two versions are equal."}, {"owner": {"reputation": 5242, "user_id": 50962, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e39b7acdae85aedee02487bed17ff5f6?s=128&d=identicon&r=PG", "display_name": "altern", "link": "https://stackoverflow.com/users/50962/altern"}, "edited": false, "score": 0, "creation_date": 1502195572, "post_id": 45555264, "comment_id": 78096092, "body": "<code>x.1.x.x.0.x</code> is equal to <code>1.x.x.0.x</code> and <code>x.1.x.0.x</code> is equal to <code>1.x.0.x</code>. You just remove <code>x</code>&#39;s on the left side."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 5242, "user_id": 50962, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e39b7acdae85aedee02487bed17ff5f6?s=128&d=identicon&r=PG", "display_name": "altern", "link": "https://stackoverflow.com/users/50962/altern"}, "edited": false, "score": 1, "creation_date": 1502198477, "post_id": 45555264, "comment_id": 78098250, "body": "@altern: I proposed an implementation that follows your specifications (I think)."}, {"owner": {"reputation": 5242, "user_id": 50962, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e39b7acdae85aedee02487bed17ff5f6?s=128&d=identicon&r=PG", "display_name": "altern", "link": "https://stackoverflow.com/users/50962/altern"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1502214946, "post_id": 45555264, "comment_id": 78109488, "body": "Let us <a href=\"http://chat.stackoverflow.com/rooms/151427/discussion-between-altern-and-willem-van-onsem\">continue this discussion in chat</a>."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 6, "last_activity_date": 1502196732, "last_edit_date": 1502196732, "creation_date": 1502137999, "answer_id": 45555264, "question_id": 45555012, "link": "https://stackoverflow.com/questions/45555012/eq-definition-for-alternative-version-numbering-approach/45555264#45555264", "title": "Eq definition for alternative version numbering approach", "body": "<p>You use <em>type aliases</em>. This means that you have not defined a separate type <code>VersionNumber</code> or <code>VersionCompound</code>; you simply have constructed an <em>alias</em>. Behind the curtains, Haskell sees <code>VersionNumber</code> as simply <code>[Maybe Int]</code>.</p>\n\n<p>Now if we look at Haskell's library, we see that:</p>\n\n<pre><code>instance Eq Int where\n    -- ...\n\ninstance Eq a =&gt; Eq (Maybe a) where\n    -- ...\n\ninstance Eq a =&gt; Eq [a] where\n    -- ...\n</code></pre>\n\n<p>So that means that <code>Eq Int</code> is defined, that <code>Eq (Maybe Int)</code> is defined as well, and thus that <code>Eq [Maybe Int]</code> is defined by the Haskell library as well. So you actually have already constructed an <code>Eq VersionNumber</code> without writing one. Now you try to write an additional one and, of course, the compiler gets confused with which one to pick.</p>\n\n<p>There are ways to resolve overlapping instances, but this will probably only generate more trouble.</p>\n\n<p>Thus, you better construct a <code>data</code> type with a single constructor. For example:</p>\n\n<pre><code>type VersionCompound = Maybe Int\n<b>data</b> VersionNumber = <b>VersionNumber</b> [VersionCompound]</code></pre>\n\n<p>Now, since there is only one constructor, you better use a <code>newtype</code>:</p>\n\n<pre><code>type VersionCompound = Maybe Int\n<b>newtype</b> VersionNumber = VersionNumber [VersionCompound]</code></pre>\n\n<p>and now we can define our special instance like:</p>\n\n<pre><code>instance Eq VersionNumber where\n    (<b>VersionNumber</b> a) == (<b>VersionNumber</b> b) = a <b>=*=</b> b\n        where [] =*= [] = True\n              (x:[]) =*= (y:[]) = x == y\n              (Nothing:xs) =*= ys = (xs =*= ys)\n              xs =*= (Nothing:ys) = (xs =*= ys)</code></pre>\n\n<p>So we thus unwrap the constructors and then use another locally defined function <code>=*=</code> that works like you defined it in your question.</p>\n\n<p>Mind however that you forgot a few patterns in your program, like for instance <code>Just x : xs</code> on both the left and the right side. So, you better fix these first. If I run your code through a compiler, I get the following warnings:</p>\n\n<pre><code>Pattern match(es) are non-exhaustive\nIn an equation for \u2018=*=\u2019:\n    Patterns not matched:\n        [] (Just _:_)\n        [Just _] []\n        [Just _] (Just _:_:_)\n        (Just _:_:_) []\n</code></pre>\n\n<p>How you want to handle these cases is of course up to you. @DanielWagner suggests to use:</p>\n\n<pre><code>import Data.Function(on)\nimport Data.Maybe(catMaybes)\n\ninstance Eq VersionNumber where\n    (VersionNumber a) == (VersionNumber b) = on (==) catMaybes a b\n</code></pre>\n\n<p>This will filter out the <code>Nothing</code> values of both <code>VersionNumber</code>s and then check whether the values in the <code>Just</code> generate the same list. So <code>3.x.2.x.x.1</code> will be equal to <code>3.2.1</code> and <code>x.x.x.x.x.3.2.1</code>.</p>\n\n<p><strong>EDIT</strong>: based on your specification in comment, you are probably looking for:</p>\n\n<pre><code>import Data.Function(on)\n\ninstance Eq VersionNumber where\n    (VersionNumber a) == (VersionNumber b) = on (==) (dropWhile (Nothing ==)) a b\n</code></pre>\n"}], "owner": {"reputation": 5242, "user_id": 50962, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e39b7acdae85aedee02487bed17ff5f6?s=128&d=identicon&r=PG", "display_name": "altern", "link": "https://stackoverflow.com/users/50962/altern"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "accepted_answer_id": 45555264, "answer_count": 1, "score": -2, "last_activity_date": 1502217839, "creation_date": 1502136905, "last_edit_date": 1502217839, "question_id": 45555012, "link": "https://stackoverflow.com/questions/45555012/eq-definition-for-alternative-version-numbering-approach", "title": "Eq definition for alternative version numbering approach", "body": "<p>I am trying to define Eq operator for <a href=\"https://www.dropbox.com/s/66ucaf2auolq38u/branches%20naming%20.jpg?dl=0\" rel=\"nofollow noreferrer\">alternative version numbering approach</a>.</p>\n\n<pre><code>type VersionCompound = Maybe Int -- x, 0, 1, 2, ...\n\ntype VersionNumber = [VersionCompound] -- x.x, x.0, x.1, x.2, ... , 1.0, 1.1, 1.2, ... 1.x.x, 2.x.x, 3.x.x, ...\n\ninstance Eq VersionNumber where\n        [] == [] = True\n        (x:[]) == (y:[]) = x == y\n        (Nothing:xs) == ys = (xs == ys)\n        xs == (Nothing:ys) = (xs == ys)\n</code></pre>\n\n<p>It is expected that it returns <code>True</code> for following cases: <code>x.x.x == x</code>, <code>1.x.x == x.1.x.x</code>, <code>x.1 == 1</code>, etc. But instead it returns an error: </p>\n\n<pre><code>VersionNumber.hs:58:34:\n    Overlapping instances for Eq [VersionCompound]\n      arising from a use of \u2018==\u2019\n    Matching instances:\n      instance Eq a =&gt; Eq [a] -- Defined in \u2018GHC.Classes\u2019\n      instance Eq VersionNumber -- Defined at VersionNumber.hs:55:10\n    In the expression: (xs == ys)\n    In an equation for \u2018==\u2019: (Nothing : xs) == ys = (xs == ys)\n    In the instance declaration for \u2018Eq VersionNumber\u2019\n</code></pre>\n\n<p>Any ideas how to fix it?</p>\n\n<p><strong>EDIT:</strong> My approach to this problem via pattern matching on lists turned out to be incomplete. I wanted to disregard any arbitrary list of <code>x</code>'s (or <code>Nothing</code>s) on the left hand side of the given version. So, for example, <code>x.x.x.x.x</code> would be equal to <code>x.x.x</code> and to <code>x</code>. Similarly, <code>x.x.x.1</code> would be equal to <code>x.x.1</code> and to <code>1</code>. If there's an <code>x</code> in the middle, it won't be thrown away. So, for this case, <code>x.x.1.x.0</code> would be equal to <code>x.1.x.0</code> and <code>1.x.0</code>. Yet another example: <code>x.1.x.x.0.x</code> is equal to <code>1.x.x.0.x</code> and <code>x.1.x.0.x</code> is equal to <code>1.x.0.x</code> (You just remove <code>x</code>'s on the left side).</p>\n\n<p>What I was struggling with after fixing an error <code>Overlapping instances for Eq [VersionCompound]</code> is how to get <code>x.x.x == x</code> -> <code>True</code> with pattern matching. But, as @WillemVanOnsem brilliantly noted, it should be achieved not via pattern matching, but with function composition. </p>\n\n<p><strong>PS.</strong> I personally encourage you to upvote the answer by @WillemVanOnsem because his solution is really elegant, required some effort to come up with and represents the essence of Haskell power. </p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1502132461, "post_id": 45553978, "comment_id": 78067797, "body": "<code>[1,Nothing]</code>? In Haskell a list contains only one type of elements."}, {"owner": {"reputation": 5242, "user_id": 50962, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e39b7acdae85aedee02487bed17ff5f6?s=128&d=identicon&r=PG", "display_name": "altern", "link": "https://stackoverflow.com/users/50962/altern"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1502132665, "post_id": 45553978, "comment_id": 78067912, "body": "I want to be able to have values of type <code>[Maybe Int]</code>. Do I have to explicitly specify it?"}, {"owner": {"reputation": 4185, "user_id": 1424121, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/c6f5c5cd761b9ce4493fd875cc041ac3?s=128&d=identicon&r=PG", "display_name": "ryachza", "link": "https://stackoverflow.com/users/1424121/ryachza"}, "edited": false, "score": 0, "creation_date": 1502132724, "post_id": 45553978, "comment_id": 78067937, "body": "You need to wrap <code>1</code> in the <code>Just</code> constructor (<code>Just 1</code>). <code>Nothing</code> isn&#39;t the same as like <code>null</code> in other languages it&#39;s just an empty constructor for <code>Maybe</code>."}, {"owner": {"reputation": 5242, "user_id": 50962, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e39b7acdae85aedee02487bed17ff5f6?s=128&d=identicon&r=PG", "display_name": "altern", "link": "https://stackoverflow.com/users/50962/altern"}, "reply_to_user": {"reputation": 4185, "user_id": 1424121, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/c6f5c5cd761b9ce4493fd875cc041ac3?s=128&d=identicon&r=PG", "display_name": "ryachza", "link": "https://stackoverflow.com/users/1424121/ryachza"}, "edited": false, "score": 0, "creation_date": 1502132781, "post_id": 45553978, "comment_id": 78067963, "body": "@ryachza: of course! this is so obvious to me now :)"}], "answers": [{"tags": [], "owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "is_accepted": false, "score": 7, "last_activity_date": 1502132771, "creation_date": 1502132771, "answer_id": 45554075, "question_id": 45553978, "link": "https://stackoverflow.com/questions/45553978/no-instance-for-num-maybe-a0-arising-from-a-use-of-it/45554075#45554075", "title": "No instance for (Num (Maybe a0)) arising from a use of \u2018it\u2019", "body": "<p>In Haskell, lists (that is, things of type <code>[a]</code> for some <code>a</code>) can only contain values of a single type (<code>a</code>).</p>\n\n<p>Haskell also has polymorphic numeric literals, so the error would be slightly clearer if we restricted the type of <code>1</code>:</p>\n\n<pre><code>\u03bb Nothing : [1 :: Int, Nothing]\n\n&lt;interactive&gt;:1:12: error:\n    \u2022 Couldn't match expected type \u2018Maybe a\u2019 with actual type \u2018Int\u2019\n    \u2022 In the expression: 1 :: Int\n      In the second argument of \u2018(:)\u2019, namely \u2018[1 :: Int, Nothing]\u2019\n      In the expression: Nothing : [1 :: Int, Nothing]\n    \u2022 Relevant bindings include\n        it :: [Maybe a] (bound at &lt;interactive&gt;:1:1)\n</code></pre>\n\n<p><code>Nothing</code> is of type <code>Maybe a</code>, <code>1 :: Int</code> is of type <code>Int</code>. The type checker can't find a way\nto make <code>Maybe a</code> and <code>Int</code> the same type, so it reports an error.</p>\n\n<p>If you want to have a list of some values and some <code>Nothing</code>s, you need to use <code>Maybe a</code>'s <code>Just</code> constructor:</p>\n\n<pre><code>Just :: a -&gt; Maybe a\n</code></pre>\n\n<p>So you'd do this:</p>\n\n<pre><code>\u03bb Nothing : [ Just 1, Nothing ]\n[Nothing,Just 1,Nothing]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 7, "last_activity_date": 1502132828, "creation_date": 1502132828, "answer_id": 45554088, "question_id": 45553978, "link": "https://stackoverflow.com/questions/45553978/no-instance-for-num-maybe-a0-arising-from-a-use-of-it/45554088#45554088", "title": "No instance for (Num (Maybe a0)) arising from a use of \u2018it\u2019", "body": "<p><strong>Short answer</strong>: you probably want to write <code>[Just 1,Nothing]</code>.</p>\n\n<p><strong>Explanation</strong>:</p>\n\n<p>In Haskell, a <strong>list can contain only one type of elements</strong>. So you can not mix for instance <code>Int</code>s and <code>String</code>s in the same list.</p>\n\n<p>If you write:</p>\n\n<pre><code>[1, Nothing]\n</code></pre>\n\n<p>Haskell will aim to derive the type. Since you have written a <code>Nothing</code>, Haskell derives that the list contains elements of type <code>Maybe a</code> (it does not know which <code>a</code>). Now it wants to convert <code>1</code> to a <code>Maybe a</code>. Numeric literals can be converted to any class <code>n</code> with typeclass <code>Num n</code>. But there is no <code>a</code> for which <code>Maybe a</code> is <code>Num (Maybe a)</code>, so Haskell will error on this.</p>\n\n<p>You can however use <code>Just 1</code> since Haskell will then derive that the <code>a</code> of <code>Maybe a</code> has typeclass <code>Num a</code>:</p>\n\n<pre><code>Prelude&gt; :t [Just 1,Nothing]\n[Just 1,Nothing] :: Num a =&gt; [Maybe a]\n</code></pre>\n"}], "owner": {"reputation": 5242, "user_id": 50962, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e39b7acdae85aedee02487bed17ff5f6?s=128&d=identicon&r=PG", "display_name": "altern", "link": "https://stackoverflow.com/users/50962/altern"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 917, "favorite_count": 0, "accepted_answer_id": 45554088, "answer_count": 2, "score": 1, "last_activity_date": 1502132828, "creation_date": 1502132422, "last_edit_date": 1502132735, "question_id": 45553978, "link": "https://stackoverflow.com/questions/45553978/no-instance-for-num-maybe-a0-arising-from-a-use-of-it", "title": "No instance for (Num (Maybe a0)) arising from a use of \u2018it\u2019", "body": "<p>I am trying to do a simplest thing in <code>ghci</code> console. I want to be able to have values of type <code>[Maybe Int]</code>. But either <code>Nothing : [1, Nothing]</code> or <code>[1, Nothing] ++ [Nothing]</code> gives an error that I find difficult to understand:</p>\n\n<pre><code>No instance for (Num (Maybe a0)) arising from a use of \u2018it\u2019\n    In the first argument of \u2018print\u2019, namely \u2018it\u2019\n    In a stmt of an interactive GHCi command: print it\n</code></pre>\n\n<p>Could please someone explain this error and suggest how to fix it?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1502129772, "post_id": 45553275, "comment_id": 78066410, "body": "<code>Maybe</code> <code>Maybe</code> is not a constructor of <code>Maybe a</code>"}, {"owner": {"reputation": 15, "user_id": 4842970, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Caakn.jpg?s=128&g=1", "display_name": "tarak ammar", "link": "https://stackoverflow.com/users/4842970/tarak-ammar"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1502130270, "post_id": 45553275, "comment_id": 78066679, "body": "i meant that the function take two parameters of type MAybe and return a maybe value. any corrections?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1502130321, "post_id": 45553275, "comment_id": 78066704, "body": "yes, but in the body of the function, you can not use <code>(Maybe 0)</code>, etc. Then you have to pick a constructor, like <code>Just 0</code>, not <code>Maybe 0</code>."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1502132314, "post_id": 45553275, "comment_id": 78067721, "body": "As a style thing: I recommend leaving the arguments as bare <code>Int</code>s rather than <code>Maybe Int</code>s, as in <code>division :: Int -&gt; Int -&gt; Maybe Int; division _ 0 = Nothing; division a b = a `div` b</code>. If you need the arguments to be <code>Maybe</code>s, then you can use <code>do</code> notation; if <code>ma :: Maybe Int</code> and <code>mb :: Maybe Int</code>, then <code>do a &lt;- ma; b &lt;- mb; division a b</code> is well-typed."}, {"owner": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1502187321, "post_id": 45553275, "comment_id": 78089890, "body": "@DanielWagner You&#39;re missing a <code>Just</code> in <code>division a b = a `div` b</code>."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "edited": false, "score": 0, "creation_date": 1502198574, "post_id": 45553275, "comment_id": 78098324, "body": "@gallais Thanks, you&#39;re absolutely right!"}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 2, "last_activity_date": 1502131339, "last_edit_date": 1502131339, "creation_date": 1502130259, "answer_id": 45553421, "question_id": 45553275, "link": "https://stackoverflow.com/questions/45553275/haskell-what-is-wrong-with-this-piece-of-code/45553421#45553421", "title": "haskell : what is wrong with this piece of code", "body": "<p><code>Maybe a</code> is defined as:</p>\n\n<pre><code>data Maybe a = Just a | Nothing\n</code></pre>\n\n<p>so you <strong>can not put <code>Maybe a</code></strong> in the function defintion, only in the signature:</p>\n\n<pre><code>division :: Maybe Int -&gt; Maybe Int -&gt; Maybe Int\ndivision _ (<b>Just</b> 0) = Nothing\ndivision (<b>Just</b> a) (<b>Just</b> b) = Just (a `div` b)</code></pre>\n\n<p>Furthermore the function is <strong>not total</strong>: not every possible case of input is handled by the function, so this could result in an exception. So you better return something in those cases (usually one returns <code>Nothing</code>):</p>\n\n<pre><code>division :: Maybe Int -&gt; Maybe Int -&gt; Maybe Int\ndivision _ (Just 0) = Nothing\ndivision (Just a) (Just b) = Just (a `div` b)\n<b>division _ _ = Nothing</b></code></pre>\n\n<p>Finally we can use <code>Integral i</code> as type, instead of <code>Int</code> and make the function more generic:</p>\n\n<pre><code>division :: <b>Integral i =&gt;</b> Maybe <b>i</b> -&gt; Maybe <b>i</b> -&gt; Maybe <b>i</b>\ndivision _ (Just 0) = Nothing\ndivision (Just a) (Just b) = Just (a `div` b)\ndivision _ _ = Nothing</code></pre>\n"}, {"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 1, "last_activity_date": 1502147445, "creation_date": 1502147445, "answer_id": 45556959, "question_id": 45553275, "link": "https://stackoverflow.com/questions/45553275/haskell-what-is-wrong-with-this-piece-of-code/45556959#45556959", "title": "haskell : what is wrong with this piece of code", "body": "<p>Based on Daniel Wagner's comment and Willem Van Onsem's point about <code>Integral</code>, this is how I would write the function:</p>\n\n<pre><code>division :: Integral a =&gt; a -&gt; a -&gt; Maybe a\ndivision _ 0 = Nothing\ndivision p q = Just (div p q)\n</code></pre>\n\n<p>To use it with <code>Maybe</code> arguments, you can simply write</p>\n\n<pre><code>division &lt;$&gt; m &lt;*&gt; n\n</code></pre>\n\n<p>or, equivalently,</p>\n\n<pre><code>liftA2 division m n\n</code></pre>\n\n<p>where <code>liftA2</code> is in <code>Control.Applicative</code>.</p>\n"}], "owner": {"reputation": 15, "user_id": 4842970, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Caakn.jpg?s=128&g=1", "display_name": "tarak ammar", "link": "https://stackoverflow.com/users/4842970/tarak-ammar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "accepted_answer_id": 45553421, "answer_count": 2, "score": 1, "last_activity_date": 1502147445, "creation_date": 1502129698, "last_edit_date": 1502135694, "question_id": 45553275, "link": "https://stackoverflow.com/questions/45553275/haskell-what-is-wrong-with-this-piece-of-code", "title": "haskell : what is wrong with this piece of code", "body": "<p>I'm trying to compile this piece of code but it doesn't work and I don't get it:</p>\n\n<pre><code>division :: Maybe Int -&gt; Maybe Int -&gt; Maybe Int\ndivision _ (Maybe 0) = Nothing\ndivision (Maybe a) (Maybe b) = Just (a `div` b)\n</code></pre>\n"}, {"tags": ["haskell", "purescript"], "comments": [{"owner": {"reputation": 1392, "user_id": 5198575, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-RAYCSjVZdnQ/AAAAAAAAAAI/AAAAAAAAClo/VQ8V_H3l8O8/photo.jpg?sz=128", "display_name": "trevor cook", "link": "https://stackoverflow.com/users/5198575/trevor-cook"}, "edited": false, "score": 0, "creation_date": 1502129275, "post_id": 45552591, "comment_id": 78066124, "body": "Is giving <code>Uid a</code> a concrete type, i.e. <code>mkSumType (Proxy :: (Uid ())</code> possible/helpful?"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1502130573, "post_id": 45552591, "comment_id": 78066829, "body": "It&#39;s hard to say how it should be fixed because it&#39;s unclear what you&#39;re trying to accomplish. Polymorphic types do not have <code>Typeable</code> instances, and the <code>SumType</code> datatype does not support polytypes (so you cannot even bypass the Typeable requirement of <code>mkSumType</code>)."}, {"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1502130843, "post_id": 45552591, "comment_id": 78066966, "body": "<code>Proxy</code> itself is a polykinded type, so you can do <code>Proxy Uid</code> instead of <code>Proxy (Uid a)</code>. However, functions cannot be polykinded, which means that the <code>mkSumType</code> function is &quot;frozen&quot; to accept only <code>Proxy * a</code> and cannot accept <code>Proxy (* -&gt; *) a</code>."}], "answers": [{"tags": [], "owner": {"reputation": 674, "user_id": 7478655, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/UL7XU.jpg?s=128&g=1", "display_name": "vrom911", "link": "https://stackoverflow.com/users/7478655/vrom911"}, "is_accepted": true, "score": 4, "last_activity_date": 1502188569, "creation_date": 1502188569, "answer_id": 45566041, "question_id": 45552591, "link": "https://stackoverflow.com/questions/45552591/polymorphic-types-with-purescript-bridge/45566041#45566041", "title": "Polymorphic types with purescript-bridge", "body": "<p><a href=\"https://hackage.haskell.org/package/purescript-bridge-0.11.0.0/docs/Language-PureScript-Bridge-TypeParameters.html\" rel=\"nofollow noreferrer\">TypeParameters</a> module can be used for this purpose. Simply adding</p>\n\n<pre><code>import Language.PureScript.Bridge.TypeParameters (A)\n\nclientTypes :: [SumType  'Haskell]\nclientTypes =\n  [ ...\n  , mkSumType (Proxy :: Proxy (Uid A))\n  ]\n</code></pre>\n\n<p>will make the job done.</p>\n"}], "owner": {"reputation": 674, "user_id": 7478655, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/UL7XU.jpg?s=128&g=1", "display_name": "vrom911", "link": "https://stackoverflow.com/users/7478655/vrom911"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 214, "favorite_count": 0, "accepted_answer_id": 45566041, "answer_count": 1, "score": 4, "last_activity_date": 1502188569, "creation_date": 1502127133, "last_edit_date": 1502127212, "question_id": 45552591, "link": "https://stackoverflow.com/questions/45552591/polymorphic-types-with-purescript-bridge", "title": "Polymorphic types with purescript-bridge", "body": "<p>I have type in Haskell</p>\n\n<pre><code>newtype Uid a = Uid {uidToText :: Text}\n  deriving (Eq, Ord, Show, Data, Typeable, Generic)\n</code></pre>\n\n<p>Using <code>purescript-bridge</code> library <code>mkSumType</code> function I can't make <code>SumType</code> of it. Now I have</p>\n\n<pre><code>clientTypes :: [SumType  'Haskell]\nclientTypes =\n  [ ...\n  , mkSumType (Proxy :: Proxy (Uid a))\n  ]\nmain :: IO ()\nmain = writePSTypes path (buildBridge bridge) clientTypes\n</code></pre>\n\n<p>and it says</p>\n\n<pre><code>\u2022 No instance for (Data.Typeable.Internal.Typeable a0)\n    arising from a use of \u2018mkSumType\u2019\n\u2022 In the expression: mkSumType (Proxy :: Proxy (Uid a))\n</code></pre>\n\n<p>How can I fix it?</p>\n"}, {"tags": ["haskell", "testing", "haskell-stack"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1502118737, "post_id": 45550197, "comment_id": 78060045, "body": "Please add a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>."}, {"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 0, "creation_date": 1502118782, "post_id": 45550197, "comment_id": 78060068, "body": "Try <code>stack test -v</code> and paste the output here."}, {"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "reply_to_user": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 0, "creation_date": 1502119149, "post_id": 45550197, "comment_id": 78060333, "body": "@Sibi  I have added the output"}, {"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1502120027, "post_id": 45550197, "comment_id": 78060947, "body": "matthias: As @leftaroundabout said, it would be useful it you would create a minimal reproducible example also."}, {"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "reply_to_user": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 0, "creation_date": 1502121026, "post_id": 45550197, "comment_id": 78061568, "body": "@Sibi i actually figured out the problem and it was a simple path problem in my test file :(. It makes this post rather trivial and silly. Should I just delete it now as it does not really have any benefit to anyone?"}, {"owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "edited": false, "score": 1, "creation_date": 1502122724, "post_id": 45550197, "comment_id": 78062635, "body": "Post the answer - it is always helpful. Even if unrelated."}], "owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 121, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1502193606, "creation_date": 1502118490, "last_edit_date": 1502193606, "question_id": 45550197, "link": "https://stackoverflow.com/questions/45550197/stack-test-not-returning-any-results", "title": "`stack test` not returning any results", "body": "<p>I have a stack project set up but when I run <code>stack test</code> I do not get any output or errors. However if I run the test file directly <code>runhaskell Tests.hs</code>, I get my desired results. </p>\n\n<pre><code>c:\\storeCredit&gt;stack test\nstoreCredit-0.1.0.0: test (suite: storeCredit-test)\n\n\nc:\\storeCredit&gt;\n</code></pre>\n\n<p>This is my .cabal file:</p>\n\n<pre><code>name:                storeCredit\nversion:             0.1.0.0\nbuild-type:          Simple\n\nlibrary\n  hs-source-dirs:      src\n  exposed-modules:     StoreCredit\n  build-depends:       base &gt;= 4.7 &amp;&amp; &lt; 5\n                     , split\n                     , containers\n\n  default-language:    Haskell2010\n\n\n\ntest-suite storeCredit-test\n  type:                exitcode-stdio-1.0\n  hs-source-dirs:      test\n  main-is:             Tests.hs\n  build-depends:       base\n\n                     , hspec\n                     , split\n                     , directory\n                     , filepath\n                     , containers\n                     , storeCredit\n\n  ghc-options:         -threaded -rtsopts -with-rtsopts=-N\n  default-language:    Haskell2010\n</code></pre>\n\n<p>out put from <code>stack test -v</code></p>\n\n<pre><code>c:\\storeCredit&gt;stack test -v\nVersion 1.3.2, Git revision 3f675146590da4f3edf768b89355f798229da2a5 x86_64 hpack-0.15.0\n2017-08-07 16:15:23.708484: [debug] Checking for project config at: C:\\storeCredit\\stack.yaml\n@(Stack\\Config.hs:863:9)\n2017-08-07 16:15:23.709485: [debug] Loading project config file stack.yaml\n@(Stack\\Config.hs:881:13)\n2017-08-07 16:15:23.728491: [debug] Trying to decode C:\\sr\\build-plan-cache\\x86_64-windows\\lts-9.0.cache\n@(Data\\Store\\VersionTagged.hs:68:5)\n2017-08-07 16:15:23.745500: [debug] Success decoding C:\\sr\\build-plan-cache\\x86_64-windows\\lts-9.0.cache\n@(Data\\Store\\VersionTagged.hs:72:13)\n2017-08-07 16:15:23.762504: [debug] Using standard GHC build\n@(Stack\\Setup.hs:597:9)\n2017-08-07 16:15:23.769506: [debug] Getting global package database location\n@(Stack\\GhcPkg.hs:55:5)\n2017-08-07 16:15:23.773514: [debug] Asking GHC for its version\n@(Stack\\Setup\\Installed.hs:103:13)\n2017-08-07 16:15:23.774515: [debug] Getting Cabal package version\n@(Stack\\GhcPkg.hs:189:5)\n2017-08-07 16:15:23.786519: [debug] Run process: C:\\Users\\Matthias\\AppData\\Local\\Programs\\stack\\x86_64-windows\\ghc-8.0.2\\bin\\ghc-pkg.EXE --no-user-package-db list --global\n@(System\\Process\\Read.hs:306:3)\n2017-08-07 16:15:23.788791: [debug] Run process: C:\\Users\\Matthias\\AppData\\Local\\Programs\\stack\\x86_64-windows\\ghc-8.0.2\\bin\\ghc.EXE --numeric-version\n@(System\\Process\\Read.hs:306:3)\n2017-08-07 16:15:23.800797: [debug] Run process: C:\\Users\\Matthias\\AppData\\Local\\Programs\\stack\\x86_64-windows\\ghc-8.0.2\\bin\\ghc-pkg.EXE --no-user-package-db field --simple-output Cabal version\n@(System\\Process\\Read.hs:306:3)\n2017-08-07 16:15:23.839811: [debug] Process finished in [92m48ms[0m: C:\\Users\\Matthias\\AppData\\Local\\Programs\\stack\\x86_64-windows\\ghc-8.0.2\\bin\\ghc.EXE --numeric-version\n@(System\\Process\\Read.hs:306:3)\n2017-08-07 16:15:23.888835: [debug] Process finished in [92m100ms[0m: C:\\Users\\Matthias\\AppData\\Local\\Programs\\stack\\x86_64-windows\\ghc-8.0.2\\bin\\ghc-pkg.EXE --no-user-package-db list --global\n@(System\\Process\\Read.hs:306:3)\n2017-08-07 16:15:23.919846: [debug] Process finished in [92m109ms[0m: C:\\Users\\Matthias\\AppData\\Local\\Programs\\stack\\x86_64-windows\\ghc-8.0.2\\bin\\ghc-pkg.EXE --no-user-package-db field --simple-output Cabal version\n@(System\\Process\\Read.hs:306:3)\n2017-08-07 16:15:23.921846: [debug] Resolving package entries\n@(Stack\\Setup.hs:252:5)\n2017-08-07 16:15:23.924848: [debug] Starting to execute command inside EnvConfig\n@(Stack\\Runners.hs:163:18)\n2017-08-07 16:15:23.925849: [debug] Parsing the cabal files of the local packages\n@(Stack\\Build\\Source.hs:298:5)\n2017-08-07 16:15:23.929851: [debug] Parsing the targets\n@(Stack\\Build\\Source.hs:235:5)\n2017-08-07 16:15:23.945857: [debug] Start: getPackageFiles C:\\storeCredit\\storeCredit.cabal\n@(Stack\\Package.hs:250:21)\n2017-08-07 16:15:23.954862: [debug] Finished in 7ms: getPackageFiles C:\\storeCredit\\storeCredit.cabal\n@(Stack\\Package.hs:250:21)\n2017-08-07 16:15:23.965864: [debug] Finding out which packages are already installed\n@(Stack\\Build\\Installed.hs:68:5)\n2017-08-07 16:15:23.969865: [debug] Run process: C:\\Users\\Matthias\\AppData\\Local\\Programs\\stack\\x86_64-windows\\ghc-8.0.2\\bin\\ghc-pkg.EXE --global --no-user-package-db dump --expand-pkgroot\n@(System\\Process\\Read.hs:306:3)\n2017-08-07 16:15:24.056905: [debug] Process finished in [92m86ms[0m: C:\\Users\\Matthias\\AppData\\Local\\Programs\\stack\\x86_64-windows\\ghc-8.0.2\\bin\\ghc-pkg.EXE --global --no-user-package-db dump --expand-pkgroot\n@(System\\Process\\Read.hs:306:3)\n2017-08-07 16:15:24.085421: [debug] Ignoring package xhtml due to wanting version 3000.2.2 instead of 3000.2.1\n@(Stack\\Build\\Installed.hs:191:5)\n2017-08-07 16:15:24.086923: [debug] Ignoring package haskeline due to wanting version 0.7.4.0 instead of 0.7.3.0\n@(Stack\\Build\\Installed.hs:191:5)\n2017-08-07 16:15:24.089927: [debug] Run process: C:\\Users\\Matthias\\AppData\\Local\\Programs\\stack\\x86_64-windows\\ghc-8.0.2\\bin\\ghc-pkg.EXE --user --no-user-package-db --package-db C:\\sr\\snapshots\\62cfb14b\\pkgdb dump --expand-pkgroot\n@(System\\Process\\Read.hs:306:3)\n2017-08-07 16:15:24.175466: [debug] Process finished in [92m84ms[0m: C:\\Users\\Matthias\\AppData\\Local\\Programs\\stack\\x86_64-windows\\ghc-8.0.2\\bin\\ghc-pkg.EXE --user --no-user-package-db --package-db C:\\sr\\snapshots\\62cfb14b\\pkgdb dump --expand-pkgroot\n@(System\\Process\\Read.hs:306:3)\n2017-08-07 16:15:24.187961: [debug] Run process: C:\\Users\\Matthias\\AppData\\Local\\Programs\\stack\\x86_64-windows\\ghc-8.0.2\\bin\\ghc-pkg.EXE --user --no-user-package-db --package-db C:\\storeCredit\\.stack-work\\install\\6c953ab2\\pkgdb dump --expand-pkgroot\n@(System\\Process\\Read.hs:306:3)\n2017-08-07 16:15:24.255986: [debug] Process finished in [92m65ms[0m: C:\\Users\\Matthias\\AppData\\Local\\Programs\\stack\\x86_64-windows\\ghc-8.0.2\\bin\\ghc-pkg.EXE --user --no-user-package-db --package-db C:\\storeCredit\\.stack-work\\install\\6c953ab2\\pkgdb dump --expand-pkgroot\n@(System\\Process\\Read.hs:306:3)\n2017-08-07 16:15:24.264989: [debug] Constructing the build plan\n@(Stack\\Build\\ConstructPlan.hs:159:5)\n2017-08-07 16:15:24.275500: [debug] Checking if we are going to build multiple executables with the same name\n@(Stack\\Build.hs:196:5)\n2017-08-07 16:15:24.287968: [debug] Executing the build plan\n@(Stack\\Build\\Execute.hs:454:5)\n2017-08-07 16:15:24.291968: [debug] Getting global package database location\n@(Stack\\GhcPkg.hs:55:5)\n2017-08-07 16:15:24.292968: [debug] Run process: C:\\Users\\Matthias\\AppData\\Local\\Programs\\stack\\x86_64-windows\\ghc-8.0.2\\bin\\ghc-pkg.EXE --no-user-package-db list --global\n@(System\\Process\\Read.hs:306:3)\n2017-08-07 16:15:24.363995: [debug] Process finished in [92m68ms[0m: C:\\Users\\Matthias\\AppData\\Local\\Programs\\stack\\x86_64-windows\\ghc-8.0.2\\bin\\ghc-pkg.EXE --no-user-package-db list --global\n@(System\\Process\\Read.hs:306:3)\n2017-08-07 16:15:24.377005: [info] storeCredit-0.1.0.0: test (suite: storeCredit-test)\n@(Stack\\Build\\Execute.hs:826:23)\n\n2017-08-07 16:15:24.380008: [debug] Creating process: C:\\storeCredit\\.stack-work\\dist\\ca59d0ab\\build\\storeCredit-test\\storeCredit-test.exe\n@(System\\Process\\Run.hs:139:5)\n2017-08-07 16:15:24.407025: [info]\n@(Stack\\Build\\Execute.hs:1449:52)\n</code></pre>\n\n<p><strong>SOLVED:</strong></p>\n\n<p>The problem was that in my Tests.hs file, I have a function which gets files in the directory and uses those as inputs and outputs for testing. It contains the line:</p>\n\n<p><code>dir &lt;- getDirectoryContents =&lt;&lt;  getCurrentDirectory</code></p>\n\n<p>This was obviously fine if run from with the same directory as the Test.hs file i.e. <code>\\test</code>. which is why <code>runhaskell Test.hs</code> works. However, <code>stack test</code> is run from the parent folder to <code>test</code> and I had to change the path being read.</p>\n\n<p>So changing to:</p>\n\n<p><code>dir &lt;- getDirectoryContents =&lt;&lt; ((++ \"\\\\test\") &lt;$&gt; getCurrentDirectory)</code> </p>\n\n<p>fixed the prblem</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1502171894, "post_id": 45549364, "comment_id": 78079978, "body": "What do you mean? I can not follow you."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 1, "creation_date": 1502182372, "post_id": 45549364, "comment_id": 78086296, "body": "I mean, when you consider an expression <code>\u03c6 x</code> you always need to unify the type of <code>x</code> with the type of <i>the first argument of</i> <code>\u03c6</code>, not with the <i>entire</i> type of <code>\u03c6</code> (which also includes the result etc.). In case of map you did correctly consider only the argument-type (namely, <code>a -&gt; b</code>), but in case of <code>id</code> the argument type is only <code>a</code>, not <code>a -&gt; a</code>, yet you tried to unify the type of <code>f</code> with the latter."}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1502186432, "post_id": 45549364, "comment_id": 78089264, "body": "What does symbol <code>\u03c6</code> mean?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1502187569, "post_id": 45549364, "comment_id": 78090078, "body": "Nothing particular, I could have also written <code>f x</code> instead of <code>\u03c6 x</code> but you already defined <code>f</code> yourself, so I chose another generic function name."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 7, "last_activity_date": 1502116078, "creation_date": 1502116078, "answer_id": 45549364, "question_id": 45549153, "link": "https://stackoverflow.com/questions/45549153/deriving-type-step-by-step/45549364#45549364", "title": "Deriving type step by step", "body": "<p>You actually wrote it yourself in the question:</p>\n\n<ul>\n<li><code>a -> b -- The signature of <b>the first argument of</b> map</code></li>\n<li><code>a -> a -- The signature <b>of</b> id</code></li>\n</ul>\n\n<p>To compare apples and apples, you need to start with</p>\n\n<ul>\n<li><code>a -> b -- The signature of the first argument of map</code></li>\n<li><code>a      -- The signature of the first argument of id</code></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 4, "last_activity_date": 1502119999, "last_edit_date": 1502119999, "creation_date": 1502116431, "answer_id": 45549476, "question_id": 45549153, "link": "https://stackoverflow.com/questions/45549153/deriving-type-step-by-step/45549476#45549476", "title": "Deriving type step by step", "body": "<p>Your second attempt does not work. In your question you say (boldface added):</p>\n\n<blockquote>\n  <p>First, let's apply <code>map f</code>:</p>\n\n<pre><code>a -&gt; b \"The signature of the <b>first argument</b> of map\n~    ~\nc -&gt; c -&gt; c -&gt; c \"The signature of the f function</code></pre>\n  \n  <p>you can see above, how I separates and get type equality, namely <code>a ~\n  c</code> and <code>b ~ c -&gt; c -&gt; c</code>.</p>\n  \n  <p>Then, lets apply <code>id f</code></p>\n\n<pre><code>a -&gt; a           \"The <b>signature</b> of the id\n~    ~\nc -&gt; c -&gt; c -&gt; c \"The signature of the f function</code></pre>\n</blockquote>\n\n<p>So for the first case <code>map f</code> you reason correctly, and use the type of the <strong>first argument</strong> of <code>map</code>. In the latter case however, you use the <strong><s>entire signature</s></strong>. You should again use the first argument.</p>\n\n<p>So let us correct that:</p>\n\n<blockquote>\n<pre><code>a                \"The <b>first argument</b> of the id\n~\nc -&gt; c -&gt; c -&gt; c \"The signature of the f function</code></pre>\n</blockquote>\n\n<p>So that means that <code>a ~ c -&gt; c -&gt; c -&gt; c</code>. And therefore, <code>id f</code> has signature <code>c -&gt; c -&gt; c -&gt; c</code>.</p>\n\n<p>Mind that in Haskell <strong>every function has only one argument</strong>. <code>c -&gt; c -&gt; c -&gt; c</code> is short for <code>c -&gt; (c -&gt; (c -&gt; c))</code>. So we have a function (with one argument) that returns a function <code>c -&gt; (c -&gt; c)</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1502171791, "post_id": 45549481, "comment_id": 78079930, "body": "The function of the first argument of map <code>(a -&gt; b)</code>, can I substitute it through <code>a -&gt; a -&gt; a -&gt; a</code> right?"}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "reply_to_user": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1502172622, "post_id": 45549481, "comment_id": 78080270, "body": "@zero_coding Think of <code>a -&gt; a -&gt; a -&gt; a</code> as <code>a -&gt; (a -&gt; a -&gt; a)</code>. Then <code>a</code> remains <code>a</code>, and <code>(a -&gt; a -&gt; a)</code> you can call <code>b</code>: <code>a -&gt; b</code>."}], "tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": true, "score": 2, "last_activity_date": 1502116442, "creation_date": 1502116442, "answer_id": 45549481, "question_id": 45549153, "link": "https://stackoverflow.com/questions/45549153/deriving-type-step-by-step/45549481#45549481", "title": "Deriving type step by step", "body": "<p>The type of <code>map</code> is <code>(a -&gt; b) -&gt; [a] -&gt; [b]</code>, so <code>map f</code> gets the type <code>Num a =&gt; [a] -&gt; [a -&gt; a -&gt; a]</code>. Why?</p>\n\n<p>The first argument of <code>map</code> is a function <code>a -&gt; b</code>, so you can, indeed substitute the first argument of <code>f</code> for <code>a</code>. Since <code>f</code> has the type <code>Num a =&gt; a -&gt; a -&gt; a -&gt; a</code>, when you 'use' its first argument, the return type is <strong>a function</strong> <code>Num a =&gt; a -&gt; a -&gt; a</code>. It's a partially applied function. A function isn't the same as a single value, but it still has a type, which you could call <code>b</code>.</p>\n\n<p>Likewise, <code>id</code> has the type <code>a -&gt; a</code>, meaning that it just returns the same value as the input. If the input is <code>f</code>, then the output is also <code>f</code>, and will have the same type.</p>\n"}, {"tags": [], "owner": {"reputation": 4685, "user_id": 5180989, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Gxpck.jpg?s=128&g=1", "display_name": "Helder Pereira", "link": "https://stackoverflow.com/users/5180989/helder-pereira"}, "is_accepted": false, "score": 4, "last_activity_date": 1502117816, "creation_date": 1502117816, "answer_id": 45549953, "question_id": 45549153, "link": "https://stackoverflow.com/questions/45549153/deriving-type-step-by-step/45549953#45549953", "title": "Deriving type step by step", "body": "<p>Your first example is absolutely correct, when you have <code>map f</code>, you should match the type of the first parameter of the <code>map</code> (<code>a -&gt; b</code>) with the type of <code>f</code> (<code>c -&gt; c -&gt; c -&gt; c</code>), and then your conclusion is right:</p>\n\n<pre><code>a ~ c\nb ~ c -&gt; c -&gt; c\n</code></pre>\n\n<p>To then find the type of <code>map f</code>, we should drop the first parameter of <code>map</code> as it is already bound to <code>f</code>, and proceed with the substitutions according to the conclusion above:</p>\n\n<pre><code>[a] -&gt; [b] ~ [c] -&gt; [c -&gt; c -&gt; c]\n</code></pre>\n\n<p>However, you are not correctly matching the types in your second example. If you have <code>id f</code>, you should again just match the type of the first parameter of <code>id</code> (<code>a</code>) with the type of <code>f</code> (<code>c -&gt; c -&gt; c -&gt; c</code>). From which we can just conclude:</p>\n\n<pre><code>a ~ c -&gt; c -&gt; c -&gt; c\n</code></pre>\n\n<p>Then dropping the first parameter of <code>id</code>, we are left just with <code>a</code>, and we can do the trivial substitution to get the type of <code>id f</code>:</p>\n\n<pre><code>a ~ c -&gt; c -&gt; c -&gt; c\n</code></pre>\n"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 135, "favorite_count": 0, "accepted_answer_id": 45549481, "answer_count": 4, "score": 5, "last_activity_date": 1502119999, "creation_date": 1502115541, "question_id": 45549153, "link": "https://stackoverflow.com/questions/45549153/deriving-type-step-by-step", "title": "Deriving type step by step", "body": "<p>I have a real problem with deriving type and do not understand at all, how to derive type.  </p>\n\n<p>I defined a function <code>f</code> with following implementation: </p>\n\n<pre><code>f x y z = x * y * z\n</code></pre>\n\n<p>the type signature of function <code>f</code> is:</p>\n\n<pre><code>f :: Num c =&gt; c -&gt; c -&gt; c -&gt; c\n</code></pre>\n\n<p>pretty simple, right?  </p>\n\n<p>Now, apply <code>f</code> to <code>map</code> and <code>id</code> function and looking at type signature.  </p>\n\n<p>First, let's apply <code>map f</code>: </p>\n\n<pre><code>a -&gt; b \"The signature of the first argument of map\n~    ~\nc -&gt; c -&gt; c -&gt; c \"The signature of the f function\n</code></pre>\n\n<p>you can see above, how I separates and get type equality, namely <code>a ~ c</code> and <code>b ~ c -&gt; c -&gt; c</code>.  </p>\n\n<p>Then, lets apply <code>id f</code></p>\n\n<pre><code>a -&gt; a           \"The signature of the id\n~    ~\nc -&gt; c -&gt; c -&gt; c \"The signature of the f function\n</code></pre>\n\n<p>Like I separated above, I would say <code>a ~ c</code> and <code>a ~ c -&gt; c -&gt; c</code>, but this is wrong and I not understand why. I do exactly the sample principle like above. Right would be <code>a ~ c -&gt; c -&gt; c -&gt; c</code>. </p>\n\n<p>Could someone please explain it to me step by step, how deriving type works? I would say, I do understand the concept of deriving type at all.  </p>\n"}, {"tags": ["list", "shell", "haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 5, "creation_date": 1502112504, "post_id": 45548084, "comment_id": 78055757, "body": "What do you mean? You can not delete numbers from the infinite list. Data is immutable in Haskell..."}, {"owner": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "edited": false, "score": 0, "creation_date": 1502112551, "post_id": 45548084, "comment_id": 78055779, "body": "I do not understand your question, can you please schow yuor code?"}, {"owner": {"reputation": 1, "user_id": 8429040, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/40705777d3c2a409ff10c0c68952d349?s=128&d=identicon&r=PG&f=1", "display_name": "Luke lindenbaum", "link": "https://stackoverflow.com/users/8429040/luke-lindenbaum"}, "edited": false, "score": 0, "creation_date": 1502112552, "post_id": 45548084, "comment_id": 78055780, "body": "I have typed [0..]. How can I delete all the numbers generated by typing [0..]?"}, {"owner": {"reputation": 1, "user_id": 8429040, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/40705777d3c2a409ff10c0c68952d349?s=128&d=identicon&r=PG&f=1", "display_name": "Luke lindenbaum", "link": "https://stackoverflow.com/users/8429040/luke-lindenbaum"}, "edited": false, "score": 0, "creation_date": 1502112623, "post_id": 45548084, "comment_id": 78055844, "body": "There is an infinite list of numbers on my page. I can&#39;t GET to the code at the beginning of my file. That is precisely my problem."}, {"owner": {"reputation": 1, "user_id": 8429040, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/40705777d3c2a409ff10c0c68952d349?s=128&d=identicon&r=PG&f=1", "display_name": "Luke lindenbaum", "link": "https://stackoverflow.com/users/8429040/luke-lindenbaum"}, "edited": false, "score": 0, "creation_date": 1502112637, "post_id": 45548084, "comment_id": 78055853, "body": "Basically, how can I &#39;undo&#39; the operation of [0..]"}, {"owner": {"reputation": 1, "user_id": 8429040, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/40705777d3c2a409ff10c0c68952d349?s=128&d=identicon&r=PG&f=1", "display_name": "Luke lindenbaum", "link": "https://stackoverflow.com/users/8429040/luke-lindenbaum"}, "edited": false, "score": 0, "creation_date": 1502112670, "post_id": 45548084, "comment_id": 78055878, "body": "Well how can I go back to the start of my file, then?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1502112673, "post_id": 45548084, "comment_id": 78055879, "body": "@Lukelindenbaum: but <code>ghci</code> is simply an interactive shell that prints to the stdout... It depends on your terminal configuration how much you can scroll back... You can however use the arrow keys to move through your history."}, {"owner": {"reputation": 1, "user_id": 8429040, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/40705777d3c2a409ff10c0c68952d349?s=128&d=identicon&r=PG&f=1", "display_name": "Luke lindenbaum", "link": "https://stackoverflow.com/users/8429040/luke-lindenbaum"}, "edited": false, "score": 0, "creation_date": 1502112765, "post_id": 45548084, "comment_id": 78055936, "body": "The arrow won&#39;t get back quickly to the beginning of my file because there are so many numbers on the page."}, {"owner": {"reputation": 14006, "user_id": 3798102, "user_type": "registered", "accept_rate": 62, "profile_image": "https://graph.facebook.com/100002464470905/picture?type=large", "display_name": "pamu", "link": "https://stackoverflow.com/users/3798102/pamu"}, "edited": false, "score": 1, "creation_date": 1502112767, "post_id": 45548084, "comment_id": 78055937, "body": "@Lukelindenbaum do <code>ctrl + c</code> to stop printing infinite list of numbers"}, {"owner": {"reputation": 1, "user_id": 8429040, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/40705777d3c2a409ff10c0c68952d349?s=128&d=identicon&r=PG&f=1", "display_name": "Luke lindenbaum", "link": "https://stackoverflow.com/users/8429040/luke-lindenbaum"}, "edited": false, "score": 0, "creation_date": 1502112890, "post_id": 45548084, "comment_id": 78056026, "body": "I&#39;ve already interrupted the printing of the list. However I cannot get back to the beginning of my file before the numbers started. I&#39;m sure it is a trivial problem, I just don&#39;t know how to get there."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1502112908, "post_id": 45548084, "comment_id": 78056040, "body": "This has nothing to do with your code or the state of the program."}, {"owner": {"reputation": 1, "user_id": 8429040, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/40705777d3c2a409ff10c0c68952d349?s=128&d=identicon&r=PG&f=1", "display_name": "Luke lindenbaum", "link": "https://stackoverflow.com/users/8429040/luke-lindenbaum"}, "edited": false, "score": 0, "creation_date": 1502112986, "post_id": 45548084, "comment_id": 78056088, "body": "What does it have to do with then? How can I get to the beginning of the file?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 4, "creation_date": 1502113085, "post_id": 45548084, "comment_id": 78056151, "body": "@Lukelindenbaum: this is not a file, but a shell. A shell prints to the stdout. A <i>terminal</i> is a program that handles that input/output and displays it on the screen. Some terminals allow an arbitrary amount of lines to be stored, others don&#39;t in that case the lines will be lost once too much output is generated. This has nothing to do with Haskell or ghci, it is simply how a terminal works."}, {"owner": {"reputation": 34030, "user_id": 1993366, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/dGJXl.png?s=128&g=1", "display_name": "vikingsteve", "link": "https://stackoverflow.com/users/1993366/vikingsteve"}, "edited": false, "score": 1, "creation_date": 1502113172, "post_id": 45548084, "comment_id": 78056199, "body": "<code>ctrl-d</code> then <code>alt-f4</code>"}, {"owner": {"reputation": 1, "user_id": 8429040, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/40705777d3c2a409ff10c0c68952d349?s=128&d=identicon&r=PG&f=1", "display_name": "Luke lindenbaum", "link": "https://stackoverflow.com/users/8429040/luke-lindenbaum"}, "edited": false, "score": 0, "creation_date": 1502113174, "post_id": 45548084, "comment_id": 78056201, "body": "Thanks. How can I get to the beginning of the shell, then? Or whatever term  is appropriate here"}, {"owner": {"reputation": 1, "user_id": 8429040, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/40705777d3c2a409ff10c0c68952d349?s=128&d=identicon&r=PG&f=1", "display_name": "Luke lindenbaum", "link": "https://stackoverflow.com/users/8429040/luke-lindenbaum"}, "edited": false, "score": 0, "creation_date": 1502113226, "post_id": 45548084, "comment_id": 78056241, "body": "FANTASTIC! That works."}], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 8429040, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/40705777d3c2a409ff10c0c68952d349?s=128&d=identicon&r=PG&f=1", "display_name": "Luke lindenbaum", "link": "https://stackoverflow.com/users/8429040/luke-lindenbaum"}, "edited": false, "score": 0, "creation_date": 1502113575, "post_id": 45548383, "comment_id": 78056472, "body": "Thank you for your answer. Unfortunately I don&#39;t possess the basic knowledge of certain terms in your answer that would enable me to understand it, but perhaps that will change as things proceed. :)"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1502120165, "post_id": 45548383, "comment_id": 78061030, "body": "Trying to write an infinite string to a file isn&#39;t exactly a fruitful activity either... sure, after the process dies you&#39;ll retain all the input from the beginning, but the file will likely be several GB in size, and most text editors will just choke on it. When you know a list is infinite, a better way to examine it is to <code>take</code> some prefix of the list (e.g. <code>take 10 [0..]</code>)."}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1502177853, "post_id": 45548383, "comment_id": 78083248, "body": "@user2407038 Sure, my suggestion was more about unknown size of the output and how to protect yourself against it. If you write such a file, you can then safely examine its size and discard its contents if you realize your program fell into an infinite loop. There are also numerous tool that can read such files chunk by chunk without loading them whole into memory."}], "tags": [], "owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "is_accepted": false, "score": 1, "last_activity_date": 1502113282, "creation_date": 1502113282, "answer_id": 45548383, "question_id": 45548084, "link": "https://stackoverflow.com/questions/45548084/deleting-an-infinite-list-in-haskell/45548383#45548383", "title": "Deleting an infinite list in Haskell", "body": "<p>This is unrelated to Haskell and GHCi, and has more to do with how an OS shell works. When you executed printing of an infinite list, you instructed the computer to keep putting more bytes into the screen buffer. Those have limited capacity and will eventually lose the data put in there by previous commands.</p>\n\n<p>To avoid those kinds of situations in the future, redirect the output from a command to a text file, and run your code from a saved file and not GHCi as well.</p>\n"}], "owner": {"reputation": 1, "user_id": 8429040, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/40705777d3c2a409ff10c0c68952d349?s=128&d=identicon&r=PG&f=1", "display_name": "Luke lindenbaum", "link": "https://stackoverflow.com/users/8429040/luke-lindenbaum"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 185, "favorite_count": 0, "answer_count": 1, "score": -4, "last_activity_date": 1502113791, "creation_date": 1502112390, "last_edit_date": 1502113791, "question_id": 45548084, "link": "https://stackoverflow.com/questions/45548084/deleting-an-infinite-list-in-haskell", "title": "Deleting an infinite list in Haskell", "body": "<p>I've just started using Haskell. I read that we can generate the infinite list of positive natural numbers with [0..], and tried it out.</p>\n\n<p>However, now I can't get back to the start of my file. I have deleted many of the numbers, but how can I get rid of this infinite list of numbers?</p>\n"}, {"tags": ["list", "haskell"], "comments": [{"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 6, "creation_date": 1502089950, "post_id": 45541002, "comment_id": 78042147, "body": "<code>let repeat n = take n . cycle</code>"}], "answers": [{"comments": [{"owner": {"reputation": 55, "user_id": 8427253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97fb640b9b8dc240d26ef134f6fe22d7?s=128&d=identicon&r=PG&f=1", "display_name": "Junhan Liu", "link": "https://stackoverflow.com/users/8427253/junhan-liu"}, "edited": false, "score": 0, "creation_date": 1502093296, "post_id": 45541671, "comment_id": 78044017, "body": "That<code>s so cool, Thank you for your explanation. That</code>s really helpful!"}, {"owner": {"reputation": 9895, "user_id": 452775, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/88963e7cc58eabf150447e7b78a24793?s=128&d=identicon&r=PG", "display_name": "Lii", "link": "https://stackoverflow.com/users/452775/lii"}, "edited": false, "score": 0, "creation_date": 1502094056, "post_id": 45541671, "comment_id": 78044442, "body": "What are the consequences for performance of having <code>xs ++ [x]</code> as the second argument to the recursive call the <code>repeate</code>? I think that adding to the end of the list makes the function running time quadratic in the number of elements in the list. (Since Haskell is lazy I think the way this will manifest is that to get one element from the list N thunks will have to be evaluated (where N is the number of elements))). The solution in <a href=\"https://stackoverflow.com/a/45542340/452775\">Chi&#39;s answer</a> does not have this problem."}, {"owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "reply_to_user": {"reputation": 9895, "user_id": 452775, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/88963e7cc58eabf150447e7b78a24793?s=128&d=identicon&r=PG", "display_name": "Lii", "link": "https://stackoverflow.com/users/452775/lii"}, "edited": false, "score": 2, "creation_date": 1502095077, "post_id": 45541671, "comment_id": 78044982, "body": "@Lii, that is totally true, I just keep it simple for explaining the main idea, they way to go is using the <code>repeat n = take n . cycle</code> approach."}], "tags": [], "owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "is_accepted": true, "score": 4, "last_activity_date": 1502092410, "last_edit_date": 1502092410, "creation_date": 1502091678, "answer_id": 45541671, "question_id": 45541002, "link": "https://stackoverflow.com/questions/45541002/haskell-how-could-i-repeat-elements-in-list-when-i-reach-the-last-one-element-in/45541671#45541671", "title": "Haskell how could I repeat elements in list when I reach the last one element in the list?", "body": "<p>As Mark Seemann comment is as simple as taking <code>n</code> elements from the cycle of the list, so </p>\n\n<pre><code>repeat :: Int -&gt; [t] -&gt; [t]\nrepeat n = take n . cycle\n</code></pre>\n\n<p>If you want a fully expanded code would be more or less like this:</p>\n\n<pre><code>repeat :: Int -&gt; [t] -&gt;[t]\nrepeat 0 [] = []\nrepeat n (x:xs) | n &gt; 0     = x : repeat (n-1) (xs ++ [x])\n                | otherwise = []\n</code></pre>\n\n<p>The idea is that each item you consume you append to the list to be processed.\nHere you have a <a href=\"https://repl.it/JzdT/0\" rel=\"nofollow noreferrer\">live example</a></p>\n"}, {"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 1, "last_activity_date": 1502093970, "creation_date": 1502093970, "answer_id": 45542340, "question_id": 45541002, "link": "https://stackoverflow.com/questions/45541002/haskell-how-could-i-repeat-elements-in-list-when-i-reach-the-last-one-element-in/45542340#45542340", "title": "Haskell how could I repeat elements in list when I reach the last one element in the list?", "body": "<p>A basic alternative is to keep two lists around: one of them is \"consumed\" through pattern matching, while the other remembers the full list, so that we can start over when needed.</p>\n\n<pre><code>-- requires n &gt;= 0 and nonempty full\nrepeatAux :: Int -&gt; [t] -&gt; [t] -&gt;[t]\nrepeatAux 0 _      _full = []\nrepeatAux n []     full  = repeatAux n full full\nrepeatAux n (x:xs) full  = x : repeatAux (n-1) xs full\n\nrepeat :: Int -&gt; [t] -&gt;[t]\nrepeat n _ | n &lt;= 0 = []\nrepeat _ []   = error \"repeat: empty list with n&gt;0\"\nrepeat n full = repeatAux n full full\n</code></pre>\n\n<p>This can be improved using a local function, so that we can avoid to pass around the <code>full</code> list.</p>\n\n<pre><code>repeat :: Int -&gt; [t] -&gt;[t]\nrepeat n _ | n &lt;= 0 = []\nrepeat _ [] = error \"repeat: empty list with n&gt;0\"\nrepeat n full = go n full\n   where\n   go 0 _      = []\n   go n []     = go n full\n   go n (x:xs) = x : go (n-1) xs\n</code></pre>\n"}], "owner": {"reputation": 55, "user_id": 8427253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/97fb640b9b8dc240d26ef134f6fe22d7?s=128&d=identicon&r=PG&f=1", "display_name": "Junhan Liu", "link": "https://stackoverflow.com/users/8427253/junhan-liu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 423, "favorite_count": 0, "accepted_answer_id": 45541671, "answer_count": 2, "score": 0, "last_activity_date": 1502093970, "creation_date": 1502089078, "last_edit_date": 1502089446, "question_id": 45541002, "link": "https://stackoverflow.com/questions/45541002/haskell-how-could-i-repeat-elements-in-list-when-i-reach-the-last-one-element-in", "title": "Haskell how could I repeat elements in list when I reach the last one element in the list?", "body": "<p>I an new to Haskell programming, and I was tending to create a function that can repeat each elements in the list in n times, the problem is when I reach the last one element from the list and I want to return to the first one in the element and do it again, Like</p>\n\n<pre><code>repeat :: Int -&gt; [t] -&gt;[t]\nrepeat 0 [] = []\nrepeat n (x:xs)\n       | n &gt; 0 = x : repeat (n-1) xs\n       | n &lt; 0 =[]\n</code></pre>\n\n<p>This only can print the list when n is exactly the same as the size of the list, and there would be error if n > length list\nThe possible result should be like this:</p>\n\n<pre><code>repeat 6 [1,2,3] \n</code></pre>\n\n<p>the desired result would be : 1,2,3,1,2,3</p>\n\n<p>what should I edit if I want to get the first element in the list and print again?\nThanks!</p>\n"}, {"tags": ["string", "list", "haskell", "replace"], "comments": [{"owner": {"reputation": 15, "user_id": 4010373, "user_type": "registered", "profile_image": "https://graph.facebook.com/100004689002265/picture?type=large", "display_name": "Liu Junhan", "link": "https://stackoverflow.com/users/4010373/liu-junhan"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1502071526, "post_id": 45538425, "comment_id": 78036963, "body": "subst st nd [] = [] subst st nd (x:xs) =   if st == x   then nd : xs   else x : xs"}, {"owner": {"reputation": 15, "user_id": 4010373, "user_type": "registered", "profile_image": "https://graph.facebook.com/100004689002265/picture?type=large", "display_name": "Liu Junhan", "link": "https://stackoverflow.com/users/4010373/liu-junhan"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1502071641, "post_id": 45538425, "comment_id": 78036988, "body": "I`m just a beginner and not familiar with the recursive function in the Haskell, and I am not sure where I did wrong~"}, {"owner": {"reputation": 12213, "user_id": 671703, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/96ac349a9c65277e304401ea92a62ff4?s=128&d=identicon&r=PG", "display_name": "pat", "link": "https://stackoverflow.com/users/671703/pat"}, "edited": false, "score": 0, "creation_date": 1502071763, "post_id": 45538425, "comment_id": 78037012, "body": "Your type signature should be <code>change :: Eq t =&gt; t -&gt; t -&gt; [t] -&gt; [t]</code>"}, {"owner": {"reputation": 15, "user_id": 4010373, "user_type": "registered", "profile_image": "https://graph.facebook.com/100004689002265/picture?type=large", "display_name": "Liu Junhan", "link": "https://stackoverflow.com/users/4010373/liu-junhan"}, "edited": false, "score": 0, "creation_date": 1502071873, "post_id": 45538425, "comment_id": 78037042, "body": "Yeah, sorry I just typed wrong on that part. It should be change :: Eq t =&gt; t -&gt; t -&gt; [t] -&gt; [t]"}], "answers": [{"comments": [{"owner": {"reputation": 15, "user_id": 4010373, "user_type": "registered", "profile_image": "https://graph.facebook.com/100004689002265/picture?type=large", "display_name": "Liu Junhan", "link": "https://stackoverflow.com/users/4010373/liu-junhan"}, "edited": false, "score": 0, "creation_date": 1502080689, "post_id": 45538513, "comment_id": 78038890, "body": "Thank you for advice, I fixed that problem, thank you so much !"}], "tags": [], "owner": {"reputation": 12213, "user_id": 671703, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/96ac349a9c65277e304401ea92a62ff4?s=128&d=identicon&r=PG", "display_name": "pat", "link": "https://stackoverflow.com/users/671703/pat"}, "is_accepted": true, "score": 2, "last_activity_date": 1502072577, "last_edit_date": 1502072577, "creation_date": 1502071906, "answer_id": 45538513, "question_id": 45538425, "link": "https://stackoverflow.com/questions/45538425/haskell-replace-every-occurrence-of-the-given-word-in-the-list/45538513#45538513", "title": "Haskell, replace every occurrence of the given word in the list", "body": "<p>With the current code, you are changing only the first element of this list (if it matches <code>st</code>), and appending the rest of the list <code>xs</code> unchanged.  You should apply the <code>change</code> function to the tail of the list.</p>\n"}], "owner": {"reputation": 15, "user_id": 4010373, "user_type": "registered", "profile_image": "https://graph.facebook.com/100004689002265/picture?type=large", "display_name": "Liu Junhan", "link": "https://stackoverflow.com/users/4010373/liu-junhan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 626, "favorite_count": 0, "accepted_answer_id": 45538513, "answer_count": 1, "score": 0, "last_activity_date": 1502072577, "creation_date": 1502071214, "last_edit_date": 1502071817, "question_id": 45538425, "link": "https://stackoverflow.com/questions/45538425/haskell-replace-every-occurrence-of-the-given-word-in-the-list", "title": "Haskell, replace every occurrence of the given word in the list", "body": "<p>I am stuck on how to change the given word in the list</p>\n\n<pre><code>change :: Eq t =&gt; t -&gt; t -&gt; [t] -&gt; [t]\nchange x y z\n</code></pre>\n\n<p>the function should work like giving word <code>x</code> and replace it with <code>y</code> in the list of <code>z</code>.</p>\n\n<p>like <code>change 'a' 'c' \"banana\"</code> and the result would be <code>\"bcncnc\"</code></p>\n\n<p>How should I check the list recursively and change the every occurrence of the word?</p>\n\n<p>My own attempt:</p>\n\n<pre><code>change st nd [] = []\nchange st nd (x:xs) = if st == x then nd : xs else x : xs\n</code></pre>\n"}, {"tags": ["haskell", "ghc"], "comments": [{"owner": {"reputation": 240688, "user_id": 14955, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/5DblQ.png?s=128&g=1", "display_name": "Thilo", "link": "https://stackoverflow.com/users/14955/thilo"}, "edited": false, "score": 0, "creation_date": 1502066460, "post_id": 45537974, "comment_id": 78036021, "body": "Somewhat related: <a href=\"https://stackoverflow.com/questions/25649143/how-to-enable-dead-code-warnings-in-haskell-ghc?rq=1\" title=\"how to enable dead code warnings in haskell ghc\">stackoverflow.com/questions/25649143/&hellip;</a> <a href=\"https://stackoverflow.com/questions/18409508/dead-code-and-or-how-to-generate-a-cross-reference-from-haskell-source?rq=1\" title=\"dead code and or how to generate a cross reference from haskell source\">stackoverflow.com/questions/18409508/&hellip;</a>"}, {"owner": {"reputation": 777, "user_id": 1500250, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39026b3c6b2ab3cfd15b7f24a1eae2ad?s=128&d=identicon&r=PG", "display_name": "snibbets", "link": "https://stackoverflow.com/users/1500250/snibbets"}, "edited": false, "score": 0, "creation_date": 1502066837, "post_id": 45537974, "comment_id": 78036110, "body": "Another related post: <a href=\"https://stackoverflow.com/questions/18409508/dead-code-and-or-how-to-generate-a-cross-reference-from-haskell-source\" title=\"dead code and or how to generate a cross reference from haskell source\">stackoverflow.com/questions/18409508/&hellip;</a>"}, {"owner": {"reputation": 2141, "user_id": 1664572, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c2bee27fdb72050b60a3c6aae64b474f?s=128&d=identicon&r=PG", "display_name": "wizzup", "link": "https://stackoverflow.com/users/1664572/wizzup"}, "edited": false, "score": 0, "creation_date": 1502072146, "post_id": 45537974, "comment_id": 78037096, "body": "You might want to try <a href=\"https://github.com/DanielG/ghc-mod/wiki/Frontend\" rel=\"nofollow noreferrer\">ghc-mod</a>"}], "answers": [{"tags": [], "owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "is_accepted": false, "score": 6, "last_activity_date": 1502067661, "creation_date": 1502067661, "answer_id": 45538093, "question_id": 45537974, "link": "https://stackoverflow.com/questions/45537974/finding-unused-haskell-functions-in-a-module-or-file/45538093#45538093", "title": "Finding unused Haskell functions in a module or file?", "body": "<p>Here are some relevant ghc <code>-W</code> flags:</p>\n\n<pre><code>-Wunused-binds\n-Wunused-do-bind\n-Wunused-foralls\n-Wunused-imports\n-Wunused-local-binds\n-Wunused-matches\n-Wunused-pattern-binds\n-Wunused-top-binds\n-Wunused-type-patterns\n</code></pre>\n\n<p>Or just use <code>-Wall</code>. You can get a complete list of ghc flags with <code>ghc --show-options</code>.</p>\n"}], "owner": {"reputation": 195, "user_id": 8425002, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d5eb5dc4c2f1810a0597d4f8a9520b31?s=128&d=identicon&r=PG&f=1", "display_name": "til", "link": "https://stackoverflow.com/users/8425002/til"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 520, "favorite_count": 1, "answer_count": 1, "score": 5, "last_activity_date": 1502067661, "creation_date": 1502066340, "question_id": 45537974, "link": "https://stackoverflow.com/questions/45537974/finding-unused-haskell-functions-in-a-module-or-file", "title": "Finding unused Haskell functions in a module or file?", "body": "<p>Is there a way to automatically find unused functions (and constants) in a module or <code>.hs</code> file? Specifically, I mean those functions that are not used (directly or indirectly) by the functions in the export list of the current module/file.</p>\n\n<p>I know that e.g. Emacs haskell mode has the ability to warn about unused <code>import</code>S as follows:\n<code>The import of XXX is redundant</code></p>\n\n<p>Is there similar tool or method for finding <em>unused functions</em>?</p>\n\n<p>Note: I know this can be done manually by deleting some code and see whether it still compiles. But it's tedious process.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1502066198, "post_id": 45537953, "comment_id": 78035967, "body": "Every function in Haskell takes one argument"}], "answers": [{"tags": [], "owner": {"reputation": 231, "user_id": 5824635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c43dd400f3c9c2cbaeb8986532cd359b?s=128&d=identicon&r=PG&f=1", "display_name": "homura", "link": "https://stackoverflow.com/users/5824635/homura"}, "is_accepted": true, "score": 3, "last_activity_date": 1502067632, "creation_date": 1502067632, "answer_id": 45538089, "question_id": 45537953, "link": "https://stackoverflow.com/questions/45537953/how-many-args-does-runstate-in-haskell-have/45538089#45538089", "title": "How many args does runState in haskell have", "body": "<p>You are misreading the type signature.</p>\n\n<pre><code>runState :: State s a -&gt; s -&gt; (a, s)\n</code></pre>\n\n<p>This type signature indicates directly that runState takes 2 arguements. The first is of type <code>State s a</code>, and the second is of type <code>s</code>.</p>\n"}], "owner": {"reputation": 60183, "user_id": 66475, "user_type": "registered", "accept_rate": 99, "profile_image": "https://i.stack.imgur.com/BPKeb.png?s=128&g=1", "display_name": "Bjorn", "link": "https://stackoverflow.com/users/66475/bjorn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 0, "accepted_answer_id": 45538089, "answer_count": 1, "score": -2, "last_activity_date": 1502325192, "creation_date": 1502066093, "last_edit_date": 1502325192, "question_id": 45537953, "link": "https://stackoverflow.com/questions/45537953/how-many-args-does-runstate-in-haskell-have", "title": "How many args does runState in haskell have", "body": "<p><strong>I misread the documentation.</strong></p>\n\n<p>Consider <code>runState</code> as defined in <a href=\"http://hackage.haskell.org/package/mtl-2.2.1/docs/Control-Monad-State-Lazy.html#v:runState\" rel=\"nofollow noreferrer\">mtl</a>.</p>\n\n<p><code>s -&gt; (a, s) :: State s a</code></p>\n\n<p>Does what look like two arguments for <code>runState</code> have something to do with the <code>s</code> and <code>Identity</code> in <code>StateT s Identity</code>?</p>\n"}, {"tags": ["multithreading", "haskell", "gtk"], "owner": {"reputation": 231, "user_id": 5824635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c43dd400f3c9c2cbaeb8986532cd359b?s=128&d=identicon&r=PG&f=1", "display_name": "homura", "link": "https://stackoverflow.com/users/5824635/homura"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 140, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1502060696, "creation_date": 1502053950, "last_edit_date": 1502060696, "question_id": 45536689, "link": "https://stackoverflow.com/questions/45536689/gi-gtk-callback-threading", "title": "GI-Gtk callback threading", "body": "<p>I am having an issue with threading when using callbacks in GI-Gtk. Consider the following program:</p>\n\n<pre><code>import GI.Gtk hiding (main)\nimport GI.Gdk\nimport GI.GLib\nimport GI.GLib.Constants\n\nimport qualified GI.Gtk as Gtk \n\nimport Control.Concurrent\nimport Control.Concurrent.MVar\n\nmain = do\n    t &lt;- myThreadId\n    putStrLn $ \"init \"++show t\n\n    Gtk.init Nothing\n\n    d &lt;- dialogNew\n    dialogRun d\n    onWidgetDestroy d onDestroy\n\n    Gtk.main\n\nonDestroy :: IO ()\nonDestroy = do\n    t &lt;- myThreadId\n    putStrLn $ \"onDestroy \"++show t\n    runOnGUI $ putStrLn \"Destroying\"\n    putStrLn \"Destroyed\"\n    Gtk.mainQuit\n\nrunOnGUI :: IO a -&gt; IO a\nrunOnGUI action = do\n    ans &lt;- newEmptyMVar\n    threadsAddIdle PRIORITY_DEFAULT_IDLE $ action &gt;&gt;= putMVar ans &gt;&gt; return False\n    takeMVar ans\n</code></pre>\n\n<p>When running the above program, the program hangs when I attempt to close the window, and I get the following output:</p>\n\n<pre><code>init ThreadId 11\nGtk-Message: GtkDialog mapped without a transient parent. This is discouraged.\nonDestroy ThreadId 12\n</code></pre>\n\n<p>Looking at the code alone, I would expect to see this deadlock if runOnGUI is being called from the main thread (which I would expect it to be). However based on the output, runOnGUI should be getting called on a different thread, and therefore avoid the deadlock.</p>\n\n<p>In my actual program, I attempt to avoid this type of deadlock by guarding runOnGUI in a <code>if currentThread /= mainThread</code> type conditional; but, as the above example shows, that does not appear to be sufficient.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 4, "creation_date": 1502055609, "post_id": 45536673, "comment_id": 78033762, "body": "No, that&#39;s not possible. You can&#39;t take a value out of the <code>IO</code> monad."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1502064566, "post_id": 45536915, "comment_id": 78035652, "body": "This has only a little to do with monads and everything to do with these <i>particular</i> monads."}], "tags": [], "owner": {"reputation": 1602, "user_id": 3105524, "user_type": "registered", "accept_rate": 52, "profile_image": "https://www.gravatar.com/avatar/5b169766a0453f1ace846e5d425c940b?s=128&d=identicon&r=PG", "display_name": "Kamyar", "link": "https://stackoverflow.com/users/3105524/kamyar"}, "is_accepted": false, "score": -1, "last_activity_date": 1502056822, "last_edit_date": 1502056822, "creation_date": 1502055612, "answer_id": 45536915, "question_id": 45536673, "link": "https://stackoverflow.com/questions/45536673/haskell-show-instance-of-ioarray/45536915#45536915", "title": "Haskell: Show instance of IOArray", "body": "<p>AFAIK in Haskell getting rid of Monads is neither possible nor correct. Some monads (like Maybe and Either) has special methods to unwrap their values, but (over)using them is discouraged. If you have any Haskell type that is wrapped within a Monad context, you must use it and work with it without unwrapping and releasing. For your case, any type within an IO monad, can not be converted (using any type of function like Show) to any type without IO Monad. One solution for your case is using Haskell's rich treasure of Monad functions and operators to convert inner type (e.g. Int) to Char, and after that you have a IO String instead of IOArray, which in turn you can print out.</p>\n"}, {"comments": [{"owner": {"reputation": 5765, "user_id": 341499, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/39cad3119923abe9ac6eeb7b5e3dfb6b?s=128&d=identicon&r=PG&f=1", "display_name": "Vinz", "link": "https://stackoverflow.com/users/341499/vinz"}, "edited": false, "score": 0, "creation_date": 1502088429, "post_id": 45539386, "comment_id": 78041450, "body": "Ok, that&#39;s what I was expecting without being sure. So basically I have to call my &quot;show&quot; function by hand, I can&#39;t create an instance of <code>Show</code>. I&#39;ll try to look around if there is an existing pattern for this problem. Thanks !"}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 3, "last_activity_date": 1502079683, "creation_date": 1502079683, "answer_id": 45539386, "question_id": 45536673, "link": "https://stackoverflow.com/questions/45536673/haskell-show-instance-of-ioarray/45539386#45539386", "title": "Haskell: Show instance of IOArray", "body": "<p>An <code>IOArray</code> is not really an array. It's just a <em>reference</em> to an array. Absolutely everything interesting you can do with an <code>IOArray</code> produces an action in <code>IO</code>. Why is that? Suppose you could index into an <code>IOArray</code> in pure code:</p>\n\n<pre><code>(!) :: IOArray Int a -&gt; a\n</code></pre>\n\n<p>Consider the following:</p>\n\n<pre><code>f :: IO (Char, Char)\nf = do\n  ar &lt;- newArray (0 :: Int, 10 :: Int) 'a'\n  let x = ar ! 3\n  writeArray ar 3 'b'\n  let y = ar ! 3\n  return (x, y)\n</code></pre>\n\n<p>What should <code>f</code> produce? One answer might be that it should produce <code>('a', 'b')</code>, because the third element of <code>ar</code> started out as <code>'a'</code> and then was changed to <code>'b'</code>. But that's deeply troubling! How can <code>ar ! 3</code> have one value at one time and another later? That violates the fundamental idea of referential transparency that purely functional languages are built on. So you just can't do that.</p>\n"}], "owner": {"reputation": 5765, "user_id": 341499, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/39cad3119923abe9ac6eeb7b5e3dfb6b?s=128&d=identicon&r=PG&f=1", "display_name": "Vinz", "link": "https://stackoverflow.com/users/341499/vinz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 142, "favorite_count": 0, "accepted_answer_id": 45539386, "answer_count": 2, "score": 1, "last_activity_date": 1502079683, "creation_date": 1502053857, "question_id": 45536673, "link": "https://stackoverflow.com/questions/45536673/haskell-show-instance-of-ioarray", "title": "Haskell: Show instance of IOArray", "body": "<p>I'm learning Haskell and trying to use mutable arrays (in particular <code>IOArray</code>). I wrote a pretty printer that has the following type:</p>\n\n<pre><code>disp :: Show a =&gt; IOArray Int a -&gt; IO String\n</code></pre>\n\n<p>I didn't manage to get rid of the <code>IO</code> part because of a subcall to</p>\n\n<pre><code>getBounds :: Ix i =&gt; a i e -&gt; m (i, i) \n</code></pre>\n\n<p>Now I'm trying to use <code>disp</code> to define a <code>Show</code> instance for my <code>IOArray</code> type but the <code>IO</code> gets in the way.</p>\n\n<p>Is it possible to create a <code>Show</code> instance for <code>IOArray</code> ?</p>\n"}, {"tags": ["haskell", "haskell-stack"], "comments": [{"owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "edited": false, "score": 1, "creation_date": 1502074920, "post_id": 45536521, "comment_id": 78037678, "body": "This may be a regression in Stack. I&#39;d recommend first upgrading to the latest version with stack upgrade, and if the problem persists, reporting an issue."}, {"owner": {"reputation": 4538, "user_id": 499478, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/791526e67831fbd70e3d179a6c585b44?s=128&d=identicon&r=PG", "display_name": "Wizek", "link": "https://stackoverflow.com/users/499478/wizek"}, "reply_to_user": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "edited": false, "score": 0, "creation_date": 1502155870, "post_id": 45536521, "comment_id": 78075683, "body": "Thanks for the tip @MichaelSnoyman, I hope to do what you suggest in the coming days."}], "owner": {"reputation": 4538, "user_id": 499478, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/791526e67831fbd70e3d179a6c585b44?s=128&d=identicon&r=PG", "display_name": "Wizek", "link": "https://stackoverflow.com/users/499478/wizek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 77, "favorite_count": 1, "answer_count": 0, "score": 4, "last_activity_date": 1502055108, "creation_date": 1502052715, "last_edit_date": 1502055108, "question_id": 45536521, "link": "https://stackoverflow.com/questions/45536521/is-it-possible-with-stack-to-avoid-unregistering-and-re-compiling-most-if-not-a", "title": "Is it possible with stack to avoid unregistering and re-compiling most (if not all) of the dependencies when switching between `--profile` on and off?", "body": "<p>It takes several hours to recompile about 100 dependencies if I accidentally let stack unregister them when switching between <code>--profile</code> on and off.</p>\n\n<p>I don't mean the initial building of the packages with both, but subsequent builds.</p>\n\n<p>Currently I try to work around by having different copies of <code>.stack-work</code>. I'm trying to use hardlinks too via <code>cp -al</code>. But I hope stack could also just not throw away hours worth of compiled dependencies so willingly without so much as a warning. Or even better, if it kept both without unregistering.</p>\n\n<p>I have Version 1.4.1, Git revision 3d29b8c68a x86_64 hpack-0.17.0</p>\n"}, {"tags": ["function", "haskell", "types", "polymorphism", "polymorphic-functions"], "comments": [{"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 0, "creation_date": 1502048483, "post_id": 45535755, "comment_id": 78031832, "body": "It&#39;s obviously flipping the arguments of the function that you feed it with a function which takes <code>t2</code> and <code>t1</code> types in order by returning the same function which takes <code>t1</code> and <code>t2</code> types in order.."}], "answers": [{"comments": [{"owner": {"reputation": 215, "user_id": 8224815, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/2e00dc51f47b166e66df0b3bb6eb849f?s=128&d=identicon&r=PG&f=1", "display_name": "James", "link": "https://stackoverflow.com/users/8224815/james"}, "edited": false, "score": 0, "creation_date": 1502048854, "post_id": 45535859, "comment_id": 78031946, "body": "on the right hand side, how did you determined that f took only y? as in <code>(f y) x</code>? i thought on the right hand side, it took the form of <code>f (y x)</code>"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 215, "user_id": 8224815, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/2e00dc51f47b166e66df0b3bb6eb849f?s=128&d=identicon&r=PG&f=1", "display_name": "James", "link": "https://stackoverflow.com/users/8224815/james"}, "edited": false, "score": 3, "creation_date": 1502048930, "post_id": 45535859, "comment_id": 78031971, "body": "@James: that&#39;s how Haskell syntax works. If you write <code>foo bar qux foobar</code>, you written implicitly <code>((foo bar) qux) foobar</code>... Note that in Haskell <b>every function takes only one argument</b>."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 5, "last_activity_date": 1502048092, "creation_date": 1502048092, "answer_id": 45535859, "question_id": 45535755, "link": "https://stackoverflow.com/questions/45535755/polymorphic-type-of-functions-as-parameter-in-haskell/45535859#45535859", "title": "Polymorphic type of functions as parameter in haskell?", "body": "<p>Your <strong>second assumption is wrong</strong>:</p>\n\n<blockquote>\n  <p><s>2nd parameter of flip, x is of type t1 because of the parameter t1 inside f function.</s></p>\n</blockquote>\n\n<p>Let us first analyze the function:</p>\n\n<pre><code>flip f x y = f y x\n</code></pre>\n\n<p>We see that <code>flip</code> has three arguments in the head. So we first make the type:</p>\n\n<pre><code>flip :: a -&gt; (b -&gt; (c -&gt; d))\n</code></pre>\n\n<p>We will of course now aim to fill in the types. With:</p>\n\n<pre><code>f :: a\nx :: b\ny :: c\nflip f x y :: d\n</code></pre>\n\n<p>We see on the right hand side:</p>\n\n<pre><code>(f y) x\n</code></pre>\n\n<p>So that means that <code>f</code> is a function that takes as input <code>y</code>. So that means that <code>a</code> is the same type as <code>c -&gt; e</code> (or shorter <code>a ~ c -&gt; e</code>).</p>\n\n<p>So now:</p>\n\n<pre><code>flip :: (c -&gt; e) -&gt; (b -&gt; (c -&gt; d))\nf :: (c -&gt; e)\nx :: b\ny :: c\n</code></pre>\n\n<p>Furthermore we see that:</p>\n\n<pre><code>(f x) y\n</code></pre>\n\n<p>So the result of <code>(f x)</code> is another function, with as input <code>y</code>. So that means that <code>e ~ b -&gt; f</code>. Thus:</p>\n\n<pre><code>flip :: (c -&gt; (b -&gt; f)) -&gt; (b -&gt; (c -&gt; d))\nf :: c -&gt; (b -&gt; f)\nx :: b\ny :: c\n</code></pre>\n\n<p>Finally we see that <code>(f y) x</code> is the result of <code>flip f x y</code>. So that means that the type of the result of <code>(f y) x</code> is the same type as <code>d</code>. So that means that <code>f ~ d</code>. Which thus means that:</p>\n\n<pre><code>flip :: (c -&gt; (b -&gt; d)) -&gt; (b -&gt; (c -&gt; d))\n</code></pre>\n\n<p>Or if we drop some redundant brackets:</p>\n\n<pre><code>flip :: (c -&gt; b -&gt; d) -&gt; b -&gt; c -&gt; d\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 215, "user_id": 8224815, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/2e00dc51f47b166e66df0b3bb6eb849f?s=128&d=identicon&r=PG&f=1", "display_name": "James", "link": "https://stackoverflow.com/users/8224815/james"}, "edited": false, "score": 0, "creation_date": 1502048476, "post_id": 45535895, "comment_id": 78031831, "body": "how did you determine that f only takes y as argument? I thought f took <code>f (y x)</code>"}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 3, "creation_date": 1502049399, "post_id": 45535895, "comment_id": 78032126, "body": "<code>f y x</code> is <code>(f y) x</code>, not <code>f (y x)</code>. This is true throughout all of Haskell, not specific to this function."}, {"owner": {"reputation": 2861, "user_id": 2847643, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/PmATO.jpg?s=128&g=1", "display_name": "user2847643", "link": "https://stackoverflow.com/users/2847643/user2847643"}, "edited": false, "score": 1, "creation_date": 1502051480, "post_id": 45535895, "comment_id": 78032710, "body": "What amalloy said. Also, if you don&#39;t know the trick: one can model any n-argument function using only one argument functions provided that functions are first class - that you can return them as results."}], "tags": [], "owner": {"reputation": 13520, "user_id": 2315602, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/8rKPi.jpg?s=128&g=1", "display_name": "lisyarus", "link": "https://stackoverflow.com/users/2315602/lisyarus"}, "is_accepted": false, "score": 2, "last_activity_date": 1502048316, "creation_date": 1502048316, "answer_id": 45535895, "question_id": 45535755, "link": "https://stackoverflow.com/questions/45535755/polymorphic-type-of-functions-as-parameter-in-haskell/45535895#45535895", "title": "Polymorphic type of functions as parameter in haskell?", "body": "<p>This is just a matter of solving a system of equations. First, assign unknown types:</p>\n\n<pre><code>f : a1\nx : a2\ny : a3\n</code></pre>\n\n<p>Next, <code>f</code> is applied to <code>y</code>. So, <code>f</code> must be a function type with argument of the same type as y, that is</p>\n\n<pre><code>f : a1 = a3 -&gt; a4\nf y : a4\n</code></pre>\n\n<p>Similarily, <code>f y</code> is applied to <code>x</code>, so</p>\n\n<pre><code>f y : a4 = a2 -&gt; a5\nf y x : a5\n</code></pre>\n\n<p>Substituting this back, we get</p>\n\n<pre><code>f : a3 -&gt; a2 -&gt; a5\nx : a2\ny : a3\n</code></pre>\n\n<p>We can rename these types</p>\n\n<pre><code>t2 = a3\nt1 = a2\nt  = a5\n</code></pre>\n\n<p>and get</p>\n\n<pre><code>f : t2 -&gt; t1 -&gt; t\nx : t1\ny : t2\n</code></pre>\n\n<p>The function body is <code>f y x</code>, which has type <code>t = a5</code>.</p>\n"}], "owner": {"reputation": 215, "user_id": 8224815, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/2e00dc51f47b166e66df0b3bb6eb849f?s=128&d=identicon&r=PG&f=1", "display_name": "James", "link": "https://stackoverflow.com/users/8224815/james"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 411, "favorite_count": 0, "accepted_answer_id": 45535859, "answer_count": 2, "score": 1, "last_activity_date": 1502048316, "creation_date": 1502047526, "question_id": 45535755, "link": "https://stackoverflow.com/questions/45535755/polymorphic-type-of-functions-as-parameter-in-haskell", "title": "Polymorphic type of functions as parameter in haskell?", "body": "<p>Im trying to define the polymorphic type of the following function:</p>\n\n<pre><code>flip f x y = f y x\n</code></pre>\n\n<p>My thought was the following:</p>\n\n<ol>\n<li><p>1st parameter of <code>flip</code>, <strong><code>f</code></strong> takes two arguments so <code>(t1 -&gt; t2 -&gt; t3)</code></p></li>\n<li><p>2nd parameter of <code>flip</code>, <strong><code>x</code></strong> is of type <strong><code>t1</code></strong> because of the parameter <strong><code>t1</code></strong> inside <strong><code>f</code></strong> function.</p></li>\n<li><p>3rd parameter of <code>flip</code>, <strong><code>y</code></strong> which is of type <strong><code>t3</code></strong> because of the parameter <strong><code>t3</code></strong> inside <strong><code>f</code></strong> function.</p></li>\n<li><p>I don't know the polymorphic type of the overall return.</p></li>\n</ol>\n\n<p>But when I checked the type in the ghci, I get:</p>\n\n<pre><code>flip :: (t2 -&gt; t1 -&gt; t) -&gt; t1 -&gt; t2 -&gt; t\n</code></pre>\n\n<p>Can someone please help go through this example was to whats happening here?</p>\n\n<p>Thanks</p>\n"}, {"tags": ["haskell", "routing", "web-frameworks"], "answers": [{"tags": [], "owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "is_accepted": true, "score": 4, "last_activity_date": 1502045323, "last_edit_date": 1502045323, "creation_date": 1502042942, "answer_id": 45535097, "question_id": 45535027, "link": "https://stackoverflow.com/questions/45535027/haskell-web-frameworks-that-discover-endpoints/45535097#45535097", "title": "Haskell Web frameworks that discover endpoints?", "body": "<p>You can get pretty close to what you are expecting with the Yesod framework provided that you are using <a href=\"http://www.yesodweb.com/book/scaffolding-and-the-site-template\" rel=\"nofollow noreferrer\">the scaffolded site</a> it provides. The flow will look like this:</p>\n\n<p>1) Add new route in the routes file</p>\n\n<pre><code>/myRoute MyRouteR GET\n</code></pre>\n\n<p>2) Define a handler for it in the existing Handler module under the <code>Handler</code> directory:</p>\n\n<pre><code>getMyRouteR :: Handler Html\ngetMyRouteR = return $(shamletFile \"templates/myRoute.shamlet\")\n</code></pre>\n\n<p>And that's the end of the flow.</p>\n"}], "owner": {"reputation": 1953, "user_id": 899723, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f68bcc2d6f5196fa090d578eb8356b9c?s=128&d=identicon&r=PG", "display_name": "mac10688", "link": "https://stackoverflow.com/users/899723/mac10688"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "accepted_answer_id": 45535097, "answer_count": 1, "score": 1, "last_activity_date": 1502045323, "creation_date": 1502042470, "question_id": 45535027, "link": "https://stackoverflow.com/questions/45535027/haskell-web-frameworks-that-discover-endpoints", "title": "Haskell Web frameworks that discover endpoints?", "body": "<p>Is there a haskell web framework or method to make end rest api endpoint methods discoverable, instead of having to go back to append the new endpoint function to a main method?</p>\n\n<p>Explanation:</p>\n\n<p>I'm evaluating haskell web frameworks and something I see common in all of them is that there is one place to define your endpoints.</p>\n\n<p>Meaning, each time I create a new endpoint, I will have to make the function and then enter the endpoint in the main function. </p>\n\n<p>I'll give some examples.</p>\n\n<p><a href=\"https://www.spock.li/tutorials/rest-api\" rel=\"nofollow noreferrer\">Spock</a></p>\n\n<pre><code>type Api = SpockM () () () ()\n\ntype ApiAction a = SpockAction () () () a\n\nmain :: IO ()\nmain = do\n  spockCfg &lt;- defaultSpockCfg () PCNoDatabase ()\n  runSpock 8080 (spock spockCfg app)\n\napp :: Api\napp = do\n  get \"people\" $ do\n    json $ Person { name = \"Fry\", age = 25 }\n</code></pre>\n\n<p>For a new endpoint, I will need to modify the app function.</p>\n\n<p><a href=\"http://haskell-servant.github.io/tutorial/0.4/server.html\" rel=\"nofollow noreferrer\">Servant</a></p>\n\n<pre><code>type UserAPI2 = \"users\" :&gt; Get '[JSON] [User]\n           :&lt;|&gt; \"albert\" :&gt; Get '[JSON] User\n           :&lt;|&gt; \"isaac\" :&gt; Get '[JSON] User\n\nisaac :: User\nisaac = User \"Isaac Newton\" 372 \"isaac@newton.co.uk\" (fromGregorian 1683 3 1)\n\nalbert :: User\nalbert = User \"Albert Einstein\" 136 \"ae@mc2.org\" (fromGregorian 1905 12 1)\n\nusers2 :: [User]\nusers2 = [isaac, albert]\n\nserver2 :: Server UserAPI2\nserver2 = return users2\n     :&lt;|&gt; return albert\n     :&lt;|&gt; return isaac\n</code></pre>\n\n<p>For each new endpoint, I will need to append to the server2 function.</p>\n\n<p><a href=\"http://snapframework.com/docs/tutorials/snaplets-tutorial\" rel=\"nofollow noreferrer\">Snap</a></p>\n\n<pre><code>appInit :: SnapletInit App App\nappInit = makeSnaplet \"myapp\" \"My example application\" Nothing $ do\n    hs &lt;- nestSnaplet \"heist\" heist $ heistInit \"templates\"\n    fs &lt;- nestSnaplet \"foo\" foo $ fooInit\n    bs &lt;- nestSnaplet \"\" bar $ nameSnaplet \"newname\" $ barInit foo\n    addRoutes [ (\"hello\", writeText \"hello world\")\n              , (\"fooname\", with foo namePage)\n              , (\"barname\", with bar namePage)\n              , (\"company\", companyHandler)\n              ]\n    wrapSite (&lt;|&gt; heistServe)\n    ref &lt;- liftIO $ newIORef \"fooCorp\"\n    return $ App hs fs bs ref\n</code></pre>\n\n<p>For each new endpoint I want to add, I will need to append to the addRoutes function.</p>\n\n<p>In all these examples and every other framework I look at, if I want to add a new endpoint, I always have to come back to a function in the main file to add the new route.</p>\n\n<p>I was hoping there would be something out there, that I can just write my new endpoint function within a new file and it would be discovered by the web framework, so I don't have to keep adding to an existing function.</p>\n\n<p>In <a href=\"https://docs.microsoft.com/en-us/aspnet/web-api/overview/web-api-routing-and-actions/attribute-routing-in-web-api-2\" rel=\"nofollow noreferrer\">.net Web Api</a>, this would look like this.</p>\n\n<p>One place to define the default routing.</p>\n\n<pre><code>routes.MapHttpRoute(\nname: \"API Default\",\nrouteTemplate: \"api/{controller}/{id}\",\ndefaults: new { id = RouteParameter.Optional }\n);\n</code></pre>\n\n<p>A new class and file added to the project. The framework would discover this method as an endpoint at runtime and add it. I won't have to go back to a main function to append this endpoint.</p>\n\n<pre><code>[Route(\"api/books\")]\n[HttpPost]\npublic HttpResponseMessage CreateBook(Book book) { ... }\n</code></pre>\n"}, {"tags": ["haskell", "haskell-stack"], "comments": [{"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1502038916, "post_id": 45533610, "comment_id": 78028894, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/45498425/how-to-upgrade-stack-ghc\" title=\"how to upgrade stack ghc\">stackoverflow.com/questions/45498425/how-to-upgrade-stack-gh&zwnj;&#8203;c</a>?"}], "answers": [{"comments": [{"owner": {"reputation": 185, "user_id": 1657666, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/265150b21cb471f3f4bb1e8d68c0e5bd?s=128&d=identicon&r=PG", "display_name": "user1657666", "link": "https://stackoverflow.com/users/1657666/user1657666"}, "edited": false, "score": 0, "creation_date": 1556360671, "post_id": 45538519, "comment_id": 98417884, "body": "thank you. I know this solution. I would like to understand if would be possible using configure command."}], "tags": [], "owner": {"reputation": 5661, "user_id": 2541276, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/100001587714573/picture?type=large", "display_name": "Rajkumar Natarajan", "link": "https://stackoverflow.com/users/2541276/rajkumar-natarajan"}, "is_accepted": true, "score": 2, "last_activity_date": 1502071950, "creation_date": 1502071950, "answer_id": 45538519, "question_id": 45533610, "link": "https://stackoverflow.com/questions/45533610/upgrading-the-ghc-version-being-used-by-haskell-stack/45538519#45538519", "title": "upgrading the ghc version being used by haskell stack", "body": "<p>There are 2 options.</p>\n\n<p>temporary solution is every time you have to provide the version of ghc while loading stack.</p>\n\n<pre><code>ghc --resolver ghc-8.2.1 ghci\n</code></pre>\n\n<p>If you don't give the version of ghc, stack loads the default version.</p>\n\n<p>The second option is permanently configuring the ghc version for stack as default version. Below is the step used for that</p>\n\n<pre><code>configure *resolver: ghc-8.2.1* in the file *.stack/global-project/stack.yaml*\n</code></pre>\n\n<p>and restart your stack.</p>\n"}], "owner": {"reputation": 5661, "user_id": 2541276, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/100001587714573/picture?type=large", "display_name": "Rajkumar Natarajan", "link": "https://stackoverflow.com/users/2541276/rajkumar-natarajan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1170, "favorite_count": 1, "accepted_answer_id": 45538519, "answer_count": 1, "score": 5, "last_activity_date": 1502071950, "creation_date": 1502033638, "last_edit_date": 1502042122, "question_id": 45533610, "link": "https://stackoverflow.com/questions/45533610/upgrading-the-ghc-version-being-used-by-haskell-stack", "title": "upgrading the ghc version being used by haskell stack", "body": "<p>I'm trying to update my ghc version installed for haskell stack from version 8.0.2 to 8.2.1 but seems like I am missing something.</p>\n\n<pre><code>[user@localhost ~]$ stack --resolver ghc-8.2.1 setup\nstack will use a sandboxed GHC it installed\nFor more information on paths, see 'stack path' and 'stack exec env'\nTo use this GHC and packages outside of a project, consider using:\nstack ghc, stack ghci, stack runghc, or stack exec\n\n[user@localhost ~]$ stack ghci\nConfiguring GHCi with the following packages: \nGHCi, version 8.0.2: http://www.haskell.org/ghc/  :? for help\nLoaded GHCi configuration from /tmp/ghci7878/ghci-script\nPrelude&gt; :q\nLeaving GHCi.\n</code></pre>\n\n<p>I think I need to do some extra step after to update the ghc version of stack but I am not sure. </p>\n"}, {"tags": ["haskell", "parsec"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1502026327, "post_id": 45532364, "comment_id": 78024997, "body": "Perhaps it was left out from the libraries since its implementation is quite short."}, {"owner": {"reputation": 4734, "user_id": 736508, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/2b30f4fcb5b2b34a8468a8d378cab9d1?s=128&d=identicon&r=PG", "display_name": "Gal", "link": "https://stackoverflow.com/users/736508/gal"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1502026486, "post_id": 45532364, "comment_id": 78025035, "body": "A lot of implementation are quite short, e.g., <code>option x p = p &lt;|&gt; return x</code>. It&#39;s my impression that the library is going for a more declarative style with  a lot of built-in primitives to avoid having everybody implement the same trivial functionality."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1502027008, "post_id": 45532364, "comment_id": 78025183, "body": "I agree. I can only guess that the library authors felt <code>option</code> to be so commonly used that it deserved its own binding. Instead, writing e.g. <code>either f g &lt;$&gt; parseEither pa pb</code> might be less common than the more direct <code>(f &lt;$&gt; pa) &lt;|&gt; (g &lt;$&gt; pb)</code>. Anyway, <code>parseEither</code> could have been included."}, {"owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "edited": false, "score": 0, "creation_date": 1502030697, "post_id": 45532364, "comment_id": 78026300, "body": "In most cases I would guess that people will use their own sum types instead of Either, so its not actually that common."}, {"owner": {"reputation": 4734, "user_id": 736508, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/2b30f4fcb5b2b34a8468a8d378cab9d1?s=128&d=identicon&r=PG", "display_name": "Gal", "link": "https://stackoverflow.com/users/736508/gal"}, "edited": false, "score": 0, "creation_date": 1502031055, "post_id": 45532364, "comment_id": 78026409, "body": "Is Either the canonical way to represent a sum of A and B, or is it one of those things that made its way to Prelude but is frowned upon, like String?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1502032571, "post_id": 45532364, "comment_id": 78026884, "body": "@Gal It is neither canonical nor frowned upon. It is often used for representing &quot;success or error&quot; conditions (hence not frowned upon), but rarely used as an anonymous sum <a href=\"https://stackoverflow.com/a/19073039/791604\">for sanity reasons</a> (hence not canonical)."}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 1, "creation_date": 1502050471, "post_id": 45532364, "comment_id": 78032461, "body": "I would say that <code>Either</code> is as much a canonical sum as <code>(,)</code> is a canonical product."}], "owner": {"reputation": 4734, "user_id": 736508, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/2b30f4fcb5b2b34a8468a8d378cab9d1?s=128&d=identicon&r=PG", "display_name": "Gal", "link": "https://stackoverflow.com/users/736508/gal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 246, "favorite_count": 1, "answer_count": 0, "score": 3, "last_activity_date": 1502039005, "creation_date": 1502025031, "last_edit_date": 1502039005, "question_id": 45532364, "link": "https://stackoverflow.com/questions/45532364/is-there-a-built-in-either-parser-in-the-parsec-library", "title": "Is there a built-in Either parser in the Parsec library?", "body": "<p>I'm looking for a parser that would try to use the first parser, and return <code>Left a</code> if it succeeds, or if it fails try the second parser and return <code>Right b</code>. In other words, something with the signature:</p>\n\n<pre><code>Parser a -&gt; Parser b -&gt; Parser (Either a b)\n</code></pre>\n\n<p>Where, e.g., <code>type Parser a = P.Parsec String () a</code></p>\n\n<p>It's not particularly hard to implement it on my own:</p>\n\n<pre><code>parseEither pa pb = (Left &lt;$&gt; pa) &lt;|&gt; (Right &lt;$&gt; pb)\n</code></pre>\n\n<p>But it seems to be such a useful and trivial construct that I was wondering if anything similar already exists in the Parsec library.</p>\n"}, {"tags": ["css", "haskell", "svg", "webkit"], "comments": [{"owner": {"reputation": 2861, "user_id": 2847643, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/PmATO.jpg?s=128&g=1", "display_name": "user2847643", "link": "https://stackoverflow.com/users/2847643/user2847643"}, "edited": false, "score": 0, "creation_date": 1502049811, "post_id": 45531957, "comment_id": 78032265, "body": "I&#39;m usually too lazy to figure these things out. It&#39;s way faster to just fire up a local web server. I usually run <code>python3 -m http.server 8000</code> from the directory I want to have available. Not sure if this applies to your case and it doesn&#39;t really solve the core issue, so just pointing it out as a possible option."}], "owner": {"reputation": 243, "user_id": 7252948, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/bcg6i.jpg?s=128&g=1", "display_name": "errfrom", "link": "https://stackoverflow.com/users/7252948/errfrom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 836, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1502021781, "creation_date": 1502021781, "question_id": 45531957, "link": "https://stackoverflow.com/questions/45531957/not-allowed-to-load-local-resource-webkit", "title": "Not allowed to load local resource (Webkit)", "body": "<p>I'm writing app based on webkit (haskell).<br>\nI ran into unpleasant stuff: When I try to load image via 'file:', I get this console message: <code>Not allowed to load local resource: file://resources/something.svg</code>.  </p>\n\n<p>To fix it I wrote a few lines of code:</p>\n\n<pre><code>wvSettings &lt;- webViewGetWebSettings webView\nset wvSettings [webSettingsEnableUniversalAccessFromFileUris := True]\nwebViewSetWebSettings webView wvSettings\n</code></pre>\n\n<p>But the problem remained. So what should I do?</p>\n"}, {"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1502002933, "post_id": 45529201, "comment_id": 78019263, "body": "Is that all? Because I don&#39;t see how an equation is a property of lists."}, {"owner": {"reputation": 323, "user_id": 1460740, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/42e14de97d7290976e639dd99b25f76b?s=128&d=identicon&r=PG", "display_name": "Yoshihiro Tanaka", "link": "https://stackoverflow.com/users/1460740/yoshihiro-tanaka"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1502014292, "post_id": 45529201, "comment_id": 78021847, "body": "@dfeuer Thank you for your comment, it made me think about &#39;universally quantified free variables&#39;."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1502014624, "post_id": 45529201, "comment_id": 78021926, "body": "This is sometimes called Scott-continuity, which is a key notion for the denotational semantics of programming languages."}], "answers": [{"comments": [{"owner": {"reputation": 323, "user_id": 1460740, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/42e14de97d7290976e639dd99b25f76b?s=128&d=identicon&r=PG", "display_name": "Yoshihiro Tanaka", "link": "https://stackoverflow.com/users/1460740/yoshihiro-tanaka"}, "edited": false, "score": 0, "creation_date": 1508044095, "post_id": 45531154, "comment_id": 80449577, "body": "Thank you @chi, I just found an interesting link regarding denotational semantics <a href=\"https://en.wikibooks.org/wiki/Haskell/Denotational_semantics\" rel=\"nofollow noreferrer\">here</a>."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 6, "last_activity_date": 1502016066, "creation_date": 1502016066, "answer_id": 45531154, "question_id": 45529201, "link": "https://stackoverflow.com/questions/45529201/what-is-the-concept-of-chain-complete/45531154#45531154", "title": "What is the concept of Chain Complete?", "body": "<p>Here's an example.</p>\n\n<p>Suppose that you have an increasing sequence of lists <code>xs_1, xs_2, ...</code> with limit <code>xs</code>.</p>\n\n<p>For every <code>k</code>, we have that <code>map id xs_k</code> is equal to <code>xs_k</code>.</p>\n\n<p>By chain completeness (AKA Scott continuity) we get that <code>map id xs</code> is <code>xs</code>.</p>\n\n<p>This gives us a way to prove properties on limit lists <code>xs</code>, which may be infinite, by verifying them only on their approximations <code>xs_k</code>.</p>\n\n<p>The intuition here is that, for <code>xs</code> to be a limit list, each <code>xs_k</code> must be equal to <code>xs</code> or some shorter prefix of the form <code>x1:x2:...:xn:undefined</code>. Note the undefined tail, representing a looping computation (e.g. infinite recursion). Because of this, if we compare <code>f xs_k</code> and <code>f xs</code>, we find that the latter must be at least as terminating as the former. The general idea here is that if we pass a more or as defined input we get a more or as defined output. Mathematically, this notion is captured by monotonicity on the Scott ordering.</p>\n\n<p>Scott omega-continuity, or chain completeness, goes further. It tells us the <code>f xs</code> is exactly the same a the limit of the sequence <code>f xs_k</code>. The final result is approximated by the results of <code>f</code> on the approximations. In rough words, you can make the output converge by making the input converge.</p>\n\n<p>Inequality does not work in a chain complete fashion. Indeed, take <code>xs = [0..]</code> as an infinite list, and approximations <code>xs_k = 0:...:k:undefined</code>. It is clear that <code>xs_k</code> is not equal to <code>xs</code>, for each <code>k</code>. But we do not take the limit of that inequality, which would state that <code>xs</code> is not equal to <code>xs</code>.</p>\n\n<p>Concluding, the topic here is quite broad. If you are interested, I'd suggest you read about denotational semantics, for instance reading the Winskel's book.</p>\n"}], "owner": {"reputation": 323, "user_id": 1460740, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/42e14de97d7290976e639dd99b25f76b?s=128&d=identicon&r=PG", "display_name": "Yoshihiro Tanaka", "link": "https://stackoverflow.com/users/1460740/yoshihiro-tanaka"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 426, "favorite_count": 3, "accepted_answer_id": 45531154, "answer_count": 1, "score": 7, "last_activity_date": 1502016066, "creation_date": 1502000564, "question_id": 45529201, "link": "https://stackoverflow.com/questions/45529201/what-is-the-concept-of-chain-complete", "title": "What is the concept of Chain Complete?", "body": "<p>I'm reading the book called 'Thinking Functionally with Haskell' by Richard Bird, and encountered the notion of <em>Chain Complete</em> regarding induction over infinite lists.\nIt says:</p>\n\n<blockquote>\n  <p>A property P is called chain complete if whenever xs0, xs1,... is a sequence of partial lists with limit xs, and P(xsn) holds for all n, then P(xs) also holds.</p>\n</blockquote>\n\n<p>As an example of chain complete property, it says:</p>\n\n<blockquote>\n  <p>All equations e1 = e2, where e1 and e2 are Haskell expressions involving universally quantified free variables, are chain complete.</p>\n</blockquote>\n\n<p>I'm having trouble to understand how this example fits the property of chain complete here. And it also states inequalities e1 =/= e2 are not necessarily chain complete. How do I understand these properties in terms of this <em>Chain Complete</em>-ness ?</p>\n\n<p>By the way this may not necessarily be a question regarding Haskell, but a question in terms of mathematics. </p>\n"}, {"tags": ["list", "haskell"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 3, "creation_date": 1502003014, "post_id": 45528688, "comment_id": 78019282, "body": "Please type in the text in the body of your question. Images of text are inaccessible to many people and to all search engines."}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 1, "creation_date": 1502020014, "post_id": 45528688, "comment_id": 78023332, "body": "<i>If you come across an error post its  text (post, post); if you come across an error post its text (post, post); if you come across an error, and it&#39;s making nothing clearer, if you come across an error post its text.</i> Always add error messages to your question. Otherwise it&#39;s like asking for a code review without code."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1502029598, "post_id": 45528688, "comment_id": 78025969, "body": "Please add the rest of the necessary text and remove the image, which will then be unnecessary."}], "answers": [{"tags": [], "owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "is_accepted": false, "score": 1, "last_activity_date": 1502020707, "creation_date": 1502020707, "answer_id": 45531811, "question_id": 45528688, "link": "https://stackoverflow.com/questions/45528688/printing-sum-of-non-abundant-numbers-in-haskell/45531811#45531811", "title": "Printing sum of non abundant numbers in haskell", "body": "<p>You have two problems. One is largely mathematical and one is largely about Haskell semantics. Both stem from a lack of care and clarity of thought; you should think more carefully and slowly about how to write a program which does less work to get to the answer. I'm not going to write down any solution or correct version (indeed project Euler discourages sharing solutions) as that won't help you and it won't help anyone who comes across this by google.</p>\n\n<p>In your sum in <code>main</code> you're counting some numbers multiple times. For example $1+2+4+5+10=21>20$ so 20 is abundant. Your list includes $32=12+20=20+12$ at least twice. Note <code>[32,32] /= [32]</code>. Also note that this isn't just an issue with counting $x+y$ and $y+x$, there might be some numbers which are the sum of two ambiguous in two (non-trivially) different ways.</p>\n\n<p>Due to the nature of list comprehensions in Haskell, in <code>main</code>, <code>x</code> will only ever take a value of <code>1</code> as the values considered are <code>(x,y)=(1,1),(1,2),(1,3),(1,4),...</code> and then each of those values is tested. There is a point after which all values are rejected as <code>x+y&gt;=28124</code> but you never move on to the next <code>x</code> value. Indeed all values are rejected as <code>1</code> is not abundant. Try changing <code>[1..]</code> to <code>[1..n]</code> where <code>n</code> is something you should decide on. Alternatively, change it to a list of abundant numbers up to some limit. Cf <code>takeWhile</code> and <code>filter</code></p>\n"}], "owner": {"reputation": 43, "user_id": 8289587, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-t8_MyqkcJbs/AAAAAAAAAAI/AAAAAAAAABo/EbHcX_jtC-g/photo.jpg?sz=128", "display_name": "VVV", "link": "https://stackoverflow.com/users/8289587/vvv"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 223, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1502037330, "creation_date": 1501995651, "last_edit_date": 1592644375, "question_id": 45528688, "link": "https://stackoverflow.com/questions/45528688/printing-sum-of-non-abundant-numbers-in-haskell", "title": "Printing sum of non abundant numbers in haskell", "body": "<p>This is a Project Euler Problem 23: Non-abundant Sums.</p>\n<blockquote>\n<p>A perfect number is a number for which the sum of its proper divisors is exactly equal to the number. For example, the sum of the proper divisors of 28 would be 1 + 2 + 4 + 7 + 14 = 28, which means that 28 is a perfect number.</p>\n<p>A number n is called deficient if the sum of its proper divisors is less than n and it is called abundant if this sum exceeds n.</p>\n<p>As 12 is the smallest abundant number, 1 + 2 + 3 + 4 + 6 = 16, the smallest number that can be written as the sum of two abundant numbers is 24. By mathematical analysis, it can be shown that all integers greater than 28123 can be written as the sum of two abundant numbers. However, this upper limit cannot be reduced any further by analysis even though it is known that the greatest number that cannot be expressed as the sum of two abundant numbers is less than this limit.</p>\n<p>Find the sum of all the positive integers which cannot be written as the sum of two abundant numbers.</p>\n</blockquote>\n<p>Here the <code>sumOfPD</code> function returns the sum of proper divisors.</p>\n<p>I wrote the following code which doesn't work.</p>\n<pre><code>sumOfPD :: Integral a =&gt; a -&gt; a \nsumOfPD x = sum([y | y &lt;- [1..x], rem x y == 0]) - x\n\nmain = do\n print (sum ([x + y | x &lt;- [1..], y &lt;- [1..], x + y &lt; 28124, sumOfPD x &lt;= x, sumOfPD y &lt;= y]))\n</code></pre>\n<p>I'm new to Haskell. Please help me resolve error.</p>\n"}, {"tags": ["haskell", "cabal", "cabal-install", "leksah"], "comments": [{"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 1, "creation_date": 1501996489, "post_id": 45528610, "comment_id": 78017926, "body": "I don&#39;t think you are following the right instructions: <a href=\"https://github.com/leksah/leksah#building-from-source\" rel=\"nofollow noreferrer\">github.com/leksah/leksah#building-from-source</a>"}, {"owner": {"reputation": 5661, "user_id": 2541276, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/100001587714573/picture?type=large", "display_name": "Rajkumar Natarajan", "link": "https://stackoverflow.com/users/2541276/rajkumar-natarajan"}, "reply_to_user": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 0, "creation_date": 1501998072, "post_id": 45528610, "comment_id": 78018223, "body": "sibi- I followed the steps and got the same error"}, {"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 0, "creation_date": 1501998293, "post_id": 45528610, "comment_id": 78018273, "body": "Can you try the stack variant of the installation process ?"}, {"owner": {"reputation": 5661, "user_id": 2541276, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/100001587714573/picture?type=large", "display_name": "Rajkumar Natarajan", "link": "https://stackoverflow.com/users/2541276/rajkumar-natarajan"}, "reply_to_user": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 0, "creation_date": 1501999598, "post_id": 45528610, "comment_id": 78018523, "body": "@Sibi - stack variant works !!! But I think its worth try to look into what is the issue using cabal."}, {"owner": {"reputation": 630, "user_id": 6707737, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/bc7b6d3815e8d4e653eea177739b3558?s=128&d=identicon&r=PG&f=1", "display_name": "Yan.F", "link": "https://stackoverflow.com/users/6707737/yan-f"}, "edited": false, "score": 0, "creation_date": 1577295869, "post_id": 45528610, "comment_id": 105137977, "body": "Newcomers: don&#39;t use Leksah, it&#39;s buggy and dead."}], "answers": [{"tags": [], "owner": {"reputation": 3248, "user_id": 1262542, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b7cf2d499caed8b2c28ccc311ddffaeb?s=128&d=identicon&r=PG", "display_name": "Stefan Hanke", "link": "https://stackoverflow.com/users/1262542/stefan-hanke"}, "is_accepted": true, "score": 2, "last_activity_date": 1507701436, "creation_date": 1507701436, "answer_id": 46680802, "question_id": 45528610, "link": "https://stackoverflow.com/questions/45528610/couldnt-install-leksah-on-ubuntu-16-10-using-cabal-1-24-0-2-ghc-8-2-1/46680802#46680802", "title": "couldn&#39;t install leksah on Ubuntu 16.10 using cabal 1.24.0.2/ghc 8.2.1", "body": "<p>Let's get the dependencies straight:</p>\n\n<ul>\n<li><code>leksah</code> has version <code>0.15.2</code>, which has been released ~18 months ago. It depends on a <code>base</code> package strictly lower than <code>4.9</code> (see also the <a href=\"https://github.com/leksah/leksah/blob/67c2f4b5e9bd831b328c69c84b14a0af33d325da/leksah.cabal\" rel=\"nofollow noreferrer\">version bump commit</a>).</li>\n<li><code>ghc</code> has version <code>8.2.1</code>. According to the <a href=\"https://downloads.haskell.org/~ghc/master/users-guide/8.2.1-notes.html\" rel=\"nofollow noreferrer\">release notes</a>, the <code>base</code> package has version <code>4.10.0.0</code>.</li>\n</ul>\n\n<p>You cannot install another base package - it is intrinsically linked to the ghc version (<a href=\"https://stackoverflow.com/questions/40022261/how-to-downgrade-base-with-cabal\">see this post</a>). Note that the version of the base package for <code>ghc 8.0.1</code> (<a href=\"https://downloads.haskell.org/~ghc/master/users-guide/8.0.1-notes.html#base\" rel=\"nofollow noreferrer\">release notes</a>) is<code>4.9.0.0</code>.</p>\n\n<hr>\n\n<p>So either</p>\n\n<ul>\n<li>install a haskell version prior to 8, bringing with it an older base package, or</li>\n<li>install <code>leksah</code> from its github source (<a href=\"https://github.com/leksah/leksah#building-from-source\" rel=\"nofollow noreferrer\">install instructions</a>), or</li>\n<li>work with the other contributors to perhaps release a <code>0.15.1</code> (or whatever) just bumping versions (provided it's still working of course).</li>\n</ul>\n\n<p>It looks weird though - there are commits in the last two weeks, however the <a href=\"https://github.com/leksah/leksah/wiki/download\" rel=\"nofollow noreferrer\">download</a> page mentions that they are planning a <code>0.16</code> version - this was half a year ago.</p>\n\n<hr>\n\n<p>I'm kind of wondering why there is an upper limit on <code>ghc</code>s minor version - currently the <a href=\"https://github.com/leksah/leksah/blob/master/leksah.cabal\" rel=\"nofollow noreferrer\">version requirement</a> is set to base <code>&gt;=4.0.0.0 &amp;&amp; &lt;4.11</code>. So when a <code>ghc next</code> bumps the <code>base</code> package again, the same problem arises. So <code>leksah</code> is pretty much locked to the <code>ghc</code> release cycle.</p>\n"}], "owner": {"reputation": 5661, "user_id": 2541276, "user_type": "registered", "accept_rate": 55, "profile_image": "https://graph.facebook.com/100001587714573/picture?type=large", "display_name": "Rajkumar Natarajan", "link": "https://stackoverflow.com/users/2541276/rajkumar-natarajan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 318, "favorite_count": 1, "accepted_answer_id": 46680802, "answer_count": 1, "score": 4, "last_activity_date": 1507780634, "creation_date": 1501994774, "last_edit_date": 1507780634, "question_id": 45528610, "link": "https://stackoverflow.com/questions/45528610/couldnt-install-leksah-on-ubuntu-16-10-using-cabal-1-24-0-2-ghc-8-2-1", "title": "couldn&#39;t install leksah on Ubuntu 16.10 using cabal 1.24.0.2/ghc 8.2.1", "body": "<p>I'm trying to install leksah as my development environment using cabal but I ran into errors.</p>\n\n<pre><code>user@home:~$ cabal install leksah\nResolving dependencies...\ncabal: Could not resolve dependencies:\ntrying: leksah-0.15.2.0 (user goal)\nnext goal: base (dependency of leksah-0.15.2.0)\nrejecting: base-4.10.0.0/installed-4.1... (conflict: leksah =&gt; base&gt;=4.0.0.0 &amp;&amp; &lt;4.9)\nrejecting: base-4.10.0.0, base-4.9.1.0, base-4.9.0.0, base-4.8.2.0,\nbase-4.8.1.0, base-4.8.0.0, base-4.7.0.2, base-4.7.0.1, base-4.7.0.0,\nbase-4.6.0.1, base-4.6.0.0, base-4.5.1.0, base-4.5.0.0, base-4.4.1.0,\nbase-4.4.0.0, base-4.3.1.0, base-4.3.0.0, base-4.2.0.2, base-4.2.0.1,\nbase-4.2.0.0, base-4.1.0.0, base-4.0.0.0, base-3.0.3.2, base-3.0.3.1\n(constraint from non-upgradeable package requires installed instance)\nBackjump limit reached (currently 2000, change with --max-backjumps or \ntry to run with --reorder-goals).\n</code></pre>\n\n<p>other detauls regarding haskell install in my machine are as follows -</p>\n\n<pre><code>user@home:~$ ghci --version\nThe Glorious Glasgow Haskell Compilation System, version 8.2.1\nuser@home:~$ cabal --version\ncabal-install version 1.24.0.2\ncompiled using version 1.24.2.0 of the Cabal library \nuser@home:~$ stack --version\nVersion 1.3.2, Git revision 3f675146590da4f3edf768b89355f798229da2a5 (4395 commits) x86_64 hpack-0.15.0\n</code></pre>\n\n<p>Any suggestions to resolve these errors?</p>\n"}, {"tags": ["haskell", "dependencies", "haskell-snap-framework"], "comments": [{"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1501977509, "post_id": 45524455, "comment_id": 78014991, "body": "Hurt you later?"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1501979394, "post_id": 45524455, "comment_id": 78015320, "body": "It&#39;s unclear what you&#39;re asking here. The title and first paragraph of the question seems to imply you are running into issues with dependencies of your project. But then you state you&#39;ve solved this problem and ask a different (very vague) question about whether a particular library will somehow be harmful to your project."}, {"owner": {"reputation": 1953, "user_id": 899723, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f68bcc2d6f5196fa090d578eb8356b9c?s=128&d=identicon&r=PG", "display_name": "mac10688", "link": "https://stackoverflow.com/users/899723/mac10688"}, "edited": false, "score": 0, "creation_date": 1501982856, "post_id": 45524455, "comment_id": 78015856, "body": "I tried revamping my question. I hope it makes sense now"}], "answers": [{"tags": [], "owner": {"reputation": 1953, "user_id": 899723, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f68bcc2d6f5196fa090d578eb8356b9c?s=128&d=identicon&r=PG", "display_name": "mac10688", "link": "https://stackoverflow.com/users/899723/mac10688"}, "is_accepted": false, "score": 0, "last_activity_date": 1502042972, "creation_date": 1502042972, "answer_id": 45535100, "question_id": 45524455, "link": "https://stackoverflow.com/questions/45524455/swapping-dependencies-with-snap/45535100#45535100", "title": "Swapping dependencies with Snap", "body": "<p>After going through the git repository for snap-templates, I found that the <a href=\"https://github.com/snapframework/snap-templates/blob/master/project_template/barebones/foo.cabal\" rel=\"nofollow noreferrer\">template file</a> doesn't even reference a MonadCatchIO-transformers. It seems whatever I downloaded with cabal install snap-templates isn't the current source code.</p>\n\n<p>I have asked them to update hackage in an issue request.</p>\n"}], "owner": {"reputation": 1953, "user_id": 899723, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f68bcc2d6f5196fa090d578eb8356b9c?s=128&d=identicon&r=PG", "display_name": "mac10688", "link": "https://stackoverflow.com/users/899723/mac10688"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 58, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1502042972, "creation_date": 1501952834, "last_edit_date": 1501980743, "question_id": 45524455, "link": "https://stackoverflow.com/questions/45524455/swapping-dependencies-with-snap", "title": "Swapping dependencies with Snap", "body": "<p>I started working on a new snap barebones project with stack. When I stack init, it resolves to an older ghc compiler. When I upgraded the compiler, I got errors for the MonadCatchIO-transformer dependency. I went <a href=\"https://hackage.haskell.org/package/MonadCatchIO-transformers\" rel=\"nofollow noreferrer\">MonadCatchIO docs</a> they say it is deprecated for <a href=\"https://hackage.haskell.org/package/exceptions\" rel=\"nofollow noreferrer\">exceptions library</a>. So I replaced the dependency in my cabal file and was able to get my project to build and run hello world.</p>\n\n<p>I want to know if I should expect errors later on in the Snap framework if/when I get more complex than a hello world project.</p>\n\n<p>Why was MonadCatchIO-transformer part of the barebones template if it isn't necessary and several years obsolete.</p>\n"}, {"tags": ["haskell", "hspec"], "answers": [{"comments": [{"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1501988522, "post_id": 45526916, "comment_id": 78016610, "body": "Thanks this is what I was looking for. I think you have an error and it should be <code>--format=failed-examples</code>. Can this be run with <code>stack test</code>?"}, {"owner": {"reputation": 20862, "user_id": 376113, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/d3a5bd12fe6d876527a3cf4ac0de5fc6?s=128&d=identicon&r=PG", "display_name": "mb14", "link": "https://stackoverflow.com/users/376113/mb14"}, "reply_to_user": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1502054224, "post_id": 45526916, "comment_id": 78033467, "body": "Updated my answer."}], "tags": [], "owner": {"reputation": 20862, "user_id": 376113, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/d3a5bd12fe6d876527a3cf4ac0de5fc6?s=128&d=identicon&r=PG", "display_name": "mb14", "link": "https://stackoverflow.com/users/376113/mb14"}, "is_accepted": true, "score": 2, "last_activity_date": 1509352473, "last_edit_date": 1509352473, "creation_date": 1501972243, "answer_id": 45526916, "question_id": 45523717, "link": "https://stackoverflow.com/questions/45523717/hspec-how-to-suppress-successful-test-results/45526916#45526916", "title": "Hspec: How to suppress successful test results", "body": "<p>Have you try <code>--format=failed-examples</code> ? Also the <a href=\"http://hspec.github.io/rerun.html\" rel=\"nofollow noreferrer\">rerun</a> feature allows to only run (and therefore displays) the failing test (from the previous run).</p>\n\n<p>To use it with stack, you can use the <code>--test-arguments</code> argument</p>\n\n<pre><code> stack test --test-arguments --format=failed-examples\n</code></pre>\n\n<p>Or modify the <code>.hspec</code> file using <code>echo --format=failed-examples &gt;&gt; .hspec</code>. You can find <a href=\"http://hspec.github.io/options.html\" rel=\"nofollow noreferrer\">here</a> all the differnt ways to specify arguments hspec.</p>\n"}], "owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 120, "favorite_count": 0, "accepted_answer_id": 45526916, "answer_count": 1, "score": 3, "last_activity_date": 1509352473, "creation_date": 1501947996, "last_edit_date": 1502197508, "question_id": 45523717, "link": "https://stackoverflow.com/questions/45523717/hspec-how-to-suppress-successful-test-results", "title": "Hspec: How to suppress successful test results", "body": "<p>Is there anyway to prevent successful tests from being printed out to screen?\nAt the moment I have a lot of tests with really long inputs and I only really care about seeing the fails?</p>\n\n<p><em>Edit: I am running my tests with</em> <code>stack test</code></p>\n\n<p><strong>Solution:</strong></p>\n\n<p>Thanks to the answer from @mb14, I was able to search for what I was looking for.</p>\n\n<p>running your test file directly:</p>\n\n<p>you can use:</p>\n\n<pre><code>runhaskell testfile.hs --format=failed-examples\n</code></pre>\n\n<p>or</p>\n\n<pre><code>runhaskell testfile.hs -f failed-examples\n</code></pre>\n\n<p>and to run via <code>stack test</code>:</p>\n\n<pre><code>stack test --test-arguments=--format=failed-examples\n</code></pre>\n\n<p><a href=\"https://hspec.github.io/options.html\" rel=\"nofollow noreferrer\">source</a></p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1501947451, "post_id": 45523507, "comment_id": 78007362, "body": "<code>lastDigit [27,15,14]</code> gives me <code>7</code>."}, {"owner": {"reputation": 49, "user_id": 6473325, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/83a984b18bddba398c7bea7cfc0e3305?s=128&d=identicon&r=PG&f=1", "display_name": "Amateur", "link": "https://stackoverflow.com/users/6473325/amateur"}, "reply_to_user": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1501947571, "post_id": 45523507, "comment_id": 78007393, "body": "Thanks Xia. That should be the answer. Could it be something with my settings? I&#39;m running a 64-bit machine"}, {"owner": {"reputation": 49, "user_id": 6473325, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/83a984b18bddba398c7bea7cfc0e3305?s=128&d=identicon&r=PG&f=1", "display_name": "Amateur", "link": "https://stackoverflow.com/users/6473325/amateur"}, "reply_to_user": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1501947987, "post_id": 45523507, "comment_id": 78007493, "body": "Or might there be any Int overflow issues that I have overlooked?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1501948193, "post_id": 45523507, "comment_id": 78007547, "body": "@Amateur: have you perhaps forgot to reload the file?"}, {"owner": {"reputation": 49, "user_id": 6473325, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/83a984b18bddba398c7bea7cfc0e3305?s=128&d=identicon&r=PG&f=1", "display_name": "Amateur", "link": "https://stackoverflow.com/users/6473325/amateur"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1501948555, "post_id": 45523507, "comment_id": 78007653, "body": "@Willem: I reloaded. That&#39;t not the issue. Try: lastDigit [2,11,32] as well and let me know if it works. Getting &#39;negative index&quot;"}, {"owner": {"reputation": 49, "user_id": 6473325, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/83a984b18bddba398c7bea7cfc0e3305?s=128&d=identicon&r=PG&f=1", "display_name": "Amateur", "link": "https://stackoverflow.com/users/6473325/amateur"}, "edited": false, "score": 0, "creation_date": 1501949028, "post_id": 45523507, "comment_id": 78007799, "body": "If it matters, I&#39;m using GHC 7.10.3. Is anyone else facing the same issue when they run this code?"}, {"owner": {"reputation": 49, "user_id": 6473325, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/83a984b18bddba398c7bea7cfc0e3305?s=128&d=identicon&r=PG&f=1", "display_name": "Amateur", "link": "https://stackoverflow.com/users/6473325/amateur"}, "edited": false, "score": 0, "creation_date": 1501949190, "post_id": 45523507, "comment_id": 78007837, "body": "Both test cases?"}, {"owner": {"reputation": 52741, "user_id": 555045, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/182d0ce855c8324a596648c04643e8f9?s=128&d=identicon&r=PG", "display_name": "nicomp", "link": "https://stackoverflow.com/users/555045/nicomp"}, "edited": false, "score": 0, "creation_date": 1501949262, "post_id": 45523507, "comment_id": 78007855, "body": "Actually no, I tried [2,11,32] now and that didn&#39;t work"}, {"owner": {"reputation": 49, "user_id": 6473325, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/83a984b18bddba398c7bea7cfc0e3305?s=128&d=identicon&r=PG&f=1", "display_name": "Amateur", "link": "https://stackoverflow.com/users/6473325/amateur"}, "edited": false, "score": 0, "creation_date": 1501949292, "post_id": 45523507, "comment_id": 78007867, "body": "Negative index, i hope?"}, {"owner": {"reputation": 52741, "user_id": 555045, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/182d0ce855c8324a596648c04643e8f9?s=128&d=identicon&r=PG", "display_name": "nicomp", "link": "https://stackoverflow.com/users/555045/nicomp"}, "edited": false, "score": 0, "creation_date": 1501949459, "post_id": 45523507, "comment_id": 78007909, "body": "Yes, if I change <code>rem</code> to <code>mod</code> that goes away, I might just be masking symptoms here but that seems involved somehow."}, {"owner": {"reputation": 49, "user_id": 6473325, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/83a984b18bddba398c7bea7cfc0e3305?s=128&d=identicon&r=PG&f=1", "display_name": "Amateur", "link": "https://stackoverflow.com/users/6473325/amateur"}, "edited": false, "score": 0, "creation_date": 1501949788, "post_id": 45523507, "comment_id": 78007979, "body": "Thanks Harold. This is what I was looking for. It works now!!"}], "answers": [{"comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1501993214, "post_id": 45526993, "comment_id": 78017339, "body": "&quot;Implicit <code>Int</code> conversion&quot; isn&#39;t quite what&#39;s going on -- Haskell has no implicit conversions.  It&#39;s just that <code>(!!)</code> takes specifically an <code>Int</code> as the index, so it forces other type variables to be <code>Int</code> when they would otherwise be unconstrained <code>Num</code>s and thus defaulted to <code>Integer</code>.  This can be confusing for sure."}], "tags": [], "owner": {"reputation": 412, "user_id": 6593641, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xVNVQ.jpg?s=128&g=1", "display_name": "madnight", "link": "https://stackoverflow.com/users/6593641/madnight"}, "is_accepted": false, "score": 1, "last_activity_date": 1502009116, "last_edit_date": 1502009116, "creation_date": 1501973166, "answer_id": 45526993, "question_id": 45523507, "link": "https://stackoverflow.com/questions/45523507/haskell-last-digit-of-a-very-large-number/45526993#45526993", "title": "Haskell: last digit of a very large number", "body": "<p>You should be very specific about the types, otherwise they might get implicit converted during calculations. If you add Int type to your algorithm, ghc will not complain and run into an negative index exception</p>\n\n<pre><code>(fromIntegral $ powers (y:ys)) 2 :: Int)\n</code></pre>\n\n<p>but if you provide </p>\n\n<pre><code>(fromIntegral $ powers (y:ys)) 2 :: Integer)\n</code></pre>\n\n<p>it will result in</p>\n\n<pre><code>\u2022 Couldn't match expected type \u2018Int\u2019 with actual type \u2018Integer\u2019\n\u2022 In the second argument of \u2018(!!)\u2019, namely\n    \u2018(rem (fromIntegral $ powers (y : ys)) 2 :: Integer)\u2019\n</code></pre>\n\n<p>As you can see you have an implicit Int conversion there. Try to split up your function into smaller ones and provide a type signature, then you should be able to successfully align the types and calculate with Integers instead of Int.</p>\n"}], "owner": {"reputation": 49, "user_id": 6473325, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/83a984b18bddba398c7bea7cfc0e3305?s=128&d=identicon&r=PG&f=1", "display_name": "Amateur", "link": "https://stackoverflow.com/users/6473325/amateur"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 766, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1502009116, "creation_date": 1501946551, "last_edit_date": 1501948489, "question_id": 45523507, "link": "https://stackoverflow.com/questions/45523507/haskell-last-digit-of-a-very-large-number", "title": "Haskell: last digit of a very large number", "body": "<p>I'm trying to work out the last digit of a very large number. The challenge is that I'm getting the error </p>\n\n<pre><code>*** Exception: Prelude.!!: negative index\n</code></pre>\n\n<p>which I don't think should be possible. This happens when I try:    </p>\n\n<pre><code>lastDigit [27,15,14]\n</code></pre>\n\n<p>Here is my code, which is based on <a href=\"https://brilliant.org/wiki/finding-the-last-digit-of-a-power/\" rel=\"nofollow noreferrer\">https://brilliant.org/wiki/finding-the-last-digit-of-a-power/</a>: </p>\n\n<p>In this case, n becomes 7 and modList 7 gives the recurring sequence [1,7,9,3,1,7,9,3...], which is the first argument of (!!) in the relevant guard. The second argument of (!!) gives 1 because (y:ys) is (15,14) and rem (powers (15 ^ 14)) 4 is 1. Please help.</p>\n\n<pre><code>lastDigit :: [Integer] -&gt; Integer \nlastDigit [] = 1 \nlastDigit [x] = x `mod` 10 \nlastDigit [x,y] = x ^ y `mod` 10\nlastDigit (x:y:ys) \n | y == 0 &amp;&amp; head ys /= 0 = 1\n | n == 0 = 0\n | n == 9 || n == 4 = (!!) (modList n) (rem (fromIntegral $ powers (y:ys)) 2) \n | n == 2 || n == 3 || n == 7 || n == 8 = (!!) (modList n) (rem (fromIntegral $ powers (y:ys)) 4)\n | otherwise = n\n    where n = mod x 10 \n         powers xs = foldr1 (^) xs\n         modList n = drop 3 . take 30 $ cycle [mod x 10| x &lt;- map (n^) $ take 4 [1..]]\n</code></pre>\n"}, {"tags": ["haskell", "filesystems", "file-permissions"], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 2, "last_activity_date": 1501945649, "last_edit_date": 1501945649, "creation_date": 1501945302, "answer_id": 45523321, "question_id": 45523212, "link": "https://stackoverflow.com/questions/45523212/how-can-i-check-file-permissions-of-a-linux-file-using-haskell/45523321#45523321", "title": "How can I check file permissions of a Linux file using Haskell?", "body": "<p>Well <code>FileMode</code> is a type alias for <a href=\"http://hackage.haskell.org/package/base-4.10.0.0/docs/System-Posix-Types.html#t:CMode\" rel=\"nofollow noreferrer\"><strong><code>CMode</code></strong></a> with is a 32-bit number. The package further contains constants like <code>ownerReadMode</code>, <code>ownerWriteMode</code>, <code>ownerExecuteMode</code>; <code>groupReadMode</code>, <code>groupWriteMode</code>, <code>groupExecuteMode</code>; <code>otherReadMode</code>, <code>otherWriteMode</code> and <code>otherExecuteMode</code>.</p>\n\n<p>You can use <a href=\"http://hackage.haskell.org/package/unix-2.7.2.2/docs/System-Posix-Files-ByteString.html#v:intersectFileModes\" rel=\"nofollow noreferrer\"><strong><code>intersectFileModes :: FileMode -&gt; FileMode -&gt; FileMode</code></strong></a> to determine the intersection. If the intersection with one of the constants is the same as that constant, then the file has that mode.</p>\n\n<p>For example:</p>\n\n<pre><code>import System.Posix.Files(getFileStatus,fileMode,ownerReadMode)\nimport System.Posix.Files.ByteString(intersectFileModes)\n\nmain = do\n    fs &lt;- getFileStatus \"foo.file\"\n    if intersectFileModes (fileMode fs) ownerReadMode == ownerReadMode\n        then print \"owner can read\"\n        else print \"owner can not read\"\n</code></pre>\n\n<p>To make it more convenient, we can define a function:</p>\n\n<pre><code>import System.Posix.Types(FileMode)\nimport System.Posix.Files.ByteString(intersectFileModes)\n\nhasMode :: FileMode -&gt; FileMode -&gt; Bool\nhasMode fa fb = intersectFileModes fa fb == fa\n</code></pre>\n\n<p>So then function <code>hasMode ownerReadMode</code> will check a filemode and return <code>True</code> if the filemode contains that permission, otherwise <code>False</code>.</p>\n\n<p>Now we can rewrite the above program as:</p>\n\n<pre><code>import System.Posix.Types(FileMode)\nimport System.Posix.Files(getFileStatus,fileMode,ownerReadMode)\nimport System.Posix.Files.ByteString(intersectFileModes)\n\nhasMode :: FileMode -&gt; FileMode -&gt; Bool\nhasMode fa fb = intersectFileModes fa fb == fa\n\nmain = do\n    fs &lt;- getFileStatus \"../README.md\"\n    if hasMode ownerReadMode (fileMode fs)\n        then print \"owner can read\"\n        else print \"owner can not read\"\n</code></pre>\n"}], "owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 180, "favorite_count": 0, "accepted_answer_id": 45523321, "answer_count": 1, "score": 1, "last_activity_date": 1501945649, "creation_date": 1501944573, "question_id": 45523212, "link": "https://stackoverflow.com/questions/45523212/how-can-i-check-file-permissions-of-a-linux-file-using-haskell", "title": "How can I check file permissions of a Linux file using Haskell?", "body": "<p>How can I determine whether a file has write / read / executable permissions for the owner of a file?</p>\n\n<p>I've found <code>FileMode</code>\n<a href=\"http://hackage.haskell.org/package/base-4.10.0.0/docs/System-Posix-Types.html#t:FileMode\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/base-4.10.0.0/docs/System-Posix-Types.html#t:FileMode</a>, but I can't seem to find a simple way to determine the permissions.</p>\n"}, {"tags": ["haskell", "yesod", "persistent"], "answers": [{"tags": [], "owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "is_accepted": false, "score": 2, "last_activity_date": 1501950525, "last_edit_date": 1501950525, "creation_date": 1501927552, "answer_id": 45520654, "question_id": 45520171, "link": "https://stackoverflow.com/questions/45520171/yesod-how-to-log-query-time-in-the-terminal-or-other-tool/45520654#45520654", "title": "Yesod: How to log query time in the terminal or other tool?", "body": "<p>The <a href=\"https://www.stackage.org/package/ekg\" rel=\"nofollow noreferrer\">ekg related packages</a> are the one usually used to monitor application level statistics in Yesod (or any other Haskell web framework for that matter). This is a <a href=\"https://maxgabriel.github.io/ekg-yesod/\" rel=\"nofollow noreferrer\">good guide</a> for you to start. But for getting statistics related to the query from <code>persistent</code>, I think <a href=\"https://www.stackage.org/package/criterion\" rel=\"nofollow noreferrer\">criterion</a> would be a better fit but it is an after benchmark tool. The flow would be to initially identifying bottleneck for the individual handlers via ekg and then do criterion benchmarks for the used functions in the handler to find the actual culprit.</p>\n"}], "owner": {"reputation": 71, "user_id": 3679331, "user_type": "registered", "profile_image": "https://graph.facebook.com/521210191/picture?type=large", "display_name": "ricardos", "link": "https://stackoverflow.com/users/3679331/ricardos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 92, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1501950525, "creation_date": 1501924026, "question_id": 45520171, "link": "https://stackoverflow.com/questions/45520171/yesod-how-to-log-query-time-in-the-terminal-or-other-tool", "title": "Yesod: How to log query time in the terminal or other tool?", "body": "<p>Is it possible to log the query time (execution) in Yesod or generally in persistent?</p>\n\n<p>I see that in the debug mode, I get in the terminal the query with its parameter. However I cannot see the total time of its execution, therefore I cannot spot slow queries by this method.</p>\n\n<p>Is there some kind of existing tool for visualization of the queries of a request? Instead of printing them in the terminal? Something similar to the \"debug bars\" of other frameworks?</p>\n"}, {"tags": ["haskell", "typeclass", "quickcheck"], "answers": [{"comments": [{"owner": {"reputation": 2908, "user_id": 131160, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Ns5R6.png?s=128&g=1", "display_name": "jcsahnwaldt Reinstate Monica", "link": "https://stackoverflow.com/users/131160/jcsahnwaldt-reinstate-monica"}, "edited": false, "score": 0, "creation_date": 1606352531, "post_id": 45520043, "comment_id": 114941658, "body": "After double eta conversion: <code>quickCheck . verbose $ forAll genRSA $ forAll genRSAMessage . prop_SignAndVerify</code> I find it nice and readable, but of course it&#39;s a matter of taste."}], "tags": [], "owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "is_accepted": false, "score": 8, "last_activity_date": 1501923139, "creation_date": 1501923139, "answer_id": 45520043, "question_id": 45519955, "link": "https://stackoverflow.com/questions/45519955/using-quickcheck-to-generate-multiple-arbitrary-parameters-for-a-given-function/45520043#45520043", "title": "Using QuickCheck to generate multiple arbitrary parameters for a given function", "body": "<p>You want to check <code>prop_SignAndVerify key message</code> for <s>all</s> many <code>key</code>s and <code>message</code>s. So if we had a fixed <code>key</code>, our tests would look like that:</p>\n\n<pre><code>main = do\n  quickCheck . verbose $ \n    let key = someGeneratedKey\n    in forAll genRSAMessage $ \\message -&gt;\n         prop_SignAndVerify key message\n</code></pre>\n\n<p>If we had a fixed <code>message</code>, our test would look like this:</p>\n\n<pre><code>main = do\n  quickCheck . verbose $ \n    forAll genRSAMessage $ \\key -&gt;\n      let message = someMessage\n      in prop_SignAndVerify key message\n</code></pre>\n\n<p>All we have to do is to combine both variants:</p>\n\n<pre><code>main = do\n  quickCheck . verbose $ \n    forAll genRSA        $ \\key -&gt;\n    forAll genRSAMessage $ \\message -&gt;\n      prop_SignAndVerify key message\n</code></pre>\n\n<p>You can get rid of the <code>message</code> due to eta conversion, but in my opinion tests should be easily readable.</p>\n"}, {"tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": true, "score": 2, "last_activity_date": 1502089678, "creation_date": 1502089678, "answer_id": 45541161, "question_id": 45519955, "link": "https://stackoverflow.com/questions/45519955/using-quickcheck-to-generate-multiple-arbitrary-parameters-for-a-given-function/45541161#45541161", "title": "Using QuickCheck to generate multiple arbitrary parameters for a given function", "body": "<p>You could take advantage of the monadic nature of <code>Gen</code> to compose a more complex <code>Gen</code> value from your property:</p>\n\n<pre><code>main =\n  let g = do\n            key &lt;- genRSA\n            message &lt;- genRSAMessage\n            return $ prop_SignAndVerify (Blind key) message\n  in quickCheck . verbose $ forAll g id\n</code></pre>\n\n<p>Here, <code>g</code> is a <code>Gen Bool</code> value.</p>\n\n<p>Alternatively, you can take advantage of the applicative nature of <code>Gen</code> and compose <code>g</code> using <code>&lt;*&gt;</code>:</p>\n\n<pre><code>main =\n  let g =\n        return (\\key message -&gt; prop_SignAndVerify (Blind key) message)\n        &lt;*&gt; genRSA\n        &lt;*&gt; genRSAMessage\n  in quickCheck . verbose $ forAll g id\n</code></pre>\n\n<p><code>g</code> is still a <code>Gen Bool</code> value here as well.</p>\n"}], "owner": {"reputation": 65, "user_id": 8391174, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/797a0860396f88883ef5fc0621c81f44?s=128&d=identicon&r=PG&f=1", "display_name": "plint", "link": "https://stackoverflow.com/users/8391174/plint"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 745, "favorite_count": 0, "accepted_answer_id": 45541161, "answer_count": 2, "score": 3, "last_activity_date": 1502089678, "creation_date": 1501922434, "question_id": 45519955, "link": "https://stackoverflow.com/questions/45519955/using-quickcheck-to-generate-multiple-arbitrary-parameters-for-a-given-function", "title": "Using QuickCheck to generate multiple arbitrary parameters for a given function", "body": "<p><strong>Context</strong></p>\n\n<p>I have the following function:</p>\n\n<pre><code>prop_SignAndVerify :: (PrivKey a b) =&gt; Blind a -&gt; BS.ByteString -&gt; Bool\nprop_SignAndVerify bsk msg = case verify pk msg sig of\n                             Left e -&gt; error e\n                             Right b -&gt; b\n  where\n    sk  = getBlind bsk\n    pk  = toPublic sk\n    sig = case sign sk msg of\n               Left e -&gt; error e\n               Right s -&gt; s\n</code></pre>\n\n<p>I would like to do something like:</p>\n\n<pre><code>-- instance PrivKey RSA.PrivateKey RSA.PublicKey where...\ngenRSA :: Gen RSA.PrivateKey\ngenRSAMessage :: Gen BS.ByteString\n\nmain = do\n  quickCheck . verbose \n  $ forAll genRSA \n  $ forAll genRSAMessage prop_SignAndVerify\n</code></pre>\n\n<p>That is, I would like to use explicit generators to generate arbitrary values for <code>Blind a</code> and <code>BS.ByteString</code> in the parameters of <code>prop_SignAndVerify</code>.</p>\n\n<p>The code above, however, doesn't work, because the function <code>forAll</code> has type signature:</p>\n\n<pre><code>forAll :: (Show a, Testable prop) =&gt; Gen a -&gt; (a -&gt; prop) -&gt; Property\n</code></pre>\n\n<p>This function runs the generator and apples the generated arbitrary value to <code>(a -&gt; prop)</code>, returning a <code>Property</code>. This <code>Property</code> however cannot be further partially applied; it hides the underlying function. </p>\n\n<p>I think what we need for the above to work would be something like:</p>\n\n<pre><code>forAll' :: (Show a,  Testable prop) =&gt; Gen a -&gt; (a -&gt; prop) -&gt; prop\n</code></pre>\n\n<p><strong>Question</strong></p>\n\n<p>So my question is, how can I use <code>genRSA</code> and <code>genRSAMessage</code> over the parameters of <code>prop_SignAndVerify</code>, or is there an alternative approach?</p>\n\n<p>Thanks</p>\n"}, {"tags": ["haskell", "haskell-stack"], "answers": [{"tags": [], "owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "is_accepted": true, "score": 2, "last_activity_date": 1501917109, "creation_date": 1501917109, "answer_id": 45519299, "question_id": 45519108, "link": "https://stackoverflow.com/questions/45519108/disable-specific-warnings-in-stack-build-pedantic/45519299#45519299", "title": "Disable specific warnings in Stack build --pedantic", "body": "<p>I confirmed that this works:</p>\n\n<pre><code>stack build --file-watch --pedantic --ghc-options -fno-warn-unused-imports\n</code></pre>\n\n<p>Note that you have to put <code>no</code> after <code>f</code>, so the ghc option for disabling it becomes <code>-fno-...</code></p>\n"}], "owner": {"reputation": 7435, "user_id": 4617597, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/b1Sdw.png?s=128&g=1", "display_name": "Marcelo Lazaroni", "link": "https://stackoverflow.com/users/4617597/marcelo-lazaroni"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 501, "favorite_count": 0, "accepted_answer_id": 45519299, "answer_count": 1, "score": 0, "last_activity_date": 1501917109, "creation_date": 1501915419, "question_id": 45519108, "link": "https://stackoverflow.com/questions/45519108/disable-specific-warnings-in-stack-build-pedantic", "title": "Disable specific warnings in Stack build --pedantic", "body": "<p>I want to compile my Haskell code in Stack using all warnings except for one, <code>-fwarn-unused-imports</code>. </p>\n\n<p>Is there an option for that?</p>\n"}, {"tags": ["haskell", "functional-programming", "functor"], "comments": [{"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 2, "creation_date": 1501899924, "post_id": 45517390, "comment_id": 77996501, "body": "Functors aren&#39;t aloud to make any structural changes (according to the law <code>fmap id = id</code>). So yes, you&#39;re right."}], "owner": {"reputation": 4639, "user_id": 3986708, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/g0JCF.jpg?s=128&g=1", "display_name": "hgiesel", "link": "https://stackoverflow.com/users/3986708/hgiesel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 55, "favorite_count": 0, "closed_date": 1501899784, "answer_count": 0, "score": 4, "last_activity_date": 1501896752, "creation_date": 1501896752, "question_id": 45517390, "link": "https://stackoverflow.com/questions/45517390/are-there-ever-more-than-one-possible-functor-instance-of-a-given-type", "closed_reason": "Duplicate", "title": "Are there ever more than one possible functor instance of a given type", "body": "<p>I have the feeling that, for any ADT, there is only ever one possible Functor instance.</p>\n\n<p>Because the function <code>(a -&gt; b)</code> for <code>fmap</code> only ever has one type to work with, and it always change all appearances of <code>a</code>, as it transforms <code>F a</code> to <code>F b</code>.</p>\n\n<p>Is this statement true?</p>\n"}, {"tags": ["haskell", "monads", "idioms", "io-monad"], "comments": [{"owner": {"reputation": 653, "user_id": 1589512, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/99c377c5d122f33e6d79298fce14a627?s=128&d=identicon&r=PG", "display_name": "mandark", "link": "https://stackoverflow.com/users/1589512/mandark"}, "reply_to_user": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 0, "creation_date": 1501878708, "post_id": 45514417, "comment_id": 77991405, "body": "I am not looking for a solution since I already have that. I want an idiomatic way to solve this."}, {"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 0, "creation_date": 1501878917, "post_id": 45514417, "comment_id": 77991530, "body": "I don&#39;t know if you&#39;ve read the answers yet, but <i>&quot;More generally, what function has type m1 m2 a -&gt; (a -&gt; m1 m2 b) -&gt; m1 m2 b?&quot;</i> is part of that duplicate question. The answer: it&#39;s impossible in the general case. See the second answer."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1501887252, "post_id": 45514417, "comment_id": 77994312, "body": "If you remove the type signatures on <code>f&#39;</code> and <code>f&#39;&#39;</code> and abstract <code>f</code> into a parameter, you&#39;ll get the most general type inferred by the typechecker. I would say these implementations are idiomatic, except perhaps the use of <code>do</code> notation instead of <code>&gt;&gt;=</code> and <code>fmap</code> but those are purely stylistic concerns. As it stands, this question is entirely opinion based - can you clarify what about your code is not good enough, i.e., what you&#39;d like to see the &#39;better&#39; version accomplish?"}], "answers": [{"tags": [], "owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "is_accepted": false, "score": 1, "last_activity_date": 1501887981, "creation_date": 1501887981, "answer_id": 45516609, "question_id": 45514417, "link": "https://stackoverflow.com/questions/45514417/idiomatic-way-to-implement-m-t-a-a-m-t-b-m-t-b/45516609#45516609", "title": "Idiomatic way to implement &quot;m (t a) -&gt; (a -&gt; m (t b)) -&gt; m (t b)&quot;", "body": "<p>The idiomatic solution would be to use <code>Data.Functor.Compose</code>:</p>\n\n<pre><code>data Compose f g a = Compose { getCompose :: f (g a) }\n</code></pre>\n\n<p>Since the function you're looking for is trivial to implement when <code>Compose f g</code> is a monad:</p>\n\n<pre><code>bibind :: Monad (Compose f g) =&gt; f (g a) -&gt; (a -&gt; f (g b)) -&gt; f (g b)\nbibind m h = getCompose (Compose m &gt;&gt;= Compose . h)\n</code></pre>\n\n<p>As well explained <a href=\"https://stackoverflow.com/a/29454112/9859\">in this answer</a>, it's not sufficient\nfor <code>f</code> and <code>g</code> to be <code>Monad</code>s, they also need to commute:</p>\n\n<pre><code>class Commute f g where\n  commute :: g (f x) -&gt; f (g x)\n\ninstance (Monad f, Monad g, Commute f g) =&gt; Monad (Compose f g) where\n  return = Compose . return . return\n  join = Compose .  fmap join .  join .  fmap commute . getCompose . fmap getCompose\n</code></pre>\n\n<p>(In general, <a href=\"https://stackoverflow.com/a/42298943/9859\">it's not sufficient for <code>f</code> to be a monad and <code>g</code> to be <code>Traversable</code></a>)</p>\n"}], "owner": {"reputation": 653, "user_id": 1589512, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/99c377c5d122f33e6d79298fce14a627?s=128&d=identicon&r=PG", "display_name": "mandark", "link": "https://stackoverflow.com/users/1589512/mandark"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112, "favorite_count": 0, "closed_date": 1501932549, "answer_count": 1, "score": 1, "last_activity_date": 1501887981, "creation_date": 1501875917, "question_id": 45514417, "link": "https://stackoverflow.com/questions/45514417/idiomatic-way-to-implement-m-t-a-a-m-t-b-m-t-b", "closed_reason": "Duplicate", "title": "Idiomatic way to implement &quot;m (t a) -&gt; (a -&gt; m (t b)) -&gt; m (t b)&quot;", "body": "<p>The <code>bind</code> function (<code>&gt;&gt;=</code>) has the signature:</p>\n\n<pre><code>m a -&gt; (a -&gt; m b) -&gt; m b\n</code></pre>\n\n<p>However, I want a function with the signature:</p>\n\n<pre><code>m (t a) -&gt; (a -&gt; m (t b)) -&gt; m (t b)\n</code></pre>\n\n<p>Specifically, I have a function that given an Integer, it returns a list of integers in within an IO:</p>\n\n<pre><code>f :: Int -&gt; IO [Int]\n</code></pre>\n\n<p>but I want to apply it to an <code>IO of list of Integers</code> and I can't use the regular bind function because it is wrapped in two containers i.e. a list contained in an IO. <a href=\"https://www.haskell.org/hoogle/?hoogle=m+%28t+a%29+-%3E+%28a+-%3E+m+%28t+b%29%29+-%3E+m+%28t+b%29\" rel=\"nofollow noreferrer\">Searching on hoogle</a> doesn't help.</p>\n\n<p>I am using the following approach to implement this:</p>\n\n<p>Let's say the implementation of the function is:</p>\n\n<pre><code>f :: Int -&gt; IO [Int]\nf x = do\n  return $ [x-10, x+10]\n</code></pre>\n\n<p>I am using two helper functions to get what I want:</p>\n\n<pre><code>f' :: [Int] -&gt; IO [Int]\nf' xs = do\n  list &lt;- traverse f xs\n  return $ join list\n\nf'' :: IO [Int] -&gt; IO [Int]\nf'' xs = do\n  ys &lt;- xs\n  f' ys\n</code></pre>\n\n<p>The above works but I would like to know if there is a better / idiomatic way to implement this in haskell?</p>\n"}, {"tags": ["parsing", "haskell", "applicative"], "comments": [{"owner": {"reputation": 129, "user_id": 8419073, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/65c24d556a9428e53b1a0eb0834c836f?s=128&d=identicon&r=PG&f=1", "display_name": "yaa", "link": "https://stackoverflow.com/users/8419073/yaa"}, "edited": false, "score": 0, "creation_date": 1501878382, "post_id": 45514315, "comment_id": 77991265, "body": "There is a little mistake in the definition of fmap. It is &quot;case parse p inp&quot; and not &quot;case p inp&quot;"}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1501881449, "post_id": 45514315, "comment_id": 77992599, "body": "Just submitted an edit to fix this (and some formatting)."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1501887510, "post_id": 45514315, "comment_id": 77994376, "body": "By examining the definition of <code>&lt;*&gt;</code>, can you see that first, the left-hand parser (<code>pg</code>) is applied to the input, and then the right hand-hand parser (<code>px</code>) is applied to the leftover string from applying the left-hand parser? Then, can you see that <code>item</code> is a parser which always consumes exactly one character? Then, can you see that <code>pure f</code> is a parser that consumes <i>no</i> input? I feel these three pieces are enough to put together the answer."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1502874307, "post_id": 45514315, "comment_id": 78376638, "body": "if you still have questions about this, if something is unclear, do tell us in the comments. otherwise, if the question have been answered to your satisfaction, it is customary to accept one of the answers that you feel was most helpful to you, to signal that the problem is resolved. if you don&#39;t, it means you&#39;re still hoping for answers that would clarify it for you. so what is still unclear?"}], "answers": [{"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 3, "last_activity_date": 1502208669, "last_edit_date": 1502208669, "creation_date": 1501886646, "answer_id": 45516443, "question_id": 45514315, "link": "https://stackoverflow.com/questions/45514315/applicative-functor-and-partial-application-how-it-works/45516443#45516443", "title": "applicative functor: &lt;*&gt; and partial application, how it works", "body": "<p><em>TL;DR</em>: When you said you \"[now] have a parser with one parameter\" <code>inp1</code>, you got confused: <code>inp1</code> is an <em>input string</em> to a parser, but the function <strong><code>(\\x y -&gt; (x,y))</code></strong> - which is just <strong><code>(,)</code></strong> - is being applied to the <em>output value(s)</em>, produced by parsing the input string. The sequence of values produced by your interim parsers is:</p>\n\n<pre><code>-- by (pure (,)):\n(,)                     -- a function expecting two arguments\n\n-- by the first &lt;*&gt; combination with (item):\n(,) x                   -- a partially applied (,) function expecting one more argument\n\n-- by the final &lt;*&gt; combination with another (item):\n((,) x) y == (x,y)      -- the final result, a pair of `Char`s taken off the \n                        -- input string, first (`x`) by an `item`, \n                        -- and the second (`y`) by another `item` parser\n</code></pre>\n\n<hr>\n\n<p>Working by equational reasoning can oftentimes be easier:</p>\n\n<pre><code> -- pseudocode definition of `fmap`:\n parse (fmap g p) inp = case (parse p inp) of    -- g :: a -&gt; b , p :: Parser a\n    []              -&gt; []                        --        fmap g p :: Parser b\n    [(v, out)]      -&gt; [(g v, out)]              -- v :: a ,           g v :: b\n</code></pre>\n\n<p>(apparently this assumes any parser can only produce <em>0</em> or <em>1</em> results, as the case of a longer list isn't handled at all -- which is usually frowned upon, and with good reason);</p>\n\n<pre><code> -- pseudocode definition of `pure`:\n parse (pure v) inp = [(v, inp)]                 -- v :: a , pure v :: Parser a\n</code></pre>\n\n<p>(parsing with <code>pure v</code> produces the <code>v</code> without consuming the input);</p>\n\n<pre><code> -- pseudocode definition of `item`:\n parse (item) inp = case inp of                  -- inp :: ['Char']\n    []              -&gt; []\n    (x:xs)          -&gt; [(x,xs)]                  -- item :: Parser 'Char'\n</code></pre>\n\n<p>(parsing with <code>item</code> means taking one <code>Char</code> off the head of the input <code>String</code>, if possible); and,</p>\n\n<pre><code> -- pseudocode definition of `(&lt;*&gt;)`:\n parse (pg &lt;*&gt; px) inp = case (parse pg inp) of    -- px :: Parser a\n    []              -&gt; []\n    [(g, out)]      -&gt; parse (fmap g px) out       -- g :: a -&gt; b\n</code></pre>\n\n<p>(<code>&lt;*&gt;</code> combines two parsers with types of results that fit, producing a new, combined parser which uses the first parse to parse the input, then uses the second parser to parse the leftover string, combining the two results to produce the result of the new, combined parser);</p>\n\n<p>Now, <code>&lt;*&gt;</code> associates <em>to the left</em>, so what you ask about is</p>\n\n<pre><code>parse ( pure (\\x y -&gt; (x,y)) &lt;*&gt; item &lt;*&gt; item ) \"abc\"\n= parse ( (pure (,) &lt;*&gt; item1) &lt;*&gt; item2 ) \"abc\"             -- item_i = item\n</code></pre>\n\n<p>the rightmost <code>&lt;*&gt;</code> is the topmost, so we expand <em>it</em> first, leaving the nested expression as is for now,</p>\n\n<pre><code>= case (parse (pure (,) &lt;*&gt; item1) \"abc\") of                 -- by definition of &lt;*&gt;\n    []              -&gt; []\n    [(g2, out2)]    -&gt; parse (fmap g2 item2) out2\n                       = case (parse item out2) of           -- by definition of fmap\n                            []              -&gt; []\n                            [(v, out)]      -&gt; [(g2 v, out)]\n                       = case out2 of                        -- by definition of item\n                            []              -&gt; []\n                            (y:ys)          -&gt; [(g2 y, ys)]\n</code></pre>\n\n<p>Similarly, the nested expression is simplified as</p>\n\n<pre><code>parse (pure (,) &lt;*&gt; item1) \"abc\"\n= case (parse (pure (\\x y -&gt; (x,y))) \"abc\") of               -- by definition of &lt;*&gt;\n    []              -&gt; []\n    [(g1, out1)]    -&gt; parse (fmap g1 item1) out1\n                       = case (parse item out1) of ....\n                       = case out1 of\n                            []              -&gt; []\n                            (x:xs)          -&gt; [(g1 x, xs)]\n= case [((,), \"abc\")] of                                     -- by definition of pure\n    [(g1, out1)]    -&gt; case out1 of\n                            []              -&gt; []\n                            (x:xs)          -&gt; [(g1 x, xs)]\n= let { out1 = \"abc\" \n      ; g1   = (,)\n      ; (x:xs) = out1\n      }\n   in  [(g1 x, xs)]\n= [( (,) 'a', \"bc\")] \n</code></pre>\n\n<p>and thus we get</p>\n\n<pre><code>= case [( (,) 'a', \"bc\")] of\n    [(g2, out2)]    -&gt; case out2 of\n                            []              -&gt; []\n                            (y:ys)          -&gt; [(g2 y, ys)]\n</code></pre>\n\n<p>I think you can see now why the result will be <code>[( ((,) 'a') 'b', \"c\")]</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 760, "user_id": 8009379, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c808a3b5c059f2b448f39970d384fd33?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/8009379/alex"}, "is_accepted": false, "score": 9, "last_activity_date": 1501979281, "last_edit_date": 1501979281, "creation_date": 1501893054, "answer_id": 45517122, "question_id": 45514315, "link": "https://stackoverflow.com/questions/45514315/applicative-functor-and-partial-application-how-it-works/45517122#45517122", "title": "applicative functor: &lt;*&gt; and partial application, how it works", "body": "<p>Let's evaluate <code>pure (\\x y -&gt; (x,y)) &lt;*&gt; item</code>. The second application of <code>&lt;*&gt;</code> will be easy once we've seen the first:</p>\n\n<pre><code>P (\\inp1 -&gt; [(\\x y -&gt; (x,y), inp1)]) &lt;*&gt; item \n</code></pre>\n\n<p>We replace the <code>&lt;*&gt;</code> expression with its definition, substituting the expression's operands for the definition's parameters.</p>\n\n<pre><code>P (\\inp2 -&gt; case parse P (\\inp1 -&gt; [(\\x y -&gt; (x,y), inp1)]) inp2 of\n    []              -&gt; []\n    [(g, out)]      -&gt; parse (fmap g item) out)\n</code></pre>\n\n<p>Then we do the same for the <code>fmap</code> expression.</p>\n\n<pre><code>P (\\inp2 -&gt; case parse P (\\inp1 -&gt; [(\\x y -&gt; (x,y), inp1)]) inp2 of\n    []              -&gt; []\n    [(g, out)]      -&gt; parse P (\\inp -&gt; case parse item inp of\n                           []              -&gt; []\n                           [(v, out)]      -&gt; [(g v, out)]) out)\n</code></pre>\n\n<p>Now we can reduce the first two <code>parse</code> expressions (we'll leave <code>parse item out</code> for later since it's basically primitive).</p>\n\n<pre><code>P (\\inp2 -&gt; case [(\\x y -&gt; (x,y), inp2)] of\n    []              -&gt; []\n    [(g, out)]      -&gt; case parse item out of\n                           []              -&gt; []\n                           [(v, out)]      -&gt; [(g v, out)])\n</code></pre>\n\n<p>So much for <code>pure (\\x y -&gt; (x,y)) &lt;*&gt; item</code>. Since you created the first parser by lifting a binary function of type <code>a -&gt; b -&gt; (a, b)</code>, the single application to a parser of type <code>Parser Char</code> represents a parser of type <code>Parser (b -&gt; (Char, b))</code>.</p>\n\n<hr>\n\n<p>We can run this parser through the <code>parse</code> function with input <code>\"abc\"</code>. Since the parser has type <code>Parser (b -&gt; (Char, b))</code>, this should reduce to a value of type <code>[(b -&gt; (Char, b), String)]</code>. Let's evaluate that expression now.</p>\n\n<pre><code>parse P (\\inp2 -&gt; case [(\\x y -&gt; (x,y), inp2)] of\n    []              -&gt; []\n    [(g, out)]      -&gt; case parse item out of\n                           []              -&gt; []\n                           [(v, out)]      -&gt; [(g v, out)]) \"abc\"\n</code></pre>\n\n<p>By the definition of <code>parse</code> this reduces to</p>\n\n<pre><code>case [(\\x y -&gt; (x,y), \"abc\")] of\n    []              -&gt; []\n    [(g, out)]      -&gt; case parse item out of\n                           []              -&gt; []\n                           [(v, out)]      -&gt; [(g v, out)]\n</code></pre>\n\n<p>Clearly, the patterns don't match in the first case, but they do in the second case. We substitute the matches for the patterns in the second expression.</p>\n\n<pre><code>case parse item \"abc\" of\n    []              -&gt; []\n    [(v, out)]      -&gt; [((\\x y -&gt; (x,y)) v, out)]\n</code></pre>\n\n<p>Now we finally evaluate that last <code>parse</code> expression. <code>parse item \"abc\"</code> clearly reduces to <code>[('a', \"bc\")]</code> from the definition of <code>item</code>.</p>\n\n<pre><code>case [('a', \"bc\")] of\n    []              -&gt; []\n    [(v, out)]      -&gt; [((\\x y -&gt; (x,y)) v, out)]\n</code></pre>\n\n<p>Again, the second pattern matches and we do substitution</p>\n\n<pre><code>[((\\x y -&gt; (x,y)) 'a', \"bc\")]\n</code></pre>\n\n<p>which reduces to</p>\n\n<pre><code>[(\\y -&gt; ('a', y), \"bc\")] :: [(b -&gt; (Char, b), String)] -- the expected type\n</code></pre>\n\n<hr>\n\n<p>If you apply this same process to evaluate a second <code>&lt;*&gt;</code> application, and put the result in the <code>parse</code> (result) <code>\"abc\"</code> expression, you'll see that the expression indeed reduces to<code>[(('a','b'),\"c\")]</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 384, "user_id": 4098149, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4eff262713ed007414ceb4e35f6b63f5?s=128&d=identicon&r=PG&f=1", "display_name": "Schoon", "link": "https://stackoverflow.com/users/4098149/schoon"}, "is_accepted": false, "score": 6, "last_activity_date": 1502107973, "last_edit_date": 1502107973, "creation_date": 1502097561, "answer_id": 45543410, "question_id": 45514315, "link": "https://stackoverflow.com/questions/45514315/applicative-functor-and-partial-application-how-it-works/45543410#45543410", "title": "applicative functor: &lt;*&gt; and partial application, how it works", "body": "<p>What helped me a lot while learning these things was to focus on the <em>types</em> of the values and functions involved. It's all about applying a function to a value (or in your case applying a function to <em>two</em> values).</p>\n\n<pre><code>($)   ::                    (a -&gt; b) -&gt;   a -&gt;   b\nfmap  :: Functor     f =&gt;   (a -&gt; b) -&gt; f a -&gt; f b\n(&lt;*&gt;) :: Applicative f =&gt; f (a -&gt; b) -&gt; f a -&gt; f b\n</code></pre>\n\n<p>So with a <em>Functor</em> we apply a function on a value inside a \"container/context\" (i.e. Maybe, List, . .), and  with an <em>Applicative</em> the function we want to apply is itself inside a \"container/context\".    </p>\n\n<p>The function you want to apply is <code>(,)</code>, and the values you want to apply the function to are inside a container/context (in your case <code>Parser a</code>).</p>\n\n<p>Using <code>pure</code> we <em>lift</em> the function <code>(,)</code> into  the same \"context/container\" our values are in (note, that we can use <code>pure</code> to lift the function into <em>any</em> Applicative (Maybe, List, Parser, . . ):</p>\n\n<pre><code>(,) ::              a -&gt; b -&gt; (a, b)\npure (,) :: Parser (a -&gt; b -&gt; (a, b))\n</code></pre>\n\n<p>Using <code>&lt;*&gt;</code> we can apply the function <code>(,)</code> that is now inside  the <code>Parser</code> context to a value that is also inside the <code>Parser</code> context. One difference to the example you provided with <code>+1</code> is that <code>(,)</code> has <em>two</em> arguments. Therefore we have to use <code>&lt;*&gt;</code> twice:</p>\n\n<pre><code>(&lt;*&gt;) :: Applicative f =&gt; f (a -&gt; b) -&gt; f a -&gt; f b\n\nx :: Parser Int\ny :: Parser Char\n\nlet p1 = pure (,) &lt;*&gt; x :: Parser (b -&gt; (Int, b))\nlet v1 =      (,)     1 ::         b -&gt; (Int, b)\n\nlet p2 = p1 &lt;*&gt; y  :: Parser (Int, Char)\nlet v2 = v1    'a' ::        (Int, Char)\n</code></pre>\n\n<p>We have now created a new parser (<code>p2</code>) that we can use just like any other parser!</p>\n\n<p>. . and then there is more!</p>\n\n<p>Have a look at this convenience function:</p>\n\n<pre><code>(&lt;$&gt;) :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b\n</code></pre>\n\n<p><code>&lt;$&gt;</code> is just <code>fmap</code> but you can use it to write the combinators more beautifully:</p>\n\n<pre><code>data User = User {name :: String, year :: Int}\nnameParser :: Parser String\nyearParser :: Parser Int\n\nlet userParser = User &lt;$&gt; nameParser &lt;*&gt; yearParser -- :: Parser User\n</code></pre>\n\n<p>Ok, this answer got longer than I expected! Well, I hope it helps. Maybe also have a look at <a href=\"http://www.cs.tufts.edu/comp/150FP/archive/brent-yorgey/tc.pdf\" rel=\"noreferrer\">Typeclassopedia</a> which I found invaluable while learning Haskell which is an endless beautiful process . . :) </p>\n"}, {"tags": [], "owner": {"reputation": 1392, "user_id": 5198575, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-RAYCSjVZdnQ/AAAAAAAAAAI/AAAAAAAAClo/VQ8V_H3l8O8/photo.jpg?sz=128", "display_name": "trevor cook", "link": "https://stackoverflow.com/users/5198575/trevor-cook"}, "is_accepted": false, "score": 2, "last_activity_date": 1502120233, "creation_date": 1502120233, "answer_id": 45550764, "question_id": 45514315, "link": "https://stackoverflow.com/questions/45514315/applicative-functor-and-partial-application-how-it-works/45550764#45550764", "title": "applicative functor: &lt;*&gt; and partial application, how it works", "body": "<p>First, I want to emphasize one thing. I found that the crux of understanding lies in noticing the separation between the <code>Parser</code> itself and running the parser with <code>parse</code>. </p>\n\n<p>In running the parser you give the <code>Parser</code> and input string to <code>parse</code> and it will give you the list of possible parses. I think that's probably easy to understand. </p>\n\n<p>You will pass <code>parse</code> a <code>Parser</code>, which may be built using glue, <code>&lt;*&gt;</code>. Try to understand that when you pass <code>parse</code> the <code>Parser</code>, <code>a</code>, or the <code>Parser</code>, <code>f &lt;*&gt; a &lt;*&gt; b</code>, you will be passing it the same type of thing, i.e. something equivalent to <code>(String -&gt; [(a,String)])</code>. I think this is probably easy to understand as well, but still it takes a while to \"click\".</p>\n\n<p>That said, I'll talk a little about the nature of this applicative glue, <code>&lt;*&gt;</code>. An applicative, <code>F a</code> is a computation that yields data of type <code>a</code>. You can think of a term such as </p>\n\n<pre><code>... f &lt;*&gt; g &lt;*&gt; h\n</code></pre>\n\n<p>as a series of computations which return some data, say <code>a</code> then <code>b</code> then <code>c</code>. In the context of <code>Parser</code>, the computation involve <code>f</code> looking for <code>a</code> in the current string, then passing the remainder of the string to <code>g</code>, etc. If any of the computations/parses fails, then so does the whole term. </p>\n\n<p>Its interesting to note that any applicative can be written with a pure function at the beginning to collect all those emitted values, so we can generally write,</p>\n\n<pre><code> pure3ArgFunction &lt;$&gt; f &lt;*&gt; g &lt;*&gt; h\n</code></pre>\n\n<p>I personally find the mental model of emitting and collecting helpful.</p>\n\n<p>So, with that long preamble over, onto the actual explanation. What does</p>\n\n<pre><code>parse (pure (\\x y -&gt; (x,y)) &lt;*&gt; item &lt;*&gt; item) \"abc\"\n</code></pre>\n\n<p>do? Well, <code>parse (p::Parser (Char,Char) \"abc\"</code> applies the parser, (which I renamed <code>p</code>) to \"abc\", yielding <code>[(('a','b'),\"c\")]</code>. This is a successful parse with the return value of ('a','b') and the leftover string, \"c\". </p>\n\n<p>Ok, that's not the question though. Why does the parser work this way? Starting with:</p>\n\n<pre><code>.. &lt;*&gt; item &lt;*&gt; item\n</code></pre>\n\n<p><code>item</code> takes the next character from the string, yields it as a result and passes the unconsumed input. The next <code>item</code> does the same. The beginning can be rewritten as:</p>\n\n<pre><code>fmap (\\x y -&gt; (x,y)) $ item &lt;*&gt; item\n</code></pre>\n\n<p>or</p>\n\n<pre><code>(\\x y -&gt; (x,y)) &lt;$&gt; item &lt;*&gt; item\n</code></pre>\n\n<p>which is my way of showing that the pure function does not do anything to the input string, it just collects the results. When looked at in this light I think the parser should be easy to understand. Very easy. Too easy. I mean that in all seriousness. Its not that the concept is so hard, but our normal frame of looking at programming is just too foreign for it to make much sense at first.</p>\n"}, {"comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1502311729, "post_id": 45585643, "comment_id": 78160114, "body": "I think the <code>q</code> in <code>p &lt;*&gt; q</code> is supposed to be parsing the leftover string, not the original. It is likely the definitions in the question are <i>simplified</i> for the sake of learning, allowing for only 0 or 1 outcomes instead of any number of them as the real thing would do."}, {"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1502357236, "post_id": 45585643, "comment_id": 78177871, "body": "@Will Ness Yes you are right. I tried to correct it accordingly so that now it takes the <code>String</code> portion into account as well."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1502360741, "post_id": 45585643, "comment_id": 78180427, "body": "You just needed to change your <code>(P g) &lt;*&gt; (P f) = P (\\str -&gt; [(g&#39; v, s) | (g&#39;,s) &lt;- g str, (v,_) &lt;- f str])</code> to <code>(P g) &lt;*&gt; (P f) = P (\\str -&gt; [(g&#39; v, s2) | (g&#39;,s) &lt;- g str, (v,s2) &lt;- f s])</code>. I personally dislike the primed names very much (but YMMV), so I&#39;d write it as <code>(P pg) &lt;*&gt; (P pv) = P (\\str -&gt; [(g v, s2) | (g,s1) &lt;- pg str, (v,s2) &lt;- pv s1])</code>. or maybe <code>= P \\str -&gt; pg str &gt;&gt;= \\(g,s1) -&gt; pv s1 &gt;&gt;= \\(v,s2) -&gt; [(g v,s2)]</code> which has a more linear flow to it."}, {"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1502363490, "post_id": 45585643, "comment_id": 78182252, "body": "@Will Ness Thanks for reminding the monadic concise way.. However i am a little confused here about applying str to <code>pv</code> or <code>pg</code> first. Is it up to how one would like to implement the <code>&lt;*&gt;</code> operator for this applicative functor type? I feel like i have to do like <code>(P pg) &lt;*&gt; (P pv) = P \\str -&gt; pv str &gt;&gt;= \\(v,s1) -&gt; pg s1 &gt;&gt;= \\(g,s2) -&gt; [(g v,s2)]</code>"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1502387020, "post_id": 45585643, "comment_id": 78200055, "body": "I think it is usually done left-to-right. Imagine <code>p = pure (,) &lt;*&gt; char &lt;*&gt; int</code> (assuming <code>char</code> is a parser producing a <code>Char</code> and <code>int</code> producing an <code>Int</code>). With right-to-left order it would process a string like <code>&quot; 7  a&quot;</code> and turn it into <code>(&#39;a&#39;, 7)</code>. It feels unnatural. Let-to-right order of processing would produce <code>(&#39;a&#39;, 7)</code> from <code>&quot;  a  7&quot;</code>, which feels right.  -- BTW, aren&#39;t the mnemonic var names much easier to deal with? :)"}, {"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1502388283, "post_id": 45585643, "comment_id": 78200797, "body": "@Will Ness Yes sure.. <code>&lt;*&gt;</code> operators goes left associative and i guess my dilemma doesn&#39;t have an effect on that. What i mean is, this type is in fact a function and it seems to me such that, i have to apply the function inside the applicative functor (left of <code>&lt;*&gt;</code>) to the result of the right side like <code>g . f</code>. But as i said i am not very clear here. I will change my answer reflecting your monadic concise way though."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1502390367, "post_id": 45585643, "comment_id": 78201943, "body": "yeah this is not about the associativity.  either <code>(p &lt;*&gt; q) &lt;*&gt; r</code> or <code>p &lt;*&gt; (q &lt;*&gt; r)</code> will parse the input string in the same order, according to the definition of <code>&lt;*&gt;</code>. With your definition, <code>parse (pure (,) &lt;*&gt; item &lt;*&gt; item) &quot;123&quot;</code> produces <code>[((&#39;2&#39;,&#39;1&#39;),&quot;3&quot;)]</code>. <code>[((&#39;1&#39;,&#39;2&#39;),&quot;3&quot;)]</code> seems more appropriate."}], "tags": [], "owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "is_accepted": false, "score": 0, "last_activity_date": 1502389090, "last_edit_date": 1502389090, "creation_date": 1502267944, "answer_id": 45585643, "question_id": 45514315, "link": "https://stackoverflow.com/questions/45514315/applicative-functor-and-partial-application-how-it-works/45585643#45585643", "title": "applicative functor: &lt;*&gt; and partial application, how it works", "body": "<p>Hmm I am not experienced with Haskell but my attempt on generating <code>Functor</code> and <code>Applicative</code> instances of the <code>Parser</code> type would be as follows;</p>\n\n<pre><code>-- Define a new type containing a parser function\nnewtype Parser a = P (String -&gt; [(a,String)])\n\n-- This function apply the parser p on inp\nparse :: Parser a -&gt; String -&gt; [(a,String)]\nparse (P p) inp = p inp\n\n-- A parser which return a tuple with the first char and the remaining string\nitem :: Parser Char\nitem = P (\\inp -&gt; case inp of\n    []     -&gt; []\n    (x:xs) -&gt; [(x,xs)])\n\n-- A parser is a functor\ninstance Functor Parser where\n  fmap g (P f) = P (\\str -&gt; map (\\(x,y) -&gt; (g x, y)) $ f str)\n\n-- A parser is also an applicative functor\ninstance Applicative Parser where\npure v = P (\\str -&gt; [(v, str)])\n</code></pre>\n\n<p><pre><code><s>(P g) &lt;*> (P f) = P (\\str -> [(g' v, s) | (g',s) &lt;- g str, (v,_) &lt;- f str])</s></code></pre></p>\n\n<pre><code>(P g) &lt;*&gt; (P f) = P (\\str -&gt; f str &gt;&gt;= \\(v,s1) -&gt; g s1 &gt;&gt;= \\(g',s2) -&gt; [(g' v,s2)])\n</code></pre>\n\n<p>(10x very much for the helping of @Will Ness on <code>&lt;*&gt;</code>)</p>\n\n<p>Accordingly...</p>\n\n<pre><code>*Main&gt; parse (P (\\s -&gt; [((+3), s)]) &lt;*&gt; pure 2) \"test\"\n[(5,\"test\")]\n\n*Main&gt; parse (P (\\s -&gt; [((,), s ++ \" altered\")]) &lt;*&gt; pure 2 &lt;*&gt; pure 4) \"test\"\n[((2,4),\"test altered\")]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 466, "user_id": 8301676, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-9sxaRcYasSk/AAAAAAAAAAI/AAAAAAAAADM/88G9HkhtcPc/photo.jpg?sz=128", "display_name": "V\u0169 T&#244;", "link": "https://stackoverflow.com/users/8301676/v%c5%a9-t%c3%b4"}, "is_accepted": false, "score": 2, "last_activity_date": 1502639779, "creation_date": 1502639779, "answer_id": 45662221, "question_id": 45514315, "link": "https://stackoverflow.com/questions/45514315/applicative-functor-and-partial-application-how-it-works/45662221#45662221", "title": "applicative functor: &lt;*&gt; and partial application, how it works", "body": "<p>Some people below did great jobs on \"<strong>step-by-step</strong>\" guides for you to easily understand the progress of computation to create the final result. So I don't replicate it here.</p>\n\n<p>What I think is that, you really need to deeply understand about Functor and Applicative Functor. Once you understand these topics, the others will be easy as one two three (I means most of them ^^).</p>\n\n<p>So: what is Functor, Applicative Functor and their applications in your problem?</p>\n\n<p>Best tutorials on these:</p>\n\n<ul>\n<li><p>Chapter 11 of \"Learn You a Haskell for a great good\": <a href=\"http://learnyouahaskell.com/functors-applicative-functors-and-monoids\" rel=\"nofollow noreferrer\">http://learnyouahaskell.com/functors-applicative-functors-and-monoids</a>.</p></li>\n<li><p>More visual \"Functors, Applicatives, And Monads in Pictures\": <a href=\"http://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html\" rel=\"nofollow noreferrer\">http://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html</a>.</p></li>\n</ul>\n\n<p><strong>First</strong>, when you think about Functor, Applicative Functor, think about \"values in <strong>contexts</strong>\": the values are important, and the <strong>computational contexts</strong> are important too. You have to deal with both of them.</p>\n\n<p>The definitions of the types:</p>\n\n<pre><code>    -- Define a new type containing a parser function\n    newtype Parser a = P (String -&gt; [(a,String)])\n\n    -- This function apply the parser p on inp\n    parse :: Parser a -&gt; String -&gt; [(a,String)]\n    parse (P p) inp = p inp\n</code></pre>\n\n<ul>\n<li><p>The value here is the value of type <code>a</code>, the first element of the tuple in the list.</p></li>\n<li><p>The context here is the function, or the eventual value. You have to supply an input to get the final value.</p></li>\n</ul>\n\n<p><code>Parser</code> is a function wrapped in a <code>P</code> data constructor. So if you got a value <code>b :: Parser Char</code>, and you want to apply it to some input, you have to unwrap the inner function in <code>b</code>. That's why we have the function <code>parse</code>, it unwraps the inner function and applies it to the input value.</p>\n\n<p>And, if you want to create  <code>Parser</code> value, you have to use <code>P</code> data constructor wraps around a function.</p>\n\n<p><strong>Second</strong>, Functor: something that can be \"mapped\" over, specified by the function <strong>fmap</strong>:</p>\n\n<pre><code>    fmap :: (a -&gt; b) -&gt; f a -&gt; f b\n</code></pre>\n\n<p>I often call the function <code>g :: (a -&gt; b)</code> is a <strong>normal</strong> function because as you see no context wraps around it. So, to be able to apply <code>g</code> to <code>f a</code>, we have to extract the <code>a</code> from <code>f a</code> somehow, so that <code>g</code> can be apply to <code>a</code> alone. That \"somehow\" depends on the specific Functor and is the context you are working in:</p>\n\n<pre><code>    instance Functor Parser where\n      fmap g p = P (\\inp -&gt; case parse p inp of\n        []              -&gt; []\n        [(v, out)]      -&gt; [(g v, out)])\n</code></pre>\n\n<ul>\n<li><p><code>g</code> is the function of type <code>(a -&gt; b)</code>, <code>p</code> is of type <code>f a</code>.</p></li>\n<li><p>To unwrap <code>p</code>, to get the value of of context, we have to pass some input value in: <code>parse p inp</code>, then the value is the 1st element of the tuple. Apply <code>g</code> to that value, get a value of type <code>b</code>.</p></li>\n<li><p>The result of <code>fmap</code> is of type <code>f b</code>, so we have to wrap all the result in the same context, that why we have: <code>fmap g p = P (\\inp -&gt; ...)</code>.</p></li>\n</ul>\n\n<p>At this time, you might be wonder you could have an implementation of <code>fmap</code> in which the result, instead of <code>[(g v, out)]</code>, is <code>[(g v, inp)]</code>. And the answer is Yes. You can implement <code>fmap</code> in any way you like, but the important thing is to be an appropriate Functor, the implementation must obey <strong>Functor laws</strong>. The laws are they way we deriving the implementation of those functions (<a href=\"http://mvanier.livejournal.com/4586.html\" rel=\"nofollow noreferrer\">http://mvanier.livejournal.com/4586.html</a>). The implementation must satisfy at least 2 Functor laws:</p>\n\n<ul>\n<li><code>fmap id = id</code>.</li>\n<li><code>fmap (f . g) =  fmap f . fmap g</code>.</li>\n</ul>\n\n<p><code>fmap</code> is often written as infix operator: <code>&lt;$&gt;</code>. When you see this, look at the 2nd operand to determine which Functor you are working with.</p>\n\n<p><strong>Third</strong>, Applicative Functor: you apply a wrapped function to a wrapped value to get another wrapped value:</p>\n\n<pre><code>    &lt;*&gt; :: f (a -&gt; b) -&gt; f a -&gt;  f b\n</code></pre>\n\n<ul>\n<li>Unwrap the inner function.</li>\n<li>Unwrap 1st value.</li>\n<li>Apply the function and wrap the result.</li>\n</ul>\n\n<p>In your case:</p>\n\n<pre><code>    instance Applicative Parser where\n      pure v = P (\\inp -&gt; [(v, inp)])\n      pg &lt;*&gt; px = P (\\inp -&gt; case parse pg inp of\n        []              -&gt; []\n        [(g, out)]      -&gt; parse (fmap g px) out)\n</code></pre>\n\n<ul>\n<li><code>pg</code> is of type <code>f (a -&gt; b)</code>, <code>px</code> is of type <code>f a</code>.</li>\n<li>Unwrap <code>g</code> from <code>pg</code> by <code>parse pg inp</code>, <code>g</code> is the 1st of the tuple.</li>\n<li>Unwrap <code>px</code> and apply <code>g</code> to the value by using <code>fmap g px</code>. <strong>Attention</strong>, the result function only applies to <code>out</code>, in some case that is <code>\"bc\"</code> not <code>\"abc\"</code>.</li>\n<li>Wrap the whole result: <code>P (\\inp -&gt; ...)</code>.</li>\n</ul>\n\n<p>Like Functor, an implementation of Applicative Functor must obey Applicative Functor laws (in the tutorials above).</p>\n\n<p><strong>Fourth</strong>, apply to your problem:</p>\n\n<pre><code>    parse (pure (\\x y -&gt; (x,y)) &lt;*&gt; item &lt;*&gt; item) \"abc\"\n           |         f1        |    |f2|     |f3|\n</code></pre>\n\n<ul>\n<li>Unwrap <code>f1 &lt;*&gt; f2</code> by passing <code>\"abc\"</code> to it:\n\n<ul>\n<li>Unwrap <code>f1</code> by passing <code>\"abc\"</code> to it, we get <code>[(g, \"abc\")]</code>.</li>\n<li>Then <code>fmap</code> <code>g</code> on <code>f2</code> and passing <code>out=\"abc\"</code> to it:\n\n<ul>\n<li>Unwrap <code>f2</code> get <code>[('a', \"bc\")]</code>.</li>\n<li>Apply <code>g</code> on <code>'a'</code> get a <strong>result</strong>: <code>[(\\y -&gt; ('a', y), \"bc\")]</code>.</li>\n</ul></li>\n</ul></li>\n<li>Then <code>fmap</code> <strong>1st element</strong> of the <strong>result</strong> on <code>f3</code> and passing <code>out=\"bc\"</code> to it:\n\n<ul>\n<li>Unwrap <code>f3</code> get <code>[('b', \"c\")]</code>.</li>\n<li>Apply the function on <code>'b'</code> get final result: <code>[(('a', 'b'), \"c\")]</code>.</li>\n</ul></li>\n</ul>\n\n<p><strong>In conclusion</strong>:</p>\n\n<ul>\n<li>Take some time for the ideas to \"dive\" into you. Especially, the laws derives the implementations.</li>\n<li>Next time, design your data structure to easier understand.</li>\n<li>Haskell is one of my favorite languages and I thing it will be yours soon, so be patient, it needs a learning curve and then you go!</li>\n</ul>\n\n<p>Happy Haskell hacking!</p>\n"}], "owner": {"reputation": 129, "user_id": 8419073, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/65c24d556a9428e53b1a0eb0834c836f?s=128&d=identicon&r=PG&f=1", "display_name": "yaa", "link": "https://stackoverflow.com/users/8419073/yaa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 448, "favorite_count": 2, "answer_count": 6, "score": 11, "last_activity_date": 1502639779, "creation_date": 1501875515, "last_edit_date": 1501895899, "question_id": 45514315, "link": "https://stackoverflow.com/questions/45514315/applicative-functor-and-partial-application-how-it-works", "title": "applicative functor: &lt;*&gt; and partial application, how it works", "body": "<p>I am reading the book <em>Programming in Haskell</em> by Graham Hutton and I have some problem to understand how <code>&lt;*&gt;</code> and partial application can be used to parse a string.</p>\n\n<p>I know that <code>pure (+1) &lt;*&gt; Just 2</code>\nproduces  <code>Just 3</code>\nbecause <code>pure (+1)</code> produces <code>Just (+1)</code> and then <code>Just (+1) &lt;*&gt; Just 2</code>\nproduces <code>Just (2+1)</code> and then <code>Just 3</code></p>\n\n<p>But in more complex case like this:</p>\n\n<pre><code>-- Define a new type containing a parser function\nnewtype Parser a = P (String -&gt; [(a,String)])\n\n-- This function apply the parser p on inp\nparse :: Parser a -&gt; String -&gt; [(a,String)]\nparse (P p) inp = p inp\n\n-- A parser which return a tuple with the first char and the remaining string\nitem :: Parser Char\nitem = P (\\inp -&gt; case inp of\n    []     -&gt; []\n    (x:xs) -&gt; [(x,xs)])\n\n-- A parser is a functor\ninstance Functor Parser where\n  fmap g p = P (\\inp -&gt; case parse p inp of\n    []              -&gt; []\n    [(v, out)]      -&gt; [(g v, out)])\n\n-- A parser is also an applicative functor\ninstance Applicative Parser where\n  pure v = P (\\inp -&gt; [(v, inp)])\n  pg &lt;*&gt; px = P (\\inp -&gt; case parse pg inp of\n    []              -&gt; []\n    [(g, out)]      -&gt; parse (fmap g px) out)\n</code></pre>\n\n<p>So, when I do:</p>\n\n<pre><code>parse (pure (\\x y -&gt; (x,y)) &lt;*&gt; item &lt;*&gt; item) \"abc\"\n</code></pre>\n\n<p>The answer is:</p>\n\n<pre><code>[(('a','b'),\"c\")]\n</code></pre>\n\n<p>But I don't understand what exactly happens.\nFirst:</p>\n\n<pre><code>pure (\\x y -&gt; (x,y)) =&gt; P (\\inp1 -&gt; [(\\x y -&gt; (x,y), inp1)])\n</code></pre>\n\n<p>I have now a parser with one parameter.</p>\n\n<p>Then:</p>\n\n<pre><code>P (\\inp1 -&gt; [(\\x y -&gt; (x,y), inp1)]) &lt;*&gt; item \n=&gt; P (\\inp2 -&gt; case parse (\\inp1 -&gt; [(\\x y -&gt; (x,y), inp1)]) inp2 of ??? \n</code></pre>\n\n<p>I really don't understand what happens here.\nCan someone explain, step by step, what's happens now until the end please.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1501870129, "post_id": 45513040, "comment_id": 77987275, "body": "There is also a <code>&gt;=&gt;</code> function..."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1501870667, "post_id": 45513040, "comment_id": 77987517, "body": "Furthermore I think the way you use <code>&lt;=&lt;</code> is more how one thinks about a functor. Not a monad per se."}, {"owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "edited": false, "score": 8, "creation_date": 1501871006, "post_id": 45513040, "comment_id": 77987677, "body": "This question amounts to &quot;why not always program point-free?&quot; but in the Kleisli category. I find it helpful to think about Kleisli categories. I am also glad that a computer can do nontrivial categorical plumbing for me if I help it by naming points."}, {"owner": {"reputation": 534, "user_id": 3741667, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/21cb614bca606c41959304bf9463f8d0?s=128&d=identicon&r=PG&f=1", "display_name": "Jonas", "link": "https://stackoverflow.com/users/3741667/jonas"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1501871014, "post_id": 45513040, "comment_id": 77987683, "body": "@WillemVanOnsem I think <code>&gt;&gt;=</code> and its cousins are just about composing functions that return values with contexts. Functor is the type class that allow us to put value in a context. Monad is the type class that allows us to compose these functions, while preserving the context. That&#39;s why a type constructor must be an instance of Functor before it can be made an instance of a Monad. That&#39;s what I think."}, {"owner": {"reputation": 534, "user_id": 3741667, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/21cb614bca606c41959304bf9463f8d0?s=128&d=identicon&r=PG&f=1", "display_name": "Jonas", "link": "https://stackoverflow.com/users/3741667/jonas"}, "reply_to_user": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "edited": false, "score": 0, "creation_date": 1501871950, "post_id": 45513040, "comment_id": 77988109, "body": "@pigworker Are there any good introductory materials to what you are talking about such as Kleisli category, points?"}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 1, "creation_date": 1501872331, "post_id": 45513040, "comment_id": 77988307, "body": "@Jonas Applicative is the one that lets you put a value into a context, not Functor. Functor lets you manipulate values within a context. Anyway, what you have described as &quot;...just about composing...&quot; is true, but it&#39;s one of many reasonable ways to think about monads. It&#39;s not necessarily The One Way."}, {"owner": {"reputation": 534, "user_id": 3741667, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/21cb614bca606c41959304bf9463f8d0?s=128&d=identicon&r=PG&f=1", "display_name": "Jonas", "link": "https://stackoverflow.com/users/3741667/jonas"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1501873090, "post_id": 45513040, "comment_id": 77988734, "body": "@amalloy I think you are right that Applicative is the type class that puts a value in a context (with <code>pure</code>); and Functor is the type class that manipulates a value in a context (with <code>fmap</code>). So it seems that to a certain degree, Applicative is a more fundamental type class than Functor? Normally I just construe Applicative as the type class that allow me to apply &#39;values in contexts&#39; to functions that don&#39;t expect &#39;values in contexts&#39;; it sort of allows me to combine &#39;values in contexts&#39; using normal functions."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 3, "creation_date": 1501880471, "post_id": 45513040, "comment_id": 77992237, "body": "with <code>&gt;&gt;=</code> the functions are naturally nested and it is easy(er) to refer to previous results: <code>... &gt;&gt;= (\\r -&gt; ... &gt;&gt;= (\\q -&gt; .... r ... q ...))</code>. With <code>&gt;=&gt;</code> we&#39;d need to package up the argument <code>r</code> with the result <code>q</code> when passing it further down the line, <code>... &gt;=&gt; (\\r-&gt; ... return (r,q)) &gt;=&gt; (\\(r,q) -&gt; ...)</code>."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1501881360, "post_id": 45513040, "comment_id": 77992576, "body": "those names <code>r</code>, <code>q</code> are commonly referred to as &quot;points&quot;: <code>return</code> (no explicit naming) = <code>(\\r -&gt; return r)</code> (naming the argument) -- also, <a href=\"https://en.wikibooks.org/wiki/Haskell/\" rel=\"nofollow noreferrer\">en.wikibooks.org/wiki/Haskell</a>,  <a href=\"https://wiki.haskell.org/\" rel=\"nofollow noreferrer\">wiki.haskell.org</a> ..."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1521997359, "post_id": 45513040, "comment_id": 85959582, "body": "[1/2] @Jonas &quot;So it seems that to a certain degree, Applicative is a more fundamental type class than Functor?&quot; -- While &quot;fundamental&quot; can be a rather ambiguous word, I wouldn&#39;t put it that way, as <code>pure</code> is really an extra on the top of <code>Functor</code>. A key thing about <code>pure</code> is that it doesn&#39;t just put a value in a context, but it does so <i>without requiring any extra information</i>."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1521997374, "post_id": 45513040, "comment_id": 85959584, "body": "[2/2] @Jonas A good illustration of that is the pair <code>Functor</code>, <code>(,) a</code>. If you have an <code>y :: b</code> value, you can make an <code>(a, b)</code> pair out of it <i>as long as</i> you have some <code>x :: a</code> lying around that you can attach to it (<code>\\y -&gt; (x, y)</code>, or <code>(,) x</code> for short).  However, if <code>a</code> is a <code>Monoid</code>, there is an <code>instance Monoid a =&gt; Applicative ((,) a)</code>, and <code>pure y :: (a, b)</code> will produce a pair by pulling an <code>a</code> value out of thin air. (By &quot;thin air&quot;, I actually mean the <code>mempty</code> from the <code>Monoid a</code> instance; in any case, the point is that you don&#39;t have to supply it explicitly.)"}], "answers": [{"tags": [], "owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "is_accepted": true, "score": 9, "last_activity_date": 1501876645, "last_edit_date": 1501876645, "creation_date": 1501876212, "answer_id": 45514492, "question_id": 45513040, "link": "https://stackoverflow.com/questions/45513040/why-is-more-often-talked-about-than/45514492#45514492", "title": "Why is &gt;&gt;= more often talked about than &lt;=&lt;?", "body": "<p><code>&lt;=&lt;</code> is a great way of explaining the <a href=\"https://wiki.haskell.org/Monad_laws\" rel=\"noreferrer\">monad laws</a>:</p>\n\n<pre><code> f &lt;=&lt; return = f -- right identity\n return &lt;=&lt; g = g -- left identity\n f &lt;=&lt; (g &lt;=&lt; h) = (f &lt;=&lt; g) &lt;=&lt; h -- associativity\n</code></pre>\n\n<p>And it's very useful for demonstrating the category of Kleisli arrows:</p>\n\n<pre><code> newtype Kleisli m a b = Kleisli { runKleisli :: a -&gt; m b }\n instance Monad m =&gt; Category (Kleisli m) where\n   Kleisli f . Kleisli g = Kleisli (f &lt;=&lt; g)\n   id = Kleisli return\n</code></pre>\n\n<p>And you'll see it show up in point-free programs. Personally, I'm also fond of its peer <code>=&lt;&lt;</code>.</p>\n\n<p>But while it makes talking about the monad laws and composition easier, I think there's still some strong didactic reasons that <code>&gt;&gt;=</code> is preferred among monad tutorials and introductions to Haskell.</p>\n\n<p>The first reason being that <code>&lt;=&lt;</code>'s strong suit is point-free code, and for the most part point-free code is harder for people coming from a language in the C-syntax family (C, C++, Java, Python, etc) to understand at first.</p>\n\n<p>If \"point-free\" is an unfamiliar adjective to you, here's three implementations of the same function:</p>\n\n<pre><code>f a b = a + b * 2\nf a = (a +) . (* 2)\nf = flip (.) (*2) . (+)\n</code></pre>\n\n<p>They all run the same calculation, but the last is in what's called <em>point-free</em> style, where the variables on the left have been removed via <a href=\"https://wiki.haskell.org/Eta_conversion\" rel=\"noreferrer\">eta conversion</a>.  </p>\n\n<p>This example is very much a strawman, but point-free style is seductive and can easily lead to code that is very difficult for beginners to understand.</p>\n\n<p>Another reason is that one of the near-universal questions beginners ask is\n\"how do I unwrap a <code>IO String</code> to get an <code>String</code>?\" when first confronted with\nHaskell's <code>IO</code> monad. The answer of course is, \"you don't, you chain the rest\nof the computation with <code>&gt;&gt;=</code>\", <code>&gt;&gt;=</code> making it easy to explain the relationship\nbetween</p>\n\n<pre><code>putStrLn \"Your first name: \" &gt;&gt;= \\_ -&gt;\ngetLine &gt;&gt;= \\first -&gt;\nputStrLn \"Your last name: \" &gt;&gt;= \\_ -&gt;\ngetLine &gt;&gt;= \\last -&gt;\nputStrLn (\"Hello \" ++ first ++ \" \" ++ last)\n</code></pre>\n\n<p>and</p>\n\n<pre><code>do\n  putStrLn \"Your first name: \"\n  first &lt;- getLine\n  putStrLn \"Your last name: \"\n  last &lt;- getLine\n  putStrLn (\"Hello \" ++ first ++ \" \" ++ last)\n</code></pre>\n\n<p>One last reason, of course, is that <code>&gt;&gt;=</code> is in the definition of <code>Monad</code>, and\n<code>&lt;=&lt;</code> isn't, and that's just the way the language is defined to be.  People are\nmore likely to talk about typeclass members than arbitrary functions when\nteaching others about the typeclass, especially when the teacher is\nrelatively new to the subject themselves (as so many monad tutorial authors are).</p>\n"}, {"comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1521998116, "post_id": 45523062, "comment_id": 85959870, "body": "With respect to <code>(=&lt;&lt;)</code> versus <code>(&gt;&gt;=)</code>, there is also the matter of sequencing effects: <code>(=&lt;&lt;)</code> sequences effects from right to left (it couldn&#39;t be otherwise), while <code>(&lt;*&gt;)</code> almost always sequences effects from left to right, like <code>(&gt;&gt;=)</code> (by convention)."}], "tags": [], "owner": {"reputation": 41, "user_id": 8387652, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/pXFaO.jpg?s=128&g=1", "display_name": "Dai", "link": "https://stackoverflow.com/users/8387652/dai"}, "is_accepted": false, "score": 1, "last_activity_date": 1521997780, "last_edit_date": 1521997780, "creation_date": 1501943598, "answer_id": 45523062, "question_id": 45513040, "link": "https://stackoverflow.com/questions/45513040/why-is-more-often-talked-about-than/45523062#45523062", "title": "Why is &gt;&gt;= more often talked about than &lt;=&lt;?", "body": "<p>While <code>&lt;=&lt;</code> is more natural to reason about for many applications, there is actually a good practical reason for <code>&gt;&gt;=</code> being the primary function for the <code>Monad</code> class. The reason is that whenever you try to compose functions <code>f :: a -&gt; m b</code> and <code>g :: b -&gt; m c</code>, you always end up needing to unwrap the result of <code>f</code> somehow anyway, which is exactly what <code>&gt;&gt;=</code> does!</p>\n\n<p>Compare for example the definitions for <code>Maybe</code></p>\n\n<pre><code>m &gt;&gt;= f = case m of\n    Nothing -&gt; Nothing\n    Just a -&gt; f a\n\nf &gt;=&gt; g = \\a -&gt; case f a of\n    Nothing -&gt; Nothing\n    Just b -&gt; g b\n</code></pre>\n\n<p>Try to give a simpler definition for <code>&gt;=&gt;</code>, it's really not possible!</p>\n\n<p>In general, looking at the default definitions for <code>&gt;&gt;=</code> and <code>&gt;=&gt;</code>, we see:</p>\n\n<pre><code>(&gt;&gt;= f) = id &gt;=&gt; f\nf &gt;=&gt; g = \\a -&gt; f a &gt;&gt;= g\n-- equivalently = (&gt;&gt;= g) . (&gt;&gt;= f) . return\n</code></pre>\n\n<p>It seems that <code>&gt;=&gt;</code> is doing \"more work\" than <code>&gt;&gt;=</code>, so it is sensible to define a Monad using the simplest description of its behavior.</p>\n\n<p>The theoretical way to think about this is that <code>\\m -&gt; m &gt;&gt;= f</code> is exactly <code>id &gt;=&gt; f</code>. What we're saying is that <code>&gt;=&gt;</code> is uniquely defined by its action on the identity.</p>\n\n<p>(One might argue that <code>=&lt;&lt;</code> is better as it matches the normal direction of function application like <code>$</code>, <code>&lt;$&gt;</code> and <code>&lt;*&gt;</code> but it doesn't really matter)</p>\n"}], "owner": {"reputation": 534, "user_id": 3741667, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/21cb614bca606c41959304bf9463f8d0?s=128&d=identicon&r=PG&f=1", "display_name": "Jonas", "link": "https://stackoverflow.com/users/3741667/jonas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 226, "favorite_count": 1, "accepted_answer_id": 45514492, "answer_count": 2, "score": 6, "last_activity_date": 1521997780, "creation_date": 1501870014, "last_edit_date": 1504152540, "question_id": 45513040, "link": "https://stackoverflow.com/questions/45513040/why-is-more-often-talked-about-than", "title": "Why is &gt;&gt;= more often talked about than &lt;=&lt;?", "body": "<p>Let's say we have <code>g :: a -&gt; b</code>, and <code>f :: b -&gt; c</code>. We can write:</p>\n\n<ol>\n<li><code>f . g :: a -&gt; c</code>.</li>\n</ol>\n\n<p>If our functions return monadic values (i.e. values in contexts), for example, <code>g1 :: (Monad m) =&gt; a -&gt; m b</code> and <code>f1 :: (Monad m) =&gt; b -&gt; m c</code>. We can write:</p>\n\n<ol>\n<li><code>f1 &lt;=&lt; g1 :: (Monad m) =&gt; a -&gt; m c</code>.</li>\n<li><code>return x &gt;&gt;= g1 &gt;&gt;= f1</code>, where <code>x :: a</code>, to get a value back. Or even the lambda <code>\\x -&gt; return x &gt;&gt;= g1 &gt;&gt;= f1</code>.</li>\n</ol>\n\n<p>It seems that <code>&lt;=&lt;</code> is more parallel to <code>.</code> in terms of syntax. <code>&lt;=&lt;</code> makes it easier to understand <code>Monad</code> is just about function composition that preserves context. Why is <code>&gt;&gt;=</code> more often talked about than <code>&lt;=&lt;</code>?</p>\n"}, {"tags": ["validation", "haskell", "generics", "recursion"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1501868125, "post_id": 45510332, "comment_id": 77986288, "body": "I don&#39;t understand why this isn&#39;t supposed to be doable recursively. Just return <i>both</i> possible results while you&#39;re unsure which one will be needed. \u2014 That said, I don&#39;t think \u201cany two records having the same shape\u201d is something you can ever have quite reliably \u2013 it&#39;s undefined how a given record is translated to <code>:*:</code>-nestings. Though I don&#39;t see why the compiler would choose to give same-structure records differently-structured representations."}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1501873005, "post_id": 45510332, "comment_id": 77988683, "body": "Do the errors for each field actually need to come in different slots of a datatype, or would something like a <code>Map FieldName FieldError</code> be acceptable? Also, why does the validation function for each field need access to the whole <code>UserInput</code>?"}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "reply_to_user": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1501900100, "post_id": 45510332, "comment_id": 77996528, "body": "@danidiaz using a <code>Map</code> to represent the errors would be my last resort. It would mean a considerable loss in type safety and not significantly different from the current state-of-the-art (digestive functors). The validation function needs access to the whole User input to allow cases where the validation logic on one field depends on the value of another field. Eg. if participant type is &quot;child&quot;, then age must be less than 10."}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1501900382, "post_id": 45510332, "comment_id": 77996557, "body": "@leftroundabout even if both possible results are returned, I&#39;m unable to wrap my head around the generic machinery which will pick between one of the two sets of results at the correct level of nesting. If something is expecting records of same shape, and differently shaped records are given to it (either due to programmer error, or compiler quirk), won&#39;t it result in a compile time error (a horribly complicated one, I presume, but a compile error nevertheless)"}], "answers": [{"comments": [{"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1501899555, "post_id": 45515062, "comment_id": 77996443, "body": "&quot;If you need to look at multiple fields to validate your record, you can&#39;t use hzip (but of course you also can&#39;t use Generic).&quot; - - why do you say that, especially for generics?"}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "reply_to_user": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 1, "creation_date": 1501922051, "post_id": 45515062, "comment_id": 78000436, "body": "@SaurabhNanda Sorry, I should&#39;ve been clearer. Your question was about validating each field one at a time in a compositional (context-free) manner. If you need context-sensitive validation, where the behaviour of a validator is conditional on the values of some other field, <code>hzip</code> can&#39;t help you because it works on a field-by-field basis. An example of this would be something like &quot;if the user is under 18, the credit card field must be empty&quot;, or &quot;both of these passwords must be equal&quot;. Such a validator has to look at the whole record. Hope that answers your question"}], "tags": [], "owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "is_accepted": false, "score": 4, "last_activity_date": 1501930858, "last_edit_date": 1501930858, "creation_date": 1501878817, "answer_id": 45515062, "question_id": 45510332, "link": "https://stackoverflow.com/questions/45510332/is-it-necessary-to-write-haskell-generics-in-a-recursive-fashion/45515062#45515062", "title": "Is it necessary to write Haskell generics in a recursive fashion?", "body": "<blockquote>\n  <p>Now, the reason why doing this recursively around <code>:*:</code> might not work is, that one needs to look at the result of every validation function and then decide if the return value should be a <code>Left ([GeneralError], UserError)</code> or a <code>Right UserInput</code>. We cannot evaluate to a <code>Left</code> value on the first validation function that fails.</p>\n</blockquote>\n\n<p>The standard <code>Applicative</code> behaviour for <code>Either</code> is not the only reasonable behaviour for that type! As you said, when you're, eg, validating a form, you want to return a collection of <em>all</em> the errors that occurred, not just the first one. So here's a type that's structurally the same as <code>Either</code> but has a different <code>Applicative</code> instance.</p>\n\n<pre><code>newtype Validation e a = Validation (Either e a) deriving Functor\n\ninstance Semigroup e =&gt; Applicative (Validation e) where\n    pure = Validation . pure\n    Validation (Right f) &lt;*&gt; Validation (Right x) = Validation (Right $ f x)\n    Validation (Left e1) &lt;*&gt; Validation (Left e2) = Validation (Left $ e1 &lt;&gt; e2)\n    Validation (Left e) &lt;*&gt; _ = Validation (Left e)\n    _ &lt;*&gt; Validation (Left e) = Validation (Left e)\n</code></pre>\n\n<p>When both computations failed, the composed computation also fails, returning the two errors composed using their <code>Semigroup</code> instance - both the errors, for some suitable notion of <em>both</em>. If both computations succeed, or only one of them fails, then <code>Validation</code> behaves like <code>Either</code>. So it's kind of like a Frankensteinian mishmash of the <code>Either</code> and <code>Writer</code> applicatives.</p>\n\n<p>This instance does satisfy the <code>Applicative</code> laws, but I'll leave the proof to you. Oh, and <code>Validation</code> can't be made into a lawful <code>Monad</code>.</p>\n\n<hr>\n\n<p>Forgive me for taking the liberty of rearranging your types a bit. I'm using a common trick for reusing the structure of a record at a variety of different types: parameterise the record by a type constructor. You recover the original record by applying the template to the <code>Identity</code> functor.</p>\n\n<pre><code>data UserTemplate f = UserTemplate {\n    name :: f Name,\n    age :: f Age,\n    email :: f Email\n}\ntype User = UserTemplate Identity\n</code></pre>\n\n<p>A useful newtype: a <code>Validator</code> is a function which takes an <code>a</code> and returns either the <code>a</code> or a monoidal summary of the errors.</p>\n\n<pre><code>newtype Validator e a = Validator { runValidator :: a -&gt; Validation e a }\n</code></pre>\n\n<p>A useful class: <code>HTraversable</code> is like <code>Traversable</code> but for functors from the category of type constructors to Hask. (More on this in <a href=\"https://stackoverflow.com/q/44187945/1523776\">a previous question of mine</a>.)</p>\n\n<pre><code>class HFunctor t where\n    hmap :: (forall x. f x -&gt; g x) -&gt; t f -&gt; t g\nclass HFunctor t =&gt; HTraversable t where\n    htraverse :: Applicative a =&gt; (forall x. f x -&gt; Compose a g x) -&gt; t f -&gt; a (t g)\n    htraverse f = hsequence . hmap f\n    hsequence :: Applicative a =&gt; t (Compose a g) -&gt; a (t g)\n    hsequence = htraverse id\n</code></pre>\n\n<p>Why's <code>HTraversable</code> relevant? <code>Traversable</code>Classic\u2122 allows you to sequence <code>Applicative</code> effects like <code>Validation</code> over <em>homogeneous</em> containers like lists. But a record is rather more like a <em>heterogeneous</em> container: a record \"contains\" a bunch of fields, but each field has its own type. <code>HTraversable</code> is precisely the class for when you need to sequence <code>Applicative</code> actions over polymorphic containers.</p>\n\n<p>Another useful class generalises <code>zipWith</code> to these heterogeneous containers.</p>\n\n<pre><code>class HZip t where\n    hzip :: (forall x. f x -&gt; g x -&gt; h x) -&gt; t f -&gt; t g -&gt; t h\n</code></pre>\n\n<p>Records constructed in the fashion of <code>UserTemplate</code> are traversable and zippable. (In fact they're typically <code>HRepresentable</code> - an analogous higher-order notion of <a href=\"https://hackage.haskell.org/package/adjunctions-4.3/docs/Data-Functor-Rep.html#t:Representable\" rel=\"nofollow noreferrer\"><code>Representable</code></a> - which is a very useful property, though I won't dwell on it here.)</p>\n\n<pre><code>instance HFunctor UserTemplate where\n    hmap f (UserTemplate n a e) = UserTemplate (f n) (f a) (f e)\n\ninstance HTraversable UserTemplate where\n    htraverse f (UserTemplate n a e) = UserTemplate &lt;$&gt;\n        getCompose (f n) &lt;*&gt;\n        getCompose (f a) &lt;*&gt;\n        getCompose (f e)\n\ninstance HZip UserTemplate where\n    hzip f (UserTemplate n1 a1 e1) (UserTemplate n2 a2 e2) = UserTemplate (f n1 n2) (f a1 a2) (f e1 e2)\n</code></pre>\n\n<p>Hopefully it should be quite easy to see what a <code>Generic</code> or Template Haskell implementation of <code>HTraversable</code> and <code>HZip</code> for an arbitrary record fitting this pattern would do.</p>\n\n<p>So, the plan is: write <code>Validator</code>s for each field and then <code>hzip</code> these <code>Validator</code>s along the object you want to validate. Then you can <code>htraverse</code> the result to get a <code>Validation</code> containing the validated object. This pattern works for field-by-field validation, per your question. If you need to look at multiple fields to validate your record, you can't use <code>hzip</code> (but of course you also can't use <code>Generic</code>).</p>\n\n<pre><code>type Validatable t = (HZip t, HTraversable t)\nvalidate :: (Semigroup e, Validatable t) =&gt; t (Validator e) -&gt; Validator e (t Identity)\nvalidate t = Validator $ htraverse (Compose . fmap Identity) . hzip val t\n    where val v = runValidator v . runIdentity\n</code></pre>\n\n<p>A particular validator for a type such as <code>User</code> basically involves picking a monoidal error and returning a record of validation functions. Here I'm defining a <code>Monoid</code> for <code>UserError</code> which lifts a monoidal <code>e</code> point-wise through each field of the record.</p>\n\n<pre><code>type UserError e = UserTemplate (Const e)\n\ninstance Semigroup e =&gt; Semigroup (UserError e) where\n   x &lt;&gt; y = hzip (&lt;&gt;) x y\n</code></pre>\n\n<p>Now you can just define a record of validator functions.</p>\n\n<pre><code>type UserValidator = Validator ([GeneralError], UserError [FieldError])\n\nvalidateEmail :: UserInput -&gt; UserValidator Email\nvalidateEmail i = Validator v\n    where v e\n            | '@' `elem` toString e = pure e\n            | otherwise = Validation $ Left ([], UserTemplate [] [] [FieldError \"missing @\"])\n\nvalidateName :: UserInput -&gt; UserValidator Name\nvalidateName = ...\nvalidateAge :: UserInput -&gt; UserValidator Age\nvalidateAge = ...\n\nuserValidator :: UserInput -&gt; UserValidator User\nuserValidator input = validate $ UserTemplate {\n    name = validateName input,\n    age = validateAge input,\n    email = validateEmail input\n}\n</code></pre>\n\n<p>You can make it easier to compose smaller validators - so that each validator doesn't need to know about the whole error structure - using lenses.</p>\n"}, {"comments": [{"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1501944266, "post_id": 45523136, "comment_id": 78006423, "body": "Here&#39;s a gist with the complete code <a href=\"https://gist.github.com/danidiaz/65254521f8db91307eab2cd4d6a55f0c\" rel=\"nofollow noreferrer\">gist.github.com/danidiaz/65254521f8db91307eab2cd4d6a55f0c</a> the answer here omits some required language extensions."}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1501950126, "post_id": 45523136, "comment_id": 78008060, "body": "Brilliant! I have a feeling that my answer lies with generics - sop and the way you&#39;ve approached it. Only if I can wrap my head around the library! Btw, are you not using polymorphic records due to some constraint or it just makes the example easier? IIUC both the records, ie input and validators, can converted to SOP forms and the technique you have presented can be applied from there, right?"}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1501950211, "post_id": 45523136, "comment_id": 78008081, "body": "Also just checking, does generics-sop have some form of zipWith function that allows one to zip two records of the same shape?"}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "reply_to_user": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1501958490, "post_id": 45523136, "comment_id": 78010575, "body": "@Saurabh Nanda there exist <code>hzipWith</code> and <code>hczipWith</code> functions <a href=\"http://hackage.haskell.org/package/generics-sop-0.3.1.0/docs/Generics-SOP.html#v:hzipWith\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/generics-sop-0.3.1.0/docs/&hellip;</a>"}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "reply_to_user": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1501958622, "post_id": 45523136, "comment_id": 78010614, "body": "@Saurabh Nanda See this github issue <a href=\"https://github.com/well-typed/generics-sop/issues/47\" rel=\"nofollow noreferrer\">github.com/well-typed/generics-sop/issues/47</a> for a collection of links to learning resources. I prefer to avoid polymorphic records if I can help it, because I feel they are a bit intrusive. And yes, the idea is to construct validators, parsers, serializers... based on the structure of &quot;plain&quot; records. At the cost of boilerplate, sometimes I define a record pattern synonym to help me work with the n-ary products directly, like pattern <code>User&#39; {name&#39;, age&#39;, email&#39;} = name&#39; :* age&#39; :* email&#39; :* Nil))</code>."}, {"owner": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "edited": false, "score": 1, "creation_date": 1502034354, "post_id": 45523136, "comment_id": 78027447, "body": "@danidiaz Hmm, perhaps I should add a <code>Monoid</code> instance for <code>NP</code>, then <code>fold_NP</code> could just be <code>Data.Foldable.fold</code>."}], "tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": false, "score": 2, "last_activity_date": 1502005972, "last_edit_date": 1502005972, "creation_date": 1501944209, "answer_id": 45523136, "question_id": 45510332, "link": "https://stackoverflow.com/questions/45510332/is-it-necessary-to-write-haskell-generics-in-a-recursive-fashion/45523136#45523136", "title": "Is it necessary to write Haskell generics in a recursive fashion?", "body": "<p>This answer tries to comply with the requirement that field-specific errors should be stored in an appropriate slot. I don't tackle \"general errors\" because they are simpler to implement and this answer is sufficiently complicated as it is.</p>\n\n<p>Instead of using polymorphic records, we will use regular records, augmented with the <a href=\"http://hackage.haskell.org/package/generics-sop\" rel=\"nofollow noreferrer\">generics-sop</a> library. This library lets you define and work with generic representations of records, in which each record field is wrapped in some type constructor. The generic representations are basically <a href=\"http://hackage.haskell.org/package/generics-sop-0.3.1.0/docs/Generics-SOP.html#t:NP\" rel=\"nofollow noreferrer\">n-ary products parameterized by a type-level list of field types</a>. Notice that the fields don't have names; if we want to manipulate the n-ary products directly, we need to work positionally.</p>\n\n<pre><code>import Data.Bifunctor (bimap)\nimport qualified GHC.Generics as GHC\nimport Generics.SOP\nimport Control.Applicative.Lift (Errors,runErrors,failure)\n\ndata User = User { name :: Name, age :: Age, email :: Email } deriving (Show,GHC.Generic)\n\ninstance Generic User -- this generic is from generics-sop\n</code></pre>\n\n<hr>\n\n<p>A field validation type that depends on <a href=\"http://hackage.haskell.org/package/transformers-0.5.4.0/docs/Control-Applicative-Lift.html#t:Errors\" rel=\"nofollow noreferrer\"><code>Errors</code></a> from <a href=\"http://hackage.haskell.org/package/transformers\" rel=\"nofollow noreferrer\">transformers</a>. Notice that it also receives the whole record <code>r</code>:</p>\n\n<pre><code>newtype Validator r a = \n    Validator { runValidator :: r -&gt; a -&gt; Errors [FieldError] a } \n</code></pre>\n\n<p><code>Usher</code> wraps a function that injects <code>FieldError</code>s in the correct slot of an N-ary error record:</p>\n\n<pre><code>newtype Usher res xs a = Usher { getUsher :: res -&gt; NP (K res) xs }\n</code></pre>\n\n<p><code>ushers</code> returns an n-ary product with the appropriate <code>Usher</code> injectors for each field. Notice the <code>Monoid</code> constraint; without it we wouldn't be able to inject empty values in other fields.</p>\n\n<pre><code>ushers :: forall r xs res. (IsProductType r xs, Monoid res)\n       =&gt; Proxy r -&gt; NP (Usher res xs) xs\nushers _ =\n    let expand (Fn injection) =\n            Usher $ \\res -&gt; hexpand (K mempty) (unK (injection (K res)))\n    in hliftA expand (injections @xs @(K res))\n</code></pre>\n\n<p>Another helper function not provided by generics-sop:</p>\n\n<pre><code>-- combine the individual fields of a list of uniform n-ary-products \nfold_NP :: forall w xs . (Monoid w, SListI xs) =&gt; [NP (K w) xs] -&gt; NP (K w) xs\nfold_NP = Prelude.foldr (hliftA2 (mapKKK mappend)) (hpure (K mempty))\n</code></pre>\n\n<hr>\n\n<p>The actual validation function. Notice that the list of validators is provided as an n-ary product (derived from the record <code>r</code>):</p>\n\n<pre><code>validate :: forall r xs . IsProductType r xs\n         =&gt; NP (Validator r) xs -&gt; r -&gt; Either (NP (K [FieldError]) xs) r\nvalidate validators r =\n    let validators' = validators    :: NP (Validator r) xs\n        rs = hpure (K r)            :: NP (K r) xs -- a copy of the record in each slot\n        np = unZ (unSOP (from r))   :: NP I xs -- generic representation of the record\n        validated                   :: NP (Errors [FieldError])   xs\n        validated = hliftA3 (\\(Validator v) (K rec) (I a) -&gt; v rec a) validators' rs np\n\n        ushers' = ushers (Proxy @r) :: NP (Usher [FieldError] xs) xs -- error injectors\n        injected                    :: NP (Errors [NP (K [FieldError]) xs]) xs\n        injected = hliftA2 (\\(Usher usher) errors -&gt;\n                                case runErrors errors of\n                                    Right a' -&gt; pure a'\n                                    Left es -&gt; failure [usher es])\n                           ushers'\n                           validated\n    in bimap fold_NP (to . SOP . Z) . runErrors . hsequence $ injected\n</code></pre>\n\n<p>Finally, an example:</p>\n\n<pre><code>main :: IO ()\nmain = do\n   let valfail msg = Validator (\\_ _ -&gt; failure [msg])\n       validators = valfail \"err1\" :* valfail \"err2\" :* valfail \"err3\" :* Nil \n   print $ validate validators (User \"Foo\" 40 \"boo@bar\")\n   -- returns Left (K [\"err1\"] :* (K [\"err2\"] :* (K [\"err3\"] :* Nil)))\n</code></pre>\n"}], "owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 365, "favorite_count": 3, "answer_count": 2, "score": 4, "last_activity_date": 1502005972, "creation_date": 1501859834, "question_id": 45510332, "link": "https://stackoverflow.com/questions/45510332/is-it-necessary-to-write-haskell-generics-in-a-recursive-fashion", "title": "Is it necessary to write Haskell generics in a recursive fashion?", "body": "<p>Most examples for Haskell generics do small bits of computation recursively around the <code>:+:</code> and <code>:*:</code> types/constructors. I seem to be solving a problem where this may not work out. </p>\n\n<p>I'm trying to write a <em>generic</em> validation function that takes any two records having the same shape and validates each field in recordA against a validation function defined in recordB to return an error record of the <strong>same</strong> shape OR recordA itself.</p>\n\n<p>Example:</p>\n\n<pre><code>-- Some type synonyms for better readability\ntype Name = Text\ntype Age = Int\ntype Email = Text\ntype GeneralError = Text\ntype FieldError = Text\n\n-- a polymorphic record to help preserve the shape of various records\ndata User n a e = User {name :: n, age :: a, email :: e}\n\n-- the incoming value which has been parsed into the correct type\n-- but still needs various values to be validated, eg length, format, etc\ntype UserInput = User Name Age Email\n\n-- specifies the exact errors for each field\ntype UserError = User [FieldError] [FieldError] [FieldError]\n\n-- specifies how to validate each field. the validator is being passed\n-- the complete record along with the specific field to allow\n-- validations that depends on the value of another field\ntype UserValidator = User\n                     (UserInput -&gt; Name -&gt; Either ([GeneralError], [FieldError]) Name)\n                     (UserInput -&gt; Age -&gt; Either ([GeneralError], [FieldError]) Age)\n                     (UserInput -&gt; Email -&gt; Either ([GeneralError], [FieldError]) Email)\n\nlet (validationResult :: Either ([GeneralError], UserError) UserInput)\n  = genericValidation (i :: UserInput) (v :: UserValidator)\n</code></pre>\n\n<p>Now, the reason why doing this recursively around <code>:*:</code> might not work is, that one needs to look at the result of <em>every</em> validation function and then decide if the return value should be a <code>Left ([GeneralError], UserError)</code> or a <code>Right UserInput</code>. We cannot evaluate to a <code>Left</code> value on the first validation function that fails.</p>\n\n<p>Is there any way to write this <code>genericValidation</code> function using Haskell generics?</p>\n"}, {"tags": ["haskell", "zipwith"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 5, "creation_date": 1501858120, "post_id": 45509368, "comment_id": 77980608, "body": "Worth noting that this is more commonly written <code>zipWith ($)</code>. Which works exactly the same way; the <code>$</code> operator is simply a type-narrowed version of <code>id</code>."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1501887753, "post_id": 45509368, "comment_id": 77994433, "body": "If you&#39;ve &quot;tried to analyze&quot;, you should include the details of your attempted analysis, or potential answerers may be simply re-explaining that which you do understand, and completely missing that which you don&#39;t."}], "answers": [{"comments": [{"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1501858203, "post_id": 45509467, "comment_id": 77980670, "body": "What does the <code>~</code> mean?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 1, "creation_date": 1501858268, "post_id": 45509467, "comment_id": 77980722, "body": "@zero_coding: it means <a href=\"https://stackoverflow.com/a/27667708/67579\"><i>type equality</i></a>. So for instance <code>a ~ d</code> means that <code>a</code> and <code>d</code> are the same types. <a href=\"https://wiki.haskell.org/GHC/Type_families#Equality_constraints\" rel=\"nofollow noreferrer\">further reading</a>."}, {"owner": {"reputation": 14006, "user_id": 3798102, "user_type": "registered", "accept_rate": 62, "profile_image": "https://graph.facebook.com/100002464470905/picture?type=large", "display_name": "pamu", "link": "https://stackoverflow.com/users/3798102/pamu"}, "reply_to_user": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1501860727, "post_id": 45509467, "comment_id": 77982312, "body": "@zero_coding I have added an answer that can make you understand with out the <code>~</code>. Just though simple type inference logic. But, @Willem Van Onsem answer is really great."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 14, "last_activity_date": 1501871747, "last_edit_date": 1501871747, "creation_date": 1501857195, "answer_id": 45509467, "question_id": 45509368, "link": "https://stackoverflow.com/questions/45509368/how-does-the-second-parameter-become-a-list-of-functions/45509467#45509467", "title": "How does the second parameter become a list of functions?", "body": "<p>The type of <code>zipWith</code> is:</p>\n\n<pre><code>zipWith :: (a -&gt; b -&gt; c) -&gt; [a] -&gt; [b] -&gt; [c]\n</code></pre>\n\n<p>And the type of <code>id</code> is:</p>\n\n<pre><code>id :: d -&gt; d\n</code></pre>\n\n<p>So if we now want to derive the type of <code>zipWith id</code>, we push the type of <code>id :: d -&gt; d</code> into the type of the first argument of <code>zipWith</code>:</p>\n\n<pre><code>  d -&gt; d\n~ a -&gt; (b -&gt; c)\n</code></pre>\n\n<p>So that means that: <code>a ~ d</code> and <code>a ~ b -&gt; c</code>. So that means that the type of <code>zipWith id</code> is now:</p>\n\n<pre><code>   zipWith id :: [a] -&gt; [b] -&gt; [c]\n-&gt; zipWith id :: [b -&gt; c] -&gt; [b] -&gt; [c]\n</code></pre>\n\n<p>How does this work: the first list has to contain a list of functions <code>f :: b -&gt; c</code>, and the second list, a list of elements <code>x :: b</code>, and it thus calculates a list of elements <code>f x :: c</code>.</p>\n\n<p>For example:</p>\n\n<pre><code>Prelude&gt; zipWith id [(+1),(5/),(3*),(3-)] [1,4,2,5]\n[2.0,1.25,6.0,-2.0]\n</code></pre>\n\n<p>since <code>1+1</code> is <code>2.0</code>, <code>5/4</code> is <code>1.25</code>, <code>3*2</code> is <code>6.0</code> and <code>3-5</code> is <code>-2.0</code>.</p>\n\n<p>So <code>zipWith id</code> will take two elements <code>f</code> and <code>x</code>, and apply <code>id f x</code> on these, or more verbose <code>(id f) x</code>. Since <code>id f</code> is <code>f</code>, it will thus calculate <code>f x</code>.</p>\n\n<p>We can thus conclude that <code>zipWith</code> is an <em>elementwise</em> mapping.</p>\n"}, {"tags": [], "owner": {"reputation": 14006, "user_id": 3798102, "user_type": "registered", "accept_rate": 62, "profile_image": "https://graph.facebook.com/100002464470905/picture?type=large", "display_name": "pamu", "link": "https://stackoverflow.com/users/3798102/pamu"}, "is_accepted": false, "score": 5, "last_activity_date": 1501861969, "last_edit_date": 1592644375, "creation_date": 1501860234, "answer_id": 45510471, "question_id": 45509368, "link": "https://stackoverflow.com/questions/45509368/how-does-the-second-parameter-become-a-list-of-functions/45510471#45510471", "title": "How does the second parameter become a list of functions?", "body": "<p>Thank you, Willem Van Onsem for the great answer.</p>\n<blockquote>\n<p>Let's understand <code>zipWith id</code> from the eyes of the type inference system of ghc.</p>\n</blockquote>\n<p>first, consider the type of <code>zipWith</code></p>\n<pre><code>Prelude&gt; :info zipWith\nzipWith :: (a -&gt; b -&gt; c) -&gt; [a] -&gt; [b] -&gt; [c]\n    -- Defined in \u2018GHC.List\u2019\n</code></pre>\n<p>First argument of <code>zipWith</code> is a function which accepts a function which takes two arguments.</p>\n<p><code>(a -&gt; b -&gt; c)</code>  can also be re-written as <code>a -&gt; (b -&gt; c)</code></p>\n<p>now consider <code>zipWith id</code>. type of <code>id</code> is from <code>a -&gt; a</code></p>\n<p>we have put <code>id</code> in a place where a two argument function must go.</p>\n<p>So, type inference would make <code>(a -&gt; b -&gt; c)</code> look like <code>a -&gt; (b -&gt; c)</code> (notice <code>a -&gt; (b -&gt; c)</code> takes one arument a and gives <code>b -&gt; c</code> i.e a single argument function.)</p>\n<p>But, making <code>a -&gt; (b -&gt; c)</code> an identity function would be possible only if <code>a</code> is (b -&gt; c).</p>\n<p>When <code>a</code> is (b -&gt; c) the function <code>a -&gt; b -&gt; c</code> becomes ((b -&gt; c) -&gt; (b -&gt; c))</p>\n<p>So, type inferencing system would infer <code>a</code> as <code>(b -&gt; c)</code> and the resultant output would be <code>[a] -&gt; [b] -&gt; [c]</code> replacing <code>a</code> with <code>b -&gt; c</code>.</p>\n<blockquote>\n<p>Replace <code>a</code> with (b -&gt; c).</p>\n<p>Make (a -&gt; b -&gt; c) look like <code>id</code>. (a -&gt; b -&gt; c) can be made to look like <code>id</code> by the above replacement.</p>\n<p>((b -&gt; c) -&gt; b -&gt; c) which can also be written as ((b -&gt; c) -&gt; (b -&gt; c)) which is <code>id :: x -&gt; x</code> where <code>x</code> is (b -&gt; c)</p>\n</blockquote>\n<pre><code>zipWith :: ((b -&gt; c) -&gt; b -&gt; c) -&gt; [b -&gt; c] -&gt; [b] -&gt; [c]\n</code></pre>\n<p>So finally we get output as <code>[b -&gt; c] -&gt; [b] -&gt; [c]</code></p>\n"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 160, "favorite_count": 0, "accepted_answer_id": 45509467, "answer_count": 2, "score": 5, "last_activity_date": 1501887677, "creation_date": 1501856867, "last_edit_date": 1501887677, "question_id": 45509368, "link": "https://stackoverflow.com/questions/45509368/how-does-the-second-parameter-become-a-list-of-functions", "title": "How does the second parameter become a list of functions?", "body": "<p>I am playing a bit with <code>zipWith</code> and encounter following: </p>\n\n<pre><code>Prelude Control.Applicative&gt; :t zipWith id\nzipWith id :: [b -&gt; c] -&gt; [b] -&gt; [c]\n</code></pre>\n\n<p>Why does the compiler expect for the next argument a list of functions?</p>\n\n<p>I tried to analyze, but could not conclude, why the next argument must be a list of functions.</p>\n\n<p>How did the signature is getting apply, when I pass <code>id</code> to <code>zipWith</code>?</p>\n"}, {"tags": ["performance", "haskell", "comonad"], "answers": [{"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 6, "last_activity_date": 1571387644, "last_edit_date": 1571387644, "creation_date": 1501852123, "answer_id": 45507708, "question_id": 45506813, "link": "https://stackoverflow.com/questions/45506813/performance-of-conways-game-of-life-using-the-store-comonad/45507708#45507708", "title": "Performance of Conway&#39;s Game of Life using the Store comonad", "body": "<p>The store comonad per se doesn't really store anything (except in an abstract sense that a function is a \u201ccontainer\u201d), but has to compute it from scratch. That clearly gets very inefficient over a couple of iterations.</p>\n\n<p>You can alleviate this with no change to your code though, if you just back up the <code>s -&gt; a</code> function with <a href=\"http://hackage.haskell.org/package/MemoTrie-0.6.8/docs/Data-MemoTrie.html\" rel=\"nofollow noreferrer\">some memoisation</a>:</p>\n\n<pre><code>import Data.MemoTrie\n\ninstance HasTrie s =&gt; Functor (Store s) where\n  fmap f (Store g s) = Store (memo $ f . g) s\n\ninstance HasTrie s =&gt; Comonad (Store s) where\n  extract (Store f a) = f a\n  duplicate (Store f s) = Store (Store f) s\n</code></pre>\n\n<p>Haven't tested whether this really gives acceptable performance.</p>\n\n<p>Incidentally, Edward Kmett had an explicitly-memoised version <a href=\"http://hackage.haskell.org/package/comonad-extras-0.1.3/docs/Control-Comonad-Store-MemoTrie.html\" rel=\"nofollow noreferrer\">in an old version of the <code>comonad-extras</code> package</a>, but it's gone now. I've recently <a href=\"https://github.com/leftaroundabout/MemoTrie-comonads\" rel=\"nofollow noreferrer\">looked if that still works</a> (seems like it does, after adjusting dependencies).</p>\n"}], "owner": {"reputation": 938, "user_id": 474311, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/aad241f867909f119502ffbff53849af?s=128&d=identicon&r=PG", "display_name": "Dan Onea\u021b\u0103", "link": "https://stackoverflow.com/users/474311/dan-onea%c8%9b%c4%83"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 690, "favorite_count": 2, "accepted_answer_id": 45507708, "answer_count": 1, "score": 4, "last_activity_date": 1571387644, "creation_date": 1501849506, "question_id": 45506813, "link": "https://stackoverflow.com/questions/45506813/performance-of-conways-game-of-life-using-the-store-comonad", "title": "Performance of Conway&#39;s Game of Life using the Store comonad", "body": "<p>I've written a simple implementation of <a href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\" rel=\"nofollow noreferrer\">Conway's Game of Life</a> using the <a href=\"https://stackoverflow.com/q/8766246/474311\">Store</a> comonad (see code below). My problem is that the grid generation is getting visibly slower from the fifth iteration onwards. Is my issue related to the fact that I'm using the Store comonad? Or am I making a glaring mistake? As far as I could tell, <a href=\"https://github.com/gelisam/conway\" rel=\"nofollow noreferrer\">other</a> <a href=\"https://samtay.github.io/posts/comonadic-game-of-life.html\" rel=\"nofollow noreferrer\">implementations</a>, which are based on the Zipper comonad, are efficient.</p>\n\n<pre><code>import Control.Comonad\n\ndata Store s a = Store (s -&gt; a) s\n\ninstance Functor (Store s) where\n    fmap f (Store g s) = Store (f . g) s\n\ninstance Comonad (Store s) where\n    extract (Store f a) = f a\n    duplicate (Store f s) = Store (Store f) s\n\ntype Pos = (Int, Int)\n\nseed :: Store Pos Bool\nseed = Store g (0, 0)\n    where\n        g ( 0,  1) = True\n        g ( 1,  0) = True\n        g (-1, -1) = True\n        g (-1,  0) = True\n        g (-1,  1) = True\n        g _        = False\n\nneighbours8 :: [Pos]\nneighbours8 = [(x, y) | x &lt;- [-1..1], y &lt;- [-1..1], (x, y) /= (0, 0)]\n\nmove :: Store Pos a -&gt; Pos -&gt; Store Pos a\nmove (Store f (x, y)) (dx, dy) = Store f (x + dx, y + dy)\n\ncount :: [Bool] -&gt; Int\ncount = length . filter id\n\ngetNrAliveNeighs :: Store Pos Bool -&gt; Int\ngetNrAliveNeighs s = count $ fmap (extract . move s) neighbours8\n\nrule :: Store Pos Bool -&gt; Bool\nrule s = let n = getNrAliveNeighs s\n        in case (extract s) of\n            True  -&gt; 2 &lt;= n &amp;&amp; n &lt;= 3\n            False -&gt; n == 3\n\nblockToStr :: [[Bool]] -&gt; String\nblockToStr = unlines . fmap (fmap f)\n    where\n        f True  = '*'\n        f False = '.'\n\ngetBlock :: Int -&gt; Store Pos a -&gt; [[a]]\ngetBlock n store@(Store _ (x, y)) =\n    [[extract (move store (dx, dy)) | dy &lt;- yrange] | dx &lt;- xrange]\n    where\n        yrange = [(x - n)..(y + n)]\n        xrange = reverse yrange\n\nexample :: IO ()\nexample = putStrLn\n        $ unlines\n        $ take 7\n        $ fmap (blockToStr . getBlock 5)\n        $ iterate (extend rule) seed\n</code></pre>\n"}, {"tags": ["haskell", "data-structures", "multiplexing"], "answers": [{"comments": [{"owner": {"reputation": 1376, "user_id": 2652567, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/eabaf5ae94dea9d5abc7be91727870c0?s=128&d=identicon&r=PG&f=1", "display_name": "sba", "link": "https://stackoverflow.com/users/2652567/sba"}, "edited": false, "score": 1, "creation_date": 1501849361, "post_id": 45505481, "comment_id": 77974112, "body": "Beautiful, I never saw multiplexing that way! Even my own function works both ways and I didn&#39;t notice. (And I still don&#39;t understand why. Have to work it out on paper.)"}, {"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 2, "creation_date": 1501856532, "post_id": 45505481, "comment_id": 77979501, "body": "Does this definition mean that <code>transpose</code> is a partial function? I mean, if I say <code>transpose [ [1], [] ]</code>, it will break, right?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 1, "creation_date": 1501856714, "post_id": 45505481, "comment_id": 77979615, "body": "@FyodorSoikin: no, as the documentation says: &quot;<i>If some of the rows are shorter than the following rows, their elements are skipped:</i>&quot;. The given defintion will indeed error, but apparently the source code has been updated. The <code>transpose [[1],[]]</code> produces <code>[[1]]</code>."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 5, "last_activity_date": 1501845867, "last_edit_date": 1501845867, "creation_date": 1501845557, "answer_id": 45505481, "question_id": 45505223, "link": "https://stackoverflow.com/questions/45505223/write-a-list-demultiplexer/45505481#45505481", "title": "Write a list demultiplexer", "body": "<p>I think that work has already been done for you: both <code>mux</code> and <code>demux</code>, are actually just <a href=\"http://hackage.haskell.org/package/base-4.10.0.0/docs/Data-List.html#v:transpose\" rel=\"noreferrer\"><strong><code>transpose :: [[a]] -&gt; [[a]]</code></strong></a> functions:</p>\n\n<pre><code>import Data.List(transpose)\n\nmux = transpose\ndemux = transpose\n</code></pre>\n\n<p>This thus means that multiplexing is actually (at least in terms of a list of list) the same as demultiplexing.</p>\n\n<p>It generates the expected:</p>\n\n<pre><code>Prelude Data.List&gt; transpose [[0.1, -0.1, -0.3], [0.2, 0.4, 0.6]]\n[[0.1,0.2],[-0.1,0.4],[-0.3,0.6]]\nPrelude Data.List&gt; transpose [[0.1, 0.2], [-0.1, 0.4], [-0.3, 0.6]]\n[[0.1,-0.1,-0.3],[0.2,0.4,0.6]]\n</code></pre>\n\n<p><code>transpose</code> works in a lazy manner. We can inspect the <a href=\"http://hackage.haskell.org/package/base-4.10.0.0/docs/src/Data.OldList.html#transpose\" rel=\"noreferrer\">source code</a>:</p>\n\n<blockquote>\n<pre><code>transpose               :: [[a]] -&gt; [[a]]\ntranspose []             = []\ntranspose ([]   : xss)   = transpose xss\ntranspose ((x:xs) : xss) = (x : [h | (h:_) &lt;- xss]) : transpose (xs : [ t | (_:t) &lt;- xss])\n</code></pre>\n</blockquote>\n\n<p>The last statement is a complex version of:</p>\n\n<pre><code>transpose l = map head l : transpose (map tail l)\n</code></pre>\n"}], "owner": {"reputation": 1376, "user_id": 2652567, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/eabaf5ae94dea9d5abc7be91727870c0?s=128&d=identicon&r=PG&f=1", "display_name": "sba", "link": "https://stackoverflow.com/users/2652567/sba"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 144, "favorite_count": 0, "accepted_answer_id": 45505481, "answer_count": 1, "score": 1, "last_activity_date": 1501847757, "creation_date": 1501844739, "last_edit_date": 1501847757, "question_id": 45505223, "link": "https://stackoverflow.com/questions/45505223/write-a-list-demultiplexer", "title": "Write a list demultiplexer", "body": "<p>I'm trying to process the channels of an audio signal. I get the signal as list of frames where each frame has a sample for each channel. Now I would like to process the streams independently then merge them again. So I want</p>\n\n<pre><code>type Sample = Double\ntype Frame = [Sample]\ntype Stream = [Sample]\nmux :: [Stream] -&gt; [Frame]\ndemux :: [Frame] -&gt; [Stream]\nprocess :: Stream -&gt; Stream\n\noutput = (mux . (map process) . demux) input\n\nmux [[0.1, -0.1, -0.3], [0.2, 0.4, 0.6]] = [[0.1, 0.2], [-0.1, 0.4], [-0.3, 0.6]]\ndemux [[0.1, 0.2], [-0.1, 0.4], [-0.3, 0.6]] = [[0.1, -0.1, -0.3], [0.2, 0.4, 0.6]]\n</code></pre>\n\n<p>Because the streams are long, <code>mux</code> and <code>demux</code> must be lazy and not evaluate the whole list.</p>\n\n<p>The multiplexer seems straightforward. The only thing I don't like about this version is the hard-to-read pattern matching.</p>\n\n<pre><code>mux streams@((_:_):_) = map head streams : mux (map tail streams)\nmux _ = []\n</code></pre>\n\n<p>However I can't readily come up with a demultiplexer that would turn a list of frames into a list of streams. Since in my case there won't be more than two streams (stereo audio), I think I could manage by writing two demuxers, <code>monoDemux</code> and <code>stereoDemux</code>. But I would like one function to work on any number of channels. How can I lazily demux a list of frames? </p>\n"}, {"tags": ["list", "haskell"], "comments": [{"owner": {"reputation": 43, "user_id": 8289587, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-t8_MyqkcJbs/AAAAAAAAAAI/AAAAAAAAABo/EbHcX_jtC-g/photo.jpg?sz=128", "display_name": "VVV", "link": "https://stackoverflow.com/users/8289587/vvv"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1501846183, "post_id": 45504756, "comment_id": 77971927, "body": "@ Willem Van Onsem   I wrote a code that would  definitely not give the right answer!      print(minimum([x | x &lt;- [1..], y &lt;- [1..10], rem x y == 0]))"}], "answers": [{"tags": [], "owner": {"reputation": 412, "user_id": 6593641, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/xVNVQ.jpg?s=128&g=1", "display_name": "madnight", "link": "https://stackoverflow.com/users/6593641/madnight"}, "is_accepted": false, "score": 1, "last_activity_date": 1501846717, "creation_date": 1501846717, "answer_id": 45505865, "question_id": 45504756, "link": "https://stackoverflow.com/questions/45504756/how-to-divide-every-element-in-a-list-with-each-element-in-another-list-in-haske/45505865#45505865", "title": "How to divide every element in a list with each element in another list in haskell", "body": "<pre><code>let divcheck = (take 10 .) . filter . flip (all . ((0 ==) .) . mod)\n\ndivcheck [1..10] [1..]\n-- [2520,5040,7560,10080,12600,15120,17640,20160,22680,25200]\n\ndivcheck [1,2,3] [1..]\n-- [6,12,18,24,30,36,42,48,54,60]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 43, "user_id": 8289587, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-t8_MyqkcJbs/AAAAAAAAAAI/AAAAAAAAABo/EbHcX_jtC-g/photo.jpg?sz=128", "display_name": "VVV", "link": "https://stackoverflow.com/users/8289587/vvv"}, "edited": false, "score": 0, "creation_date": 1501926113, "post_id": 45505911, "comment_id": 78001410, "body": "@ Willem Van Onsem  Thank You for the detailed explanation :)"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 8, "last_activity_date": 1501853657, "last_edit_date": 1501853657, "creation_date": 1501846874, "answer_id": 45505911, "question_id": 45504756, "link": "https://stackoverflow.com/questions/45504756/how-to-divide-every-element-in-a-list-with-each-element-in-another-list-in-haske/45505911#45505911", "title": "How to divide every element in a list with each element in another list in haskell", "body": "<h1>Your attempt</h1>\n\n<p>You wrote:</p>\n\n<pre><code>print(minimum([x | x &lt;- [1..], y &lt;- [1..10], rem x y == 0]))\n</code></pre>\n\n<p>Now this will not work for several reasons:</p>\n\n<ol>\n<li>It will add <code>x</code> to the list in the list comprehension, given there is <em>any</em> element <code>y</code> in <code>[1..10]</code> that divides <code>x</code>. Furthermore for any such <code>y</code>, we will add <code>x</code> one time. So given <code>x</code> is <code>6</code>, it will add it three four times, since <code>6</code> is dividable by 1, 2, 3 and 6;</li>\n<li>The result will be an infinite list, and it is thus impossible to calculate the minimum of that list. This is because Haskell does not know that the list is already ordered, and thus the minimum is simply the first element. You could have taken the first element with <code>head</code>;</li>\n<li><code>minimum</code> will only produce one element, but you want the first 10.</li>\n</ol>\n\n<h1>Brute force approach</h1>\n\n<p>First we can use list comprehension to generate all these numbers (for arbitrary lists <code>as</code> and <code>bs</code>):</p>\n\n<pre><code>divide_all as bs = [a | a &lt;- as, all ((0 ==) . mod a) bs]\n</code></pre>\n\n<p>So here the list comprehension iterates over <code>as</code> and assigns every element to <code>a</code>. Next we have a filter <code>all ((0 ==) . mod a) bs</code>, which is a compact form of <code>all (\\b -&gt; mod a b == 0) bs</code>. So it checks whether for all members <code>b</code> in <code>bs</code>, <code>mod a b == 0</code> (so <code>a</code> is dividable by <code>b</code>). If the filter is satisfied, then we add <code>a</code> (in the head of the list comprehension) to the result. Note that such lists are build lazily, so the fact that <code>as</code> has an infinite number of elements, is not a problem.</p>\n\n<p>Now we can use <code>take :: Int -&gt; [a] -&gt; [a]</code> to take the first 10 of these numbers, and thus print these:</p>\n\n<pre><code>mapM_ print (take 10 $ divide_all [1..] [1..10])\n</code></pre>\n\n<p>which prints:</p>\n\n<pre><code>Prelude&gt; mapM_ print (take 10 $ divide_all [1..] [1..10])\n2520\n5040\n7560\n10080\n12600\n15120\n17640\n20160\n22680\n25200\n</code></pre>\n\n<h1>Least common multiple</h1>\n\n<p>The above approach is not very efficient: for every element of <code>a</code>, we need to check whether it is dividable with every element of <code>b</code>. It took my machine 2.16 seconds to calculate the 1000th element of this list, and 10.21 seconds to find the 5000th element.</p>\n\n<p>We can speed up the last one, by calculating the <em>least common multiple (lcm)</em> of all the elements in <code>b</code>, and check if a number is dividable by the lcm:</p>\n\n<pre><code>divide_all as bs = [a | a &lt;- as, mod a lcmb == 0] -- optimized version\n    where lcmb = foldr1 lcm bs\n</code></pre>\n\n<p>So now we have to perform only one check. Calculating the 1000th element now takes 0.95 seconds, and calculating the 5000th element, takes 4.54 seconds.</p>\n\n<h1>In case <code>as = [1..]</code></h1>\n\n<p>In case <code>as</code> is known to be <code>[1..]</code> we can boost this code dramatically, since we know that the elements of <code>a</code> are all multiples of <code>lcmb</code>. So we can drop the <code>as</code> parameter, and use:</p>\n\n<pre><code>divide_all bs = [lcmb*a | a &lt;- [1..]] -- optimized version\n    where lcmb = foldr1 lcm bs\n</code></pre>\n\n<p>Now calculating the 1000th element takes 0.01 seconds, and calculating the 5000th element 0.03 seconds. But of course this only works given the assumption.</p>\n"}], "owner": {"reputation": 43, "user_id": 8289587, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-t8_MyqkcJbs/AAAAAAAAAAI/AAAAAAAAABo/EbHcX_jtC-g/photo.jpg?sz=128", "display_name": "VVV", "link": "https://stackoverflow.com/users/8289587/vvv"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 451, "favorite_count": 0, "accepted_answer_id": 45505911, "answer_count": 2, "score": 1, "last_activity_date": 1501853657, "creation_date": 1501843381, "last_edit_date": 1501846566, "question_id": 45504756, "link": "https://stackoverflow.com/questions/45504756/how-to-divide-every-element-in-a-list-with-each-element-in-another-list-in-haske", "title": "How to divide every element in a list with each element in another list in haskell", "body": "<p>Suppose I have an infinite list <code>A = [1..]</code> I want to divide each element in <code>A</code> with all elements in list <code>B = [1..10]</code> If any element in list <code>A</code> is divisible by all the elements in <code>B</code> I need to print it.\nI need to continue this till I get 10 such numbers.</p>\n\n<p>The following attempt did not work:</p>\n\n<pre><code>print(minimum([x | x &lt;- [1..], y &lt;- [1..10], rem x y == 0]))\n</code></pre>\n"}, {"tags": ["haskell", "types", "linear-types"], "comments": [{"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 0, "creation_date": 1501836780, "post_id": 45502238, "comment_id": 77965270, "body": "<a href=\"https://github.com/tweag/linear-types/releases/download/v1.0/hlt.pdf\" rel=\"nofollow noreferrer\">Probably relevant</a>"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 2, "creation_date": 1501838204, "post_id": 45502238, "comment_id": 77966279, "body": "I feel this article gives almost no explanation of the underlying semantics - just examples of how one uses such a technology (to be fair, this is probably a good format for a blog post). You could view <code>x \u22b8 y</code> as a synonym for <code>1 x -&gt; y</code> which is a regular arrow, whose domain is <code>1 x</code> which says the variable <code>a :: 1 x</code> is used exactly once. By type inference, in your second example, <code>y</code> gets the inferred type <code>1 a</code> because <code>y = x</code> and <code>x :: 1 a</code>. This extends to all natural numbers and infinity, and is a nice generalization - the regular arrow <code>x -&gt; y</code> can be read as <code>\u03c9 x -&gt; y</code>."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1501838223, "post_id": 45502238, "comment_id": 77966294, "body": "See the proposal on the <a href=\"https://ghc.haskell.org/trac/ghc/wiki/LinearTypes\" rel=\"nofollow noreferrer\">trac</a> for more details."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 2, "creation_date": 1501838834, "post_id": 45502238, "comment_id": 77966723, "body": "Oh, and the paper you&#39;ve linked gives the semantics properly. See sec 3.1, fig. 2 - the typing rule corresponding to <code>let</code>. However, note that in that paper, the <code>let</code> construct always contains an explicit type signature on the <code>let</code>-bound variable. With the syntax of that paper, your 2nd program (and indeed, most Haskell programs!) are not even syntactically valid. But the point is that in the paper, the standard typing judgment <code>x : T</code> is generalized to <code>x :_{q} T</code> (that <code>q</code> should be a subscript). So a term is annotated with its type, and its multiplicity."}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1501838880, "post_id": 45502238, "comment_id": 77966765, "body": "@user2407038 Those comments should be an answer ;)"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1501839880, "post_id": 45502238, "comment_id": 77967564, "body": "Done - let me know if I can clarify anything (or make edits yourself if you would like) - I&#39;m not exactly an expert on this subject."}], "answers": [{"tags": [], "owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "is_accepted": true, "score": 5, "last_activity_date": 1501839294, "creation_date": 1501839294, "answer_id": 45503271, "question_id": 45502238, "link": "https://stackoverflow.com/questions/45502238/how-can-linear-types-prevent-such-implementation-of-duplicate/45503271#45503271", "title": "How can linear types prevent such implementation of &quot;duplicate&quot;?", "body": "<p>I feel this article gives almost no explanation of the underlying semantics - just examples of how one uses such a technology. To be fair, this is probably a good format for a blog post.</p>\n\n<p>You could view <code>x \u22b8 y</code> as a synonym for <code>1 x -&gt; y</code> which is a regular arrow, whose domain is <code>1 x</code> which says the variable <code>a :: 1 x</code> is used exactly once. By type inference, in your second example, <code>y</code> gets the inferred type <code>1 a</code> because <code>y = x</code> and <code>x :: 1 a</code>. This extends to all natural numbers and infinity. Furthermore, the regular arrow <code>x -&gt; y</code> can be read as <code>\u03c9 x -&gt; y</code>, where <code>\u03c9</code> is infinity. </p>\n\n<p>The <a href=\"https://github.com/tweag/linear-types/releases/download/v1.0/hlt.pdf\" rel=\"noreferrer\">paper</a> you've linked gives the semantics properly. See sec 3.1, fig. 2 - the typing rule corresponding to <code>let</code>. The standard typing judgment <code>x : T</code> is generalized to <code>x :_{q} T</code> (that q should be a subscript). In existing Haskell type semantics, a term is annotated with its type. In the proposed extension to the type system, a term is annotated with its type, and its multiplicity.</p>\n\n<p>However, note that in that paper, the let construct always contains an explicit type signature on the let-bound variable. With the syntax of that paper, your 2nd program (and indeed, most Haskell programs!) are not even syntactically valid. But I claim (without proof) that it is not hard to see how to generalize such a type system to one with more reminiscent of the current Haskell type system. See the proposal on the GHC <a href=\"https://ghc.haskell.org/trac/ghc/wiki/LinearTypes\" rel=\"noreferrer\">trac</a> for more details on how that might look.</p>\n"}], "owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 96, "favorite_count": 1, "accepted_answer_id": 45503271, "answer_count": 1, "score": 3, "last_activity_date": 1501839294, "creation_date": 1501836514, "question_id": 45502238, "link": "https://stackoverflow.com/questions/45502238/how-can-linear-types-prevent-such-implementation-of-duplicate", "title": "How can linear types prevent such implementation of &quot;duplicate&quot;?", "body": "<p>I recently read <a href=\"https://www.tweag.io/posts/2017-03-13-linear-types.html\" rel=\"nofollow noreferrer\">the post on Tweag.IO</a> about Linear Types being an useful tool for expressing arguments used only(exactly) once. They present the following example:</p>\n\n<pre><code>dup :: a \u22b8 (a,a)\ndup x = (x,x)\n</code></pre>\n\n<p>Now, maybe I'm misunderstanding the idea, but why couldn't this be circumvented with:</p>\n\n<pre><code>dup' :: a \u22b8 (a,a)\ndup' x = (y,y)\n  where\n    y = x\n</code></pre>\n\n<p>The article specifically mentions <em>arguments</em>. Does that extend to all bindings in the function as well?</p>\n"}, {"tags": ["haskell", "ghc", "ghci", "rank-n-types"], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 4, "last_activity_date": 1501833867, "creation_date": 1501833867, "answer_id": 45501379, "question_id": 45501162, "link": "https://stackoverflow.com/questions/45501162/rankntypes-in-haskell-list-comprehension-works-but-map-does-not/45501379#45501379", "title": "RankNTypes in haskell. List comprehension works but map does not", "body": "<p>These are not equivalent:</p>\n\n<pre><code>*Demo&gt; [ grad f | Fun f &lt;- fList ]\n*Demo&gt; map (\\f -&gt; grad (Fun f)) fList\n</code></pre>\n\n<p>The first one, roughly, extracts a value from <code>fList</code>, say <code>x</code>, chooses <code>f</code> so that <code>Fun f = x</code>, and then calls <code>grad f</code>.</p>\n\n<p>The second one extracts a value from <code>fList</code> calling it <code>f</code> (!), and computes <code>Fun f</code>, and passes it to <code>grad</code>.</p>\n\n<p>So, the first removes the <code>Fun</code> wrapper from the list elements, the second adds the wrapper instead.</p>\n\n<p>Compare it to:</p>\n\n<pre><code>*Demo&gt; map (\\ (Fun f) -&gt; grad f) fList\n</code></pre>\n\n<p>which would remove the wrapper as the list comprehension does.</p>\n"}], "owner": {"reputation": 69, "user_id": 8415977, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/a340bd27bb52c2887829884e9e8040e7?s=128&d=identicon&r=PG&f=1", "display_name": "Donovan", "link": "https://stackoverflow.com/users/8415977/donovan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 46, "favorite_count": 0, "accepted_answer_id": 45501379, "answer_count": 1, "score": 1, "last_activity_date": 1501833867, "creation_date": 1501833280, "question_id": 45501162, "link": "https://stackoverflow.com/questions/45501162/rankntypes-in-haskell-list-comprehension-works-but-map-does-not", "title": "RankNTypes in haskell. List comprehension works but map does not", "body": "<p>I'd like to know specifically <em>why</em> map does not work in the following:</p>\n\n<pre><code>{-# Language RankNTypes #-}\nmodule Demo where\nimport Numeric.AD\n\nnewtype Fun = Fun (forall a. Num a =&gt; [a] -&gt; a)\n\ntest1 :: Fun \ntest1 = Fun $ \\[u, v] -&gt; (v - (u * u * u)) \n\ntest2 :: Fun \ntest2 = Fun $ \\ [u, v] -&gt; ((u * u) + (v * v) - 1)\n\nworks :: (Ord a, Num a) =&gt; [[a] -&gt; [a]]\nworks = [ grad f | Fun f &lt;- fList ]\n\nfList :: [Fun]\nfList = [test1, test2]\n</code></pre>\n\n<p>pulling this into GHCI I get the following:</p>\n\n<pre><code>*Demo&gt; w = [ grad f | Fun f &lt;- fList ]\n*Demo&gt; map (\\f -&gt; f [1, 1]) w\n[[-3,1],[2,2]]\n</code></pre>\n\n<p>which works nicely, however the following, which as far as I can tell should do the same thing, does not work. Why not? What is the issue here?</p>\n\n<pre><code>*Demo&gt; map (\\f -&gt; grad (Fun f)) fList\n&lt;interactive&gt;:31:18: error:\n\u2022 Couldn't match expected type \u2018f (Numeric.AD.Internal.Reverse.Reverse\n                                     s a)\n                                -&gt; Numeric.AD.Internal.Reverse.Reverse s a\u2019\n              with actual type \u2018Fun\u2019\n\u2022 Possible cause: \u2018Fun\u2019 is applied to too many arguments\n  In the first argument of \u2018grad\u2019, namely \u2018(Fun f)\u2019\n  In the expression: grad (Fun f)\n  In the first argument of \u2018map\u2019, namely \u2018(\\ f -&gt; grad (Fun f))\u2019\n\u2022 Relevant bindings include\n    it :: [f a -&gt; f a] (bound at &lt;interactive&gt;:31:1)\n\n&lt;interactive&gt;:31:22: error:\n\u2022 Couldn't match expected type \u2018[a1] -&gt; a1\u2019 with actual type \u2018Fun\u2019\n\u2022 In the first argument of \u2018Fun\u2019, namely \u2018f\u2019\n  In the first argument of \u2018grad\u2019, namely \u2018(Fun f)\u2019\n  In the expression: grad (Fun f)\n</code></pre>\n\n<p>the library I'm using is the haskell ad library: <a href=\"https://hackage.haskell.org/package/ad-4.3.4\" rel=\"nofollow noreferrer\">https://hackage.haskell.org/package/ad-4.3.4</a></p>\n\n<p>Cheers!</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 3, "creation_date": 1501828862, "post_id": 45499579, "comment_id": 77960440, "body": "What are the types of <code>readLn</code> and <code>getLine</code> (by extension, what are the types of <code>x</code> and <code>y</code> in either program?). What is the type of <code>add</code>? Did you read the type error for the 2nd program? It is probably something like <code>No instance for Num [Char]</code> or <code>Couldn&#39;t match Integer with String</code> - does the error answer your question?"}, {"owner": {"reputation": 11, "user_id": 8259868, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22f2559b3f54063f69754dff541d4e80?s=128&d=identicon&r=PG&f=1", "display_name": "Deepika Vemuri", "link": "https://stackoverflow.com/users/8259868/deepika-vemuri"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1501830895, "post_id": 45499579, "comment_id": 77961597, "body": "x and y are integers. So since getLine reads only strings, I can&#39;t use it here. Is that it?"}], "answers": [{"tags": [], "owner": {"reputation": 13441, "user_id": 2199600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8sl6u.jpg?s=128&g=1", "display_name": "Igor Drozdov", "link": "https://stackoverflow.com/users/2199600/igor-drozdov"}, "is_accepted": true, "score": 4, "last_activity_date": 1501829102, "creation_date": 1501829102, "answer_id": 45499873, "question_id": 45499579, "link": "https://stackoverflow.com/questions/45499579/whats-the-difference-between-getline-readln-and-print-and-putstrln/45499873#45499873", "title": "whats the difference between getLine, readLn and print and putStrLn", "body": "<p><code>getLine</code> has <code>getLine :: IO String</code> type</p>\n\n<p>That's why in this line <code>x &lt;- getLine</code>, <code>x</code> gets <code>String</code> value, but <code>(+) :: Num a =&gt; a -&gt; a -&gt; a</code> is only defined for <code>Num</code> instances.</p>\n\n<p><code>readLn :: Read a =&gt; IO a</code> gets the line and <code>read</code> the value, i.e. parses a string and returns a value of a particular type.</p>\n\n<p>Thus, <code>readLn</code> is the same as <code>read &lt;$&gt; getLine</code>.</p>\n"}], "owner": {"reputation": 11, "user_id": 8259868, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/22f2559b3f54063f69754dff541d4e80?s=128&d=identicon&r=PG&f=1", "display_name": "Deepika Vemuri", "link": "https://stackoverflow.com/users/8259868/deepika-vemuri"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 439, "favorite_count": 1, "accepted_answer_id": 45499873, "answer_count": 1, "score": -2, "last_activity_date": 1501829102, "creation_date": 1501827862, "question_id": 45499579, "link": "https://stackoverflow.com/questions/45499579/whats-the-difference-between-getline-readln-and-print-and-putstrln", "title": "whats the difference between getLine, readLn and print and putStrLn", "body": "<p>I'm trying to read 2 values and add them. When I do this: </p>\n\n<pre><code>add a b = a + b\n\nmain = do\n    x &lt;- readLn\n    y &lt;- readLn\n    let sum = add x y\n    print sum\n</code></pre>\n\n<p>it works. But when I do this: </p>\n\n<pre><code>add a b = a + b\n\nmain = do\n    x &lt;- getLine\n    y &lt;- getLine\n    let sum = add x y\n    print sum\n</code></pre>\n\n<p>it doesn't. I would like to know why. </p>\n"}, {"tags": ["haskell", "forall", "automatic-differentiation", "rank-n-types"], "comments": [{"owner": {"reputation": 209, "user_id": 7658944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/197708885c5d718abd5711f49b17c6e0?s=128&d=identicon&r=PG&f=1", "display_name": "Robert", "link": "https://stackoverflow.com/users/7658944/robert"}, "edited": false, "score": 0, "creation_date": 1501824752, "post_id": 45498859, "comment_id": 77958637, "body": "I can&#39;t remember if this has any significance on the top of my head, and i am unable to verify it aswell, and i also see that you discuss it briefly in your post, but try adding (Num a =&gt; a -&gt; a) instead of (a -&gt; a) as one of your arguments to newton. EDIT -- I just realized that it will infer the type of a as already Fractional aka Num, this comment will probably have no effect. I will keep looking at this, challange accepted."}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 1, "creation_date": 1501825660, "post_id": 45498859, "comment_id": 77958945, "body": "Sounds like the first example uses <code>g</code> at two different types. To be able to do that with a function argument, you need rank-2 types: <code>newton :: Fractional a =&gt; (forall b. Fractional b =&gt; b -&gt; b) -&gt; a -&gt; a</code>"}], "answers": [{"comments": [{"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1501853506, "post_id": 45501062, "comment_id": 77977082, "body": "If I just enable <code>RankNTypes</code>, will the compiler be able to infer the proper signature?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 0, "creation_date": 1501872655, "post_id": 45501062, "comment_id": 77988485, "body": "@FyodorSoikin GHC will never infer higher-ranks types. I think I heard that type checking using such types is an undecidable problem, so the user must provide some help. (I don&#39;t have a reference for that, though)"}, {"owner": {"reputation": 940, "user_id": 8393442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/649ba3617086819804333c4dc40a4715?s=128&d=identicon&r=PG", "display_name": "luispauloml", "link": "https://stackoverflow.com/users/8393442/luispauloml"}, "edited": false, "score": 0, "creation_date": 1501920521, "post_id": 45501062, "comment_id": 78000085, "body": "Thank you. That worked. I guess my next topic is learning about <code>RankNTypes</code>."}], "tags": [], "owner": {"reputation": 4773, "user_id": 4148211, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/DiKJf.jpg?s=128&g=1", "display_name": "frasertweedale", "link": "https://stackoverflow.com/users/4148211/frasertweedale"}, "is_accepted": true, "score": 2, "last_activity_date": 1501833318, "last_edit_date": 1501833318, "creation_date": 1501832947, "answer_id": 45501062, "question_id": 45498859, "link": "https://stackoverflow.com/questions/45498859/how-to-properly-match-types-when-using-numeric-ad-in-haskell/45501062#45501062", "title": "How to properly match types when using Numeric.AD in Haskell?", "body": "<p>Observe that your function:</p>\n\n<pre><code>newton :: Fractional a =&gt; (a -&gt; a) -&gt; a -&gt; a\nnewton f x = x - (f x) / (diff f x)\n</code></pre>\n\n<p>uses the function argument <code>f</code> in two places.  First, the\nsubexpression <code>f x</code> uses <code>f</code> with the type:</p>\n\n<pre><code>f :: Fractional a =&gt; a -&gt; a\n</code></pre>\n\n<p>Second, due to the use of <code>diff</code> the subexpression <code>diff f x</code> uses <code>f</code> with the type:</p>\n\n<pre><code>f :: forall s a. Fractional a =&gt; AD s (Forward a) -&gt; AD s (Forward a)\n</code></pre>\n\n<p>The error message you got is the type system observing that these\nare different types that cannot be unified.</p>\n\n<p>The solution is to explicitly quantify the function argument of <code>newton</code>\nto work for all types satisfying the appropriate numeric type class constraint(s).  This requires the <code>RankNTypes</code> language extension:</p>\n\n<pre><code>{-# LANGUAGE RankNTypes #-}\n\nnewton\n  :: Fractional a\n  =&gt; (forall b. Fractional b =&gt; b -&gt; b)\n  -&gt; a\n  -&gt; a\nnewton f x = x - (f x) / (diff f x)\n</code></pre>\n"}], "owner": {"reputation": 940, "user_id": 8393442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/649ba3617086819804333c4dc40a4715?s=128&d=identicon&r=PG", "display_name": "luispauloml", "link": "https://stackoverflow.com/users/8393442/luispauloml"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 124, "favorite_count": 0, "accepted_answer_id": 45501062, "answer_count": 1, "score": 0, "last_activity_date": 1501920582, "creation_date": 1501824500, "last_edit_date": 1501920582, "question_id": 45498859, "link": "https://stackoverflow.com/questions/45498859/how-to-properly-match-types-when-using-numeric-ad-in-haskell", "title": "How to properly match types when using Numeric.AD in Haskell?", "body": "<p>I'm trying to implement Newton\u2013Raphson root-finding algorithm using the <a href=\"http://hackage.haskell.org/package/ad\" rel=\"nofollow noreferrer\">ad</a> package, but I can't properly match function types. I know there's <a href=\"https://stackoverflow.com/questions/5938337/numeric-ad-and-typing-problem\">a proper answer to a similar question</a>, which was answered by the creator of ad himself, but the package have changed greatly since version 1.0.6 (current version is 4.3.4).</p>\n\n<p>This first minimum example compiles and works when I iterate over it:\n</p>\n\n<pre><code>import Numeric.AD\nimport Numeric.AD.Internal.Forward\n\ng :: Fractional a =&gt; a -&gt; a\ng x = - x + 2\n\ng' :: Fractional a =&gt; a -&gt; a\ng' x = diff g x\n\nnewtonG :: Fractional a =&gt; a -&gt; a\nnewtonG x = x - (g x) / (g' x)\n</code></pre>\n\n<p>But if I try to abstract the function, like this:\n</p>\n\n<pre><code>import Numeric.AD\nimport Numeric.AD.Internal.Forward\n\ng :: Fractional a =&gt; a -&gt; a\ng x = - x + 2\n\nnewton :: Fractional a =&gt; (a -&gt; a) -&gt; a -&gt; a\nnewton f x = x - (f x) / (diff f x)\n</code></pre>\n\n<p>GHC returns the following error:\n</p>\n\n<pre><code>fsolve.hs:8:32: error:\n    * Couldn't match type `a' with `AD s (Forward a)'\n      `a' is a rigid type variable bound by\n        the type signature for:\n          newton :: forall a. Fractional a =&gt; (a -&gt; a) -&gt; a -&gt; a\n        at fsolve.hs:7:11\n      Expected type: AD s (Forward a) -&gt; AD s (Forward a)\n        Actual type: a -&gt; a\n    * In the first argument of `diff', namely `f'\n      In the second argument of `(/)', namely `(diff f x)'\n      In the second argument of `(-)', namely `(f x) / (diff f x)'\n    * Relevant bindings include\n        x :: a (bound at fsolve.hs:8:10)\n        f :: a -&gt; a (bound at fsolve.hs:8:8)\n        newton :: (a -&gt; a) -&gt; a -&gt; a (bound at fsolve.hs:8:1)\n</code></pre>\n\n<p>If I use <code>Numeric.AD.Rank1.Forward</code> instead of <code>Numeric.AD</code>, the compiler says it cannot match <code>a</code> with <code>Forward a</code>, instead of <code>a</code> with <code>AD s (Forward a)</code>. I also tried several ways of creating a dual number from <code>x</code> to pass it to <code>f</code>, e.g. <code>snd . unbundle . f $ bundle x 1</code>, but it only works if I create a new <code>g' x</code> using it, like in first case. Using this within <code>newton</code> doesn't work either.</p>\n\n<p>In <code>Numeric.AD</code>, <code>diff :: Num a =&gt; (forall s. AD s (Forward a) -&gt; AD s (Forward a)) -&gt; a -&gt; a</code>. And in <code>Numeric.AD.Rank1.Forward</code>, it's <code>diff :: Num a =&gt; (Forward a -&gt; Forward a) -&gt; a -&gt; a</code>. So why do they accept a function of type <code>a -&gt; a</code> in the first case, but not in the second? Besides using polymorphic functions, should I take any special care when creating functions to use with <code>Numeric.AD</code>? Lastly, how should I change my code to make it work? I know the package <a href=\"https://hackage.haskell.org/package/ad-4.3.4/docs/Numeric-AD-Rank1-Newton.html#g:1\" rel=\"nofollow noreferrer\">already has a function to find roots</a>, but I don't want to use yet (since I'm still learning Haskell), and looking at the documentation trying to sort this out, felt like running in circles.</p>\n"}, {"tags": ["haskell", "ghc", "haskell-stack"], "answers": [{"tags": [], "owner": {"reputation": 1953, "user_id": 899723, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f68bcc2d6f5196fa090d578eb8356b9c?s=128&d=identicon&r=PG", "display_name": "mac10688", "link": "https://stackoverflow.com/users/899723/mac10688"}, "is_accepted": true, "score": 8, "last_activity_date": 1563209327, "last_edit_date": 1563209327, "creation_date": 1501822371, "answer_id": 45498490, "question_id": 45498425, "link": "https://stackoverflow.com/questions/45498425/how-to-upgrade-ghc-with-stack/45498490#45498490", "title": "How to upgrade GHC with Stack", "body": "<p>User dysfun from the IRC answered my question so I will post it here for posterity.</p>\n\n<p>To update GHC that's used to compile a project, go to the project's <code>stack.yaml</code> file.</p>\n\n<p>In there is the resolver field. Update that accordingly. Some examples:</p>\n\n<pre><code>resolver: ghc-8.0.2\nresolver: lts-9.0\nresolver: nightly-2015-09-21\n</code></pre>\n\n<p>For my case, I learned from <a href=\"https://www.stackage.org/lts-9.0\" rel=\"nofollow noreferrer\">this webpage</a> that resolver <code>lts-9.0</code> uses GHC 8.0.2.</p>\n\n<p><a href=\"https://stackoverflow.com/questions/33446558/understanding-haskells-stack-program-and-the-resolver-and-lts-version\">Here's more</a> on Stack's resolvers.</p>\n"}], "owner": {"reputation": 1953, "user_id": 899723, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f68bcc2d6f5196fa090d578eb8356b9c?s=128&d=identicon&r=PG", "display_name": "mac10688", "link": "https://stackoverflow.com/users/899723/mac10688"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5056, "favorite_count": 3, "accepted_answer_id": 45498490, "answer_count": 1, "score": 13, "last_activity_date": 1563209327, "creation_date": 1501821970, "last_edit_date": 1563207845, "question_id": 45498425, "link": "https://stackoverflow.com/questions/45498425/how-to-upgrade-ghc-with-stack", "title": "How to upgrade GHC with Stack", "body": "<p>The output of</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>stack ghc -- --version\n</code></pre>\n\n<p>is</p>\n\n<pre><code>The Glorious Glasgow Haskell Compilation System, version 7.10.3\n</code></pre>\n\n<p>I want to upgrade to GHC 8.</p>\n\n<p>How can I tell Stack to upgrade GHC?</p>\n"}, {"tags": ["haskell", "if-statement", "input", "passwords", "output"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1501803070, "post_id": 45496026, "comment_id": 77953540, "body": "The stated goal isn&#39;t very clear. Do you want an additional prompt to pick a website, and then ask for a password which is validated based on the previously chosen website? If so, you probably want something like a <code>[(String, String)]</code> which represents an association of websites to passwords (aside: representing everything as strings isn&#39;t good practice). Finally, if you&#39;ve made attempts which have failed, please include those in the question."}, {"owner": {"reputation": 1, "user_id": 7233592, "user_type": "registered", "profile_image": "https://graph.facebook.com/1168230179928846/picture?type=large", "display_name": "Casey ", "link": "https://stackoverflow.com/users/7233592/casey"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1501804607, "post_id": 45496026, "comment_id": 77953875, "body": "By prompt I mean that the user is asked to pick from a set list if the user inputs the first password correctly. Not a whole new prompt. Making a somewhat database of passwords for websites. You are probably correct about making to many strings. I am rather new to the programming scene. I apologize. Also with a <code>[(String , String)]</code> for example would I use <code>[(Yahoo, 12345)]</code> ? If so how would I call upon that?"}, {"owner": {"reputation": 1, "user_id": 7233592, "user_type": "registered", "profile_image": "https://graph.facebook.com/1168230179928846/picture?type=large", "display_name": "Casey ", "link": "https://stackoverflow.com/users/7233592/casey"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1501805683, "post_id": 45496026, "comment_id": 77954101, "body": "I have fixed the problem of pulling up the &quot;What password do you need?&quot; by putting a <code>do</code> after <code>then</code> , but the problem still lies in bringing up the list of sites and being able to type a site and be told the users password to the site."}], "answers": [{"tags": [], "owner": {"reputation": 1735, "user_id": 2892792, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/5DNyi.jpg?s=128&g=1", "display_name": "Lazersmoke", "link": "https://stackoverflow.com/users/2892792/lazersmoke"}, "is_accepted": false, "score": 2, "last_activity_date": 1501818635, "creation_date": 1501818635, "answer_id": 45497978, "question_id": 45496026, "link": "https://stackoverflow.com/questions/45496026/haskell-password-program/45497978#45497978", "title": "Haskell Password Program", "body": "<p>If I understand correctly, you are trying to create something that looks like this:</p>\n\n<pre><code>What password do you need?\n</code></pre>\n\n<p><em>user inputs</em> <code>Yahoo</code></p>\n\n<pre><code>OK, the password for the website \"Yahoo\" is \"asdf\"\n</code></pre>\n\n<p>To do this, you will need a collection of websites with their associated passwords. You can represent both websites and passwords as <code>String</code>s. The best kind of collection for association lists (which is what you need) is a <code>Map</code>. So at the top of your module, import <code>Data.Map.Strict</code>:</p>\n\n<pre><code>import qualified Data.Map.Strict as Map\n</code></pre>\n\n<p>Now you have access to all the types and functions documented <a href=\"https://hackage.haskell.org/package/containers-0.5.10.2/docs/Data-Map-Strict.html\" rel=\"nofollow noreferrer\">here</a>. Now, you can use <code>Map.fromList :: [(String,String)] -&gt; Map.Map String String</code> to turn a <code>[(String,String)]</code> (a list of pairs of <code>String</code>s) into a <code>Map.Map String String</code> (a mapping from <code>String</code>s to other <code>String</code>s):</p>\n\n<pre><code>websites :: Map.Map String String\nwebsites = Map.fromList\n  [(\"Yahoo\",\"asdf\")\n  ,(\"Google\",\"meow\")\n  -- You can add more here if you need to\n  ]\n</code></pre>\n\n<p>Now, you can use <code>Map.lookup :: String -&gt; Map.Map String String -&gt; Maybe String</code> to lookup a website and get its associated password:</p>\n\n<pre><code>Map.lookup \"Yahoo\" websites ==&gt; Just \"asdf\"\n</code></pre>\n\n<p>Notice it returned <code>Just \"asdf\"</code> instead of <code>Nothing</code> because it was able to find <code>Yahoo</code> in <code>websites</code>. Now we just need a little bit of IO glue to get the user's input and print out the result, something like:</p>\n\n<pre><code>-- Get the website name and put it in websiteName\nputStrLn \"What password do you need?\"\nwebsiteName &lt;- getLine\n-- Check our Map for the website name the user gave us\ncase Map.lookup websiteName websites of\n  -- If we found the password, print it out with a nice message\n  Just thePassword -&gt; putStrLn $ \"OK, your password is: \" ++ thePassword\n  -- If that website was not in our Map, print an error message\n  Nothing -&gt; putStrLn \"Website not found :(\"\n</code></pre>\n"}], "owner": {"reputation": 1, "user_id": 7233592, "user_type": "registered", "profile_image": "https://graph.facebook.com/1168230179928846/picture?type=large", "display_name": "Casey ", "link": "https://stackoverflow.com/users/7233592/casey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 159, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1501818635, "creation_date": 1501802505, "last_edit_date": 1501805402, "question_id": 45496026, "link": "https://stackoverflow.com/questions/45496026/haskell-password-program", "title": "Haskell Password Program", "body": "<p>I am very new to Haskell and I am attempting to make a simple password program as my first program. I have ran into a problem and I am not very sure on how to fix it. I do not know how to make a second section for the passwords.</p>\n\n<pre><code>main = do \n  putStrLn \"Hello, Who are you?\"\n  name &lt;- getLine --User Input\n  putStrLn (\"Hey \" ++ name ++ \", What's the password?\")\n  pass &lt;- getLine\n  if pass == \"12345\"\n      then do \n      putStrLn (\"Welcome\")\n      pw -- Go to password Prompt\n      else do\n          putStrLn \"That is wrong!\"\n          main --Sent back to beginning\npw = do\nputStrLn \"What Password do you need?\"\n</code></pre>\n\n<p>I do not know how to switch to asking for which password is needed, I am decently sure I know how to list them. The goal is to ask user which password givin a list of websites such as yahoo and then the user pick one and be told the password. Thanks in advance :D</p>\n"}, {"tags": ["haskell", "hunspell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1501797674, "post_id": 45495211, "comment_id": 77951946, "body": "boldface should not be used to stress an entire question. Only to specify certain parts."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1501801046, "post_id": 45495211, "comment_id": 77953039, "body": "Google says no, and yes. (But you should give details about what you&#39;ve tried, not just the problem itself)."}], "answers": [{"tags": [], "owner": {"reputation": 1496, "user_id": 7350814, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bd7e1bdad619c54ab51e05ff9cfaa199?s=128&d=identicon&r=PG&f=1", "display_name": "Jogger", "link": "https://stackoverflow.com/users/7350814/jogger"}, "is_accepted": true, "score": 1, "last_activity_date": 1501841406, "last_edit_date": 1501841406, "creation_date": 1501840646, "answer_id": 45503765, "question_id": 45495211, "link": "https://stackoverflow.com/questions/45495211/haskell-binding-for-hunspell/45503765#45503765", "title": "Haskell binding for hunspell", "body": "<p>This is an answer to your second question: </p>\n\n<blockquote>\n  <p>If not, is it possible to send the words to check to the Hunspell CLI program and retrieve the results?</p>\n</blockquote>\n\n<p>You can use the <a href=\"http://hackage.haskell.org/package/shelly\" rel=\"nofollow noreferrer\">shelly</a> library to call any cli program in your PATH.\nAssume <em>foo</em> is your program and <em>param1</em>, <em>param2</em> and <em>param3</em> are the needed parameters: <code>foo param1 param2 param3</code> would be the call in a OS shell.</p>\n\n<p>Here is a small Haskell example:</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\nimport Shelly\nimport qualified Data.Text as T\n\nmain :: IO ()\nmain = shelly $ silently $ do\n    out &lt;- run \"foo\" [\"param1\", \"param2\", \"param3\"] \n    -- lns will containes a list of lines with the stdout output of foo\n    let lns = T.lines out\n    -- Here we print out the number of lines and the first 5 lines\n    liftIO $ putStrLn $ show $ Prelude.length lns\n    liftIO $ mapM_ (putStrLn .T.unpack) $ take 5 lns\n</code></pre>\n"}], "owner": {"reputation": 2337, "user_id": 3595992, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a8fc8a00391b1282338f66de57e3fea0?s=128&d=identicon&r=PG&f=1", "display_name": "JeanJouX", "link": "https://stackoverflow.com/users/3595992/jeanjoux"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 0, "accepted_answer_id": 45503765, "answer_count": 1, "score": 1, "last_activity_date": 1501841406, "creation_date": 1501797601, "last_edit_date": 1501797656, "question_id": 45495211, "link": "https://stackoverflow.com/questions/45495211/haskell-binding-for-hunspell", "title": "Haskell binding for hunspell", "body": "<p>Is there a Haskell binding for the Hunspell spell checking library?</p>\n\n<p>If not, is it possible to send the words to check to the Hunspell CLI program and retrieve the results?</p>\n"}, {"tags": ["haskell", "combobox", "gtk2hs"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1501802741, "post_id": 45494830, "comment_id": 77953467, "body": "You <i>can</i> use <code>fromString</code> like that. Why do you believe you can&#39;t?"}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 0, "last_activity_date": 1501801276, "last_edit_date": 1501801276, "creation_date": 1501796720, "answer_id": 45495004, "question_id": 45494830, "link": "https://stackoverflow.com/questions/45494830/get-combobox-widget-value-in-gtk2hs/45495004#45495004", "title": "Get ComboBox widget value in Gtk2Hs", "body": "<p>If we look at the <a href=\"https://hackage.haskell.org/package/gtk-0.14.6/docs/Graphics-UI-Gtk-MenuComboToolbar-ComboBox.html#t:ComboBoxText\" rel=\"nofollow noreferrer\">documentation</a>, we see that <code>ComboBoxText</code> is a alias for <code>Text</code>:</p>\n\n<blockquote>\n<pre><code>type ComboBoxText = Text\n</code></pre>\n</blockquote>\n\n<p>Now <code>Text</code> and <code>String</code> are both ways to represent text, but <code>Text</code> does this in a compact way, whereas <code>String</code> (which is actually an alias for <code>[Char]</code>) does this in a linked list approach (this consumes more memory and will usually result in less efficient processing).</p>\n\n<h1>Using <a href=\"http://hackage.haskell.org/package/text-1.2.2.2/docs/Data-Text-Lazy.html#v:unpack\" rel=\"nofollow noreferrer\"><code>unpack</code></a></h1>\n\n<p>You can however simply use <a href=\"https://hackage.haskell.org/package/text-1.2.2.1/docs/Data-Text.html#g:5\" rel=\"nofollow noreferrer\"><code>pack :: String -&gt; Text</code> and <code>unpack :: Text -&gt; String</code></a> to convert between <code>String</code> and <code>Text</code>:</p>\n\n<blockquote>\n  <p><strong><code>pack :: String -&gt; Text</code></strong></p>\n  \n  <p><strong><code>unpack :: Text -&gt; String</code></strong></p>\n</blockquote>\n\n<p>So you could use:</p>\n\n<pre><code>selectRadioB cb = do\n    ntxt &lt;- comboBoxGetActiveText cb\n    case <b>fmap unpack</b> ntxt of\n            Just \"Option 1\" -> ...\n            Just \"Option 2\" -> ...\n            Just \"Option 3\" -> ... \n    return ()</code></pre>\n\n<h1>Work with <a href=\"https://www.schoolofhaskell.com/school/to-infinity-and-beyond/pick-of-the-week/guide-to-ghc-extensions/basic-syntax-extensions#overloadedstrings\" rel=\"nofollow noreferrer\"><code>OverloadedStrings</code></a></h1>\n\n<p>Nevertheless this is quite inefficient: you will first convert the <code>Text</code> to a <code>String</code>, and then Haskell will perform (usually) less efficient comparisons.</p>\n\n<p>You can however use a language directive:</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\n</code></pre>\n\n<p>that you can put at the head of your file. Now this means that if you write a string literal Haskell <em>can</em> interpret this as a <code>Text</code> element.</p>\n\n<p>So if you write:</p>\n\n<pre><code><b>{-# LANGUAGE OverloadedStrings #-}</b>\n\nselectRadioB cb = do\n    ntxt &lt;- comboBoxGetActiveText cb\n    case ntxt of\n            Just \"Option 1\" -> ...\n            Just \"Option 2\" -> ...\n            Just \"Option 3\" -> ...\n    return ()</code></pre>\n\n<p>Haskell will derive that <code>ntxt</code> has type <code>Maybe Text</code>, and thus that <code>\"Option 1\"</code> should be interpreted as a <code>Text</code> element.</p>\n\n<p>If you use this syntax extension, you can also write:</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\n\n-- ...\n\ncb &lt;- comboBoxNewText\ncomboBoxAppendText cb \"Option 1\"\ncomboBoxAppendText cb \"Option 2\"\ncomboBoxAppendText cb \"Option 3\"\ncomboBoxSetActive cb 0\n</code></pre>\n\n<p>So you can drop the <code>fromString</code> function.</p>\n"}], "owner": {"reputation": 77, "user_id": 8384050, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/5a8b6d1c33bc8190ec941a85813e53b5?s=128&d=identicon&r=PG&f=1", "display_name": "Hamburguesa66", "link": "https://stackoverflow.com/users/8384050/hamburguesa66"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 59, "favorite_count": 0, "accepted_answer_id": 45495004, "answer_count": 1, "score": 1, "last_activity_date": 1501801276, "creation_date": 1501795935, "last_edit_date": 1501796992, "question_id": 45494830, "link": "https://stackoverflow.com/questions/45494830/get-combobox-widget-value-in-gtk2hs", "title": "Get ComboBox widget value in Gtk2Hs", "body": "<p>I'm trying to get the ComboBox widget value with this code:</p>\n\n<pre><code>selectRadioB cb = do\nntxt &lt;- comboBoxGetActiveText cb\ncase ntxt of\n            Just (\"Option 1\") -&gt; ...\n            Just (\"Option 2\") -&gt; ...\n            Just (\"Option 3\") -&gt; ... \nreturn ()\n</code></pre>\n\n<p>But, when i compile it, this error appears:</p>\n\n<pre><code>  Couldn't match type \u2018[Char]\u2019\n                   with \u2018text-1.2.2.0:Data.Text.Internal.Text\u2019\n    Expected type: ComboBoxText\n      Actual type: [Char]\n    In the pattern: \"Option 1\"\n    In the pattern: Just (\"Option 1\")\n    In a case alternative:\n        Just (\"Option 1\") -&gt; ...\n</code></pre>\n\n<p>How can i solve that? I've made a similay question (<a href=\"https://stackoverflow.com/questions/45445882/create-a-combobox-widget-in-gtk2hs\">Create a ComboBox widget in Gtk2HS</a>), but i dont want to use the pack fuction.</p>\n\n<p>Why i cant use fromString like this?</p>\n\n<pre><code>cb &lt;- comboBoxNewText\ncomboBoxAppendText cb (fromString \"Option 1\")\ncomboBoxAppendText cb (fromString \"Option 2\")\ncomboBoxAppendText cb (fromString \"Option 3\")\ncomboBoxSetActive cb 0\n</code></pre>\n\n<p>Thanks in advance.</p>\n"}, {"tags": ["python", "haskell"], "answers": [{"comments": [{"owner": {"reputation": 2970, "user_id": 1763955, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/3a7a94d762a9d702b88404f840e31d8f?s=128&d=identicon&r=PG&f=1", "display_name": "Carbon", "link": "https://stackoverflow.com/users/1763955/carbon"}, "edited": false, "score": 0, "creation_date": 1501794246, "post_id": 45494443, "comment_id": 77950572, "body": "Do I need anything else, like the windows.h import?"}, {"owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "reply_to_user": {"reputation": 2970, "user_id": 1763955, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/3a7a94d762a9d702b88404f840e31d8f?s=128&d=identicon&r=PG&f=1", "display_name": "Carbon", "link": "https://stackoverflow.com/users/1763955/carbon"}, "edited": false, "score": 1, "creation_date": 1501794279, "post_id": 45494443, "comment_id": 77950588, "body": "For the snippet above you shouldn&#39;t need anything else."}], "tags": [], "owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "is_accepted": true, "score": 4, "last_activity_date": 1501794258, "last_edit_date": 1501794258, "creation_date": 1501794074, "answer_id": 45494443, "question_id": 45494245, "link": "https://stackoverflow.com/questions/45494245/win32-api-call-in-haskell/45494443#45494443", "title": "Win32 API Call in Haskell?", "body": "<p><a href=\"https://wiki.haskell.org/Foreign_Function_Interface#Calling_conventions\" rel=\"nofollow noreferrer\">Foreign_Function_Interface</a> article mentions <code>stdcall</code> keyword for foreign import statements. In your case this would look like</p>\n\n<pre><code>import System.Win32.Types (DWORD)\n\nforeign import stdcall unsafe \"SetErrorMode\"\n    win32_setErrorMode :: DWORD -&gt; IO DWORD\n</code></pre>\n"}], "owner": {"reputation": 2970, "user_id": 1763955, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/3a7a94d762a9d702b88404f840e31d8f?s=128&d=identicon&r=PG&f=1", "display_name": "Carbon", "link": "https://stackoverflow.com/users/1763955/carbon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 115, "favorite_count": 0, "accepted_answer_id": 45494443, "answer_count": 1, "score": 0, "last_activity_date": 1501794258, "creation_date": 1501793315, "last_edit_date": 1501793370, "question_id": 45494245, "link": "https://stackoverflow.com/questions/45494245/win32-api-call-in-haskell", "title": "Win32 API Call in Haskell?", "body": "<p>How might I replicate this bit of of Python in Haskell? I've been able to master all the other process launching bits, but this one is elusive - it doesn't seem to be in api of any existing packages. The closest thing I can find is <a href=\"http://gbacon.blogspot.com/2009/06/ffi-calling-into-kernel32dll.html\" rel=\"nofollow noreferrer\">this example</a> but I'm having a hard time adapting it.</p>\n\n<pre><code>import ctypes\nctypes.windll.kernel32.SetErrorMode(2);\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1501801396, "post_id": 45493206, "comment_id": 77953147, "body": "What are <code>:\\\\ </code> and <code>Intersect</code>? Assuming they are inductive type families, you can write either function by induction. Note that the <code>SingI</code> class really shouldn&#39;t factor in here at all. Also, if <code>:\\\\ </code> and <code>Intersect</code> are defunctionalized symbols defined by <code>singletons</code>, they will almost certainly have value-level variants already, so you don&#39;t need to do anything."}, {"owner": {"reputation": 483, "user_id": 521370, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/a8d69ed3d32273571045f30fc755ff0a?s=128&d=identicon&r=PG", "display_name": "Dmitry Olshansky", "link": "https://stackoverflow.com/users/521370/dmitry-olshansky"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1501827980, "post_id": 45493206, "comment_id": 77959941, "body": "Yes, they are type families from <code>singletons</code>. And they have value-level variants. But I <i>haven&#39;t</i> <code>Sing</code> for the second argument <code>xs</code>. From other side, I understand and can prove &quot;by hand&quot; that both <code>(:\\\\)</code> and <code>Intersect</code> give me sublist. And I can prove that if list belongs <code>SingI</code> for any sublist also. But I don&#39;t know how to tell it to compiler and how to get this value for <code>Sing (sublist)</code>"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1501828748, "post_id": 45493206, "comment_id": 77960370, "body": "I didn&#39;t notice the 2nd arg was <code>Proxy</code> and not <code>Sing</code>. <code>Proxy (xs :: [Symbol])</code> contains no information about which <code>[Symbol]</code> that actually is, so you can&#39;t do it. In other words, functions with those types are uninhabited. Indeed, you can prove that <code>SingI xs</code> from <code>SingI (x:xs)</code> but you don&#39;t have a <code>SingI</code> constraint there. You must change the type to <code>(SingI xs) =&gt; ...</code>."}], "owner": {"reputation": 483, "user_id": 521370, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/a8d69ed3d32273571045f30fc755ff0a?s=128&d=identicon&r=PG", "display_name": "Dmitry Olshansky", "link": "https://stackoverflow.com/users/521370/dmitry-olshansky"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 66, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1501798103, "creation_date": 1501789200, "last_edit_date": 1501798103, "question_id": 45493206, "link": "https://stackoverflow.com/questions/45493206/getting-singleton-instance-for-sublist", "title": "Getting singleton instance for sublist", "body": "<p>With package <a href=\"https://hackage.haskell.org/package/singletons\" rel=\"nofollow noreferrer\">singletons</a> we have a class SingI and instances for type-level List:</p>\n\n<pre><code>instance SingI '[]\ninstance forall a (n1 :: a) (n2 :: [a]).\n     (SingI n1, SingI n2) =&gt; SingI (n1 : n2)\n</code></pre>\n\n<p>It seems that having SingI constraint for list we can get somehow the same constraint for sublist. So I want to find a way to do it.</p>\n\n<p>I.e. I need something like function</p>\n\n<pre><code>f1 :: Sing (ns :: [Symbol]) -&gt; Proxy (xs :: [Symbol]) -&gt; Sing (ns :\\\\ xs)\n</code></pre>\n\n<p>or</p>\n\n<pre><code>f2 :: Sing (ns :: [Symbol]) -&gt; Proxy (xs :: [Symbol]) -&gt; Sing (Intersect ns xs)\n</code></pre>\n\n<p>Which ways do I have to do that?</p>\n"}, {"tags": ["mysql", "haskell", "yesod"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1501801901, "post_id": 45491709, "comment_id": 77953275, "body": "Do you have <code>mysql_config</code> and <code>pkg-config</code> installed? The former I&#39;ve never heard of, but the latter is quite well-known, and I&#39;m assuming the former serves a similar purpose to the latter, but in a mySQL-specific context. (Note: if you don&#39;t have the program installed, I find it hard to see how searching on the internet did not yield the basic steps needed to install it. Perhaps you should also include what fixes you&#39;ve tried...)"}, {"owner": {"reputation": 661, "user_id": 7720738, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HccZv.png?s=128&g=1", "display_name": "James Burton", "link": "https://stackoverflow.com/users/7720738/james-burton"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1501830395, "post_id": 45491709, "comment_id": 77961294, "body": "@user2407038 sorry I should have made it clear in the question, I will edit it after posting this comment. I installed pkg-config via msys2 but still get the issue with Yesod. I presume something needs to be added to the path but I can&#39;t find any reference of that on the internet. I can&#39;t find anything about mysql-config. I tried to install MySQL but again that didn&#39;t help."}, {"owner": {"reputation": 532, "user_id": 660339, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/ba401042a68ed65c16f73c8cf3a15287?s=128&d=identicon&r=PG", "display_name": "Ivan Perez", "link": "https://stackoverflow.com/users/660339/ivan-perez"}, "edited": false, "score": 0, "creation_date": 1501831844, "post_id": 45491709, "comment_id": 77962250, "body": "It&#39;s a known issue: <a href=\"https://github.com/paul-rouse/mysql/issues/3\" rel=\"nofollow noreferrer\">github.com/paul-rouse/mysql/issues/3</a>. I recommend you bump that github issue so that they are aware that this is still a problem."}], "answers": [{"tags": [], "owner": {"reputation": 642, "user_id": 6244464, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0302fb471429b870d56e2e953381ceab?s=128&d=identicon&r=PG&f=1", "display_name": "vozman", "link": "https://stackoverflow.com/users/6244464/vozman"}, "is_accepted": false, "score": 0, "last_activity_date": 1558094244, "creation_date": 1558094244, "answer_id": 56185930, "question_id": 45491709, "link": "https://stackoverflow.com/questions/45491709/error-building-scaffolding-site-yesod/56185930#56185930", "title": "Error Building Scaffolding Site Yesod", "body": "<p>For mysql error seems like this can help</p>\n\n<pre><code>sudo apt-get install libmysqlclient-dev \n</code></pre>\n"}], "owner": {"reputation": 661, "user_id": 7720738, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HccZv.png?s=128&g=1", "display_name": "James Burton", "link": "https://stackoverflow.com/users/7720738/james-burton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 218, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1558094244, "creation_date": 1501784031, "last_edit_date": 1501830518, "question_id": 45491709, "link": "https://stackoverflow.com/questions/45491709/error-building-scaffolding-site-yesod", "title": "Error Building Scaffolding Site Yesod", "body": "<p>I have tried to setup the Yesod scaffolding site with MySQL, in the book it said to use <code>yesod init</code> but apparently that command no longer exists and I should use <code>stack new project_name template</code>. So I ran <code>stack new project_name yesod-mysql</code> which created all the files but then when running <code>yesod devel</code> from within the directory my site is in I get two errors. Below are the log contents for each:</p>\n\n<p>mysql-0.1.4.log:</p>\n\n<pre><code>[1 of 2] Compiling Main             ( C:\\Users\\James\\AppData\\Local\\Temp\\stack23220\\mysql-0.1.4\\Setup.hs, C:\\Users\\James\\AppData\\Local\\Temp\\stack23220\\mysql-0.1.4\\.stack-work\\dist\\ca59d0ab\\setup\\Main.o )\n[2 of 2] Compiling StackSetupShim   ( C:\\sr\\setup-exe-src\\setup-shim-Z6RU0evB.hs, C:\\Users\\James\\AppData\\Local\\Temp\\stack23220\\mysql-0.1.4\\.stack-work\\dist\\ca59d0ab\\setup\\StackSetupShim.o )\nLinking C:\\Users\\James\\AppData\\Local\\Temp\\stack23220\\mysql-0.1.4\\.stack-work\\dist\\ca59d0ab\\setup\\setup.exe ...\nConfiguring mysql-0.1.4...\nsetup.exe: The program 'mysql_config' is required but it could not be found\n</code></pre>\n\n<p>pcre-light-0.4.0.4.log:</p>\n\n<pre><code>Configuring pcre-light-0.4.0.4...\nCabal-simple_Z6RU0evB_1.24.2.0_ghc-8.0.2.exe: The program 'pkg-config' version\n&gt;=0.9.0 is required but it could not be found.\n</code></pre>\n\n<p>I've searched around a bit for a solution but couldn't find much. I also tried following the quick start guide on the Yesod website but that didn't fix anything.</p>\n\n<p>I'm running Windows 7.</p>\n\n<p>Thanks in advance :)</p>\n\n<p>EDIT: I installed pkg-config via MSYS2 but that didn't help. I also tried installing MySQL but that didn't help regarding the <code>mysql-config</code> problem.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1501773157, "post_id": 45487809, "comment_id": 77937502, "body": "What do you mean by it&#39;s a polymorphic function &quot;of any type?&quot; That&#39;s not how I&#39;d describe it and, just in case, we should make sure there isn&#39;t a grammatical misunderstanding first."}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "reply_to_user": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1501773275, "post_id": 45487809, "comment_id": 77937598, "body": "What does Philip Wadler want to say? What does it mean free theorem in connection with polymorphic type?"}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1501773463, "post_id": 45487809, "comment_id": 77937755, "body": "As an aside, this isn&#39;t actually an important topic for learning Haskell. Don&#39;t let it stop you from doing the most important thing - writing code."}], "answers": [{"tags": [], "owner": {"reputation": 1392, "user_id": 5198575, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-RAYCSjVZdnQ/AAAAAAAAAAI/AAAAAAAAClo/VQ8V_H3l8O8/photo.jpg?sz=128", "display_name": "trevor cook", "link": "https://stackoverflow.com/users/5198575/trevor-cook"}, "is_accepted": false, "score": 8, "last_activity_date": 1501777063, "creation_date": 1501777063, "answer_id": 45489648, "question_id": 45487809, "link": "https://stackoverflow.com/questions/45487809/polymorphic-reasoning/45489648#45489648", "title": "Polymorphic reasoning", "body": "<p>I feel like if I actually understood that paper then any code I wrote would be coauthored by God. </p>\n\n<p>My best guess for this problem though is that all <code>polyfunc</code> can do is either always return the first argument or always return the second argument. So there are actually only two implementations of <code>polyfunc</code>, </p>\n\n<pre><code>polyfuncA a _ = a\npolyfuncB _ b = b\n</code></pre>\n\n<p>The paper gives you a way to prove that claim. </p>\n\n<p>This is a very important concept. For example, I've been involved in data quality research previously. This free theorem says that there is no function which can select the best data from two arbitrary pieces of data. We have to know something more. Its actually a no-brainer that I was surprised to find some people willing to overlook. </p>\n"}, {"comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1501806905, "post_id": 45493120, "comment_id": 77954412, "body": "It&#39;s funny. I have no idea how that algorithm works, but I have seen its output enough to immediately know what it would give for that input."}], "tags": [], "owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "is_accepted": false, "score": 3, "last_activity_date": 1501802474, "last_edit_date": 1501802474, "creation_date": 1501788924, "answer_id": 45493120, "question_id": 45487809, "link": "https://stackoverflow.com/questions/45487809/polymorphic-reasoning/45493120#45493120", "title": "Polymorphic reasoning", "body": "<p>I've never really understood the algorithm laid out in that paper either, so I thought I would try to figure it out.</p>\n\n<pre><code>(1) Type of function in question\nf :: a -&gt; a -&gt; a\n\n(2) Rephrasing as a relation\nf : \u2200X. X -&gt; X -&gt; X\n\n(3) By parametricity\n(f, f) \u2208 \u2200X. X -&gt; X -&gt; X\n\n(4) By definition of \u2200 on relations\nfor all Q : A &lt;=&gt; A',\n  (fA, fA') \u2208 Q -&gt; Q -&gt; Q\n\n(5) Applying definition of -&gt; on relations to the first -&gt; in (4)\nfor all Q : A &lt;=&gt; A',\n  for all (x, x') \u2208 Q,\n    (fA x, fA' x') \u2208 Q -&gt; Q\n\n(6) Applying definition of -&gt; on relations to (5)\nfor all Q : A &lt;=&gt; A',\n  for all (x, x') \u2208 Q,\n    for all (y, y') \u2208 Q,\n      (fA x y, fA' x' y') \u2208 Q\n</code></pre>\n\n<p>At this point I was done expanding the relational definition, but wasn't sure how to get this back from relations into terms of functions and types, so I went and found a webapp that will <a href=\"http://www-ps.iai.uni-bonn.de/cgi-bin/free-theorems-webui.cgi\" rel=\"nofollow noreferrer\">automatically derive the free theorem for a type</a>. I won't spoil (yet) what result it gives, but looking at it did help me figure out the next step in my proof.</p>\n\n<p>The next step is to get back into function-land from relation-land, by noting that Q can be the type of any function at all and this will still hold.</p>\n\n<pre><code>(7) Specializing Q to a function g :: p -&gt; q\nfor all p, q\n  for all g :: p -&gt; q\n    where g x = x'\n      and g y = y'\n        g (f x y) = f x' y'\n\n(8) By definitions of x' and y'\nfor all p, q\n  for all g :: p -&gt; q\n    g (f x y) = f (g x) (g y)\n</code></pre>\n\n<p>That looks true, right? It is equivalent to use <code>g</code> to transform both elements and then let <code>f</code> choose between them, or to let <code>f</code> choose an element and then transform it with <code>g</code>. By parametricity, <code>f</code> can't change whether it chooses the left or right element based on anything that <code>g</code> does.</p>\n\n<p>Of course the claim given in trevor cook's answer is true: <code>f</code> must either always choose its first argument, or always choose its second. I'm not sure whether the free theorem I derived is equivalent to that, or is a weaker version of it.</p>\n\n<hr>\n\n<p>And incidentally, this is a special case of something that is already covered explicitly in the paper. It gives the theorem for</p>\n\n<pre><code>k :: x -&gt; y -&gt; x\n</code></pre>\n\n<p>which of course is the same as your function <code>f</code>, where <code>x ~ a</code> and <code>y ~ a</code>. The result that it gives is the same as the one I described:</p>\n\n<pre><code>for all a, b, x, y\n  a (k x y) = k (a x) (b y)\n</code></pre>\n\n<p>if we choose <code>b=a</code> to make the two results equivalent.</p>\n"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 182, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1501802474, "creation_date": 1501772093, "question_id": 45487809, "link": "https://stackoverflow.com/questions/45487809/polymorphic-reasoning", "title": "Polymorphic reasoning", "body": "<p>I am learning Haskell and in internet I've found is <a href=\"https://people.mpi-sws.org/~dreyer/tor/papers/wadler.pdf\" rel=\"nofollow noreferrer\">paper</a> from Philip Wadler.<br>\nI read it and did not understand at all, but it somehow connects to polymorphic function. </p>\n\n<p>For example:</p>\n\n<pre><code>polyfunc :: a -&gt; a -&gt; a\n</code></pre>\n\n<p>It is a polymorphic function of any type.</p>\n\n<p>What is the free theorem in connection of the example <code>polyfunc</code>?</p>\n"}, {"tags": ["haskell", "pattern-matching", "boolean-logic"], "comments": [{"owner": {"reputation": 1496, "user_id": 7350814, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bd7e1bdad619c54ab51e05ff9cfaa199?s=128&d=identicon&r=PG&f=1", "display_name": "Jogger", "link": "https://stackoverflow.com/users/7350814/jogger"}, "edited": false, "score": 0, "creation_date": 1502198369, "post_id": 45486842, "comment_id": 78098162, "body": "Try to write your datatype as a GADT. This will not really make it cleaner but it will give you more type safety. Then you can still apply any of  the solutions below."}, {"owner": {"reputation": 748, "user_id": 7801892, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9f87eb8937bf17dd8dee0658a4695d2?s=128&d=identicon&r=PG&f=1", "display_name": "Phil Kiener", "link": "https://stackoverflow.com/users/7801892/phil-kiener"}, "reply_to_user": {"reputation": 1496, "user_id": 7350814, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bd7e1bdad619c54ab51e05ff9cfaa199?s=128&d=identicon&r=PG&f=1", "display_name": "Jogger", "link": "https://stackoverflow.com/users/7350814/jogger"}, "edited": false, "score": 0, "creation_date": 1502199236, "post_id": 45486842, "comment_id": 78098849, "body": "In what way would I benefit from using GADTs here?"}, {"owner": {"reputation": 1496, "user_id": 7350814, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bd7e1bdad619c54ab51e05ff9cfaa199?s=128&d=identicon&r=PG&f=1", "display_name": "Jogger", "link": "https://stackoverflow.com/users/7350814/jogger"}, "edited": false, "score": 0, "creation_date": 1502200199, "post_id": 45486842, "comment_id": 78099617, "body": "Yes, you are right! I assumed an expression like <code>Not (Variable &quot;True&quot;)</code> would not typecheck, but rethinking it over, the <i>Variable String</i> constructor doesn&#39;t return soemthing special. Sorry for the confusion!"}], "answers": [{"comments": [{"owner": {"reputation": 748, "user_id": 7801892, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9f87eb8937bf17dd8dee0658a4695d2?s=128&d=identicon&r=PG&f=1", "display_name": "Phil Kiener", "link": "https://stackoverflow.com/users/7801892/phil-kiener"}, "edited": false, "score": 0, "creation_date": 1501778326, "post_id": 45487498, "comment_id": 77941278, "body": "So Pattern Synonyms are a thing, nice! Especially for the repetitive <code>Literal True</code>, this is quite nice. The only thing that still bothers me is the fact that some patterns have to be repeated (both sides of an And can be false), but maybe I can use some TemplateHaskell magic. Never worked with that one, gonna be fun!"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 748, "user_id": 7801892, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9f87eb8937bf17dd8dee0658a4695d2?s=128&d=identicon&r=PG&f=1", "display_name": "Phil Kiener", "link": "https://stackoverflow.com/users/7801892/phil-kiener"}, "edited": false, "score": 0, "creation_date": 1501792128, "post_id": 45487498, "comment_id": 77949551, "body": "Well, you could catch that all with a <code>simplify&#39; (BoolInfix ifx a b) = simplify&#39; (BoolInfix ifx b a)</code> clause; however then you&#39;ll run into an infinite loop if no rule fires..."}, {"owner": {"reputation": 748, "user_id": 7801892, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9f87eb8937bf17dd8dee0658a4695d2?s=128&d=identicon&r=PG&f=1", "display_name": "Phil Kiener", "link": "https://stackoverflow.com/users/7801892/phil-kiener"}, "edited": false, "score": 0, "creation_date": 1501799070, "post_id": 45487498, "comment_id": 77952462, "body": "That also won&#39;t work for non-commutative operators such as implication."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 12, "last_activity_date": 1501773228, "last_edit_date": 1501773228, "creation_date": 1501771361, "answer_id": 45487498, "question_id": 45486842, "link": "https://stackoverflow.com/questions/45486842/cleaner-alternative-to-extensive-pattern-matching-in-haskell/45487498#45487498", "title": "Cleaner Alternative to Extensive Pattern Matching in Haskell", "body": "<p>Basically the problem is that you have to write out <code>simplify</code> of the subexpressions in each clause, over and over again. It would be better to first get all the subexpressions done before even considering laws involving the top-level operator. One simple way is to add an auxiliary version of <code>simplify</code>, that doesn't recurse down:</p>\n\n<pre><code>simplify :: Expression -&gt; Expression\nsimplify (Literal b) = Literal b\nsimplify (Variable s) = Variable s\nsimplify (Not e) = simplify' . Not $ simplify e\nsimplify (And a b) = simplify' $ And (simplify a) (simplify b)\nsimplify (Or a b) = simplify' $ Or (simplify a) (simplify b)\n\nsimplify' :: Expression -&gt; Expression\nsimplify' (Not (Literal b)) = Literal $ not b\nsimplify' (And (Literal False) _) = Literal False\n...\n</code></pre>\n\n<p>With the only small amount of operations you have in booleans, this is probably the most sensible approach. However with more operations, the duplication in <code>simplify</code> might still be worth to avoid. To that end, you can conflate the unary and binary operations to a common constructor:</p>\n\n<pre><code>data Expression \n    = Literal Bool \n    | Variable String\n    | BoolPrefix BoolPrefix Expression \n    | BoolInfix BoolInfix Expression Expression \n    deriving Eq\n\ndata BoolPrefix = Negation\ndata BoolInfix  = AndOp | OrOp\n</code></pre>\n\n<p>and then you have just</p>\n\n<pre><code>simplify (Literal b) = Literal b\nsimplify (Variable s) = Variable s\nsimplify (BoolPrefix bpf e) = simplify' . BoolPrefix bpf $ simplify e\nsimplify (BoolInfix bifx a b) = simplify' $ BoolInfix bifx (simplify a) (simplify b)\n</code></pre>\n\n<p>Obviously this makes <code>simplify'</code> more awkward though, so perhaps not such a good idea. You can however get around this syntactical overhead by defining specialised <a href=\"https://ghc.haskell.org/trac/ghc/wiki/PatternSynonyms\" rel=\"noreferrer\">pattern synonyms</a>:</p>\n\n<pre><code>{-# LANGUAGE PatternSynonyms #-}\n\npattern Not :: Expression -&gt; Expression\npattern Not x = BoolPrefix Negation x\n\ninfixr 3 :\u2227\npattern (:\u2227) :: Expression -&gt; Expression -&gt; Expression\npattern a:\u2227b = BoolInfix AndOp a b\n\ninfixr 2 :\u2228\npattern (:\u2228) :: Expression -&gt; Expression -&gt; Expression\npattern a:\u2228b = BoolInfix OrOp a b\n</code></pre>\n\n<p>For that matter, perhaps also</p>\n\n<pre><code>pattern F, T :: Expression\npattern F = Literal False\npattern T = Literal True\n</code></pre>\n\n<p>With that, you can then write</p>\n\n<pre><code>simplify' :: Expression -&gt; Expression\nsimplify' (Not (Literal b)) = Literal $ not b\nsimplify' (F :\u2227 _) = F\nsimplify' (_ :\u2227 F) = F\nsimplify' (T :\u2228 _) = T\nsimplify' (a :\u2227 Not b) | a==b  = T\n...\n</code></pre>\n\n<p>I should add a caveat though: <a href=\"https://github.com/leftaroundabout/manifolds/commit/c1d6b174e87c8e3ba4363462eb8de58aedfe79cc\" rel=\"noreferrer\">when I tried something similar to those pattern synonyms, not for booleans but affine mappings, it made the compiler <em>extremely slow</em></a>. (Also, GHC-7.10 didn't yet support polymorphic pattern synonyms yet; this has changed quite a bit as of now.)</p>\n\n<hr>\n\n<p>Note also that all this will not generally yield the simplest possible form \u2013 \nfor that, you'd need to find the fixed point of <code>simplify</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1501777537, "post_id": 45488906, "comment_id": 77940688, "body": "Nice. Maybe you could state that the second approach is essentially using <code>cata</code> from recursion-schemes, so to provide a pointer."}, {"owner": {"reputation": 748, "user_id": 7801892, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9f87eb8937bf17dd8dee0658a4695d2?s=128&d=identicon&r=PG&f=1", "display_name": "Phil Kiener", "link": "https://stackoverflow.com/users/7801892/phil-kiener"}, "edited": false, "score": 0, "creation_date": 1501778591, "post_id": 45488906, "comment_id": 77941425, "body": "This really is a refreshing approach, which should come naturally as an Expression is just a tree ready to be traversed. The dirt, as you called it, does bother me though... spreading <code>Exp</code> around everywhere is something I&#39;d rather not do."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 748, "user_id": 7801892, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9f87eb8937bf17dd8dee0658a4695d2?s=128&d=identicon&r=PG&f=1", "display_name": "Phil Kiener", "link": "https://stackoverflow.com/users/7801892/phil-kiener"}, "edited": false, "score": 2, "creation_date": 1501781445, "post_id": 45488906, "comment_id": 77943229, "body": "@PhilippKiener, the usual answer to cleaning that up in recent GHC versions is to name the <code>ExpressionF</code> constructors with <code>F</code>s at the ends and use pattern synonyms to define the <code>Expression&#39;</code> &quot;constructors&quot;. In this case, those are simple bidirectional pattern synonyms. For example: <code>pattern And :: Expression&#39; -&gt; Expression&#39; -&gt; Expression&#39;; pattern And a b = Exp (AndF a b)</code>."}, {"owner": {"reputation": 1392, "user_id": 5198575, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-RAYCSjVZdnQ/AAAAAAAAAAI/AAAAAAAAClo/VQ8V_H3l8O8/photo.jpg?sz=128", "display_name": "trevor cook", "link": "https://stackoverflow.com/users/5198575/trevor-cook"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1501785183, "post_id": 45488906, "comment_id": 77945397, "body": "@chi, well, it looks like I know what I&#39;ll be learning more about for the rest of the afternoon/week. Thanks for the pointer. If you would like to add, please be my guest."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1501793074, "post_id": 45488906, "comment_id": 77950012, "body": "Well, these are a couple of interesting suggestions, but IMO the functor instance doesn&#39;t make sense. You&#39;re abusing the <code>Functor</code>/<code>Traversable</code> interface to express a (pretty uncanonical) higher-order function that might better just be done as a simple private helper <code>traverseSubexprs :: Applicative a =&gt; (Expression -&gt; a Expression) -&gt; Expression -&gt; a Expression</code>. An actual functor should be able to sensibly, <i>canonically</i> contain <i>any</i> type (or at least any type from some well-specified class, as the various constrained-category libraries allow), but here, only <code>Expression</code> makes any sense."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1501953684, "post_id": 45488906, "comment_id": 78009190, "body": "@leftaroundabout, how so? This is a pretty common approach. Why do only sibexpressions of the same type make sense to you?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1502029700, "post_id": 45488906, "comment_id": 78026003, "body": "@dfeuer well, they aren&#39;t really subexpressions if their type isn&#39;t <code>Expression</code>..."}, {"owner": {"reputation": 1392, "user_id": 5198575, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-RAYCSjVZdnQ/AAAAAAAAAAI/AAAAAAAAClo/VQ8V_H3l8O8/photo.jpg?sz=128", "display_name": "trevor cook", "link": "https://stackoverflow.com/users/5198575/trevor-cook"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1502108842, "post_id": 45488906, "comment_id": 78053222, "body": "@leftaroundabout, I translated the <code>Expression</code> term into the fixed point of an underlying base functor, see recursion-schemes package for more examples (thanks @chi). This is pretty well studied, I can&#39;t remember where I saw it spelled out most clearly, but McBride&#39;s &quot;Clowns [..] Jokers [..]&quot; seems to have left an effect on me. I remember reading that and getting a sense of how <code>deriving(Generic)</code> works. Anyway, we&#39;re interested in the fixed point of that functor, not the functor itself. The decomposition is useful because functors are composable, enabling generic deriving type machinery."}, {"owner": {"reputation": 1392, "user_id": 5198575, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-RAYCSjVZdnQ/AAAAAAAAAAI/AAAAAAAAClo/VQ8V_H3l8O8/photo.jpg?sz=128", "display_name": "trevor cook", "link": "https://stackoverflow.com/users/5198575/trevor-cook"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1502112669, "post_id": 45488906, "comment_id": 78055876, "body": "@leftaroundabout, I made an edit to make my explanation more precise. Previously i said make <code>Expression</code> into a functor, which is not what i meant and which did warrant your comment."}], "tags": [], "owner": {"reputation": 1392, "user_id": 5198575, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-RAYCSjVZdnQ/AAAAAAAAAAI/AAAAAAAAClo/VQ8V_H3l8O8/photo.jpg?sz=128", "display_name": "trevor cook", "link": "https://stackoverflow.com/users/5198575/trevor-cook"}, "is_accepted": false, "score": 6, "last_activity_date": 1502112500, "last_edit_date": 1502112500, "creation_date": 1501774989, "answer_id": 45488906, "question_id": 45486842, "link": "https://stackoverflow.com/questions/45486842/cleaner-alternative-to-extensive-pattern-matching-in-haskell/45488906#45488906", "title": "Cleaner Alternative to Extensive Pattern Matching in Haskell", "body": "<p>I think Einstein said, \"Simplify as much as possible, but no more.\" You have yourself a complicated datatype, and a correspondingly complicated concept, so I assume any technique can only be so much cleaner for the problem at hand. </p>\n\n<p>That said, the first option is to use instead a case structure.</p>\n\n<pre><code>simplify x = case x of\n   Literal _  -&gt; x\n   Variable _ -&gt; x\n   Not e      -&gt; simplifyNot $ simplify e\n   ...\n   where\n     sharedFunc1 = ...\n     sharedFunc2 = ...\n</code></pre>\n\n<p>This has the added benefit of including shared functions which will be usable by all cases but not at the top level namespace. I also like how the cases are freed of their parenthesis. (Also note that in the first two cases i just return the original term, not creating a new one). I often use this sort of structure to just break out other simplify functions, as in the case of <code>Not</code>.</p>\n\n<p>This problem in particular may lend itself to basing <code>Expression</code> on an underlying functor, so that you may <code>fmap</code> a simplification of the subexpressions and then perform the specific combinations of the given case. It will look something like the following:</p>\n\n<pre><code>simplify :: Expression' -&gt; Expression'\nsimplify = Exp . reduce . fmap simplify . unExp\n</code></pre>\n\n<p>The steps in this are unwrapping <code>Expression'</code> into the underlying functor representation, mapping the simplification on the underlying term, and then reducing that simplification and wrapping back up into the new <code>Expression'</code></p>\n\n<pre><code>{-# Language DeriveFunctor #-}\n\nnewtype Expression' = Exp { unExp :: ExpressionF Expression' }\n\ndata ExpressionF e\n  = Literal Bool \n  | Variable String\n  | Not e \n  | Or e e\n  | And e e\n  deriving (Eq,Functor)\n</code></pre>\n\n<p>Now, I have pushed the complexity off into the <code>reduce</code> function, which is only a little less complex because it doesn't have to worry about first reducing the subterm. But it will now contain solely the business logic of combining one term with another.</p>\n\n<p>This may or may not be a good technique for you, but it may make some enhancements easier. For instance, if it is possible to form invalid expressions in your language, you could simplify that with <code>Maybe</code> valued failures. </p>\n\n<pre><code>simplifyMb :: Expression' -&gt; Maybe Expression'\nsimplifyMb = fmap Exp . reduceMb &lt;=&lt; traverse simplifyMb . unExp\n</code></pre>\n\n<p>Here, <code>traverse</code> will apply <code>simplfyMb</code> to the subterms of the <code>ExpressionF</code>, resulting in an expression of <code>Maybe</code> subterms, <code>ExpressionF (Maybe Expression')</code>, and then if any subterms are <code>Nothing</code>, it will return <code>Nothing</code>, if all are <code>Just x</code>, it will return <code>Just (e::ExpressionF Expression')</code>. Traverse isn't actually separated into distinct phases like that, but it's easier to explain as if it were. Also note, you will need language pragmas for DeriveTraversable and DeriveFoldable, as well as deriving statements on the <code>ExpressionF</code> data type.</p>\n\n<p>The downside? Well, for one the dirt of your code will then lie in a bunch of <code>Exp</code> wrappers everywhere. Consider the application of <code>simplfyMb</code> of the simple term below:</p>\n\n<pre><code>simplifyMb (Exp $ Not (Exp $ Literal True))\n</code></pre>\n\n<p>It's also a lot to get a head around, but if you understand <code>traverse</code> and <code>fmap</code> pattern above, you can reuse it in lots of places, so that's good. I also believe defining simplify in that way makes it more robust to whatever the specific <code>ExpressionF</code> constructions may turn into. It doesn't mention them so the deep simplification will be unaffected by refactors. The reduce function on the other hand will be.</p>\n"}, {"tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": false, "score": 2, "last_activity_date": 1501779451, "last_edit_date": 1501779451, "creation_date": 1501779149, "answer_id": 45490350, "question_id": 45486842, "link": "https://stackoverflow.com/questions/45486842/cleaner-alternative-to-extensive-pattern-matching-in-haskell/45490350#45490350", "title": "Cleaner Alternative to Extensive Pattern Matching in Haskell", "body": "<p>Carrying on with your <code>Binary Op Expression Expression</code> idea, we could have the datatype:</p>\n\n<pre><code>data Expression\n    = Literal Bool\n    | Variable String\n    | Not Expression\n    | Binary Op Expression Expression\n    deriving Eq\n\ndata Op = Or | And deriving Eq\n</code></pre>\n\n<p>And an auxiliary function</p>\n\n<pre><code>{-# LANGUAGE ViewPatterns #-}\n\nsimplifyBinary  :: Op -&gt; Expression -&gt; Expression -&gt; Expression\nsimplifyBinary  binop (simplify -&gt; leftexp) (simplify -&gt; rightexp) =\n    case oneway binop leftexp rightexp ++ oneway binop rightexp leftexp of\n        simplified : _ -&gt; simplified\n        []             -&gt; Binary binop leftexp rightexp\n  where\n    oneway :: Op -&gt; Expression -&gt; Expression -&gt; [Expression]\n    oneway And (Literal False) _ = [Literal False]\n    oneway Or  (Literal True)  _ = [Literal True]\n    -- more cases here\n    oneway _   _               _ = []\n</code></pre>\n\n<p>The idea is that you would put the simplification cases in <code>oneway</code> and then <code>simplifyBinary</code> would take care of reversing the arguments, to avoid having to write the symmetric cases.</p>\n"}, {"comments": [{"owner": {"reputation": 748, "user_id": 7801892, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9f87eb8937bf17dd8dee0658a4695d2?s=128&d=identicon&r=PG&f=1", "display_name": "Phil Kiener", "link": "https://stackoverflow.com/users/7801892/phil-kiener"}, "edited": false, "score": 0, "creation_date": 1501799676, "post_id": 45491953, "comment_id": 77952644, "body": "In my case, the choice of whether to simplify or not will be made before constructing the terms, so this will play out very nicely. If I could, I would give you another +1 just for the way symmetry is handled!"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 11, "last_activity_date": 1502115509, "last_edit_date": 1502115509, "creation_date": 1501784935, "answer_id": 45491953, "question_id": 45486842, "link": "https://stackoverflow.com/questions/45486842/cleaner-alternative-to-extensive-pattern-matching-in-haskell/45491953#45491953", "title": "Cleaner Alternative to Extensive Pattern Matching in Haskell", "body": "<p>One thing you can do is simplify as you construct, rather than first constructing then repeatedly destructing. So:</p>\n\n<pre><code>module Simple (Expression, true, false, var, not, or, and) where\n\nimport Prelude hiding (not, or, and)\n\ndata Expression\n    = Literal Bool\n    | Variable String\n    | Not Expression\n    | Or Expression Expression\n    | And Expression Expression\n    deriving (Eq, Ord, Read, Show)\n\ntrue = Literal True\nfalse = Literal False\nvar = Variable\n\nnot (Literal True) = false\nnot (Literal False) = true\nnot x = Not x\n\nor (Literal True) _ = true\nor _ (Literal True) = true\nor x y = Or x y\n\nand (Literal False) _ = false\nand _ (Literal False) = false\nand x y = And x y\n</code></pre>\n\n<p>We can try it out in ghci:</p>\n\n<pre><code>&gt; and (var \"x\") (and (var \"y\") false)\nLiteral False\n</code></pre>\n\n<p>Note that the constructors are not exported: this ensures that folks constructing one of these can't avoid the simplification process. Actually, this may be a drawback; occasionally it is nice to see the \"full\" form. A standard approach to dealing with this is to make the exported smart constructors part of a type-class; you can either use them to build a \"full\" form or a \"simplified\" way. To avoid having to define the type twice, we could either use a newtype or a phantom parameter; I'll elect for the latter here to reduce the noise in pattern-matching.</p>\n\n<pre><code>{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE KindSignatures #-}\nmodule Simple (Format(..), true, false, var, not, or, and) where\n\nimport Prelude hiding (not, or, and)\n\ndata Format = Explicit | Simplified\n\ndata Expression (a :: Format)\n    = Literal Bool\n    | Variable String\n    | Not (Expression a)\n    | Or (Expression a) (Expression a)\n    | And (Expression a) (Expression a)\n    deriving (Eq, Ord, Read, Show)\n\nclass Expr e where\n    true, false :: e\n    var :: String -&gt; e\n    not :: e -&gt; e\n    or, and :: e -&gt; e -&gt; e\n\ninstance Expr (Expression Explicit) where\n    true = Literal True\n    false = Literal False\n    var = Variable\n    not = Not\n    or = Or\n    and = And\n\ninstance Expr (Expression Simplified) where\n    true = Literal True\n    false = Literal False\n    var = Variable\n\n    not (Literal True) = false\n    not (Literal False) = true\n    not x = Not x\n\n    or (Literal True) _ = true\n    or _ (Literal True) = true\n    or x y = Or x y\n\n    and (Literal False) _ = false\n    and _ (Literal False) = false\n    and x y = And x y\n</code></pre>\n\n<p>Now in ghci we can \"run\" the same term in two different ways:</p>\n\n<pre><code>&gt; :set -XDataKinds\n&gt; and (var \"x\") (and (var \"y\") false) :: Expression Explicit\nAnd (Variable \"x\") (And (Variable \"y\") (Literal False))\n&gt; and (var \"x\") (and (var \"y\") false) :: Expression Simplified\nLiteral False\n</code></pre>\n\n<p>You might want to add more rules later; for example, maybe you want:</p>\n\n<pre><code>and (Variable x) (Not (Variable y)) | x == y = false\nand (Not (Variable x)) (Variable y) | x == y = false\n</code></pre>\n\n<p>Having to repeat both \"orders\" of patterns is a bit annoying. We should abstract over that! The data declaration and classes will be the same, but we'll add the helper function <code>eitherOrder</code> and use it in the definitions of <code>and</code> and <code>or</code>. Here's a more complete set of simplifications using this idea (and our final version of the module):</p>\n\n<pre><code>{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE FlexibleContexts #-}\n{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE KindSignatures #-}\nmodule Simple (Format(..), true, false, var, not, or, and) where\n\nimport Data.Maybe\nimport Data.Monoid\nimport Prelude hiding (not, or, and)\nimport Control.Applicative ((&lt;|&gt;))\n\ndata Format = Explicit | Simplified\n\ndata Expression (a :: Format)\n    = Literal Bool\n    | Variable String\n    | Not (Expression a)\n    | Or (Expression a) (Expression a)\n    | And (Expression a) (Expression a)\n    deriving (Eq, Ord, Read, Show)\n\nclass Expr e where\n    true, false :: e\n    var :: String -&gt; e\n    not :: e -&gt; e\n    or, and :: e -&gt; e -&gt; e\n\ninstance Expr (Expression Explicit) where\n    true = Literal True\n    false = Literal False\n    var = Variable\n    not = Not\n    or = Or\n    and = And\n\neitherOrder :: (e -&gt; e -&gt; e)\n            -&gt; (e -&gt; e -&gt; Maybe e)\n            -&gt; e -&gt; e -&gt; e\neitherOrder fExplicit fSimplified x y = fromMaybe\n    (fExplicit x y)\n    (fSimplified x y &lt;|&gt; fSimplified y x)\n\ninstance Expr (Expression Simplified) where\n    true = Literal True\n    false = Literal False\n    var = Variable\n\n    not (Literal True) = false\n    not (Literal False) = true\n    not (Not x) = x\n    not x = Not x\n\n    or = eitherOrder Or go where\n        go (Literal True) _ = Just true\n        go (Literal False) x = Just x\n        go (Variable x) (Variable y) | x == y = Just (var x)\n        go (Variable x) (Not (Variable y)) | x == y = Just true\n        go _ _ = Nothing\n\n    and = eitherOrder And go where\n        go (Literal True) x = Just x\n        go (Literal False) _ = Just false\n        go (Variable x) (Variable y) | x == y = Just (var x)\n        go (Variable x) (Not (Variable y)) | x == y = Just false\n        go _ _ = Nothing\n</code></pre>\n\n<p>Now in ghci we can do more complicated simplifications, like:</p>\n\n<pre><code>&gt; and (not (not (var \"x\"))) (var \"x\") :: Expression Simplified\nVariable \"x\"\n</code></pre>\n\n<p>And even though we only wrote one order of the rewrite rule, both orders work properly:</p>\n\n<pre><code>&gt; and (not (var \"x\")) (var \"x\") :: Expression Simplified\nLiteral False\n&gt; and (var \"x\") (not (var \"x\")) :: Expression Simplified\nLiteral False\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "is_accepted": false, "score": 2, "last_activity_date": 1501793752, "last_edit_date": 1501793752, "creation_date": 1501793418, "answer_id": 45494269, "question_id": 45486842, "link": "https://stackoverflow.com/questions/45486842/cleaner-alternative-to-extensive-pattern-matching-in-haskell/45494269#45494269", "title": "Cleaner Alternative to Extensive Pattern Matching in Haskell", "body": "<p>You could write a generic simplifier for all binary operations:</p>\n\n<pre><code>simplifyBinWith :: (Bool -&gt; Bool -&gt; Bool) -- the boolean operation\n                -&gt; (Expression -&gt; Expression -&gt; Expression) -- the constructor\n                -&gt; Expression -&gt; Expression -- the two operands\n                -&gt; Expression) -- the simplified result\nsimplifyBinWith op cons a b = case (simplify a, simplify b) of\n    (Literal x, Literal y) -&gt; Literal (op x y)\n    (Literal x, b')        -&gt; tryAll (x `op`) b'\n    (a',        Literal y) -&gt; tryAll (`op` y) a'\n    (a',        b')        -&gt; cons a' b'\n  where\n    tryAll f term = case (f True, f False) of -- what would f do if term was true of false\n      (True,  True)  -&gt; Literal True\n      (True,  False) -&gt; term\n      (False, True)  -&gt; Not term\n      (False, False) -&gt; Literal False\n</code></pre>\n\n<p>That way, your <code>simplify</code> function would become</p>\n\n<pre><code>simplify :: Expression -&gt; Expression\nsimplify (Not e)   = case simplify e of\n    (Literal b) -&gt; Literal (not b)\n    e'          -&gt; Not e'\nsimplify (And a b) = simplifyBinWith (&amp;&amp;) And a b\nsimplify (Or a b)  = simplifyBinWith (||) Or a b\nsimplify t         = t\n</code></pre>\n\n<p>and could be easily extended to more binary operations. It would also work well with the <code>Binary Op Expression Expression</code> idea, you'd pass <code>Op</code> instead of an <code>Expression</code> constructor to <code>simplifyBinWith</code> and the pattern in <code>simplify</code> could be generalised:</p>\n\n<pre><code>simplify :: Expression -&gt; Expression\nsimplify (Not e)         = case simplify e of\n    (Literal b) -&gt; Literal (not b)\n    e'          -&gt; Not e'\nsimplify (Binary op a b) = simplifyBinWith (case op of\n    And -&gt; (&amp;&amp;)\n    Or -&gt; (||)\n    Xor -&gt; (/=)\n    Implies -&gt; (&lt;=)\n    Equals -&gt; (==)\n    \u2026\n  ) op a b\nsimplify t               = t\n  where\n    simplifyBinWith f op a b = case (simplify a, simplify b) of\n      (Literal x, Literal y) -&gt; Literal (f x y)\n      \u2026\n      (a',        b')        -&gt; Binary op a' b'\n</code></pre>\n"}], "owner": {"reputation": 748, "user_id": 7801892, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f9f87eb8937bf17dd8dee0658a4695d2?s=128&d=identicon&r=PG&f=1", "display_name": "Phil Kiener", "link": "https://stackoverflow.com/users/7801892/phil-kiener"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1277, "favorite_count": 4, "accepted_answer_id": 45491953, "answer_count": 5, "score": 22, "last_activity_date": 1503931579, "creation_date": 1501769799, "last_edit_date": 1503931579, "question_id": 45486842, "link": "https://stackoverflow.com/questions/45486842/cleaner-alternative-to-extensive-pattern-matching-in-haskell", "title": "Cleaner Alternative to Extensive Pattern Matching in Haskell", "body": "<p>Right now, I have some code that essentially works like this:</p>\n\n<pre><code>data Expression \n    = Literal Bool \n    | Variable String\n    | Not Expression \n    | Or Expression Expression \n    | And Expression Expression\n    deriving Eq\n\nsimplify :: Expression -&gt; Expression\nsimplify (Literal b) = Literal b\nsimplify (Variable s) = Variable s\nsimplify (Not e) = case simplify e of\n    (Literal b) -&gt; Literal (not b)\n    e'          -&gt; Not e'\nsimplify (And a b) = case (simplify a, simplify b) of\n    (Literal False, _) -&gt; Literal False\n    (_, Literal False) -&gt; Literal False\n    (a', b')           -&gt; And a' b'\nsimplify (Or a b) = case (simplify a, simplify b) of\n    (Literal True, _) -&gt; Literal True\n    (_, Literal True) -&gt; Literal True\n    (a', b')          -&gt; Or a' b'\n</code></pre>\n\n<p>And many more such patterns regarding all the ways one can simplify a boolean expression. As I add more operators and rules however, this grows immensely and feels.. clunky. Especially so since some rules need to be added twice to account for commutativity.</p>\n\n<p>How can I nicely refactor lots and lots of patterns of which some (most, I'd say) are even symmetrical (take the And and Or patterns for example)?</p>\n\n<p>Right now, adding a rule to simplify <code>And (Variable \"x\") (Not (Variable \"x\"))</code> to <code>Literal False</code> requires me to add two nested rules, which is all but optimal.</p>\n"}, {"tags": ["function", "haskell", "types", "polymorphism", "polymorphic-functions"], "answers": [{"comments": [{"owner": {"reputation": 215, "user_id": 8224815, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/2e00dc51f47b166e66df0b3bb6eb849f?s=128&d=identicon&r=PG&f=1", "display_name": "James", "link": "https://stackoverflow.com/users/8224815/james"}, "edited": false, "score": 0, "creation_date": 1501769555, "post_id": 45486548, "comment_id": 77934346, "body": "I see, so every time when two parameters are being applied to one another inside the function, both parameters must be of the same type? For example, <code>f x</code> was passed in the else, that means <code>f</code> and <code>x</code> must be the same type in order to call the <code>iter</code> function?"}, {"owner": {"reputation": 2861, "user_id": 2847643, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/PmATO.jpg?s=128&g=1", "display_name": "user2847643", "link": "https://stackoverflow.com/users/2847643/user2847643"}, "reply_to_user": {"reputation": 215, "user_id": 8224815, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/2e00dc51f47b166e66df0b3bb6eb849f?s=128&d=identicon&r=PG&f=1", "display_name": "James", "link": "https://stackoverflow.com/users/8224815/james"}, "edited": false, "score": 0, "creation_date": 1501770650, "post_id": 45486548, "comment_id": 77935355, "body": "No, not in general. It&#39;s a special case here since we know that the type of <code>f x</code> must be the same as <code>x</code>. We know that because both are passed as the third argument to <code>iter</code>. Edit: sorry, misread, I should have said No, not at all :) <code>f :: a -&gt; a</code> and <code>x :: a</code> so they are not the same type at all. <code>f</code> is a function that must <i>return</i> <code>a</code> and we are passing it <code>x :: a</code> as an argument thus <code>f :: a -&gt; a</code>"}, {"owner": {"reputation": 215, "user_id": 8224815, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/2e00dc51f47b166e66df0b3bb6eb849f?s=128&d=identicon&r=PG&f=1", "display_name": "James", "link": "https://stackoverflow.com/users/8224815/james"}, "edited": false, "score": 0, "creation_date": 1501770805, "post_id": 45486548, "comment_id": 77935494, "body": "Thank you, I really love yours and Willem&#39;s answers. They both cleared so much for me. Cant choose which one as accepted. But Ill give you this one as for my last question I accepted his :)  Thank you for your time"}], "tags": [], "owner": {"reputation": 2861, "user_id": 2847643, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/PmATO.jpg?s=128&g=1", "display_name": "user2847643", "link": "https://stackoverflow.com/users/2847643/user2847643"}, "is_accepted": true, "score": 5, "last_activity_date": 1501769028, "creation_date": 1501769028, "answer_id": 45486548, "question_id": 45486219, "link": "https://stackoverflow.com/questions/45486219/polymorphic-types-in-haskell/45486548#45486548", "title": "Polymorphic types in Haskell", "body": "<blockquote>\n  <p>The function takes 3 parameters, so we have t1 -> t2 -> t3 -> T</p>\n</blockquote>\n\n<p>This is correct as a starting point.</p>\n\n<blockquote>\n  <p>p is being used inside the if condition so it must return a bool, therefore t1 = a -> Bool</p>\n</blockquote>\n\n<p>Correct.</p>\n\n<blockquote>\n  <p>f is also the same type as p because it is passed as an argument in the else block, therefore t2 = a -> Bool</p>\n</blockquote>\n\n<p>Incorrect. <code>f</code> is never used in the same way as <code>p</code>. In the else block <code>f</code> is being applied to <code>x</code> and the result passed as the last argument to <code>iter</code>. From that we know <code>f x</code> must be the same type as <code>x</code> so <code>f :: a -&gt; a</code>.</p>\n\n<blockquote>\n  <p>x is being used inside the if condition so it must return a bool, therefore t1 = a -> Bool</p>\n</blockquote>\n\n<p>Incorrect. In the if condition <code>x</code> is being used only as an argument to <code>p</code>. You established above <code>p :: a -&gt; Bool</code>. Therefore <code>x :: a</code>.</p>\n\n<blockquote>\n  <p>But when i checked the type in the ghci, the type they gave me was</p>\n  \n  <p>iter :: (t -> Bool) -> (t -> t) -> t -> t</p>\n</blockquote>\n\n<p>Correct. You could also write this replacing <code>t</code> with <code>a</code> to be consistent in the notation - we used <code>a</code> above:</p>\n\n<pre><code>iter :: (a -&gt; Bool) -&gt; (a -&gt; a) -&gt; a -&gt; a\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 1, "last_activity_date": 1501769666, "creation_date": 1501769666, "answer_id": 45486799, "question_id": 45486219, "link": "https://stackoverflow.com/questions/45486219/polymorphic-types-in-haskell/45486799#45486799", "title": "Polymorphic types in Haskell", "body": "<p>Let's evaluate it again:</p>\n\n<pre><code>iter p f x = if (p x) then x else (iter p f (f x))\n</code></pre>\n\n<p><code>iter</code> takes three parameters (well technically speaking every function takes one parameter, but let's skip the details). So it has indeed a type <code>t1 -&gt; t2 -&gt; t3 -&gt; t</code>.</p>\n\n<p>Now in the <code>if</code>-<code>then</code>-<code>else</code> statement, we see <code>(p x)</code> this means that <code>p x</code> has to evaluate to a boolean. So that means that:</p>\n\n<pre><code>t1 ~ t3 -&gt; Bool\n</code></pre>\n\n<p>Next we see <code>x</code> in the <code>then</code> statement. This may strike as non-important, but it is: it means that the output type <code>t</code> is the same as that of <code>t3</code>, so:</p>\n\n<pre><code>t3 ~ t\n</code></pre>\n\n<p>Now that means we already derived that <code>iter</code> has the type:</p>\n\n<pre><code>iter :: (t3 -&gt; Bool) -&gt; t2 -&gt; t3 -&gt; t3\n</code></pre>\n\n<p>Now we see in the <code>else</code> statement the call:</p>\n\n<pre><code>iter p f (f x)\n</code></pre>\n\n<p>So that means that <code>f</code> is a function <code>f :: t4 -&gt; t5</code>. Since it takes <code>x</code> as input, its input type should be <code>t3</code>, and since the result of <code>(f x)</code> is passed to an <code>iter</code> function (that is <strong><em>not</em> per se the same \"grounded\" <code>iter</code></strong> function). So we have to inspect the call:</p>\n\n<pre><code>iter :: (u3 -&gt; Bool) -&gt; u2 -&gt; u3 -&gt; u3  -- call\n</code></pre>\n\n<p>Now since we call it with <code>iter p f (f x)</code> we definitely know that <code>u3 ~ t3</code>: because <code>p</code> has type <code>t3 -&gt; Bool</code>. So it grounds further to:</p>\n\n<pre><code>iter :: (t3 -&gt; Bool) -&gt; u2 -&gt; t3 -&gt; t3  -- call\n</code></pre>\n\n<p>Sine <code>(f x)</code> is used as third argument, we know that the type of the result of <code>f x</code> should be <code>t3</code> as well. So <code>f</code> has type <code>f :: t3 -&gt; t3</code>. So we conclude that iter has the type:</p>\n\n<pre><code>iter :: (t3 -&gt; Bool) -&gt; (t3 -&gt; t3) -&gt; t3 -&gt; t3\n</code></pre>\n"}], "owner": {"reputation": 215, "user_id": 8224815, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/2e00dc51f47b166e66df0b3bb6eb849f?s=128&d=identicon&r=PG&f=1", "display_name": "James", "link": "https://stackoverflow.com/users/8224815/james"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 120, "favorite_count": 0, "accepted_answer_id": 45486548, "answer_count": 2, "score": 1, "last_activity_date": 1501769666, "creation_date": 1501768240, "last_edit_date": 1501768900, "question_id": 45486219, "link": "https://stackoverflow.com/questions/45486219/polymorphic-types-in-haskell", "title": "Polymorphic types in Haskell", "body": "<p>I came across this function </p>\n\n<pre><code>iter p f x = if (p x) then x else (iter p f (f x))\n</code></pre>\n\n<p>and I thought I'd give a go at defining the polymorphic types myself to understand the concept.</p>\n\n<p>My thought was the following:</p>\n\n<p>The function takes 3 parameters, so we have <strong><code>t1 -&gt; t2 -&gt; t3 -&gt; T</code></strong></p>\n\n<ol>\n<li><p><code>p</code> is being used inside the if condition so it must return a <code>bool</code>, therefore <code>t1 = a -&gt; Bool</code></p></li>\n<li><p><code>f</code> is also the same type as <code>p</code> because it is passed as an argument in the else block, therefore <code>t2 = a -&gt; Bool</code></p></li>\n<li><p>x is being used inside the if condition so it must return a bool, therefore <code>t1 = a -&gt; Bool</code></p></li>\n</ol>\n\n<p>But when i checked the type in the ghci, the type they gave me was</p>\n\n<p><code>iter :: (t -&gt; Bool) -&gt; (t -&gt; t) -&gt; t -&gt; t</code></p>\n\n<p>Can someone please explain the reasoning behind this.</p>\n\n<p>Thanks</p>\n"}, {"tags": ["haskell", "parsec"], "comments": [{"owner": {"reputation": 34669, "user_id": 34409, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4dfdadcd9bb62300eb1a54f02fe5dc18?s=128&d=identicon&r=PG", "display_name": "Chad Gilbert", "link": "https://stackoverflow.com/users/34409/chad-gilbert"}, "edited": false, "score": 2, "creation_date": 1501765404, "post_id": 45484832, "comment_id": 77930606, "body": "What error are you receiving? <a href=\"https://gist.github.com/freakingawesome/62046eb6a24d4c4f5bc0103f83317e40\" rel=\"nofollow noreferrer\">It worked inside GHCi for me</a>"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1501765460, "post_id": 45484832, "comment_id": 77930658, "body": "I get <code>Right (&quot;fo o&quot;,&quot;bar&quot;)</code> as a result in ghci..."}, {"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 2, "creation_date": 1501767200, "post_id": 45484832, "comment_id": 77932156, "body": "In the <a href=\"http://hackage.haskell.org/package/parsec-3.1.11/docs/Text-Parsec-Combinator.html#v:manyTill\" rel=\"nofollow noreferrer\">documentation</a> there&#39;s a note at the bottom which indicates you should use <code>try (string &quot;--&quot;)</code>"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1501802462, "post_id": 45484832, "comment_id": 77953392, "body": "It&#39;s unclear why you&#39;ve written your parser using <code>manyTill anyChar $ string &quot;--&quot;</code>, but that parser will cause you lots of trouble. Any parser which requires backtracking at some point is not a good parser; unless the grammar you are trying to parse is ambiguous (but you&#39;ve not stated what that is)."}], "owner": {"reputation": 1972, "user_id": 1747134, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/696bad3bd2c5e16ded04f3cdf436623f?s=128&d=identicon&r=PG", "display_name": "user1747134", "link": "https://stackoverflow.com/users/1747134/user1747134"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 77, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1501768709, "creation_date": 1501764863, "question_id": 45484832, "link": "https://stackoverflow.com/questions/45484832/parsec-parse-pair-with-a-separator", "title": "Parsec - parse pair with a separator", "body": "<p>I am learning Parsec and I want to acomplish a simple task, to parse a string like <code>\"fo o--bar\"</code> to <code>(\"fo o\", \"bar\")</code> using Parsec.</p>\n\n<p>I am trying:</p>\n\n<pre><code>parsePair :: Parser (String, String)\nparsePair = do\n  a &lt;- manyTill anyChar $ string \"--\"\n  b &lt;- many1 alphaNum\n  pure (a, b)\n</code></pre>\n\n<p>which compiles, but then <code>parse parsePair \"\" \"fo o--bar\"</code> always produces a parse error. Why is that?</p>\n"}, {"tags": ["haskell", "tree-traversal", "uuagc"], "owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 64, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1501764083, "creation_date": 1501763406, "last_edit_date": 1501764083, "question_id": 45484233, "link": "https://stackoverflow.com/questions/45484233/monadic-traversal-with-uuagc", "title": "Monadic traversal with UUAGC", "body": "<p>I'd like to write a tree traversal with UUAGC where attributes are computed in a particular fixed monad (for example's sake, let's say I want to annotate each node with a fresh <code>IORef ()</code>). Is there a way to do that with UUAGC? (For simplicity's sake, let's further suppose that my traversal can be statically scheduled).</p>\n\n<p>I see that <code>uuagc</code> has a <code>--monadic</code> flag:</p>\n\n<pre><code>--monadic     Experimental: generate monadic code\n</code></pre>\n\n<p>but that seems to generate syntactically invalid Haskell code; for example, given</p>\n\n<pre><code>imports {\nimport Data.IORef\n}\n\ndata Tree\n   | X\n\nattr Tree\n   syn iden :: {IORef ()}\n\nsem Tree\n  | X lhs.iden = newIORef ()\n\n\n{\nmain :: IO ()\nmain = do\n  r &lt;- sem_Tree X\n  print =&lt;&lt; readIORef r\n}\n</code></pre>\n\n<p>the generated code is a nonsensical mess of pure and monadic bindings:</p>\n\n<pre><code>sem_Tree_X =\n    (let _lhsOiden :: (IORef ())\n         _lhsOiden &lt;- ({-# LINE 12 \"monad.ag\" #-}\n                       newIORef ()\n                       {-# LINE 39 \"monad.hs\" #-}\n                       )\n     in  ( _lhsOiden))\n</code></pre>\n"}, {"tags": ["list", "function", "haskell", "if-statement", "recursion"], "comments": [{"owner": {"reputation": 673, "user_id": 4520565, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/0qisO.jpg?s=128&g=1", "display_name": "al-eax", "link": "https://stackoverflow.com/users/4520565/al-eax"}, "edited": false, "score": 0, "creation_date": 1501760246, "post_id": 45483023, "comment_id": 77926476, "body": "No, (y : ys) doesnt add y to ys. (y:ys) is the whole list. y is the fist element of that list. ys is the rest of the list. See <a href=\"https://stackoverflow.com/questions/1696751/what-does-the-infix-operator-do-in-haskell\" title=\"what does the infix operator do in haskell\">stackoverflow.com/questions/1696751/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 215, "user_id": 8224815, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/2e00dc51f47b166e66df0b3bb6eb849f?s=128&d=identicon&r=PG&f=1", "display_name": "James", "link": "https://stackoverflow.com/users/8224815/james"}, "edited": false, "score": 0, "creation_date": 1501760599, "post_id": 45483083, "comment_id": 77926732, "body": "Oh I see, thanks for clearing that confusion, but then how does the whole recursion work then? So lets say were looking for 4 in a <code>[1..10]</code>, when we call the function, how does it check each element in the list?"}, {"owner": {"reputation": 34669, "user_id": 34409, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4dfdadcd9bb62300eb1a54f02fe5dc18?s=128&d=identicon&r=PG", "display_name": "Chad Gilbert", "link": "https://stackoverflow.com/users/34409/chad-gilbert"}, "reply_to_user": {"reputation": 215, "user_id": 8224815, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/2e00dc51f47b166e66df0b3bb6eb849f?s=128&d=identicon&r=PG&f=1", "display_name": "James", "link": "https://stackoverflow.com/users/8224815/james"}, "edited": false, "score": 0, "creation_date": 1501760939, "post_id": 45483083, "comment_id": 77927004, "body": "I&#39;ve added a visual example to the answer to try and help you picture what happens"}, {"owner": {"reputation": 215, "user_id": 8224815, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/2e00dc51f47b166e66df0b3bb6eb849f?s=128&d=identicon&r=PG&f=1", "display_name": "James", "link": "https://stackoverflow.com/users/8224815/james"}, "edited": false, "score": 0, "creation_date": 1501761215, "post_id": 45483083, "comment_id": 77927237, "body": "Thank you Chad, Really appreciate your help, now it makes sense. So in every call, the head is changed which is why it loops right till the end."}], "tags": [], "owner": {"reputation": 34669, "user_id": 34409, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4dfdadcd9bb62300eb1a54f02fe5dc18?s=128&d=identicon&r=PG", "display_name": "Chad Gilbert", "link": "https://stackoverflow.com/users/34409/chad-gilbert"}, "is_accepted": true, "score": 6, "last_activity_date": 1501761382, "last_edit_date": 1501761382, "creation_date": 1501760268, "answer_id": 45483083, "question_id": 45483023, "link": "https://stackoverflow.com/questions/45483023/how-to-check-if-an-element-exists-in-list-in-haskell/45483083#45483083", "title": "How to check if an element exists in list in haskell?", "body": "<blockquote>\n  <p>I don't see any loop here except a recursive call passing the same y to ys</p>\n</blockquote>\n\n<p>The recursive portion is passing the <em>tail</em> of the list to the <code>elem'</code> function, not the same list. Therefore, once it has gotten to the end of the list, the only tail remaining is the empty list, <code>[]</code>, which should terminate in another function pattern like this:</p>\n\n<pre><code>elem' _ [] = False\n</code></pre>\n\n<p><strong>Edit:</strong> Further clarification for your comment</p>\n\n<p>You can picture the recursive calls like this:</p>\n\n<pre><code>-- assuming elem' is defined as:\nelem' _ [] = False\nelem' x (y : ys) = if x == y then True else elem' x ys\n\n-- calling elem' trying to find 6 in [1..5]\nelem' 6 (1 : [2, 3, 4, 5]) = if 6 == 1 then True else elem' 6 [2, 3, 4, 5]\nelem' 6 (2 : [3, 4, 5])    = if 6 == 2 then True else elem' 6 [3, 4, 5]\nelem' 6 (3 : [4, 5])       = if 6 == 3 then True else elem' 6 [4, 5]\nelem' 6 (4 : [5])          = if 6 == 4 then True else elem' 6 [5]\nelem' 6 (5 : [])           = if 6 == 5 then True else elem' 6 []\nelem' 6 []                 = False\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "is_accepted": false, "score": 0, "last_activity_date": 1501761184, "creation_date": 1501761184, "answer_id": 45483419, "question_id": 45483023, "link": "https://stackoverflow.com/questions/45483023/how-to-check-if-an-element-exists-in-list-in-haskell/45483419#45483419", "title": "How to check if an element exists in list in haskell?", "body": "<p><strong>What I'm confused about is that in Haskell (y : ys) this adds y to ys</strong>\nNo it is not, that is a <a href=\"https://www.haskell.org/tutorial/patterns.html\" rel=\"nofollow noreferrer\"><code>pattern matching</code></a> feature, it is actually binding the first value of the list to <code>y</code> and the rest of it to <code>ys</code>.\nSo, when you make the recursive call <code>elem\u2019 x ys</code> you are evaluating the rest of the list.\nThis is called <a href=\"https://wiki.haskell.org/Tail_recursion\" rel=\"nofollow noreferrer\"><code>tail recursion pattern</code></a></p>\n"}], "owner": {"reputation": 215, "user_id": 8224815, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/2e00dc51f47b166e66df0b3bb6eb849f?s=128&d=identicon&r=PG&f=1", "display_name": "James", "link": "https://stackoverflow.com/users/8224815/james"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 6931, "favorite_count": 0, "accepted_answer_id": 45483083, "answer_count": 2, "score": -1, "last_activity_date": 1501761382, "creation_date": 1501760064, "question_id": 45483023, "link": "https://stackoverflow.com/questions/45483023/how-to-check-if-an-element-exists-in-list-in-haskell", "title": "How to check if an element exists in list in haskell?", "body": "<p>I know this question has been asked earlier, but the answer deviates from the main question.</p>\n\n<p>Here is a method that checks if an element exists in Haskell </p>\n\n<p><code>elem\u2019 x (y : ys) = if x == y then True else elem\u2019 x ys</code></p>\n\n<p>What I'm confused about is that in Haskell <code>(y : ys)</code> this adds y to ys, so how does this function really checks if an element exists? Because I don't see any loop here except a recursive call passing the same <code>y</code> to <code>ys</code>.</p>\n\n<p>Please enlighten me.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "edited": false, "score": 0, "creation_date": 1501740802, "post_id": 45476163, "comment_id": 77912698, "body": "Look at the type for <code>(&lt;&gt;)</code>."}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 1, "creation_date": 1501740840, "post_id": 45476163, "comment_id": 77912721, "body": "Number literals in Haskell are overloaded using the <code>Num</code> typeclass. The <code>:: Sum Integer</code> on <code>2</code> tells Haskell that <code>2 :: Sum Integer</code> has type <code>Sum Integer</code> (which has a <code>Num</code> instance). Then, since <code>(&lt;&gt;) :: Monoid m =&gt; m -&gt; m -&gt; m</code>, Haskell knows that <code>1</code> must have the same type as <code>2 :: Sum Integer</code>."}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1501741780, "post_id": 45476163, "comment_id": 77913258, "body": "Why does <code>2 :: Sum Integer</code> determine which type <code>1</code> has to be?"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "reply_to_user": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "edited": false, "score": 1, "creation_date": 1501741966, "post_id": 45476163, "comment_id": 77913367, "body": "As stated by @Code-Apprentice, you should look at the type of <code>&lt;&gt;</code>, which is <code>Monoid a =&gt; a -&gt; a -&gt; a</code>. The types of both arguments must be identical."}], "answers": [{"tags": [], "owner": {"reputation": 20310, "user_id": 525980, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/8dafe66793ee2f32192e9fcefb389a12?s=128&d=identicon&r=PG", "display_name": "Clinton", "link": "https://stackoverflow.com/users/525980/clinton"}, "is_accepted": true, "score": 5, "last_activity_date": 1501767667, "last_edit_date": 1501767667, "creation_date": 1501742548, "answer_id": 45476715, "question_id": 45476163, "link": "https://stackoverflow.com/questions/45476163/how-does-it-become-to-particular-type/45476715#45476715", "title": "How does it become to particular type?", "body": "<p>Firstly <code>(2 :: Sum Integer)</code>.</p>\n\n<p>Any literal integer in Haskell is rewritten by Haskell by wrapping it in a <code>fromInteger</code> call. So:</p>\n\n<pre><code>(2 :: Sum Integer) == ((fromInteger (2 :: Integer)) :: Sum Integer) \n</code></pre>\n\n<p>Haskell just allows the notation on the left hand side so it's easier to type, but it's equivalent to the code on the right.</p>\n\n<p>The <code>fromInteger</code> function has the following type signature:</p>\n\n<pre><code>fromInteger :: Num a =&gt; Integer -&gt; a\n</code></pre>\n\n<p>So <code>(fromInteger (2 :: Integer))</code> has type <code>Num a =&gt; a</code></p>\n\n<p>Somewhere in the libraries you'll have an instance like the following:</p>\n\n<pre><code>instance Num a =&gt; Num (Sum a) where ...\n</code></pre>\n\n<p>As <code>Integer</code> is a <code>Num</code>, so is <code>Sum Integer</code>.</p>\n\n<p>So we can convert <code>Num a =&gt; a</code> to <code>Sum Integer</code> just by substituting <code>a = Sum Integer</code>. </p>\n\n<p>Finally, we have the <code>Semigroup</code> function:</p>\n\n<p>(&lt;>) :: Semigroup a => a -> a -> a</p>\n\n<p>There's also an instance:</p>\n\n<pre><code>instance Num a =&gt; Semigroup (Sum a) where ...\n</code></pre>\n\n<p>Somewhere in the semigroups modules, and as the <code>(&lt;&gt;)</code> function specifies that the left and right argument and result has to be the same argument, then if we know one of these we know the other two. We know that the right argument is <code>Sum Integer</code>, so we have to check we can convert the left argument to <code>Sum Integer</code>.</p>\n\n<p>Remember from before, <code>1</code> really means <code>fromInteger (1 :: Integer)</code>. We've mention before that there's a <code>fromInteger</code> implementation to <code>Sum Integer</code>, so this is fine. We can then use the semigroup operation <code>(&lt;&gt;)</code> on them as they're now the same type which is also a <code>Semigroup</code>. </p>\n\n<p><strong>Answer for update</strong></p>\n\n<p><code>Num</code> is not a type, it's a class. <code>Integer</code> is a type, but as I've said before, <code>43</code> is not an <code>Integer</code>, it's <code>fromInteger 43</code>. It can be an <code>Integer</code> or it can be any <code>Num</code> type. Some of those <code>Num</code> types may be a <code>Monoid</code>.</p>\n\n<p>Try <code>x = mappend (43 :: Integer)</code> and you'll find the code now fails to compile because you're forcing <code>Num</code> to be an <code>Int</code> which doesn't have a <code>Monoid</code> instance. </p>\n\n<p>However, <code>x = mappend (43 :: Sum Integer)</code> does have a <code>Monoid</code> instance so should compile fine.</p>\n"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 92, "favorite_count": 0, "accepted_answer_id": 45476715, "answer_count": 1, "score": 0, "last_activity_date": 1501767667, "creation_date": 1501740683, "last_edit_date": 1501742457, "question_id": 45476163, "link": "https://stackoverflow.com/questions/45476163/how-does-it-become-to-particular-type", "title": "How does it become to particular type?", "body": "<p>I have following code snippet:</p>\n\n<pre><code>Prelude Data.Monoid&gt; :t 1 &lt;&gt; (2 :: Sum Integer)\n1 &lt;&gt; (2 :: Sum Integer) :: Sum Integer\n</code></pre>\n\n<p>How does <code>1</code> become to <code>Sum Integer</code> type?  </p>\n\n<p><strong>Update</strong></p>\n\n<p>I play a bit with <code>mappend</code> function and discovered:</p>\n\n<pre><code>Prelude Data.Monoid&gt; x = mappend 43\n</code></pre>\n\n<p>Why does mappend accept the number <code>43</code>? <code>43</code> is a <code>Num</code> type and it has no monoid instance.  </p>\n"}, {"tags": ["haskell", "types", "hlist", "extensible", "vinyl"], "comments": [{"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1501739784, "post_id": 45473657, "comment_id": 77912169, "body": "Are you avoiding the use of <code>reifyNames</code>? (Which seems ready made for this sort of thing...)"}], "answers": [{"comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1501741860, "post_id": 45476085, "comment_id": 77913306, "body": "The <code>composite</code> library seems to be amazingly over-engineered for little to no benefit. E.g., you state there should be a variant of <code>reifyDicts</code> for <code>ValuesAllHave</code>; but there cannot be, without declaring an additional class to prove every <code>rs</code> is indeed a <code>:-&gt;</code> (e.g. <code>class IsAssoc a where isAssoc :: forall r . a -&gt; (forall s v . ((s :-&gt; v) ~ a) =&gt; r) -&gt; r</code>) - your <code>ShowField</code> provides this proof. Also, <code>reifyDicts</code> uses <code>RecApplicative</code> to rebuild the spine of the list instead of just doing induction on the input. <code>composite</code> simply offers no easy way of performing this (simple) operation!"}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1501743691, "post_id": 45476085, "comment_id": 77914430, "body": "@user2407038 I completely agree. I also tried actively using the machinery they provide and the solutions I ended up with were twice as long and less clear than the ones I posted. :/"}, {"owner": {"reputation": 3057, "user_id": 3884713, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/57f1298138a8935d5bf982478e47f23d?s=128&d=identicon&r=PG&f=1", "display_name": "Josh.F", "link": "https://stackoverflow.com/users/3884713/josh-f"}, "edited": false, "score": 0, "creation_date": 1501786308, "post_id": 45476085, "comment_id": 77945996, "body": "Thanks! Am I correct in assuming that Dependent Typing, or perhaps even just TypeInType, could make all of this easier since types, and kinds, and constraints (?), are more on the same level?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1501788563, "post_id": 45476085, "comment_id": 77947389, "body": "I suggest you consider <code>class Tuplify f ts where tuplify :: Rec f ts -&gt; [(String, String)]</code>. This generalizes it a tad and IMO cleans it up."}], "tags": [], "owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "is_accepted": true, "score": 2, "last_activity_date": 1501834374, "last_edit_date": 1501834374, "creation_date": 1501740373, "answer_id": 45476085, "question_id": 45473657, "link": "https://stackoverflow.com/questions/45473657/how-can-i-constrain-vinyl-composite-records/45476085#45476085", "title": "How can I constrain Vinyl / Composite Records?", "body": "<p>I can't get <code>composite</code> related stuff to install on my global Stack setup but the following should still work (I just copy-pasted relevant definitions). That said, I think a simple type-class based dispatch based on type is simpler here (since the constraints are non-trivial). With all of the right extensions enabled [1], you just need:</p>\n\n<pre><code>class Tuplify a where\n  tuplify :: a -&gt; [(String, String)]\n\ninstance Tuplify (Rec Identity '[]) where\n  tuplify RNil = []\n\ninstance (Show t, KnownSymbol s, Tuplify (Rec Identity rs)) =&gt;\n           Tuplify (Rec Identity (s :-&gt; t ': rs)) where\n  tuplify (v :*: rs) = (symbolVal (Proxy :: Proxy s), show v) : tuplify rs\n</code></pre>\n\n<p>Then, in GHCi:</p>\n\n<pre><code>ghci&gt; tuplify ab\n[(\"a\",\"\\\"A\\\"\"),(\"b\",\"1\")]\n</code></pre>\n\n<hr>\n\n<p>If you really want to try the reifying constraint approach, you'll have to start by declaring a type class and instance for the particular constraint you want:</p>\n\n<pre><code>class ShowField a where \n  showField :: a -&gt; (String, String)                                                                                \n\ninstance (KnownSymbol s, Show a) =&gt; ShowField (Identity (s :-&gt; a)) where\n  showField (Identity (Val v)) = (symbolVal (Proxy :: Proxy s), show v)\n</code></pre>\n\n<p>Then it becomes more straightforward to use <code>reifyConstraints</code> and <code>rmap</code>:</p>\n\n<pre><code>tuplify' :: RecAll Identity rs ShowField =&gt; Rec Identity rs -&gt; [(String, String)]\ntuplify' xs = recordToList\n            . rmap (\\(Vinyl.Compose (Dict x)) -&gt; Vinyl.Const $ showField x)\n            $ reifyConstraint (Proxy :: Proxy ShowField) xs\n</code></pre>\n\n<p>I imagine something similar is possible with <code>reifyDicts</code>, although I wish there was a variant of it defined using <code>ValuesAllHave</code> instead of just <code>AllHave</code> (then we could bypass declaring a <code>ShowField</code> typeclass and do everything in just a function).</p>\n\n<hr>\n\n<pre><code>[1] extensions needed for first example\n\n{-# LANGUAGE DataKinds           #-}\n{-# LANGUAGE FlexibleContexts    #-}\n{-# LANGUAGE FlexibleInstances   #-}\n{-# LANGUAGE GADTs               #-}\n{-# LANGUAGE RankNTypes          #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE TypeFamilies        #-}\n{-# LANGUAGE TypeOperators       #-}\n</code></pre>\n"}], "owner": {"reputation": 3057, "user_id": 3884713, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/57f1298138a8935d5bf982478e47f23d?s=128&d=identicon&r=PG&f=1", "display_name": "Josh.F", "link": "https://stackoverflow.com/users/3884713/josh-f"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 128, "favorite_count": 0, "accepted_answer_id": 45476085, "answer_count": 1, "score": 1, "last_activity_date": 1501834374, "creation_date": 1501726027, "last_edit_date": 1592644375, "question_id": 45473657, "link": "https://stackoverflow.com/questions/45473657/how-can-i-constrain-vinyl-composite-records", "title": "How can I constrain Vinyl / Composite Records?", "body": "<p>I have an extensible Vinyl / Composite record (similar to HList, Frames...), and I would like to generate the tuples of keys/values, such as</p>\n<pre><code>tuplify '[String :-&gt; Whatevs, ...] :: [(String, String)]\n</code></pre>\n<p>This is surprisingly hard. <a href=\"https://gist.github.com/freckletonj/b1fafa06230c672850ca2248e8b2a625/5dba8366fd9332105069cc83906c1109c55ebf75\" rel=\"nofollow noreferrer\"><strong>original gist</strong></a>.</p>\n<p><a href=\"https://gist.github.com/freckletonj/b1fafa06230c672850ca2248e8b2a625/b50b8c13597fd128ffd712d0d3a932145fcdd8a0\" rel=\"nofollow noreferrer\"><strong>Solution Gist, thanks to Alec below</strong></a></p>\n<pre><code>type FA = &quot;a&quot; :-&gt; String\ntype FB = &quot;b&quot; :-&gt; Int\ntype AB = '[FA, FB]\n\nab :: Rec Identity AB\nab = &quot;A&quot; :*: 1 :*: RNil\n\ntuplify :: (Show a) =&gt; Rec Identity '[a] -&gt; [(String, String)]\ntuplify = recordToList . rmap undefined -- ??????\n-- tuplify ab = [(&quot;a&quot;, &quot;A&quot;), (&quot;b&quot;, &quot;1&quot;)]\n</code></pre>\n<p>If you care to try out what I've done so far, check out that <a href=\"https://gist.github.com/freckletonj/b1fafa06230c672850ca2248e8b2a625/5dba8366fd9332105069cc83906c1109c55ebf75\" rel=\"nofollow noreferrer\">gist</a>, and it has well-thought-out examples and the errors I see:</p>\n<p>Here is the hardware for refying in Composite <a href=\"https://github.com/ConferHealth/composite/blob/f5f396153a95d5b57d1e12ab3afcdc15327aefb6/composite-base/src/Composite/Record.hs#L239\" rel=\"nofollow noreferrer\">(<code>reifyDicts</code>):</a></p>\n<p>And the same for Vinyl <a href=\"https://github.com/VinylRecords/Vinyl/blob/5ccbfb1ba237bb9a865f9dc29a59f69871d88c74/Data/Vinyl/Core.hs#L164\" rel=\"nofollow noreferrer\">(<code>reifyConstraints</code>):</a></p>\n<p>AFAICT, the problem is that in something like <code>rmap</code>:</p>\n<pre><code>rmap :: (forall x. f x -&gt; g x) -&gt; Rec f rs -&gt; Rec g rs\n</code></pre>\n<p>The mapped fn is defined <code>forall x</code>, but my <code>tuplify</code> is constrained, and I think the reification should move the constraint into the type (that's what <code>Dict</code>s are for), but, alas, no luck so far.</p>\n"}]