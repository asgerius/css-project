[{"tags": ["haskell", "types", "functional-programming", "agda", "lambda-calculus"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 3, "creation_date": 1476920520, "post_id": 40143070, "comment_id": 67556380, "body": "Here&#39;s a little rule of thumb for consistency: are there any types which are not inhabited? If every type is inhabited, that&#39;s a pretty sure sign that it&#39;s inconsistent."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 1, "creation_date": 1476920584, "post_id": 40143070, "comment_id": 67556399, "body": "See <a href=\"http://strictlypositive.org/Easy.pdf\" rel=\"nofollow noreferrer\">Simply Easy</a> or <a href=\"https://www.youtube.com/watch?v=AT4JJm_ujRg\" rel=\"nofollow noreferrer\">this series of lectures by Weirich</a> (and <a href=\"https://github.com/sweirich/pi-forall\" rel=\"nofollow noreferrer\">the code</a>) for examples of small dependently-typed systems. I wouldn&#39;t say you&#39;ve implemented a type checker, though (for example, I&#39;d expect <code>typeof (VL x y)</code> to return a pi-type, not another lambda). I recommend <a href=\"https://www.cis.upenn.edu/~bcpierce/tapl/\" rel=\"nofollow noreferrer\">Types and Programming Languages</a> as an intro, I&#39;m half way through it at the moment."}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1476924845, "post_id": 40143070, "comment_id": 67557438, "body": "@DanielWagner how can I know if every type is inhabited? And if I know not every type is inhabited, then is it consistent?"}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1476926590, "post_id": 40143070, "comment_id": 67557809, "body": "@BenjaminHodgson are you sure of that, and, if so, could you elaborate? Notice that on this system &quot;VL&quot; actually stands for both &quot;\u03bb&quot; or &quot;Pi&quot; simultaneously (since they work the same way...). If it isn&#39;t a type checker, then why, for example, the type <code>nat</code> only checks for terms on the form <code>\u03bb (n:*) . \u03bb (s : n -&gt; n) . \u03bb n . s (s (s (s ... x)))</code>? If that isn&#39;t &quot;type checking&quot;, then what exactly defines type checking? That is my confusion. (Note: I&#39;ve read almost half of TAPL but I think it doesn&#39;t really cover those questions...)"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1476935495, "post_id": 40143070, "comment_id": 67559896, "body": "@Viclib You can know every type is inhabited by giving a function which takes a type and produces a term of that type. Often this is quite easy; e.g. usually infinite loops can be given any type. I&#39;m not sure if there is a consistent definition for consistent. Certainly I would squint a little if somebody did the following: 1. Start with Haskell&#39;s type system, which is easily shown inconsistent. 2. Adjoin a fresh type <code>UNINHABITED</code> and make it unreachable by any typing judgment. 3. Claim that this new system is consistent."}, {"owner": {"reputation": 11986, "user_id": 3237465, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/vOArX.png?s=128&g=1", "display_name": "user3237465", "link": "https://stackoverflow.com/users/3237465/user3237465"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1476943281, "post_id": 40143070, "comment_id": 67562442, "body": "@Daniel Wagner, how would you make it unreachable? Since it&#39;s a type, it can be an argument to <code>(-&gt;)</code>, but then <code>boom :: Void -&gt; UNINHABITED; boom = \\case { }</code>. There is an isomorphism between <code>Void</code> and <code>forall a. a</code>, so if you can &quot;inhabit&quot; <code>Void</code>, you can &quot;inhabit&quot; anything."}, {"owner": {"reputation": 11986, "user_id": 3237465, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/vOArX.png?s=128&g=1", "display_name": "user3237465", "link": "https://stackoverflow.com/users/3237465/user3237465"}, "edited": false, "score": 2, "creation_date": 1476943466, "post_id": 40143070, "comment_id": 67562523, "body": "&quot;Notice that on this system &quot;VL&quot; actually stands for both &quot;\u03bb&quot; or &quot;Pi&quot; simultaneously (since they work the same way...)&quot; \u2014 Thorsten Altenkirch: &quot;A function and its type are very different concepts even if they have some superficial syntactic similarity. Especially for the newcomer this identification is very confusing and completely misleading. I do think that one should understand type theoretical concepts from what they mean and not how they look like&quot;."}, {"owner": {"reputation": 11986, "user_id": 3237465, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/vOArX.png?s=128&g=1", "display_name": "user3237465", "link": "https://stackoverflow.com/users/3237465/user3237465"}, "edited": false, "score": 2, "creation_date": 1476943749, "post_id": 40143070, "comment_id": 67562649, "body": "And an immediate witness of Thorsten&#39;s words: you wrote <code>\u2200 (a:*) . (\u03bb (x:a) . a)</code>, but <code>\u03bb (x:a) . a</code> is not a type, so it can&#39;t be an argument to <code>\u2200</code>."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 11986, "user_id": 3237465, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/vOArX.png?s=128&g=1", "display_name": "user3237465", "link": "https://stackoverflow.com/users/3237465/user3237465"}, "edited": false, "score": 0, "creation_date": 1476943804, "post_id": 40143070, "comment_id": 67562681, "body": "@user3237465 <code>UNINHABITED</code> could perfectly well be in a separate syntax class. I don&#39;t see any reason it must be allowed to be an argument to <code>(-&gt;)</code>. Remember: the goal of this system is not to be a good type system, but to be an explicit example of what not to do."}, {"owner": {"reputation": 11986, "user_id": 3237465, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/vOArX.png?s=128&g=1", "display_name": "user3237465", "link": "https://stackoverflow.com/users/3237465/user3237465"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1476943893, "post_id": 40143070, "comment_id": 67562735, "body": "@Daniel Wagner, I&#39;m not sure you can call it &quot;type&quot; then. Though, I&#39;m not sure you can&#39;t."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 11986, "user_id": 3237465, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/vOArX.png?s=128&g=1", "display_name": "user3237465", "link": "https://stackoverflow.com/users/3237465/user3237465"}, "edited": false, "score": 0, "creation_date": 1476943962, "post_id": 40143070, "comment_id": 67562774, "body": "@user3237465 I dare you to stop me. =)"}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 11986, "user_id": 3237465, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/vOArX.png?s=128&g=1", "display_name": "user3237465", "link": "https://stackoverflow.com/users/3237465/user3237465"}, "edited": false, "score": 0, "creation_date": 1476955826, "post_id": 40143070, "comment_id": 67570144, "body": "@user3237465 I&#39;ve read that thread where you took that quote from and also a paper about using just one constructor for both Pi/Lam, seems like that is actually the case on AutoMath and there is nothing fundamentally wrong with it! There is also an old question I asked with a lot of info on that regard. I&#39;m still left wondering if my implementation here is a &quot;good&quot; system (whatever that means), which probably isn&#39;t the case since that paper seems to treat the constructor a little different than I do. This is all very confusing."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1476956943, "post_id": 40143070, "comment_id": 67570987, "body": "I was puzzled at first by <code>check VS b = True</code>, but then realized that since Pi=Lam in this system then <i>every</i> term has type S (among others). I still wonder if that does not break something. It looks weird that when <code>typeof t == E</code> I can still have <code>typeof (A t&#39; t) &#47;= E</code> if <code>t&#39; = \\x:* -&gt; ...</code>"}, {"owner": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "edited": false, "score": 1, "creation_date": 1476957677, "post_id": 40143070, "comment_id": 67571536, "body": "<code>eval (L a b) typ ctx@(vs,ts,d) = VL a&#39; b&#39; where a&#39; = eval a False ctx</code> Isn&#39;t <code>a</code> supposed to be a type there? Shouldn&#39;t the <code>Bool</code>ean flag be <code>True</code> instead of <code>False</code>?"}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "edited": false, "score": 0, "creation_date": 1476959277, "post_id": 40143070, "comment_id": 67572617, "body": "@gallais <a href=\"http://lpaste.net/edit/284624\" rel=\"nofollow noreferrer\">when <b>type checking</b> a Lam</a>, <code>a&#39; = eval vs d a</code>, i.e., the nf value (not the type) of a&#39;. <a href=\"http://lpaste.net/284627\" rel=\"nofollow noreferrer\">When evaluating a Lam or a Pi</a>, the returned binder also has the nf value (not the type) of <code>a&#39;</code>. So both cases need the nf (not type) of a&#39;, thus the flag is False. The only case left is when <b>type checking</b> Pi, which always returns <b>Star</b> (not a binder). This is the only asymmetry here, so this was one of the cases where I asked &quot;OK what if I just forget the &#39;all types have type Star&#39; rule, can the resulting system still be good&#39;?"}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1476959711, "post_id": 40143070, "comment_id": 67572890, "body": "@chi I wonder that too. The fact every type has type S on the usual calculus doesn&#39;t break anything, though, so, should it? Also the fact you can have E inside a valid term is weird too, but E is quite a lazy hack here, it could be removed and just return <code>Either String Term</code> as usual, right."}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 0, "creation_date": 1476960275, "post_id": 40143070, "comment_id": 67573225, "body": "If I understand the type system proposed on &quot;Typed \u03bb-calculi with one binder&quot;, they still have 2 different rules for Pi/\u03bb, disambiguating by checking if the type of <code>a&#39;</code> and <code>b&#39;</code> are <code>Star</code>. So on that system you still have <code>typeof nat == Star</code>, which isn&#39;t the case on this one here. Do we <b>need</b> that <code>typeof nat == Star</code>? Can we make sense of not having all types have type <code>Star</code>?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1476962318, "post_id": 40143070, "comment_id": 67574605, "body": "Also note that the type of <code>loop</code> is <code>(S S)</code>, and I have no intuition about what this should mean. Also, the type of <code>(S S)</code> is... <code>(S S)</code> itself. Further, we have <code>typeof S = S</code> which might trigger Girard&#39;s paradox."}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1476962496, "post_id": 40143070, "comment_id": 67574747, "body": "@chi what if we add box? (What <b>exactly</b> is the type of loop? I can&#39;t type it anymore with this update.)"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1476962896, "post_id": 40143070, "comment_id": 67575044, "body": "I got <code>typeof loop = A S S</code> befure your update. I have no idea about what this type checker actually does, though."}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1476963262, "post_id": 40143070, "comment_id": 67575343, "body": "@chi I added a case for non-function application so that is <code>typeof loop == E</code> now. Maybe I could rephrase the question as: whatever Morte does, doesn&#39;t that system do?"}, {"owner": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "edited": false, "score": 0, "creation_date": 1476963927, "post_id": 40143070, "comment_id": 67575858, "body": "@Viclib Why do you talk about typechecking? Is <code>eval</code> not an evaluation function?"}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "edited": false, "score": 0, "creation_date": 1476965011, "post_id": 40143070, "comment_id": 67576668, "body": "@gallais I mixed both since they&#39;re very similar, so <code>eval False</code> is evaluation, <code>eval True</code> is type-checking... maybe I should use a better name?"}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 1, "creation_date": 1476970972, "post_id": 40143070, "comment_id": 67580891, "body": "@Viclib You seem confused about the difference between pi-types and lambda-terms. They may look syntactically similar (they both bind variables) but they have totally different meanings. For example, a lambda-term can be applied to an argument but a pi-type can&#39;t. Likewise, type-checking (generating and comparing type information) and evaluation (reducing terms) are also very different operations: for example, type-checking can fail (<code>typeCheck :: Term -&gt; Either TypeError Term</code>) whereas evaluation of a well-typed term can&#39;t (<code>eval :: Term -&gt; Term</code>)."}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1476971996, "post_id": 40143070, "comment_id": 67581846, "body": "@BenjaminHodgson I perfectly understand that they are different, but I&#39;m not convinced the difference is natural or merely a fruit of human interpretation. The type checker presented here unifies both while apparently working identically to traditional \u03bb-cube systems for type checking purposes; so, we have two options: either there is some flaw on my system (i.e., it doesn&#39;t make for a good type-checker) or the difference between Pi and Lam is not that relevant when writing an useful type-checker. That is exactly what I&#39;m asking."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1476972256, "post_id": 40143070, "comment_id": 67582046, "body": "@Viclib I understand. But in such a system what&#39;s the meaning of a term like <code>(\u03bb(x:A). x) y</code>? What&#39;s the thing on the left-hand side of the application: is it a lambda-term (which is fine) or a pi-type (which should be a type error)?"}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1476974490, "post_id": 40143070, "comment_id": 67583888, "body": "@BenjaminHodgson but you&#39;re interpreting that system in terms of one which has Pi, which makes no sense, since there is no Pi. This is more or less how this situation feels: <i>&quot;why do I need types?&quot;</i> - <i>&quot;to do X, Y and Z!&quot;</i> - <i>&quot;cool, how I implement them?&quot;</i> - <i>&quot;use Pi and Lam&quot;</i> - <i>&quot;ok, so I just implemented X, Y, Z without Pi... is it a valid type checker?&quot;</i> - <i>&quot;no&quot;</i> - <i>&quot;why?&quot;</i> - <i>&quot;because there is no Pi&quot;</i> - <i>&quot;but this system does X, Y, Z, which is what you told me types are for, so, why do I need Pi?&quot;</i> - <i>&quot;because without Pi, you wouldn&#39;t have Pi!&quot;</i>"}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 1, "creation_date": 1476976943, "post_id": 40143070, "comment_id": 67585847, "body": "I think the reason I am confused by your system is that you haven&#39;t given a clear description of what each term in your syntax means. For example, I expect types (things that can appear on the right hand side of a type annotation) to be things of type <code>*</code>, whereas in your system you can write a lambda in a type annotation, and lambdas have a type of lambda. Perhaps I&#39;d have an easier time understanding you if you tried formally writing down some typing rules?"}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1476978289, "post_id": 40143070, "comment_id": 67586739, "body": "@BenjaminHodgson I don&#39;t know well enough to write anything formally, I just know this system works similar to Morte. Notice on the tests I created types like Nat, Bool, functions on those types, etc. It all <i>works exactly like on Morte</i> (saying that as an engineer, not a scientist). So, <i>&quot;if this system does the same as Morte, with one less constructor, then why do we need that extra constructor?&quot;</i>... I&#39;m expecting someone to explain that <i>&quot;no, this system doesn&#39;t do all that Morte does because X&quot;</i> (and then I learn something)."}, {"owner": {"reputation": 807, "user_id": 4130613, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/830c7c32261bc5af7d8ad59e11ff6e93?s=128&d=identicon&r=PG", "display_name": "Ch0k0l8", "link": "https://stackoverflow.com/users/4130613/ch0k0l8"}, "edited": false, "score": 1, "creation_date": 1476979308, "post_id": 40143070, "comment_id": 67587427, "body": "In order to make sure that simplified version of the type system behaves the same as the original one(by intuition that the original one behaves correctly) you may use Equational Reasoning as a tool to guarantee that the simplified one behaves the same as the original one. What is important is to have extensional equality that checks the result of the expressions in simplified and original versions of the type system."}], "answers": [{"tags": [], "owner": {"reputation": 586, "user_id": 5566407, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/96f6a5bd6884a8436fe3cabf85be2e94?s=128&d=identicon&r=PG&f=1", "display_name": "xuq01", "link": "https://stackoverflow.com/users/5566407/xuq01"}, "is_accepted": false, "score": 1, "last_activity_date": 1526940381, "creation_date": 1526940381, "answer_id": 50457170, "question_id": 40143070, "link": "https://stackoverflow.com/questions/40143070/what-exactly-makes-a-type-system-consistent/50457170#50457170", "title": "What exactly makes a type system consistent?", "body": "<p>First of all, <em>consistency</em> is a thing in mathematical logic, meaning that a logic doesn't contain a contradiction. I've seen people speaking about the \"consistency\" of type theories, but unfortunately it is not a well-defined term.</p>\n\n<p>In the context of lambda calculus, many people use the term \"consistency\" to mean vastly different things. Some people say the untyped lambda-calculus is consistent, by which they mean that different derivations of a lambda-term lead to the same result (i.e. the Church-Rosser property). In that respect, most calculi are consistent.</p>\n\n<p>However, <em>consistent</em> can also mean that the Curry-Howard isomorphic logic of the calculus is consistent. Simply-typed lambda-calculus corresponds to first-order intuitionistic logic (without equality), and when people say STLC is consistent they really mean that first-order intuitionistic logic is consistent. In this sense of consistency, consistency means that the bottom (void) type doesn't have an inhabitant (and, thus, a derivation). That is, every expression must produce a value with a valid type. Bottom corresponds to falsehood, so this means that falsehood can't be derived (because you can derive anything from falsehood).</p>\n\n<p>Now, in this sense, to be consistent you can't have nontermination (<code>fix</code>), non-returning functions, or control operators (<code>call/cc</code> and friends). Haskell is not consistent in this sense, because you can write functions that produce arbitrary types (the function <code>f x = f x</code> has type <code>a -&gt; b</code>; obviously, this isn't consistent). Similarly, you can return <code>undefined</code> from anything, making it producing something of the bottom type. So, to make sure that a type theory is consistent in this sense, you'd have to make sure that you <em>can't return the empty type from any expression</em>.</p>\n\n<p>But then, in the first sense of \"consistency\", Haskell is consistent I believe (barring some wacky features). Equational equivalence should be good.</p>\n"}], "owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 530, "favorite_count": 8, "answer_count": 1, "score": 12, "last_activity_date": 1526940381, "creation_date": 1476919411, "last_edit_date": 1476964941, "question_id": 40143070, "link": "https://stackoverflow.com/questions/40143070/what-exactly-makes-a-type-system-consistent", "title": "What exactly makes a type system consistent?", "body": "<p>I've taken Andr\u00e1s Kov\u00e1cs's <a href=\"https://github.com/AndrasKovacs/tcbe/blob/master/DBIndex.hs\" rel=\"noreferrer\">DBIndex.hs</a>, a very simple implementation of a dependently typed core, and tried simplifying it even further, as much as I possibly could, without \"breaking\" the type system. After several simplifications, I was left with something much smaller:</p>\n\n<pre><code>{-# language LambdaCase, ViewPatterns #-}\n\ndata Term\n  = V !Int\n  | A Term Term\n  | L Term Term\n  | S\n  | E\n  deriving (Eq, Show)\n\ndata VTerm\n  = VV !Int\n  | VA VTerm VTerm\n  | VL VTerm (VTerm -&gt; VTerm)\n  | VS\n  | VE\n\ntype Ctx = ([VTerm], [VTerm], Int)\n\neval :: Bool -&gt; Term -&gt; Term\neval typ term = err (quote 0 (eval term typ ([], [], 0))) where\n\n  eval :: Term -&gt; Bool -&gt; Ctx -&gt; VTerm\n  eval E _ _ = VE\n  eval S _ _ = VS\n  eval (V i) typ ctx@(vs, ts, _) = (if typ then ts else vs) !! i\n  eval (L a b) typ ctx@(vs,ts,d) = VL a' b' where\n    a' = eval a False ctx\n    b' = \\v -&gt; eval b typ (v:vs, a':ts, d+1)\n  eval (A f x) typ ctx = fx where\n    f' = eval f typ ctx\n    x' = eval x False ctx\n    xt = eval x True ctx\n    fx = case f' of\n      (VL a b) -&gt; if check a xt then b x' else VE -- type mismatch\n      VS       -&gt; VE -- non function application\n      f        -&gt; VA f x'\n\n  check :: VTerm -&gt; VTerm -&gt; Bool\n  check VS _ = True\n  check a  b = quote 0 a == quote 0 b\n\n  err :: Term -&gt; Term\n  err term = if ok term then term else E where\n    ok (A a b) = ok a &amp;&amp; ok b\n    ok (L a b) = ok a &amp;&amp; ok b\n    ok E = False\n    ok t = True\n\n  quote :: Int -&gt; VTerm -&gt; Term\n  quote d = \\case\n    VV i    -&gt; V (d - i - 1)\n    VA f x  -&gt; A (quote d f) (quote d x)\n    VL a b  -&gt; L (quote d a) (quote (d + 1) (b (VV d)))\n    VS      -&gt; S\n    VE      -&gt; E\n\nreduce :: Term -&gt; Term\nreduce = eval False\n\ntypeof :: Term -&gt; Term\ntypeof = eval True\n</code></pre>\n\n<p>The problem is that I have no idea what makes a type system consistent, so I had no criteria (other than intuition) and probably broke it in several ways. It, more or less, does what I think a type system should do, though:</p>\n\n<pre><code>main :: IO ()\nmain = do\n  --  id = \u2200 (a:*) . (\u03bb (x:a) . a)\n  let id = L S (L (V 0) (V 0))\n\n  --  nat = \u2200 (a:*) . (a -&gt; a) -&gt; (a -&gt; a)\n  let nat = L S (L (L (V 0) (V 1)) (L (V 1) (V 2)))\n\n  --  succ = \u03bb (n:nat) . \u2200 (a:*) . \u03bb (s : a -&gt; a) . \u03bb (z:a) . s (n a s z)\n  let succ = L nat (L S (L (L (V 0) (V 1)) (L (V 1) (A (V 1) (A (A (A (V 3) (V 2)) (V 1)) (V 0))))))\n\n  --  zero = \u03bb (a:*) . \u03bb (s : a -&gt; a) . \u03bb (z : a) . z\n  let zero = L S (L (L (V 0) (V 1)) (L (V 1) (V 0)))\n\n  --  add = \u03bb (x:nat) . \u03bb (y:nat) . \u03bb (a:*) . \u03bb(s: a -&gt; a) . \u03bb (z : a) . (x a s (y a s z))\n  let add = L nat (L nat (L S (L (L (V 0) (V 1)) (L (V 1) (A (A (A (V 4) (V 2)) (V 1)) (A (A (A (V 3) (V 2)) (V 1)) (V 0)))))))\n\n  --  bool = \u2200 (a:*) . a -&gt; a -&gt; a\n  let bool = L S (L (V 0) (L (V 1) (V 2)))\n\n  --  false = \u2200 (a:*) . \u03bb (x : a) . \u03bb(y : a) . x\n  let false = L S (L (V 0) (L (V 1) (V 0)))\n\n  --  true = \u2200 (a:*) . \u03bb (x : a) . \u03bb(y : a) . y\n  let true = L S (L (V 0) (L (V 1) (V 1)))\n\n  --  loop = ((\u03bb (x:*) . (x x)) (\u03bb (x:*) . (x x)))\n  let loop = A (L S (A (V 0) (V 0))) (L S (A (V 0) (V 0)))\n\n  --  natOrBoolId = \u03bb (a:bool) . \u03bb (t:(if a S then nat else bool)) . \u03bb (x:t) . t\n  let natOrBoolId = L bool (L (A (A (A (V 0) S) nat) bool) (V 0))\n\n  -- nat\n  let c0 = zero\n  let c1 = A succ zero\n  let c2 = A succ c1\n  let c3 = A succ c2\n  let c4 = A succ c3\n  let c5 = A succ c4\n\n  -- Tests\n  let test name pass = putStrLn $ \"- \" ++ (if pass then \"OK.\" else \"ERR\") ++ \" \" ++ name\n\n  putStrLn \"True and false are bools\"\n  test \"typeof true  == bool \" $ typeof true  == bool\n  test \"typeof false == bool \" $ typeof false == bool\n\n  putStrLn \"Calling 'true nat' on two nats selects the first one\"\n  test \"reduce (true nat c1 c2) == c1\"  $ reduce (A (A (A true nat) c1) c2) == reduce c1\n  test \"typeof (true nat c1 c2) == nat\" $ typeof (A (A (A true nat) c1) c2) == nat\n\n  putStrLn \"Calling 'true nat' on a bool is a type error\"\n  test \"reduce (true nat true c2) == E\" $ reduce (A (A (A true nat) true) c2) == E\n  test \"reduce (true nat c2 true) == E\" $ reduce (A (A (A true nat) c2) true) == E\n\n  putStrLn \"More type errors\"\n  test \"reduce (succ true) == E\" $ reduce (A succ true) == E\n\n  putStrLn \"Addition works\"\n  test \"reduce (add c2 c3) == c5\"  $ reduce (A (A add c2) c3) == reduce c5\n  test \"typeof (add c2 c2) == nat\" $ typeof (A (A add c2) c3) == nat\n\n  putStrLn \"Loop isn't typeable\"\n  test \"typeof loop == E\" $ typeof loop == E\n\n  putStrLn \"Function with type that depends on value\"\n  test \"typeof (natOrBoolId true c2) == nat\" $ typeof (A (A natOrBoolId true) c2) == nat\n  test \"typeof (natOrBoolId true true) == E\" $ typeof (A (A natOrBoolId true) true) == E\n  test \"typeof (natOrBoolId false c2) == E\" $ typeof (A (A natOrBoolId false) c2) == E\n  test \"typeof (natOrBoolId false true) == bool\"  $ typeof (A (A natOrBoolId false) true) == bool\n</code></pre>\n\n<p>My question is, <strong>what exactly makes a system consistent?</strong> Specifically:</p>\n\n<ul>\n<li><p>What problems do I get from the things I did (removing Pi, merging infer/eval, etc.)? Can those be somehow \"justified\" (generating a different system but still \"correct\")?</p></li>\n<li><p>Basically: is it possible to fix this system (i.e., make it \"suitable as the core of a dependently typed language just like CoC\") while keeping it small?  </p></li>\n</ul>\n\n<p><a href=\"http://lpaste.net/raw/284828\" rel=\"noreferrer\">Runnable code.</a></p>\n"}, {"tags": ["git", "haskell", "version-control", "haskell-stack"], "comments": [{"owner": {"reputation": 381813, "user_id": 1863229, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/4sh1l.png?s=128&g=1", "display_name": "Tim Biegeleisen", "link": "https://stackoverflow.com/users/1863229/tim-biegeleisen"}, "edited": false, "score": 0, "creation_date": 1476916714, "post_id": 40142605, "comment_id": 67555227, "body": "In general, source code files are what should be getting versioned by Git (or any other VCS tool for that matter)."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 2, "creation_date": 1476916939, "post_id": 40142605, "comment_id": 67555306, "body": "Related (partial duplicate): <a href=\"http://stackoverflow.com/q/31628186/2751851\">Is the stack.yaml file supposed to be checked into version control?</a>"}, {"owner": {"reputation": 6119, "user_id": 165753, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/w6iBN.jpg?s=128&g=1", "display_name": "dimid", "link": "https://stackoverflow.com/users/165753/dimid"}, "reply_to_user": {"reputation": 381813, "user_id": 1863229, "user_type": "registered", "accept_rate": 58, "profile_image": "https://i.stack.imgur.com/4sh1l.png?s=128&g=1", "display_name": "Tim Biegeleisen", "link": "https://stackoverflow.com/users/1863229/tim-biegeleisen"}, "edited": false, "score": 0, "creation_date": 1476916943, "post_id": 40142605, "comment_id": 67555310, "body": "@TimBiegeleisen Right, the <code>src</code> dir should obviously be included, but what about the rest? suxh as <code>stack.yml</code> . E.g. in RoR projects there are non source code files which are also checked in (e.g. <code>Gemfile</code>)."}, {"owner": {"reputation": 6119, "user_id": 165753, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/w6iBN.jpg?s=128&g=1", "display_name": "dimid", "link": "https://stackoverflow.com/users/165753/dimid"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1476917054, "post_id": 40142605, "comment_id": 67555344, "body": "@duplode Thanks, what other files should be checked in?"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 4, "creation_date": 1476917760, "post_id": 40142605, "comment_id": 67555563, "body": "Potential close voters: it is not &quot;primarily opinion-based&quot; to say that if you are using a project management tool such as Stack, whose primary goal is making builds fully reproducible, you are supposed to commit the configuration files necessary to make the builds  reproducible."}], "answers": [{"comments": [{"owner": {"reputation": 6119, "user_id": 165753, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/w6iBN.jpg?s=128&g=1", "display_name": "dimid", "link": "https://stackoverflow.com/users/165753/dimid"}, "edited": false, "score": 0, "creation_date": 1476917353, "post_id": 40142712, "comment_id": 67555446, "body": "Thanks, I guess also <code>src</code>, <code>app</code>, <code>test</code> and <code>Setup.hs</code> ?"}], "tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": true, "score": 8, "last_activity_date": 1476919052, "last_edit_date": 1476919052, "creation_date": 1476917125, "answer_id": 40142712, "question_id": 40142605, "link": "https://stackoverflow.com/questions/40142605/haskell-stack-and-version-control/40142712#40142712", "title": "Haskell stack and version control", "body": "<p>You should check in <code>stack.yaml</code>, <code>your-project-name.cabal</code> and <code>Setup.hs</code>, as they are necessary for building your project in a reproducible way. The <code>src</code>, <code>app</code> and <code>test</code> directories should also be committed, as they in principle are where your source code will live (you can of course rearrange the structure of the default project if you wish to do so). On the other hand, you should ignore the <code>.stack-work</code> directory, as it contains the build output and other volatile pieces of data.</p>\n"}, {"tags": [], "owner": {"reputation": 8576, "user_id": 327074, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/785321440230453d4a2a721f753bd538?s=128&d=identicon&r=PG", "display_name": "icc97", "link": "https://stackoverflow.com/users/327074/icc97"}, "is_accepted": false, "score": 3, "last_activity_date": 1529863373, "last_edit_date": 1529863373, "creation_date": 1529848179, "answer_id": 51010541, "question_id": 40142605, "link": "https://stackoverflow.com/questions/40142605/haskell-stack-and-version-control/51010541#51010541", "title": "Haskell stack and version control", "body": "<p>You can have a look at the recommended <a href=\"https://github.com/github/gitignore/blob/master/Haskell.gitignore\" rel=\"nofollow noreferrer\">Haskell <code>.gitignore</code></a> on GitHub:</p>\n\n<pre><code>dist\ndist-*\ncabal-dev\n*.o\n*.hi\n*.chi\n*.chs.h\n*.dyn_o\n*.dyn_hi\n.hpc\n.hsenv\n.cabal-sandbox/\ncabal.sandbox.config\n*.prof\n*.aux\n*.hp\n*.eventlog\n.stack-work/\ncabal.project.local\ncabal.project.local~\n.HTF/\n.ghc.environment.*\n</code></pre>\n\n<p>If you run the <code>stack new --bare yesod-mysql</code> stack template it includes the following <code>.gitignore</code>:</p>\n\n<pre><code>.stack-work/\nyesod-mysql.cabal\n*~\n</code></pre>\n"}], "owner": {"reputation": 6119, "user_id": 165753, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/w6iBN.jpg?s=128&g=1", "display_name": "dimid", "link": "https://stackoverflow.com/users/165753/dimid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1290, "favorite_count": 0, "accepted_answer_id": 40142712, "answer_count": 2, "score": 9, "last_activity_date": 1529863373, "creation_date": 1476916441, "question_id": 40142605, "link": "https://stackoverflow.com/questions/40142605/haskell-stack-and-version-control", "title": "Haskell stack and version control", "body": "<p>I'm new to Haskell and Stack. When creating a new project using <code>stack new</code> which files should be checked in to git (or any other VCS)? The whole dir?</p>\n"}, {"tags": ["haskell", "haskell-stack", "happstack"], "comments": [{"owner": {"reputation": 41209, "user_id": 485115, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/59693d66b96ca17ca9d2fdb2393e2be3?s=128&d=identicon&r=PG", "display_name": "Nikita Volkov", "link": "https://stackoverflow.com/users/485115/nikita-volkov"}, "edited": false, "score": 2, "creation_date": 1476916023, "post_id": 40141096, "comment_id": 67554981, "body": "Cabal is the standard package manager, which provides a more precise control over the package versions, but requires more effort OTOH. Not everyone uses Stack in the community. I know I don&#39;t."}], "answers": [{"tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 3, "last_activity_date": 1476916384, "last_edit_date": 1476916384, "creation_date": 1476916003, "answer_id": 40142522, "question_id": 40141096, "link": "https://stackoverflow.com/questions/40141096/how-to-deal-with-a-haskell-packages-configured-dependency-range-being-out-of-da/40142522#40142522", "title": "How to deal with a Haskell package&#39;s configured dependency range being out-of-date?", "body": "<p><em>I will initially assume that you are aware of the difference between Hackage and Stackage. If that is not the case, let me know, so that I can explain it in the answer.</em></p>\n\n<p>If you go to the <a href=\"https://www.stackage.org/lts-7.2\" rel=\"nofollow\">Stackage page for LTS 7.2</a>, the resolver/snapshot being used by your global configuration, you will see that the package <em>happstack</em> is not among the packages of that snapshot. Then, if you check the <a href=\"https://hackage.haskell.org/package/happstack-7.0.2\" rel=\"nofollow\">Hackage documentation for the <em>happstack</em> package</a>, you will see a note saying that it was \"deprecated in favor of happstack-server\". That being so, all you have to do is installing <em>happstack-server</em> rather than <em>happstack</em>. (A general advice for such situations is always checking the documentation in Hackage and/or Stackage, as it can give a clearer picture of what is going on, as well as extra information on the package versions and dependencies that might be causing yo trouble.)</p>\n\n<hr>\n\n<p>A few words on the three alternatives you thought of. If you have an old package that only needs trivial changes (say, bumping dependency bounds -- if the changes are more substantial you might be better off looking for an older, compatible snapshot) to be built with a recent Stackage snapshot, approaches #1 and #3 are not only good ideas but explicitly supported by Stack. <a href=\"https://docs.haskellstack.org/en/stable/yaml_configuration/\" rel=\"nofollow\">As explained in the Stack documentation</a> (look for <code>packages</code>, <code>extra-dep</code> and <code>extra-deps</code> options), you can configure your project so that, rather than the default versions in a Stackage snapshot, you use different versions from e.g. Hackage, a local Git repository or a remote Git repository. If you ever need to do #3 to adjust some package, you don't even need to wait for upstream to accept your pull request -- just configure Stack to pull the dependency from your fork in GitHub or elsewhere.</p>\n"}], "owner": {"reputation": 4029, "user_id": 3224967, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/963b108f3bcde98ac96d09b04abbf63f?s=128&d=identicon&r=PG&f=1", "display_name": "mherzl", "link": "https://stackoverflow.com/users/3224967/mherzl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 147, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1476916384, "creation_date": 1476909503, "last_edit_date": 1476912228, "question_id": 40141096, "link": "https://stackoverflow.com/questions/40141096/how-to-deal-with-a-haskell-packages-configured-dependency-range-being-out-of-da", "title": "How to deal with a Haskell package&#39;s configured dependency range being out-of-date?", "body": "<p>When attempting to install happstack via</p>\n\n<pre><code>$ stack install happstack\n</code></pre>\n\n<p>I get the following error:</p>\n\n<pre><code>    Run from outside a project, using implicit global project config\nUsing resolver: lts-7.2 from implicit global project's config file: /Users/matthewherzl/.stack/global-project/stack.yaml\n\nWhile constructing the build plan, the following exceptions were encountered:\n\nIn the dependencies for happstack-7.0.2:\n    happstack-server-7.4.6.2 must match &gt;=7.0 &amp;&amp; &lt;7.4 (latest applicable is 7.3.9)\n\nPlan construction failed.\n</code></pre>\n\n<p>It appears that happstack requires an older-than-most-recent version of happstack-server. How should I deal with this issue?</p>\n\n<hr>\n\n<p>Potential fixes I've considered:</p>\n\n<ol>\n<li>manually change happstack's config on my system, allowing it to depend on the latest version of happstack-config, and assuming that it can.</li>\n<li>installing an older version of happstack-config.</li>\n<li>find happstack source repo, validate that it works with latest version of happstack-config, update config to allow it to depend on most recent version, and submit pull request with config change to happstack's central repo.</li>\n</ol>\n\n<p>I am not sure how to do any of these, #3 in particular sounds challenging.</p>\n"}, {"tags": ["c++", "haskell", "ghc", "ghci", "haskell-stack"], "answers": [{"tags": [], "owner": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "is_accepted": false, "score": 1, "last_activity_date": 1476912101, "creation_date": 1476912101, "answer_id": 40141722, "question_id": 40141042, "link": "https://stackoverflow.com/questions/40141042/trouble-running-stack-ghci-when-calling-c-from-haskell/40141722#40141722", "title": "Trouble running `stack ghci` when calling C++ from Haskell", "body": "<p>The issue turns out that <em>ALL</em> non-pure C code (i.e., strict C++ code) must be surrounded by #ifdefs:</p>\n\n<pre><code>#ifdef __cplusplus //I wasn't surrounding pure C++ code with these headers!\nextern \"C\" {         \n#endif\n\nvoid foo();\n\n#ifdef __cplusplus\n}\n#endif\n</code></pre>\n"}], "owner": {"reputation": 5821, "user_id": 1770201, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/46bcb5d2018194c9beb884b6797e57e0?s=128&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/1770201/george"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 147, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1483464193, "creation_date": 1476909285, "last_edit_date": 1483464193, "question_id": 40141042, "link": "https://stackoverflow.com/questions/40141042/trouble-running-stack-ghci-when-calling-c-from-haskell", "title": "Trouble running `stack ghci` when calling C++ from Haskell", "body": "<p><strong>What I'm trying to do:</strong> I am trying to call C++ (via an <code>extern \"C\" { ... }</code> interface) from Haskell via its FFI. In particular, I have a C++ file <code>three.cpp</code>; inside it is a single externed C++ function that I am trying to access from Haskell (with some other private C++ code in the background).</p>\n\n<p><strong>The Problem:</strong> I can successfully run <code>stack build</code> and <code>stack test</code> and everything works as expected. However, when I run <code>stack ghci</code> I get the following error:</p>\n\n<pre><code>/usr/bin/ld: /home//Dropbox/Sling/.stack-work/dist/x86_64-linux/Cabal-1.24.0.0/build/Sling-exe/Sling-exe-tmp/src/three.o: relocation R_X86_64_32 against `.bss' can not be used when making a shared object; recompile with -fPIC\n/usr/bin/ld: final link failed: Nonrepresentable section on output\ncollect2: error: ld returned 1 exit status\n`gcc' failed in phase `Linker'. (Exit code: 1)\n</code></pre>\n\n<p><strong>Possibly Needed Information:</strong> The relevant portion of my project's <code>.cabal</code> file looks as follows:</p>\n\n<pre><code>executable Sling-exe\n  hs-source-dirs:      app\n  main-is:             Main.hs\n  ghc-options:         -fPIC -threaded -rtsopts -with-rtsopts=-N \n  cc-options:          -fPIC\n  extra-libraries:     stdc++\n  build-depends:       base\n  C-sources:           src/three.cpp\n  Include-dirs:        include\n  Includes:            include/three.h\n  Install-includes:    three.h\n  default-language:    Haskell2010\n</code></pre>\n\n<p>Notice how I tried to include the <code>-fPIC</code> flag, but failed. Any suggestions?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1476908803, "post_id": 40140710, "comment_id": 67551818, "body": "How much of <code>myorder</code> <i>do</i> you understand?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1476908907, "post_id": 40140710, "comment_id": 67551876, "body": "You might compare the output to <code>myorder show id tree1</code> to get a better feel for how the function works."}, {"owner": {"reputation": 17, "user_id": 7044369, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/0ab445262cc43d7c5deb3dff2b467d24?s=128&d=identicon&r=PG", "display_name": "Kono Dio Da", "link": "https://stackoverflow.com/users/7044369/kono-dio-da"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1476910370, "post_id": 40140710, "comment_id": 67552573, "body": "My guess would be is that it order the left side and then the right side and combines them in to a list?"}, {"owner": {"reputation": 17, "user_id": 7044369, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/0ab445262cc43d7c5deb3dff2b467d24?s=128&d=identicon&r=PG", "display_name": "Kono Dio Da", "link": "https://stackoverflow.com/users/7044369/kono-dio-da"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1476910977, "post_id": 40140710, "comment_id": 67552889, "body": "Also, would I look at myorder :: (a -&gt; c) as (1 -&gt; 3) -&gt; (2 -&gt;3) which does the trasversal and results in [1,3,2,2,3]?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1476911573, "post_id": 40140710, "comment_id": 67553181, "body": "No, the lowercase letters refer to types, not values. From the type signature, you can roughly describe the behavior of <code>myorder</code> as the following: the first argument will be applied to leaves, while the second argument will be applied to interior nodes. The results of both functions will be combined into a single list and returned."}, {"owner": {"reputation": 17, "user_id": 7044369, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/0ab445262cc43d7c5deb3dff2b467d24?s=128&d=identicon&r=PG", "display_name": "Kono Dio Da", "link": "https://stackoverflow.com/users/7044369/kono-dio-da"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1476912284, "post_id": 40140710, "comment_id": 67553500, "body": "Oh ok, so Leaf a refers to Int&#39;s in tree1 and Branch b refers to the string or char in tree1. Is x in this case the root of the tree? And what is p and q referring to?"}], "answers": [{"tags": [], "owner": {"reputation": 14485, "user_id": 190376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd8280c5e1491b8cf55760750ed97dec?s=128&d=identicon&r=PG", "display_name": "Reid Barton", "link": "https://stackoverflow.com/users/190376/reid-barton"}, "is_accepted": true, "score": 1, "last_activity_date": 1476915491, "creation_date": 1476915491, "answer_id": 40142428, "question_id": 40140710, "link": "https://stackoverflow.com/questions/40140710/reading-the-code-declarations-and-definitions-in-order-to-get-the-result-of-the/40142428#40142428", "title": "Reading the code declarations and definitions in order to get the result of the expression without using GHCi", "body": "<p>We need to evaluate</p>\n\n<pre><code>myorder id length (Branch \"Hi\"\n                    (Branch \"All\" (Leaf (1::Int)) (Leaf (2::Int)))\n                    (Leaf (3::Int)))\n</code></pre>\n\n<p>Try to apply the equations in order from top to bottom.</p>\n\n<pre><code>myorder p q (Leaf x) = [p x]\n</code></pre>\n\n<p>This equation does not apply since the argument <code>Branch \"Hi\" ... ...</code> is not of the form <code>Leaf x</code>.</p>\n\n<pre><code>myorder p q (Branch x l r) = myorder p q l ++ [q x] ++ myorder p q r\n</code></pre>\n\n<p>This equation does apply. We have <code>p = id</code>, <code>q = length</code>, <code>x = \"Hi\"</code>,</p>\n\n<pre><code>l = Branch \"All\" (Leaf (1::Int)) (Leaf (2::Int)),\nr = Leaf (3::Int).\n</code></pre>\n\n<p>So substituting these in the right hand side, the expression becomes</p>\n\n<pre><code>   myorder id length (Branch \"All\" (Leaf (1::Int)) (Leaf (2::Int)))\n++ [length \"Hi\"]\n++ myorder id length (Leaf (3::Int)).\n</code></pre>\n\n<p>Now continue.</p>\n"}], "owner": {"reputation": 17, "user_id": 7044369, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/0ab445262cc43d7c5deb3dff2b467d24?s=128&d=identicon&r=PG", "display_name": "Kono Dio Da", "link": "https://stackoverflow.com/users/7044369/kono-dio-da"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 40, "favorite_count": 0, "accepted_answer_id": 40142428, "answer_count": 1, "score": 0, "last_activity_date": 1476915491, "creation_date": 1476908049, "question_id": 40140710, "link": "https://stackoverflow.com/questions/40140710/reading-the-code-declarations-and-definitions-in-order-to-get-the-result-of-the", "title": "Reading the code declarations and definitions in order to get the result of the expression without using GHCi", "body": "<pre><code>data Tree a b = Branch b (Tree a b) (Tree a b) | Leaf a\nmyorder :: (a -&gt; c) -&gt; (b -&gt; c) -&gt; Tree a b -&gt; [c]\nmyorder p q (Leaf x) = [p x]\nmyorder p q (Branch x l r) = myorder p q l ++ [q x] ++ myorder p q r\ntree1 = Branch \"Hi\"\n          (Branch \"All\" (Leaf (1::Int)) (Leaf (2::Int)))\n          (Leaf (3::Int)) \n</code></pre>\n\n<p>Question asked: What is the result of the following expression?</p>\n\n<pre><code>&gt; myorder id length tree1\n</code></pre>\n\n<p>I'm studying for an exam, and I want to get a better understanding of getting the outputs without the GHCi, since of course we have to do it by hand, and I really want to see how do I go by doing it. The answer was [1,3,2,2,3]\nIf anyone can guide me through it, that would be great.<br>\nI also drew out the tree1 like so:</p>\n\n<pre><code>     \"Hi\"\n    /   \\\n \"All\"   3\n  / \\\n 1   2 \n</code></pre>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "is_accepted": true, "score": 5, "last_activity_date": 1476907528, "creation_date": 1476907528, "answer_id": 40140565, "question_id": 40140453, "link": "https://stackoverflow.com/questions/40140453/find-indices-of-string-in-list-haskell/40140565#40140565", "title": "Find indices of String in List - Haskell", "body": "<p>I'd use <code>zip</code> and a list comprehension.</p>\n\n<pre><code>indicesOf :: Eq a =&gt; a -&gt; [a] -&gt; [Int]\nindicesOf a as = [i | (b, i) &lt;- zip as [0..], b == a]\n</code></pre>\n\n<p>Zipping with <code>[0..]</code> is a standard way to label every element with an index, and then it's a simple query.</p>\n"}, {"tags": [], "owner": {"reputation": 3603, "user_id": 165806, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/c889e0a95a3bb07f90ab28ad442f1127?s=128&d=identicon&r=PG", "display_name": "Iceland_jack", "link": "https://stackoverflow.com/users/165806/iceland-jack"}, "is_accepted": false, "score": 0, "last_activity_date": 1480506086, "creation_date": 1480506086, "answer_id": 40887476, "question_id": 40140453, "link": "https://stackoverflow.com/questions/40140453/find-indices-of-string-in-list-haskell/40887476#40887476", "title": "Find indices of String in List - Haskell", "body": "<p>The function <a href=\"http://hackage.haskell.org/package/base-4.9.0.0/docs/Data-List.html#v:elemIndices\" rel=\"nofollow noreferrer\"><code>elemIndices</code></a> already exists in <code>Data.List</code></p>\n\n<pre><code>elemIndices :: Eq a =&gt; a -&gt; [a] -&gt; [Int]\n</code></pre>\n\n<p>as</p>\n\n<pre><code>&gt;&gt;&gt; elemIndices \"+\" [\"56\",\"+\",\"49\",\"-\",\"2\",\"+\",\"15\"]\n[1,5]\n</code></pre>\n"}], "owner": {"reputation": 885, "user_id": 3216673, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/a863a5bdeda21c9197cb0c55358834d8?s=128&d=identicon&r=PG&f=1", "display_name": "ketysek", "link": "https://stackoverflow.com/users/3216673/ketysek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 879, "favorite_count": 0, "accepted_answer_id": 40140565, "answer_count": 2, "score": 0, "last_activity_date": 1480506086, "creation_date": 1476907150, "question_id": 40140453, "link": "https://stackoverflow.com/questions/40140453/find-indices-of-string-in-list-haskell", "title": "Find indices of String in List - Haskell", "body": "<p>I've got a following input:</p>\n\n<pre><code>[\"56\", \"+\", \"49\", \"-\", \"2\", \"+\", \"15]\n</code></pre>\n\n<p>So it is a list of Strings and I would like get indices of \"+\" - [1, 5]. How can I achieve it?</p>\n"}, {"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 9772, "user_id": 3963, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9pDQ8.png?s=128&g=1", "display_name": "hao", "link": "https://stackoverflow.com/users/3963/hao"}, "edited": false, "score": 2, "creation_date": 1476903506, "post_id": 40139372, "comment_id": 67548722, "body": "You want (mod m n) or <code>m `mod` n</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1476903540, "post_id": 40139372, "comment_id": 67548744, "body": "That is, <code>m `mod` n</code>."}], "answers": [{"comments": [{"owner": {"reputation": 149, "user_id": 6304666, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/2c0cabb73627f77addcd1cca45659d5c?s=128&d=identicon&r=PG&f=1", "display_name": "Readler", "link": "https://stackoverflow.com/users/6304666/readler"}, "edited": false, "score": 0, "creation_date": 1476904284, "post_id": 40139546, "comment_id": 67549203, "body": "Thanks a lot! Very helpful note about the backticks for infixes!"}, {"owner": {"reputation": 149, "user_id": 6304666, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/2c0cabb73627f77addcd1cca45659d5c?s=128&d=identicon&r=PG&f=1", "display_name": "Readler", "link": "https://stackoverflow.com/users/6304666/readler"}, "edited": false, "score": 0, "creation_date": 1476904302, "post_id": 40139546, "comment_id": 67549217, "body": "(damn, SO inserte"}, {"owner": {"reputation": 149, "user_id": 6304666, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/2c0cabb73627f77addcd1cca45659d5c?s=128&d=identicon&r=PG&f=1", "display_name": "Readler", "link": "https://stackoverflow.com/users/6304666/readler"}, "edited": false, "score": 0, "creation_date": 1476904465, "post_id": 40139546, "comment_id": 67549317, "body": "Damn, really struggling with SO here. Anyway, what I wanted to say is that by doing that a new error pops up saying that the expected type still doesn&#39;t match with the actual type because ggt is applied to too many arguments. I agree that your method with the guard is clearly superior (which, if I understood correctly, basically works like an &quot;if&quot; on itself, right?) as I have implemented, but I&#39;m still curious where my error lies!"}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 1, "last_activity_date": 1476903765, "creation_date": 1476903765, "answer_id": 40139546, "question_id": 40139372, "link": "https://stackoverflow.com/questions/40139372/gcf-in-haskell-with-elses/40139546#40139546", "title": "GCF in Haskell with elses", "body": "<p>Non-operator function names must be enclosed in backticks to be used in infix position. That is,</p>\n\n<pre><code>ggt :: Integer -&gt; Integer -&gt; Integer\nggt m n = if m &lt; n then ggt n m\n          else if n==0 then m \n          else ggt n (m `mod` n)\n</code></pre>\n\n<p>Otherwise, <code>m</code> is treated as the name of a function that takes the <code>mod</code> function as its first argument and <code>n</code> as its second. Such a function would have type <code>(Integer -&gt; Integer -&gt; Integer) -&gt; Integer -&gt; Integer</code>, but <code>m :: Integer</code>, hence the error message.</p>\n\n<p>A cleaner way to define this (nested <code>if</code> expresssions aren't the easiest to read) would involve one simple guard.</p>\n\n<pre><code>ggt :: Integer -&gt; Integer -&gt; Integer\nggt m n | m &lt; n = ggt n m\nggt m 0 = m\nggt m n = ggt n (m `mod` n)\n</code></pre>\n\n<p>or with a more involved guard instead of 3 separate pattern matches:</p>\n\n<pre><code>ggt :: Integer -&gt; Integer -&gt; Integer\nggt m n | m &lt; n     = ggt n m\n        | n == 0    = m\n        | otherwise = ggt n (m `mod` n)\n</code></pre>\n"}], "owner": {"reputation": 149, "user_id": 6304666, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/2c0cabb73627f77addcd1cca45659d5c?s=128&d=identicon&r=PG&f=1", "display_name": "Readler", "link": "https://stackoverflow.com/users/6304666/readler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1478636268, "creation_date": 1476903131, "last_edit_date": 1495540124, "question_id": 40139372, "link": "https://stackoverflow.com/questions/40139372/gcf-in-haskell-with-elses", "title": "GCF in Haskell with elses", "body": "<p>Just started doing Haskell and I was given the task to do a basic GCF function similar to one for calculating a factorial.\nThis is what I came up with</p>\n\n<pre><code>ggt :: Integer -&gt; Integer -&gt; Integer\nggt m n = if m &lt; n then ggt n m\n          else if n==0 then m\n          else ggt n (m mod n)\n</code></pre>\n\n<p>I saw the responses <a href=\"https://stackoverflow.com/questions/7922899/gcf-lcm-in-haskell\">here</a> which, however, did in a completely different way than what I have been shown so far (I think it's called a guard pattern). My problem is that my code won't load and it says</p>\n\n<pre><code> * Couldn't match expected type `(Integer -&gt; Integer -&gt; Integer)\n                                    -&gt; Integer -&gt; Integer'\n                  with actual type `Integer'\n    * The function `m' is applied to two arguments,\n      but its type `Integer' has none\n      In the second argument of `ggt', namely `(m mod n)'\n      In the expression: ggt n (m mod n)\nFailed, modules loaded: none.\n</code></pre>\n\n<p>I don't understand why the types don't match (I have three Integers, two as an input, m and n, and one as a return) and, as a novice, I don't know what the second error really means.</p>\n\n<p>I'd appreciate any and all help as well as all kind of explanations! </p>\n\n<p>Cheers!</p>\n"}, {"tags": ["haskell", "functional-programming", "type-inference", "gadt"], "comments": [{"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "edited": false, "score": 2, "creation_date": 1476894767, "post_id": 40136834, "comment_id": 67543624, "body": "GADTs are special in the sense that the typechecker can actually gain information when you pattern-match on them. Due to the type given to <code>T0</code>, when a pattern-match succeeds on the <code>T0</code> constructor, GHC can be sure that <code>a ~ Bool</code>, which is why the code you\u2019ve written typechecks."}], "answers": [{"comments": [{"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1476897080, "post_id": 40137315, "comment_id": 67544872, "body": "@Bergi Right. Thanks."}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1476898000, "post_id": 40137315, "comment_id": 67545411, "body": "@WillNess Why shouldn&#39;t it? As I&#39;ve explained in my answer, there&#39;s no case where this type signature would lead to wrong results, so there&#39;s no reason to reject it."}], "tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": false, "score": 6, "last_activity_date": 1476897039, "last_edit_date": 1476897039, "creation_date": 1476895917, "answer_id": 40137315, "question_id": 40136834, "link": "https://stackoverflow.com/questions/40136834/adventures-with-types-in-haskell-gadts-why-does-the-following-typechecks/40137315#40137315", "title": "Adventures with Types in Haskell: GADT&#39;s: why does the following typechecks?", "body": "<p>There are two cases in the definition of <code>f</code> and both match your second type signature:</p>\n\n<pre><code>T0 _ -&gt; True\n</code></pre>\n\n<p>Here your argument was of type <code>T Bool</code> and your result is a <code>Bool</code>. So this matches your type signature for <code>a ~ Bool</code>.</p>\n\n<pre><code>T1 -&gt;  y\n</code></pre>\n\n<p>Here your argument was of type <code>T a</code> and your result is <code>y</code>, which is of type <code>a</code>. So this matches the signature for any <code>a</code>.</p>\n\n<p>To understand why this is type safe, just ask yourself the following question: Is there any way that you could call <code>f</code>, such that the result wouldn't match the type signature? Like could you get back anything other than an <code>a</code> if you passed in a <code>T a</code> and a <code>a</code>?</p>\n\n<p>And the answer is: No, there isn't. If you passed in a <code>T0</code> (meaning <code>a</code> is <code>Bool</code>), you'll get back a <code>Bool</code>. If you passed in a <code>T1</code> you'll get back the second argument, which is guaranteed to be of type <code>a</code> as well. If you try to call it like <code>f (T1 :: T Int) \"notAnInt\"</code>, it won't compile because the types don't match. In other words: Any application of the function that matches the type signature will produce the correct result type according to the signature. Therefore <code>f</code> is type safe.</p>\n"}, {"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1476897250, "post_id": 40137377, "comment_id": 67544975, "body": "@WillNess I was using the type suggested by the OP -- edited to make that clear."}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1476897904, "post_id": 40137377, "comment_id": 67545342, "body": "@WillNess It&#39;s not inferred (the inferred type would be <code>T Bool -&gt; Bool -&gt; Bool</code>, I believe), you have to supply the type signature explicitly to get this type."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 0, "creation_date": 1476898856, "post_id": 40137377, "comment_id": 67545901, "body": "@sepp2k yes, thanks. maybe stress this fact in your answer, that the type signature must be supplied explicitly?"}, {"owner": {"reputation": 4593, "user_id": 2289983, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LG4hj.jpg?s=128&g=1", "display_name": "Damian Nadales", "link": "https://stackoverflow.com/users/2289983/damian-nadales"}, "edited": false, "score": 0, "creation_date": 1476903622, "post_id": 40137377, "comment_id": 67548788, "body": "In my code, without an explicit signature it won&#39;t even compile <code>Couldn&#39;t match expected type \u2018t\u2019 with actual type \u2018Bool\u2019</code>."}, {"owner": {"reputation": 2019, "user_id": 5800895, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0cab3b0361b7e54267c70c02754f21de?s=128&d=identicon&r=PG&f=1", "display_name": "Derek Elkins left SE", "link": "https://stackoverflow.com/users/5800895/derek-elkins-left-se"}, "edited": false, "score": 1, "creation_date": 1476906441, "post_id": 40137377, "comment_id": 67550435, "body": "I think it is valuable to note, in the vein of your answer, that <code>T</code> is equivalent to <code>data T a where T0 :: (a ~ Bool) =&gt; a -&gt; T a; T1 :: T a</code>."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 3, "last_activity_date": 1476901666, "last_edit_date": 1476901666, "creation_date": 1476896112, "answer_id": 40137377, "question_id": 40136834, "link": "https://stackoverflow.com/questions/40136834/adventures-with-types-in-haskell-gadts-why-does-the-following-typechecks/40137377#40137377", "title": "Adventures with Types in Haskell: GADT&#39;s: why does the following typechecks?", "body": "<p>Normally, to type check</p>\n\n<pre><code>case e of\n  K1 ... -&gt; e1\n  K2 ... -&gt; e2\n  ...\n</code></pre>\n\n<p>it is required that all the expressions <code>ei</code> share a common type.</p>\n\n<p>This is still true when using GADTs, except that in each branch the constructor provides some type equality equations <code>T ~ T'</code> which are known to hold in that branch. Hence, when checking that all <code>ei</code> share a common type, we no longer require their types to be identical, but only to be equal when the type equations hold.</p>\n\n<p>In particular:</p>\n\n<pre><code>f :: T a -&gt; a -&gt; a\nf x y = -- we know x :: T a , y :: a\n   case x of\n      T0 _ -&gt; -- provides a ~ Bool\n              True   -- has type Bool\n      T1   -&gt; -- provides a ~ a (useless)\n              y      -- has type a\n</code></pre>\n\n<p>Here we need to check <code>Bool ~ a</code> which would be false in general, but here becomes true because we only need to check this under the provided equality <code>a ~ Bool</code>. And, in such case, it becomes true!</p>\n\n<p>(To be honest, the type system does something slightly different, \nchecking instead if both branches are equal to the type declared in the\nsignature (under their known equalities) -- but let me keep it simple. For GADT pattern matching such a signature is always required in some form.)</p>\n\n<p>Note that this is the whole point of GADTs -- they allow to type-check pattern matches whose branches apparently involve different types.</p>\n"}], "owner": {"reputation": 4593, "user_id": 2289983, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LG4hj.jpg?s=128&g=1", "display_name": "Damian Nadales", "link": "https://stackoverflow.com/users/2289983/damian-nadales"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 180, "favorite_count": 2, "accepted_answer_id": 40137377, "answer_count": 2, "score": 4, "last_activity_date": 1476901666, "creation_date": 1476894205, "last_edit_date": 1476894516, "question_id": 40136834, "link": "https://stackoverflow.com/questions/40136834/adventures-with-types-in-haskell-gadts-why-does-the-following-typechecks", "title": "Adventures with Types in Haskell: GADT&#39;s: why does the following typechecks?", "body": "<p>I'm following <a href=\"https://youtu.be/brE_dyedGm0?t=20m15s\" rel=\"nofollow\">this lecture</a> by Simon Peyton-Jones on GADT's. There, the following data-type is declared:</p>\n\n<pre><code>data T a where\n  T0 :: Bool -&gt; T Bool\n  T1 :: T a\n</code></pre>\n\n<p>And then the question that is asked is what is the type of the following function:</p>\n\n<pre><code>f x y = case x of\n          T0 _ -&gt; True\n          T1   -&gt; y\n</code></pre>\n\n<p>To me, it seems the only possible type is:</p>\n\n<pre><code>f :: T a -&gt; Bool -&gt; Bool\n</code></pre>\n\n<p>However, the following type:</p>\n\n<pre><code>f :: T a -&gt; a -&gt; a\n</code></pre>\n\n<p>is also valid! And indeed you could use <code>f</code> as follows:</p>\n\n<pre><code> f (T1) \"hello\"\n</code></pre>\n\n<p>My question is why is the second type signature for <code>f</code> valid?      </p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 974, "user_id": 3829232, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3d2de116df80bc024b799e84dcdbc97?s=128&d=identicon&r=PG", "display_name": "soupi", "link": "https://stackoverflow.com/users/3829232/soupi"}, "edited": false, "score": 0, "creation_date": 1476895089, "post_id": 40136574, "comment_id": 67543789, "body": "Hint: What should the algorithm do when the first list is empty and the second has one element? What should it do when the first list has one element and the second list has two? Which cases have not been covered by the previous two cases and what should the algorithm do in those cases?"}, {"owner": {"reputation": 1, "user_id": 6120165, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/179745b3808824a3c63cc0117d111b9a?s=128&d=identicon&r=PG&f=1", "display_name": "Luk&#225;\u0161 Rychnovsk&#253;", "link": "https://stackoverflow.com/users/6120165/luk%c3%a1%c5%a1-rychnovsk%c3%bd"}, "reply_to_user": {"reputation": 974, "user_id": 3829232, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3d2de116df80bc024b799e84dcdbc97?s=128&d=identicon&r=PG", "display_name": "soupi", "link": "https://stackoverflow.com/users/3829232/soupi"}, "edited": false, "score": 0, "creation_date": 1476895955, "post_id": 40136574, "comment_id": 67544275, "body": "Sounds like a pattern matching. I still have a bit problem to execute the operator in the right place, eg that mod between 5 and 2."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1476896480, "post_id": 40136574, "comment_id": 67544566, "body": "This looks as a nice exercise, but here on SO we usually don&#39;t solve those, since they are too broad. We can help on specific points, though, once you have a reasonable attempt."}, {"owner": {"reputation": 1, "user_id": 6120165, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/179745b3808824a3c63cc0117d111b9a?s=128&d=identicon&r=PG&f=1", "display_name": "Luk&#225;\u0161 Rychnovsk&#253;", "link": "https://stackoverflow.com/users/6120165/luk%c3%a1%c5%a1-rychnovsk%c3%bd"}, "edited": false, "score": 0, "creation_date": 1476896817, "post_id": 40136574, "comment_id": 67544740, "body": "I was supposed to convert string of numbers and operations to a result, eg. &quot;3 + 5 * 44&quot; as an input and 223 as an output. This is where I got stuck, but mayby I took a bad road."}, {"owner": {"reputation": 34889, "user_id": 86604, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/329af917389e6cf8e146c03012f5319a?s=128&d=identicon&r=PG", "display_name": "Ingo", "link": "https://stackoverflow.com/users/86604/ingo"}, "edited": false, "score": 0, "creation_date": 1476901781, "post_id": 40136574, "comment_id": 67547715, "body": "Most certainly did you take a bad road. Your data structure is not very well suited for your task. It would be better to have a tree-like structure that represents arithmetic expressions better."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1476901805, "post_id": 40136574, "comment_id": 67547739, "body": "The real question should be &quot;how do I parse a string expression like <code>3 + 5 * 44</code> into a tree like <code>Node + (Leaf 3) (Node * (Leaf 5) (Leaf 44))</code>; such a tree is almost trivially evaluated, once the hard work of parsing the original string is done."}, {"owner": {"reputation": 1, "user_id": 6120165, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/179745b3808824a3c63cc0117d111b9a?s=128&d=identicon&r=PG&f=1", "display_name": "Luk&#225;\u0161 Rychnovsk&#253;", "link": "https://stackoverflow.com/users/6120165/luk%c3%a1%c5%a1-rychnovsk%c3%bd"}, "edited": false, "score": 0, "creation_date": 1476902435, "post_id": 40136574, "comment_id": 67548128, "body": "Thanks a lot guys, now i have it (the tree way). It&#39;s sometimes difficult for me to take the right approach to the situation."}], "owner": {"reputation": 1, "user_id": 6120165, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/179745b3808824a3c63cc0117d111b9a?s=128&d=identicon&r=PG&f=1", "display_name": "Luk&#225;\u0161 Rychnovsk&#253;", "link": "https://stackoverflow.com/users/6120165/luk%c3%a1%c5%a1-rychnovsk%c3%bd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 57, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1476894156, "creation_date": 1476893304, "last_edit_date": 1476894156, "question_id": 40136574, "link": "https://stackoverflow.com/questions/40136574/working-with-int-field-and-operations", "title": "Working with Int field and operations", "body": "<p>I have an expression of type <code>([(Int,Int-&gt;Int-&gt;Int)],[Int])</code>, where first <code>Int</code> in <code>(Int,Int-&gt;Int-&gt;Int)</code> is priority of the operation. So it may look like this: <code>([(0,+),(1,mod),(2,^)],[16,5,2,3])</code> and expresses <code>16 + 5 mod 2 ^ 3</code>. The priority of those operations is the same as in Haskell. Is there even a way forward to compute the expression?</p>\n"}, {"tags": ["haskell", "functional-programming", "monads", "applicative"], "comments": [{"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1476884843, "post_id": 40131562, "comment_id": 67536254, "body": "Have a look at <a href=\"http://stackoverflow.com/q/40026018/1048572\">this example</a> for a useful application of <code>bind</code> (known as <code>chain</code> in JS)"}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user6445533"}, "edited": false, "score": 0, "creation_date": 1476883846, "post_id": 40132248, "comment_id": 67535492, "body": "Thanks, it is so obvious now! When I try to transfer Haskell idioms to Javascript I often face the same problem: A lot of knowledge about Haskell idioms is hidden in their application, not just in their implementations or type signatures."}, {"owner": {"user_type": "does_not_exist", "display_name": "user6445533"}, "edited": false, "score": 0, "creation_date": 1478537080, "post_id": 40132248, "comment_id": 68184797, "body": "Now the next computation depends on the previous result, but it totally ignores this result. Is this the way <code>bind</code> usually works or just specific to your example? Sorry for all the questions!"}, {"owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 0, "creation_date": 1478537319, "post_id": 40132248, "comment_id": 68184953, "body": "@ftor - Sorry, the answer was wrong and your edit was the wrong fix. <code>bind</code> only uses <code>f(x)</code> to choose the next function but supplies the original input to it."}], "tags": [], "owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "is_accepted": true, "score": 4, "last_activity_date": 1478536404, "last_edit_date": 1478536404, "creation_date": 1476882294, "answer_id": 40132248, "question_id": 40131562, "link": "https://stackoverflow.com/questions/40131562/how-to-interpret-bind-of-the-function-instance/40132248#40132248", "title": "How to interpret bind/&gt;&gt;= of the function instance?", "body": "<p>The values in the monad instance for functions have type <code>r -&gt; a</code> for some fixed type <code>r</code>. The function <code>(a -&gt; (r -&gt; b))</code> given to <code>(&gt;&gt;=)</code> allows you to choose the next function to return given the result from the current value (a function <code>r -&gt; a</code>). <code>f r</code> has type <code>a</code> and <code>k (f r)</code> has type <code>r -&gt; b</code> which is the next function to apply.</p>\n\n<p>In your code <code>g(f(x))</code> is therefore a function which expects a single argument of type <code>r</code>. The caller of <code>bind</code> can choose this function based on the value returned by the previous function e.g.</p>\n\n<pre><code>var inc = x =&gt; x + 1;\nvar f = bind(inc)(function(i) {\n   if(i &lt;= 5) { return x =&gt; x * 2; }\n   else { return x =&gt; x * 3; }\n});\n</code></pre>\n\n<p>The function will be given <code>x</code> as an input and can choose the next stage in the computation based on the result of <code>inc(x)</code> e.g.</p>\n\n<pre><code>f(2) //4;\nf(5) //15;\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1476895301, "post_id": 40136614, "comment_id": 67543909, "body": "@ftor You&#39;re welcome. Looking again at my answer, I noticed that I had overlooked a significant mix-up by reading your question too quickly. You said that the difference between <code>Monad</code> and <code>Applicative</code> is that with <code>Monad</code> you can determine &quot;a next effect according to a previous one&quot;. <code>Applicative</code> already allows that, though. What <code>Monad</code> adds is determining effects from previous <i>results</i> (i.e. the underlying values in the functor, corresponding to the <code>a</code> in <code>Monad a =&gt; a -&gt; m b</code>)."}], "tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 6, "last_activity_date": 1521685942, "last_edit_date": 1521685942, "creation_date": 1476893442, "answer_id": 40136614, "question_id": 40131562, "link": "https://stackoverflow.com/questions/40131562/how-to-interpret-bind-of-the-function-instance/40136614#40136614", "title": "How to interpret bind/&gt;&gt;= of the function instance?", "body": "<p>A few footnotes to <a href=\"https://stackoverflow.com/a/40132248/2751851\">Lee's answer</a>:</p>\n\n<blockquote>\n  <p>However, the <code>bind</code> function looks pretty weird. Why are <code>f</code> and <code>g</code>\n  nested the other way around?</p>\n</blockquote>\n\n<p>Because <code>bind</code> is backwards. Compare <code>(&gt;&gt;=)</code> and its flipped version <code>(=&lt;&lt;)</code>:</p>\n\n<pre><code>(&gt;&gt;=) :: Monad m =&gt; m a -&gt; (a -&gt; m b) -&gt; m b\n(=&lt;&lt;) :: Monad m =&gt; (a -&gt; m b) -&gt; m a -&gt; m b\n</code></pre>\n\n<p>Or, in your specific example:</p>\n\n<pre><code>(&gt;&gt;=) :: (r -&gt; a) -&gt; (a -&gt; (r -&gt; b)) -&gt; (r -&gt; b)\n(=&lt;&lt;) :: (a -&gt; (r -&gt; b)) -&gt; (r -&gt; a) -&gt; (r -&gt; b)\n</code></pre>\n\n<p>While in practice we tend to use <code>(&gt;&gt;=)</code> more often than <code>(=&lt;&lt;)</code> (because of how <code>(&gt;&gt;=)</code>, syntactically speaking, lends itself well to the kind of pipeline monads are often used to build), from a theoretical point of view <code>(=&lt;&lt;)</code> is the most natural way of writing it. In particular, the parallels and differences with <code>fmap</code>/<code>(&lt;$&gt;)</code> and <code>(&lt;*&gt;)</code> are much more obvious:</p>\n\n<pre><code>(&lt;$&gt;) :: Functor f     =&gt;   (a -&gt; b) -&gt; f a -&gt; f b\n(&lt;*&gt;) :: Applicative f =&gt; f (a -&gt; b) -&gt; f a -&gt; f b\n(=&lt;&lt;) :: Monad f       =&gt; (a -&gt; f b) -&gt; f a -&gt; f b\n</code></pre>\n\n<blockquote>\n  <p>When I apply <code>apply</code>/<code>bind</code> with an unary and a binary function, they yield the same result. This doesn't make much sense.</p>\n</blockquote>\n\n<p>That is an accidental fact about the function instances. Let's put the specialised signatures side by side:</p>\n\n<pre><code>(&lt;*&gt;) :: (r -&gt; (a -&gt; b)) -&gt; (r -&gt; a) -&gt; (r -&gt; b)\n(=&lt;&lt;) :: (a -&gt; (r -&gt; b)) -&gt; (r -&gt; a) -&gt; (r -&gt; b)\n</code></pre>\n\n<p><code>Monad</code> goes beyond <code>Applicative</code> by providing the means to determine the next effect according to previous <em>results</em> (as opposed to \"previous effect\" -- <code>Applicative</code> can do that already). The effect, in this case, consists of a function that generates values given an argument of type <code>r</code>. Now, since functions with multiple arguments (i.e. functions that return functions) can be flipped, it happens that there is no significant difference between <code>(r -&gt; (a -&gt; b))</code> and <code>(a -&gt; (r -&gt; b))</code> (<code>flip</code> can trivially change one into the other), which makes the <code>Monad</code> instance for <code>(-&gt;) r</code> entirely equivalent to the <code>Applicative</code> one.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user6445533"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 296, "favorite_count": 1, "accepted_answer_id": 40132248, "answer_count": 2, "score": 9, "last_activity_date": 1521685942, "creation_date": 1476880501, "question_id": 40131562, "link": "https://stackoverflow.com/questions/40131562/how-to-interpret-bind-of-the-function-instance", "title": "How to interpret bind/&gt;&gt;= of the function instance?", "body": "<p>I'm trying to improve my understanding of <code>Applicative</code>s and <code>Monad</code>s by implementing their function instances in Javascript. My knowledge of Haskell is limited and I hope that my question makes sense at all.</p>\n\n<p>Here are my implementations of <code>fmap</code>, <code>&lt;*&gt;</code> and <code>&gt;&gt;=</code> for the <code>Functor</code>, <code>Applicative</code> and <code>Monad</code> typeclasses in Javascript:</p>\n\n<pre><code>const fmap = f =&gt; g =&gt; x =&gt; f(g(x)); // B combinator\nconst apply = f =&gt; g =&gt; x =&gt; f(x) (g(x)); // S combinator\nconst bind = f =&gt; g =&gt; x =&gt; g(f(x)) (x); // ?\n</code></pre>\n\n<p>I am not sure whether <code>bind</code> is the correct translation of the Haskell implementation:</p>\n\n<pre><code>(&gt;&gt;=)  :: (r -&gt; a) -&gt; (a -&gt; (r -&gt; b)) -&gt; r -&gt; b\n\ninstance Monad ((-&gt;) r) where\nf &gt;&gt;= k = \\ r -&gt; k (f r) r\n</code></pre>\n\n<p>Provided that <code>bind</code> is correct, how is it interpreted? I know that an <code>Applicative</code> can sequence effectful computations. I also know that a <code>Monad</code> in addition allows you to determine a next effect according to the result of a previous one.</p>\n\n<p>I can see the sequences (eager evaluation order in Javascript):</p>\n\n<ul>\n<li><code>apply</code>: <code>f(x)</code> ... <code>g(x)</code> ...  <code>lambda(result of g)</code> ... result of <code>lambda</code></li>\n<li><code>bind</code>: <code>f(x)</code> ... <code>g(result of f)</code> ... <code>lambda(x)</code> ... result of <code>lambda</code></li>\n</ul>\n\n<p>However, the <code>bind</code> function looks pretty weird. Why are <code>f</code> and <code>g</code> nested the other way around? How is the specific <code>Monad</code> behavior (determines a next effect according to a previous one) reflected in this implementation? Actually <code>g(f(x)) (x)</code> looks like a function composition with flipped arguments, where <code>g</code> is a binary function.</p>\n\n<p>When I apply <code>apply</code>/<code>bind</code> with an unary and a binary function, they yield the same result. This doesn't make much sense.</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 9772, "user_id": 3963, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9pDQ8.png?s=128&g=1", "display_name": "hao", "link": "https://stackoverflow.com/users/3963/hao"}, "is_accepted": true, "score": 20, "last_activity_date": 1476903394, "creation_date": 1476903394, "answer_id": 40139436, "question_id": 40131384, "link": "https://stackoverflow.com/questions/40131384/what-is-different-among-hlint-hdevtools-and-ghc-mod/40139436#40139436", "title": "What is different among hlint, hdevtools and ghc-mod", "body": "<p><code>ghc-mod</code> installs a binary named <code>ghc-mod</code> to your <code>$PATH</code> which is able to load and interrogate your package database and source code (there is also an \"interactive\" version called <code>ghc-modi</code> that reads in commands from standard in and sticks around). It uses the GHC and Cabal APIs to do so. Progress stalled for a while but has now returned to a bustling state. There are Emacs/Vim/Sublime packages that know how to talk to <code>ghc-mod</code> and provide various IDE-like features for end-users: typechecking, holes, program/proof search, find-definition.</p>\n\n<p><code>hdevtools</code> is a newer project, inspired by <code>ghc-mod</code>. It is architecturally similar \u2013 running a persistent background server with per-editor packages.  It is designed to completely replace <code>ghc-mod</code>. The differences between <code>ghc-mod</code> and <code>hdevtools</code> seem to be philosophical. <code>hdevtools</code> has fewer of the fancy ghc-mod features but is (in my experience) substantially faster. Something that struck out from a cursory glance at the code bases: <code>hdevtools</code> seems to rely on the GHC API to implement a GHCi-like server, capable of quickly reloading code. Perhaps that was the key decision to getting good performance? I am sure I am grossly oversimplifying.</p>\n\n<p><code>hlint</code> is very different. It is an old old project (started in 2006 by Neil Mitchell, one of the Haskell community elders). It is able to detect typical bad Haskell habits (e.g. using <code>concat . map</code> instead of <code>concatMap</code>) and, in some cases, lightly refactor them away. It relies on the <code>haskell-src-exts</code> which parses Haskell code into ASTs. I believe <code>hlint</code> does not even require a full type-check of the code base: it can look at the abstract syntax tree alone to suggest changes and sound alerts. You would typically choose either <code>ghc-mod</code> or <code>hdevtools</code> and use them in <em>conjunction</em> with <code>hlint</code> to get the full Haskell IDE experience.</p>\n\n<p>We should take the time here to also mention FP Complete's <code>intero</code> project, which runs ghci and is similar to <code>hdevtools</code>. It only works if your editor is Emacs and you are using stack, however. I was unable to find good documentation on how it differs from <code>ghc-mod</code> or <code>hdevtools</code>; one presumes it was intended to give Emacs users a better experience, as you can often get into the situation where <code>hdevtools</code>/<code>ghc-mod</code> will stubbornly refuse to run because of a compiler or an editor package mismatch. With <code>intero</code> you can get up and running with a small snippet of Elisp.</p>\n\n<p>It's a big old mess!</p>\n"}], "owner": {"reputation": 2141, "user_id": 1664572, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c2bee27fdb72050b60a3c6aae64b474f?s=128&d=identicon&r=PG", "display_name": "wizzup", "link": "https://stackoverflow.com/users/1664572/wizzup"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2141, "favorite_count": 2, "accepted_answer_id": 40139436, "answer_count": 1, "score": 11, "last_activity_date": 1476903394, "creation_date": 1476880018, "question_id": 40131384, "link": "https://stackoverflow.com/questions/40131384/what-is-different-among-hlint-hdevtools-and-ghc-mod", "title": "What is different among hlint, hdevtools and ghc-mod", "body": "<p>I am looking for code lint, type query, auto type-insert and misc helper to use with vim (like autocomplete). </p>\n\n<p>After some research I found multiple similar tools that migth do what I want</p>\n\n<ul>\n<li>hlint </li>\n<li>hdevtools </li>\n<li>ghc-mod </li>\n</ul>\n\n<p><strong>The main question,</strong> Are these all basically the same tool?</p>\n\n<p>When I do some testing I found that only ghc-mod is working out-of-the-box (for code lint, havn't try any Type-helper function)</p>\n\n<pre><code>$ cat test.hs \nmain = putStrLn \"test\"\n$ ghc-mod check test.hs \ntest.hs:1:1:Warning: Top-level binding with no type signature: main :: IO ()\n$ hdevtools check test.hs \nRun from outside a project, using implicit global project config\n$ hlint test.hs \nNo hints\n</code></pre>\n\n<p>Do I need to make any configuration file for hlint and hdevtools?</p>\n\n<pre><code>$ hdevtools --version\nhdevtools: version 0.1.4.1 (ghc-8.0.1-x86_64-linux, cabal-1.24.0.0)\n$ hlint --version\nHLint v1.9.35, (C) Neil Mitchell 2006-2016\n$ ghc-mod --version\nghc-mod version 5.6.0.0 compiled by GHC 8.0.1\n$ ghc --version\nThe Glorious Glasgow Haskell Compilation System, version 8.0.1\n</code></pre>\n\n<p>All tools was installed by <code>stack install</code> and I have <code>/home/wizzup/.local/bin</code> in <code>$PATH</code></p>\n"}, {"tags": ["haskell", "declarative"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 3, "creation_date": 1476892831, "post_id": 40130014, "comment_id": 67542454, "body": "For what it&#39;s worth, I&#39;ve always found the &quot;imperative&quot;/&quot;declarative&quot; distinction a bit artificial, as well. There are other descriptors that I&#39;ve found much more objective: Haskell is pure, lazy, and strongly statically typed, and each one of those is an important pillar in my opinion."}, {"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1476894710, "post_id": 40130014, "comment_id": 67543595, "body": "After I understood the thread titled term I think I&#39;ll lean back and keep thinking the same...but first I need clearance! :P"}, {"owner": {"reputation": 24103, "user_id": 506441, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/GQFUj.jpg?s=128&g=1", "display_name": "Daniel T.", "link": "https://stackoverflow.com/users/506441/daniel-t"}, "edited": false, "score": 0, "creation_date": 1496027956, "post_id": 40130014, "comment_id": 75478061, "body": "Here is an article I wrote that might give you a better sense of what it means for code to be declarative. The TL;DR is that declarative code does not describe steps in a process, it makes invariants, guarantees, or declaration of truth. <a href=\"https://medium.com/@danielt1263/imperative-vs-declarative-programming-a74f6cceff0e\" rel=\"nofollow noreferrer\">medium.com/@danielt1263/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 0, "creation_date": 1476877932, "post_id": 40130239, "comment_id": 67531073, "body": "so you could say that its just like another function that returns either &quot;this&quot; or &quot;that&quot;. Can you maybe add an example how it would look if it would leave the declarative paradigm? I&#39;m ok with pseudo code here. Would be great to see what Haskell should fictionally allow if this example should go imperative."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "reply_to_user": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 1, "creation_date": 1476879602, "post_id": 40130239, "comment_id": 67532292, "body": "@xetra11 Yes, <code>if</code> totally could have been a function with 3 parameters, it wouldn&#39;t make a difference."}, {"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 1, "creation_date": 1476881729, "post_id": 40130239, "comment_id": 67533915, "body": "@chepner is this last example with the matching pattern really imperative? since it&#39;s an expression :|"}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 8, "last_activity_date": 1476880255, "last_edit_date": 1476880255, "creation_date": 1476876678, "answer_id": 40130239, "question_id": 40130014, "link": "https://stackoverflow.com/questions/40130014/why-is-haskell-fully-declarative/40130239#40130239", "title": "Why is Haskell fully declarative?", "body": "<p>There is no <code>if</code> statement in Haskell, only an <code>if</code> <em>expression</em> <code>if a then b else c</code>, which is really equivalent to ternary expressions like <code>a ? b : c</code> in C-like languages or <code>b if a else c</code> in Python. You cannot leave out the <code>else</code>, and it can be used anywhere an arbitrary expression can be used. It is further constrained that <code>a</code> must have type <code>Boolean</code>, and <code>b</code> and <code>c</code> must have the same type. It is syntactic sugar for</p>\n\n<pre><code>case a of\n  True -&gt; b\n  False -&gt; c\n</code></pre>\n\n<hr>\n\n<p>Don't get too hung up on the label \"declarative\"; it's just a <em>style</em> of programming that the language supports. Consider, for example, a typical declarative definition of the factorial function:</p>\n\n<pre><code>fact 0 = 1\nfact n = n * fact (n - 1)\n</code></pre>\n\n<p>This is also just syntactic sugar for something you would see as more imperative:</p>\n\n<pre><code>fact n = case n of \n          0 -&gt; 1\n          otherwise -&gt; n * fact (n - 1)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 0, "creation_date": 1476878346, "post_id": 40130664, "comment_id": 67531378, "body": "So a monad is a haskell language feature that actually ends the declarative way to the imperative?"}, {"owner": {"reputation": 2863, "user_id": 2297560, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/948d4a17494b3c616a0873453b74670c?s=128&d=identicon&r=PG", "display_name": "user2297560", "link": "https://stackoverflow.com/users/2297560/user2297560"}, "reply_to_user": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 1, "creation_date": 1476878840, "post_id": 40130664, "comment_id": 67531731, "body": "@xetra11 monad is a mathematical concept that can describe sequential processes. In Haskell, it&#39;s just a type class that happens to have some language support in the form of syntactic sugar (do notation)."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 3, "creation_date": 1476890799, "post_id": 40130664, "comment_id": 67541094, "body": "@xetra11 While &quot;ends&quot; is too strong a word -- after all <code>Monad</code> is just another type class, as user2297560 reminds us -- we might say that monads <i>can</i> be used to express imperativeness in a declarative way. The imperativeness, though, is arguably more in our heads than in the actual code, as chepner&#39;s answer emphasises."}], "tags": [], "owner": {"reputation": 2863, "user_id": 2297560, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/948d4a17494b3c616a0873453b74670c?s=128&d=identicon&r=PG", "display_name": "user2297560", "link": "https://stackoverflow.com/users/2297560/user2297560"}, "is_accepted": true, "score": 9, "last_activity_date": 1476877869, "creation_date": 1476877869, "answer_id": 40130664, "question_id": 40130014, "link": "https://stackoverflow.com/questions/40130014/why-is-haskell-fully-declarative/40130664#40130664", "title": "Why is Haskell fully declarative?", "body": "<p>Perhaps this is a matter of perspective. The way I see it, there is nothing imperative about defining things in terms of other things because we can always replace something with its definition (as long as the definition is pure). That is, if we have <code>f x = x + 1</code>, then any place we see <code>f z</code> we can replace with <code>z + 1</code>. So pure functions shouldn't really be considered instructions; they should be considered definitions.</p>\n\n<p>A lot of Haskell code is considered declarative for this reason. We simply define things as (pure) functions of other things. </p>\n\n<p>It is possible to write imperative-style code in Haskell as well. Sometimes we really do want to say something like \"do A, then do B, then do C\". This adds a new dimension to the simple world of function application: we need a notion of 'happens before'. Haskell has embraced the Monad concept to describe computations that have an order of evaluation. This turns out to be very handy because it can encapsulate effects such as changing state.</p>\n"}, {"comments": [{"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 0, "creation_date": 1476884165, "post_id": 40132517, "comment_id": 67535740, "body": "so when using statements whichs core semantic is the <i>effect</i> of a <i>preState</i> to a <i>postState</i> I&#39;m moving in a imperative situation? Whilst using expressions is the declarative way since I&#39;m able to actually declare the result by myself without the need to call the function (<code>fun x = x + 1</code> would be the same as using <i>1</i> as the resource and just declaring it as <code>2</code> since this would be the same expression result as when using the pure function mentioned before)"}, {"owner": {"reputation": 13362, "user_id": 260584, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63f9744d1d903eef5f9954fa31d25a26?s=128&d=identicon&r=PG", "display_name": "erisco", "link": "https://stackoverflow.com/users/260584/erisco"}, "reply_to_user": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 1, "creation_date": 1476914025, "post_id": 40132517, "comment_id": 67554238, "body": "It is declarative if it is an expression. <code>1 + 1</code>, <code>fun 1</code>, and <code>2</code> are all expressions for the integer 2. As others point out, there are various uses of &quot;declarative&quot; and &quot;imperative&quot;; my objective is to offer a use which has precise meaning. There are other qualities expressions may have. If an expression E is composed of sub-expression M, and if any expression N which denotes the same value as M may be substituted for M without changing the meaning of E,  then N is <i>referentially transparent</i> in E. In other words, it matters <i>what you say</i> rather than <i>how you say it</i>."}, {"owner": {"reputation": 13362, "user_id": 260584, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63f9744d1d903eef5f9954fa31d25a26?s=128&d=identicon&r=PG", "display_name": "erisco", "link": "https://stackoverflow.com/users/260584/erisco"}, "reply_to_user": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 1, "creation_date": 1477377727, "post_id": 40132517, "comment_id": 67728510, "body": "I wish down-voting required the person to leave a comment."}], "tags": [], "owner": {"reputation": 13362, "user_id": 260584, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63f9744d1d903eef5f9954fa31d25a26?s=128&d=identicon&r=PG", "display_name": "erisco", "link": "https://stackoverflow.com/users/260584/erisco"}, "is_accepted": false, "score": 3, "last_activity_date": 1476883034, "creation_date": 1476883034, "answer_id": 40132517, "question_id": 40130014, "link": "https://stackoverflow.com/questions/40130014/why-is-haskell-fully-declarative/40132517#40132517", "title": "Why is Haskell fully declarative?", "body": "<p>Declarative languages are constructed from expressions whereas imperative languages are constructed from statements.</p>\n\n<p>The usual explanation is <em>what to do</em> versus <em>how to do it</em>. You've already found the confusion in this. If you take it this way, declarative is using definitions (by name) and imperative is writing definitions. What is a <em>declarative language</em> then? One which only names definitions? If so then the only Haskell program you could write is precisely <code>main</code>!</p>\n\n<p>There is a declarative way and an imperative way to have branching, and it follows directly from the definition. A declarative branch is an expression and an imperative branch is a statement. Haskell has <code>case \u2026 of \u2026</code> (an expression) and C has <code>if (\u2026) {\u2026} else {\u2026}</code> (a statement).</p>\n\n<p>What is the difference between expressions and statements? Expressions have a value whereas statements have effects. What is the difference between values and effects?</p>\n\n<p>For expressions, there is a function <code>\u03bc</code> which maps any expression <code>e</code> to its value <code>\u03bc(e)</code>. This is also called the <em>semantic</em>, or <em>meaning</em>, and is ideally a well-defined mathematical object. This way of defining values is called <em>denotational semantics</em>. There are other methods.</p>\n\n<p>For statements, there is a state P immediately before a statement S and a state Q immediately after. The effect of S is the delta from P to Q. This way of defining effects is called <em>Hoare logic</em>. There are other methods.</p>\n"}, {"comments": [{"owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "edited": false, "score": 0, "creation_date": 1476884409, "post_id": 40133004, "comment_id": 67535901, "body": "yea I found myself digging to deep and I think I won&#39;t be fully satisfied"}], "tags": [], "owner": {"reputation": 2915, "user_id": 1295154, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9687b362fd1d4754033efc0b19001e81?s=128&d=identicon&r=PG", "display_name": "Dominique Devriese", "link": "https://stackoverflow.com/users/1295154/dominique-devriese"}, "is_accepted": false, "score": 5, "last_activity_date": 1476884459, "last_edit_date": 1476884459, "creation_date": 1476884285, "answer_id": 40133004, "question_id": 40130014, "link": "https://stackoverflow.com/questions/40130014/why-is-haskell-fully-declarative/40133004#40133004", "title": "Why is Haskell fully declarative?", "body": "<p>Frankly, the term \"declarative programming\" is more of a marketing term than anything else.  The informal definition that it means \"specifying what to do, not how to do it\" is vague and open to interpretation and definitely far from a black-and-white boundary.  In practice, it seems to be applied to anything that broadly falls into the categories of functional programming, logic programming or the use of Domain-Specific Languages (DSLs). </p>\n\n<p>Consequently (and I realise this probably doesn't qualify as an answer to your question, but still :)), I recommend you do not waste your time wondering whether something is still declarative or not. The terms imperative vs. functional vs. logic programming are already a bit more meaningful, so perhaps it's more useful to reflect on those.</p>\n"}, {"tags": [], "owner": {"reputation": 34889, "user_id": 86604, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/329af917389e6cf8e146c03012f5319a?s=128&d=identicon&r=PG", "display_name": "Ingo", "link": "https://stackoverflow.com/users/86604/ingo"}, "is_accepted": false, "score": 0, "last_activity_date": 1476902478, "creation_date": 1476902478, "answer_id": 40139215, "question_id": 40130014, "link": "https://stackoverflow.com/questions/40130014/why-is-haskell-fully-declarative/40139215#40139215", "title": "Why is Haskell fully declarative?", "body": "<p>You can't use an \"if statement\" in Haskell, because there is none. You can use an \"if-expression\"</p>\n\n<pre><code>if c then a else b\n</code></pre>\n\n<p>but this is just syntactic sugar for something like </p>\n\n<pre><code>let f True a b = a; f False a b = b in f c a b  \n</code></pre>\n\n<p>which is again fuly declarative.</p>\n"}], "owner": {"reputation": 4354, "user_id": 5967828, "user_type": "registered", "accept_rate": 65, "profile_image": "https://i.stack.imgur.com/fJ7P2.jpg?s=128&g=1", "display_name": "xetra11", "link": "https://stackoverflow.com/users/5967828/xetra11"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2754, "favorite_count": 0, "accepted_answer_id": 40130664, "answer_count": 5, "score": 7, "last_activity_date": 1476902478, "creation_date": 1476876047, "question_id": 40130014, "link": "https://stackoverflow.com/questions/40130014/why-is-haskell-fully-declarative", "title": "Why is Haskell fully declarative?", "body": "<p>I'm not very good in understanding the difference between the <strong>imperative</strong> and <strong>declarative</strong> programming paradigms. I read about Haskell being a declarative language. To an extend I would says yes but there is a something that bothers me in respect to the definition of imperative.</p>\n\n<p>When I have a datastruct and use Haskell's functions to transform that I actually just told WHAT to transform. So I give the datastruct as argument to a function and am happy with the result.</p>\n\n<p>But what if there is no function that actually satisfies my needs?</p>\n\n<p>I would start writing an own function which expects the datastruct as an argument. After that I would start writing how the datastruct should be processed. Since I only can call native Haskell functions I'm still with the declarative paradigm right? But what when I start using an \"if statement\". Wouldn't that end the declarative nature since I'm about to tell the program HOW to do stuff from that point?</p>\n"}, {"tags": ["haskell", "nixos", "nixpkgs"], "answers": [{"comments": [{"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "reply_to_user": {"reputation": 538, "user_id": 500511, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/99duf.png?s=128&g=1", "display_name": "helpwithhaskell", "link": "https://stackoverflow.com/users/500511/helpwithhaskell"}, "edited": false, "score": 0, "creation_date": 1476858059, "post_id": 40123332, "comment_id": 67517383, "body": "@helpwithhaskell Ah, I might have been wrong about the cause then. I&#39;m on my phone atm, which sadly doesn&#39;t run nix, so I can&#39;t debug right now."}], "tags": [], "owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "is_accepted": false, "score": 2, "last_activity_date": 1476856725, "creation_date": 1476856725, "answer_id": 40123332, "question_id": 40122520, "link": "https://stackoverflow.com/questions/40122520/nixos-how-to-recover-from-collision-between-two-instances-of-same-package-same/40123332#40123332", "title": "nixOS: how to recover from collision between two instances of same package, same version", "body": "<p><code>ghcWithPackages</code> effectively creates a brand new distribution of GHC, customised to include the packages you've listed. That is a different thing from <code>pkgs.ghc</code>, not just a thing that depends on it; it doesn't make sense to install both into the same environment. I think you've accidentally referred to both, and that's what's causing the collision.</p>\n\n<p>First you make your personal GHC and bring it into scope as the name <code>ghc</code>, using <code>let</code>.</p>\n\n<p>Inside the scope of the <code>let</code> you say:</p>\n\n<pre><code>buildInputs = with pkgs; [\n  ghc\n];\n</code></pre>\n\n<p>The <code>with</code> brings every attribute of <code>pkgs</code> into scope for the following expression. <code>pkgs</code> has a <code>ghc</code> attribute, and the <code>with</code> scope is the innermost scope containing a <code>ghc</code> binding, so that takes precedence over the <code>ghc</code> from the <code>let</code>.</p>\n\n<p>Your <code>shellHook</code> on the other hand is outside the scope of the <code>with</code>. So the <code>${ghc}</code> is a reference to your let-bound <code>ghc</code>. This makes your derivation depend on that, too.</p>\n\n<p>If that's correct, the solution would be either:</p>\n\n<ol>\n<li>Remove the <code>with</code>, so the build inputs list sees the same <code>ghc</code> as the rest of your code (using qualified references for anything else from <code>pkgs</code> you haven't included here)</li>\n<li>Move the <code>with</code> outside the <code>let</code>, so your version of <code>ghc</code> is the innermost binding (but then you pollute the namespace of your whole file with everything from <code>pkgs</code>, which gets confusing when it gets more complicated)</li>\n<li>In your <code>let</code> use a different variable name (<code>myghc</code> or something) and refer to that everywhere</li>\n</ol>\n"}, {"tags": [], "owner": {"reputation": 3385, "user_id": 841562, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/4cbb35380ef84f4f0f68061f578a4e73?s=128&d=identicon&r=PG", "display_name": "Lemming", "link": "https://stackoverflow.com/users/841562/lemming"}, "is_accepted": true, "score": 2, "last_activity_date": 1476867286, "creation_date": 1476867286, "answer_id": 40126562, "question_id": 40122520, "link": "https://stackoverflow.com/questions/40122520/nixos-how-to-recover-from-collision-between-two-instances-of-same-package-same/40126562#40126562", "title": "nixOS: how to recover from collision between two instances of same package, same version", "body": "<p>When trying to reproduce your issue at nixpkgs commit <code>125ffff</code>, I get a different error. Namely:</p>\n\n<pre><code>src/System/Texrunner/Online.hs:45:1: warning: [-Wunused-imports]\n    The import of \u2018Control.Applicative\u2019 is redundant\n      except perhaps to import instances from \u2018Control.Applicative\u2019\n    To import instances alone, use: import Control.Applicative()\n[3 of 3] Compiling System.Texrunner ( src/System/Texrunner.hs, dist/build/System/Texrunner.o )\n\nsrc/System/Texrunner.hs:18:1: warning: [-Wunused-imports]\n    The import of \u2018Control.Applicative\u2019 is redundant\n      except perhaps to import instances from \u2018Control.Applicative\u2019\n    To import instances alone, use: import Control.Applicative()\nPreprocessing test suite 'tests' for texrunner-0.0.1.1...\n[1 of 2] Compiling Tex.PDF          ( tests/Tex/PDF.hs, dist/build/tests/tests-tmp/Tex/PDF.dyn_o )\n[2 of 2] Compiling Main             ( tests/Tests.hs, dist/build/tests/tests-tmp/Main.dyn_o )\n\ntests/Tests.hs:5:1: error:\n    Failed to load interface for \u2018Tex.LogParse\u2019\n    Use -v to see a list of the files searched for.\nbuilder for \u2018/nix/store/g3mwscrvwsr9zrr5h14d59w7nh06qmsw-texrunner-0.0.1.1.drv\u2019 failed with exit code 1\ncannot build derivation \u2018/nix/store/9las78qbxqrlhakhdiqwc2jf7g6i5688-ghc-8.0.1.drv\u2019: 1 dependencies couldn't be built\nerror: build of \u2018/nix/store/9las78qbxqrlhakhdiqwc2jf7g6i5688-ghc-8.0.1.drv\u2019 failed\n</code></pre>\n\n<p>This leads me to believe that <code>&lt;nixpkgs&gt;</code> points to a different commit on your machine.\nThe above issue was fixed at commit <code>7c7417</code>. As of commit <code>80224e</code> (master at the time of writing) that change is still active. At that point I can reproduce your error.</p>\n\n<p>The issue there seems to be, that <code>diagrams</code> and <code>diagrams-pgf</code>, as separate packages, depend on different versions of <code>optparse-applicative</code>. The package <code>diagrams-pgf</code> has its whole scope overriden with the newer version, meaning that it also introduces different versions of <code>diagrams</code> and other dependencies. That seems to cause the collision.</p>\n\n<p>A simple fix for you should be to only depend on <code>diagrams-pgf</code> in your nix-shell. Most of diagrams will be pulled in as a dependency of <code>diagrams-pgf</code> and will therefore still be available.</p>\n\n<pre><code>{ nixpkgs ? import &lt;nixpkgs&gt; {\n}, compiler ? \"ghc801\" }:\n\nlet\n  inherit (nixpkgs) pkgs;\n  ghc = pkgs.haskell.packages.${compiler}.ghcWithPackages (ps: with ps; [\n    diagrams-pgf # &lt;--- HERE\n  ]);\nin\npkgs.stdenv.mkDerivation {\n  name = \"test\";\n  buildInputs = with pkgs; [\n    ghc\n  ];\n  shellHook = ''\n    eval $(egrep ^export ${ghc}/bin/ghc)\n  '';\n}\n</code></pre>\n\n<p>As confirmed by <code>ghc --show-packages</code>:</p>\n\n<pre><code>$ ghc --show-packages | grep 'name: diagrams'\nname: diagrams-lib\nname: diagrams-solve\nname: diagrams-core\nname: diagrams-pgf\n</code></pre>\n\n<p>Unfortunately, the package <code>diagrams-svg</code>, which is pulled in by <code>diagrams</code>, fails to build with the new version of <code>optparse-applicative</code>. So, it is currently not possible to build an environment with both <code>diagrams</code> and <code>diagrams-pgf</code> without patching some of these packages.</p>\n\n<p>If you need <code>diagrams-contrib</code>, then the following should do the trick:</p>\n\n<pre><code>{ nixpkgs ? import ~/src/nixpkgs {}\n, compiler ? \"ghc801\" }:\n\nlet\n  inherit (nixpkgs) pkgs;\n  ghc = pkgs.haskell.packages.${compiler}.ghcWithPackages (ps: with ps; [\n    (diagrams-contrib.overrideScope (self: super: {\n      optparse-applicative = self.optparse-applicative_0_13_0_0;\n    })) # &lt;--- HERE\n    diagrams-pgf\n  ]);\nin\npkgs.stdenv.mkDerivation {\n  name = \"test\";\n  buildInputs = with pkgs; [\n    ghc\n  ];\n  shellHook = ''\n    eval $(egrep ^export ${ghc}/bin/ghc)\n  '';\n}\n</code></pre>\n"}], "owner": {"reputation": 538, "user_id": 500511, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/99duf.png?s=128&g=1", "display_name": "helpwithhaskell", "link": "https://stackoverflow.com/users/500511/helpwithhaskell"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1219, "favorite_count": 1, "accepted_answer_id": 40126562, "answer_count": 2, "score": 4, "last_activity_date": 1476867286, "creation_date": 1476853330, "question_id": 40122520, "link": "https://stackoverflow.com/questions/40122520/nixos-how-to-recover-from-collision-between-two-instances-of-same-package-same", "title": "nixOS: how to recover from collision between two instances of same package, same version", "body": "<p>Here is my <code>nixos</code> version:</p>\n\n<pre><code>$ nixos-version \n16.09pre85931.125ffff (Flounder)\n</code></pre>\n\n<p>Here is my shell script:</p>\n\n<pre><code>$ cat test.nix \n{ nixpkgs ? import &lt;nixpkgs&gt; {\n}, compiler ? \"ghc801\" }:\n\nlet\n  inherit (nixpkgs) pkgs;\n  ghc = pkgs.haskell.packages.${compiler}.ghcWithPackages (ps: with ps; [\n    diagrams\n    diagrams-pgf\n  ]);\nin\npkgs.stdenv.mkDerivation {\n  name = \"test\";\n  buildInputs = with pkgs; [\n    ghc\n  ];\n  shellHook = ''\n    eval $(egrep ^export ${ghc}/bin/ghc)\n  '';\n}\n</code></pre>\n\n<p>Here is the problem. Note that there is a collision between two instances of the same version of the same package:</p>\n\n<pre><code>$ nix-shell --pure test.nix \nthese derivations will be built:\n  /nix/store/r6080kvlvdb16c1frz8alnm14xjizkf5-ghc-8.0.1.drv\nbuilding path(s) \u2018/nix/store/1129nds6xhq6hqawdd2s9z9n6va57jgl-ghc-8.0.1\u2019\ncollision between `/nix/store/amdnmbd8p52d49bqmphv9f7ly7lf7pkk-active-0.2.0.10/share/doc/x86_64-linux-ghc-8.0.1/active-0.2.0.10/html/Data-Active.html' and `/nix/store/yniw6akz2ldimdlj9yq968ldaf4j18h1-active-0.2.0.10/share/doc/x86_64-linux-ghc-8.0.1/active-0.2.0.10/html/Data-Active.html'\nbuilder for \u2018/nix/store/r6080kvlvdb16c1frz8alnm14xjizkf5-ghc-8.0.1.drv\u2019 failed with exit code 255\nerror: build of \u2018/nix/store/r6080kvlvdb16c1frz8alnm14xjizkf5-ghc-8.0.1.drv\u2019 failed\n/run/current-system/sw/bin/nix-shell: failed to build all dependencies\n</code></pre>\n\n<p>I know that if the packages had different versions then I could do something like this:</p>\n\n<pre><code>$ nix-env --set-flag priority 15 &lt;package&gt;-&lt;version&gt;\n</code></pre>\n\n<p>But since the package names and versions are the same, I don't know what to do.</p>\n\n<p>How can I recover from this?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1476843397, "post_id": 40120940, "comment_id": 67512922, "body": "What behaviour do you expect if there are no elements satisfying the condition? Return the list as is?"}, {"owner": {"reputation": 35, "user_id": 6843997, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b017660b4102d1a40ab3635965c51e83?s=128&d=identicon&r=PG&f=1", "display_name": "Erakura", "link": "https://stackoverflow.com/users/6843997/erakura"}, "reply_to_user": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1476843692, "post_id": 40120940, "comment_id": 67512985, "body": "@Alec: Correct."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 1, "creation_date": 1476859771, "post_id": 40120940, "comment_id": 67518328, "body": "Possible duplicate of <a href=\"http://stackoverflow.com/questions/31864951/haskell-filter-last-element\">Haskell - Filter Last Element</a>"}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1476893323, "post_id": 40120940, "comment_id": 67542792, "body": "In case it&#39;s not clear, <code>[Int]</code> is likely a poor data structure for your problem (though we&#39;d need to know the other operations you intend to support to suggest something better)"}, {"owner": {"reputation": 35, "user_id": 6843997, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b017660b4102d1a40ab3635965c51e83?s=128&d=identicon&r=PG&f=1", "display_name": "Erakura", "link": "https://stackoverflow.com/users/6843997/erakura"}, "edited": false, "score": 0, "creation_date": 1476919921, "post_id": 40120940, "comment_id": 67556205, "body": "When writing that pseudocode, I was thinking of integers as possible test arguments - in my final code, I fixed this by using <code>cutLast :: (a -&gt; Bool) -&gt; [a] -&gt; [a]</code>."}], "answers": [{"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1476866471, "post_id": 40121108, "comment_id": 67522613, "body": "Alternatively, one can use <code>(Bool, [a])</code> instead of the isomorphic type <code>Either [a] [a]</code>. That might feel more natural to those who use flags in imperative programming. From a FP perspective, I think both alternatives are OK."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1476890643, "post_id": 40121108, "comment_id": 67540975, "body": "@chi, I would consider the flag more natural in this case, but <code>Either</code> seems likely to perform better under GHC."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1476893763, "post_id": 40121108, "comment_id": 67543056, "body": "@dfeuer Interesting, I thought the opposite might be true in some cases. I mean, <code>(Bool,[a])</code> when <code>not (f x)</code> allows one to prepend <code>x</code> without forcing the evaluation of the flag, more lazily than what we could do with the sum type. The stricter sum type might perform better when <code>f x</code> is mostly true, though (?)"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1476895623, "post_id": 40121108, "comment_id": 67544106, "body": "@chi, I haven&#39;t benchmarked this particular example, but I&#39;ve seen sums work a lot faster than tags. I think maybe it has something to do with GHC pointer tagging, but I&#39;m really not sure."}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1476900691, "post_id": 40121108, "comment_id": 67547037, "body": "@chi  We <i>can</i> tweak a tuple version of this so that the output can be queried lazily, but that version ends up much slower than anything else I tried if we force the whole output."}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1476900708, "post_id": 40121108, "comment_id": 67547050, "body": "@dfeuer The sum types are indeed a bit faster than tuples for going to normal form."}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 0, "creation_date": 1476922900, "post_id": 40121108, "comment_id": 67556956, "body": "I also want to add that it is possible to improve this code in order to make it more lazy. You version will hang in case of such call: <code>take 10 $ cutLast&#39; (== 0) [1..]</code> and will introduce extra overhead in general."}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "reply_to_user": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 0, "creation_date": 1476923429, "post_id": 40121108, "comment_id": 67557077, "body": "@Shersh Look again. <code>cutLast&#39;</code> will not hang on the example you gave (if you fix the types: <code>take 10 $ snd $ cutLast&#39; (== 0) [1..]</code>). But you are right - as a result of not hanging on that example, it will pay the price of having extra overhead."}], "tags": [], "owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "is_accepted": false, "score": 3, "last_activity_date": 1476900423, "last_edit_date": 1495541957, "creation_date": 1476844237, "answer_id": 40121108, "question_id": 40120940, "link": "https://stackoverflow.com/questions/40120940/iterating-through-list-in-reverse/40121108#40121108", "title": "Iterating through list in reverse", "body": "<p>Borrowing heavily from <a href=\"https://stackoverflow.com/questions/40030460/haskell-split-string-on-last-occurence/40032635#40032635\">myself</a>: the problem with this sort of question is that you don't know which element to remove until you get to the end of the list. Once we observe this, the most straightforward thing to do is traverse the list one way then back using <code>foldr</code> (the second traversal comes from the fact <code>foldr</code> is not tail-recursive).</p>\n\n<p>The cleanest solution I can think of is to rebuild the list on the way back up, dropping the first element.</p>\n\n<pre><code>cutLast :: Eq a =&gt; (a -&gt; Bool) -&gt; [a] -&gt; Either [a] [a]\ncutLast f = foldr go (Left [])\n    where\n        go x (Right xs) = Right (x:xs)\n        go x (Left xs) | f x = Right xs\n                       | otherwise = Left (x:xs)\n</code></pre>\n\n<p>The return type is <code>Either</code> to differentiate between not found anything to drop from the list (<code>Left</code>), and having encountered and dropped the last satisfying element from the list (<code>Right</code>). Of course, if you don't care about whether you dropped or didn't drop an element, you can drop that information:</p>\n\n<pre><code> cutLast' f = either id id . cutLast f\n</code></pre>\n\n<hr>\n\n<p>Following the discussion of speed in the comments, I tried swapping out <code>Either [a] [a]</code> for <code>(Bool,[a])</code>. Without any further tweaking, this is (as @dfeuer predicted) consistently a bit slower (on the order of 10%).</p>\n\n<p>Using irrefutable patterns on the tuple, we can indeed avoid forcing the whole output (as per @chi's suggestion), which makes this much faster for lazily querying the output. This is the code for that:</p>\n\n<pre><code>cutLast' :: Eq a =&gt; (a -&gt; Bool) -&gt; [a] -&gt; (Bool,[a])\ncutLast' f = foldr go (False,[])\n    where\n        go x ~(b,xs) | not (f x) = (b,x:xs)\n                     | not b = (False,x:xs)\n                     | otherwise = (True,xs)\n</code></pre>\n\n<p>However, this is 2 to 3 times slower than either of the other two versions (that don't use irrefutable patterns) when forced to normal form.</p>\n"}, {"comments": [{"owner": {"reputation": 35, "user_id": 6843997, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b017660b4102d1a40ab3635965c51e83?s=128&d=identicon&r=PG&f=1", "display_name": "Erakura", "link": "https://stackoverflow.com/users/6843997/erakura"}, "edited": false, "score": 0, "creation_date": 1476919715, "post_id": 40131282, "comment_id": 67556136, "body": "Alec&#39;s version is indeed the more efficient option, but this was much simpler for me to understand for a Haskell newbie like myself, so I am choosing this one. Equal thanks to both chepner and @Alec for their great work."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 2, "last_activity_date": 1476879708, "creation_date": 1476879708, "answer_id": 40131282, "question_id": 40120940, "link": "https://stackoverflow.com/questions/40120940/iterating-through-list-in-reverse/40131282#40131282", "title": "Iterating through list in reverse", "body": "<p>One simple (but less efficient) solution is to implement <code>cutFirst</code> in a similar fashion to <code>filter</code>, then reverse the input to and output from that function.</p>\n\n<pre><code>cutLast pred = reverse . cutFirst . reverse\n   where cutFirst [] = []\n         cutFirst (x:xs) | pred x = xs\n                         | otherwise = x : cutFirst xs\n</code></pre>\n"}], "owner": {"reputation": 35, "user_id": 6843997, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b017660b4102d1a40ab3635965c51e83?s=128&d=identicon&r=PG&f=1", "display_name": "Erakura", "link": "https://stackoverflow.com/users/6843997/erakura"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 423, "favorite_count": 0, "accepted_answer_id": 40131282, "answer_count": 2, "score": 0, "last_activity_date": 1476900423, "creation_date": 1476843024, "last_edit_date": 1476844521, "question_id": 40120940, "link": "https://stackoverflow.com/questions/40120940/iterating-through-list-in-reverse", "title": "Iterating through list in reverse", "body": "<p>Assume the following (non-functioning) code, that takes a predicate such as <code>(==2)</code> and a list of integers, and drops only the last element of the list that satisfies the predicate:</p>\n\n<pre><code>cutLast :: (a -&gt; Bool) -&gt; [Int] -&gt; [Int]\ncutLast a [] = []\ncutLast pred (as:a)\n | (pred) a == False = (cutLast pred as):a\n | otherwise         = as\n</code></pre>\n\n<p>This code does not work, so clearly lists cannot be iterated through in reverse like this. How could I implement this idea? I'm not 100% sure if the code is otherwise correct - but hopefully it gets the idea across.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1476822963, "post_id": 40117545, "comment_id": 67506727, "body": "What warnings do you get?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1476827255, "post_id": 40117545, "comment_id": 67508787, "body": "You seem to want mutability in a language which was designed to forbid it. For those cases where you do need it, you achieve either with a recursive function (which calls itself with the &quot;new&quot; updated value), or through e.g. a state monad. But I&#39;m not yet convinced that you really need that -- what do you want to accomplish?"}], "answers": [{"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 2, "last_activity_date": 1476823573, "last_edit_date": 1476823573, "creation_date": 1476823038, "answer_id": 40117629, "question_id": 40117545, "link": "https://stackoverflow.com/questions/40117545/adding-new-records-to-a-map-under-a-same-name/40117629#40117629", "title": "adding new records to a map under a same name", "body": "<p>Not necessarily; you can chain the inserts together via composition:</p>\n\n<pre><code>main = do\n  let emptymap = M.empty\n      map = M.insert 10001 \"John\" . M.insert 10002 Paul $ emptymap\n  print (M.lookup 10001 map)\n</code></pre>\n\n<p>If you want to add another name <em>later</em>, you need a new name; otherwise, you define an \"infinite\" map.</p>\n\n<pre><code>main = do\n  let emptymap = M.empty\n      map = M.insert 10001 \"John\" . M.insert 10002 Paul $ emptymap\n  print (M.lookup 10001 map)\n  let map' = M.insert 10003 \"Kate\" map\n  print (M.lookup 10003 map)\n</code></pre>\n\n<p>If you need access to the same map in multiple places, though, you likely want to work in a <code>State</code> monad that will take care of managing all the references to the map for you.</p>\n"}, {"tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": false, "score": 1, "last_activity_date": 1476840447, "creation_date": 1476840447, "answer_id": 40120603, "question_id": 40117545, "link": "https://stackoverflow.com/questions/40117545/adding-new-records-to-a-map-under-a-same-name/40120603#40120603", "title": "adding new records to a map under a same name", "body": "<p>Variables in Haskell are immutable. If you want mutable state, you can use a mutable reference type such as <code>IORef</code> (or <code>STRef</code>):</p>\n\n<pre><code>import Data.IORef (modifyIORef', newIORef, readIORef)\nimport qualified Data.Map as Map\n\ntype Employees = Map Id Name\ntype Id = Int\ntype Name = String\n\nmain :: IO ()\nmain = do\n    employees &lt;- newIORef (Map.empty :: Employees)\n    addEmployee employees 10001 \"John\"\n    addEmployee employees 10002 \"Paul\"\n    print . Map.toList =&lt;&lt; readIORef employees\n\naddEmployee :: IORef Employees -&gt; Id -&gt; Name -&gt; IO ()\naddEmployee employees id name\n    = modifyIORef' employees (Map.insert id name)\n</code></pre>\n\n<p>However, this isn\u2019t very testable or composable\u2014you\u2019re stuck with <code>IO</code> (or <code>ST</code>). You can use <code>State</code> to make it pure:</p>\n\n<pre><code>import Control.Monad.Trans.State (evalState, modify, gets)\n\nmain :: IO ()\nmain = print $ flip evalState (Map.empty :: Employees) $ do\n    modify $ addEmployee 10001 \"John\"\n    modify $ addEmployee 10002 \"Paul\"\n    gets Map.toList\n\naddEmployee :: Id -&gt; Name -&gt; Employees -&gt; Employees\naddEmployee = Map.insert\n</code></pre>\n\n<p>Then all your modification and query functions on the state (such as <code>addEmployee</code>) can be pure, and you can test them in isolation:</p>\n\n<pre><code>removeEmployee 10001 (addEmployee 10001 \"John\" Map.empty)  ==  Map.empty\nfindEmployee 10002 Map.empty  ==  Nothing\n</code></pre>\n\n<p>If you need to interleave some other effects such as I/O with this state, you can use <code>StateT</code>:</p>\n\n<pre><code>import Control.Monad.Trans.Class (lift)\n\nmain :: IO ()\nmain = do\n    result &lt;- flip evalStateT (Map.empty :: Employees) $ do\n        lift $ putStrLn \"modifying\"\n        modify $ addEmployee 10001 \"John\"\n        lift $ putStrLn \"modifying again\"\n        modify $ addEmployee 10002 \"Paul\"\n        lift $ putStrLn \"returning\"\n        gets Map.toList\n    print result\n</code></pre>\n"}], "owner": {"reputation": 697, "user_id": 5821028, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/f02b2f13bdf83954535307af466460a7?s=128&d=identicon&r=PG&f=1", "display_name": "eii0000", "link": "https://stackoverflow.com/users/5821028/eii0000"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1476840447, "creation_date": 1476822703, "question_id": 40117545, "link": "https://stackoverflow.com/questions/40117545/adding-new-records-to-a-map-under-a-same-name", "title": "adding new records to a map under a same name", "body": "<p>I am trying to write a small program with Data.Map that stores employee IDs and names and you can insert, delete, lookup, etc.. </p>\n\n<pre><code>import qualified Data.Map as M\nmain = do\n  let emptymap = M.empty\n      map1 = M.insert 10001 \"John\" emptymap\n  print (M.lookup 10001 map1)\n</code></pre>\n\n<p>From here, if I added another employee to the map1, do I need to give it a new name ? If I added the following line, it does not compile.</p>\n\n<pre><code>      map1 = M.insert 10002 \"Paul\" map1\n</code></pre>\n\n<p>But if I added the following line, it works (it gives a lot of warnings though)</p>\n\n<pre><code>      map2 = M.insert 10002 \"Paul\" map1\n</code></pre>\n\n<p>I can create a new map with two employees with fromList() but every time I add a new employee (or delete an employee), I have to give a new name to the result?  I want to have a map that has the latest information under the same name. Please help.</p>\n"}, {"tags": ["haskell", "random", "simulation", "infinite"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 3, "creation_date": 1476817377, "post_id": 40115925, "comment_id": 67503596, "body": "Your way is perfectly correct - have your function take an infinite list as an argument and actually generate the list in <code>main</code>. Furthermore, an infinite list of <code>Int</code> and an infinite list of infinite lists of <code>Int</code> contain the same number of elements. You&#39;ve demonstrated that you don&#39;t have an infinite number of agents, so why not have a finite number of random lists: <code>map (agentRun args . randoms) &lt;$&gt; replicateM numRuns newStdGen</code>. Finally, if you are dealing with randomness a lot, you may benefit from <a href=\"https://hackage.haskell.org/package/MonadRandom-0.4.2.3\" rel=\"nofollow noreferrer\">some abstraction</a>."}, {"owner": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 1, "creation_date": 1476820895, "post_id": 40115925, "comment_id": 67505581, "body": "<code>Data.List.unfoldr (Just . split) :: RandomGen b =&gt; b -&gt; [b]</code> gives you an infinite list of generators, given one. If your function has a constraint like that, it can use infinite lists of infinite lists of <code>Int</code>s . I don&#39;t know if that&#39;s irrational somehow."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1476821683, "post_id": 40115925, "comment_id": 67506029, "body": "Note that <code>System.Random</code> is a very bad generator and might result in poor behavior of your program.  Consider using one of the other generators, such as <code>System.Random.TF</code> from tf-random."}, {"owner": {"reputation": 84731, "user_id": 510937, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/70b13a9ae1aae1ca1aa6ac8dab4643f2?s=128&d=identicon&r=PG", "display_name": "Bakuriu", "link": "https://stackoverflow.com/users/510937/bakuriu"}, "edited": false, "score": 0, "creation_date": 1476824616, "post_id": 40115925, "comment_id": 67507650, "body": "You could make your functions work inside the <code>Rand</code> monad..."}, {"owner": {"reputation": 845, "user_id": 4725700, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/b517b68a2f6eee6dc160661a0e78e4ce?s=128&d=identicon&r=PG&f=1", "display_name": "mntk123", "link": "https://stackoverflow.com/users/4725700/mntk123"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1476848056, "post_id": 40115925, "comment_id": 67513908, "body": "@user2407038 I know that an infinite list of Int and an infinite list of infinite lists of Int contain the same number of elements. But the problem is I cannot easily (and efficiently) pass those to the different agents."}], "answers": [{"comments": [{"owner": {"reputation": 845, "user_id": 4725700, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/b517b68a2f6eee6dc160661a0e78e4ce?s=128&d=identicon&r=PG&f=1", "display_name": "mntk123", "link": "https://stackoverflow.com/users/4725700/mntk123"}, "edited": false, "score": 0, "creation_date": 1476855248, "post_id": 40121990, "comment_id": 67516161, "body": "Great answer. Helped me learn an important thing about the generators."}, {"owner": {"reputation": 845, "user_id": 4725700, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/b517b68a2f6eee6dc160661a0e78e4ce?s=128&d=identicon&r=PG&f=1", "display_name": "mntk123", "link": "https://stackoverflow.com/users/4725700/mntk123"}, "edited": false, "score": 0, "creation_date": 1476857344, "post_id": 40121990, "comment_id": 67517033, "body": "Haskell continues to surprise me a lot - all pleasant surprises. This problem was beyond me and I thought, there is no better solution. But this little trick of <code>split</code>ing the generator took me off-guard."}], "tags": [], "owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "is_accepted": true, "score": 2, "last_activity_date": 1476850373, "creation_date": 1476850373, "answer_id": 40121990, "question_id": 40115925, "link": "https://stackoverflow.com/questions/40115925/haskell-how-to-generate-infinite-number-of-lists-of-infinite-random-numbers-for/40121990#40121990", "title": "Haskell how to generate infinite number of lists of infinite random numbers for simulation?", "body": "<p>Presumably you have some structure containing agent parameters, and a function</p>\n\n<pre><code>agentRun :: AgentParams -&gt; [Int] -&gt; Agent\n</code></pre>\n\n<p>Your problem is, how do you create an infinite list of Ints for each agent.</p>\n\n<p>Presumably you start with a list of AgentParams, and you want to map <code>agentRun</code> over it, like this:</p>\n\n<pre><code>agentsParams :: [AgentParams]\nagents = map (\\p -&gt; agentRun p ????) agentParams\n</code></pre>\n\n<p>The trouble is, you can't see how to get a different infinite list into each agent.</p>\n\n<p>To do this you use the library functions <code>unfoldr</code> and <code>split</code>:</p>\n\n<pre><code>unfoldr :: (b -&gt; Maybe (a, b)) -&gt; b -&gt; [a]\nsplit :: (RandomGen g) =&gt; g -&gt; (g,g)\n</code></pre>\n\n<p><code>unfoldr</code> carries on applying its function until it returns <code>Nothing</code>. </p>\n\n<p><code>split</code> takes a random generator and returns two new ones. So <code>Just . split</code> makes a good argument for <code>unfoldr</code>.</p>\n\n<pre><code>infiniteGenerators :: (RandomGen g) =&gt; g -&gt; [g]\ninfiniteGenerators = unfoldr (Just . split)\n</code></pre>\n\n<p>You can now map this infinite list of generators into an infinite list of infinite lists:</p>\n\n<pre><code>infiniteRandomLists :: (RandomGen g) =&gt; g -&gt; [[Int]]\ninfininteRandomLists = map randoms . infiniteGenerators\n</code></pre>\n\n<p>Then you can use zipWith to get your list of agents:</p>\n\n<pre><code>agents gen = zipWith agentRun (infiniteRandomLists gen)\n</code></pre>\n\n<p>However when coding your agents you will likely find it easier to work with a generator rather than an infinite list of Ints. This is because of a common pattern in functions of this kind, where you write:</p>\n\n<pre><code>(gen2, gen3) = split gen1\nresult = foo gen2\n</code></pre>\n\n<p>This saves you having to pass the updated generator back out of <code>foo</code>. If you are taking numbers from an infinite list then you will have to do something like:</p>\n\n<pre><code>(randomList2, result) = foo randomList1\n</code></pre>\n\n<p>But a better solution would be to use some kind of random state monad to manage all this for you.</p>\n"}], "owner": {"reputation": 845, "user_id": 4725700, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/b517b68a2f6eee6dc160661a0e78e4ce?s=128&d=identicon&r=PG&f=1", "display_name": "mntk123", "link": "https://stackoverflow.com/users/4725700/mntk123"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 654, "favorite_count": 2, "accepted_answer_id": 40121990, "answer_count": 1, "score": 3, "last_activity_date": 1476850373, "creation_date": 1476816784, "question_id": 40115925, "link": "https://stackoverflow.com/questions/40115925/haskell-how-to-generate-infinite-number-of-lists-of-infinite-random-numbers-for", "title": "Haskell how to generate infinite number of lists of infinite random numbers for simulation?", "body": "<p>In a simulation problem, I need to generate thousands of agent objects behaving independantly of each other. For this I need to pass each of these agents a different random number generator. How to do this in Haskell?\nIn a language like C, I can just generate a random number whenever it is needed, but in Haskell I need to do it only in the IO monad. The behaviour of the agents in entirely pure computation.</p>\n\n<p>I am doing it in the following manner now:</p>\n\n<pre><code>import System.Random\nmain = do\n   gen1 &lt;- newStdGen\n   let rands1 = randoms gen :: [Int]\n   gen2 &lt;- newStdGen\n   let rands2 = randoms gen :: [Int]\n   let sout = map (agentRun extraArgs) [rands1,rands2]\n   writeFile \"output\" $ unlines sout\n\nagentRun = &lt;&lt;some pure code that uses random numbers&gt;&gt;\n</code></pre>\n\n<p>One way I could solve this problem is given below, but it suffers from the fact that it requires to be run in IO monad only and I cannot just map the function on a list. Is there a better and more Haskell-like way for doing this? If yes, please give an sample code example.</p>\n\n<p>Please note that the agents require access to infinite list as it is not known in advance how many random numbers are needed.</p>\n\n<pre><code>import System.Random\nmain = do\n   dorun 10\ndorun 0 = return ()\ndorun n = do\n   gen1 &lt;- newStdGen\n   let rands1 = randoms gen :: [Int]\n   let sout = agentRun extraArgs rands1\n   appendFile \"output\" sout\n   dorun (n-1)\n\nagentRun = &lt;&lt;some pure code that uses random numbers&gt;&gt;\n</code></pre>\n"}, {"tags": ["haskell", "opengl", "gloss"], "comments": [{"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1476807602, "post_id": 40112525, "comment_id": 67498051, "body": "You can (try to) install Gloss via <code>cabal install gloss</code>.  N.B. it is usually best to use the glfw backend via <code>cabal install gloss -fglfw</code>."}, {"owner": {"reputation": 4185, "user_id": 15467, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a89c04ada36efa853c7f5be0a96b6dd9?s=128&d=identicon&r=PG", "display_name": "ja.", "link": "https://stackoverflow.com/users/15467/ja"}, "edited": false, "score": 0, "creation_date": 1476831305, "post_id": 40112525, "comment_id": 67510029, "body": "can you give the specific <code>cabal</code> error? If the <code>cabal</code> command itself is being found, but <code>cabal update</code> is failing, I suspect you need to set the environment variable <code>HTTP_PROXY</code>."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "reply_to_user": {"reputation": 4185, "user_id": 15467, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a89c04ada36efa853c7f5be0a96b6dd9?s=128&d=identicon&r=PG", "display_name": "ja.", "link": "https://stackoverflow.com/users/15467/ja"}, "edited": false, "score": 0, "creation_date": 1476853477, "post_id": 40112525, "comment_id": 67515528, "body": "@ja. I don&#39;t think he has used Cabal.  He instead used ghc to compile a single-file program that requires gloss."}], "owner": {"reputation": 45, "user_id": 5858657, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-htTpNGgt9-Q/AAAAAAAAAAI/AAAAAAAAABk/pXid9U5jAe4/photo.jpg?sz=128", "display_name": "Arghya Dutta", "link": "https://stackoverflow.com/users/5858657/arghya-dutta"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 986, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1476805155, "creation_date": 1476805155, "question_id": 40112525, "link": "https://stackoverflow.com/questions/40112525/haskell-failed-to-load-interface-for-graphics-gloss", "title": "Haskell: Failed to load interface for &#39;Graphics.Gloss&#39;", "body": "<p>Haskell Community.</p>\n\n<p>I am a newbie in Haskell, can only implement simple Haskell functions.</p>\n\n<p>I tried out one Haskell game program that was open source. While running it, GHC gave the following errors:</p>\n\n<blockquote>\n  <p>HexDame.hs:1:1: error:\n    Failed to load interface for \u2018Graphics.Gloss\u2019</p>\n</blockquote>\n\n<pre><code>    Perhaps you meant\n    Graphics.GL (from OpenGLRaw-3.1.0.0)\n   Graphics.GL.HP (from OpenGLRaw-3.1.0.0)\n   Graphics.GL.NV (from OpenGLRaw-3.1.0.0)\n   Use -v to see a list of the files searched for.\n</code></pre>\n\n<blockquote>\n  <p>HexDame.hs:2:1: error:\n     Failed to load interface for \u2018Graphics.Gloss.Interface.Pure.Game\u2019</p>\n</blockquote>\n\n<pre><code>    Use -v to see a list of the files searched for.\n</code></pre>\n\n<blockquote>\n  <p>HexDame.hs:3:1: error:\n      Failed to load interface for \u2018Graphics.Gloss.Data.Extent\u2019</p>\n</blockquote>\n\n<pre><code>     Use -v to see a list of the files searched for.\n</code></pre>\n\n<p>I am unsure whether Gloss is installed or not. I am using GHC on Windows on a proxy network. The 'cabal update' solution is also not working. \nFor other information, I had downloaded the entire Haskell package from the website, so I presume it includes all necessary packages, including GLUT.</p>\n\n<p>Please suggest solutions. </p>\n"}, {"tags": ["haskell", "constraints", "ghc"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1476804244, "post_id": 40112014, "comment_id": 67495755, "body": "What use case do you have for this construct?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1476805221, "post_id": 40112014, "comment_id": 67496514, "body": "So you want <code>supEq</code> to judge two values of the form <code>Sup a</code> always as unequal, even <code>supEq (Sub 1) (Sub 1) \u2261 False</code>? Might be helpful to clearly state this in the question."}, {"owner": {"reputation": 6500, "user_id": 57879, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/419a88bdf20aeaa3fb2de53ca0f4d836?s=128&d=identicon&r=PG", "display_name": "yatima2975", "link": "https://stackoverflow.com/users/57879/yatima2975"}, "edited": false, "score": 0, "creation_date": 1476807308, "post_id": 40112014, "comment_id": 67497872, "body": "I think you can use Data.Data.toConstr (see <a href=\"https://hackage.haskell.org/package/base-4.9.0.0/docs/Data-Data.html\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/base-4.9.0.0/docs/Data-Data.html</a>&zwnj;&#8203;) to get at a representation of the constructor used and build from there. Also see <a href=\"http://stackoverflow.com/questions/2628104/pattern-matching-of-algebraic-type-data-constructors\">my previous answer to a similar-ish question</a>/2630312#2630312"}], "answers": [{"comments": [{"owner": {"reputation": 19, "user_id": 7037352, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b8298a186cc65f3c8d7c37ce4b947ff8?s=128&d=identicon&r=PG&f=1", "display_name": "ltvanbinsbergen", "link": "https://stackoverflow.com/users/7037352/ltvanbinsbergen"}, "edited": false, "score": 0, "creation_date": 1476808311, "post_id": 40112693, "comment_id": 67498479, "body": "Thanks for your reply. Could you explain the <code>Dict</code> business?"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1476808630, "post_id": 40112693, "comment_id": 67498659, "body": "The constraint-less instance in the second example has a <code>(==)</code> that isn&#39;t reflexive, which makes it unadvisable."}, {"owner": {"reputation": 21417, "user_id": 925978, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/06e4467a5bd1538a92cefb20db07897a?s=128&d=identicon&r=PG&f=1", "display_name": "crockeea", "link": "https://stackoverflow.com/users/925978/crockeea"}, "edited": false, "score": 0, "creation_date": 1476809107, "post_id": 40112693, "comment_id": 67498942, "body": "In the last example, I create a <code>Dict (Eq t)</code> out of thin air using <code>unsafeCoerce</code>. By pattern matching on the result (<code>Dict</code>), I get a (completely bogus) constraint for <code>(Eq t)</code>, which is needed to call <code>==</code>. If everything works out like you hope, the bogus <code>Eq t</code> constraint is never accessed, so you can get away with that. It is extremely fragile, and again, not recommended."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1476848235, "post_id": 40112693, "comment_id": 67513953, "body": "Does the newish deferred type error machinery support this sort of thing safely? Sticking with your current approach, you could probably make things safer by constructing a type <code>newtype Bogus = Bogus Any</code> with <code>_ == _ = error ...</code> and coercing <code>Dict (Eq Bogus)</code>. Actually, you probably have another problem, with coherence, since you don&#39;t have a phantom like <code>reflection</code>."}], "tags": [], "owner": {"reputation": 21417, "user_id": 925978, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/06e4467a5bd1538a92cefb20db07897a?s=128&d=identicon&r=PG&f=1", "display_name": "crockeea", "link": "https://stackoverflow.com/users/925978/crockeea"}, "is_accepted": false, "score": 4, "last_activity_date": 1476805984, "last_edit_date": 1476805984, "creation_date": 1476805647, "answer_id": 40112693, "question_id": 40112014, "link": "https://stackoverflow.com/questions/40112014/force-ghc-to-ignore-missing-type-constraint/40112693#40112693", "title": "Force GHC to ignore missing type constraint", "body": "<p>Probably the easiest thing to do is define a custom <code>Eq (Sup t)</code> instance. </p>\n\n<pre><code>instance (Eq t) =&gt; Eq (Sup t) where\n  (Sub a) == (Sub b) = a == b\n  A == A = True\n  ...\n</code></pre>\n\n<p>Alternatively, if you want <code>==</code> to behave like <code>supEq</code> (so you don't need <code>supEq</code> at all), you can write the instance without the constraint:</p>\n\n<pre><code>instance Eq (Sup t) where\n  (Sub a) == (Sub b) = False\n  A == A = True\n  ...\n</code></pre>\n\n<p>Another approach is to split <code>Sup t</code> into two data types:</p>\n\n<pre><code>data Sup' = A | B | ... | Z deriving (Eq) -- nothing depends on `t`\ndata Sup t = Sub t | Sup'\n\nsupEq :: Sup t -&gt; Sup t -&gt; Bool\nsupEq (Sub _) _ = False\nsupEq _ (Sub _) = False\nsupEq a b = a == b\n</code></pre>\n\n<p>Of course yet a final option is to subvert the type system. This is almost certainly the wrong thing to do, but I'll leave that determination to you. </p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables #-}\nimport Data.Constraint\n\nsupEq :: forall t . Sup t -&gt; Sup t -&gt; Bool\nsupEq x y = let Dict = unsafeCoerce (Dict :: Dict ()) :: Dict (Eq t)\n            in not (isSub x) &amp;&amp; not (isSub y) &amp;&amp; x == y\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 3, "last_activity_date": 1476827909, "last_edit_date": 1476827909, "creation_date": 1476805951, "answer_id": 40112795, "question_id": 40112014, "link": "https://stackoverflow.com/questions/40112014/force-ghc-to-ignore-missing-type-constraint/40112795#40112795", "title": "Force GHC to ignore missing type constraint", "body": "<p>There is no way of getting rid of the <code>Eq</code> constraint if you use <code>(==)</code> while sticking with the unsurprising derived instance. Furthermore, as far as <code>supEq</code> is concerned your invariant is not being enforced (consider what would happen if you committed a mistake and swapped <code>True</code> and <code>False</code> in <code>isSub</code>). You are probably better off writing <code>supEq</code> in terms of <code>Sup</code> pattern matches alone:</p>\n\n<pre><code>data Sup t = Foo\n           | Bar\n           | Sub t \n           deriving Eq\n\nsupEq :: Sup t -&gt; Sup t -&gt; Bool\nsupEq (Sub _) _ = False\nsupEq _ (Sub _) = False\nsupEq Foo Foo = True\nsupEq Bar Bar = True\nsupEq _ _ = False\n</code></pre>\n\n<p>If there are enough cases that writing <code>supEq</code> in this way becomes annoying, you can split the non-<code>Sub</code> cases into a separate type, as in the next-to-last example in crockeea's answer, reproduced below for the sake of completeness:</p>\n\n<pre><code>data Sup' = Foo | Bar deriving (Eq)\ndata Sup t = Sub t | NotSub Sup' deriving (Eq)\n\nsupEq :: Sup t -&gt; Sup t -&gt; Bool\nsupEq (Sub _) _ = False\nsupEq _ (Sub _) = False\nsupEq (NotSub a) (NotSub b) = a == b\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "is_accepted": false, "score": 3, "last_activity_date": 1476816037, "creation_date": 1476816037, "answer_id": 40115695, "question_id": 40112014, "link": "https://stackoverflow.com/questions/40112014/force-ghc-to-ignore-missing-type-constraint/40115695#40115695", "title": "Force GHC to ignore missing type constraint", "body": "<p>Of course the simplest solution is to split your type into two types, as others have suggested. But this creates syntactic noise - an extra level of constructors. If you want the best of both you could use <a href=\"https://hackage.haskell.org/package/reflection-2.1.2/docs/Data-Reflection.html\" rel=\"nofollow\"><code>reflection</code></a>:</p>\n\n<pre><code>import Data.Reflection\nimport Data.Proxy \nimport Data.Coerce \n\ndata Sup t = Sub t | A | B | C | D | E -- .. etc\n  deriving (Eq, Show) \n</code></pre>\n\n<p>We will now use the generated <code>Eq</code> code for <code>Sup</code>, but substitute in a different function, not <code>(==)</code>, when comparing <code>Sub</code> with <code>Sub</code>. </p>\n\n<p>First you need some setup (I think this should be in the <code>reflection</code> package itself - it has similair code for <code>Monoid</code> and <code>Applicative</code>):</p>\n\n<pre><code>newtype ReifiedEq a = ReifiedEq { eq :: a -&gt; a -&gt; Bool } \nnewtype ReflectedEq s a = ReflectedEq a \n\ninstance Reifies s (ReifiedEq a) =&gt; Eq (ReflectedEq s a) where \n  (==) = coerce (eq (reflect (Proxy :: Proxy s))) \n</code></pre>\n\n<p>This is the heart of the solution - a value of type <code>ReflectedEq s a</code> is just an <code>a</code>, but when compared for equality uses the equality function provided by <code>Reifies</code>, which you can specify at any time. Note that the <code>reflection</code> package uses type level machinery to prevent multiple <code>Eq</code> instances from being used in the same context.</p>\n\n<p>Now you can write a function even more general than your desired one:</p>\n\n<pre><code>supEqWith :: (t -&gt; t -&gt; Bool) -&gt; Sup t -&gt; Sup t -&gt; Bool \nsupEqWith k x y = reify (ReifiedEq k) (\\p -&gt; h p x == h p y) where \n  h :: Proxy s -&gt; Sup a -&gt; Sup (ReflectedEq s a) \n  h _ = coerce \n</code></pre>\n\n<p>This function simply compares the <code>Sup</code> values for equality, using the specified function (<code>k</code>) to compare <code>t</code> values inside <code>Sub</code>. The <code>h</code> function is needed to specify the phantom type parameter (<code>s</code>) correctly, otherwise it is ambiguous. </p>\n\n<p>Your desired function is simply:</p>\n\n<pre><code>supEq = supEqWith (\\_ _ -&gt; False) \n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "is_accepted": false, "score": 3, "last_activity_date": 1476826479, "creation_date": 1476826479, "answer_id": 40118480, "question_id": 40112014, "link": "https://stackoverflow.com/questions/40112014/force-ghc-to-ignore-missing-type-constraint/40118480#40118480", "title": "Force GHC to ignore missing type constraint", "body": "<p>If your <code>Sup</code> type can be a functor in <code>t</code> (<code>deriving Functor</code> would work on the example you've given), and you know that none of the other constructors use <code>t</code>, then you could <code>fmap (const ())</code> it.</p>\n\n<p>Then you've got a guarantee that the <code>t</code> won't affect the equality check interestingly and don't need the original <code>t</code> to have <code>Eq</code>. You just need to guard the case when both inputs were some <code>Sub _</code> so that you return false instead of true.</p>\n\n<pre><code>subEq (Sub _) _ = False\nsubEq _ (Sub _) = False\nsubEq x y = fmap (const ()) x == fmap (const ()) y\n</code></pre>\n\n<p>Even if you don't want to make <code>Sup</code> a functor, you could still implement <code>submap :: (a -&gt; b) -&gt;Sup a -&gt; Sup b</code> and use that.</p>\n"}], "owner": {"reputation": 19, "user_id": 7037352, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b8298a186cc65f3c8d7c37ce4b947ff8?s=128&d=identicon&r=PG&f=1", "display_name": "ltvanbinsbergen", "link": "https://stackoverflow.com/users/7037352/ltvanbinsbergen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 169, "favorite_count": 1, "answer_count": 4, "score": 1, "last_activity_date": 1476827909, "creation_date": 1476803789, "last_edit_date": 1476804670, "question_id": 40112014, "link": "https://stackoverflow.com/questions/40112014/force-ghc-to-ignore-missing-type-constraint", "title": "Force GHC to ignore missing type constraint", "body": "<p>I built a type <code>Sup</code> that embeds a value of another type <code>t</code> using constructor subtyping.</p>\n\n<pre><code>data Sup t = ...\n           | Sub t \n           deriving Eq\n</code></pre>\n\n<p>Because the part omitted from <code>Sup</code> contains lots of constructors, none of which use <code>t</code>, I want to <em>derive</em> <code>Eq (Sup t)</code> rather than give a manual instance. </p>\n\n<p>A type constraint <code>Eq t</code> is now in place on the instance of <code>(==)</code> for <code>Sup t</code>:</p>\n\n<p><code>(==) :: Eq t =&gt; Sup t -&gt; Sup t -&gt; Bool</code></p>\n\n<p>The predicate <code>isSub :: Sup t -&gt; Bool</code> is defined as follows:</p>\n\n<pre><code>isSub :: Sup t -&gt; Bool\nisSub (Sub _) = True\nisSub _       = False\n</code></pre>\n\n<p>With the help of this predicate I would like to define the following operator:</p>\n\n<pre><code>supEq :: Sup t -&gt; Sup t -&gt; Bool\nsupEq x y = not (isSub x) &amp;&amp; not (isSub y) &amp;&amp; x == y\n</code></pre>\n\n<p>The above definition is not accepted by GHC, as the type-constraint <code>Eq t</code> is missing. However, thanks to lazy evaluation, I know that equality between values of type <code>t</code> is never actually used.</p>\n\n<p>Is there a way that I can force GHC to ignore the missing type-constraint?\nAlternatively, is there a way I could have defined <code>Sup</code> or <code>supEq</code> to get the desired result: a definition of <code>supEq</code> without having to propagate a redundant type constraint wherever <code>supEq</code> is used and without having to give a manual instance for  <code>Eq (Sup t)</code>.</p>\n"}, {"tags": ["algorithm", "haskell", "functional-programming"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1476797130, "post_id": 40109467, "comment_id": 67490286, "body": "Do you have to define your data type that way? Haskell already has support for arbitrary precision integers with <code>Integer</code>, so it would be much simpler to define <code>newtype BigInt = BigInt Integer</code>, then define appropriate instances of <code>Num</code>, <code>Integral</code>, etc for your type. You might want to use a smart constructor <code>mkBigInt :: Integer -&gt; BigInt</code> to ensure that a <code>BigInt</code> value begins in the range <code>0 .. n - 1</code>."}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1476801245, "post_id": 40109467, "comment_id": 67493480, "body": "That is not what I mean, I&#39;m specifically asking if it is possible with datatypes alone. Integer uses FFI under the hoods."}, {"owner": {"reputation": 12941, "user_id": 292731, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/e3f90adedab79538799e2375a9731920?s=128&d=identicon&r=PG", "display_name": "Justin L.", "link": "https://stackoverflow.com/users/292731/justin-l"}, "edited": false, "score": 0, "creation_date": 1476812704, "post_id": 40109467, "comment_id": 67500961, "body": "how are BigInt/T meant to represent elements of your cyclic group?"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1476816929, "post_id": 40109467, "comment_id": 67503367, "body": "All cyclic groups are isomorphic to the integers - so is this just about representing integers without machine integers? What about <code>(Nat, Nat)</code> where <code>(n,m) := n - m</code> - or even <code>(Bool, Nat)</code>. Such definitions aren&#39;t very efficient (but neither is any inductive definition of integers, compared to machine integers) but have straightforward arithmethic operations."}, {"owner": {"reputation": 136287, "user_id": 65696, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/d8da959b2a586b4a147604e6f534a9fe?s=128&d=identicon&r=PG", "display_name": "SingleNegationElimination", "link": "https://stackoverflow.com/users/65696/singlenegationelimination"}, "edited": false, "score": 0, "creation_date": 1476836264, "post_id": 40109467, "comment_id": 67511234, "body": "That&#39;s not quite right.  The set of all (finite) cyclic groups is isomorphic to the naturals: each group can be represented by the number of elements in the group.  The set of elements/actions of any given cyclic group of size n is the set of size n."}], "owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 194, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1476796843, "creation_date": 1476796843, "question_id": 40109467, "link": "https://stackoverflow.com/questions/40109467/are-there-simple-way-to-form-cyclic-group-of-huge-order-using-algebraic-datatype", "title": "Are there simple way to form cyclic group of huge order using algebraic datatypes?", "body": "<p>To create a cyclic group of order N, in Haskell, you could, for example, define a type for big integers, <code>data BigInt = B0 BigInt | B1 BigInt | B</code>, and the usual <code>add</code>/<code>mod</code> operations. You could then define <code>op a b = mod (add a b) n</code> to get an additive group of order <code>n</code>. The problem is that the implementation of <code>add</code> and <code>mod</code> are relatively complex, involving tricky state-passing recursion with carry bits, etc. Is there a more direct, natural way to create cyclic groups using just datatypes? Example:</p>\n\n<pre><code>data T = A T T | B T T | C\n</code></pre>\n\n<p>Is it possible to define a relatively simple <code>add :: T -&gt; T -&gt; T</code> for that datatype which allows us to define such group? I've been trying some tree-rotation schemes, but seems like it is not easy to generate an operation with a huge period.</p>\n"}, {"tags": ["haskell", "dependency-management"], "comments": [{"owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "edited": false, "score": 1, "creation_date": 1476792904, "post_id": 40107900, "comment_id": 67487188, "body": "I&#39;ll just leave it there <a href=\"http://pvp.haskell.org/\" rel=\"nofollow noreferrer\">pvp.haskell.org</a>"}, {"owner": {"reputation": 3226, "user_id": 1058732, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/271319f2b3d45b31f2bec9f3e4e92961?s=128&d=identicon&r=PG", "display_name": "shmish111", "link": "https://stackoverflow.com/users/1058732/shmish111"}, "reply_to_user": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "edited": false, "score": 0, "creation_date": 1476794027, "post_id": 40107900, "comment_id": 67487941, "body": "ok, I&#39;ll go with MAJOR versions and use the <code>==</code> syntax. I noticed that some libs have no version for some common libraries such as <code>lens</code> and <code>time</code>. Isn&#39;t this quite dangerous? Is it normal?"}, {"owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "edited": false, "score": 0, "creation_date": 1476794171, "post_id": 40107900, "comment_id": 67488036, "body": "I suspect, they just head over the responsibility to stackage: <a href=\"https://www.stackage.org/lts\" rel=\"nofollow noreferrer\">stackage.org/lts</a>"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "edited": false, "score": 2, "creation_date": 1476796430, "post_id": 40107900, "comment_id": 67489773, "body": "&quot;Isn&#39;t this quite dangerous? Is it normal?&quot; It might be an outright mistake, or they might be relying on stackage as @arrowd says (which might or might not be a mistake depending on who you ask -- it is kind of a perennial flamewar topos), or they might be relying on some other package through which they depend transitively on <code>lens</code> and <code>time</code> to pin the versions for them (which, though not ideal, isn&#39;t all that risky for very common and stable packages such as <code>lens</code> and <code>time</code> from which one only uses a subset of obvious core features  which would break half of Hackage if changed)."}], "answers": [{"comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1476896150, "post_id": 40130448, "comment_id": 67544384, "body": "&quot;Once your package gets in, it would be Stackage&#39;s responsibility to make sure it builds fine&quot;. It is the other way around. The <i>maintainer</i> is responsible for ensuring the package works with the latest Stackage releases. All Stackage does in that respect is testing whether that it is indeed the case. Packages which don&#39;t work with the latest release are temporarily dropped from Stackage until they are fixed. Cf. the <a href=\"https://github.com/fpco/stackage/blob/master/MAINTAINERS.md\" rel=\"nofollow noreferrer\">Stackage Maintainers Agreement</a>."}, {"owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1476903010, "post_id": 40130448, "comment_id": 67548452, "body": "@duplode Yes, of course Stackage team wouldn&#39;t fix the code for the maintainer, but at least they will provide him exact requirements and error messages."}], "tags": [], "owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "is_accepted": false, "score": 0, "last_activity_date": 1476877274, "creation_date": 1476877274, "answer_id": 40130448, "question_id": 40107900, "link": "https://stackoverflow.com/questions/40107900/guide-to-dependency-ranges-when-developing-a-haskell-library/40130448#40130448", "title": "guide to dependency ranges when developing a Haskell library", "body": "<p>The <a href=\"http://pvp.haskell.org/\" rel=\"nofollow\">Package Versioning Policy</a> document specifies besr approaches to assigning versions for your own package.</p>\n\n<p>If you don't want to get too deep into this, you can omit all version constrains on packages you are depending on and then ask <a href=\"https://www.stackage.org/\" rel=\"nofollow\">Stackage team</a> to include your package in their releases (see <strong>Authors</strong> section). Once your package gets in, it would be Stackage's responsibility to make sure it builds fine.</p>\n"}], "owner": {"reputation": 3226, "user_id": 1058732, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/271319f2b3d45b31f2bec9f3e4e92961?s=128&d=identicon&r=PG", "display_name": "shmish111", "link": "https://stackoverflow.com/users/1058732/shmish111"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 80, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1476877274, "creation_date": 1476792616, "question_id": 40107900, "link": "https://stackoverflow.com/questions/40107900/guide-to-dependency-ranges-when-developing-a-haskell-library", "title": "guide to dependency ranges when developing a Haskell library", "body": "<p>As a Haskell beginner, I'm working on a small library that I want to make public. One problem I have is that I don't know what I should do about the ranges of the dependencies I have. Does it make sense to set the range to the current MAJOR version, for example</p>\n\n<pre><code>network &gt;= 2.6 &amp;&amp; &lt; 2.7\n</code></pre>\n\n<p>Should I consider testing with lower MAJOR versions?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 2863, "user_id": 2297560, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/948d4a17494b3c616a0873453b74670c?s=128&d=identicon&r=PG", "display_name": "user2297560", "link": "https://stackoverflow.com/users/2297560/user2297560"}, "edited": false, "score": 0, "creation_date": 1476791262, "post_id": 40107085, "comment_id": 67486067, "body": "It&#39;s not clear what you&#39;re asking."}, {"owner": {"reputation": 409, "user_id": 1897830, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/4bb6f01afcee8d6fd59ccb93499732d6?s=128&d=identicon&r=PG", "display_name": "user1897830", "link": "https://stackoverflow.com/users/1897830/user1897830"}, "reply_to_user": {"reputation": 2863, "user_id": 2297560, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/948d4a17494b3c616a0873453b74670c?s=128&d=identicon&r=PG", "display_name": "user2297560", "link": "https://stackoverflow.com/users/2297560/user2297560"}, "edited": false, "score": 0, "creation_date": 1476792611, "post_id": 40107085, "comment_id": 67486977, "body": "How do I write the function without foldr?"}, {"owner": {"reputation": 30739, "user_id": 1804599, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/v91P3.jpg?s=128&g=1", "display_name": "rightfold", "link": "https://stackoverflow.com/users/1804599/rightfold"}, "edited": false, "score": 1, "creation_date": 1476819201, "post_id": 40107085, "comment_id": 67504604, "body": "Don&#39;t write functions without me. :("}], "answers": [{"comments": [{"owner": {"reputation": 409, "user_id": 1897830, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/4bb6f01afcee8d6fd59ccb93499732d6?s=128&d=identicon&r=PG", "display_name": "user1897830", "link": "https://stackoverflow.com/users/1897830/user1897830"}, "edited": false, "score": 0, "creation_date": 1476861034, "post_id": 40108093, "comment_id": 67519112, "body": "Ok. Will check out Traversable. That was what I was looking for."}], "tags": [], "owner": {"reputation": 2863, "user_id": 2297560, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/948d4a17494b3c616a0873453b74670c?s=128&d=identicon&r=PG", "display_name": "user2297560", "link": "https://stackoverflow.com/users/2297560/user2297560"}, "is_accepted": false, "score": 3, "last_activity_date": 1476796326, "last_edit_date": 1476796326, "creation_date": 1476793183, "answer_id": 40108093, "question_id": 40107085, "link": "https://stackoverflow.com/questions/40107085/changing-sequence-function-from-foldr-to-recursive-function/40108093#40108093", "title": "Changing sequence function from foldr to recursive function", "body": "<p>One way to write <code>sequence</code> is simply <code>traverse id</code>, and I would encourage you to explore the relationship between <code>Traversable</code> and <code>Applicative</code> for deeper understanding.</p>\n\n<p>I think what you're looking for is this definition:</p>\n\n<pre><code>sequence :: Monad m =&gt; [m a] -&gt; m [a]\nsequence [] = return []\nsequence (x:xs) = do\n  x' &lt;- x\n  xs' &lt;- sequence xs\n  return (x':xs')\n</code></pre>\n"}], "owner": {"reputation": 409, "user_id": 1897830, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/4bb6f01afcee8d6fd59ccb93499732d6?s=128&d=identicon&r=PG", "display_name": "user1897830", "link": "https://stackoverflow.com/users/1897830/user1897830"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 175, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1476796326, "creation_date": 1476790239, "last_edit_date": 1476792696, "question_id": 40107085, "link": "https://stackoverflow.com/questions/40107085/changing-sequence-function-from-foldr-to-recursive-function", "title": "Changing sequence function from foldr to recursive function", "body": "<p>I'm trying to get my head around the sequence function. I thought it may help if I wrote it as a recursive function but I am at a bit of a loss how to do it considering it is a monadic expression which I find somewhat difficult to convert to recursive. I mean what do you do with return (x:xs)? In other words I want to write the function without foldr. I have included two definitions below:</p>\n\n<pre><code>sequence _ = foldr k (return [])\n              where\n                k m m' = do { x &lt;- m; xs &lt;- m'; return (x:xs) }\n\nsequence' _ = foldr k (return [])\n               where\n                  k m m' = m &gt;&gt;=\n                          (\\fstr -&gt; m'&gt;&gt;=\n                           (\\rstr -&gt; return (fstr:rstr)))\n</code></pre>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1476792399, "post_id": 40107789, "comment_id": 67486832, "body": "This will lead to paths like <code>[[3,5],[3]]</code> on <code>Node 3 (Node 5 Leaf Leaf) Leaf</code>."}, {"owner": {"reputation": 2863, "user_id": 2297560, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/948d4a17494b3c616a0873453b74670c?s=128&d=identicon&r=PG", "display_name": "user2297560", "link": "https://stackoverflow.com/users/2297560/user2297560"}, "reply_to_user": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1476792535, "post_id": 40107789, "comment_id": 67486929, "body": "@Zeta that is exactly what I would expect to get. (also, I think you meant <code>Node 3 (Node 5 Leaf Leaf) Leaf</code>)"}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1476792695, "post_id": 40107789, "comment_id": 67487037, "body": "Well, it depends on the definition of a <i>path</i> in this context, but usually it&#39;s the values that are encountered to the way to a leaf (in the sense that it doesn&#39;t have any child nodes). In the example above, <code>Node 3</code> isn&#39;t a leaf, since it has a child node, therefore it shouldn&#39;t come up as the last node in a path. But again, that depends on the definition of a path. But it&#39;s trivial to fix either way."}, {"owner": {"reputation": 2863, "user_id": 2297560, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/948d4a17494b3c616a0873453b74670c?s=128&d=identicon&r=PG", "display_name": "user2297560", "link": "https://stackoverflow.com/users/2297560/user2297560"}, "reply_to_user": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1476793380, "post_id": 40107789, "comment_id": 67487498, "body": "Start at the root and take the right branch. The path is <code>[3]</code>. If we can&#39;t count edges that end at a <code>Leaf</code> then <code>Node 3 Leaf Leaf</code> wouldn&#39;t define any path."}], "tags": [], "owner": {"reputation": 2863, "user_id": 2297560, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/948d4a17494b3c616a0873453b74670c?s=128&d=identicon&r=PG", "display_name": "user2297560", "link": "https://stackoverflow.com/users/2297560/user2297560"}, "is_accepted": false, "score": 4, "last_activity_date": 1476805970, "last_edit_date": 1476805970, "creation_date": 1476792273, "answer_id": 40107789, "question_id": 40106559, "link": "https://stackoverflow.com/questions/40106559/tree-to-a-list-of-possible-paths-values/40107789#40107789", "title": "Tree to a list of possible paths (values)", "body": "<p>You have a recursive data structure, so you should expect a recursive solution. The first step in such a solution is to identify the base cases. For this problem, there is the obvious base case: <code>Leaf</code>. We probably also want to treat <code>Node x Leaf Leaf</code> as a base case to avoid duplicate paths.</p>\n\n<p>Now let's write down the type signature. This should make it clear what our base cases should produce.</p>\n\n<pre><code>paths :: Tree -&gt; [[Int]]\n</code></pre>\n\n<p>For <code>Leaf</code> the sensible thing to do is return a list containing an empty list since a <code>Leaf</code> is representing an empty path.</p>\n\n<pre><code>paths Leaf = [[]]\n</code></pre>\n\n<p>For <code>Node x Leaf Leaf</code>, we can return a list consisting of a list containing <code>x</code>.</p>\n\n<pre><code>paths (Node x Leaf Leaf) = [[x]]\n</code></pre>\n\n<p>The next part requires the most thought. We need to consider what to do with the non-base case <code>Node x left right</code>. The strategy here is to assume that we have the result of <code>paths left</code> and <code>paths right</code> and then decide what we need to do with <code>x</code>.  We're building paths, so we need to tack <code>x</code> onto the front of all the <code>left</code> paths and the <code>right</code> paths. We also need to combine the two lists into a single list.</p>\n\n<pre><code>paths (Node x left right) = map (x:) (paths left ++ paths right)\n</code></pre>\n\n<p>And that's it.  Of course, now you might want to see if there's a more efficient way to implement it, or if there's a common pattern here instead (i.e. can we write this as a fold?).</p>\n"}, {"tags": [], "owner": {"reputation": 494, "user_id": 5447207, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/d96199ece7ba3bc4f3c1d97d645f5fad?s=128&d=identicon&r=PG", "display_name": "Bargros", "link": "https://stackoverflow.com/users/5447207/bargros"}, "is_accepted": false, "score": 0, "last_activity_date": 1477132447, "last_edit_date": 1477132447, "creation_date": 1476877115, "answer_id": 40130391, "question_id": 40106559, "link": "https://stackoverflow.com/questions/40106559/tree-to-a-list-of-possible-paths-values/40130391#40130391", "title": "Tree to a list of possible paths (values)", "body": "<p>The answer here is very simple, so for a Tree structure such as the one you provided, if we have:</p>\n\n<pre><code>data Tree = Node Int Tree Tree | Leaf\n</code></pre>\n\n<p>We would need a nested function within our function, basically a function which returns a list from a branch, this way we can have the first argument of the Tree (the trunk or initial value) separated from values of either of the branches, but I'm sure there is a more efficient implementation, so here it is:</p>\n\n<pre><code>traverse :: Tree a -&gt; [[Int]] -- Do not use \"a\" in the return type \ntraverse Leaf = [[]]\ntraverse (Node value left right) = [value] ++ treeToList left : [value] ++ treeToList right : []\n where treeToList Leaf = []\n       treeToList (Node a left right) = [a] ++ treeToList left ++ treeToList right\n</code></pre>\n\n<p>returns</p>\n\n<pre><code>&gt; traverse (Node 2 (Node 3 Leaf Leaf) (Node 4 Leaf Leaf))\n&gt; [[2,3],[2,4]]\n</code></pre>\n\n<p>Be careful with the return type as <strong>Tree a</strong> denotes that a is polymorphic but the constructor <strong>Node</strong> takes only values of type <strong>Int</strong>, denoting the returned list can only be of type Int.</p>\n"}], "owner": {"reputation": 8697, "user_id": 1055165, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/d7c25776b0ca1c13212eea512370102d?s=128&d=identicon&r=PG", "display_name": "zoran119", "link": "https://stackoverflow.com/users/1055165/zoran119"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 850, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1477132447, "creation_date": 1476788760, "question_id": 40106559, "link": "https://stackoverflow.com/questions/40106559/tree-to-a-list-of-possible-paths-values", "title": "Tree to a list of possible paths (values)", "body": "<p>Given a tree data structure defined as</p>\n\n<pre><code>data Tree = Node Int Tree Tree | Leaf\n</code></pre>\n\n<p>How can one transform it into a list of values along all paths?</p>\n\n<p>For example <code>Node 1 (Node 2 Leaf Leaf) (Node 3 Leaf Leaf)</code> should translate to <code>[[1,2], [1,3]]</code>.</p>\n"}, {"tags": ["haskell", "logging", "functional-programming", "free-monad"], "comments": [{"owner": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 0, "creation_date": 1476798925, "post_id": 40105759, "comment_id": 67491701, "body": "Sorry, I deleted my remark which was missing some bit of the story. It seems you are trying to interpret a <code>Free CloudFilesF</code> thing entirely in terms of <code>LogF</code>, but this will never work if you don&#39;t also somehow feed <code>[Path]</code> into the process, since most of a <code>Free CloudFilesF a</code> is stuck behind functions <code>[Path] -&gt; a</code>, so you can&#39;t get to it - unless you feed it <code>[]</code>"}, {"owner": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 0, "creation_date": 1476799376, "post_id": 40105759, "comment_id": 67492043, "body": "For example you can write <code>debugI :: CloudFilesF r -&gt; Free LogF r</code> as <code>debugI (SaveFile path bytes r) = log Debug (path ++ bytes) &gt;&gt; return r</code>; <code>debugI (ListFiles path next) = log Debug path &gt;&gt; return (next [])</code>"}, {"owner": {"reputation": 4593, "user_id": 2289983, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LG4hj.jpg?s=128&g=1", "display_name": "Damian Nadales", "link": "https://stackoverflow.com/users/2289983/damian-nadales"}, "reply_to_user": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 0, "creation_date": 1476799379, "post_id": 40105759, "comment_id": 67492045, "body": "I think that&#39;s part of the problem (and also part of my question): how to add logging in a context of free monads. It seems interpreting <code>Free CloudFilesF</code> in terms of <code>Free LogF</code> is not the right approach, but I wonder what&#39;s the place of <code>LogF</code> in the whole process."}, {"owner": {"reputation": 4593, "user_id": 2289983, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LG4hj.jpg?s=128&g=1", "display_name": "Damian Nadales", "link": "https://stackoverflow.com/users/2289983/damian-nadales"}, "reply_to_user": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 0, "creation_date": 1476799476, "post_id": 40105759, "comment_id": 67492121, "body": "What you mention in your second comment is what I did at some point, but returning an empty list did not seem right (at least from an architectural point of view), although it did the job."}, {"owner": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 1, "creation_date": 1476799501, "post_id": 40105759, "comment_id": 67492139, "body": "When he did it, he interpreted <code>CloudFilesF</code> into <code>Sum LogF RestF</code> or whatever - i.e. he stuck a bit of logging onto his rest interpreter, so he could write something like <code>logRest :: CloudFilesF r -&gt; Free (Sum LogF RestF) r</code> as <code>logRest cf = hoistFree InL (logCloudFilesI cf) *&gt; hoistFree InR (interpretCloudWithRest cf)</code> (here using <code>Data.Functor.Sum</code> for his coproducts)"}, {"owner": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 0, "creation_date": 1476799796, "post_id": 40105759, "comment_id": 67492354, "body": "That way, I don&#39;t lose the all-important connectedness of a <code>Free CloudFilesF</code> item - it is preserved by <code>interpretCloudWithRest</code> which knows how to &#39;get&#39; files."}], "answers": [{"comments": [{"owner": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 0, "creation_date": 1476800293, "post_id": 40110592, "comment_id": 67492736, "body": "This is what de Goes does in the relevant section of the post, though, with <code>loggingCloudFilesI</code>"}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "reply_to_user": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 0, "creation_date": 1476800526, "post_id": 40110592, "comment_id": 67492917, "body": "Yep, more or less. The above is basically a recap of the part of the article that OP seems not to understand. The main difference is that de Goes doesn&#39;t build his logger as a decorator."}, {"owner": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 1, "creation_date": 1476801164, "post_id": 40110592, "comment_id": 67493408, "body": "<code>decorateLog</code> might be clearer  as something like  <code>addLogging :: CloudFilesF a -&gt; Free (Sum LogF CloudFilesF) a</code> then other manipulations would use standard combinators like <code>retract</code> <code>hoistFree</code> etc."}, {"owner": {"reputation": 4593, "user_id": 2289983, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LG4hj.jpg?s=128&g=1", "display_name": "Damian Nadales", "link": "https://stackoverflow.com/users/2289983/damian-nadales"}, "edited": false, "score": 0, "creation_date": 1476863207, "post_id": 40110592, "comment_id": 67520470, "body": "Indeed, I was thrown off by the fact that de Goes uses <code>logCloudFilesI :: forall a. CloudFilesF a -&gt; Free LogF ()</code>. In his second post he uses <code>Halt</code> as well, but none of these constructs can be put together in the same way as the REST interpreter."}, {"owner": {"reputation": 4593, "user_id": 2289983, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LG4hj.jpg?s=128&g=1", "display_name": "Damian Nadales", "link": "https://stackoverflow.com/users/2289983/damian-nadales"}, "reply_to_user": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 0, "creation_date": 1476863466, "post_id": 40110592, "comment_id": 67520635, "body": "@Michael, any reason for preferring <code>Sum</code> over <code>Coproduct</code>?"}, {"owner": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "reply_to_user": {"reputation": 4593, "user_id": 2289983, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LG4hj.jpg?s=128&g=1", "display_name": "Damian Nadales", "link": "https://stackoverflow.com/users/2289983/damian-nadales"}, "edited": false, "score": 0, "creation_date": 1476873586, "post_id": 40110592, "comment_id": 67527712, "body": "@DamianNadales <code>Data.Functor.Sum</code> is in <code>base</code> (previously it was in <code>transformers</code> which is a boot package that comes with ghc) so it&#39;s the standard module for forming the coproduct of two functors."}, {"owner": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "reply_to_user": {"reputation": 4593, "user_id": 2289983, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LG4hj.jpg?s=128&g=1", "display_name": "Damian Nadales", "link": "https://stackoverflow.com/users/2289983/damian-nadales"}, "edited": false, "score": 1, "creation_date": 1476875904, "post_id": 40110592, "comment_id": 67529569, "body": "@DamianNadales in fact you don&#39;t need coproducts for this kind of manipulation, if you use <code>FreeT</code>, which gives you room to act on the different functors separately. Here is a version using the <code>streaming</code> library (where the general <code>Stream</code> type is the same as <code>FreeT</code> )<a href=\"http://lpaste.net/281553\" rel=\"nofollow noreferrer\">lpaste.net/281553</a>"}, {"owner": {"reputation": 4424, "user_id": 34996, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ca2e2c3442a73f84394abb35d6236b12?s=128&d=identicon&r=PG", "display_name": "Magnus", "link": "https://stackoverflow.com/users/34996/magnus"}, "edited": false, "score": 1, "creation_date": 1476877476, "post_id": 40110592, "comment_id": 67530759, "body": "I walked through this for my own sake, but without the use of co-product (sum), instead I rolled my own: <a href=\"http://therning.org/magnus/posts/2016-06-18-free--take-2.html\" rel=\"nofollow noreferrer\">therning.org/magnus/posts/2016-06-18-free--take-2.html</a>"}, {"owner": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "reply_to_user": {"reputation": 4424, "user_id": 34996, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ca2e2c3442a73f84394abb35d6236b12?s=128&d=identicon&r=PG", "display_name": "Magnus", "link": "https://stackoverflow.com/users/34996/magnus"}, "edited": false, "score": 0, "creation_date": 1476885175, "post_id": 40110592, "comment_id": 67536568, "body": "@Magnus right, here is a version that dispenses with coproducts <a href=\"http://lpaste.net/281889\" rel=\"nofollow noreferrer\">lpaste.net/281889</a> You can toggle back and forth between the coproduct view and the other (more natural?) view of decoration with <a href=\"http://hackage.haskell.org/package/streaming-0.1.4.3/docs/Streaming.html#v:separate\" rel=\"nofollow noreferrer\">separate</a> and unseparate. Note that these compose so <code>separate . separate</code> disaggregates a <code>Sum (Sum f g) h)</code> so that f can be acted on separately, and so on."}], "tags": [], "owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "is_accepted": true, "score": 6, "last_activity_date": 1476805468, "last_edit_date": 1476805468, "creation_date": 1476799962, "answer_id": 40110592, "question_id": 40105759, "link": "https://stackoverflow.com/questions/40105759/logging-using-the-free-monad/40110592#40110592", "title": "Logging using the free monad", "body": "<p>Logging is a classic use-case for the decorator pattern.</p>\n\n<p>The trick is to interpret the program in a context which has access to both the logging effects and some base effect. The instructions in such a monad would <em>either</em> be logging instructions <em>or</em> instructions from the base functor. Here's the <em>functor coproduct</em>, which is basically \"<code>Either</code> for functors\".</p>\n\n<pre><code>data (f :+: g) a = L (f a) | R (g a) deriving Functor\n</code></pre>\n\n<p>We need to be able to inject programs from a base free monad into the free monad of a coproduct functor.</p>\n\n<pre><code>liftL :: (Functor f, Functor g) =&gt; Free f a -&gt; Free (f :+: g) a\nliftL = hoistFree L\nliftR :: (Functor f, Functor g) =&gt; Free g a -&gt; Free (f :+: g) a\nliftR = hoistFree R\n</code></pre>\n\n<p>Now we have enough structure to write the logging interpreter as a decorator around some other interpreter. <code>decorateLog</code> interleaves logging instructions with instructions from an arbitrary free monad, delegating interpretation to a function <code>CloudFiles f a -&gt; Free f a</code>.</p>\n\n<pre><code>-- given log :: Level -&gt; String -&gt; Free LogF ()\n\ndecorateLog :: Functor f =&gt; (CloudFilesF a -&gt; Free f a) -&gt; CloudFilesF a -&gt; Free (LogF :+: f) a\ndecorateLog interp inst@(SaveFile _ _ _) = do\n    liftL $ log Info \"Saving\"\n    x &lt;- liftR $ interp inst\n    liftL $ log Info \"Saved\"\n    return x\ndecorateLog interp inst@(ListFiles _ _) = do\n    liftL $ log Info \"Listing files\"\n    x &lt;- liftR $ interp inst\n    liftL $ log Info \"Listed files\"\n    return x\n</code></pre>\n\n<p>So <code>decorateLog interpretCloudWithRest :: CloudFilesF a -&gt; Free (LogF :+: RestF) a</code> is an interpreter which spits out a program whose instruction set consists of instructions from <code>LogF</code> and <code>RestF</code>.</p>\n\n<p>Now all we need to do is write an interpreter <code>(LogF :+: RestF) a -&gt; IO a</code>, which we'll build out of <code>interpLogIO :: LogF a -&gt; IO a</code> and <code>interpRestIO :: RestF a -&gt; IO a</code>.</p>\n\n<pre><code>elim :: (f a -&gt; b) -&gt; (g a -&gt; b) -&gt; (f :+: g) a -&gt; b\nelim l r (L x) = l x\nelim l r (R y) = r y\n\ninterpLogRestIO :: (LogF :+: RestF) a -&gt; IO a\ninterpLogRestIO = elim interpLogIO interpRestIO\n</code></pre>\n\n<p>So <code>foldFree interpLogRestIO :: Free (LogF :+: RestF) a -&gt; IO a</code> will run the output of <code>decorateLog interpretCloudWithRest</code> in the <code>IO</code> monad. The whole compiler is written as <code>foldFree interpLogRestIO . foldFree (decorateLog interpretCloudWithRest) :: Free CloudFilesF a -&gt; IO a</code>.</p>\n\n<p>In his article, de Goes goes (ha ha) a step further and builds this coproduct infrastructure using <a href=\"https://hackage.haskell.org/package/lens-4.15.1/docs/Control-Lens-Prism.html\">prisms</a>. This makes it simpler to abstract over the instruction set.</p>\n\n<p>The USP of the <a href=\"https://hackage.haskell.org/package/extensible-effects\"><code>extensible-effects</code></a> library is that it automates all this wrangling with functor coproducts for you. If you're set on pursuing the free monad route (personally, I'm not as smitten with it as de Goes is) then I'd recommend using <code>extensible-effects</code> rather than rolling your own effect system.</p>\n"}], "owner": {"reputation": 4593, "user_id": 2289983, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LG4hj.jpg?s=128&g=1", "display_name": "Damian Nadales", "link": "https://stackoverflow.com/users/2289983/damian-nadales"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 663, "favorite_count": 3, "accepted_answer_id": 40110592, "answer_count": 1, "score": 8, "last_activity_date": 1476805468, "creation_date": 1476786405, "question_id": 40105759, "link": "https://stackoverflow.com/questions/40105759/logging-using-the-free-monad", "title": "Logging using the free monad", "body": "<p>This question is related to <a href=\"http://degoes.net/articles/modern-fp\">this article</a> </p>\n\n<p>The idea is to define a DSL for manipulating files in the cloud, and define a\ncomposition of interpreters that take care of the different aspects, such as\ncommunication with the REST interface and logging.</p>\n\n<p>To make this more concrete, assume we have the following data structure that\ndefines the terms of the DSL.</p>\n\n<pre><code>data CloudFilesF a\n= SaveFile Path Bytes a\n| ListFiles Path ([Path] -&gt; a)\nderiving Functor\n</code></pre>\n\n<p>We define functions to build CloudFiles programs as follows:</p>\n\n<pre><code>saveFile :: Path -&gt; Bytes -&gt; Free CloudFilesF ()\nsaveFile path bytes = liftF $ SaveFile path bytes ()\n\nlistFiles :: Path -&gt; Free CloudFilesF [Path]\nlistFiles path = liftF $ ListFiles path id\n</code></pre>\n\n<p>Then the idea is to interpret this in terms of two other DSL's:</p>\n\n<pre><code>data RestF a = Get Path (Bytes -&gt; a)\n         | Put Path Bytes (Bytes -&gt; a)\n         deriving Functor\n\ndata Level = Debug | Info | Warning | Error deriving Show\ndata LogF a = Log Level String a deriving Functor\n</code></pre>\n\n<p>I managed to define a natural transformation from the CloudFiles DSL to the\nREST DSL with the following type:</p>\n\n<pre><code>interpretCloudWithRest :: CloudFilesF a -&gt; Free RestF a\n</code></pre>\n\n<p>Then given a program of the form:</p>\n\n<pre><code>sampleCloudFilesProgram :: Free CloudFilesF ()\nsampleCloudFilesProgram = do\n  saveFile \"/myfolder/pepino\" \"verde\"\n  saveFile \"/myfolder/tomate\" \"rojo\"\n  _ &lt;- listFiles \"/myfolder\"\n  return ()\n</code></pre>\n\n<p>It is possible to interpret the program using REST calls as follows:</p>\n\n<pre><code>runSampleCloudProgram =\n  interpretRest $ foldFree interpretCloudWithRest sampleCloudFilesProgram\n</code></pre>\n\n<p>The problem comes when trying to define an interpretation of the DSL using\nlogging. In the article I referred above, the author defines an interpreter\nwith type:</p>\n\n<pre><code>logCloudFilesI :: forall a. CloudFilesF a -&gt; Free LogF ()\n</code></pre>\n\n<p>and we define an interpreter for <code>Free LogF a</code> having type:</p>\n\n<pre><code>interpretLog :: Free LogF a -&gt; IO ()\n</code></pre>\n\n<p>The problem is that this interpreter cannot be used in combination with\n<code>foldFree</code> as I did above. So the question is how to interpret a program in\n<code>Free CloudFilesF a</code> using the function <code>logCloudfilesI</code> and <code>interpretLog</code>\ndefined above? Basically, I'm looking to construct a function with type:</p>\n\n<pre><code>interpretDSLWithLog :: Free ClouldFilesF a -&gt; IO ()\n</code></pre>\n\n<p>I can do this with the REST DSL, but I cannot do it usng <code>logCloudfilesI</code>. </p>\n\n<p>What is the approach taken when using free monads in these situations? Note\nthat the problem seems to be the fact that for the logging case, there is no\nmeaningful value we can supply to the function in <code>ListFiles</code> to build the\ncontinuation of the program. In a <a href=\"http://degoes.net/articles/modern-fp-part-2\">second article</a>\n the author uses <code>Halt</code>, however,\nthis does not work in my <a href=\"https://github.com/capitanbatata/sandbox/blob/master/free-monads/src/CloudFiles.hs\">current implementation</a>.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 1, "creation_date": 1476787687, "post_id": 40105680, "comment_id": 67483700, "body": "Isn&#39;t  <code>MonadIO m =&gt; m Sink</code> equivalent to <code>IO Sink</code>?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 0, "creation_date": 1476788224, "post_id": 40105680, "comment_id": 67484034, "body": "@Michael I think they are equivalent, if <code>m</code> is quantified universally."}, {"owner": {"reputation": 7207, "user_id": 338846, "user_type": "registered", "accept_rate": 52, "profile_image": "https://www.gravatar.com/avatar/f1871f7b7f5b4b39d59b72dfbe42b8f5?s=128&d=identicon&r=PG", "display_name": "Alexey Raga", "link": "https://stackoverflow.com/users/338846/alexey-raga"}, "edited": false, "score": 0, "creation_date": 1476789147, "post_id": 40105680, "comment_id": 67484628, "body": "Not really an equivalent, I have my own monad which is MonadIO. Also I wanted to have more constraints, for example <code>(MonadIO m, MonadState MyState m) =&gt; ...</code>"}, {"owner": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 0, "creation_date": 1476792336, "post_id": 40105680, "comment_id": 67486792, "body": "@AlexeyRaga yes, but you won&#39;t be able to construct a <code>Sink</code> or <code>SinkBuilder</code> by wrapping things from your own monad, or am I confused? They can only be constructed by using <code>liftIO</code> and general monad operations, which is to say, they just replicate <code>IO</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 0, "creation_date": 1476793766, "post_id": 40105680, "comment_id": 67487780, "body": "@Michael There is a difference between <code>IO</code> and an arbitrary monad stack built on top of <code>IO</code>."}, {"owner": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 0, "creation_date": 1476795515, "post_id": 40105680, "comment_id": 67489085, "body": "Yes, but these rank-2 values can&#39;t be built with an arbitrary monad stack - only with <code>liftIO</code>, general monad operations ... and IO. I think there cannot really be an important difference between <code>SinkBuilder</code>  and (newtyped) <code>IO Sink</code> nor between <code>Sink</code> and <code>(Value -&gt; IO (), IO ())</code> ."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1476816468, "post_id": 40105680, "comment_id": 67503081, "body": "It seems you want <code>m</code> to be a parameter - <code>data Sink m = Sink (Value -&gt; m ()) (m ())</code>. In this case you could have a function e.g. <code>Monad m =&gt; SinkBuilder m -&gt; SinkBuilder m -&gt; SinkBuilder m</code>. This allows you to add the constraints whenever you need them. What made you decide to have it universally quantified in the first place?"}], "answers": [{"comments": [{"owner": {"reputation": 7207, "user_id": 338846, "user_type": "registered", "accept_rate": 52, "profile_image": "https://www.gravatar.com/avatar/f1871f7b7f5b4b39d59b72dfbe42b8f5?s=128&d=identicon&r=PG", "display_name": "Alexey Raga", "link": "https://stackoverflow.com/users/338846/alexey-raga"}, "edited": false, "score": 0, "creation_date": 1476789691, "post_id": 40106335, "comment_id": 67484954, "body": "Thanks, I&#39;ll try this. What I wanted is to have some notion of an effectful <code>Sink</code>: Something that can be opened, then I could send some values to it and the close it.  For example, I could have a Sink that writes into an XML file, a Sink that writes to a Json file, etc. I also want to be able to compose them in a way <code>Sink + Sink = Sink</code> so when I send to the result sink both (or many) files are written. The constraint here was introduced because some Sinks can be &quot;stateful&quot; in a way that they would require <code>MonadState S m =&gt;</code> constraint. I just don&#39;t know how to model it better..."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 0, "last_activity_date": 1476788156, "creation_date": 1476788156, "answer_id": 40106335, "question_id": 40105680, "link": "https://stackoverflow.com/questions/40105680/haskell-record-function-constraints/40106335#40106335", "title": "Haskell Record function constraints", "body": "<p>This compiles, but I have no clear idea about what you really want to do. I fear that this is not what you want.</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables, RankNTypes #-}\n\nimport Control.Monad.Trans\n\ntype Value = Int\n\ndata SinkBuilder = SB\n  { openSink :: forall m. MonadIO m =&gt; m Sink\n  }\n\ndata Sink = Sink\n  { writeSink :: forall m. MonadIO m =&gt; Value -&gt; m ()\n  , closeSink :: forall m. MonadIO m =&gt; m ()\n  }\n\n(#+#) :: SinkBuilder -&gt; SinkBuilder -&gt; SinkBuilder\na #+# b = SB $ do\n  sa &lt;- openSink a\n  sb &lt;- openSink b\n  return $ Sink (\\v -&gt; writeSink sa v &gt;&gt; writeSink sb v) (closeSink sa &gt;&gt; closeSink sb)\n</code></pre>\n"}], "owner": {"reputation": 7207, "user_id": 338846, "user_type": "registered", "accept_rate": 52, "profile_image": "https://www.gravatar.com/avatar/f1871f7b7f5b4b39d59b72dfbe42b8f5?s=128&d=identicon&r=PG", "display_name": "Alexey Raga", "link": "https://stackoverflow.com/users/338846/alexey-raga"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 269, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1476788156, "creation_date": 1476786182, "question_id": 40105680, "link": "https://stackoverflow.com/questions/40105680/haskell-record-function-constraints", "title": "Haskell Record function constraints", "body": "<p>What is the way in Haskell to express something like:</p>\n\n<pre><code>data SinkBuilder\n  { openSink :: MonadIO m =&gt; m Sink\n  }\n\ndata Sink = Sink\n  { writeSink :: MonadIO m =&gt; Value -&gt; m ()\n  , closeSink :: MonadIO m =&gt; m ()\n  }\n</code></pre>\n\n<p>I guess what I need is a set of functions that are conveniently \"bundled\" together in a data type so this datatype is created and is passed around as one thing?</p>\n\n<p>It seems useful for composition reasons, for example, I could implement something like</p>\n\n<pre><code>(:+:) :: SinkBuilder -&gt; SinkBuilder -&gt; SinkBuilder\na :+: b = SinkBuilder $ do\n  sa &lt;- openSink a\n  sb &lt;- openSink b\n  return $ Sink (\\v -&gt; writeSink sa &gt;&gt; writeSink sb) (closeSink sa &gt;&gt; closeSink sb)\n</code></pre>\n\n<p>It doesn't work because I can't have constraints on record functions, but it also looks very ugly, so I am pretty sure there should be a much better way of doing it.</p>\n"}, {"tags": ["haskell", "haskell-stack"], "comments": [{"owner": {"reputation": 68390, "user_id": 55246, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/c25ae0f8b2c34d0766717abab05b2efb?s=128&d=identicon&r=PG", "display_name": "Sridhar Ratnakumar", "link": "https://stackoverflow.com/users/55246/sridhar-ratnakumar"}, "edited": false, "score": 2, "creation_date": 1476784906, "post_id": 40103443, "comment_id": 67481967, "body": "What is the full log? Also see <a href=\"http://stackoverflow.com/questions/26098486/failed-to-install-haskell-src-exts-1-16-0-on-osx-10-9-5\" title=\"failed to install haskell src exts 1 16 0 on osx 10 9 5\">stackoverflow.com/questions/26098486/&hellip;</a>"}, {"owner": {"reputation": 45, "user_id": 4822979, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-EQ_Ry8zb5pY/AAAAAAAAAAI/AAAAAAAAABQ/LTmpCmWLolA/photo.jpg?sz=128", "display_name": "\u5f20\u667a\u57ce", "link": "https://stackoverflow.com/users/4822979/%e5%bc%a0%e6%99%ba%e5%9f%8e"}, "reply_to_user": {"reputation": 68390, "user_id": 55246, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/c25ae0f8b2c34d0766717abab05b2efb?s=128&d=identicon&r=PG", "display_name": "Sridhar Ratnakumar", "link": "https://stackoverflow.com/users/55246/sridhar-ratnakumar"}, "edited": false, "score": 2, "creation_date": 1476868274, "post_id": 40103443, "comment_id": 67523788, "body": "@Sridhar Ratnakumar  yes,you re right ,i install and update happy and the problem solved"}], "owner": {"reputation": 45, "user_id": 4822979, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-EQ_Ry8zb5pY/AAAAAAAAAAI/AAAAAAAAABQ/LTmpCmWLolA/photo.jpg?sz=128", "display_name": "\u5f20\u667a\u57ce", "link": "https://stackoverflow.com/users/4822979/%e5%bc%a0%e6%99%ba%e5%9f%8e"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1193, "favorite_count": 1, "answer_count": 0, "score": 3, "last_activity_date": 1483465615, "creation_date": 1476779943, "last_edit_date": 1483465615, "question_id": 40103443, "link": "https://stackoverflow.com/questions/40103443/stack-install-hlint-ghc-mod-fails", "title": "stack install hlint ghc-mod fails", "body": "<p>i wanted to build a haskell enviroment using stack ,and it's ok when \"stack setup\" to install the ghc8 but i failed when i run cmd \"stack install hlint ghc-mod \" ps: i read the article  from <a href=\"http://www.stephendiehl.com/posts/vim_2016.html\" rel=\"nofollow\">http://www.stephendiehl.com/posts/vim_2016.html</a></p>\n\n<p>the error log:  </p>\n\n<pre><code>While building package haskell-src-exts-1.17.1 using:\n  /root/.stack/setup-exe-cache/x86_64-linux/setup-Simple-Cabal-1.24.0.0-ghc-8.0.1 --builddir=.stack-work/dist/x86_64-linux/Cabal-1.24.0.0 build --ghc-options \" -ddump-hi -ddump-to-file\"\nProcess exited with code: ExitFailure (-11)\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1476781999, "post_id": 40103157, "comment_id": 67479955, "body": "Note that <code>Just &#39;a&#39;</code> is nto a type, but a value. As such it has no kind <code>*</code>, but a type <code>Maybe Char</code>. Indeed, as you wrote below, you are confusing the type constructor <code>Frank :: * -&gt; (*-&gt;*) -&gt; *</code> with the value constructor <code>Frank :: b a -&gt; Frank a b</code>."}], "answers": [{"tags": [], "owner": {"reputation": 84, "user_id": 6011503, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2fed13a3f6da431b48ab3c0985e370b?s=128&d=identicon&r=PG&f=1", "display_name": "wei li", "link": "https://stackoverflow.com/users/6011503/wei-li"}, "is_accepted": false, "score": 0, "last_activity_date": 1476779333, "creation_date": 1476779333, "answer_id": 40103249, "question_id": 40103157, "link": "https://stackoverflow.com/questions/40103157/haskell-function-implementation-depends-on-kind/40103249#40103249", "title": "Haskell function implementation depends on kind?", "body": "<p>Oh, i get it,</p>\n\n<pre><code> Frank a b \n</code></pre>\n\n<p>is type constructor, value constructor is </p>\n\n<pre><code> Frank {frankField :: b a}\n</code></pre>\n\n<p>so  </p>\n\n<pre><code> tofu (Just 'a') = Frank {frankField = Just 'a'}   \n</code></pre>\n\n<p>kind type match and replace model work.</p>\n"}], "owner": {"reputation": 84, "user_id": 6011503, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2fed13a3f6da431b48ab3c0985e370b?s=128&d=identicon&r=PG&f=1", "display_name": "wei li", "link": "https://stackoverflow.com/users/6011503/wei-li"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 61, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1476779333, "creation_date": 1476778997, "question_id": 40103157, "link": "https://stackoverflow.com/questions/40103157/haskell-function-implementation-depends-on-kind", "title": "Haskell function implementation depends on kind?", "body": "<p>I'm reading a haskell tutorial, when reading type system kind part, i can't use replacement model to figure out function execute.</p>\n\n<pre><code>class Tofu t where\n   tofu :: j a -&gt; t a j\n\ndata Frank a b = Frank {frankField :: b a} deriving (Show)\n\ninstance Tofu Frank where\n  tofu = Frank\n</code></pre>\n\n<p>I can understand j has type * -> *, t has type * -> (* -> *) -> *, and Frank kind is * -> (* -> *) -> *, match t, so can instance Tofu Frank, but tofu implementation let me confuse, if i do like this</p>\n\n<pre><code>tofu (Just 'a') :: Frank Char Maybe \n</code></pre>\n\n<p>(Just 'a') kind is *, Just is * -> *, match j a, i use replace model, Frank (Just 'a'), not make sense, Frank should get a * and a <em>-></em>, but if like this, should be Frank 'a' Just, make sense but syntax error, i want to know how this archive make replacement model work and syntax check.</p>\n"}, {"tags": ["haskell", "haskell-stack"], "comments": [{"owner": {"reputation": 3231, "user_id": 1013393, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7bca51e5ae3eb8dc24a98616b4e5d6fd?s=128&d=identicon&r=PG", "display_name": "sjakobi", "link": "https://stackoverflow.com/users/1013393/sjakobi"}, "edited": false, "score": 0, "creation_date": 1476795114, "post_id": 40102232, "comment_id": 67488756, "body": "Looks like a bug to me. Please open an issue at <a href=\"https://github.com/commercialhaskell/stack/issues\" rel=\"nofollow noreferrer\">github.com/commercialhaskell/stack/issues</a>, ideally with a project that the bug can reproduced with!"}], "answers": [{"comments": [{"owner": {"reputation": 2957, "user_id": 280050, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/141e8429e4dd4386a8d3a952f02f52e7?s=128&d=identicon&r=PG", "display_name": "Zachary K", "link": "https://stackoverflow.com/users/280050/zachary-k"}, "edited": false, "score": 0, "creation_date": 1476854286, "post_id": 40117985, "comment_id": 67515827, "body": "that was the problem, good to know that the error msg has been fixed"}], "tags": [], "owner": {"reputation": 3075, "user_id": 1164871, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d6a54a3752ab47170d790085935988f?s=128&d=identicon&r=PG", "display_name": "mgsloan", "link": "https://stackoverflow.com/users/1164871/mgsloan"}, "is_accepted": true, "score": 2, "last_activity_date": 1476824408, "creation_date": 1476824408, "answer_id": 40117985, "question_id": 40102232, "link": "https://stackoverflow.com/questions/40102232/haskell-stack-fails-to-build-with-a-blank-error-message/40117985#40117985", "title": "Haskell Stack fails to build with a blank error message", "body": "<p>This is likely due to cyclic dependencies.  The error message has been fixed in the unreleased version of stack - see <a href=\"https://github.com/commercialhaskell/stack/issues/2583\" rel=\"nofollow\">https://github.com/commercialhaskell/stack/issues/2583</a></p>\n"}], "owner": {"reputation": 2957, "user_id": 280050, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/141e8429e4dd4386a8d3a952f02f52e7?s=128&d=identicon&r=PG", "display_name": "Zachary K", "link": "https://stackoverflow.com/users/280050/zachary-k"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 110, "favorite_count": 0, "accepted_answer_id": 40117985, "answer_count": 1, "score": 3, "last_activity_date": 1476824408, "creation_date": 1476776178, "last_edit_date": 1476776371, "question_id": 40102232, "link": "https://stackoverflow.com/questions/40102232/haskell-stack-fails-to-build-with-a-blank-error-message", "title": "Haskell Stack fails to build with a blank error message", "body": "<p>I am getting this error when trying to build a project in haskell stack. This is a mid-sized project with a number of packages. My best guess for what is causing the problem is that some of the packages have circular dependencies, but that is a guess. </p>\n\n<pre><code>stack --stack-yaml stacks/ghc/stack.yaml install\n\nWhile constructing the build plan, the following exceptions were encountered:\n\n\nPlan construction failed.\n</code></pre>\n"}, {"tags": ["function", "haskell"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 2, "creation_date": 1476772320, "post_id": 40100990, "comment_id": 67474118, "body": "You cannot match on functions."}, {"owner": {"reputation": 84731, "user_id": 510937, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/70b13a9ae1aae1ca1aa6ac8dab4643f2?s=128&d=identicon&r=PG", "display_name": "Bakuriu", "link": "https://stackoverflow.com/users/510937/bakuriu"}, "edited": false, "score": 2, "creation_date": 1476772945, "post_id": 40100990, "comment_id": 67474416, "body": "It doesn&#39;t compare types. The <code>(^)</code> simply gives the name <code>^</code> to the argument, it does <b>not</b> pattern match to see if the argument passed to the function is the function <code>^</code>! In the same way you can write <code>plus (-) (*) = (+) (-) (*)</code> and this is just the same as writing <code>plus x y = (+) x y</code> but using fancy names for <code>x</code> and <code>y</code>."}, {"owner": {"reputation": 51, "user_id": 6119097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8bfbe75e7587c5468a1f58dfab95bc0d?s=128&d=identicon&r=PG&f=1", "display_name": "Tom&#225;\u0161 Korec", "link": "https://stackoverflow.com/users/6119097/tom%c3%a1%c5%a1-korec"}, "edited": false, "score": 0, "creation_date": 1476779790, "post_id": 40100990, "comment_id": 67478555, "body": "Thank you. Is there any way to compare functions? I need to decide which operator has a bigger priority."}, {"owner": {"reputation": 12941, "user_id": 292731, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/e3f90adedab79538799e2375a9731920?s=128&d=identicon&r=PG", "display_name": "Justin L.", "link": "https://stackoverflow.com/users/292731/justin-l"}, "edited": false, "score": 0, "creation_date": 1476812909, "post_id": 40100990, "comment_id": 67501079, "body": "functions can&#39;t be compared for equality in Haskell, but you can define a custom data type that represents your functions:"}, {"owner": {"reputation": 12941, "user_id": 292731, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/e3f90adedab79538799e2375a9731920?s=128&d=identicon&r=PG", "display_name": "Justin L.", "link": "https://stackoverflow.com/users/292731/justin-l"}, "edited": false, "score": 1, "creation_date": 1476812947, "post_id": 40100990, "comment_id": 67501101, "body": "data MyOps = Exponential | Multiply | Divide | Add, etc."}], "owner": {"reputation": 51, "user_id": 6119097, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8bfbe75e7587c5468a1f58dfab95bc0d?s=128&d=identicon&r=PG&f=1", "display_name": "Tom&#225;\u0161 Korec", "link": "https://stackoverflow.com/users/6119097/tom%c3%a1%c5%a1-korec"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 40, "favorite_count": 0, "closed_date": 1476773092, "answer_count": 0, "score": 0, "last_activity_date": 1476772621, "creation_date": 1476771995, "last_edit_date": 1476772621, "question_id": 40100990, "link": "https://stackoverflow.com/questions/40100990/how-to-create-matching-pattern-on-a-pair-of-functions-in-haskell", "closed_reason": "Duplicate", "title": "How to create matching pattern on a pair of functions in haskell", "body": "<p>I have a problem because this code below isn't working. I think it compares types, so it will always return 'a' for my functions which I want to compare. How can I fix it please? Is there any function pattern that differs functions by name?</p>\n\n<pre><code>leftHasPriority :: (a-&gt;b-&gt;c) -&gt; (e-&gt;f-&gt;g) -&gt; Char\nleftHasPriority _ (^) = 'a'\nleftHasPriority (^) _ = 'b'\nleftHasPriority (*) _ = 'c'\nleftHasPriority (div) _ = 'd'\nleftHasPriority _ (*) = 'e'\nleftHasPriority _ (div) = 'f'\nleftHasPriority _ _ = 'g'\n</code></pre>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 3, "last_activity_date": 1476768910, "last_edit_date": 1476768910, "creation_date": 1476767103, "answer_id": 40099928, "question_id": 40099927, "link": "https://stackoverflow.com/questions/40099927/how-do-i-define-an-anonymous-recursive-function/40099928#40099928", "title": "How do I define an anonymous recursive function?", "body": "<p>Import <code>Data.Function</code> and use the <code>fix</code> function to compute the fixed point of a <em>non</em>-recursive function that takes the function to apply recursively as an argument</p>\n\n<pre><code>&gt; import Data.Function\n&gt; :t fix\nfix :: (a -&gt; a) -&gt; a\n&gt; apply (fix $ \\f n -&gt; if n == 0 then 1 else n * f (n - 1)) 3\n6\n</code></pre>\n"}], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 287, "favorite_count": 0, "closed_date": 1476768276, "answer_count": 1, "score": 1, "last_activity_date": 1476768910, "creation_date": 1476767103, "question_id": 40099927, "link": "https://stackoverflow.com/questions/40099927/how-do-i-define-an-anonymous-recursive-function", "closed_reason": "Duplicate", "title": "How do I define an anonymous recursive function?", "body": "<p>One can define an anonymous function with a lambda expression:</p>\n\n<pre><code>-- Contrived example\n&gt; apply f x = f x\n&gt; apply (\\n -&gt; n + 1) 3\n4\n</code></pre>\n\n<p>but is it possible to define an anonymous <em>recursive</em> function?</p>\n\n<pre><code>&gt; apply (\\n -&gt; n * ??? (n - 1)) 3 -- compute a factorial\n6\n</code></pre>\n"}, {"tags": ["haskell", "compiler-errors", "ghci"], "comments": [{"owner": {"reputation": 14485, "user_id": 190376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd8280c5e1491b8cf55760750ed97dec?s=128&d=identicon&r=PG", "display_name": "Reid Barton", "link": "https://stackoverflow.com/users/190376/reid-barton"}, "edited": false, "score": 2, "creation_date": 1476764814, "post_id": 40099418, "comment_id": 67471246, "body": "Use the compiler&#39;s suggested fix."}], "answers": [{"comments": [{"owner": {"reputation": 14485, "user_id": 190376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd8280c5e1491b8cf55760750ed97dec?s=128&d=identicon&r=PG", "display_name": "Reid Barton", "link": "https://stackoverflow.com/users/190376/reid-barton"}, "edited": false, "score": 1, "creation_date": 1476764918, "post_id": 40099497, "comment_id": 67471270, "body": "The assumption is true according to Haskell 2010 though. GHC decided to change it a few versions ago."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 14485, "user_id": 190376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd8280c5e1491b8cf55760750ed97dec?s=128&d=identicon&r=PG", "display_name": "Reid Barton", "link": "https://stackoverflow.com/users/190376/reid-barton"}, "edited": false, "score": 0, "creation_date": 1476765143, "post_id": 40099497, "comment_id": 67471318, "body": "Makes sense; the 5 &quot;built-in&quot; types <code>Word</code>, <code>Integer</code>, <code>Int</code>, <code>Float</code>, and <code>Double</code> that have a <code>Num</code> instance all have an <code>Eq</code> instance as well, and I can&#39;t really think of an example of a type for which you would only want a <code>Num</code> instance."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 14485, "user_id": 190376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd8280c5e1491b8cf55760750ed97dec?s=128&d=identicon&r=PG", "display_name": "Reid Barton", "link": "https://stackoverflow.com/users/190376/reid-barton"}, "edited": false, "score": 0, "creation_date": 1476766449, "post_id": 40099497, "comment_id": 67471711, "body": "I&#39;d love to expand my answer, but I can&#39;t seem to load haskell.org from my computer, and it appears to be some obscure certificate-expired problem that I can&#39;t debug right now. Is there any reason why GHC changed that?"}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 1, "last_activity_date": 1476764759, "creation_date": 1476764759, "answer_id": 40099497, "question_id": 40099418, "link": "https://stackoverflow.com/questions/40099418/simple-haskell-factorial-function-not-compiling/40099497#40099497", "title": "Simple Haskell Factorial Function not compiling", "body": "<p>Your assumption that a type that is an instance of <code>Num</code> must also be an instance of <code>Eq</code> is false. Consider the inferred type for your function:</p>\n\n<pre><code>&gt; fact 0 = 1; fact n = n * fact (n - 1)\n&gt; :t fact\nfact :: (Num t, Eq t) =&gt; t -&gt; t\n</code></pre>\n\n<p>To be an instance of <code>Num</code>, a type need only define the following functions:</p>\n\n<ul>\n<li><code>(+)</code></li>\n<li><code>(*)</code></li>\n<li><code>abs</code></li>\n<li><code>signum</code></li>\n<li><code>fromInteger</code></li>\n<li><em>either</em> <code>negate</code> or <code>(-)</code></li>\n</ul>\n"}], "owner": {"reputation": 337, "user_id": 4807549, "user_type": "registered", "accept_rate": 46, "profile_image": "https://lh3.googleusercontent.com/-zRbnN_A_wy0/AAAAAAAAAAI/AAAAAAAAAB0/1IyAlZ4V9jY/photo.jpg?sz=128", "display_name": "Avi Caspe", "link": "https://stackoverflow.com/users/4807549/avi-caspe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 131, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1476764759, "creation_date": 1476764211, "question_id": 40099418, "link": "https://stackoverflow.com/questions/40099418/simple-haskell-factorial-function-not-compiling", "title": "Simple Haskell Factorial Function not compiling", "body": "<p>So I have this simple Haskell function:</p>\n\n<pre><code>fact :: (Num a) =&gt; a -&gt; a\nfact 0 = 1\nfact n = n * fact (n - 1)\n</code></pre>\n\n<p>and when I try to compile it with GHCi, I get an error:</p>\n\n<pre><code>test.hs:2:6: error:\n    \u2022 Could not deduce (Eq a) arising from the literal \u20180\u2019\n      from the context: Num a\n        bound by the type signature for:\n                   fact :: Num a =&gt; a -&gt; a\n        at test.hs:1:1-25\n      Possible fix:\n        add (Eq a) to the context of\n          the type signature for:\n            fact :: Num a =&gt; a -&gt; a\n    \u2022 In the pattern: 0\n      In an equation for \u2018fact\u2019: fact 0 = 1\nFailed, modules loaded: none.\n</code></pre>\n\n<p>Look, I know that better way to write this function exist, but I don't care. I just want to get this function to compile. I can't do that though. It was my impression that if something was a number, it must be an instance of Eq a, and therefore the compiler's suggestion of a possible fix is wrong. </p>\n\n<p>How can I get this code to compile?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1476746636, "post_id": 40097116, "comment_id": 67466972, "body": "So you want permutations not combinations, right? Your function name seems to indicate the latter, but your example is definitely the former."}, {"owner": {"reputation": 11693, "user_id": 858962, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/5f16ec0395b1710fd529b01602de66ca?s=128&d=identicon&r=PG", "display_name": "dopatraman", "link": "https://stackoverflow.com/users/858962/dopatraman"}, "reply_to_user": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1476747061, "post_id": 40097116, "comment_id": 67467095, "body": "youre right, changed the questions."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 3, "creation_date": 1476758502, "post_id": 40097859, "comment_id": 67469789, "body": "The source of that particular function is <i>not simple</i>. Its mechanism is the subject of <a href=\"http://stackoverflow.com/questions/24484348/what-does-this-list-permutations-implementation-in-haskell-exactly-do\">this question</a>, answered by the author of the code in question."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 1, "last_activity_date": 1476752060, "creation_date": 1476752060, "answer_id": 40097859, "question_id": 40097116, "link": "https://stackoverflow.com/questions/40097116/get-all-permutations-of-a-list-in-haskell/40097859#40097859", "title": "Get all permutations of a list in Haskell", "body": "<p>It's already in the standard <a href=\"https://hackage.haskell.org/package/base-4.9.0.0/docs/Data-List.html#v:permutations\" rel=\"nofollow\">base</a> library, so no need to struggle. If you really want to see how to do it, you can look at the source of that library.</p>\n"}, {"tags": [], "owner": {"reputation": 1556, "user_id": 1392943, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/606e0a60eca298e29ce56b5544de4950?s=128&d=identicon&r=PG&f=1", "display_name": "Kamel", "link": "https://stackoverflow.com/users/1392943/kamel"}, "is_accepted": false, "score": 10, "last_activity_date": 1476764170, "last_edit_date": 1495540025, "creation_date": 1476764170, "answer_id": 40099411, "question_id": 40097116, "link": "https://stackoverflow.com/questions/40097116/get-all-permutations-of-a-list-in-haskell/40099411#40099411", "title": "Get all permutations of a list in Haskell", "body": "<p>For a simple implementation without considering duplications in the input</p>\n\n<pre><code>permutations :: Eq a =&gt; [a] -&gt; [[a]]\npermutations [] = [[]]\npermutations as = do a &lt;- as\n                     let l = delete a as\n                     ls &lt;- permutations l\n                     return $ a : ls\n</code></pre>\n\n<p>Test:</p>\n\n<pre><code>\u03bb&gt; permutations [1,2,3]\n[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\n\u03bb&gt; permutations \"abc\"\n[\"abc\",\"acb\",\"bac\",\"bca\",\"cab\",\"cba\"]\n\u03bb&gt; \n</code></pre>\n\n<p><a href=\"https://stackoverflow.com/questions/2710713/algorithm-to-generate-all-possible-permutations-of-a-list\">Algorithm Reference</a></p>\n"}, {"comments": [{"owner": {"reputation": 1706, "user_id": 1840613, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2dfd4d21060ccd9b972864e0f6cb8c4?s=128&d=identicon&r=PG", "display_name": "Jeremy List", "link": "https://stackoverflow.com/users/1840613/jeremy-list"}, "edited": false, "score": 0, "creation_date": 1476855338, "post_id": 40102884, "comment_id": 67516197, "body": "My one is the same idea just the other way round: the helper function takes one list and returns a list of all the ways you can extract one element."}], "tags": [], "owner": {"reputation": 922, "user_id": 4094574, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4AcNf.png?s=128&g=1", "display_name": "Alexey Birukov", "link": "https://stackoverflow.com/users/4094574/alexey-birukov"}, "is_accepted": false, "score": 3, "last_activity_date": 1476778164, "creation_date": 1476778164, "answer_id": 40102884, "question_id": 40097116, "link": "https://stackoverflow.com/questions/40097116/get-all-permutations-of-a-list-in-haskell/40102884#40102884", "title": "Get all permutations of a list in Haskell", "body": "<p>Everything is better with monads:</p>\n\n<pre><code>perm :: [a] -&gt; [[a]]\nperm []     = return []\nperm (x:xs) = (perm xs) &gt;&gt;= (ins x)\n    where\n    ins :: a -&gt; [a] -&gt; [[a]]\n    ins x []     = [[x]]\n    ins x (y:ys) = [x:y:ys] ++ ( map (y:) (ins x ys) )\n</code></pre>\n\n<p>So: you have a function, that inserts letter in a word, but it produces more then one word, so how to apply it recursively? <code>&gt;&gt;=</code> helps!</p>\n"}, {"tags": [], "owner": {"reputation": 1706, "user_id": 1840613, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2dfd4d21060ccd9b972864e0f6cb8c4?s=128&d=identicon&r=PG", "display_name": "Jeremy List", "link": "https://stackoverflow.com/users/1840613/jeremy-list"}, "is_accepted": false, "score": 1, "last_activity_date": 1476849801, "creation_date": 1476849801, "answer_id": 40121908, "question_id": 40097116, "link": "https://stackoverflow.com/questions/40097116/get-all-permutations-of-a-list-in-haskell/40121908#40121908", "title": "Get all permutations of a list in Haskell", "body": "<p>I'd do it like this:</p>\n\n<pre><code>select :: [a] -&gt; [(a,[a])]\nselect = select' id where\n  select' _ [] = []\n  select' acc (a:r) = (a, acc r) : select' (acc . (a:)) r\n\npermutations [] = [[]]\npermutations l = do\n  (a,r1) &lt;- select l\n  r2 &lt;- permutations r1\n  return (a: r2)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1581614515, "post_id": 43507769, "comment_id": 106504627, "body": "<code>rotations xs = zipWith const (iterate rotate xs) xs</code>. (also, <a href=\"https://stackoverflow.com/a/49907365/849891\">this</a>, though it&#39;s in Common Lisp)."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1581614928, "post_id": 43507769, "comment_id": 106504825, "body": "the CL code relies on surgically modifiable linked list, but it can be coded with arrays by some index juggling, I guess. In Haskell, that&#39;d be done with some STUArray copy of the input list."}, {"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1581619954, "post_id": 43507769, "comment_id": 106507127, "body": "@WillNess That <code>rotations xs = zipWith const (iterate rotate xs) xs</code> is a great idea to eliminate <code>len</code> and <code>run</code> helper function yielding a much simplified and concise code but when benched (compiled with -O or -O2) it is slower. Like 2x slower."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1581627641, "post_id": 43507769, "comment_id": 106510448, "body": "yeah I had a feeling it might. :)"}, {"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1581793355, "post_id": 43507769, "comment_id": 106557420, "body": "@Will Ness I think <code>length $ perms [1..n]</code> is not a reasonable performance metric in Haskell. See my <b><i>Further thoughts</i></b> annex above. When tested under those real world circumstances your code seems to work as fine too."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1581846451, "post_id": 43507769, "comment_id": 106566731, "body": "you could use <code>filter</code> instead of <code>any</code>, to be sure, independent of the order of the results."}, {"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1581855308, "post_id": 43507769, "comment_id": 106568582, "body": "@Will Ness Still I could not be sure if <code>any</code> or <code>filter</code> to force all the thunks in the sub arrays (individual permutation) to be resolved since while comparing two lists it only iterates until the first <code>False</code> comparison no..? So i tried <code>all</code> and <code>sum</code> to check their equity in their sum to 78 i.e. <code>sum [1..12]</code> which took a little longer but the results do not change as in <code>perms</code> and <code>permutations</code> almost resolving at the same time. As a side effect though, this interstingly <i>force</i>d me to stop being lazy and start reading Parallel and Concurrent Programming in Haskell by Simon Marlow. :)"}], "tags": [], "owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "is_accepted": false, "score": 6, "last_activity_date": 1581797731, "last_edit_date": 1581797731, "creation_date": 1492644851, "answer_id": 43507769, "question_id": 40097116, "link": "https://stackoverflow.com/questions/40097116/get-all-permutations-of-a-list-in-haskell/43507769#43507769", "title": "Get all permutations of a list in Haskell", "body": "<p><strong>TL&amp;DR For faster code than Data.List.permutations, jump to Part II</strong></p>\n\n<p><strong>Part I</strong></p>\n\n<p>I am relatively new to Haskell but <a href=\"https://stackoverflow.com/a/41068709/4543207\">I had developed a very efficient permutations algorithm for JS</a>. It  almost beats the heaps algorithm, yet in JS, rotating an array is more costly compared to lazy Haskell <code>iterate</code> function over the lists. So this one, unlike all the provided answers above seems to be much more efficient.</p>\n\n<p>The built in <code>Data.List.permutations</code> is still like 2x faster than this one as of today since i don't know the performance constraints of Haskell at all. May be someone here could help me to push this code a little forward.</p>\n\n<p>So I have a helper function which returns a list of all rotations of the provided list. Such as</p>\n\n<p><code>rotations [1,2,3]</code> would yield <code>[[1,2,3],[2,3,1],[3,1,2]]</code></p>\n\n<p>accordingly the perms function is;</p>\n\n<pre><code>rotations :: [a] -&gt; [[a]]\nrotations xs = take (length xs) (iterate (\\(y:ys) -&gt; ys ++ [y]) xs)\n\nperms :: [a] -&gt; [[a]]\nperms []     = [[]]\nperms (x:xs) = concatMap (rotations.(x:)) (perms xs)\n</code></pre>\n\n<p><strong>Part II</strong></p>\n\n<p>So i have been thinking on how to make the above code more efficient. OK the lists in Haskell are linked lists and unlike JavaScript the length is not a property that you can access in O(1) time but O(n). It's a function traversing the whole damn list, basically counting all the items in the list. Hence very expensive if used repeatedly. That happens to be what exactly we do by <code>take (length xs)</code> instruction in each invocation of the rotate function. We literally invoke it millions of times if your input list is like 10-11 items or more in length. Cutting it would yield huge savings. Then lets not make it calculate the length of the same length lists over an over but instead let's simply provide it like;</p>\n\n<pre><code>rotations :: Int -&gt; [a] -&gt; [[a]]\nrotations len xs = take len (iterate (\\(y:ys) -&gt; ys ++ [y]) xs)\n</code></pre>\n\n<p>Beautiful. Well, now we have to slightly modify our <code>perms</code> function accordingly like;</p>\n\n<pre><code>perms :: [a] -&gt; [[a]]\nperms []        = [[]]\nperms il@(x:xs) = concatMap ((rotations len).(x:)) (perms xs)\n                  where len = length il\n</code></pre>\n\n<p>so obviously <code>il</code> is now assigned to the <strong>i</strong>nput <strong>l</strong>ist and <code>len</code> caches it's length. Now this is beautiful and quite interestingly, compared to the default <code>Data.List.permutations</code>, it runs like <strong>1.33 times faster</strong> in GHCI and <strong>3+ times faster</strong> when compiled with -O2.</p>\n\n<pre><code>import Data.List\n\nperms :: [a] -&gt; [[a]]\nperms xs = run len xs\n           where\n           len = length xs\n\n           rotate :: [a] -&gt; [a]\n           rotate (x:xs) = xs ++ [x]\n\n           rotations :: Int -&gt; [a] -&gt; [[a]]\n           rotations l xs = take l (iterate rotate xs)\n\n           run :: Int -&gt; [a] -&gt; [[a]]\n           run _ []      = [[]]\n           run _ [x]     = [[x]]\n           run n (x:xs)  = run (n-1) xs &gt;&gt;= rotations n . (x:)\n           --run n (x:xs)  = concatMap ((rotations n).(x:)) (run (n-1) xs)\n\n\u03bb&gt; length $ perms [1..13]\n6227020800\n(302.58 secs, 1,366,730,140,472 bytes)\n\n\u03bb&gt; length $ permutations [1..13]\n6227020800\n(404.38 secs, 1,800,750,142,384 bytes)\n</code></pre>\n\n<p>The thing is, if you could make the <code>rotations</code> function more efficient you can get better results alas i have done some researches but that simple code seems to be as good as it gets in Haskell.</p>\n\n<p>One other important point is, i believe this algorithm is also threadable (havent yet tested that) but it should be since if you check the <code>run n (x:xs)  = concatMap ((rotations n).(x:)) (run (n-1) xs)</code> part you may notice that we have a <code>map</code> with the <code>rotations n . (x:)</code> function over the previous set of permutations. That's exactly the place where i can spawn threads i think.</p>\n\n<p><strong>Further thoughts... <em>\"Am I really doing the right thing..?\"</em></strong></p>\n\n<p>I think i am being deceived by the laziness here. I believe doing like <code>length $ perms [1..12]</code> does not really enforce the permutations to resolve but just works up until it knows the length of the permutations list which is 12!. I mean the contained values are possibly still thunks.</p>\n\n<p>So instead of <code>length</code>, i decided to do like <code>any (== [11,1,7,2,10,3,8,4,12,5,9,6]) $ perms [1..12]</code> where <code>[11,1,7,2,10,3,8,4,12,5,9,6]</code> is the last permutation element of the <code>perms</code> algorithm. So now i guess it shall evaluate all the thunks for an equity check up until it reaches the last element to return a <code>True</code>.</p>\n\n<p>When checked like this <code>perms</code> and <code>permutations</code> with their own last elements, resolve at similar pace (<code>permutations</code> being <em>slightly</em> faster).</p>\n\n<p>Any ideas are welcome...</p>\n"}, {"tags": [], "owner": {"reputation": 5008, "user_id": 5762796, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/b3acb5c2021f4c279f29d61481b28e15?s=128&d=identicon&r=PG&f=1", "display_name": "Aleph0", "link": "https://stackoverflow.com/users/5762796/aleph0"}, "is_accepted": false, "score": 37, "last_activity_date": 1492668093, "creation_date": 1492668093, "answer_id": 43511385, "question_id": 40097116, "link": "https://stackoverflow.com/questions/40097116/get-all-permutations-of-a-list-in-haskell/43511385#43511385", "title": "Get all permutations of a list in Haskell", "body": "<p>Maybe you should use existing code:</p>\n\n<pre><code>import Data.List\npermutations [1,2,3,4]\n</code></pre>\n"}, {"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user2226112"}, "edited": false, "score": 0, "creation_date": 1534188249, "post_id": 50713099, "comment_id": 90612889, "body": "This only works if there are no duplicates in the input list. For example for input <code>abb</code> you would expect output <code>abb, bab, bba</code> but this produces <code>ab, ba</code>."}, {"owner": {"user_type": "does_not_exist", "display_name": "user2226112"}, "edited": false, "score": 1, "creation_date": 1534188592, "post_id": 50713099, "comment_id": 90613051, "body": "But you can replace <code>filter ()</code> by <code>delete a</code>."}], "tags": [], "owner": {"reputation": 61, "user_id": 7050571, "user_type": "registered", "profile_image": "https://graph.facebook.com/10206315980372962/picture?type=large", "display_name": "Matou\u0161 Dzivjak", "link": "https://stackoverflow.com/users/7050571/matou%c5%a1-dzivjak"}, "is_accepted": false, "score": 4, "last_activity_date": 1528264570, "creation_date": 1528264570, "answer_id": 50713099, "question_id": 40097116, "link": "https://stackoverflow.com/questions/40097116/get-all-permutations-of-a-list-in-haskell/50713099#50713099", "title": "Get all permutations of a list in Haskell", "body": "<p>I think that this is shorter and more elegant variant for what others are suggesting:</p>\n\n<pre><code>permutate :: (Eq a) =&gt; [a] -&gt; [[a]]\npermutate [] = [[]]\npermutate l = [a:x | a &lt;- l, x &lt;- (permutate $ filter (\\x -&gt; x /= a) l)]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 402, "user_id": 9009630, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/920657e98e40c2206e2166bba183551d?s=128&d=identicon&r=PG&f=1", "display_name": "jhu", "link": "https://stackoverflow.com/users/9009630/jhu"}, "is_accepted": false, "score": 0, "last_activity_date": 1589465381, "last_edit_date": 1589465381, "creation_date": 1589461288, "answer_id": 61798048, "question_id": 40097116, "link": "https://stackoverflow.com/questions/40097116/get-all-permutations-of-a-list-in-haskell/61798048#61798048", "title": "Get all permutations of a list in Haskell", "body": "<p>I solved this problem and then found this discussion. Here is a short solution that uses recursion. The first argument to <code>doPerm</code> contains elements eligible for any position in the permutation, the second argument elements that are only eligible for other positions than the first one.</p>\n\n<pre><code>permutations :: [a] -&gt; [[a]]\npermutations xs = doPerm xs []\n  where\n    doPerm [] _ = [[]]\n    doPerm [y] ys = (y:) &lt;$&gt; doPerm ys []\n    doPerm (y : ys) zs = doPerm [y] (ys ++ zs) ++ doPerm ys (y : zs)\n</code></pre>\n\n<p>Here is an example run:</p>\n\n<pre><code>\u03bb&gt; permutations \"abc\"\n[\"abc\",\"acb\",\"bca\",\"bac\",\"cba\",\"cab\"]\n</code></pre>\n"}], "owner": {"reputation": 11693, "user_id": 858962, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/5f16ec0395b1710fd529b01602de66ca?s=128&d=identicon&r=PG", "display_name": "dopatraman", "link": "https://stackoverflow.com/users/858962/dopatraman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 25053, "favorite_count": 4, "answer_count": 8, "score": 25, "last_activity_date": 1589465381, "creation_date": 1476746218, "last_edit_date": 1476750437, "question_id": 40097116, "link": "https://stackoverflow.com/questions/40097116/get-all-permutations-of-a-list-in-haskell", "title": "Get all permutations of a list in Haskell", "body": "<p>I'm trying to do this from scratch, without the use of a library outside the standard lib. Heres my code:</p>\n\n<pre><code>permutations :: [a] -&gt; [[a]]\npermutations (x:xs) = [x] : permutations' xs\n    where permutations' (x:xs) = (:) &lt;$&gt; [x] &lt;*&gt; split xs\n            split l = [[x] | x &lt;- l]\n</code></pre>\n\n<p>The problem is that this only produces one fork of the non-deterministic computation. Ideally I'd want</p>\n\n<pre><code>(:) &lt;$&gt; [x] &lt;*&gt; ((:) &lt;$&gt; [x] &lt;*&gt; ((:) &lt;$&gt; [x] &lt;*&gt; ((:) &lt;$&gt; [x] &lt;*&gt; xs)))\n</code></pre>\n\n<p>But I can't find a way to do this cleanly. My desired result is something like this:</p>\n\n<pre><code>permutations \"abc\" -&gt; [\"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\"]\n</code></pre>\n\n<p>How do I do this?</p>\n"}, {"tags": ["haskell", "yesod"], "answers": [{"comments": [{"owner": {"reputation": 813, "user_id": 750039, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/dd083a563230226543fcab3e1395b1fd?s=128&d=identicon&r=PG", "display_name": "amitaibu", "link": "https://stackoverflow.com/users/750039/amitaibu"}, "edited": false, "score": 1, "creation_date": 1479199833, "post_id": 40602063, "comment_id": 68445678, "body": "I understand. I thought it would be possible to have unit-tests as-well."}, {"owner": {"reputation": 3794, "user_id": 137871, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/48469162d45686615c6bf0eb4304bf26?s=128&d=identicon&r=PG", "display_name": "insitu", "link": "https://stackoverflow.com/users/137871/insitu"}, "reply_to_user": {"reputation": 813, "user_id": 750039, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/dd083a563230226543fcab3e1395b1fd?s=128&d=identicon&r=PG", "display_name": "amitaibu", "link": "https://stackoverflow.com/users/750039/amitaibu"}, "edited": false, "score": 0, "creation_date": 1479202638, "post_id": 40602063, "comment_id": 68447462, "body": "Yes. Having unit tests in this particular case would make a lot of sense I think. Or finding a way to inject a known token on the client-side so that you can check from server&#39;s response if it actually checked token"}], "tags": [], "owner": {"reputation": 3794, "user_id": 137871, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/48469162d45686615c6bf0eb4304bf26?s=128&d=identicon&r=PG", "display_name": "insitu", "link": "https://stackoverflow.com/users/137871/insitu"}, "is_accepted": true, "score": 0, "last_activity_date": 1479184208, "creation_date": 1479184208, "answer_id": 40602063, "question_id": 40096819, "link": "https://stackoverflow.com/questions/40096819/use-functions-that-return-handler-text-in-yesod-tests/40602063#40602063", "title": "Use functions that return &quot;Handler Text&quot; in yesod-tests", "body": "<p>I am not a Yesod expert but what you are trying to do probably does not make sense: <code>getFlagTokenFromCsrf</code> is a server-side function that extracts some information from the request, hence it lives in <code>Handler a</code> monad because this is the monad for server-side code.</p>\n\n<p>By contrast, Yesod tests are meant to be integration tests, asserting behaviour from the client-side against your <code>Application</code> (see <a href=\"https://hackage.haskell.org/package/yesod-test-1.5.3/docs/Yesod-Test.html\" rel=\"nofollow noreferrer\">https://hackage.haskell.org/package/yesod-test-1.5.3/docs/Yesod-Test.html</a>). The functions there live in a different monad, namely <code>YesodExample site a</code> which manages requests on your behalf. This monad allows you to reuse part of your server code (routes, data types) and manage state of your DB but is otherwise totally uncorrelated with server-side operations. </p>\n\n<p>I am not sure what you are trying to do but if you need some information generated on the server-side, you have to find another way to make it available on the client side.</p>\n"}, {"tags": [], "owner": {"reputation": 4538, "user_id": 499478, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/791526e67831fbd70e3d179a6c585b44?s=128&d=identicon&r=PG", "display_name": "Wizek", "link": "https://stackoverflow.com/users/499478/wizek"}, "is_accepted": false, "score": 2, "last_activity_date": 1479571183, "last_edit_date": 1479571183, "creation_date": 1479519610, "answer_id": 40688369, "question_id": 40096819, "link": "https://stackoverflow.com/questions/40096819/use-functions-that-return-handler-text-in-yesod-tests/40688369#40688369", "title": "Use functions that return &quot;Handler Text&quot; in yesod-tests", "body": "<p>It seems I am trying to do something rather similar. That is: Try to run arbitrary <code>Handler a</code> functions in unit tests.</p>\n\n<p>Some approaches I've tried and thought about:</p>\n\n<ol>\n<li><p>The closest I've gotten that actually worked for me:</p>\n\n<pre><code>import Application (handler)\n\nspec = withApp $ do\n  it \"\" $ do\n    liftIO $ handler $ someHandler\n</code></pre>\n\n<p>Although <a href=\"https://github.com/yesodweb/yesod-scaffold/blob/f185eb8ad/Application.hs#L178\" rel=\"nofollow noreferrer\">it seems this calls <code>makeFoundation</code> under the hood</a>, and I'd prefer if my handler would run in the context of the main webapp and not a separate instance.</p></li>\n<li><p>To execute a handler in the main app's context, I've also tried to:</p>\n\n<pre><code>import Foundation (unsafeHandler)\nimport qualified Control.Monad.Trans.State as ST\n\nspec = withApp $ do\n    it \"\" $ do\n      (YesodExampleData app _ _ _) &lt;- ST.get\n      liftIO $ unsafeHandler app $ someHandler\n</code></pre>\n\n<p>Which has gotten me a type error like this:</p>\n\n<pre><code>[34 of 35] Compiling Handler.FooSpec ( /path/to/test/Handler/FooSpec.hs, /path/to/.stack-work/odir/Handler/FooSpec.o )\n\n/path/to/test/Handler/FooSpec.hs:42:31:\n    Couldn't match type \u2018Network.Wai.Internal.Request\n                         -&gt; (Network.Wai.Internal.Response\n                             -&gt; IO Network.Wai.Internal.ResponseReceived)\n                         -&gt; IO Network.Wai.Internal.ResponseReceived\u2019\n                   with \u2018App\u2019\n    Expected type: App\n      Actual type: Network.Wai.Application\n    Probable cause: \u2018app\u2019 is applied to too few arguments\n    In the first argument of \u2018unsafeHandler\u2019, namely \u2018app\u2019\n    In the expression: unsafeHandler app\nFailed, modules loaded: Import, Utils, Foundation, [...]\n</code></pre>\n\n<p>I'm not entirely clear on what might be the difference between <code>Network.Wai.Application</code> and <code>App</code>, but that might be the key to making this work.</p></li>\n<li><p>I've also considered to specify a route to the handler, and then it would be accessible via <code>get SomeRouteR</code>. Although I'd rather not have to do this if I can help it.</p></li>\n<li>I'm also considering refactoring some of my <code>Handler a</code> functions to <code>IO a</code>, and then I can use <code>liftIO</code> to execute them in not just handlers but tests as well.</li>\n</ol>\n\n<p>That's as far as I've gotten. If I figure something more out I intend to update this answer. I've also starred this question so I get notified if someone else figures out something more or better.</p>\n\n<p>Edit: <a href=\"https://github.com/yesodweb/yesod/issues/1301\" rel=\"nofollow noreferrer\">I've also asked this question on GitHub</a>.</p>\n\n<p>Edit:</p>\n\n<p>I've found something rather promissing while trying to dig further in the direction of option #2:</p>\n\n<pre><code>import Foundation (unsafeHandler)\n\nrunHandler :: Handler a -&gt; ST.StateT (YesodExampleData App) IO a\nrunHandler handler = do\n  foundation &lt;- getTestYesod\n  liftIO $ unsafeHandler foundation handler\n</code></pre>\n\n<p>On which I was able to run test like so:</p>\n\n<pre><code>it \"runHandler\" $ do\n  let\n    testHandler :: Handler Int\n    testHandler = do\n      return 2\n  runHandler testHandler &gt;&gt;= (==? 2)\n\n  let\n    testHandler2 :: Handler String\n    testHandler2 = do\n      fmap show $ (Import.runDB) $ insert (def :: User)\n  runHandler testHandler2 &gt;&gt;= (==? (\"UserKey {unUserKey = SqlBackendKey {unSqlBackendKey = 1}}\"))\n</code></pre>\n"}], "owner": {"reputation": 813, "user_id": 750039, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/dd083a563230226543fcab3e1395b1fd?s=128&d=identicon&r=PG", "display_name": "amitaibu", "link": "https://stackoverflow.com/users/750039/amitaibu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 248, "favorite_count": 1, "accepted_answer_id": 40602063, "answer_count": 2, "score": 2, "last_activity_date": 1479571183, "creation_date": 1476744278, "last_edit_date": 1478291080, "question_id": 40096819, "link": "https://stackoverflow.com/questions/40096819/use-functions-that-return-handler-text-in-yesod-tests", "title": "Use functions that return &quot;Handler Text&quot; in yesod-tests", "body": "<p>Here's a (simplified) test I have</p>\n\n<pre><code>it \"asserts route access for valid arguments\" $ do\n    -- ... \n    token &lt;- getFlagTokenFromCsrf \"1234\"\n\n    get $ FlagMentorR flaggedId Flag token\n    statusIs 200\n</code></pre>\n\n<p>where I have <code>getFlagTokenFromCsrf :: Text -&gt; Handler Text</code></p>\n\n<p>The error I get when I try to <code>stack test</code> is:</p>\n\n<pre><code>Couldn't match type \u2018Yesod.Core.Types.HandlerT App IO Text\u2019\n               with \u2018Control.Monad.Trans.State.Lazy.StateT\n                       (YesodExampleData App) IO Text\u2019\nExpected type: Control.Monad.Trans.State.Lazy.StateT\n                 (YesodExampleData App) IO Text\n  Actual type: Handler Text\n</code></pre>\n\n<p>(Here's the <a href=\"https://github.com/Gizra/yesoders/blob/8fbf786bb33f046c4f1ee668c57e67a2f434e984/test/Handler/FlagMentorSpec.hs#L26-L36\" rel=\"nofollow noreferrer\">full example</a>)</p>\n"}, {"tags": ["haskell", "scrypt", "io-monad"], "comments": [{"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 2, "creation_date": 1476742270, "post_id": 40096354, "comment_id": 67465689, "body": "You cannot get rid of IO (without using darkest magic, or by calling another library method). Rather, fix your type: <code>ByteString -&gt; IO ByteString</code>"}, {"owner": {"user_type": "does_not_exist", "display_name": "user6307701"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1476742621, "post_id": 40096354, "comment_id": 67465810, "body": "Oh... ok. How do I save the value to the database then? I.e. further down I have <code>execute &quot;INSERT INTO test VALUES ...</code> that I want to use the encrypted value with."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 1, "creation_date": 1476743082, "post_id": 40096354, "comment_id": 67465966, "body": "If that further down the line is an <code>IO</code> operation as well, just put both of them in a <code>do</code> expression."}, {"owner": {"user_type": "does_not_exist", "display_name": "user6307701"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1476744604, "post_id": 40096354, "comment_id": 67466440, "body": "I see. Thanks!!"}], "answers": [{"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 3, "last_activity_date": 1476745129, "last_edit_date": 1476745129, "creation_date": 1476742759, "answer_id": 40096570, "question_id": 40096354, "link": "https://stackoverflow.com/questions/40096354/haskell-scrypt-how-to-get-the-encrypted-hash/40096570#40096570", "title": "Haskell &amp; Scrypt: How to get the encrypted hash", "body": "<p>Rather than getting rid of the <code>IO</code>, you need to adjust <code>encrypt</code> to return an <code>IO ByteString</code>. <code>encryptPassIO'</code> needs random data to use for the salt, which it gets from the <code>IO</code> monad, so you are stuck there.</p>\n\n<pre><code>import Crypto.Scrypt (encryptPassIO', getEncryptedPass)\nencrypt :: ByteString -&gt; IO ByteString\nencrypt = fmap getEncryptedPass . encryptPassIO' . Pass\n</code></pre>\n\n<p>Instead of <code>do</code> notation, I've used <code>encryptPassIO' . Pass</code> to get the <code>IO EncryptedPass</code> value from the argument. We then use <code>fmap</code> to lift <code>getEncryptedPass :: EncryptedPass -&gt; ByteString</code> into the <code>IO</code> monad.</p>\n\n<p>You could use <code>do</code> notation, but IMO <code>fmap</code> makes this cleaner:</p>\n\n<pre><code>encrypt pass = do\n    x &lt;- encryptPassIO' pass\n    return (getEncryptedPass x)\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user6307701"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 124, "favorite_count": 0, "accepted_answer_id": 40096570, "answer_count": 1, "score": 0, "last_activity_date": 1476745129, "creation_date": 1476741520, "last_edit_date": 1476742357, "question_id": 40096354, "link": "https://stackoverflow.com/questions/40096354/haskell-scrypt-how-to-get-the-encrypted-hash", "title": "Haskell &amp; Scrypt: How to get the encrypted hash", "body": "<p>*Sorry for the basic question, just started learning Haskell.</p>\n\n<p>I am trying to write a function that will get a string and return an encrypted hash.</p>\n\n<p>What I have come up with for the moment is:</p>\n\n<pre><code>encrypt :: ByteString -&gt; ByteString\nencrypt = do\n    x &lt;- Crypto.Scrypt.encryptPassIO' (Pass \"secret\")\n    fmap Crypto.Scrypt.getEncryptedPass x\n</code></pre>\n\n<p>However I get the error:</p>\n\n<pre><code>\u2022 Couldn't match expected type \u2018ByteString\u2019\n              with actual type \u2018IO ByteString\u2019\n\u2022 In a stmt of a 'do' block: x &lt;- encryptPassIO' (Pass plain)\n  In the expression:\n    do { x &lt;- encryptPassIO' (Pass plain);\n         fmap Crypto.Scrypt.getEncryptedPass x }\n  In an equation for \u2018encrypt\u2019:\n      encrypt plain\n        = do { x &lt;- encryptPassIO' (Pass plain);\n               fmap Crypto.Scrypt.getEncryptedPass x }\n</code></pre>\n\n<p>Any idea how I can get rid of the IO?</p>\n\n<p>Thanks!</p>\n"}, {"tags": ["haskell", "compilation", "ghci", "interpretation"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1476719174, "post_id": 40090503, "comment_id": 67453863, "body": "It&#39;s a convention. If GHCi worked exactly as writing in a .hs file, writing <code>1+1</code> would be an error, as well as <code>print (2,3)</code>. Instead, GCHi chose to use a little magic so to accept both these expressions and <code>let</code> definitions. About why <code>x=1</code> without let is rejected -- I don&#39;t think there&#39;s a clear answer to that except &quot;it would require more magic&quot;."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1476719875, "post_id": 40090503, "comment_id": 67454287, "body": "Right. FWIW, <a href=\"https://github.com/gibiansky/IHaskell\" rel=\"nofollow noreferrer\">IHaskell</a> allows mixing both styles."}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 7, "creation_date": 1476720335, "post_id": 40090503, "comment_id": 67454576, "body": "The newest version of GHCi (8.0.1) accepts <code>doubleMe x = x + x</code>. Enough people like you complained that they added a special case for this. :)"}, {"owner": {"reputation": 358, "user_id": 1720201, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/0b72158ada954986b532b1e954673601?s=128&d=identicon&r=PG&f=1", "display_name": "fpt", "link": "https://stackoverflow.com/users/1720201/fpt"}, "edited": false, "score": 0, "creation_date": 1476732277, "post_id": 40090503, "comment_id": 67460926, "body": "This is a fundamental difference I now appreciate between Haskell and Lisp: interactive access to the compiler via a command prompt vs interactive access to the language itself via a REPL, respectively."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 4, "creation_date": 1476726568, "post_id": 40091329, "comment_id": 67458003, "body": "This doesn&#39;t have anything to do with compilation and interpretation. Lots of Lisp actually is compiled, I believe, although I think Scheme may be the only Lisp that&#39;s really designed for good compilation."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1476744835, "post_id": 40091329, "comment_id": 67466496, "body": "I suspect the real motivation for not including this functionality in early versions of ghci is the surprising behavior of e.g. <code>maybeDoubleMe Nothing = Nothing\\nmaybeDoubleMe (Just x) = Just (x+x)</code> in ghci compared to in a file."}], "tags": [], "owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "is_accepted": false, "score": 4, "last_activity_date": 1476721610, "creation_date": 1476721610, "answer_id": 40091329, "question_id": 40090503, "link": "https://stackoverflow.com/questions/40090503/compiled-vs-interpreted-to-let-or-not-to-let/40091329#40091329", "title": "Compiled vs Interpreted: To Let or Not To Let", "body": "<p>The reasoning behind this is that GHCi (in 7.10.3) expects at the prompt only</p>\n\n<ul>\n<li><a href=\"https://downloads.haskell.org/~ghc/7.10.3/docs/html/users_guide/ghci-commands.html\" rel=\"nofollow\">commands</a> (type in <code>:h</code> to list the commands available)</li>\n<li><a href=\"https://downloads.haskell.org/~ghc/7.10.3/docs/html/users_guide/interactive-evaluation.html#ghci-decls\" rel=\"nofollow\">declarations</a> (things like <code>data</code>, <code>type</code>, <code>newtype</code>, <code>class</code>, <code>instance</code>, <code>deriving</code>, and <code>foreign</code> but <em>not</em> a regular definition)</li>\n<li><a href=\"https://downloads.haskell.org/~ghc/7.10.3/docs/html/users_guide/interactive-evaluation.html#ghci-import-decl\" rel=\"nofollow\">imports</a></li>\n<li><a href=\"https://downloads.haskell.org/~ghc/7.10.3/docs/html/users_guide/interactive-evaluation.html\" rel=\"nofollow\">expressions</a> (things like <code>1+1</code> or <code>let x = 3 in x*x</code>)</li>\n<li><a href=\"https://downloads.haskell.org/~ghc/7.10.3/docs/html/users_guide/interactive-evaluation.html#actions-at-prompt\" rel=\"nofollow\">I/O Actions / <code>do</code> statments</a> (things like <code>print \"hi\"</code> or <code>x &lt;- getLine</code> <strong>OR</strong> <code>let doubleMe x = x + x</code>)</li>\n</ul>\n\n<p>If this seems surprising to you, remember that the evaluation of Lisp and Haskell is very different - Lisp just gets interpretted, while Haskell is being compiled.</p>\n\n<p>As you can tell, top-level definitions are not part of this list. Thankfully this got fixed in GHCi 8.0.1, which now supports raw top-level function declarations. The following works (in 8.0.1):</p>\n\n<pre><code>ghci&gt; doubleMe x = x + x\nghci&gt; doubleMe 1\n2\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "is_accepted": false, "score": 3, "last_activity_date": 1476725551, "creation_date": 1476725551, "answer_id": 40092382, "question_id": 40090503, "link": "https://stackoverflow.com/questions/40090503/compiled-vs-interpreted-to-let-or-not-to-let/40092382#40092382", "title": "Compiled vs Interpreted: To Let or Not To Let", "body": "<p>The GHCi interpreter command line treats its input as if it were in a <code>do</code> clause. So you can type this:</p>\n\n<pre><code>:module + System.Random\nv &lt;- getStdRandom $ randomR (1,10)\n</code></pre>\n\n<p>Apart from the <code>:module</code> directive this is exactly how it would be in a <code>do</code> clause.</p>\n\n<p>Likewise you can write</p>\n\n<pre><code>let f x = 2 * x\n</code></pre>\n\n<p>because that is how it would be in a <code>do</code> clause.</p>\n"}, {"tags": [], "owner": {"reputation": 358, "user_id": 1720201, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/0b72158ada954986b532b1e954673601?s=128&d=identicon&r=PG&f=1", "display_name": "fpt", "link": "https://stackoverflow.com/users/1720201/fpt"}, "is_accepted": true, "score": 0, "last_activity_date": 1476732009, "last_edit_date": 1495540111, "creation_date": 1476731122, "answer_id": 40093832, "question_id": 40090503, "link": "https://stackoverflow.com/questions/40090503/compiled-vs-interpreted-to-let-or-not-to-let/40093832#40093832", "title": "Compiled vs Interpreted: To Let or Not To Let", "body": "<p>Modern Lisp implementations compile to native code, often by default even when code is entered at the prompt. Lisp's prompt isn't just a place to enter commands, it's a place to interact with the language because the entire language is made available by the Read-Evaluate-Print Loop. This means that Lisp reads the text into symbolic expressions, which it then evaluates, printing any print output and any returned values. For example,</p>\n\n<pre><code>? (defun a-fun () nil)\nA-FUN\n? (compiled-function-p #'a-fun)\nT\n</code></pre>\n\n<p><a href=\"http://clhs.lisp.se/Body/f_cmpd_f.htm\" rel=\"nofollow noreferrer\">Compiled-Function-P</a>\n<a href=\"https://en.wikipedia.org/wiki/Clozure_CL#Technology\" rel=\"nofollow noreferrer\">Clozure Common Lisp</a></p>\n\n<p>With Lisp, code you can enter into the Lisp image by compiling and loading a file you can also enter into the Lisp image by typing it out at the REPL. So it turns out I was surprised because I was expecting the GHCi prompt to be a REPL, but as <a href=\"https://stackoverflow.com/users/3072788/alec\">@Alec</a> describes it's not because it doesn't read text into Haskell expressions that it would then evaluate, as Lisp does. As <a href=\"https://stackoverflow.com/users/1477667/dfeuer\">@dfeuer</a> says, the issue isn't about compilation versus interpretation. The issue is that GHCi's prompt offers limited interaction with a Haskell compiler, rather than interaction with Haskell itself as Lisp's REPL does.</p>\n"}], "owner": {"reputation": 358, "user_id": 1720201, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/0b72158ada954986b532b1e954673601?s=128&d=identicon&r=PG&f=1", "display_name": "fpt", "link": "https://stackoverflow.com/users/1720201/fpt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 312, "favorite_count": 0, "accepted_answer_id": 40093832, "answer_count": 3, "score": 1, "last_activity_date": 1476732009, "creation_date": 1476718756, "last_edit_date": 1476720778, "question_id": 40090503, "link": "https://stackoverflow.com/questions/40090503/compiled-vs-interpreted-to-let-or-not-to-let", "title": "Compiled vs Interpreted: To Let or Not To Let", "body": "<p>Why does the Haskell interpreter (GHCI 7.10.3) need function definitions to be in a let expression, but the Haskell compiler (GHC 7.10.3) throws a parser error if a function definition is within a let expression?</p>\n\n<p>I'm working through \"<a href=\"http://learnyouahaskell.com/starting-out\" rel=\"nofollow\">Learn You a Haskell for Great Good</a>!\" Baby's first function is doubleMe:\n    doubleMe x = x + x</p>\n\n<p>Why does the interpreter accept this definition if it is within a let expression and otherwise throw a parse error on input '='? Meanwhile, if I'm compiling the same function from a file, why does GHC throw a parse error if the function definition is within a let expression and compiles the definition if it is not within a let expression? Coming from a Lisp background, I'm surprised that interactive Haskell and file loading and compilation Haskell treats these definitions differently.</p>\n"}, {"tags": ["haskell", "quickcheck"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1476726481, "post_id": 40089769, "comment_id": 67457957, "body": "To write such an instance, you must change the definition of <code>Wrapmaybe</code> - perhaps you are looking for <code>newtype Wrap f a = Wrap (f a)</code>"}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 8, "creation_date": 1476717697, "post_id": 40089876, "comment_id": 67452834, "body": "...or turn on <code>GeneralizedNewtypeDeriving</code> and add <code>Arbitrary</code> to to the list of derived instances."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1476725740, "post_id": 40089876, "comment_id": 67457531, "body": "<code>liftM</code> isn&#39;t any more obsolete than <code>ap</code>. <code>liftM</code> is for writing <code>Functor</code> instances and <code>ap</code> is for writing <code>Applicative</code> ones. Other uses, however, are indeed obsolete."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1476727851, "post_id": 40089876, "comment_id": 67458668, "body": "@dfeuer: except there&#39;s no good reason to ever define <code>fmap = liftM</code>. Usually, the <code>Functor</code> instance can just be derived (unlike <code>Applicative</code>), and else it&#39;s generally dead simple to define <code>fmap</code> yourself \u2013 and pretty often that instance will either be more general or more efficient than a monad-derived one. OTOH, <code>&lt;*&gt; = ap</code> is quite handy since the difficulty of implementing <code>&lt;*&gt;</code> and <code>&gt;&gt;=</code> is similar, so you can save considerable work by only worrying about the latter."}, {"owner": {"reputation": 43, "user_id": 7031672, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fc5b2b78e2beed790c1df3704830dca7?s=128&d=identicon&r=PG&f=1", "display_name": "Marcus L.", "link": "https://stackoverflow.com/users/7031672/marcus-l"}, "edited": false, "score": 0, "creation_date": 1476805380, "post_id": 40089876, "comment_id": 67496631, "body": "very helpful answer! seeing the multiple possibilities is very informative.  Thanks very much your help :)"}, {"owner": {"reputation": 1706, "user_id": 1840613, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2dfd4d21060ccd9b972864e0f6cb8c4?s=128&d=identicon&r=PG", "display_name": "Jeremy List", "link": "https://stackoverflow.com/users/1840613/jeremy-list"}, "edited": false, "score": 0, "creation_date": 1476926267, "post_id": 40089876, "comment_id": 67557741, "body": "For some monads (especially those based on continuation passing): <code>ap</code> is a lot slower than directly implementing <code>&lt;*&gt;</code>"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 1706, "user_id": 1840613, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2dfd4d21060ccd9b972864e0f6cb8c4?s=128&d=identicon&r=PG", "display_name": "Jeremy List", "link": "https://stackoverflow.com/users/1840613/jeremy-list"}, "edited": false, "score": 0, "creation_date": 1476958163, "post_id": 40089876, "comment_id": 67571884, "body": "@JeremyList: sure \u2013 for serious applications, you generally want to define both <code>fmap</code> and <code>&lt;*&gt;</code> directly. My point was that, while it makes <i>sometimes</i> sense to define the latter in terms of <code>ap</code> (at least during prototyping), it makes virtually never sense to define <code>fmap</code> in terms of <code>liftM</code>."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 10, "last_activity_date": 1476716877, "creation_date": 1476716877, "answer_id": 40089876, "question_id": 40089769, "link": "https://stackoverflow.com/questions/40089769/making-an-arbitrary-instance-for-a-newtype-that-uses-maybe/40089876#40089876", "title": "Making an Arbitrary Instance for a newtype that uses Maybe", "body": "<p>Well, you could just replace each <code>Maybe</code> constructor in that instance with the corresponding constructor for your newtype:</p>\n\n<pre><code>instance Arbitrary a =&gt; Arbitrary (WrapMaybe a) where\n  arbitrary = frequency [ (1, return $ WrapMaybe Nothing)\n                        , (1, fmap (WrapMaybe . Just) arbitrary) ]\n</code></pre>\n\n<p>However, it's simpler to just do this once for the result, using the already existing <code>Maybe</code> instance:</p>\n\n<pre><code>instance Arbitrary a =&gt; Arbitrary (WrapMaybe a) where\n  arbitrary = fmap WrapMaybe arbitrary\n</code></pre>\n\n<p>You can also write <code>WrapMaybe &lt;$&gt; arbitrary</code>. But please do <em>not</em> use <code>liftM</code>, that is <a href=\"https://wiki.haskell.org/Functor-Applicative-Monad_Proposal\">obsolete</a>! (These are all equivalent.)</p>\n"}], "owner": {"reputation": 43, "user_id": 7031672, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fc5b2b78e2beed790c1df3704830dca7?s=128&d=identicon&r=PG&f=1", "display_name": "Marcus L.", "link": "https://stackoverflow.com/users/7031672/marcus-l"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 586, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1476720831, "creation_date": 1476716519, "last_edit_date": 1476720831, "question_id": 40089769, "link": "https://stackoverflow.com/questions/40089769/making-an-arbitrary-instance-for-a-newtype-that-uses-maybe", "title": "Making an Arbitrary Instance for a newtype that uses Maybe", "body": "<p>I want to create an <code>Arbitrary</code> instance for the following newtype, in order to use it for QuickCheck:</p>\n\n<pre><code>newtype Wrapmaybe a = Wrapmaybe {getMaybe :: Maybe a} deriving (Eq, Show)\n</code></pre>\n\n<p>I know that the <code>Arbitrary</code> instance for <code>Maybe</code> can be written as follows:</p>\n\n<pre><code>instance Arbitrary a =&gt; Arbitrary (Maybe a) where\n     arbitrary = frequency [(1, return Nothing), (1, liftM Just arbitrary)]\n</code></pre>\n\n<p>How do I write the <code>Arbitrary</code> instance for something like the following without getting a type error or kind error:</p>\n\n<pre><code>instance Arbitrary a =&gt; Arbitrary (Wrapmaybe Maybe a) where\n   etc...\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 0, "creation_date": 1476704920, "post_id": 40085547, "comment_id": 67443545, "body": "What is that &quot;something for ints&quot; ? Is it an IO action or some other pure computation ?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1476706005, "post_id": 40085547, "comment_id": 67444239, "body": "There are many more instances of Num. I wonder whether you really need to do a case over the possible types -- this is a code smell, and seems an XY problem. What is the general problem you want to solve with this approach?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1476710413, "post_id": 40085547, "comment_id": 67447383, "body": "Type classes like <code>Num</code> are open, meaning you can&#39;t predict ahead of time what types someone might try to pass to <code>myFun</code>, so your <code>case</code> expression can never be complete. <code>class Num a =&gt; MyClass a</code> is the right approach. Another user cannot extend the definition of <code>myFun</code> to accommodate their type <code>Foo</code> that has a <code>Num</code> instance, but they can declare a <code>MyClass</code> instance for <code>Foo</code>."}, {"owner": {"reputation": 12941, "user_id": 292731, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/e3f90adedab79538799e2375a9731920?s=128&d=identicon&r=PG", "display_name": "Justin L.", "link": "https://stackoverflow.com/users/292731/justin-l"}, "edited": false, "score": 0, "creation_date": 1476813507, "post_id": 40085547, "comment_id": 67501406, "body": "By the way! It&#39;s worth nothing that this is a very very weird Haskell function, and there is a good chance that you&#39;re doing something that isn&#39;t really meant to be done in Haskell or is strongly non-idiomatic.  You&#39;re basically definiting three different functions on three different types.  Why on earth would you need to call them all using the same name?  What situation are you using this in?"}, {"owner": {"reputation": 3226, "user_id": 1058732, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/271319f2b3d45b31f2bec9f3e4e92961?s=128&d=identicon&r=PG", "display_name": "shmish111", "link": "https://stackoverflow.com/users/1058732/shmish111"}, "edited": false, "score": 0, "creation_date": 1476825620, "post_id": 40085547, "comment_id": 67508092, "body": "that&#39;s an interesting question Justin, it is for a Riemann client. A message has a metric field but due to the serialization (protobuffers) there are actually 3 possible fields, one for ints, one for floats and one for doubles. I want an api where you just set the metric, regardless of what type of number it is, and the correct field will be set on the protobuffer."}], "answers": [{"tags": [], "owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "is_accepted": false, "score": 6, "last_activity_date": 1476705039, "creation_date": 1476705039, "answer_id": 40085666, "question_id": 40085547, "link": "https://stackoverflow.com/questions/40085547/pattern-match-agains-num-in-haskell/40085666#40085666", "title": "Pattern match agains Num in Haskell", "body": "<p>You can model something like this:</p>\n\n<pre><code>data MyNum\n    = MDouble Double\n    | MInt Int\n    | MFloat Float\n    deriving (Show,Eq,Ord)\n\nhandle :: MyNum -&gt; IO ()\nhandle (MDouble x) = putStrLn \"This is double\"\nhandle (MFloat x) = putStrLn \"This is float\"\nhandle (MInt x) = putStrLn \"This is int\"\n</code></pre>\n\n<p>Infact a similar type of abstraction has been used in the <a href=\"https://www.stackage.org/haddock/lts-7.3/bson-0.3.2.3/Data-Bson.html#t:Value\">library bson</a> for modelling it's <code>Value</code> type.</p>\n"}, {"comments": [{"owner": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1476706788, "post_id": 40086121, "comment_id": 67444780, "body": "@leftaroundabout Others said it already. The whole idea is a code smell, sort of. Me, personally, I would go with the instances of the type class. If <code>Int 42</code> worked, i.e. if it had a type constructor, pattern matching as such could work. Would be nice if someone explained, why the primitive types do not have one."}, {"owner": {"reputation": 2424, "user_id": 3206471, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/fdc1f4bd9f3118fff33a160e9efdb61e?s=128&d=identicon&r=PG", "display_name": "gigabytes", "link": "https://stackoverflow.com/users/3206471/gigabytes"}, "edited": false, "score": 1, "creation_date": 1476709774, "post_id": 40086121, "comment_id": 67446888, "body": "While it is indeed bad practice, this is the only answer that directly answers the questions, i.e. how to do this thing without writing type class instances. I think this answer should be on top."}, {"owner": {"reputation": 3226, "user_id": 1058732, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/271319f2b3d45b31f2bec9f3e4e92961?s=128&d=identicon&r=PG", "display_name": "shmish111", "link": "https://stackoverflow.com/users/1058732/shmish111"}, "edited": false, "score": 0, "creation_date": 1476717240, "post_id": 40086121, "comment_id": 67452536, "body": "I marked this as the answer since it has the most explanation and discussion, thanks guys!"}, {"owner": {"reputation": 3226, "user_id": 1058732, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/271319f2b3d45b31f2bec9f3e4e92961?s=128&d=identicon&r=PG", "display_name": "shmish111", "link": "https://stackoverflow.com/users/1058732/shmish111"}, "edited": false, "score": 0, "creation_date": 1476719513, "post_id": 40086121, "comment_id": 67454061, "body": "After playing around, the problem with type classes is that I can&#39;t do <code>myFunc 42</code> as it is also ambiguous."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1476719586, "post_id": 40086121, "comment_id": 67454110, "body": "@BitTickler You can regard <code>42</code> as a constructor for the type <code>Int</code> -- at least morally. Indeed you can construct an <code>Int</code> just writing <code>42</code> and you can even pattern match on that <code>case n of 42 -&gt; ...</code>. Under the hood there&#39;s some magic, but it&#39;s reasonable. What this question asks for has nothing to do with numeric types, though. It asks about how to break parametricity, and checks what the type <code>a</code> is, which can only be done using <code>Typeable</code>. That approach should not be taken lightly, as you point out above."}], "tags": [], "owner": {"reputation": 7873, "user_id": 2225104, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/195de66794c596e35bc145c80e9f5515?s=128&d=identicon&r=PG", "display_name": "BitTickler", "link": "https://stackoverflow.com/users/2225104/bittickler"}, "is_accepted": true, "score": 3, "last_activity_date": 1476708715, "last_edit_date": 1476708715, "creation_date": 1476706457, "answer_id": 40086121, "question_id": 40085547, "link": "https://stackoverflow.com/questions/40085547/pattern-match-agains-num-in-haskell/40086121#40086121", "title": "Pattern match agains Num in Haskell", "body": "<p>Another, admittedly not pretty way to do it is this:</p>\n\n<pre><code>import Data.Typeable\n\nmyFunc :: (Typeable a, Num a, Show a) =&gt; a -&gt; String\nmyFunc x \n    | typeOf x == typeOf (0:: Int) = \"Its an Int: \" ++ show x\n    | typeOf x == typeOf (0:: Float) = \"Its a Float: \" ++ show x\n    | typeOf x == typeOf (0:: Double) = \"Its a Double: \" ++ show x\n</code></pre>\n\n<p>The weakness of this solution is, that there are way more instances of <code>Num a</code> than the three used in the above function. Hence, at one point or another, someone will e.g. call <code>myFunc 42</code> and be surprised it is an exception, as there is no case handling <code>Integer</code>, which is also a <code>Num a</code>.</p>\n\n<p>Using your own typeclass, in contrast helps narrowing down the set of usable types and thus helps preventing exceptions.</p>\n\n<blockquote>\n  <p>*Main> myFunc (42 :: Int)<br>\n  \"Its an Int: 42\"<br>\n  *Main> myFunc (42 :: Float)<br>\n  \"Its a Float: 42.0\"<br>\n  *Main> myFunc (42 :: Double)<br>\n  \"Its a Double: 42.0\"<br>\n  *Main> myFunc 42<br>\n  \"*** Exception: Main.hs:(11,1)-(14,66): Non-exhaustive patterns in function myFunc</p>\n</blockquote>\n"}, {"comments": [{"owner": {"reputation": 3226, "user_id": 1058732, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/271319f2b3d45b31f2bec9f3e4e92961?s=128&d=identicon&r=PG", "display_name": "shmish111", "link": "https://stackoverflow.com/users/1058732/shmish111"}, "edited": false, "score": 0, "creation_date": 1476717259, "post_id": 40086420, "comment_id": 67452548, "body": "Looks like I&#39;ll stick to type classes then. Thanks."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1476719804, "post_id": 40086420, "comment_id": 67454241, "body": "Indeed. This will provide type errors whenever used improperly, e.g. on another numeric type. By comparison, using <code>Typeable</code> and safe casts will generate runtime errors. Pushing errors to compile time, when reasonably possible, is very idiomatic in Haskell."}], "tags": [], "owner": {"reputation": 35543, "user_id": 149530, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9b6c8b04130af49735de5be666d67c00?s=128&d=identicon&r=PG", "display_name": "Michael Foukarakis", "link": "https://stackoverflow.com/users/149530/michael-foukarakis"}, "is_accepted": false, "score": 7, "last_activity_date": 1476775472, "last_edit_date": 1476775472, "creation_date": 1476707365, "answer_id": 40086420, "question_id": 40085547, "link": "https://stackoverflow.com/questions/40085547/pattern-match-agains-num-in-haskell/40086420#40086420", "title": "Pattern match agains Num in Haskell", "body": "<p>According to my reading, this is the textbook application of type classes:</p>\n\n<pre><code>module Main where\n\nclass Num a =&gt; Funnable a where\n    myFun :: a -&gt; a\n\ninstance Funnable Int where\n    myFun = id\n\ninstance Funnable Float where\n    myFun = (+ 2)\n\ninstance Funnable Double where\n    myFun = (+ 1)\n\nmain :: IO ()\nmain = do\n    print $ myFun (1 :: Int)\n    print $ myFun (1 :: Float)\n    print $ myFun (1 :: Double)\n</code></pre>\n\n<p>Gives:</p>\n\n<pre><code>$ stack exec example\n1\n3.0\n2.0\n</code></pre>\n\n<p>Type classes will also provide you with a <em>compile-time</em> type error when used incorrectly. For instance, suppose we had skipped the instance declaration for <code>Double</code>:</p>\n\n<pre><code>src/Main.hs:14:13: error:\n    \u2022 No instance for (Funnable Double) arising from a use of \u2018myFun\u2019\n    \u2022 In the second argument of \u2018($)\u2019, namely \u2018myFun (1 :: Double)\u2019\n      In a stmt of a 'do' block: print $ myFun (1 :: Double)\n      In the expression: do { print $ myFun (1 :: Double) }\n</code></pre>\n"}], "owner": {"reputation": 3226, "user_id": 1058732, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/271319f2b3d45b31f2bec9f3e4e92961?s=128&d=identicon&r=PG", "display_name": "shmish111", "link": "https://stackoverflow.com/users/1058732/shmish111"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 351, "favorite_count": 0, "accepted_answer_id": 40086121, "answer_count": 3, "score": 4, "last_activity_date": 1476775472, "creation_date": 1476704669, "question_id": 40085547, "link": "https://stackoverflow.com/questions/40085547/pattern-match-agains-num-in-haskell", "title": "Pattern match agains Num in Haskell", "body": "<p>I have a function that takes a <code>Num</code> and does different things depending on whether it is a float, double or integer. The only way I have found to do this is using a type class however this seems very ugly. Is there a way to match against any type of number and so do different things depending on which one of 3 instances of Num it is? Something like</p>\n\n<pre><code>myFun :: (Num a) =&gt; a -&gt; T\nmyFun n = case n of\n  n :: Int -&gt; something for ints\n  n :: Float -&gt; something for floats\n  n :: Double -&gt; something for doubles\n</code></pre>\n\n<p>rather than</p>\n\n<pre><code>class MyClass a where\n  myFun :: (Num a) =&gt; a -&gt; T\n</code></pre>\n\n<p>with instances for <code>Int</code>, <code>Float</code>, <code>Double</code>?</p>\n"}, {"tags": ["haskell", "ssl", "https"], "comments": [{"owner": {"reputation": 3794, "user_id": 137871, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/48469162d45686615c6bf0eb4304bf26?s=128&d=identicon&r=PG", "display_name": "insitu", "link": "https://stackoverflow.com/users/137871/insitu"}, "edited": false, "score": 0, "creation_date": 1476692256, "post_id": 40081508, "comment_id": 67435700, "body": "Currently trying to follow hints in this thread: <a href=\"https://groups.google.com/forum/#!topic/yesodweb/yJliYgU-NE4\" rel=\"nofollow noreferrer\">groups.google.com/forum/#!topic/yesodweb/yJliYgU-NE4</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1726, "user_id": 122415, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b948da7422021ef4773fd265739b971e?s=128&d=identicon&r=PG", "display_name": "mmalone", "link": "https://stackoverflow.com/users/122415/mmalone"}, "edited": false, "score": 5, "creation_date": 1485222450, "post_id": 40082394, "comment_id": 70825556, "body": "To answer your question, your code does bypass server certificate validation. Anyone using this code should remove the <code>onServerCertificate</code> line unless they know what they&#39;re doing. As it is, this code is dangerous."}, {"owner": {"reputation": 3794, "user_id": 137871, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/48469162d45686615c6bf0eb4304bf26?s=128&d=identicon&r=PG", "display_name": "insitu", "link": "https://stackoverflow.com/users/137871/insitu"}, "reply_to_user": {"reputation": 1726, "user_id": 122415, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b948da7422021ef4773fd265739b971e?s=128&d=identicon&r=PG", "display_name": "mmalone", "link": "https://stackoverflow.com/users/122415/mmalone"}, "edited": false, "score": 0, "creation_date": 1485250393, "post_id": 40082394, "comment_id": 70836316, "body": "Thanks, I am aware of this shortcoming."}, {"owner": {"reputation": 468, "user_id": 1266963, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae1051036e07e42ee389b4d255645115?s=128&d=identicon&r=PG", "display_name": "Yuri Syro", "link": "https://stackoverflow.com/users/1266963/yuri-syro"}, "edited": false, "score": 1, "creation_date": 1549468959, "post_id": 40082394, "comment_id": 95915227, "body": "Why is there a <code>hostname</code>? How does the manager use this name when connecting to different servers?"}], "tags": [], "owner": {"reputation": 3794, "user_id": 137871, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/48469162d45686615c6bf0eb4304bf26?s=128&d=identicon&r=PG", "display_name": "insitu", "link": "https://stackoverflow.com/users/137871/insitu"}, "is_accepted": true, "score": 7, "last_activity_date": 1476695299, "creation_date": 1476695299, "answer_id": 40082394, "question_id": 40081508, "link": "https://stackoverflow.com/questions/40081508/how-to-provide-a-client-certificate-to-http-client-tls/40082394#40082394", "title": "How to provide a client certificate to http-client-tls?", "body": "<p>Thanks to Moritz Agerman for sharing his code. Here is a full Haskell module that can use <code>crt.pem</code> and <code>key.pem</code> files to provide client-side certificate as requested by server:</p>\n\n<pre><code> {-# LANGUAGE OverloadedStrings #-}\n module TLS where\n\n import           Data.Default\n import           Network.Connection\n import           Network.HTTP.Client\n import           Network.HTTP.Client.TLS\n import           Network.TLS\n import           Network.TLS.Extra.Cipher\n import           Servant.Client\n\n makeClientManager :: String -&gt; Scheme -&gt; IO Manager\n makeClientManager hostname Https = mkMngr hostname \"crt.pem\" \"key.pem\"\n makeClientManager _        Http  = newManager defaultManagerSettings\n\n mkMngr :: String -&gt; FilePath -&gt; FilePath -&gt; IO Manager\n mkMngr hostName crtFile keyFile = do\n   creds &lt;- either error Just `fmap` credentialLoadX509 crtFile keyFile\n   let hooks = def\n               { onCertificateRequest = \\_ -&gt; return creds\n               , onServerCertificate = \\_ _ _ _ -&gt; return []\n               }\n       clientParams = (defaultParamsClient hostName  \"\")\n                      { clientHooks = hooks\n                      , clientSupported = def { supportedCiphers = ciphersuite_all }\n                      }\n       tlsSettings = TLSSettings clientParams\n\n   newManager $ mkManagerSettings tlsSettings Nothing\n</code></pre>\n\n<p>Not sure if this does bypass server certificate validation or not as <code>onServerCertificate</code> hook is a constant <code>[]</code>.</p>\n"}], "owner": {"reputation": 3794, "user_id": 137871, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/48469162d45686615c6bf0eb4304bf26?s=128&d=identicon&r=PG", "display_name": "insitu", "link": "https://stackoverflow.com/users/137871/insitu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1044, "favorite_count": 3, "accepted_answer_id": 40082394, "answer_count": 1, "score": 9, "last_activity_date": 1476695299, "creation_date": 1476692237, "question_id": 40081508, "link": "https://stackoverflow.com/questions/40081508/how-to-provide-a-client-certificate-to-http-client-tls", "title": "How to provide a client certificate to http-client-tls?", "body": "<p>I am using <a href=\"http://hackage.haskell.org/package/http-client-tls-0.2.1.2\" rel=\"noreferrer\">http-client-tls</a> to connect to a TLS-enabled server that requires a client certificate. I suspect I need to tweak <a href=\"http://hackage.haskell.org/package/connection-0.2.1/docs/Network-Connection.html#t:TLSSettings\" rel=\"noreferrer\">TLSSettings</a> with a loaded certificate and correct cypher-suites parameters but it is definitely not clear how to do this. </p>\n\n<p>Does anybody have some example code that uses client-side certificates?</p>\n"}, {"tags": ["haskell", "repa"], "comments": [{"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 1, "creation_date": 1476684393, "post_id": 40078622, "comment_id": 67431766, "body": "I imagine <code>mapStencil2</code> should be generalizable to a higher fixed dimension, but I am not sure what that means for the magic type <code>type PC5 = P C (P (S D) (P (S D) (P (S D) (P (S D) X))))</code>... :)"}, {"owner": {"reputation": 1029, "user_id": 668074, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/f82d3dd033cd691ad5340b9620bdcf38?s=128&d=identicon&r=PG", "display_name": "user668074", "link": "https://stackoverflow.com/users/668074/user668074"}, "reply_to_user": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1476684681, "post_id": 40078622, "comment_id": 67431891, "body": "Yeah, I saw that type too. No idea how to parse it. If there was a version available for one-dimension maybe it would be clearer. The source code for <code>mapStencil2</code> is also a bit obtuse for me."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1476727441, "post_id": 40078622, "comment_id": 67458452, "body": "The <code>mapStencil2</code> function is repa is hyperoptimized, but only works for small stencils. See e.g. <a href=\"https://hackage.haskell.org/package/repa-algorithms-3.2.1.1/docs/src/Data-Array-Repa-Algorithms-Convolve.html#convolveP\" rel=\"nofollow noreferrer\">convolveP</a> for a simpler implementation (but still 2D only). If you want such functions for the general n-dimensional (or even 3D) case, you will probably have to write them yourself."}, {"owner": {"reputation": 1029, "user_id": 668074, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/f82d3dd033cd691ad5340b9620bdcf38?s=128&d=identicon&r=PG", "display_name": "user668074", "link": "https://stackoverflow.com/users/668074/user668074"}, "edited": false, "score": 0, "creation_date": 1476754009, "post_id": 40078622, "comment_id": 67468723, "body": "Ok, that&#39;s a bit inconvenient. It&#39;s funny to have generic stencils in the package without being able to use them. Is it likely that Repa had a generic <code>mapStencil</code> function in the past and it was removed? Maybe I can make a new function based on that."}], "owner": {"reputation": 1029, "user_id": 668074, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/f82d3dd033cd691ad5340b9620bdcf38?s=128&d=identicon&r=PG", "display_name": "user668074", "link": "https://stackoverflow.com/users/668074/user668074"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 99, "favorite_count": 0, "answer_count": 0, "score": 5, "last_activity_date": 1476700972, "creation_date": 1476679397, "last_edit_date": 1476700972, "question_id": 40078622, "link": "https://stackoverflow.com/questions/40078622/how-do-i-apply-repa-stencils-with-arbitrary-dimension", "title": "How do I apply Repa stencils with arbitrary dimension?", "body": "<p>In the Repa package there are stencils that allow values to be calculated from neighbouring values in a convenient way (useful for convolutions, image blurring, diffusion simulations etc).</p>\n\n<p>In the current Repa package I can make stencils with any shape, but only two-dimensional stencils can be applied using <a href=\"http://hackage.haskell.org/package/repa-3.4.1.2/docs/Data-Array-Repa-Stencil-Dim2.html#v:mapStencil2\" rel=\"nofollow\"><code>mapStencil2</code></a>. Is there a way to apply stencils to arrays with a different dimension? There isn't even a way to apply one-dimensional stencils. I am looking for a way to apply three-dimensional stencils.</p>\n\n<p>Thanks</p>\n"}, {"tags": ["haskell", "list-comprehension"], "comments": [{"owner": {"reputation": 1832, "user_id": 5746918, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/jCq4A.jpg?s=128&g=1", "display_name": "Ishita Sinha", "link": "https://stackoverflow.com/users/5746918/ishita-sinha"}, "edited": false, "score": 0, "creation_date": 1476678092, "post_id": 40078285, "comment_id": 67429697, "body": "Your question is not very clear."}], "answers": [{"comments": [{"owner": {"reputation": 11986, "user_id": 3237465, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/vOArX.png?s=128&g=1", "display_name": "user3237465", "link": "https://stackoverflow.com/users/3237465/user3237465"}, "edited": false, "score": 3, "creation_date": 1476693075, "post_id": 40078680, "comment_id": 67436143, "body": "Perhaps the most relevant is <a href=\"https://hackage.haskell.org/package/universe-1.0\" rel=\"nofollow noreferrer\"><code>Data.Universe</code></a>."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 3, "creation_date": 1476707042, "post_id": 40078680, "comment_id": 67444964, "body": "Right. <code>universe :: [[Integer]]</code> yields <code>[[],[0],[1],[0,0],[-1],[1,0],[0,1],[2],[-1,0],[1,1],[0,0,0],&zwnj;&#8203;[-2],[2,0],[-1,1],[1&zwnj;&#8203;,0,0],[0,-1],[3],[-2&zwnj;&#8203;,0],[2,1],[-1,0,0], ...]</code>"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 11986, "user_id": 3237465, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/vOArX.png?s=128&g=1", "display_name": "user3237465", "link": "https://stackoverflow.com/users/3237465/user3237465"}, "edited": false, "score": 0, "creation_date": 1476713334, "post_id": 40078680, "comment_id": 67449686, "body": "@user3237465, that does seem to be the most direct path. I&#39;m pretty sure the others I mentioned will get you there eventually."}, {"owner": {"reputation": 51, "user_id": 7028984, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/782505818123f6d3ef70a7bb806e4968?s=128&d=identicon&r=PG&f=1", "display_name": "John Doe", "link": "https://stackoverflow.com/users/7028984/john-doe"}, "edited": false, "score": 0, "creation_date": 1476719932, "post_id": 40078680, "comment_id": 67454323, "body": "Wow. I had no idea that even existed. This saves me so much trouble, thank you. Though now I really want to know just how the heck universe works."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 51, "user_id": 7028984, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/782505818123f6d3ef70a7bb806e4968?s=128&d=identicon&r=PG&f=1", "display_name": "John Doe", "link": "https://stackoverflow.com/users/7028984/john-doe"}, "edited": false, "score": 2, "creation_date": 1476743683, "post_id": 40078680, "comment_id": 67466168, "body": "@JohnDoe The <a href=\"https://hackage.haskell.org/package/universe-instances-base-1.0/docs/src/Data-Universe-Instances-Base.html\" rel=\"nofollow noreferrer\">source</a> is not long, and if some part is unclear, the author has been known to occasionally answer questions here on StackOverflow..."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 6, "last_activity_date": 1476680453, "last_edit_date": 1476680453, "creation_date": 1476679852, "answer_id": 40078680, "question_id": 40078285, "link": "https://stackoverflow.com/questions/40078285/enumerate-all-finite-sequences-of-integers/40078680#40078680", "title": "Enumerate All Finite Sequences of Integers?", "body": "<p>This is, indeed, possible. But it is not easy. Imagine you have an enumeration of all integers, an enumeration of all pairs of integers, an enumeration of all triples of integers, etc. Then you need to choose \"fairly\" from those enumerations to be sure to hit each element of each. A similar problem will arise when you try even to enumerate all pairs of integers. I suggest you start with that problem, and then look into something like <a href=\"https://hackage.haskell.org/package/control-monad-omega-0.3.1/docs/Control-Monad-Omega.html\"><code>Control.Monad.Omega</code></a>, or perhaps even <a href=\"https://hackage.haskell.org/package/logict-0.6.0.2/docs/Control-Monad-Logic.html\"><code>Control.Monad.Logic</code></a>.</p>\n"}, {"tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 4, "last_activity_date": 1476681239, "last_edit_date": 1476681239, "creation_date": 1476680299, "answer_id": 40078743, "question_id": 40078285, "link": "https://stackoverflow.com/questions/40078285/enumerate-all-finite-sequences-of-integers/40078743#40078743", "title": "Enumerate All Finite Sequences of Integers?", "body": "<p>I am not going to spoil your fun by attempting a full answer, so let me just demonstrate a handful of things through the simplified problem of enumerating all finite, non-empty, sequences of contiguous naturals starting from zero -- something that you seem close to achieving on your own already. The key steps are already amidst your <code>enumIntSeqs</code>, but you don't have to nest list comprehensions like that. If you begin with...</p>\n\n<pre><code>[ {- etc. -} | x &lt;- [0..] ]\n</code></pre>\n\n<p>... you can generate a new list for each <code>x</code> simply by doing...</p>\n\n<pre><code>[ {- etc. -} | x &lt;- [0..], let ys = [0..x] ]\n</code></pre>\n\n<p>... and then returning those lists:</p>\n\n<pre><code>[ ys | x &lt;- [0..], let ys = [0..x] ]\n</code></pre>\n\n<p>(Note that I didn't write <code>ys &lt;- [0..x]</code>. Try to predict what would happen in that case, and then check it in GHCi.)</p>\n\n<p>The separate <code>let</code> definition isn't necessary, nor does it add anything in terms of clarity in this simple comprehension, so we can just write:</p>\n\n<pre><code>[ [0..x] | x &lt;- [0..] ]\n</code></pre>\n\n<p>And that's it.</p>\n\n<pre><code>Prelude&gt; take 4 $ [ [0..x] | x &lt;- [0..] ]\n[[0],[0,1],[0,1,2],[0,1,2,3]]\n</code></pre>\n\n<p>P.S.: Two other ways of writing the enumeration. Using do-notation...</p>\n\n<pre><code>someIntSeqs = do\n    x &lt;- [0..]\n    return [0..x]\n</code></pre>\n\n<p>... and with a humble <code>fmap</code> (which in this case is the same as <code>map</code>):</p>\n\n<pre><code>Prelude&gt; take 4 $ fmap (\\x -&gt; [0..x]) [0..]\n[[0],[0,1],[0,1,2],[0,1,2,3]]\nPrelude&gt; -- Or, equivalently...\nPrelude&gt; take 4 $ (\\x -&gt; [0..x]) &lt;$&gt; [0..]\n[[0],[0,1],[0,1,2],[0,1,2,3]]\n</code></pre>\n"}], "owner": {"reputation": 51, "user_id": 7028984, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/782505818123f6d3ef70a7bb806e4968?s=128&d=identicon&r=PG&f=1", "display_name": "John Doe", "link": "https://stackoverflow.com/users/7028984/john-doe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 236, "favorite_count": 1, "answer_count": 2, "score": 5, "last_activity_date": 1476681239, "creation_date": 1476676704, "last_edit_date": 1476680454, "question_id": 40078285, "link": "https://stackoverflow.com/questions/40078285/enumerate-all-finite-sequences-of-integers", "title": "Enumerate All Finite Sequences of Integers?", "body": "<p>I want to write a Haskell list comprehension to enumerate all finite sequences of integers. </p>\n\n<p>I'm pretty sure that this set is countable.</p>\n\n<p>This is what I have so far:</p>\n\n<pre><code>enumIntSeqs = [ (x, [ ( x, [0..x] ) | x &lt;- [ x | x &lt;- [0..x] ] ] ) | x &lt;- [0..] ]\n</code></pre>\n\n<p>Another idea I have is to somehow list every finite path in the infinite array</p>\n\n<p>Z* X Z* where Z* = {0, 1, -1, 2, -2,...}</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 2, "creation_date": 1476676234, "post_id": 40077828, "comment_id": 67429285, "body": "<code>tooMany (10, 10)</code>? (In addition, try <code>:t (10, 10)</code> in GHCi and double-check how that fits your code.)"}, {"owner": {"reputation": 443, "user_id": 2297589, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/fd94325acdf8f883ac63085f0f2f52c2?s=128&d=identicon&r=PG&f=1", "display_name": "Guilherme", "link": "https://stackoverflow.com/users/2297589/guilherme"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1476677596, "post_id": 40077828, "comment_id": 67429578, "body": "Nope, that doesn&#39;t work. <a href=\"https://i.imgur.com/3Z2bFLu.png\" rel=\"nofollow noreferrer\">i.imgur.com/3Z2bFLu.png</a> Also, :t (10, 10) returns :: (Num t1, Num t) =&gt; (t, t1)"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 2, "creation_date": 1476678305, "post_id": 40077828, "comment_id": 67429743, "body": "@dfeuer is right in that <code>FlexibleInstances</code> is needed -- though you presumably have already enabled it, given that you were able to at least define the instance. Other than that, it is indeed necessary to give the tuple the appropriate specialised type through e.g. <code>(10 :: Int, 10 :: Int)</code>. A rather strange exercise indeed."}], "answers": [{"comments": [{"owner": {"reputation": 3609, "user_id": 2565354, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/590ed3229d95cdcaa05a96028c586165?s=128&d=identicon&r=PG", "display_name": "badcook", "link": "https://stackoverflow.com/users/2565354/badcook"}, "edited": false, "score": 0, "creation_date": 1476689277, "post_id": 40078495, "comment_id": 67434170, "body": "I don&#39;t <code>OverlappingInstances</code> is being used. At least the overlap isn&#39;t obvious to me and the error messages seem to be consistent with just <code>FlexibleInstances</code>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 3609, "user_id": 2565354, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/590ed3229d95cdcaa05a96028c586165?s=128&d=identicon&r=PG", "display_name": "badcook", "link": "https://stackoverflow.com/users/2565354/badcook"}, "edited": false, "score": 0, "creation_date": 1476713198, "post_id": 40078495, "comment_id": 67449588, "body": "@badcook, the instances described in the error messages as being at lines 63 and 66, for <code>(Int, Int)</code> and <code>(a, a)</code>, certainly overlap."}, {"owner": {"reputation": 3609, "user_id": 2565354, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/590ed3229d95cdcaa05a96028c586165?s=128&d=identicon&r=PG", "display_name": "badcook", "link": "https://stackoverflow.com/users/2565354/badcook"}, "edited": false, "score": 0, "creation_date": 1476713408, "post_id": 40078495, "comment_id": 67449745, "body": "you&#39;re entirely correct. I skimmed through the image far too quickly."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 5, "last_activity_date": 1476678905, "last_edit_date": 1476678905, "creation_date": 1476678469, "answer_id": 40078495, "question_id": 40077828, "link": "https://stackoverflow.com/questions/40077828/call-an-instance-method-in-haskell/40078495#40078495", "title": "Call an instance &quot;method&quot; in haskell", "body": "<p>Based on the error message, it appears that you're using not only <code>FlexibleInstances</code> but even <code>OverlappingInstances</code>. As duplode indicates, you will have to explicitly fix the precise argument type in order to call the method with a tuple. GHC will have to be able to see that the tuple is neither <code>(Int, String)</code> nor <code>(Int, Int)</code>, and that the components have the same type, before selecting the instance.</p>\n\n<p>This sort of ad hoc class is generally discouraged, and these sorts of utterly wild instances are even more strongly discouraged. In general, class instances should be pretty uniform. If you need more than one instance for tuples, then you're probably doing something wrong. And overlapping instances are essentially for type-directed meta-programming. I personally avoid them like the plague; if you're going to use them, you'll need to be very, very careful about what you're doing and recognize that the API that results is likely to behave in unexpected ways in some cases. There are some techniques for avoiding overlap using type families that make complicated instance structures less wild, but even those need to be designed with great care and will limit you in ways that could bite you later.</p>\n"}, {"tags": [], "owner": {"reputation": 3609, "user_id": 2565354, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/590ed3229d95cdcaa05a96028c586165?s=128&d=identicon&r=PG", "display_name": "badcook", "link": "https://stackoverflow.com/users/2565354/badcook"}, "is_accepted": true, "score": 5, "last_activity_date": 1476691208, "last_edit_date": 1495541795, "creation_date": 1476691208, "answer_id": 40081209, "question_id": 40077828, "link": "https://stackoverflow.com/questions/40077828/call-an-instance-method-in-haskell/40081209#40081209", "title": "Call an instance &quot;method&quot; in haskell", "body": "<p>First off, as @dfeuer aptly points out, in \"real-life\" Haskell programming you wouldn't want to use typeclasses for this kind of stuff. <a href=\"https://stackoverflow.com/questions/15003974/why-do-all-haskell-typeclasses-have-laws\">The Haskell community generally wants typeclasses with a set of meaningful algebraic laws that govern the behavior of the typeclass instances</a>. These laws are <em>not</em> checked by the compiler (although programmers will often write <a href=\"https://hackage.haskell.org/package/QuickCheck\" rel=\"nofollow noreferrer\">QuickCheck tests</a> for them).</p>\n\n<p>With that out of the way, I'm assuming the book is teaching you this purely for familiarizing you with the mechanics of typeclasses (that they can have constraints which reference the typeclass itself) and not espousing this typeclass as a particularly good one.</p>\n\n<p>@duplode gives you the correct answer as to what to do in this scenario: annotate your types.</p>\n\n<pre><code>Main&gt; tooMany (10 :: Int, 10 :: Int)\nFalse\n</code></pre>\n\n<p>So why can't GHC automatically find the correct instance for <code>(10, 10)</code> and instead requires type annotations? Well fundamentally it's because Haskell typeclasses are open, meaning that anyone can at any time make a new instance of a typeclass you've created in another module which you don't know about, e.g. if you put this typeclass in a library, downstream consumers of that library can make their own instances of this typeclass.</p>\n\n<p>In this case, as you've already noticed, numeric literals don't actually have a monomorphic type in Haskell. <code>10</code> is of type <code>Num a =&gt; a</code>, not <code>Int</code> nor <code>Integer</code> nor <code>Double</code> nor anything else like that. Because typeclasses are open, even though <em>you</em> have only defined a single instance of a <code>Num</code> type for <code>TooMany</code> (namely <code>Int</code>), the Haskell compiler cannot rely on that to infer that there is in fact only one instance of a <code>Num</code> type for <code>TooMany</code> and therefore that <code>(10, 10)</code> must have type <code>(Int, Int)</code>. Anyone else who uses your code could define their own instance of <code>TooMany</code> for, say, <code>Double</code>s.</p>\n\n<p>In particular, a consumer of your module could make a new type with degenerate type instances for <code>TooMany</code> and <code>Num</code>.</p>\n\n<pre><code>-- Imagine you published `TooMany` as a library on Hackage\n-- and now a downstream consumer writes the following\n\n-- This example happens to break the laws for Num, \n-- but the compiler doesn't know about typeclass laws\ndata DegenerateType = DegenerateType\n\ninstance Num DegenerateType where\n    _ + _ = DegenerateType\n    _ * _ = DegenerateType\n    negate _ = DegenerateType\n    abs _ = DegenerateType\n    signum _ = 0\n    -- The next line dictates what a numeric literal \n    -- actually means for a DegenerateType\n    fromInteger _ = DegenerateType\n\ninstance TooMany DegenerateType where\n    tooMany _ = True\n</code></pre>\n\n<p>Now <code>tooMany (10, 10)</code> has different behavior depending on what monomorphic type <code>10</code> is.</p>\n\n<pre><code>Main&gt; tooMany (10 :: DegenerateType, 10 :: DegenerateType)\nTrue\n</code></pre>\n\n<p>Therefore <code>tooMany (10, 10)</code> is not enough to specify the behavior of <code>tooMany</code> and you must use type annotations.</p>\n"}], "owner": {"reputation": 443, "user_id": 2297589, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/fd94325acdf8f883ac63085f0f2f52c2?s=128&d=identicon&r=PG&f=1", "display_name": "Guilherme", "link": "https://stackoverflow.com/users/2297589/guilherme"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1104, "favorite_count": 0, "accepted_answer_id": 40081209, "answer_count": 2, "score": 1, "last_activity_date": 1476691208, "creation_date": 1476672946, "question_id": 40077828, "link": "https://stackoverflow.com/questions/40077828/call-an-instance-method-in-haskell", "title": "Call an instance &quot;method&quot; in haskell", "body": "<p>I am reading the book <em>Haskell Programming from first principles</em> and in one of the exercises proposed, the author ask us to write an instance of a class <em>TooMany</em> for <em>(Num a, TooMany a) => (a, a)</em> which should compare if the sum of two numbers is bigger than 42.</p>\n\n<p>Here is my code:</p>\n\n<pre><code>class TooMany a where\n    tooMany :: a -&gt; Bool\ninstance TooMany Int where\n    tooMany n = n &gt; 42\ninstance (Num a, TooMany a) =&gt; TooMany(a, a) where\n    tooMany (a, b) = tooMany (a + b)\n</code></pre>\n\n<p>I think my code is correct but I don't know how to write the expression to test it. For <em>TooMany Int</em> I simply wrote <em>tooMany (10 :: Int)</em> in the REPL and that's it, I had a boolean answer. </p>\n\n<p>Can anyone give me a hint on this one?</p>\n"}, {"tags": ["haskell", "dynamic-programming", "factorial"], "comments": [{"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1476726637, "post_id": 40077558, "comment_id": 67458039, "body": "Wouldn&#39;t you also need to count the number of twos?"}, {"owner": {"reputation": 29, "user_id": 3725141, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/86f1e9513eccd27edc150e42fe9ad919?s=128&d=identicon&r=PG&f=1", "display_name": "Maaarcocr", "link": "https://stackoverflow.com/users/3725141/maaarcocr"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 1, "creation_date": 1480524259, "post_id": 40077558, "comment_id": 69001304, "body": "@Bergi you always have enough twos to match all the fives!"}], "answers": [{"tags": [], "owner": {"reputation": 922, "user_id": 4094574, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4AcNf.png?s=128&g=1", "display_name": "Alexey Birukov", "link": "https://stackoverflow.com/users/4094574/alexey-birukov"}, "is_accepted": false, "score": 1, "last_activity_date": 1476715842, "creation_date": 1476715842, "answer_id": 40089540, "question_id": 40077558, "link": "https://stackoverflow.com/questions/40077558/haskell-memoization-codewars-number-of-trailing-zeros-of-factorial-n/40089540#40089540", "title": "Haskell Memoization Codewars Number of trailing zeros of factorial n", "body": "<p>If you are tested your code performance with <code>trace</code> and <code>show</code> here, that is the issue: they are very slow compared to the main code. If not, performance of variants must be about the same.</p>\n\n<p>The <code>def</code> function is a poor candidate for memoization. The average depth of recursion is not very different from <code>1</code>. The rest of the complexity is reduced to the operation <code>mod</code>, that is, the division that is hardly more expensive than table look up (and division by constant can be optimized to multiplication).</p>\n"}], "owner": {"reputation": 29, "user_id": 3725141, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/86f1e9513eccd27edc150e42fe9ad919?s=128&d=identicon&r=PG&f=1", "display_name": "Maaarcocr", "link": "https://stackoverflow.com/users/3725141/maaarcocr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 240, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1476715842, "creation_date": 1476670321, "question_id": 40077558, "link": "https://stackoverflow.com/questions/40077558/haskell-memoization-codewars-number-of-trailing-zeros-of-factorial-n", "title": "Haskell Memoization Codewars Number of trailing zeros of factorial n", "body": "<p>I am trying to solve the Codewars problem called: Number of trailing zeros of N! with Haskell. \nI know that I don't need to calculate the factorial to know the trailing zeros and in fact I am just counting how many many numbers are divisible by 5 and how many times for each.\nI have written 2 version, one that uses memoization when defactoring a number in order to get how many times is divisible by 5 and another one that do not use memoization. \nWhat surprise me is that the supposed DP approach takes longer than the trivial recursive one. I am probably doing something very stupid in my code. </p>\n\n<p>These are the functions: </p>\n\n<pre><code>zeros x = helperZeros [1..x]\nhelperZeros :: [Integer] -&gt; Integer\nhelperZeros  = sumArrayTuple . filter (\\x -&gt; x `mod` 5 == 0)\nsumArrayTuple = foldl (\\acc x -&gt; acc + (fastDef x)) 0\ndata Tree a = Tree (Tree a) a (Tree a)\ninstance Functor Tree where\n  fmap f (Tree l m r) = Tree (fmap f l) (f m) (fmap f r)\nindex :: Tree Integer -&gt; Integer -&gt; Integer\nindex (Tree _ m _) 0 = m\nindex (Tree l _ r) n = case (n-1) `divMod` 2 of\n  (q,0) -&gt; index l q\n  (q,1) -&gt; index r q\nnats = go 0 1\n  where\n    go n s = Tree (go l s') n (go r s' )\n      where\n        l = n + s\n        r = l + s\n        s' = s * 2\nfastDef:: Integer -&gt; Integer\nfastDef x = trace (show x) index memTreetDef x\nmemTreetDef = fmap (defact fastDef) nats\ndefact f n\n  | n `mod` 5 /= 0 = 0\n  | otherwise =  1 + f (n `div` 5)\n\n\n\nzeros' x = helperZeros' [1..x]\nhelperZeros' :: [Integer] -&gt; Integer\nhelperZeros'  = sumArrayTuple' . filter (\\x -&gt; x `mod` 5 == 0)\nsumArrayTuple' = foldl (\\acc x -&gt; acc + (def x)) 0\ndef n\n  | n `mod` 5 /= 0 = 0\n  | otherwise = 1 + def (n `div` 5)\n</code></pre>\n\n<p>What I am trying to memoize is the result of the defact function, for example if I have already calculate defact 200, then it would reuse this result to calculate defact 1000.</p>\n\n<p>I am fairly new to DP in Haskell.</p>\n"}, {"tags": ["haskell", "exception", "error-handling", "functional-programming", "purely-functional"], "comments": [{"owner": {"reputation": 764, "user_id": 3529754, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/a8311cc9fdf0e052da7367ae79775c1c?s=128&d=identicon&r=PG&f=1", "display_name": "bash0r", "link": "https://stackoverflow.com/users/3529754/bash0r"}, "edited": false, "score": 0, "creation_date": 1476664357, "post_id": 40076851, "comment_id": 67427017, "body": "You can&#39;t handle the exception outside of <code>IO a</code>. So if there&#39;s an exception at runtime you can handle it in the explicitly impure section of your program only. If you don&#39;t handle it -&gt; crash. For a language that can&#39;t interact with the outer world, there is no reason to exist. So it is necessary. In case of <code>head</code> and <code>tail</code> there is actually a law that forces these functions to be partial. Let&#39;s see if I can find it."}], "answers": [{"tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 4, "last_activity_date": 1476668865, "last_edit_date": 1495535656, "creation_date": 1476668116, "answer_id": 40077343, "question_id": 40076851, "link": "https://stackoverflow.com/questions/40076851/how-does-the-presence-of-the-error-function-bear-on-the-purity-of-haskell/40077343#40077343", "title": "How does the presence of the &quot;error&quot; function bear on the purity of Haskell?", "body": "<blockquote>\n  <p>For example, if ever I write code that uses the \"head\" function, surely I should take precautions for the case where an empty list somehow smuggles itself in.</p>\n</blockquote>\n\n<p>A simpler solution: don't use <code>head</code>. There are plenty of replacements: <code>listToMaybe</code> from <code>Data.Maybe</code>, the various alternative implementations in the <a href=\"http://hackage.haskell.org/package/safe\" rel=\"nofollow noreferrer\"><em>safe</em></a> package, etc. The partial functions [1] in the base libraries -- specially ones as easy to replace as <code>head</code> -- are little more than historical cruft, and should be either ignored or replaced by safe variants, such as those in the aforementioned <em>safe</em> package. For further arguments, <a href=\"http://chrisdone.com/posts/boycott-head\" rel=\"nofollow noreferrer\">here is an entirely reasonable rant about partial functions</a>.</p>\n\n<blockquote>\n  <p>If I want to take advantage of this exception feature, how would I go about doing it (ie how do I catch and handle exceptions? is there anything else I can do with them?)</p>\n</blockquote>\n\n<p>Exceptions of the sort thrown by <code>error</code> can only be caught in the <code>IO</code> monad. If you are writing pure functions you won't want to force your users to run them in the <code>IO</code> monad merely for catching exceptions. Therefore, if you ever use <code>error</code> in a pure function, assume the error will not be caught [2]. Ideally you shouldn't use <code>error</code> in pure code at all, but if you are somehow compelled to do so, at least make sure to write an informative error message (that is, <em>not</em> \"Prelude.head: empty list\") so that your users know what is going on when the program crashes.</p>\n\n<blockquote>\n  <p>If I remember correctly it's a similar story when there is a failure during pattern matching. It doesn't matter what the type signature says, if you haven't accounted for every possible pattern, you run the risk of throwing an exception.</p>\n</blockquote>\n\n<p>Indeed. The only difference from using <code>head</code> to writing the incomplete pattern match <code>(\\(x:_) -&gt; x)</code> by yourself explicitly is that in the latter case the compiler will at least warn you if you use <code>-Wall</code>, while with <code>head</code> even that is swept under the rug.</p>\n\n<blockquote>\n  <p>I've always wondered how the Haskell exception system fits in with the whole \"Pure functional language\" thing.</p>\n</blockquote>\n\n<p>Technically speaking, partial functions don't affect purity (which doesn't make them any less nasty, of course). From a theoretical point of view, <code>head []</code> is just as undefined as things like <code>foo = let x = x in x</code>. (The keyword for further reading into such subtleties is <a href=\"https://stackoverflow.com/q/32505911/2751851\">\"bottom\"</a>.)</p>\n\n<hr>\n\n<p>[1]: Partial functions are functions that, just like <code>head</code>, are not defined for some values of the argument types they are supposed to take.</p>\n\n<p>[2]: It is worth mentioning that exceptions in <code>IO</code> are a whole different issue, as you can't trivially avoid e.g. a file read failure just by using better functions. There are quite a few approaches towards handling such scenarios in a sensible way. If you are curious about the issue, <a href=\"https://www.schoolofhaskell.com/user/commercial/content/exceptions-best-practices\" rel=\"nofollow noreferrer\">here is one \"highly opinionated\" article about it</a> that is illustrative of the relevant tools and trade-offs.</p>\n"}, {"comments": [{"owner": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "edited": false, "score": 1, "creation_date": 1476694818, "post_id": 40077399, "comment_id": 67437169, "body": "&quot;The designers of Haskell wanted a Turing-complete language, which \u2013 as per the halting problem \u2013 means that they forwent totality.&quot; This is untrue. Cf. <a href=\"http://link.springer.com/chapter/10.1007/978-3-319-19797-5_13\" rel=\"nofollow noreferrer\">Turing-completeness totally free</a> for instance."}, {"owner": {"reputation": 34864, "user_id": 237428, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/ThNhZ.jpg?s=128&g=1", "display_name": "Antal Spector-Zabusky", "link": "https://stackoverflow.com/users/237428/antal-spector-zabusky"}, "reply_to_user": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "edited": false, "score": 0, "creation_date": 1476719395, "post_id": 40077399, "comment_id": 67453998, "body": "@gallais: (<a href=\"https://personal.cis.strath.ac.uk/conor.mcbride/TotallyFree.pdf\" rel=\"nofollow noreferrer\">Here&#39;s a non-paywalled link to &quot;Turing-Completeness Totally Free&quot; on Connor&#39;s website.</a>)  My understanding of techniques like that is that your partial functions don&#39;t end up with the type <code>A -&gt; B</code>, but with modified types.  Would it be fair to say that these languages are total much as Haskell is pure, with <code>PiG A \u03bb _ \u2192 B</code> serving the same role wrt totality as <code>A -&gt; IO B</code> does wrt purity?  In other words, a <i>representation</i> of a partial (resp. impure) function that itself is total (resp. pure)?"}, {"owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "edited": false, "score": 0, "creation_date": 1476721233, "post_id": 40077399, "comment_id": 67455059, "body": "Yes, and the expressivity failure is exactly with the partial languages. Imagine if you were forced to write <code>IO</code> after every <code>-&gt;</code>, so that you couldn&#39;t express the promise <i>not</i> to do input/output."}, {"owner": {"reputation": 34864, "user_id": 237428, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/ThNhZ.jpg?s=128&g=1", "display_name": "Antal Spector-Zabusky", "link": "https://stackoverflow.com/users/237428/antal-spector-zabusky"}, "reply_to_user": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "edited": false, "score": 0, "creation_date": 1476721583, "post_id": 40077399, "comment_id": 67455267, "body": "@pigworker Sure, I&#39;m sympathetic to that point of view!  But the claim I&#39;m curious about was &quot;Turing-completeness \u2192 partiality&quot; and whether functions in <code>General</code> still count as total.  I don&#39;t think I claimed here that &quot;Turing-completeness \u2192 lack of expressivity&quot;."}, {"owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "edited": false, "score": 0, "creation_date": 1476750373, "post_id": 40077399, "comment_id": 67467894, "body": "Of course functions returning General count as total. They allow you to describe what a general recursive computation <i>is</i> without committing to any particular runtime execution model. The coinductive interpretation then gives you &quot;running for as long as the user indicates willingness to wait&quot;, which is just what you get (whether you want it or not) with partial languages. Turing completeness does not require partiality, just expectation management: partial languages manage expectations downward, even when it&#39;s clearly possible to do better under many common circumstances."}, {"owner": {"reputation": 34864, "user_id": 237428, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/ThNhZ.jpg?s=128&g=1", "display_name": "Antal Spector-Zabusky", "link": "https://stackoverflow.com/users/237428/antal-spector-zabusky"}, "reply_to_user": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "edited": false, "score": 0, "creation_date": 1476750950, "post_id": 40077399, "comment_id": 67468029, "body": "@pigworker: Right, that matches what my understanding was. So this is where I think I disagree with you: I think I think of Turing-completeness (&#224; la purity) in some sense as a statement about the <i>bare function arrow</i>. So if there are computations you can&#39;t express as <code>nat -&gt; nat</code>, then your language is not Turing-complete, even if you can represent them as <code>nat -&gt; Partial nat</code>; analogously, Haskell is pure because a function <code>String -&gt; ()</code> must be trivial, even though functions <code>String -&gt; IO ()</code> can represent lots of effects. That&#39;s not a value or expressivity judgement, just terminological."}, {"owner": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "edited": false, "score": 0, "creation_date": 1476776305, "post_id": 40077399, "comment_id": 67476335, "body": "&quot;a function <code>String -&gt; ()</code> must be trivial&quot;. I wouldn&#39;t call &quot;extensionally equal to <code>const ()</code>, or looping forever, or <code>error</code>-ing&quot; trivial."}, {"owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "edited": false, "score": 1, "creation_date": 1476776463, "post_id": 40077399, "comment_id": 67476437, "body": "By your definition, a language without types can&#39;t be Turing complete. By my definition, all I have to do is Goedel-code everything. You&#39;re still entirely incorrect. Moreover, I don&#39;t know why you&#39;re even defending the point, unless the propagation of the myth that total languages somehow can&#39;t do stuff is your goal."}, {"owner": {"reputation": 34864, "user_id": 237428, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/ThNhZ.jpg?s=128&g=1", "display_name": "Antal Spector-Zabusky", "link": "https://stackoverflow.com/users/237428/antal-spector-zabusky"}, "reply_to_user": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "edited": false, "score": 0, "creation_date": 1476812779, "post_id": 40077399, "comment_id": 67501006, "body": "@gallais: I only have 600 characters, please allow me some license in my descriptions :-)  (Besides, there&#39;s more: &quot;looping forever only if the input is longer than three characters&quot;, for instance.)  Trivial here meant something like &quot;returns <code>()</code> or \u22a5&quot;, but I&#39;m aware it&#39;s imprecise!"}, {"owner": {"reputation": 34864, "user_id": 237428, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/ThNhZ.jpg?s=128&g=1", "display_name": "Antal Spector-Zabusky", "link": "https://stackoverflow.com/users/237428/antal-spector-zabusky"}, "reply_to_user": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "edited": false, "score": 0, "creation_date": 1476815140, "post_id": 40077399, "comment_id": 67502283, "body": "@pigworker: Fair! I could amend it (start talking about &quot;unityped&quot; languages), but that way lies endless nitpicking. I am not trying to defend the (false) claim that &quot;total languages can&#39;t do stuff&quot; \u2013 I wouldn&#39;t make such a claim, I regularly do work in Coq! \u2013 what I was trying to do was (a) clarify the terminology I used in my answer, and (b) understand the difference between what you were saying and what I was saying, to get a better handle on things. And I do think I have a better handle on what you&#39;re saying, now. (I&#39;d be curious: how would you rewrite the sentence you find objectionable?)"}], "tags": [], "owner": {"reputation": 34864, "user_id": 237428, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/ThNhZ.jpg?s=128&g=1", "display_name": "Antal Spector-Zabusky", "link": "https://stackoverflow.com/users/237428/antal-spector-zabusky"}, "is_accepted": true, "score": 12, "last_activity_date": 1476668701, "creation_date": 1476668701, "answer_id": 40077399, "question_id": 40076851, "link": "https://stackoverflow.com/questions/40076851/how-does-the-presence-of-the-error-function-bear-on-the-purity-of-haskell/40077399#40077399", "title": "How does the presence of the &quot;error&quot; function bear on the purity of Haskell?", "body": "<p>You are confusing two concepts: <em>purity</em> and <em>totality</em>.</p>\n\n<ul>\n<li><em>Purity</em> says that functions have no side effects.</li>\n<li><em>Totality</em> says that every function terminates and produces a value.</li>\n</ul>\n\n<p>Haskell <em>is</em> pure, but is <em>not</em> total.</p>\n\n<p>Outside of <code>IO</code>, nontermination (e.g., <code>let loop = loop in loop</code>) and exceptions (e.g., <code>error \"urk!\"</code>) are the same \u2013 nonterminating and exceptional terms, when forced, do not evaluate to a value.  The designers of Haskell wanted a Turing-complete language, which \u2013 as per the halting problem \u2013 means that they forwent totality.  And once you have nontermination, I suppose you might as well have exceptions, too \u2013 defining <code>error msg = error msg</code> and having calls to <code>error</code> do nothing forever is much less satisfying in practice than <em>actually</em> seeing the error message you want in finite time!</p>\n\n<p>In general, though, you're right \u2013 partial functions (those which are not defined for every input value, like <code>head</code>) are ugly.  Modern Haskell generally prefers writing total functions instead by returning <code>Maybe</code> or <code>Either</code> values, e.g.</p>\n\n<pre><code>safeHead :: [a] -&gt; Maybe a\nsafeHead []    = Nothing\nsafeHead (x:_) = Just x\n\nerrHead :: [a] -&gt; Either String a\nerrHead []    = Left \"Prelude.head: empty list\"\nerrHead (x:_) = Right x\n</code></pre>\n\n<p>In this case, the <a href=\"http://hackage.haskell.org/package/base-4.9.0.0/docs/Prelude.html#t:Functor\"><code>Functor</code></a>, <a href=\"http://hackage.haskell.org/package/base-4.9.0.0/docs/Prelude.html#t:Applicative\"><code>Applicative</code></a>, <a href=\"http://hackage.haskell.org/package/base-4.9.0.0/docs/Prelude.html#t:Monad\"><code>Monad</code></a>, <a href=\"http://hackage.haskell.org/package/mtl-2.2.1/docs/Control-Monad-Error-Class.html#t:MonadError\"><code>MonadError</code></a>, <a href=\"http://hackage.haskell.org/package/base-4.9.0.0/docs/Prelude.html#t:Foldable\"><code>Foldable</code></a>, <a href=\"http://hackage.haskell.org/package/base-4.9.0.0/docs/Prelude.html#t:Traversable\"><code>Traversable</code></a>, etc., machinery makes combining these total functions and working with their results easy.</p>\n\n<p>Should you actually come across an exception in your code \u2013 for instance, you might use <code>error</code> to check a complicated invariant in your code that you think you've enforced, but you have a bug \u2013 you can catch it in <code>IO</code>.  Which returns to the question of why it's OK to interact with exceptions in <code>IO</code> \u2013 doesn't that make the language impure?  The answer is the same as that to the question of why we can do I/O in <code>IO</code>, or work with mutable variables \u2013 evaluating a value of type <code>IO A</code> doesn't produce the side effects that it describes, it's just an action that describes what a program could do.  (There are better descriptions of this elsewhere on the internet; exceptions aren't any different than other effects.)</p>\n\n<p>(Also, note that there is <a href=\"https://hackage.haskell.org/package/base-4.9.0.0/docs/Control-Exception.html\">a separate-but-related exception system <em>in</em> <code>IO</code></a>, which is used when e.g. trying to read a file that isn't there.  People are often OK with this exception system, in moderation, because since you're in <code>IO</code> you're already working with impure code.)</p>\n"}, {"comments": [{"owner": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "edited": false, "score": 1, "creation_date": 1476694949, "post_id": 40077732, "comment_id": 67437245, "body": "&quot;A language that only supports total functions is necessarily Turing-incomplete&quot;. Please stop spreading FUD. Cf. <a href=\"http://link.springer.com/chapter/10.1007/978-3-319-19797-5_13\" rel=\"nofollow noreferrer\">Turing-completeness totally free</a> for instance."}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "reply_to_user": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "edited": false, "score": 1, "creation_date": 1476765372, "post_id": 40077732, "comment_id": 67471385, "body": "@gallais Thanks for correcting my false knowledge! I&#39;ve removed the erroneous statement from my answer. Some pointers though: (1) linking to an article I have to pay for to illustrate your correction doesn&#39;t do much to help me learn better and (2) &quot;spreading FUD&quot; is usually understood to be a deliberate attempt to deceive - maybe don&#39;t accuse people of that right off the bat when correcting them, if you expect/want them to react gracefully."}, {"owner": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "edited": false, "score": 0, "creation_date": 1476776519, "post_id": 40077732, "comment_id": 67476473, "body": "Any definition relying on knowing someone&#39;s intentions is pretty useless at best. I&#39;m happy with FUD being used to describe the information being spread. No assumption made on the emitter. The effects will be the same no matter whether the cause is malice or being uninformed anyway."}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "reply_to_user": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "edited": false, "score": 2, "creation_date": 1476785607, "post_id": 40077732, "comment_id": 67482419, "body": "@gallais Your personal definition of FUD is all well and good, but people can and do use language to ascribe intentions to other people, and &quot;spreading FUD&quot; is widely taken to be such language (and a theory of communication that pretends all such definitions don&#39;t exist is pretty misguided). If your aim in bringing it up is to stop the spread of FUD, you&#39;ll probably get better responses if you just say &quot;that&#39;s not true&quot; instead."}], "tags": [], "owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "is_accepted": false, "score": 2, "last_activity_date": 1476765089, "last_edit_date": 1476765089, "creation_date": 1476671952, "answer_id": 40077732, "question_id": 40076851, "link": "https://stackoverflow.com/questions/40076851/how-does-the-presence-of-the-error-function-bear-on-the-purity-of-haskell/40077732#40077732", "title": "How does the presence of the &quot;error&quot; function bear on the purity of Haskell?", "body": "<p>Haskell does not require that your functions be total, and doesn't track when they're not. (Total functions are those that have a well defined output for every possible value of their input type)</p>\n\n<p>Even without exceptions or pattern match failures, you can have a function that doesn't define output for some inputs by just going on forever. An example is <code>length (repeat 1)</code>. This continues to compute forever, but never actually throws an error.</p>\n\n<p>The way Haskell semantics \"copes\" with this is to declare that there is an \"extra\" value in every single type; the so called \"<a href=\"https://wiki.haskell.org/Bottom\" rel=\"nofollow\">bottom value</a>\", and declare that any computation that doesn't properly complete and produce a normal value of its type actually produces the bottom value. It's represented by the mathematical symbol \u22a5 (only when talking <em>about</em> Haskell; there isn't really any way in Haskell to directly refer to this value, but <code>undefined</code> is often also used since that <em>is</em> a Haskell name that is bound to an error-raising computation, and so semantically produces the bottom value). </p>\n\n<p>This <em>is</em> a theoretical wart in the system, since it gives you the ability to create a 'value' of any type (albeit not a very useful one), and a lot of the reasoning about bits of code being correct based on types actually relies on the assumption that you <em>can't</em> do exactly that (if you're into the Curry-Howard isomorphism between pure functional programs and formal logic, the existence of \u22a5 gives you the ability to \"prove\" logical contradictions, and thus to prove absolutely anything at all).</p>\n\n<p>But in practice it seems to work out that all the reasoning done by pretending that \u22a5 doesn't exist in Haskell still generally works well enough to be useful when you're writing \"well-behaved\" code that doesn't use \u22a5 very much.</p>\n\n<p>The main reason for tolerating this situation in Haskell is ease-of-use as a <em>programming language</em> rather than a system of formal logic or mathematics. It's impossible to make a compiler that could actually tell of arbitrary Haskell-like code whether or not each function is total or partial (see the Halting Problem). So a language that wanted to enforce totality would have to either remove a lot of the things you can do, or require you to jump through lots of hoops to demonstrate that your code always terminates, or both. The Haskell designers didn't want to do that.</p>\n\n<p>So given that Haskell as a language is resigned to partiality and \u22a5, it may as well give you things like <code>error</code> as a convenience. After all, you could always write a <code>error :: String -&gt; a</code> function by just not terminating; getting an immediate printout of the error message rather than having the program just spin forever is a lot more useful to practicing programmers, even if those are both equivalent in the theory of Haskell semantics!</p>\n\n<p>Similarly, the original designers of Haskell decided that implicitly adding a catch-all case to every pattern match that just errors out would be more convenient than forcing programmers to add the error case explicitly every time they expect a part of their code to only ever see certain cases. (Although a lot of Haskell programmers, including me, work with the incomplete-pattern-match warning and almost always treat it as an error and fix their code, and so would probably prefer the original Haskell designers went the other way on this one).</p>\n\n<p><strong>TLDR</strong>; exceptions from <code>error</code> and pattern match failure are there for convenience, because they don't make the system any more broken than it already has to be, without being quite a different system than Haskell.</p>\n\n<hr>\n\n<p>You <em>can</em> program by throwing and catch exceptions if you really want, including catching the exceptions from <code>error</code> or pattern match failure, by using the facilities from <a href=\"https://hackage.haskell.org/package/base-4.9.0.0/docs/Control-Exception.html\" rel=\"nofollow\">Control.Exception</a>.</p>\n\n<p>In order to not break the purity of the system you can <em>raise</em> exceptions from anywhere (because the system always has to deal with the possibility of a function not properly terminating and producing a value; \"raising an exception\" is just another way in which that can happen), but exceptions can only be caught by constructs in <code>IO</code>. Because the formal semantics of <code>IO</code> permit basically anything to happen (because it has to interface with the real world and there aren't really any hard restrictions we can impose on that from the definition of Haskell), we can also relax most of the rules we usually need for pure functions in Haskell and still have something that technically fits in the model of Haskell code being pure.</p>\n\n<p>I haven't used this very much at all (usually I prefer to keep my error handling using things that are more well-defined in terms of Haskell's semantic model than the operational model of what <code>IO</code> does, which can be as simple as <code>Maybe</code> or <code>Either</code>), but you can read about it if you want to.</p>\n"}], "owner": {"reputation": 6986, "user_id": 877603, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/ecf2008864ba219bf52317d2ff31ffe2?s=128&d=identicon&r=PG", "display_name": "TheIronKnuckle", "link": "https://stackoverflow.com/users/877603/theironknuckle"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 498, "favorite_count": 1, "accepted_answer_id": 40077399, "answer_count": 3, "score": 8, "last_activity_date": 1476765089, "creation_date": 1476662867, "question_id": 40076851, "link": "https://stackoverflow.com/questions/40076851/how-does-the-presence-of-the-error-function-bear-on-the-purity-of-haskell", "title": "How does the presence of the &quot;error&quot; function bear on the purity of Haskell?", "body": "<p>I've always wondered how the Haskell exception system fits in with the whole \"Pure functional language\" thing. For example see the below GHCi session.</p>\n\n<pre><code>GHCi, version 8.0.1: http://www.haskell.org/ghc/  :? for help\nPrelude&gt; head []\n*** Exception: Prelude.head: empty list\nPrelude&gt; :t head\nhead :: [a] -&gt; a\nPrelude&gt; :t error\nerror :: [Char] -&gt; a\nPrelude&gt; error \"ranch\"\n*** Exception: ranch\nCallStack (from HasCallStack):\n  error, called at &lt;interactive&gt;:4:1 in interactive:Ghci1\nPrelude&gt;\n</code></pre>\n\n<p>The type of head is [a] -> a. But when you call it on the special case of an empty list, you get an exception instead. But this exception is not accounted for in the type signature.</p>\n\n<p>If I remember correctly it's a similar story when there is a failure during pattern matching. It doesn't matter what the type signature says, if you haven't accounted for every possible pattern, you run the risk of throwing an exception.</p>\n\n<p>I don't have a single, concise question to ask, but my head is swimming. What was the motivation for adding this strange exception system to an otherwise pure and elegant language? Is it still pure but I'm just missing something? If I want to take advantage of this exception feature, how would I go about doing it (ie how do I catch and handle exceptions? is there anything else I can do with them?) For example, if ever I write code that uses the \"head\" function, surely I should take precautions for the case where an empty list somehow smuggles itself in.</p>\n"}, {"tags": ["haskell", "haskell-stack"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1476657351, "post_id": 40076008, "comment_id": 67425561, "body": "Have you ever run <code>stack setup</code>?"}, {"owner": {"reputation": 1733, "user_id": 293735, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/6fe5bc171f84a440181f7274c5065443?s=128&d=identicon&r=PG", "display_name": "berdario", "link": "https://stackoverflow.com/users/293735/berdario"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1476659299, "post_id": 40076008, "comment_id": 67426028, "body": "Yup, I just added its output"}], "answers": [{"tags": [], "owner": {"reputation": 1733, "user_id": 293735, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/6fe5bc171f84a440181f7274c5065443?s=128&d=identicon&r=PG", "display_name": "berdario", "link": "https://stackoverflow.com/users/293735/berdario"}, "is_accepted": false, "score": 4, "last_activity_date": 1476663189, "creation_date": 1476663189, "answer_id": 40076885, "question_id": 40076008, "link": "https://stackoverflow.com/questions/40076008/why-does-stack-pick-ghc-7-10-even-with-an-lts-for-ghc8/40076885#40076885", "title": "Why does Stack pick ghc 7.10 even with an lts for ghc8?", "body": "<p>I realized that this was due to the faulty way in which I \"worked around\" this issue:</p>\n\n<p><a href=\"https://github.com/commercialhaskell/stack/issues/2712\" rel=\"nofollow\">https://github.com/commercialhaskell/stack/issues/2712</a></p>\n\n<p>I might open it as another bug report, but it's definitely less important/interesting than fixing #2712</p>\n"}], "owner": {"reputation": 1733, "user_id": 293735, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/6fe5bc171f84a440181f7274c5065443?s=128&d=identicon&r=PG", "display_name": "berdario", "link": "https://stackoverflow.com/users/293735/berdario"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 212, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1476663189, "creation_date": 1476655761, "last_edit_date": 1476659285, "question_id": 40076008, "link": "https://stackoverflow.com/questions/40076008/why-does-stack-pick-ghc-7-10-even-with-an-lts-for-ghc8", "title": "Why does Stack pick ghc 7.10 even with an lts for ghc8?", "body": "<p>I created a new project and, as you can see, it even downloaded a brand new build plan for <a href=\"https://www.stackage.org/lts-7.4\" rel=\"nofollow\">lts-7.4</a>, which as you can see uses ghc-8.0.1.</p>\n\n<p>But when running <code>stack ghci</code>, it built the project with GHC 7.10, and dropped me in a 7.10 ghci shell.</p>\n\n<pre><code>dario@curie /tmp&gt; stack new foo\nDownloading template \"new-template\" to create project \"foo\" in foo/ ...\nLooking for .cabal or package.yaml files to use to init the project.\nUsing cabal packages:\n- foo/foo.cabal\n\nSelecting the best among 9 snapshots...\n\nDownloaded lts-7.4 build plan.    \n* Matches lts-7.4\n\nSelected resolver: lts-7.4\nInitialising configuration using resolver: lts-7.4\nTotal number of user packages considered: 1\nWriting configuration to file: foo/stack.yaml\nAll done.\ndario@curie /tmp&gt; cd foo\ndario@curie /t/foo&gt; stack ghci\nfoo-0.1.0.0: configure\nConfiguring foo-0.1.0.0...\nfoo-0.1.0.0: build\nPreprocessing library foo-0.1.0.0...\n[1 of 1] Compiling Lib              ( src/Lib.hs, .stack-work/dist/x86_64-linux/Cabal-1.22.5.0/build/Lib.o )\nIn-place registering foo-0.1.0.0...\nPreprocessing executable 'foo-exe' for foo-0.1.0.0...\n[1 of 1] Compiling Main             ( app/Main.hs, .stack-work/dist/x86_64-linux/Cabal-1.22.5.0/build/foo-exe/foo-exe-tmp/Main.o )\nLinking .stack-work/dist/x86_64-linux/Cabal-1.22.5.0/build/foo-exe/foo-exe ...\nfoo-0.1.0.0: copy/register\nInstalling library in\n/tmp/foo/.stack-work/install/x86_64-linux/lts-7.4/7.10.3/lib/x86_64-linux-ghc-7.10.3/foo-0.1.0.0-6bylsnNRJPuHxByS3dKqs5\nInstalling executable(s) in\n/tmp/foo/.stack-work/install/x86_64-linux/lts-7.4/7.10.3/bin\nRegistering foo-0.1.0.0...\nThe following GHC options are incompatible with GHCi and have not been passed to it: -threaded\nUsing main module: 1. Package `foo' component exe:foo-exe with main-is file: /tmp/foo/app/Main.hs\nConfiguring GHCi with the following packages: foo\nGHCi, version 7.10.3: http://www.haskell.org/ghc/  :? for help\n[1 of 1] Compiling Lib              ( /tmp/foo/src/Lib.hs, interpreted )\nOk, modules loaded: Lib.\n[2 of 2] Compiling Main             ( /tmp/foo/app/Main.hs, interpreted )\nOk, modules loaded: Lib, Main.\n&gt; \n</code></pre>\n\n<p>I always relied on the assumption that for every stackage snapshot, stack would use only one version of GHC, am I wrong?</p>\n\n<p>I don't have <code>system-ghc: true</code> in my config, and <a href=\"https://github.com/commercialhaskell/stack/blob/master/doc/faq.md#how-does-stack-determine-what-ghc-to-use\" rel=\"nofollow\">the faq</a> doesn't mention many other alternatives</p>\n\n<p>This is the output of <code>stack path</code>:</p>\n\n<pre><code>dario@curie /t/foo&gt; stack path\nstack-root: /home/dario/.stack\nproject-root: /tmp/foo\nconfig-location: /tmp/foo/stack.yaml\nbin-path:     /home/dario/.stack/snapshots/x86_64-linux/lts-7.4/7.10.3/bin:/home/dario/.stack/programs/x86_64-linux/ghc-8.0.1/bin:/home/dario/Applications/bin:/home/dario/.rbenv/shims:/home/dario/.cabal/bin:/home/dario/.nix-profile/bin:/home/dario/.nix-profile/sbin:/home/dario/.sdkman/candidates/grails/current/bi    n:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/lib/jvm/java-8-oracle/bin:/usr/lib/jvm/java-8-oracle/db/bin:/usr/lib/jvm/java-8-oracle/jre/bin:/home/dario/.local/bin:/home/dario/.nix-profile/bin\nprograms: /home/dario/.stack/programs/x86_64-linux\ncompiler-exe: /usr/bin/ghc\ncompiler-bin: /usr/bin\nlocal-bin: /home/dario/.local/bin\nextra-include-dirs: \nextra-library-dirs: \nsnapshot-pkg-db: /home/dario/.stack/snapshots/x86_64-linux/lts-7.4/7.10.3/pkgdb\nlocal-pkg-db: /tmp/foo/.stack-work/install/x86_64-linux/lts-7.4/7.10.3/pkgdb\nglobal-pkg-db: /var/lib/ghc/package.conf.d\nghc-package-path: /tmp/foo/.stack-work/install/x86_64-linux/lts-7.4/7.10.3/pkgdb:/home/dario/.stack/snapshots/x86_64-linux/lts-7.4/7.10.3/pkgdb:/var/lib/ghc/package.conf.d\nsnapshot-install-root: /home/dario/.stack/snapshots/x86_64-linux/lts-7.4/7.10.3\nlocal-install-root: /tmp/foo/.stack-work/install/x86_64-linux/lts-7.4/7.10.3\nsnapshot-doc-root: /home/dario/.stack/snapshots/x86_64-linux/lts-7.4/7.10.3/doc\nlocal-doc-root: /tmp/foo/.stack-work/install/x86_64-linux/lts-7.4/7.10.3/doc\ndist-dir: .stack-work/dist/x86_64-linux/Cabal-1.22.5.0\nlocal-hpc-root: /tmp/foo/.stack-work/install/x86_64-linux/lts-7.4/7.10.3/hpc\nlocal-bin-path: /home/dario/.local/bin\nghc-paths: /home/dario/.stack/programs/x86_64-linux\ndario@curie /t/foo&gt; echo $PATH\n/home/dario/Applications/bin /home/dario/.rbenv/shims /home/dario/.cabal/bin /home/dario/.nix-profile/bin /home/dario/.nix-profile/sbin /home/dario/.sdkman/candidates/grails/current/bin /usr/local/sbin /usr/local/bin /usr/sbin /usr/bin /sbin /bin /usr/games /usr/local/games /snap/bin     /usr/lib/jvm/java-8-oracle/bin /usr/lib/jvm/java-8-oracle/db/bin /usr/lib/jvm/java-8-oracle/jre/bin /home/dario/.local/bin /home/dario/.nix-profile/bin\n</code></pre>\n\n<p>I rely on the lts determining the version of ghc in use also for CI, so it's a bit worrying if my assumption doesn't hold (anymore?)</p>\n\n<p>(I'm running stack <code>Version 1.2.0 x86_64 hpack-0.14.0</code>)</p>\n\n<p>This is the output of <code>stack setup</code></p>\n\n<pre><code>dario@curie /t/foo&gt; stack setup\nstack will use a sandboxed GHC it installed\nFor more information on paths, see 'stack path' and 'stack exec env'\nTo use this GHC and packages outside of a project, consider using:\nstack ghc, stack ghci, stack runghc, or stack exec\n</code></pre>\n"}, {"tags": ["haskell", "lazy-evaluation", "recursion-schemes"], "answers": [{"comments": [{"owner": {"reputation": 4681, "user_id": 1264328, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/786f8275d9fa334bc27630e0fc7f0d22?s=128&d=identicon&r=PG", "display_name": "bwroga", "link": "https://stackoverflow.com/users/1264328/bwroga"}, "edited": false, "score": 0, "creation_date": 1476665648, "post_id": 40075903, "comment_id": 67427257, "body": "If <code>&gt;&gt;=</code> is strict in the first argument for Maybe, shouldn&#39;t the third code block in my question run as slowly as the second?"}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "reply_to_user": {"reputation": 4681, "user_id": 1264328, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/786f8275d9fa334bc27630e0fc7f0d22?s=128&d=identicon&r=PG", "display_name": "bwroga", "link": "https://stackoverflow.com/users/1264328/bwroga"}, "edited": false, "score": 0, "creation_date": 1476668054, "post_id": 40075903, "comment_id": 67427685, "body": "@bwroga Let me know if my edit answers your questions."}, {"owner": {"reputation": 4681, "user_id": 1264328, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/786f8275d9fa334bc27630e0fc7f0d22?s=128&d=identicon&r=PG", "display_name": "bwroga", "link": "https://stackoverflow.com/users/1264328/bwroga"}, "edited": false, "score": 0, "creation_date": 1476714702, "post_id": 40075903, "comment_id": 67450683, "body": "I&#39;m still not seeing the difference between snippet 1 and 3. Are they both being evaluated to WNHF, but it&#39;s way more expensive in snippet 1?"}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "reply_to_user": {"reputation": 4681, "user_id": 1264328, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/786f8275d9fa334bc27630e0fc7f0d22?s=128&d=identicon&r=PG", "display_name": "bwroga", "link": "https://stackoverflow.com/users/1264328/bwroga"}, "edited": false, "score": 0, "creation_date": 1476720169, "post_id": 40075903, "comment_id": 67454470, "body": "Yeah, all snippets are going to WNHF. The hanging you get on your first snippet is due to the fact that <code>product&#39;</code> is taking forever just get to WNHF. The hanging on your second snippet is due to the fact the multiplication that happens afterwards to display the number takes forever. My example shows you that the reason your snippets are different is <i>not</i> the <code>Nothing</code> or <code>Just on the RHS of the </code>&gt;&gt;=`."}], "tags": [], "owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "is_accepted": true, "score": 7, "last_activity_date": 1476668014, "last_edit_date": 1476668014, "creation_date": 1476654969, "answer_id": 40075903, "question_id": 40075784, "link": "https://stackoverflow.com/questions/40075784/why-is-unused-value-produced-by-catamorphism-evaluated/40075903#40075903", "title": "Why is unused value produced by catamorphism evaluated?", "body": "<p>Note that <code>&gt;&gt;=</code> is strict in the first argument for <code>Maybe</code>, so even if <code>k &gt;&gt;= \\x -&gt; Nothing</code> is always going to be <code>Nothing</code>, <code>k</code> still gets evaluated to weak head normal form (which means in this case it has the form <code>Just _</code> or <code>Nothing</code>, where <code>_</code> can be an unevaluated thunk).</p>\n\n<p>In your case, <code>k</code> is <code>product' 1</code>. You'll notice that just trying to evaluate that to weak normal head form hangs. In fact, you can see that <code>product' x</code> will probably take a really long time since it gets slower and slower as you have <code>1000 - x</code> larger and larger. On my laptop even <code>product' 995</code> takes a really long time (and that is with <code>-O2</code>).</p>\n\n<hr>\n\n<p>Your benchmarks are not actually showing what you think they are. <code>&gt;&gt;=</code> really is strict in the first argument, but only to WNHF (not all the way down). To make a case to prove my point, notice that the following exits immediately.</p>\n\n<pre><code>import Control.Monad (liftM2)\nimport Data.Foldable (foldr1)\n\nmain = print $ ((p &gt;&gt;= \\_ -&gt; Just 1) :: Maybe Integer)\n\np :: Maybe Integer\np = foldr1 (liftM2 (*)) $ fmap Just [1..100000]\n</code></pre>\n\n<p>The reason your second code snippet hangs is that it gets stuck trying to do the multiplication (which is pretty big) in order to print the result. If you ignore the result (as I do above), that doesn't happen - the result stays unevaluated. Another clue: your second code snippet hangs <em>after</em> having begun printing <code>Just</code>.</p>\n"}], "owner": {"reputation": 4681, "user_id": 1264328, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/786f8275d9fa334bc27630e0fc7f0d22?s=128&d=identicon&r=PG", "display_name": "bwroga", "link": "https://stackoverflow.com/users/1264328/bwroga"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 121, "favorite_count": 0, "accepted_answer_id": 40075903, "answer_count": 1, "score": 3, "last_activity_date": 1476668014, "creation_date": 1476653968, "question_id": 40075784, "link": "https://stackoverflow.com/questions/40075784/why-is-unused-value-produced-by-catamorphism-evaluated", "title": "Why is unused value produced by catamorphism evaluated?", "body": "<p>I expected that the following code would run and exit immediately because <code>p</code> is never actually used, but instead, it runs for over 7 minutes and then is seemingly killed by the os.</p>\n\n<pre><code>{-# LANGUAGE DeriveFunctor #-}\n\nimport Control.Monad (liftM2)\n\nmain = print $ ((product' 1 &gt;&gt;= \\p -&gt; Nothing) :: Maybe Integer)\n\ndata Term f = In { out :: f (Term f) }\n\ntype Algebra f a = (f a -&gt; a)\n\ncata :: (Functor f) =&gt; Algebra f a -&gt; Term f -&gt; a\ncata g t = g $ fmap (cata g) $ out t\n\ntype CoAlgebra f a = (a -&gt; f a)\n\nana :: (Functor f) =&gt; CoAlgebra f a -&gt; a -&gt; Term f\nana g a = In $ fmap (ana g) $ g a\n\ndata A a = A (Maybe Integer) [a] | B deriving (Functor)\n\nproduct' :: Integer -&gt; Maybe Integer\nproduct' i = cata h $ ana g $ fmap Just [i..1000]\n  where g (x:xs) = A x $ replicate 10 xs\n        g [] = B\n        h (A k l) = foldr (liftM2 (*)) k l\n        h B = Just 1\n</code></pre>\n\n<p>I thought this had to do with the bind operator, but the following code takes 9 seconds to run:</p>\n\n<pre><code>import Control.Monad (liftM2)\nimport Data.Foldable (foldr1)\n\nmain = print $ ((p &gt;&gt;= \\p' -&gt; Just p') :: Maybe Integer)\n\np :: Maybe Integer\np = foldr1 (liftM2 (*)) $ fmap Just [1..100000]\n</code></pre>\n\n<p>And this code exits immediately:</p>\n\n<pre><code>import Control.Monad (liftM2)\nimport Data.Foldable (foldr1)\n\nmain = print $ ((p &gt;&gt;= \\p' -&gt; Nothing) :: Maybe Integer)\n\np :: Maybe Integer\np = foldr1 (liftM2 (*)) $ fmap Just [1..100000]\n</code></pre>\n"}, {"tags": ["haskell", "types", "synonym"], "comments": [{"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 1, "creation_date": 1476653623, "post_id": 40075716, "comment_id": 67424578, "body": "GHCi is just telling you that you&#39;ve only written down the signatures for two selector functions <code>name</code> and <code>price</code> but without writing the implementation."}], "answers": [{"comments": [{"owner": {"reputation": 261, "user_id": 1183683, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9b5f06908834fc7db5b45d4997d67bcb?s=128&d=identicon&r=PG", "display_name": "Ron", "link": "https://stackoverflow.com/users/1183683/ron"}, "edited": false, "score": 0, "creation_date": 1476660071, "post_id": 40075779, "comment_id": 67426198, "body": "Many thanks Jon. Your solution is in Thompson&#39;s book, I just didn&#39;t understand what he was doing."}, {"owner": {"reputation": 261, "user_id": 1183683, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9b5f06908834fc7db5b45d4997d67bcb?s=128&d=identicon&r=PG", "display_name": "Ron", "link": "https://stackoverflow.com/users/1183683/ron"}, "edited": false, "score": 0, "creation_date": 1476661529, "post_id": 40075779, "comment_id": 67426498, "body": "Great blog too, Jon"}, {"owner": {"reputation": 261, "user_id": 1183683, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9b5f06908834fc7db5b45d4997d67bcb?s=128&d=identicon&r=PG", "display_name": "Ron", "link": "https://stackoverflow.com/users/1183683/ron"}, "edited": false, "score": 0, "creation_date": 1476671261, "post_id": 40075779, "comment_id": 67428319, "body": "Jon, Do you have a favorite Haskell text?"}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "reply_to_user": {"reputation": 261, "user_id": 1183683, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9b5f06908834fc7db5b45d4997d67bcb?s=128&d=identicon&r=PG", "display_name": "Ron", "link": "https://stackoverflow.com/users/1183683/ron"}, "edited": false, "score": 0, "creation_date": 1476675435, "post_id": 40075779, "comment_id": 67429142, "body": "@Ron: I\u2019ve heard good things about this: <a href=\"http://haskellbook.com/\" rel=\"nofollow noreferrer\">haskellbook.com</a> but I can\u2019t really recommend anything firsthand\u2014I mainly learned Haskell by using it for hobby projects, and later at my job."}], "tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": true, "score": 3, "last_activity_date": 1476653931, "creation_date": 1476653931, "answer_id": 40075779, "question_id": 40075716, "link": "https://stackoverflow.com/questions/40075716/creating-a-haskell-selector-function/40075779#40075779", "title": "Creating a Haskell selector function", "body": "<p>You need to specify the implementations of <code>name</code> and <code>price</code>:</p>\n\n<pre><code>name :: ShopItem -&gt; String\nname (n, _) = n\n\nprice :: ShopItem -&gt; Int\nprice (_, p) = p\n</code></pre>\n\n<p>You could also use <code>data</code> instead of <code>type</code>, and use record notation:</p>\n\n<pre><code>data ShopItem = ShopItem { name :: String, price :: Int }\n</code></pre>\n\n<p>Then these can be used to extract fields:</p>\n\n<pre><code>item = ShopItem { name = \"Beans\", price = 2 }\n-- or\nitem = ShopItem \"Beans\" 2\n\nname item  ==  \"Beans\"\n</code></pre>\n\n<p>But also to replace them:</p>\n\n<pre><code>item { price = 4 }  ==  ShopItem { name = \"Beans\", price = 4 }\n</code></pre>\n"}], "owner": {"reputation": 261, "user_id": 1183683, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/9b5f06908834fc7db5b45d4997d67bcb?s=128&d=identicon&r=PG", "display_name": "Ron", "link": "https://stackoverflow.com/users/1183683/ron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 727, "favorite_count": 0, "accepted_answer_id": 40075779, "answer_count": 1, "score": 0, "last_activity_date": 1476653931, "creation_date": 1476653516, "question_id": 40075716, "link": "https://stackoverflow.com/questions/40075716/creating-a-haskell-selector-function", "title": "Creating a Haskell selector function", "body": "<p>I have the following two type definitions in Haskell which are from Thompsons 'Craft of Functional Programmingi', Second Edition, 1999.</p>\n\n<pre><code>type ShopItem = (String,Int)\ntype Basket   = [ShopItem]\n</code></pre>\n\n<p>When I try to create my own 'selector function' on these types as such:</p>\n\n<pre><code>name  :: ShopItem -&gt; String\nprice :: ShopItem -&gt; Int\n</code></pre>\n\n<p>GHCI gives me the following error.</p>\n\n<pre><code>The type signature for \u2018name\u2019 lacks an accompanying binding\n</code></pre>\n\n<p>Why isn't 'name' bound to the String element of the ShopItem tuple and likewise for 'price'? </p>\n\n<p>Is this older syntax that is no longer acceptable in the current version of GHCI? I'm using version 7.10.3 on current Linux Mint 18.</p>\n"}, {"tags": ["json", "haskell", "aeson"], "comments": [{"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1476651515, "post_id": 40075359, "comment_id": 67423970, "body": "Is there a chance that you didn&#39;t indent <code>parseJSON</code> and its body further than the line with <code>instance FromJSON Valuation where</code>? If so, the error message would make sense since the default signature of <code>parseJSON</code> relies on <code>Generic</code>..."}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 1, "creation_date": 1476653121, "post_id": 40075359, "comment_id": 67424429, "body": "I double-checked and my hunch appears to be right: you just need to indent <code>parseJSON</code> and its body further in. Also, you need to import the methods of <code>FromJSON</code> too by adding a <code>(..)</code> after the <code>FromJSON</code> in the import statement. Finally, you have a problem because there is no such function as <code>today :: Day</code>."}, {"owner": {"reputation": 13, "user_id": 3461656, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/08d02b9c8c60415f43a229aa959c355c?s=128&d=identicon&r=PG&f=1", "display_name": "torrlane", "link": "https://stackoverflow.com/users/3461656/torrlane"}, "reply_to_user": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1476822660, "post_id": 40075359, "comment_id": 67506587, "body": "Wow. Thankyou so much for this. You were absolutely right. I indented the parseJSON function and that sorted the compile error. I forgot to paste the today function in."}, {"owner": {"reputation": 13, "user_id": 3461656, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/08d02b9c8c60415f43a229aa959c355c?s=128&d=identicon&r=PG&f=1", "display_name": "torrlane", "link": "https://stackoverflow.com/users/3461656/torrlane"}, "reply_to_user": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1476822754, "post_id": 40075359, "comment_id": 67506625, "body": "As a helper for others treading the same path. I also needed to change the FromJSON import to:   import Data.Aeson (Value(..), FromJSON(..), (.:), (.=), withObject)  Without that change, I get the following error:  <code>parseJSON&#39; is not a (visible) method of class </code>FromJSON&#39;"}], "owner": {"reputation": 13, "user_id": 3461656, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/08d02b9c8c60415f43a229aa959c355c?s=128&d=identicon&r=PG&f=1", "display_name": "torrlane", "link": "https://stackoverflow.com/users/3461656/torrlane"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 390, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1476651253, "creation_date": 1476651253, "question_id": 40075359, "link": "https://stackoverflow.com/questions/40075359/aeson-generics-compilation-error-with-manual-parsejson-function", "title": "Aeson Generics compilation error with manual parseJSON function", "body": "<p>I've created my own parseJSON function for my Valuation type. Unfortunately, I get compile errors about there not being a \"Generic\" version of Valuation and I'm not sure what to make of it. I've read and re-read as many aeson tutorials as I can and none of them seem to mention this. I've made my Valuation type an instance of the FromJSON class and provided my own implemention of the parseJSON function, but for some reason, the compiler seems to think that it's an implementation of the other parseJSON function, and I don't know why or how to fix it. Any help would be very much appreciated.</p>\n\n<blockquote>\n  <p>C:\\Users\\John\\GitHub\\haskell_projects\\learning\\src\\Lib.hs:17:10:\n  error:\n      * No instance for (GHC.Generics.Generic Valuation)\n          arising from a use of <code>aeson-0.11.2.1:Data.Aeson.Types.Class.$dmparseJSON'\n      * In the expression:\n          aeson-0.11.2.1:Data.Aeson.Types.Class.$dmparseJSON\n        In an equation for</code>parseJSON':\n            parseJSON = aeson-0.11.2.1:Data.Aeson.Types.Class.$dmparseJSON\n        In the instance declaration for `FromJSON Valuation'</p>\n  \n  <p>--  While building package learning-0.1.0.0 using:\n        C:\\Users\\John\\AppData\\Roaming\\stack\\setup-exe-cache\\x86_64-windows\\setup-Simple-Cabal-1.24.0.0-ghc-8.0.1.exe\n  --builddir=.stack-work\\dist\\b7fec021 build lib:learning exe:learning-exe --ghc-options \" -ddump-hi -ddump-to-file\"\n      Process exited with code: ExitFailure 1</p>\n</blockquote>\n\n<p>Here's the code:</p>\n\n<pre><code>{-# LANGUAGE DuplicateRecordFields #-}\n{-# LANGUAGE OverloadedStrings #-}\n{- The DuplicateRecordFields language extension allows records to use the same name for field labels. Without it, all the records in this module would need to have unique names for all their fields.\n-}\nmodule Lib\n    ( someFunc,\n    ) where\nimport Data.Time.Calendar\n\nimport Control.Lens\nimport Data.Aeson.Lens (_String, _Object, key)\nimport Network.Wreq\nimport Data.Aeson (Value(..), FromJSON, (.:), (.=), withObject)\n\ndata Valuation = Valuation {valued_on :: Day, price :: Double}\n\ninstance FromJSON Valuation where\nparseJSON = withObject \"valuation\" $ \\o -&gt; do\n    query &lt;- o .: \"query\"\n    results &lt;- query .: \"results\"\n    quote &lt;- results .: \"quote\"\n    price &lt;- quote .: \"Open\"\n    return Valuation{valued_on=today, price=price}\n</code></pre>\n"}, {"tags": ["function", "haskell", "types"], "comments": [{"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "edited": false, "score": 1, "creation_date": 1476638166, "post_id": 40073055, "comment_id": 67419411, "body": "Trying to figure out what <code>sChars ++ (head c) vCiph (tail c) sChars</code> is even supposed to mean.  That&#39;s a single expression, the line break doesn&#39;t mean anything."}, {"owner": {"reputation": 502, "user_id": 1731195, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/05863adbed3a673ae6a94a9e10527687?s=128&d=identicon&r=PG", "display_name": "Overt_Agent", "link": "https://stackoverflow.com/users/1731195/overt-agent"}, "reply_to_user": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "edited": false, "score": 0, "creation_date": 1476638274, "post_id": 40073055, "comment_id": 67419454, "body": "Oh, really? I genuinely mean it when I say I&#39;m a complete Haskell noob, I&#39;d expected the line break to seperate it to two statements in lieu of a ; (like every other language). Those lines are meant to add the first character to a list of saved characters and then recurse, the point is to check that the cipher only contains one of each letter in the alphabet."}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "edited": false, "score": 1, "creation_date": 1476638377, "post_id": 40073055, "comment_id": 67419498, "body": "Oh, you&#39;re absolutely right that a line break does separate statements in Haskell.  You can also use an explicit <code>;</code> if necessary.  However, you&#39;re not writing any statements--you&#39;re writing pure functions."}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "edited": false, "score": 1, "creation_date": 1476638505, "post_id": 40073055, "comment_id": 67419544, "body": "Perhaps if you tell us what the code is supposed to do, we can help with that.  It&#39;s rather difficult to guess what code is supposed to do just by looking at it."}, {"owner": {"reputation": 502, "user_id": 1731195, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/05863adbed3a673ae6a94a9e10527687?s=128&d=identicon&r=PG", "display_name": "Overt_Agent", "link": "https://stackoverflow.com/users/1731195/overt-agent"}, "reply_to_user": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "edited": false, "score": 0, "creation_date": 1476638685, "post_id": 40073055, "comment_id": 67419617, "body": "That&#39;s fair enough. The code is meant to define a Cipher type (functionally identical to a String, wasn&#39;t my choice), then validateCipher checks that is contains every letter of the alphabet once and only once. I&#39;ve done this through first checking it has length 26 then running a recursive function (vCiph) that is meant to check whether the first letter in the cipher has already been stored in an array (savedChars). If it has then the cipher isn&#39;t valid (contains multiple of the same letter), if it hasn&#39;t then it adds it to the list and recurses with the tail until the cipher is empty or wrong"}, {"owner": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "edited": false, "score": 0, "creation_date": 1476652117, "post_id": 40073055, "comment_id": 67424137, "body": "a much simpler check then the current validation would be <code>vCiph = ([&#39;a&#39;..&#39;z&#39;] ==) . sort)</code>"}], "answers": [{"comments": [{"owner": {"reputation": 502, "user_id": 1731195, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/05863adbed3a673ae6a94a9e10527687?s=128&d=identicon&r=PG", "display_name": "Overt_Agent", "link": "https://stackoverflow.com/users/1731195/overt-agent"}, "edited": false, "score": 0, "creation_date": 1476640424, "post_id": 40073311, "comment_id": 67420213, "body": "Wow, if I could give that answer more than +1 accepted, I would. I think it&#39;s taught me more in one page than I&#39;ve learnt in several weeks. Thank you so so much!"}], "tags": [], "owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "is_accepted": true, "score": 4, "last_activity_date": 1476639440, "creation_date": 1476639440, "answer_id": 40073311, "question_id": 40073055, "link": "https://stackoverflow.com/questions/40073055/cant-match-types-with-head-and/40073311#40073311", "title": "Can&#39;t match types with head and ++", "body": "<p>First, there's the \"super easy\" way of doing things.</p>\n\n<pre><code>import Data.List\n\ntype Cipher = String\n\nvalidateCipher :: Cipher -&gt; Bool\nvalidateCipher c = sort c == ['a'..'z']\n</code></pre>\n\n<p>Then there's a fix for what you were trying to do:</p>\n\n<pre><code>type Cipher = String\n\nvalidateCipher :: Cipher -&gt; Bool\nvalidateCipher ciph = length ciph == 26 &amp;&amp; vCiph ciph \"\"\n\nvCiph :: Cipher -&gt; String -&gt; Bool\nvCiph \"\" _ = True\nvCiph (c:cs) prev\n  | elem c prev  = False\n  | otherwise    = vCiph cs (c:prev)\n</code></pre>\n\n<p>A few things I noticed in your code:</p>\n\n<ul>\n<li><p>The code checks if <code>head c</code> is in <code>sChars</code> and afterwards checks if <code>c</code> is empty.  But if <code>c</code> is empty, then it's too late, because <code>head c</code> throws an exception.</p></li>\n<li><p>The code <code>sChars ++ (head c)</code> doesn't modify <code>sChars</code>.  It creates a new list.</p></li>\n<li><p>The code <code>sChars ++ (head c)</code> is a type error because <code>head c</code> is a <code>Char</code> and <code>++</code> requires that both sides be <code>[Char]</code>.</p></li>\n</ul>\n\n<p>The new version accomplishes things with pattern matching: the pattern <code>(c:cs)</code> splits the argument into the head and tail for you, so you don't have to call <code>head</code> and <code>tail</code> explicitly.  The pattern <code>\"\"</code> will match the empty string, so you don't have to test <code>length c == 0</code>.</p>\n\n<p>Here is a style fixup, addressing your concern about having <code>Cipher</code> be a <code>String</code>:</p>\n\n<pre><code>newtype Cipher = Cipher String\n\nvalidateCipher :: Cipher -&gt; Bool\nvalidateCipher (Cipher ciph) = length ciph == 26 &amp;&amp; vCiph ciph \"\"\n  where\n    vCiph :: String -&gt; String -&gt; Bool\n    vCiph \"\" _ = True\n    vCiph (c:cs) prev\n      | elem c prev  = False\n      | otherwise    = vCiph cs (c:prev)\n</code></pre>\n\n<p>Using <code>newtype</code> instead of <code>type</code> makes it so that <code>Cipher</code> is no longer a <code>String</code>, as far as the type system is concerned.  Think of it as a box with a string inside it.  It is <em>almost</em> the same thing as <code>data Cipher = Cipher String</code> except for edge cases.</p>\n\n<p>Making <code>vCiph</code> part of <code>validateCipher</code> makes it clear that <code>vCiph</code> has no business being called from other functions.</p>\n"}], "owner": {"reputation": 502, "user_id": 1731195, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/05863adbed3a673ae6a94a9e10527687?s=128&d=identicon&r=PG", "display_name": "Overt_Agent", "link": "https://stackoverflow.com/users/1731195/overt-agent"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 105, "favorite_count": 0, "accepted_answer_id": 40073311, "answer_count": 1, "score": 1, "last_activity_date": 1595058248, "creation_date": 1476637995, "last_edit_date": 1595058248, "question_id": 40073055, "link": "https://stackoverflow.com/questions/40073055/cant-match-types-with-head-and", "title": "Can&#39;t match types with head and ++", "body": "<p>I'm a complete beginner at Haskell (and functional programming). I've run into this problem when trying a pretty simple piece of code:</p>\n<pre><code>Ciphers.hs:24:25:\n    Couldn't match expected type \u2018Bool\u2019 with actual type \u2018[Char]\u2019\n    In the expression: sChars ++ (head c)\n</code></pre>\n<p>and</p>\n<pre><code>Ciphers.hs:24:41:\n    Couldn't match type \u2018Char\u2019 with \u2018[Char]\u2019\n    Expected type: [[Char]]\n      Actual type: Cipher\n</code></pre>\n<p>This is the code I'm trying to execute:</p>\n<pre><code>--Datatype for a cipher\ntype Cipher = String\n\nvalidateCipher :: Cipher -&gt; Bool\nvalidateCipher ciph = \n    if((length ciph) /= 26)then \n        False\n    else if(let savedChars = &quot;&quot; in vCiph ciph savedChars)then\n        True\n    else\n        False\n\nvCiph :: Cipher -&gt; String -&gt; Bool\nvCiph c sChars = \n    if(elem (head c) sChars)then\n        False\n    else if(length c == 0)then \n        True\n    else\n        sChars ++ (head c)\n        vCiph (tail c) sChars\n</code></pre>\n<p>So it's really the last two lines that are causing problems, and I can't figure out why. Honestly, I'm not even sure why the expected type is bool in the first one, why the compiler's column numbers don't match up with Notepad++'s or whether or not I'm allowed to have two lines of code following an else statement.</p>\n"}, {"tags": ["haskell", "haskell-diagrams"], "answers": [{"comments": [{"owner": {"reputation": 4029, "user_id": 3224967, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/963b108f3bcde98ac96d09b04abbf63f?s=128&d=identicon&r=PG&f=1", "display_name": "mherzl", "link": "https://stackoverflow.com/users/3224967/mherzl"}, "edited": false, "score": 1, "creation_date": 1476673766, "post_id": 40073628, "comment_id": 67428843, "body": "SVGFonts with scaleUToX is working well to set the width of text. Thanks for the answer!"}], "tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": true, "score": 3, "last_activity_date": 1476641114, "creation_date": 1476641114, "answer_id": 40073628, "question_id": 40072963, "link": "https://stackoverflow.com/questions/40072963/haskell-diagrams-why-does-text-not-have-length-or-width/40073628#40073628", "title": "Haskell Diagrams: Why does text not have length or width?", "body": "<blockquote>\n  <p>Why does the text box not have a size?</p>\n</blockquote>\n\n<p>Because text handling is not only highly dependent on the backend used to render the diagrams (cf. <a href=\"http://projects.haskell.org/diagrams/doc/manual.html#text\" rel=\"nofollow\">the User's Guide</a>) but also potentially dependent on how fonts are configured in the system used to run the program.</p>\n\n<blockquote>\n  <p>How can I set the length and width of a text box to a certain value?</p>\n</blockquote>\n\n<ol>\n<li><p>Use text handling functions provided by your chosen backend, if they exist. For instance, <em>diagrams-cairo</em> provides <a href=\"https://hackage.haskell.org/package/diagrams-cairo-1.3.1.2/docs/Diagrams-Backend-Cairo-Text.html\" rel=\"nofollow\">functions</a> that use Pango to render text on its own, though with the significant annoyance of them being <code>IO</code> functions, as they need to query font information from the system.</p></li>\n<li><p>Use <a href=\"http://hackage.haskell.org/package/SVGFonts-1.6.0.0/docs/Graphics-SVGFonts.html\" rel=\"nofollow\"><em>SVGFonts</em></a> to stroke the text independently of the backend. There are a few inconveniences with this approach as well (limited choice of fonts unless you follow the instructions in the documentation to convert your chosen font to the SVGFonts format yourself; fonts with large sets of characters might lead to a small but noticeable delay when they are first used by your program, as they have to go through an initial processing), but at least you don't have to bother with <code>IO</code> or backend-specific quirks.</p></li>\n</ol>\n"}], "owner": {"reputation": 4029, "user_id": 3224967, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/963b108f3bcde98ac96d09b04abbf63f?s=128&d=identicon&r=PG&f=1", "display_name": "mherzl", "link": "https://stackoverflow.com/users/3224967/mherzl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 386, "favorite_count": 0, "accepted_answer_id": 40073628, "answer_count": 1, "score": 1, "last_activity_date": 1476901250, "creation_date": 1476637455, "last_edit_date": 1476901250, "question_id": 40072963, "link": "https://stackoverflow.com/questions/40072963/haskell-diagrams-why-does-text-not-have-length-or-width", "title": "Haskell Diagrams: Why does text not have length or width?", "body": "<p>I would like to create a text box that I can set to have a particular width and height. However, the text box that I create appears to not have a width and height in the first place. E.g. the following code:</p>\n\n<pre><code>main = do\n  putStrLn $ show $ width $ myText\n  putStrLn $ show $ height $ myText\n  mainWith myText\n\nmyText :: Diagram B\nmyText = text \"here\" # lw 1 # fontSizeL 0.2 # fc grey # scaleX 1\n</code></pre>\n\n<p>results in a blank diagram (with no text), and prints \"0.0\" as the width and height of the text box:</p>\n\n<pre><code>ghc --make Main.hs &amp;&amp; ./Main -o circle.svg -w 400\n[1 of 1] Compiling Main             ( Main.hs, Main.o )\nLinking Main ...\n0.0\n0.0\n</code></pre>\n\n<hr>\n\n<p>In order to get the text to appear it seem that I need to place it on top of something else. E.g. the following code:</p>\n\n<pre><code>main = do\n  putStrLn $ show $ width $ myDiagram \n  putStrLn $ show $ height $ myDiagram\n  mainWith myDiagram\n\nmyDiagram :: Diagram B\nmyDiagram = myText &lt;&gt; myBackground\n\nmyText :: Diagram B\nmyText = text \"here\" # lw 1 # fontSizeL 0.2 # fc grey # scaleX 1\n\nmyBackground :: Diagram B\nmyBackground = rect 1 1 # fc black\n</code></pre>\n\n<p>produces the grey text within a black background as expected.</p>\n\n<hr>\n\n<p>Why does the text box not have a size?</p>\n\n<p>How can I set the length and width of a text box to a certain value?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 2424, "user_id": 3206471, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/fdc1f4bd9f3118fff33a160e9efdb61e?s=128&d=identicon&r=PG", "display_name": "gigabytes", "link": "https://stackoverflow.com/users/3206471/gigabytes"}, "edited": false, "score": 0, "creation_date": 1476634937, "post_id": 40072478, "comment_id": 67418323, "body": "Could you elaborate on what would you expect the output to be in the second case?"}], "answers": [{"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1476636170, "post_id": 40072624, "comment_id": 67418740, "body": "It&#39;s perhaps even clearer why the second expression doesn&#39;t work if you write it as <code>(id + 1) 1</code>."}, {"owner": {"reputation": 7193, "user_id": 363663, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/c59cd40f0edcd3feea80c7ca09bc8e76?s=128&d=identicon&r=PG", "display_name": "sof", "link": "https://stackoverflow.com/users/363663/sof"}, "edited": false, "score": 0, "creation_date": 1476636623, "post_id": 40072624, "comment_id": 67418887, "body": "Thanks. The point is that <code>(id id)</code> passes typecheck because <code>id</code> is typeless, isn&#39;t is? Are there any other typeless functions existing in Haskell?"}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "reply_to_user": {"reputation": 7193, "user_id": 363663, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/c59cd40f0edcd3feea80c7ca09bc8e76?s=128&d=identicon&r=PG", "display_name": "sof", "link": "https://stackoverflow.com/users/363663/sof"}, "edited": false, "score": 0, "creation_date": 1476636894, "post_id": 40072624, "comment_id": 67418979, "body": "@sof <code>id</code> isn&#39;t typeless. Everything has a type. <code>id</code>&#39;s type is <code>a -&gt; a</code>. In the expression <code>id id</code> the first <code>id</code> is being used at <code>(a -&gt; a) -&gt; (a -&gt; a)</code>"}, {"owner": {"reputation": 7193, "user_id": 363663, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/c59cd40f0edcd3feea80c7ca09bc8e76?s=128&d=identicon&r=PG", "display_name": "sof", "link": "https://stackoverflow.com/users/363663/sof"}, "edited": false, "score": 0, "creation_date": 1476637264, "post_id": 40072624, "comment_id": 67419104, "body": "Sure, everything has a type. I actually mean <code>id</code> takes a pure generic parameter. I&#39;d like to know about any other pure generic functions I&#39;m unaware of."}, {"owner": {"reputation": 7193, "user_id": 363663, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/c59cd40f0edcd3feea80c7ca09bc8e76?s=128&d=identicon&r=PG", "display_name": "sof", "link": "https://stackoverflow.com/users/363663/sof"}, "edited": false, "score": 0, "creation_date": 1476638354, "post_id": 40072624, "comment_id": 67419491, "body": "Other pure generic functions I could come up with might look like <code>f :: a -&gt; b -&gt; a</code> etc, but they seem useless."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 7193, "user_id": 363663, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/c59cd40f0edcd3feea80c7ca09bc8e76?s=128&d=identicon&r=PG", "display_name": "sof", "link": "https://stackoverflow.com/users/363663/sof"}, "edited": false, "score": 3, "creation_date": 1476643641, "post_id": 40072624, "comment_id": 67421437, "body": "@sof I don&#39;t think there are other interesting examples of &quot;pure generic&quot;/maximally polymorphic functions beyond the ones you mention -- after all, you can&#39;t do much in an implementation if you don&#39;t know anything about the types. The <code>a -&gt; b -&gt; a</code> one, by the way, is called <code>const</code>, and surprisingly enough it can be quite helpful -- it is very commonly used as a way to pass a fixed value to something that expects a function."}], "tags": [], "owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "is_accepted": true, "score": 7, "last_activity_date": 1476635894, "last_edit_date": 1476635894, "creation_date": 1476635567, "answer_id": 40072624, "question_id": 40072478, "link": "https://stackoverflow.com/questions/40072478/how-to-find-out-the-execution-sequences-in-haskell/40072624#40072624", "title": "How to find out the execution sequences in Haskell?", "body": "<p>Function application is left-associative, which means your examples are parsed as:</p>\n\n<pre><code>(id id) 1\n((+1) id) 1\n</code></pre>\n\n<p>The former reduces thus:</p>\n\n<pre><code>(id id) 1\nid 1\n1\n</code></pre>\n\n<p>The latter doesn't typecheck. <code>(+1)</code> has a type of <code>Num n =&gt; n -&gt; n</code>, whereas <code>id</code> has a type of <code>a -&gt; a</code> which is not a number.</p>\n\n<p>If you meant <code>(+1) (id 1)</code>, you have to write it out with parentheses.</p>\n"}], "owner": {"reputation": 7193, "user_id": 363663, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/c59cd40f0edcd3feea80c7ca09bc8e76?s=128&d=identicon&r=PG", "display_name": "sof", "link": "https://stackoverflow.com/users/363663/sof"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 81, "favorite_count": 0, "accepted_answer_id": 40072624, "answer_count": 1, "score": -1, "last_activity_date": 1476635894, "creation_date": 1476634680, "question_id": 40072478, "link": "https://stackoverflow.com/questions/40072478/how-to-find-out-the-execution-sequences-in-haskell", "title": "How to find out the execution sequences in Haskell?", "body": "<p>Haskell is able to run the two function calls one after the other on case 1 but confused on case 2 below, why?</p>\n\n<pre><code>ghci&gt; id id 1   -- case 1\n\nghci&gt; (+1) id 1 -- case 2\n</code></pre>\n"}, {"tags": ["haskell", "monads"], "comments": [{"owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 0, "creation_date": 1476622624, "post_id": 40070176, "comment_id": 67414306, "body": "Possible duplicate of <a href=\"http://stackoverflow.com/questions/37379984/is-there-a-way-to-chain-functions-like-withcstring\">Is there a way to chain functions like withCString?</a>"}, {"owner": {"reputation": 2849, "user_id": 1431255, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/6ac58ecb70f5b8dc7a3e2801d4750a8a?s=128&d=identicon&r=PG", "display_name": "wirrbel", "link": "https://stackoverflow.com/users/1431255/wirrbel"}, "reply_to_user": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 1, "creation_date": 1476624266, "post_id": 40070176, "comment_id": 67414780, "body": "How is that question a duplicate? I unfortunately cannot map my question to the question or answers over there."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1476626190, "post_id": 40070176, "comment_id": 67415417, "body": "More information about the types involved would be useful."}, {"owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 0, "creation_date": 1476626207, "post_id": 40070176, "comment_id": 67415423, "body": "It seems that you are having trouble composing your <code>fromDM</code> function calls because you have to nest the callbacks that handle the sub-results. It&#39;s the same pattern as composing <code>withCString</code> etc., by turning the nesting structure inside-out via <code>Cont</code>."}, {"owner": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 0, "creation_date": 1476626622, "post_id": 40070176, "comment_id": 67415579, "body": "@data_hope I agree that the remarks are opaque so far, and the the question is in no sense a duplicate. But ContT is the right idea. Note that  <code>\\e -&gt; ContT (flip fromDM e) :: Expr -&gt; ContT Term CompilerM Name</code> if I have the order right. It is hard to get a handle on it with so little source."}, {"owner": {"reputation": 2849, "user_id": 1431255, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/6ac58ecb70f5b8dc7a3e2801d4750a8a?s=128&d=identicon&r=PG", "display_name": "wirrbel", "link": "https://stackoverflow.com/users/1431255/wirrbel"}, "edited": false, "score": 0, "creation_date": 1476627671, "post_id": 40070176, "comment_id": 67415929, "body": "Alright, I updated the snippet so that it is at least a compilable self-contained piece of code. I suppose that one could find a solution to generalize that pattern.  I will also have a look at <code>Cont</code>/<code>ContT</code>."}, {"owner": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 0, "creation_date": 1476629296, "post_id": 40070176, "comment_id": 67416499, "body": "@data_hope This is the idea <a href=\"http://sprunge.us/KQWc\" rel=\"nofollow noreferrer\">sprunge.us/KQWc</a>"}, {"owner": {"reputation": 2849, "user_id": 1431255, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/6ac58ecb70f5b8dc7a3e2801d4750a8a?s=128&d=identicon&r=PG", "display_name": "wirrbel", "link": "https://stackoverflow.com/users/1431255/wirrbel"}, "reply_to_user": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 0, "creation_date": 1476631368, "post_id": 40070176, "comment_id": 67417173, "body": "@Michael thank you, it is really neat (and Cont seems to be a very useful monad)."}, {"owner": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 1, "creation_date": 1476632539, "post_id": 40070176, "comment_id": 67417588, "body": "@data_hope I can&#39;t tell what else is going on, so maybe this is wrong, but things like <code>fromDM</code> might be put entirely in <code>ContT</code> See this <a href=\"http://sprunge.us/gZbQ\" rel=\"nofollow noreferrer\">sprunge.us/gZbQ</a> We might even write <code>type Compiler a = ContT Term (State Incr) a</code>"}, {"owner": {"reputation": 2849, "user_id": 1431255, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/6ac58ecb70f5b8dc7a3e2801d4750a8a?s=128&d=identicon&r=PG", "display_name": "wirrbel", "link": "https://stackoverflow.com/users/1431255/wirrbel"}, "reply_to_user": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 0, "creation_date": 1476646414, "post_id": 40070176, "comment_id": 67422327, "body": "@Michael Having a closer look at <a href=\"http://sprunge.us/gZbQ\" rel=\"nofollow noreferrer\">sprunge.us/gZbQ</a> , indeed I think <code>type Compiler = ContT Term (State Incr)</code> was applicable with my code."}], "answers": [{"comments": [{"owner": {"reputation": 9485, "user_id": 20371, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/32c7a412ad0caf812ae974df5eb8ffcd?s=128&d=identicon&r=PG", "display_name": "Yawar", "link": "https://stackoverflow.com/users/20371/yawar"}, "edited": false, "score": 0, "creation_date": 1476647525, "post_id": 40074681, "comment_id": 67422672, "body": "Looks great; we could simplify a bit because <code>Expr</code> only ever has a single case, thus <code>fromDM k (Tuple es) = do ...</code>"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 9485, "user_id": 20371, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/32c7a412ad0caf812ae974df5eb8ffcd?s=128&d=identicon&r=PG", "display_name": "Yawar", "link": "https://stackoverflow.com/users/20371/yawar"}, "edited": false, "score": 1, "creation_date": 1476647629, "post_id": 40074681, "comment_id": 67422692, "body": "@Yawar Presumably this is a reduction of a more complicated collection of data types, so I tried to maintain the original code style wherever I could."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 2, "last_activity_date": 1476647070, "creation_date": 1476647070, "answer_id": 40074681, "question_id": 40070176, "link": "https://stackoverflow.com/questions/40070176/generalizing-a-monadic-expression-over-a-list-of-items/40074681#40074681", "title": "Generalizing a monadic expression over a list of items", "body": "<p>Okay, I don't know much about <code>Cont</code>, so let me outline my thought process when I approached this question. The first thing I wanted to do was to pull out only the bits of code that depend on the contents of the <code>Tuple</code>, thus:</p>\n\n<pre><code>fromDM k expr = case expr of\n    Tuple es -&gt; do\n        x  &lt;- generateNameM\n        t' &lt;- k x\n        letExprs x t' es\n\nletExprs x t' [e1, e2] = fromDM (\\z1 -&gt; fromDM (\\z2 -&gt; pure $ Let x [z1, z2] t') e2) e1\n-- etc.\n</code></pre>\n\n<p>We would like to abstract <code>letExprs</code> so that it can work on lists of any length. Now that we've written down the problem, the next step in the Feynman protocol is to Think Very Hard. So I stared Very Hard at the different cases. It looked to me like each cons cell in the list turned into a call to <code>fromDM</code>; and in the base case, the <code>Let</code> was applied to a varying list. We can stick the varying list in an accumulator, like this:</p>\n\n<pre><code>fromDM k expr = case expr of\n    Tuple es -&gt; do\n        x  &lt;- generateNameM\n        t' &lt;- k x\n        letExprs x t' [] es\n\nletExprs x t' vars [] = pure $ Let x (reverse vars) t'\nletExprs x t' vars (e:es) = fromDM (\\z -&gt; letExprs x t' (z:vars) es) e\n</code></pre>\n\n<p>This already looks pretty good to me. If you want to turn it into a fold (which is nice for the usual reasons: you can't accidentally screw up the recursion pattern, and readers know you're not doing anything tricky), we can now almost read it off directly:</p>\n\n<pre><code>fromDM k expr = case expr of\n    Tuple es -&gt; do\n        x  &lt;- generateNameM\n        t' &lt;- k x\n        foldr (\\e k vars -&gt; fromDM (\\z -&gt; k (z:vars)) e)\n              (\\vars -&gt; pure $ Let x (reverse vars) t')\n              es\n</code></pre>\n"}], "owner": {"reputation": 2849, "user_id": 1431255, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/6ac58ecb70f5b8dc7a3e2801d4750a8a?s=128&d=identicon&r=PG", "display_name": "wirrbel", "link": "https://stackoverflow.com/users/1431255/wirrbel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 100, "favorite_count": 0, "accepted_answer_id": 40074681, "answer_count": 1, "score": 1, "last_activity_date": 1476647070, "creation_date": 1476620419, "last_edit_date": 1476627266, "question_id": 40070176, "link": "https://stackoverflow.com/questions/40070176/generalizing-a-monadic-expression-over-a-list-of-items", "title": "Generalizing a monadic expression over a list of items", "body": "<p>I have a monadic function that helps translating values of type Expr to Term's. The signature is </p>\n\n<p><code>fromDM :: (Name -&gt; CompilerM Term) -&gt; Expr -&gt; CompilerM Term</code></p>\n\n<p>I have trouble treating one case in general. I can write down implementations for every individual solution</p>\n\n<pre><code>import Control.Monad.State\n\ntype CompilerM = State Incr\n\nnewtype Incr = Incr Int deriving (Show)\n\ngenerateNameM :: CompilerM Name\ngenerateNameM = state $ \\i -&gt;\n  let Incr y = i\n      j      = (+1) y\n  in  (Name j, Incr j)\n\ndata Expr = Tuple [Expr]\ndata Name = Name Int\ndata Term = Let Name [Name] Term\n\nfromDM :: (Name -&gt; CompilerM Term) -&gt; Expr -&gt; CompilerM Term\nfromDM k expr = case expr of\n  Tuple [e1, e2]         -&gt; do\n    x  &lt;- generateNameM\n    t' &lt;- k x\n    fromDM (\\z1 -&gt; fromDM (\\z2 -&gt; pure $ Let x [z1, z2] t') e2) e1\n\n  Tuple [e1, e2, e3]     -&gt; do\n    x  &lt;- generateNameM\n    t' &lt;- k x\n    fromDM (\\z1 -&gt; fromDM (\\z2 -&gt; fromDM (\\z3 -&gt; pure $ Let x [z1, z2, z3] t') e3) e2) e1\n\n  Tuple [e1, e2, e3, e4] -&gt; do\n    x  &lt;- generateNameM\n    t' &lt;- k x\n    fromDM (\\z1 -&gt; fromDM (\\z2 -&gt; fromDM (\\z3 -&gt; fromDM (\\z4 -&gt; return $ Let x [z1, z2, z3, z4] t') e4) e3) e2) e1\n</code></pre>\n\n<p>Now I want to substitute this with a general rule, i.e. <code>Tuple es</code>. I feel this should be doable with either <code>foldlM</code> or <code>foldrM</code>. Yet I am kind of stuck on how to do this. So, how do I write a general rule for this transformation that works on an arbitrary list of expressions?</p>\n"}, {"tags": ["haskell", "immutability"], "comments": [{"owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "edited": false, "score": 0, "creation_date": 1476607481, "post_id": 40068397, "comment_id": 67410392, "body": "Why even <code>unsafeThaw</code> in the first version if the vector isn&#39;t mutated?"}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1476634980, "post_id": 40068397, "comment_id": 67418342, "body": "Taking a cue from <code>vector</code>, you should probably implement the pure version of <code>show</code> (which should intrinsically be a pure operation, and should anyways be needing to evaluate most/all of the structure) and if you really want you can pass it over to the mutable version via <code>unsafeFreeze</code>, <code>unsafeThaw</code>. I&#39;m quite confused as to why you need the <code>deepseq</code> call in <code>render</code>."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1476635134, "post_id": 40068397, "comment_id": 67418384, "body": "There is no reason a lazy show could not exist for the mutable type, having type e.g. <code>Show a =&gt; MCustom s a -&gt; a</code> - if you build your immutable type atop your mutable one, your immutable functions will typically just wrap the mutable ones which are safe to use in that context."}, {"owner": {"reputation": 2313, "user_id": 1513295, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/bc00550a36e3d751bee5e0027f929cbf?s=128&d=identicon&r=PG", "display_name": "semicolon", "link": "https://stackoverflow.com/users/1513295/semicolon"}, "reply_to_user": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "edited": false, "score": 0, "creation_date": 1476642914, "post_id": 40068397, "comment_id": 67421150, "body": "@Andr&#225;sKov&#225;cs Because otherwise calling <code>render</code> doesn&#39;t type check, I can only use <code>render</code> on the thawed version."}, {"owner": {"reputation": 2313, "user_id": 1513295, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/bc00550a36e3d751bee5e0027f929cbf?s=128&d=identicon&r=PG", "display_name": "semicolon", "link": "https://stackoverflow.com/users/1513295/semicolon"}, "reply_to_user": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1476643329, "post_id": 40068397, "comment_id": 67421305, "body": "@Alec because the function is not safe without <code>deepseq</code>: <code>v &lt;- MV.replicate 1 0</code>, <code>s &lt;-  show &lt;$&gt; V.unsafeFreeze v</code>, <code>MV.write v 0 1</code>, <code>putStrLn s</code> incorrectly prints <code>[1]</code> whereas I want <code>[0]</code>. With <code>deepseq</code> I correctly get <code>[0]</code>."}, {"owner": {"reputation": 2313, "user_id": 1513295, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/bc00550a36e3d751bee5e0027f929cbf?s=128&d=identicon&r=PG", "display_name": "semicolon", "link": "https://stackoverflow.com/users/1513295/semicolon"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1476643375, "post_id": 40068397, "comment_id": 67421333, "body": "@user2407038 Can you give me a safe implementation of such a lazy show? Because as you can see from my other comment just using <code>unsafeFreeze</code> and not <code>deepseq</code> is unsafe. And <code>deepseq</code> ruins laziness for obvious reasons."}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1476644095, "post_id": 40068397, "comment_id": 67421571, "body": "@semicolon Maybe you should just not have a <code>Show</code> instance for the mutable version of your data structure then. <code>MVector</code> doesn&#39;t have such an instance, for example."}, {"owner": {"reputation": 2313, "user_id": 1513295, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/bc00550a36e3d751bee5e0027f929cbf?s=128&d=identicon&r=PG", "display_name": "semicolon", "link": "https://stackoverflow.com/users/1513295/semicolon"}, "reply_to_user": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1476645183, "post_id": 40068397, "comment_id": 67421936, "body": "@Alec <code>Show</code> was just one example. The same question applies to tons of operations from indexing to slicing to folding."}, {"owner": {"reputation": 2313, "user_id": 1513295, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/bc00550a36e3d751bee5e0027f929cbf?s=128&d=identicon&r=PG", "display_name": "semicolon", "link": "https://stackoverflow.com/users/1513295/semicolon"}, "reply_to_user": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1476645523, "post_id": 40068397, "comment_id": 67422052, "body": "@Alec Also I really want a <code>render</code> that I can use while in the <code>ST</code> monad, manually calling <code>unsafeFreeze</code> each time sounds like a bad idea, and I don&#39;t want to pay for <code>freeze</code>."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1476726359, "post_id": 40068397, "comment_id": 67457872, "body": "@semicolon I can&#39;t, because I haven&#39;t a clue what <code>MCustom</code> or <code>Custom</code> look like. The <code>show</code> function seems straightforward if you have a function <code>readMVal :: MCustom s a -&gt; Ix -&gt; a</code> , presumably the version for <code>Custom</code> would use a comparable <code>Custom a -&gt; Ix -&gt; a</code> to read individual &#39;parts&#39; of the structure and combine the result in some way."}, {"owner": {"reputation": 2313, "user_id": 1513295, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/bc00550a36e3d751bee5e0027f929cbf?s=128&d=identicon&r=PG", "display_name": "semicolon", "link": "https://stackoverflow.com/users/1513295/semicolon"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1476731367, "post_id": 40068397, "comment_id": 67460495, "body": "@user2407038 MCustom / Custom are just MVector and Vector with some extra STRef&#39;s on them. Do you see why <code>show</code> for a mutable object HAS to be strict? Because otherwise if you don&#39;t request the pure output string fully before you mutate the structure you will change the value of that &quot;pure&quot; string. Now that we have established the mutable version HAS to be strict, how do I go about sharing code most efficiently, because the immutable version&#39;s <code>show</code> should be lazy, I think I have to use <code>unsafeFreeze</code> and <code>deepseq</code>."}], "answers": [{"comments": [{"owner": {"reputation": 2313, "user_id": 1513295, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/bc00550a36e3d751bee5e0027f929cbf?s=128&d=identicon&r=PG", "display_name": "semicolon", "link": "https://stackoverflow.com/users/1513295/semicolon"}, "edited": false, "score": 0, "creation_date": 1476765743, "post_id": 40097289, "comment_id": 67471501, "body": "<code>render</code> is not safe, because if you don&#39;t force with <code>seq</code> before returning then you can have the exact same issue as above. If you mutate the vector before you force ANY of the returned string, then the underlying text will be mutated out from under you, and thus it isn&#39;t pure / safe. <code>atomically</code> seems like a decent abstraction, but doesn&#39;t solve the main issue which is that I am forced to have some combination of bidirectional coupling, code duplication / excessive strictness. As writes would still have to be specified in the mutable module, and reads in the immutable module."}, {"owner": {"reputation": 2313, "user_id": 1513295, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/bc00550a36e3d751bee5e0027f929cbf?s=128&d=identicon&r=PG", "display_name": "semicolon", "link": "https://stackoverflow.com/users/1513295/semicolon"}, "edited": false, "score": 0, "creation_date": 1476765887, "post_id": 40097289, "comment_id": 67471538, "body": "So since <code>render</code> still requires <code>seq</code>, you really haven&#39;t gained much from just using <code>String</code> and then <code>deepseq</code> instead, and you have a more complex result that requires more code."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "reply_to_user": {"reputation": 2313, "user_id": 1513295, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/bc00550a36e3d751bee5e0027f929cbf?s=128&d=identicon&r=PG", "display_name": "semicolon", "link": "https://stackoverflow.com/users/1513295/semicolon"}, "edited": false, "score": 0, "creation_date": 1476805451, "post_id": 40097289, "comment_id": 67496681, "body": "It seems to me that bidirectional coupling is baked in on a very basic level - some algorithms are fundamentally mutable and others immutable (and others are sensible in both contexts). With atomically/modify I dont think you would have code duplication, nor excessive strictness (youve made clear that all MCustom functions should be strict). Is it really necessary to permit reading only from the immutable type and writing only to the mutable one?"}, {"owner": {"reputation": 2313, "user_id": 1513295, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/bc00550a36e3d751bee5e0027f929cbf?s=128&d=identicon&r=PG", "display_name": "semicolon", "link": "https://stackoverflow.com/users/1513295/semicolon"}, "edited": false, "score": 0, "creation_date": 1476820783, "post_id": 40097289, "comment_id": 67505517, "body": "Ignoring laziness everything you can do with a immutable type you can do with a mutable type, reading writing etc (you just have to do it in ST and be careful about accidental sharing). So I was hoping to have the mutable type be the &quot;core&quot; structure and the immutable type be a pure wrapper over the top. Which only breaks in one circumstance, which is that the pure wrapper should be more lazy than the impure core type. The exception to this is when you have a type you can mutate without total copying, such as trees / linked lists, then you want the two versions fairly separate."}, {"owner": {"reputation": 2313, "user_id": 1513295, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/bc00550a36e3d751bee5e0027f929cbf?s=128&d=identicon&r=PG", "display_name": "semicolon", "link": "https://stackoverflow.com/users/1513295/semicolon"}, "edited": false, "score": 0, "creation_date": 1476820975, "post_id": 40097289, "comment_id": 67505635, "body": "&quot;Is it really necessary to permit reading only from the immutable type and writing only to the mutable one&quot; oh no I didn&#39;t mean that. I mean that I could potentially write all the potentially lazy read operations on the immutable type, and all the strict write operations on the mutable type. Within <code>Custom.Base</code> and <code>MCustom.Base</code>. Then I would have <code>Custom</code> which would use <code>unsafeThaw</code> to get write operations, and <code>MCustom</code> which would use <code>unsafeFreeze</code> and <code>deepseq</code> to get read operations. Then I wouldn&#39;t bother importing from the limited <code>.Base</code> modules any more and get all operations."}], "tags": [], "owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "is_accepted": false, "score": 0, "last_activity_date": 1476747518, "creation_date": 1476747518, "answer_id": 40097289, "question_id": 40068397, "link": "https://stackoverflow.com/questions/40068397/sharing-observer-function-code-between-mutable-and-frozen-versions-of-a-type/40097289#40097289", "title": "Sharing observer function code between mutable and frozen versions of a type", "body": "<p>How about having a pure function </p>\n\n<pre><code>show :: (StringLike s, Show a) =&gt; Custom a -&gt; s\n</code></pre>\n\n<p>You can get both lazy and strict output with different instantiations of <code>s</code>, in which <code>cons</code> is either lazy or strict; e.g. <code>String</code> or <code>Text</code>: </p>\n\n<pre><code>class StringLike s where \n  cons :: Char -&gt; s -&gt; s \n  nil :: s \n  uncons :: s -&gt; Maybe (Char, s) \n\ninstance StringLike String where ...\ninstance StringLike Text where ...\n</code></pre>\n\n<p>You could use other methods, e.g. phantom types, or simply having two functions (<code>showString</code> and <code>showText</code>), to distinguish between lazy and strict output if you like. But if you look at types as specifications of a function's semantics, then the place to indicate laziness or strictness is in the return type of that operation. This removes the need for some sort of strict <code>show</code> for <code>Custom</code> inside of <code>ST</code>.</p>\n\n<p>For the <code>MCustom</code> version, you probably do not export the <code>String</code> version, e.g: </p>\n\n<pre><code>render :: MCustom s a -&gt; ST s Text\nrender a = show &lt;$&gt; unsafeFreeze a\n</code></pre>\n\n<p>You can throw in a <code>seq</code> to force the result when the function runs but the entire <code>Text</code> would be forced when any character is used anyways.</p>\n\n<hr>\n\n<p>But the simplest solution seems to just abstract the pattern of using a mutable structure in an immutable fashion, e.g. </p>\n\n<pre><code>atomically :: (NFData a) =&gt; (Custom x -&gt; a) -&gt; MCustom s x -&gt; ST s a \natomically f v = do\n    r &lt;- f &lt;$&gt; unsafeFreeze v\n    r `deepseq` pure r\n</code></pre>\n\n<p>This saves you from using <code>unsafeFreeze/deepseq</code> all over your code, just as you have <a href=\"https://hackage.haskell.org/package/vector-0.11.0.0/docs/src/Data-Vector.html#modify\" rel=\"nofollow\"><code>modify</code></a> to do immutable operations on mutable vectors. </p>\n"}], "owner": {"reputation": 2313, "user_id": 1513295, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/bc00550a36e3d751bee5e0027f929cbf?s=128&d=identicon&r=PG", "display_name": "semicolon", "link": "https://stackoverflow.com/users/1513295/semicolon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 113, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1476747518, "creation_date": 1476606622, "question_id": 40068397, "link": "https://stackoverflow.com/questions/40068397/sharing-observer-function-code-between-mutable-and-frozen-versions-of-a-type", "title": "Sharing observer function code between mutable and frozen versions of a type", "body": "<p>I was working on creating my own custom mutable/frozen data type that internally contains an <code>MVector</code>/<code>Vector</code>. It needs to be mutable for performance reasons so switching to an immutable data structure is not something I am considering.</p>\n\n<p>It seems like implementing an observer function for one of the two versions should allow me to just steal that implementation for the other type. Here are the two options I am considering:</p>\n\n<pre><code>render :: Show a =&gt; MCustom s a -&gt; ST s String\nrender mc = ...non trivial implementation...\n\nshow :: Show a =&gt; Custom a -&gt; a\nshow c = runST $ render =&lt;&lt; unsafeThaw c\n</code></pre>\n\n<p>Where <code>unsafeThaw</code> calls <code>Vector.unsafeThaw</code> under the covers, which should be safe as that thawed vector is never mutated, only read. This approach feels the cleanest, the only downside is that <code>render</code> is strict, which forces <code>show</code> to be strict whereas a duplicate implementation could correctly stream the String without forcing it all at once.</p>\n\n<p>The other option, which feels much more dirty but that I think is safe is to do this:</p>\n\n<pre><code>show :: Show a =&gt; Custom a -&gt; a\nshow c = ...non trivial implementation that allows lazy streaming...\n\nrender :: Show a =&gt; MCustom s a -&gt; ST s String\nrender mc = do\n    s &lt;- show &lt;$&gt; unsafeFreeze mc\n    s `deepseq` pure s\n</code></pre>\n\n<p>Are either of these my best option? If not what else should I do?</p>\n\n<p>To me it seemed most intuitive to build one version off of the other. But it seems like if I make the mutable version the base version then I will end up with a lot more strictness then I want, even if the implementations seem fairly clean and logical, just because <code>ST</code> necessitates strictness unless I throw in some <code>unsafeInterleaveST</code> calls, but these would only be safe when the mutable observer was called via an immutable object.</p>\n\n<p>On the other hand if I make the immutable version the base version then I will end up with more dirty, <code>deepseq</code> code, and sometimes I would just have to reimplement things. For example all in place editing functions can be done on a frozen object pretty easily by just copying the frozen object and then calling <code>unsafeThaw</code> on it and modifying the copy in place before calling <code>unsafeFreeze</code> and returning it. But doing the opposite isn't really doable, as a copy modification that is used for the immutable version cannot be converted to an in place modification.</p>\n\n<p>Should I perhaps write all modification functions alongside the mutable implementation, and all observer functions alongside the immutable implementation. And then have a file that depends on both that unifies everything via <code>unsafeThaw</code> and <code>unsafeFreeze</code>?</p>\n"}, {"tags": ["haskell", "typeclass"], "comments": [{"owner": {"reputation": 137, "user_id": 5771177, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f66c6628f434a7998195c89f2af5427b?s=128&d=identicon&r=PG&f=1", "display_name": "suffi", "link": "https://stackoverflow.com/users/5771177/suffi"}, "edited": false, "score": 0, "creation_date": 1476612295, "post_id": 40067411, "comment_id": 67411546, "body": "I think it marks a functional dependency: [URL] (<a href=\"https://wiki.haskell.org/Functional_dependencies\" rel=\"nofollow noreferrer\">wiki.haskell.org/Functional_dependencies</a>)"}, {"owner": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 1, "creation_date": 1476623518, "post_id": 40067411, "comment_id": 67414548, "body": "In addition to <code>FunctionalDependencies</code>, this question asks about <code>KindSignatures</code> and <code>ConstraintKinds</code>. It thus cannot be an exact duplicate of any question from 2010, when these extensions did not exist."}, {"owner": {"reputation": 84731, "user_id": 510937, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/70b13a9ae1aae1ca1aa6ac8dab4643f2?s=128&d=identicon&r=PG", "display_name": "Bakuriu", "link": "https://stackoverflow.com/users/510937/bakuriu"}, "reply_to_user": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 0, "creation_date": 1476652200, "post_id": 40067411, "comment_id": 67424163, "body": "@Michael The OP should learn to ask one question per question. In this case if you want to reopen the question it would be a good idea to remove all mentions of functional dependencies and instead ask about the constraints etc. Also: even then this has already been asked so this is probably just a case of changing duplicate target..."}], "owner": {"reputation": 1940, "user_id": 1823440, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/a05172a798e21a3e41dda8cba1ef5cc5?s=128&d=identicon&r=PG", "display_name": "Need4Steed", "link": "https://stackoverflow.com/users/1823440/need4steed"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 121, "favorite_count": 0, "closed_date": 1476604013, "answer_count": 0, "score": 1, "last_activity_date": 1476726739, "creation_date": 1476598334, "last_edit_date": 1476726739, "question_id": 40067411, "link": "https://stackoverflow.com/questions/40067411/what-does-the-mean-in-the-signature-of-monadreader", "closed_reason": "Duplicate", "title": "What does the &quot;|&quot; mean in the signature of MonadReader?", "body": "<p>When I'm reading \"All About Monads\", I bumped into the class type definitions like this:</p>\n\n<pre><code>class Monad m =&gt; MonadReader r (m :: * -&gt; *) | m -&gt; r where\n  ...\n\nclass Monad m =&gt; MonadState s (m :: * -&gt; *) | m -&gt; s where      \n  ...\n</code></pre>\n\n<p>I'm completely baffled by the vertical bar notation! Is that an \"OR\", is that a constraint? And what about <code>m-&gt;s</code>, what's that supposed to mean?</p>\n\n<p>I know what is a type class, I know what are type constructors and type variables, and I also get what are Kinds about, I just cannot make any sense out of this! </p>\n\n<p>Futhermore, when I resort to ghci, after typing <code>:k MonadState</code> <code>:k MonadReader</code> they both give me <code>* -&gt; (* -&gt; *) -&gt; GHC.Prim.Constraint</code> back, that's just so weird!</p>\n\n<p>Could somebody please shed some light on this?</p>\n"}, {"tags": ["haskell", "monad-transformers"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1476593586, "post_id": 40066909, "comment_id": 67407610, "body": "Possible duplicate of <a href=\"http://stackoverflow.com/questions/14178889/reader-monad-purpose\">Reader Monad Purpose</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1953, "user_id": 899723, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f68bcc2d6f5196fa090d578eb8356b9c?s=128&d=identicon&r=PG", "display_name": "mac10688", "link": "https://stackoverflow.com/users/899723/mac10688"}, "edited": false, "score": 0, "creation_date": 1476593575, "post_id": 40066962, "comment_id": 67407608, "body": "Can I reach this environment?"}, {"owner": {"reputation": 1953, "user_id": 899723, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f68bcc2d6f5196fa090d578eb8356b9c?s=128&d=identicon&r=PG", "display_name": "mac10688", "link": "https://stackoverflow.com/users/899723/mac10688"}, "edited": false, "score": 0, "creation_date": 1476594210, "post_id": 40066962, "comment_id": 67407709, "body": "Is it that if I want the environment I need to do &lt;- ask?"}, {"owner": {"reputation": 2424, "user_id": 3206471, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/fdc1f4bd9f3118fff33a160e9efdb61e?s=128&d=identicon&r=PG", "display_name": "gigabytes", "link": "https://stackoverflow.com/users/3206471/gigabytes"}, "edited": false, "score": 0, "creation_date": 1476594538, "post_id": 40066962, "comment_id": 67407778, "body": "An example of usage should be given to let the OP better understand what you are talking about. Types don&#39;t talk by themselves to beginners, this is important to remember..."}, {"owner": {"reputation": 1953, "user_id": 899723, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f68bcc2d6f5196fa090d578eb8356b9c?s=128&d=identicon&r=PG", "display_name": "mac10688", "link": "https://stackoverflow.com/users/899723/mac10688"}, "edited": false, "score": 0, "creation_date": 1476624852, "post_id": 40066962, "comment_id": 67414982, "body": "@Alec thank you for taking the time to write that up!"}], "tags": [], "owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "is_accepted": true, "score": 2, "last_activity_date": 1476595638, "last_edit_date": 1476595638, "creation_date": 1476593488, "answer_id": 40066962, "question_id": 40066909, "link": "https://stackoverflow.com/questions/40066909/readert-static-environment/40066962#40066962", "title": "ReaderT static environment", "body": "<p>It means that the environment cannot be updated: you can only <em>read</em> from it (hence the name of <code>ReaderT</code>). This is in contrast to monad transformers like <code>StateT</code> which provide you an environment you can both read and write to.</p>\n\n<hr>\n\n<p>Inside a reader monad, you can reach the envionment using the <a href=\"http://hackage.haskell.org/package/transformers-0.5.2.0/docs/Control-Monad-Trans-Reader.html#v:ask\" rel=\"nofollow\"><code>ask</code></a> function:</p>\n\n<pre><code>ask :: Monad m =&gt; ReaderT r m r \n</code></pre>\n\n<p>Inside a state monad, you have a similar function for reading called <a href=\"http://hackage.haskell.org/package/transformers-0.5.2.0/docs/Control-Monad-Trans-State-Lazy.html#v:get\" rel=\"nofollow\"><code>get</code></a> as well as another function which writes to the state called <a href=\"http://hackage.haskell.org/package/transformers-0.5.2.0/docs/Control-Monad-Trans-State-Lazy.html#v:put\" rel=\"nofollow\"><code>put</code></a>:</p>\n\n<pre><code>get :: Monad m =&gt; StateT s m s \nput :: Monad m =&gt; s -&gt; StateT s m ()\n</code></pre>\n\n<h3>Examples</h3>\n\n<p>Here is a sample usage of both <code>ReaderT</code> and <code>StateT</code>. Let's suppose my underlying monad will be <code>IO</code> so that I will be able to print things along the way.</p>\n\n<p>The contrived example here is a number guessing program - the environment is just a number that you are trying to guess (so <code>Int</code>). <code>guess</code> takes a number and checks whether the number is the same one as the one in the environment. If not, it prints a message to the screen. In either case, it returns whether your guess was successful.</p>\n\n<pre><code>guessReader :: Int -&gt; ReaderT Int IO Bool\nguessReader guess = do\n  actual &lt;- ask\n  if guess == actual\n    then return True\n    else do\n      lift $ putStrLn (\"The number was \" ++ show actual)\n      return False\n</code></pre>\n\n<p>However, suppose now you want a way of changing the number you are trying to guess randomly after a guess. Then, since you need to change the environment, you will need to use <code>StateT</code>.</p>\n\n<pre><code>import System.Random (randomRIO)\n\nguessState :: Int -&gt; StateT Int IO Bool\nguessState guess = do\n   actual &lt;- get\n   if guess == actual\n     then return True\n     else do\n       lift $ putStrLn (\"The number was \" ++ show actual)\n       newActual &lt;- lift $ randomRIO (0,10)\n       put newActual\n       return False\n</code></pre>\n\n<p>Then, if you run the reader version several times, note that the value you are trying to guess never changes. That is not the case with the state version, which resets to a new number every time you make a wrong guess:</p>\n\n<pre><code>ghci&gt; runReaderT (guessReader 3 &gt;&gt; guessReader 4 &gt;&gt; guessReader 5) 5\nThe number was 5\nThe number was 5\nTrue\nghci&gt; evalStateT (guessState 3 &gt;&gt; guessState 4 &gt;&gt; guessState 5) 5\nThe number was 5\nThe number was 6\nThe number was 2\nFalse\n</code></pre>\n"}], "owner": {"reputation": 1953, "user_id": 899723, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f68bcc2d6f5196fa090d578eb8356b9c?s=128&d=identicon&r=PG", "display_name": "mac10688", "link": "https://stackoverflow.com/users/899723/mac10688"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 148, "favorite_count": 0, "accepted_answer_id": 40066962, "answer_count": 1, "score": 2, "last_activity_date": 1476718187, "creation_date": 1476592926, "last_edit_date": 1476718187, "question_id": 40066909, "link": "https://stackoverflow.com/questions/40066909/readert-static-environment", "title": "ReaderT static environment", "body": "<blockquote>\n  <p>Declaration of the <code>ReaderT</code> monad transformer, which adds a static environment to a given monad.</p>\n</blockquote>\n\n<p>What does it mean to add a static environment to a given monad?</p>\n\n<p>Someone suggested that this is a duplicate to another question. I believe that this question is unique because I'm asking what it means to have a static environment and also my question pertains to ReaderT. Even if it is similar to Reader, they are still different.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1476592279, "post_id": 40066820, "comment_id": 67407423, "body": "Possible duplicate of <a href=\"http://stackoverflow.com/questions/11810889/functions-as-applicative-functors-haskell-lyah\">functions as applicative functors (Haskell / LYAH)</a>"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1476592387, "post_id": 40066820, "comment_id": 67407438, "body": "(Hint: remember that <code>liftA2 f x y = f &lt;$&gt; x &lt;*&gt; y</code>, and note that the <code>Applicative</code> instance involved here is the one for functions.)"}], "answers": [{"comments": [{"owner": {"reputation": 409, "user_id": 1897830, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/4bb6f01afcee8d6fd59ccb93499732d6?s=128&d=identicon&r=PG", "display_name": "user1897830", "link": "https://stackoverflow.com/users/1897830/user1897830"}, "edited": false, "score": 0, "creation_date": 1476599680, "post_id": 40066866, "comment_id": 67408737, "body": "Ok. Thanks for that. Haven&#39;t read the reader monad chapter yet. Don&#39;t know why they gave it as an example when it hasn&#39;t been covered."}], "tags": [], "owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "is_accepted": false, "score": 5, "last_activity_date": 1476592450, "creation_date": 1476592450, "answer_id": 40066866, "question_id": 40066820, "link": "https://stackoverflow.com/questions/40066820/using-lifta2-with-functions/40066866#40066866", "title": "Using liftA2 with functions", "body": "<p>Remember that <code>((-&gt;) a)</code> is a <code>Monad</code> (also known as the reader monad), and hence an <code>Applicative</code> too. Taken <a href=\"https://hackage.haskell.org/package/base-4.9.0.0/docs/src/GHC.Base.html#line-641\" rel=\"noreferrer\">from the source for base</a></p>\n\n<pre><code>instance Applicative ((-&gt;) a) where\n  pure = const\n  (&lt;*&gt;) f g x = f x (g x)\n</code></pre>\n\n<p>Then, <code>liftA2 (||) x g</code> is the function of type <code>(Num a, Eq a) =&gt; a -&gt; Bool</code> that checks if either of the results of applying the argument to <code>x</code> and <code>g</code> is <code>True</code>.</p>\n"}], "owner": {"reputation": 409, "user_id": 1897830, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/4bb6f01afcee8d6fd59ccb93499732d6?s=128&d=identicon&r=PG", "display_name": "user1897830", "link": "https://stackoverflow.com/users/1897830/user1897830"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1491, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1476599528, "creation_date": 1476591987, "question_id": 40066820, "link": "https://stackoverflow.com/questions/40066820/using-lifta2-with-functions", "title": "Using liftA2 with functions", "body": "<p>I am wondering how this works. </p>\n\n<pre><code>x 9001 = True\nx _ = False\n\ng 42 = True\ng _ = False\n\n(liftA2 (||) x g) 42 = True\n\nliftA2 :: Applicative f =&gt; (a -&gt; b -&gt; c) -&gt; f a -&gt; f b -&gt; f c\nx :: (Eq a, Num a) =&gt; a -&gt; Bool\ng :: (Eq a, Num a) =&gt; a -&gt; Bool\n</code></pre>\n\n<p>How does the type of x and g (a -> Bool) correspond to what liftA2 expects (f a)?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1476583779, "post_id": 40065901, "comment_id": 67406138, "body": "If this is not just an exercise, note that your specific problem can be solved with the <a href=\"https://hackage.haskell.org/package/base-4.9.0.0/docs/Data-Monoid.html\" rel=\"nofollow noreferrer\"><code>Monoid</code></a> class: for instance, you can try, in GHCi, <code>import Data.Monoid</code> followed by <code>&quot;foo&quot; &lt;&gt; &quot;bar&quot;</code> and <code>Sum 2 &lt;&gt; Sum 3</code>."}], "answers": [{"comments": [{"owner": {"reputation": 591, "user_id": 2639425, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ca29ba529fbce7f2c820b9eb8d42bb3d?s=128&d=identicon&r=PG", "display_name": "gongqj", "link": "https://stackoverflow.com/users/2639425/gongqj"}, "edited": false, "score": 0, "creation_date": 1476581681, "post_id": 40065921, "comment_id": 67405803, "body": "<code>\u2022 Couldn&#39;t match expected type \u2018InputType -&gt; OutputType\u2019                   with actual type \u2018Either Int b0\u2019     \u2022 Possible cause: \u2018Left\u2019 is applied to too many arguments       In the expression: Left (a + b)       In an equation for \u2018add&#39;\u2019: add&#39; (NumType a b) = Left (a + b)</code>"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 591, "user_id": 2639425, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ca29ba529fbce7f2c820b9eb8d42bb3d?s=128&d=identicon&r=PG", "display_name": "gongqj", "link": "https://stackoverflow.com/users/2639425/gongqj"}, "edited": false, "score": 2, "creation_date": 1476582297, "post_id": 40065921, "comment_id": 67405895, "body": "@gongqj The problem is the signature you gave <code>add&#39;</code>. For the function you wrote it should be <code>add&#39; :: InputType -&gt; OutputType</code>"}, {"owner": {"reputation": 591, "user_id": 2639425, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ca29ba529fbce7f2c820b9eb8d42bb3d?s=128&d=identicon&r=PG", "display_name": "gongqj", "link": "https://stackoverflow.com/users/2639425/gongqj"}, "edited": false, "score": 0, "creation_date": 1476622601, "post_id": 40065921, "comment_id": 67414294, "body": "Oh, I forgot to change the signature before. Thanks for you reply. Now, the definition is ok, but still failed when to call <code>add&#39; $ NumType 1 2</code>  <i><b>Data constructor not in scope: NumInput :: Integer -&gt; Integer -&gt; InputType</b></i>"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1476622927, "post_id": 40065921, "comment_id": 67414386, "body": "It looks like you typed <code>NumInput</code> instead of <code>NumType</code>."}, {"owner": {"reputation": 591, "user_id": 2639425, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ca29ba529fbce7f2c820b9eb8d42bb3d?s=128&d=identicon&r=PG", "display_name": "gongqj", "link": "https://stackoverflow.com/users/2639425/gongqj"}, "edited": false, "score": 0, "creation_date": 1476639331, "post_id": 40065921, "comment_id": 67419839, "body": "Sorry, I was just refactoring the type name, and then see your reply, so there is a typo."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 5, "last_activity_date": 1476584140, "last_edit_date": 1476584140, "creation_date": 1476581186, "answer_id": 40065921, "question_id": 40065901, "link": "https://stackoverflow.com/questions/40065901/how-to-define-a-function-with-different-types-of-input-and-output/40065921#40065921", "title": "How to define a function with different types of input and output?", "body": "<p>Your declaration of <code>OutputType</code> does not specify that it can be either an <code>Int</code> or a <code>String</code>; rather, you have created a new <em>pair</em> that requires both an <code>Int</code> <em>and</em> a <code>String</code>. Your data constuctor <code>Either</code> just happens to have the same name as the <em>type</em> constructor <code>Either</code>.</p>\n\n<p>I think you meant</p>\n\n<pre><code>type OutputType = Either Int String\n</code></pre>\n\n<p>in which case you can then define your function if you use the correct constructors</p>\n\n<pre><code>add' :: InputType -&gt; OutputType\nadd' (NumType a b) = Left (a + b)\nadd' (StrType a b) = Right (a ++ b)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "is_accepted": false, "score": 1, "last_activity_date": 1476616523, "last_edit_date": 1495541795, "creation_date": 1476616523, "answer_id": 40069625, "question_id": 40065901, "link": "https://stackoverflow.com/questions/40065901/how-to-define-a-function-with-different-types-of-input-and-output/40069625#40069625", "title": "How to define a function with different types of input and output?", "body": "<p>You could use a GADT to represent at the value level the type of the input you're getting:</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\n\nmodule Add where\n\ndata SType a where\n  SString :: SType String\n  SInt    :: SType Int\n\nadd :: SType a -&gt; a -&gt; a -&gt; a\nadd SString = (++)\nadd SInt    = (+)\n</code></pre>\n\n<p>I called the GADT <code>SType</code> because it's a <a href=\"https://stackoverflow.com/questions/16017294/singleton-types-in-haskell\">singleton type</a>.</p>\n"}], "owner": {"reputation": 591, "user_id": 2639425, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ca29ba529fbce7f2c820b9eb8d42bb3d?s=128&d=identicon&r=PG", "display_name": "gongqj", "link": "https://stackoverflow.com/users/2639425/gongqj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1202, "favorite_count": 0, "accepted_answer_id": 40065921, "answer_count": 2, "score": 0, "last_activity_date": 1476616523, "creation_date": 1476580941, "question_id": 40065901, "link": "https://stackoverflow.com/questions/40065901/how-to-define-a-function-with-different-types-of-input-and-output", "title": "How to define a function with different types of input and output?", "body": "<p>I tried the following code:</p>\n\n<pre class=\"lang-haskell prettyprint-override\"><code>data InputType = NumType Int Int | StrType String String\ndata OutputType = Either Int String\nadd' :: InputType -&gt; InputType -&gt; OutputType\nadd' (NumType a b) = a + b\nadd' (StrType a b) = a ++ b\n</code></pre>\n\n<p>But failed :(</p>\n"}, {"tags": ["haskell", "typeclass", "kleisli"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1476577177, "post_id": 40065480, "comment_id": 67405057, "body": "With suitable extensions and imports, <code>($) :: forall a b. (a -&gt; b) -&gt; a -&gt; b; ($) = coerce ((=&lt;&lt;) @Identity @a @b)</code> is a perfectly acceptable definition of <code>($)</code>. So in some sense, <code>Monad</code> already <i>is</i> the class that abstracts over these."}], "answers": [{"tags": [], "owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "is_accepted": false, "score": 3, "last_activity_date": 1476643742, "last_edit_date": 1476643742, "creation_date": 1476577433, "answer_id": 40065568, "question_id": 40065480, "link": "https://stackoverflow.com/questions/40065480/application-of-functions-and-kleisli-arrows/40065568#40065568", "title": "Application of functions and Kleisli arrows", "body": "<p>As Daniel's comment says, <code>(=&lt;&lt;)</code> already encompasses <code>($)</code>. There is already a newtype (similar to how there is a <code>Kleisli</code> newtype for <code>a -&gt; m b</code> for <code>Category</code>) for <code>a</code> called <a href=\"http://hackage.haskell.org/package/base-4.9.0.0/docs/Data-Functor-Identity.html\" rel=\"nofollow\"><code>Identity</code></a>, which has a <code>Monad</code> instance such that</p>\n\n<pre><code>f $ x\n</code></pre>\n\n<p>corresponds to </p>\n\n<pre><code>Identity . f =&lt;&lt; Identity x\n</code></pre>\n\n<hr>\n\n<p>While there are subcomponents that are reused in <code>(.)</code> and <code>(&lt;=&lt;)</code> (namely <code>a -&gt; b</code> in the former and <code>a -&gt; m b</code> in the latter) which can be abstracted out to a typeclass for a type constructor <code>a :: * -&gt; * -&gt; *</code> (which turns out to be <code>Category</code>), the largest such subcomponent in <code>($)</code> and <code>(=&lt;&lt;)</code> is just <code>a</code> in the former and <code>m a</code> in the latter.</p>\n"}, {"tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": true, "score": 2, "last_activity_date": 1476644732, "last_edit_date": 1476644732, "creation_date": 1476578600, "answer_id": 40065698, "question_id": 40065480, "link": "https://stackoverflow.com/questions/40065480/application-of-functions-and-kleisli-arrows/40065698#40065698", "title": "Application of functions and Kleisli arrows", "body": "<p>Both your examples are arrow mappings of functors (not <code>Functors</code>, but functors in the broader categorical sense), just like <code>fmap</code> is the arrow mapping of a <code>Functor</code>. <code>(=&lt;&lt;)</code>, for instance, is the arrow mapping of a functor from <code>Kleisli m</code> to <code>(-&gt;)</code> for some monad <code>m</code>. An appropriate generalisation, then, is one that accounts for functors between different categories. <a href=\"https://hackage.haskell.org/package/categories-1.0.7/docs/Control-Categorical-Functor.html\" rel=\"nofollow\"><code>Control.Categorical.Functor</code></a> provides that:</p>\n\n<pre><code>class (Category r, Category t) =&gt; Functor f r t | f r -&gt; t, f t -&gt; r where\n  fmap :: r a b -&gt; t (f a) (f b)\n</code></pre>\n\n<p>Armed with that, you would be able to write an instance in the spirit of:</p>\n\n<pre><code>-- `(.)` is plain old Prelude `(.)`, and not the generalised `Category` one.\ninstance Monad m =&gt; Functor m (Kleisli m) (-&gt;) where\n    fmap = (=&lt;&lt;) . runKleisli\n</code></pre>\n\n<p>Or, for something you can actually run:</p>\n\n<pre><code>{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE GeneralizedNewtypeDeriving #-}\n\nimport Control.Arrow (Kleisli(..))\nimport qualified Control.Categorical.Functor as F\n\nnewtype BindF m a = BindF { runBindF :: m a }\n    deriving (Functor, Applicative, Monad, Show)\n\ninstance Monad m =&gt; F.Functor (BindF m) (Kleisli (BindF m)) (-&gt;) where\n    fmap = (=&lt;&lt;) . runKleisli\n</code></pre>\n\n\n\n<pre><code>GHCi&gt; F.fmap (Kleisli (BindF . replicate 2)) (BindF [1,2,3])\nBindF {runBindF = [1,1,2,2,3,3]}\n</code></pre>\n\n<p>A similar instance might be written, for instance, for <code>(&lt;*&gt;)</code>, in terms of the <a href=\"https://hackage.haskell.org/package/semigroupoids-5.1/docs/Data-Semigroupoid-Static.html\" rel=\"nofollow\"><code>Static</code></a> category. As for <code>($)</code>, it is the arrow mapping of the identity functor in <code>(-&gt;)</code>, and so it is merely <code>fmap</code> for <code>Identity</code> sans the <code>Identity</code> wrapper (cf. Daniel Wagner's comment to the question).</p>\n"}], "owner": {"reputation": 30739, "user_id": 1804599, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/v91P3.jpg?s=128&g=1", "display_name": "rightfold", "link": "https://stackoverflow.com/users/1804599/rightfold"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 0, "accepted_answer_id": 40065698, "answer_count": 2, "score": 2, "last_activity_date": 1476644732, "creation_date": 1476576121, "question_id": 40065480, "link": "https://stackoverflow.com/questions/40065480/application-of-functions-and-kleisli-arrows", "title": "Application of functions and Kleisli arrows", "body": "<p><code>(.)</code> and <code>(&lt;=&lt;)</code> are quite similar:</p>\n\n<pre><code>(.)   ::            (b -&gt;   c) -&gt; (a -&gt;   b) -&gt; (a -&gt;   c)\n(&lt;=&lt;) :: Monad m =&gt; (b -&gt; m c) -&gt; (a -&gt; m b) -&gt; (a -&gt; m c)\n</code></pre>\n\n<p>and are available as a method in the <code>Category</code> type class (<code>(-&gt;)</code> and <code>Kleisli</code> instances):</p>\n\n<pre><code>(&lt;&lt;&lt;) :: (Category f) =&gt; f b c -&gt; f a b -&gt; f a c\n</code></pre>\n\n<p><code>($)</code> and <code>(=&lt;&lt;)</code> are also quite similar:</p>\n\n<pre><code>($)   ::            (a -&gt;   b) -&gt;   a -&gt;   b\n(=&lt;&lt;) :: Monad m =&gt; (a -&gt; m b) -&gt; m a -&gt; m b\n</code></pre>\n\n<p>Is there a type class that abstracts over these application functions?</p>\n"}, {"tags": ["haskell", "recursion"], "comments": [{"owner": {"reputation": 35121, "user_id": 577455, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/2f5b02182d3fa5ca4afeb39c32f09953?s=128&d=identicon&r=PG", "display_name": "Leahcim", "link": "https://stackoverflow.com/users/577455/leahcim"}, "edited": false, "score": 0, "creation_date": 1476573187, "post_id": 40065176, "comment_id": 67404287, "body": "Note, I had difficulty deciding on the right question to ask. Please let me know if the question should be posed differently."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 3, "creation_date": 1476573258, "post_id": 40065176, "comment_id": 67404301, "body": "Having seen a lot of badly-posed questions, let me reassure you: you&#39;ve done a great job."}], "answers": [{"comments": [{"owner": {"reputation": 35121, "user_id": 577455, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/2f5b02182d3fa5ca4afeb39c32f09953?s=128&d=identicon&r=PG", "display_name": "Leahcim", "link": "https://stackoverflow.com/users/577455/leahcim"}, "edited": false, "score": 0, "creation_date": 1476574598, "post_id": 40065221, "comment_id": 67404585, "body": "This still confuses me: <code>Each time a recursive call on a shorter list is made, the results of the recursive call are made longer -- these are exactly balanced out so that calling interleave with a length-n list will result in a collection of length-n+1 lists.</code>  For example, if (in the example from the op) the tail <code>ys</code> is simply [4] (as it will be at the end), and only one value is mapped over the list <code>(y:)</code>, I still don&#39;t understand how the final list can be four values long. Are the progressively longer results of the recursive call represented by a value in the func?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 35121, "user_id": 577455, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/2f5b02182d3fa5ca4afeb39c32f09953?s=128&d=identicon&r=PG", "display_name": "Leahcim", "link": "https://stackoverflow.com/users/577455/leahcim"}, "edited": false, "score": 2, "creation_date": 1476576385, "post_id": 40065221, "comment_id": 67404915, "body": "@Leahcim The call <code>interleave 1 [2,3,4]</code> (call this A) calls <code>interleave 1 [3,4]</code> (B), which calls <code>interleave 1 [4]</code> (C), which calls <code>interleave 1 []</code> (D). D returns lists of length 1; then C prepends an element to each of these lists before returning, so C returns lists of length 2. Then B prepends an element to each of the lists produced by C, so B returns lists of length 3. Then A prepends an element to each of the lists produced by B, so A returns lists of length 4. In other words: it is <i>not</i> the case that only one value is prepended, although <i>each call</i> prepends only one (more) value."}, {"owner": {"reputation": 35121, "user_id": 577455, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/2f5b02182d3fa5ca4afeb39c32f09953?s=128&d=identicon&r=PG", "display_name": "Leahcim", "link": "https://stackoverflow.com/users/577455/leahcim"}, "edited": false, "score": 0, "creation_date": 1476584971, "post_id": 40065221, "comment_id": 67406297, "body": "Thank you, that comment helps a lot and I accepted your answer already. One thing that&#39;s still unclear ( for you or anyone  else to answer if time) is how D, being the final call, returns &#39;lists&#39;  ( i.e. Why does it return more than one list?). From what I understand from your answer is that the number of lists returned from each call will equal number of calls to interleave ( it&#39;s length of each list that changes) but how are four lists of length 1 returned from interleave 1 []? Thanks again for your help"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 35121, "user_id": 577455, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/2f5b02182d3fa5ca4afeb39c32f09953?s=128&d=identicon&r=PG", "display_name": "Leahcim", "link": "https://stackoverflow.com/users/577455/leahcim"}, "edited": false, "score": 0, "creation_date": 1476588951, "post_id": 40065221, "comment_id": 67406889, "body": "@Leahcim Actually, both the lists themselves and the list of lists is extended by one in each recursive call. In <code>(x:y:ys) : map (y:) (...)</code>, the <code>map</code> extends each list returned by a recursive call, then the <code>(x:y:ys) : ...</code> adds an additional list to the list of lists. So <code>interleave 1 []</code> returns a list of lists with just one list in it, and the remaining calls add in the remaining lists."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 4, "last_activity_date": 1476574069, "last_edit_date": 1476574069, "creation_date": 1476573582, "answer_id": 40065221, "question_id": 40065176, "link": "https://stackoverflow.com/questions/40065176/can-the-head-of-a-list-ever-represent-more-than-one-value/40065221#40065221", "title": "Can the head of a list ever represent more than one value", "body": "<p>The list lengths of the recursive calls are indeed progressively shorter; however, the function modifies the results from the recursive calls to lengthen them. Let's build up from the bottom. For empty lists, nothing interesting happens:</p>\n\n<pre><code>interleave 1 []\n= { first clause of definition }\n[[1]]\n</code></pre>\n\n<p>But by the time we get to a list with one element, we already see the interesting thing happening. Specifically, since the result of the recursive call is passed to <code>map (y:)</code>, the short lists produced by the recursive call are each expanded by one element.</p>\n\n<pre><code>interleave 1 [4]\n= { list syntax }\ninterleave 1 (4:[])\n= { second clause of definition }\n(1:4:[]) : map (4:) (interleave 1 [])\n= { recursive call, which produces short answers }\n(1:4:[]) : map (4:) [[1]]\n= { definition of map, which lengthens each answer }\n(1:4:[]) : [4:[1]]\n= { list syntax }\n[[1,4],[4,1]]\n</code></pre>\n\n<p>In a similar way, <code>interleave 1 [3,4]</code> makes the recursive call <code>interleave 1 [4]</code> to produce <code>[[1,4],[4,1]]</code>, but then uses <code>map (3:)</code> to lengthen each element of that to <code>[[3,1,4],[3,4,1]]</code>.</p>\n\n<p>Addressing your direct questions in turn now:</p>\n\n<blockquote>\n  <p>How do the lists end up being the same length if the list argument to the recursive call is increasingly shorter?</p>\n</blockquote>\n\n<p>Each time a recursive call on a shorter list is made, the results of the recursive call are made longer -- these are exactly balanced out so that calling <code>interleave</code> with a length-<code>n</code> list will result in a collection of length-<code>n+1</code> lists.</p>\n\n<blockquote>\n  <p>can <code>y</code> (the head of the list) represent more than a single value in the recursive calls?</p>\n</blockquote>\n\n<p>No, the head of a list is always a single value. The real magic is that each recursive call is adding onto the head -- so you can get many extra heads from many recursive calls.</p>\n\n<blockquote>\n  <p>confirm/explain if the <code>(x:y:ys)</code> in <code>(x:y:ys) : map (y:) (interleave x ys)</code> only ever represents one list (i.e. it is the <code>[1,2,3,4-</code> with the integer argument inserted in the first position).</p>\n</blockquote>\n\n<p>Correct.</p>\n"}], "owner": {"reputation": 35121, "user_id": 577455, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/2f5b02182d3fa5ca4afeb39c32f09953?s=128&d=identicon&r=PG", "display_name": "Leahcim", "link": "https://stackoverflow.com/users/577455/leahcim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 85, "favorite_count": 0, "accepted_answer_id": 40065221, "answer_count": 1, "score": 4, "last_activity_date": 1476578402, "creation_date": 1476573146, "question_id": 40065176, "link": "https://stackoverflow.com/questions/40065176/can-the-head-of-a-list-ever-represent-more-than-one-value", "title": "Can the head of a list ever represent more than one value", "body": "<p>If I call the function <code>interleave</code> (defined below - it's a function to insert a number (or any type) at each position of a list) like this the resulting lists are all the same length</p>\n\n<pre><code>interleave 1 [2,3,4]\n[[1,2,3,4],[2,1,3,4],[2,3,1,4],[2,3,4,1]]\n</code></pre>\n\n<p>However, I expected  the list lengths to be increasingly shorter because the recursive call to <code>interleave</code> passes the list minus the head (i.e only <code>ys</code>). Since the tail of the list keeps getting shorter with each call, I expect the resulting lists to be shorter. </p>\n\n<pre><code>interleave :: a -&gt; [a] -&gt; [[a]]\ninterleave x []     = [[x]]\ninterleave x (y:ys) = (x:y:ys) : map (y:) (interleave x ys)\n</code></pre>\n\n<p>How do the lists end up being the same length if the list argument to the recursive call is increasingly shorter?</p>\n\n<p>The only answer I can imagine is that the mapped value <code>map (y:)</code> represents more than one digit in the recursive calls (i.e. it's the 2 in [2,1,3,4] and the <code>2,3</code> in [2,3,1,4] and the <code>2,3,4</code> in [2,3,4,1]` but I'm not sure if that's possible and I don't know how to log values during the execution in haskell. </p>\n\n<p>Question, in other words, can <code>y</code> (the head of the list) represent more than a single value in the recursive calls?</p>\n\n<p>In answering the question (if it's relevant), please confirm/explain if the <code>(x:y:ys)</code> in <code>(x:y:ys) : map (y:) (interleave x ys)</code> only ever represents one list (i.e. it is the [1,2,3,4- with the integer argument inserted in the first position). </p>\n\n<p>(It might help if you could show the execution order of the func, or how the values get stored on the stack)</p>\n"}, {"tags": ["haskell", "functional-programming", "sublimetext3", "sublimerepl"], "comments": [{"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1476570999, "post_id": 40064876, "comment_id": 67403863, "body": "What are you trying to do? Load the current file into the SublimeREPL GHCi or just open up a new SublimeREPL GHCi?"}, {"owner": {"reputation": 11, "user_id": 7024677, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4093d82227f63c34fb375233dc1c850f?s=128&d=identicon&r=PG&f=1", "display_name": "MiplehCode", "link": "https://stackoverflow.com/users/7024677/miplehcode"}, "reply_to_user": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1476571099, "post_id": 40064876, "comment_id": 67403885, "body": "Open a new SublimeREPL GHCi, same as doing ctrl+shift+p -&gt; SublimeREPL: Haskell"}], "answers": [{"comments": [{"owner": {"reputation": 11, "user_id": 7024677, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4093d82227f63c34fb375233dc1c850f?s=128&d=identicon&r=PG&f=1", "display_name": "MiplehCode", "link": "https://stackoverflow.com/users/7024677/miplehcode"}, "edited": false, "score": 0, "creation_date": 1476575398, "post_id": 40065059, "comment_id": 67404771, "body": "Thanks, that&#39;s what I was looking for."}], "tags": [], "owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "is_accepted": true, "score": 2, "last_activity_date": 1476571942, "creation_date": 1476571942, "answer_id": 40065059, "question_id": 40064876, "link": "https://stackoverflow.com/questions/40064876/how-do-i-keybind-sublimerepl-to-run-haskell-interpeter/40065059#40065059", "title": "How do I keybind SublimeREPL to run Haskell interpeter?", "body": "<p>I think the following does what you are looking for. I found the command by looking for a <code>.sublime-menu</code> file in the Haskell folder of the SublimeREPL repo: <a href=\"https://github.com/wuub/SublimeREPL/blob/master/config/Haskell/Default.sublime-commands\" rel=\"nofollow\"><code>config/Haskell/Default.sublime-commands</code></a>. (One such file had to exist for you to be able to do <code>ctrl + shift + p -&gt; SublimeREPL: Haskell</code>.)</p>\n\n<pre><code>[\n    { \"keys\": [\"alt+keypad2\"],\n      \"command\": \"run_existing_window_command\",\n      \"args\": { \"id\": \"repl_haskell\", \"file\": \"config/Haskell/Main.sublime-menu\" } },\n]\n</code></pre>\n"}], "owner": {"reputation": 11, "user_id": 7024677, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4093d82227f63c34fb375233dc1c850f?s=128&d=identicon&r=PG&f=1", "display_name": "MiplehCode", "link": "https://stackoverflow.com/users/7024677/miplehcode"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 389, "favorite_count": 1, "accepted_answer_id": 40065059, "answer_count": 1, "score": -1, "last_activity_date": 1476571942, "creation_date": 1476570423, "question_id": 40064876, "link": "https://stackoverflow.com/questions/40064876/how-do-i-keybind-sublimerepl-to-run-haskell-interpeter", "title": "How do I keybind SublimeREPL to run Haskell interpeter?", "body": "<p>I've been searching for the right command name to keybind to run Haskell Interpeter in Sublime 3. I'm trying to add to the Sublime key bindings - user and the code should look something like this: </p>\n\n<pre><code>{ \"keys\": [\"alt+keypad2\"], \"command\": \"run_existing_window_command\", \"args\":\n    {\n        \"id\": \"repl_haskell_run\",\n        \"file\": \"config/Python/Main.sublime-menu\"\n    }\n},\n</code></pre>\n\n<p>The following line is wrong, I made it up and I need to find the right command to put there:</p>\n\n<pre><code>\"id\": \"repl_haskell_run\",\n\"file\": \"config/Python/Main.sublime-menu\"\n</code></pre>\n"}, {"tags": ["function", "haskell"], "comments": [{"owner": {"reputation": 46235, "user_id": 2541573, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z1qtP.png?s=128&g=1", "display_name": "jub0bs", "link": "https://stackoverflow.com/users/2541573/jub0bs"}, "edited": false, "score": 0, "creation_date": 1476561269, "post_id": 40063482, "comment_id": 67401042, "body": "Hint: <code>:t sqrt</code> and <code>:t show</code>."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1476569864, "post_id": 40063482, "comment_id": 67403604, "body": "Did you try the possible fix suggested by the error...?"}], "answers": [{"tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": true, "score": 3, "last_activity_date": 1476561657, "last_edit_date": 1476561657, "creation_date": 1476561345, "answer_id": 40063591, "question_id": 40063482, "link": "https://stackoverflow.com/questions/40063482/function-for-defining-vector-doesnt-work-in-haskell/40063591#40063591", "title": "Function for defining vector doesn&#39;t work in Haskell", "body": "<p>The error messages tell you everything you need to know.</p>\n\n<pre><code>Could not deduce (Eq a)\n</code></pre>\n\n<p>When you use a pattern-match on a numeric literal, it needs the constraints <code>(Eq a, Num a)</code> because Haskell uses <code>==</code> internally to do matching on literals.</p>\n\n<pre><code>Could not deduce (Show a)\n</code></pre>\n\n<p>When you use <code>show</code>, you need the constraint <code>(Show a)</code>, because not all types are showable by default.</p>\n\n<pre><code>Could not deduce (Floating a)\n</code></pre>\n\n<p>When you use fractional operations such as <code>sqrt</code>, you need the constraint <code>(Floating a)</code>, because not all numeric types support these operations.</p>\n\n<p>Putting it all together:</p>\n\n<pre><code>vector :: (Eq a, Num a, Show a, Floating a) =&gt; a -&gt; a -&gt; String\nvector 0 0 = \"This vector has 0 magnitude.\"\nvector x y = \"This vector has a magnitude of \" ++ show(sqrt(x^2 + y^2)) ++ \".\"\n</code></pre>\n\n<p>You could also leave off the type signature, then ask ghci:</p>\n\n<pre><code>&gt; let vector 0 0 = \"This vector has 0 magnitude.\"; vector x y = \"This vector has a magnitude of \" ++ show(sqrt(x^2 + y^2)) ++ \".\"\n&gt; :t vector\nvector :: (Eq a, Floating a, Show a) =&gt; a -&gt; a -&gt; [Char]\n</code></pre>\n\n<p>And here you can see that you don\u2019t need the extra <code>Num a</code> constraint, because <code>Floating</code> is a subclass of <code>Num</code>, by way of <code>Fractional</code>. You can get information on these classes in ghci as well:</p>\n\n<pre><code>&gt; :info Floating\nclass Fractional a =&gt; Floating a where\n  pi :: a\n  exp :: a -&gt; a\n  log :: a -&gt; a\n  sqrt :: a -&gt; a\n  ...\n        -- Defined in \u2018GHC.Float\u2019\ninstance Floating Float -- Defined in \u2018GHC.Float\u2019\ninstance Floating Double -- Defined in \u2018GHC.Float\u2019\n</code></pre>\n\n<p>When writing very generic code like this, you generally have to specify all the constraints you use. But you could also give this function a simpler non-generic type such as <code>Double -&gt; Double -&gt; String</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 2010, "user_id": 3102952, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/yflBb.jpg?s=128&g=1", "display_name": "Nikola Stojakovi\u0107", "link": "https://stackoverflow.com/users/3102952/nikola-stojakovi%c4%87"}, "edited": false, "score": 0, "creation_date": 1476561706, "post_id": 40063596, "comment_id": 67401182, "body": "I understand everything except the first one; author made a function for factorial without <code>Eq a</code> and it worked: <code>factorial :: (Num a) =&gt; a -&gt; String factorial 0 = 1 factorial n = n * factorial (n - 1)</code> How this works?"}, {"owner": {"reputation": 54533, "user_id": 94559, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ab13b7f135315a91b9ef13e073354d90?s=128&d=identicon&r=PG&f=1", "display_name": "user94559", "link": "https://stackoverflow.com/users/94559/user94559"}, "reply_to_user": {"reputation": 2010, "user_id": 3102952, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/yflBb.jpg?s=128&g=1", "display_name": "Nikola Stojakovi\u0107", "link": "https://stackoverflow.com/users/3102952/nikola-stojakovi%c4%87"}, "edited": false, "score": 0, "creation_date": 1476561902, "post_id": 40063596, "comment_id": 67401228, "body": "@Nikola I&#39;m pretty sure that factorial definition would fail in a number of ways, including the same missing <code>Eq</code>."}, {"owner": {"reputation": 2010, "user_id": 3102952, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/yflBb.jpg?s=128&g=1", "display_name": "Nikola Stojakovi\u0107", "link": "https://stackoverflow.com/users/3102952/nikola-stojakovi%c4%87"}, "reply_to_user": {"reputation": 54533, "user_id": 94559, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ab13b7f135315a91b9ef13e073354d90?s=128&d=identicon&r=PG&f=1", "display_name": "user94559", "link": "https://stackoverflow.com/users/94559/user94559"}, "edited": false, "score": 0, "creation_date": 1476562145, "post_id": 40063596, "comment_id": 67401303, "body": "@smarx You&#39;re right, author was using <code>Integral</code> instead of <code>Num</code> - my mistake!"}], "tags": [], "owner": {"reputation": 6364, "user_id": 288913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/902e8cc4ad1dab7e25d3a2dc1eac732f?s=128&d=identicon&r=PG", "display_name": "Sarah", "link": "https://stackoverflow.com/users/288913/sarah"}, "is_accepted": false, "score": 6, "last_activity_date": 1476561379, "creation_date": 1476561379, "answer_id": 40063596, "question_id": 40063482, "link": "https://stackoverflow.com/questions/40063482/function-for-defining-vector-doesnt-work-in-haskell/40063596#40063596", "title": "Function for defining vector doesn&#39;t work in Haskell", "body": "<p>The first type error is because you're pattern matching on the literal <code>0</code>. You've only required <code>Num a</code> where you needed <code>(Num a, Eq a)</code> in order for this to be possible.</p>\n\n<p>The second type error is because you've tried to use show on a computation involving your <code>a</code>. So now, you need <code>(Num a, Eq a, Show a)</code>.</p>\n\n<p>The third, because you've used sqrt, which does not reside in <code>Num</code> but in <code>Floating</code>, so now it's <code>(Num a, Eq a, Show a, Floating a)</code>.</p>\n\n<p>Alternatively, you could have just removed the type signature entirely and prompted ghci for the type:</p>\n\n<pre><code>\u03bb&gt; :t vector\nvector :: (Show a, Floating a, Eq a) =&gt; a -&gt; a -&gt; [Char]\n</code></pre>\n\n<p>Note that <code>Floating</code> implies <code>Num</code>.</p>\n"}], "owner": {"reputation": 2010, "user_id": 3102952, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/yflBb.jpg?s=128&g=1", "display_name": "Nikola Stojakovi\u0107", "link": "https://stackoverflow.com/users/3102952/nikola-stojakovi%c4%87"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 137, "favorite_count": 0, "accepted_answer_id": 40063591, "answer_count": 2, "score": 1, "last_activity_date": 1476561657, "creation_date": 1476560754, "question_id": 40063482, "link": "https://stackoverflow.com/questions/40063482/function-for-defining-vector-doesnt-work-in-haskell", "title": "Function for defining vector doesn&#39;t work in Haskell", "body": "<p>I'm beginner in Haskell (currently learning pattern matching) and I tried to write simple function for defining vector:</p>\n\n<pre><code>vector :: (Num a) =&gt; a -&gt; a -&gt; String\nvector 0 0 = \"This vector has 0 magnitude.\"\nvector x y = \"This vector has a magnitude of \" ++ show(sqrt(x^2 + y^2)) ++ \".\"\n</code></pre>\n\n<p>But I get bunch of errors which I don't understand at all. </p>\n\n<pre><code>helloworld.hs:9:8: error:\n    \u2022 Could not deduce (Eq a) arising from the literal \u20180\u2019\n      from the context: Num a\n        bound by the type signature for:\n                   vector :: Num a =&gt; a -&gt; a -&gt; String\n        at helloworld.hs:8:1-37\n      Possible fix:\n        add (Eq a) to the context of\n          the type signature for:\n            vector :: Num a =&gt; a -&gt; a -&gt; String\n    \u2022 In the pattern: 0\n      In an equation for \u2018vector\u2019:\n          vector 0 0 = \"This vector has 0 magnitude.\"\n\nhelloworld.hs:10:51: error:\n    \u2022 Could not deduce (Show a) arising from a use of \u2018show\u2019\n      from the context: Num a\n        bound by the type signature for:\n                   vector :: Num a =&gt; a -&gt; a -&gt; String\n        at helloworld.hs:8:1-37\n      Possible fix:\n        add (Show a) to the context of\n          the type signature for:\n            vector :: Num a =&gt; a -&gt; a -&gt; String\n    \u2022 In the first argument of \u2018(++)\u2019, namely\n        \u2018show (sqrt (x ^ 2 + y ^ 2))\u2019\n      In the second argument of \u2018(++)\u2019, namely\n        \u2018show (sqrt (x ^ 2 + y ^ 2)) ++ \".\"\u2019\n      In the expression:\n        \"This vector has a magnitude of \"\n        ++ show (sqrt (x ^ 2 + y ^ 2)) ++ \".\"\n\nhelloworld.hs:10:56: error:\n    \u2022 Could not deduce (Floating a) arising from a use of \u2018sqrt\u2019\n      from the context: Num a\n        bound by the type signature for:\n                   vector :: Num a =&gt; a -&gt; a -&gt; String\n        at helloworld.hs:8:1-37\n      Possible fix:\n        add (Floating a) to the context of\n          the type signature for:\n            vector :: Num a =&gt; a -&gt; a -&gt; String\n    \u2022 In the first argument of \u2018show\u2019, namely \u2018(sqrt (x ^ 2 + y ^ 2))\u2019\n      In the first argument of \u2018(++)\u2019, namely\n        \u2018show (sqrt (x ^ 2 + y ^ 2))\u2019\n      In the second argument of \u2018(++)\u2019, namely\n        \u2018show (sqrt (x ^ 2 + y ^ 2)) ++ \".\"\u2019\nFailed, modules loaded: none.\nPrelude&gt; :load helloworld\n[1 of 1] Compiling Main             ( helloworld.hs, interpreted )\n\nhelloworld.hs:10:51: error:\n    \u2022 Could not deduce (Show a) arising from a use of \u2018show\u2019\n      from the context: Integral a\n        bound by the type signature for:\n                   vector :: Integral a =&gt; a -&gt; a -&gt; String\n        at helloworld.hs:8:1-42\n      Possible fix:\n        add (Show a) to the context of\n          the type signature for:\n            vector :: Integral a =&gt; a -&gt; a -&gt; String\n    \u2022 In the first argument of \u2018(++)\u2019, namely\n        \u2018show (sqrt (x ^ 2 + y ^ 2))\u2019\n      In the second argument of \u2018(++)\u2019, namely\n        \u2018show (sqrt (x ^ 2 + y ^ 2)) ++ \".\"\u2019\n      In the expression:\n        \"This vector has a magnitude of \"\n        ++ show (sqrt (x ^ 2 + y ^ 2)) ++ \".\"\n\nhelloworld.hs:10:56: error:\n    \u2022 Could not deduce (Floating a) arising from a use of \u2018sqrt\u2019\n      from the context: Integral a\n        bound by the type signature for:\n                   vector :: Integral a =&gt; a -&gt; a -&gt; String\n        at helloworld.hs:8:1-42\n      Possible fix:\n        add (Floating a) to the context of\n          the type signature for:\n            vector :: Integral a =&gt; a -&gt; a -&gt; String\n    \u2022 In the first argument of \u2018show\u2019, namely \u2018(sqrt (x ^ 2 + y ^ 2))\u2019\n      In the first argument of \u2018(++)\u2019, namely\n        \u2018show (sqrt (x ^ 2 + y ^ 2))\u2019\n      In the second argument of \u2018(++)\u2019, namely\n        \u2018show (sqrt (x ^ 2 + y ^ 2)) ++ \".\"\u2019\nFailed, modules loaded: none.\n</code></pre>\n\n<p>Can somebody explain me how to write this function properly, at least what's wrong with <code>vector 0 0</code>?</p>\n"}, {"tags": ["list", "haskell", "list-manipulation"], "comments": [{"owner": {"reputation": 68390, "user_id": 55246, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/c25ae0f8b2c34d0766717abab05b2efb?s=128&d=identicon&r=PG", "display_name": "Sridhar Ratnakumar", "link": "https://stackoverflow.com/users/55246/sridhar-ratnakumar"}, "edited": false, "score": 0, "creation_date": 1476589611, "post_id": 40063295, "comment_id": 67407003, "body": "This seems like a XY problem: <a href=\"http://meta.stackexchange.com/a/66378\">meta.stackexchange.com/a/66378</a>"}], "answers": [{"tags": [], "owner": {"reputation": 13362, "user_id": 260584, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63f9744d1d903eef5f9954fa31d25a26?s=128&d=identicon&r=PG", "display_name": "erisco", "link": "https://stackoverflow.com/users/260584/erisco"}, "is_accepted": true, "score": 3, "last_activity_date": 1476564497, "creation_date": 1476564497, "answer_id": 40064064, "question_id": 40063295, "link": "https://stackoverflow.com/questions/40063295/splitting-up-inner-lists-within-a-list-of-lists-in-haskell/40064064#40064064", "title": "Splitting up inner lists within a list of lists in Haskell", "body": "<p>Functions return one value, but this value may be a list or tuple, for example, and so in that way you can return multiple values.</p>\n\n<p>First define how to split an 'F' off the head of the list.</p>\n\n<pre><code>splitF :: String -&gt; [String]\nsplitF ('F':xs) = [\"F\", xs]\nsplitF xxs      = [xxs]\n\nsplitF \"ABCF\" \u2261 [\"ABCF\"]\nsplitF \"FGHI\" \u2261 [\"F\",\"GHI\"]\n</code></pre>\n\n<p>Now map this function on a list.</p>\n\n<pre><code>map splitF [\"ABCF\",\"FGHI\"] \u2261 [[\"ABCF\"],[\"F\",\"GHI\"]]\n</code></pre>\n\n<p>Finally concatenate the lists.</p>\n\n<pre><code>(concat . map splitF) [\"ABCF\",\"FGHI\"] \u2261 [\"ABCF\",\"F\",\"GHI\"]\n\nconcatMap splitF [\"ABCF\",\"FGHI\"] \u2261 [\"ABCF\",\"F\",\"GHI\"]\n</code></pre>\n"}], "owner": {"reputation": 73, "user_id": 1821866, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/c6f5093cb51c11899514d6f697086482?s=128&d=identicon&r=PG", "display_name": "Cooke1007", "link": "https://stackoverflow.com/users/1821866/cooke1007"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 456, "favorite_count": 0, "accepted_answer_id": 40064064, "answer_count": 1, "score": 1, "last_activity_date": 1476564497, "creation_date": 1476559436, "last_edit_date": 1476561301, "question_id": 40063295, "link": "https://stackoverflow.com/questions/40063295/splitting-up-inner-lists-within-a-list-of-lists-in-haskell", "title": "Splitting up inner lists within a list of lists in Haskell", "body": "<p>I am currently struggling with a problem to split a current list into two within a list of lists. For example if I have:</p>\n\n<pre><code>[[A,B,C,F],[F,G,H,I]]\n</code></pre>\n\n<p>Is there any easy way to split the second list (because F is the head) so that you end up with</p>\n\n<pre><code>[[A,B,C,F],[F],[G,H,I]]\n</code></pre>\n\n<p>I have attempted this in different ways but I cannot find a way to return two separate values from a function. Furthermore since the value I would like to split on is repeated within multiple inner lists I only want to split when it is the head of a list and at no other time. I attempted it like so:</p>\n\n<pre><code>splitList [] = [];\nsplitList (F:xs) = [[F]] ++ [xs];\nsplitList x = [x];\n</code></pre>\n\n<p>However this obviously returned a list of lists within the overall list causing it to in turn not work since I mapped it to every element in the list. Any help would be greatly appreciated as I only recently started working in Haskell.</p>\n"}, {"tags": ["haskell", "random", "generator"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1476569716, "post_id": 40063170, "comment_id": 67403569, "body": "<code>case foo of (x, y) -&gt; (x, y)</code> is the same as <code>case foo of anything -&gt; anything</code>, which is the same as <code>foo</code>. So you&#39;re left with <code>randomR (l, h) g = randomR (l, h) g</code> in your instance. Looks like a very fancy infinite loop to me!"}], "answers": [{"comments": [{"owner": {"reputation": 137, "user_id": 2843415, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/58ac1c408c45bc187eed4b57b020034b?s=128&d=identicon&r=PG&f=1", "display_name": "Felix", "link": "https://stackoverflow.com/users/2843415/felix"}, "edited": false, "score": 0, "creation_date": 1476561456, "post_id": 40063424, "comment_id": 67401095, "body": "Thanks Alec. Why does <code>randomR (minBound, maxBound)</code> in the <code>random</code> function does not need a generator? Its function takes both a pair and a generator right?"}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "reply_to_user": {"reputation": 137, "user_id": 2843415, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/58ac1c408c45bc187eed4b57b020034b?s=128&d=identicon&r=PG&f=1", "display_name": "Felix", "link": "https://stackoverflow.com/users/2843415/felix"}, "edited": false, "score": 1, "creation_date": 1476561924, "post_id": 40063424, "comment_id": 67401235, "body": "@Felix: That\u2019s a case of eta-reduction. <code>random g = something g</code> is equivalent to <code>random = something</code>. Similarly, <code>\\x -&gt; f x</code> is equivalent to <code>f</code>, because the lambda just passes its argument along to <code>f</code>."}], "tags": [], "owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "is_accepted": true, "score": 4, "last_activity_date": 1476562887, "last_edit_date": 1476562887, "creation_date": 1476560343, "answer_id": 40063424, "question_id": 40063170, "link": "https://stackoverflow.com/questions/40063170/haskell-random-coin-instance/40063424#40063424", "title": "Haskell: Random Coin Instance", "body": "<p>The point of the <a href=\"http://hackage.haskell.org/package/random-1.1/docs/System-Random.html#t:Random\" rel=\"nofollow\"><code>Random</code></a> class is that its methods give you a generator then ask you to make the next value and generator. Whenever your class derives both <code>Enum</code> and <code>Bounded</code> there is actually a boilerplate method for making a random instance:</p>\n\n<pre><code>instance Random Coin where\n  randomR (lo, hi) g = let (a, g') = randomR (fromEnum lo, fromEnum hi) g in (toEnum a, g')\n  random = randomR (minBound, maxBound)\n</code></pre>\n\n<p>(In fact, there is <a href=\"https://hackage.haskell.org/package/random-derive-0.1.0.0/docs/System-Random-TH.html\" rel=\"nofollow\">already a package</a> that does exactly this for you.)</p>\n"}, {"comments": [{"owner": {"reputation": 6364, "user_id": 288913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/902e8cc4ad1dab7e25d3a2dc1eac732f?s=128&d=identicon&r=PG", "display_name": "Sarah", "link": "https://stackoverflow.com/users/288913/sarah"}, "edited": false, "score": 0, "creation_date": 1476561078, "post_id": 40063470, "comment_id": 67400985, "body": "I initially referred to a function that isn&#39;t actually exported from the module, sorry about that."}, {"owner": {"reputation": 137, "user_id": 2843415, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/58ac1c408c45bc187eed4b57b020034b?s=128&d=identicon&r=PG&f=1", "display_name": "Felix", "link": "https://stackoverflow.com/users/2843415/felix"}, "edited": false, "score": 0, "creation_date": 1476561671, "post_id": 40063470, "comment_id": 67401170, "body": "Thanks Sarah. I&#39;m not sure if I&#39;m missing a very simple point, but since we&#39;re instantiating &#39;randomR&#39;, how exactly am I already given a random generator? Is this generator already defined in the Random class?"}, {"owner": {"reputation": 6364, "user_id": 288913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/902e8cc4ad1dab7e25d3a2dc1eac732f?s=128&d=identicon&r=PG", "display_name": "Sarah", "link": "https://stackoverflow.com/users/288913/sarah"}, "reply_to_user": {"reputation": 137, "user_id": 2843415, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/58ac1c408c45bc187eed4b57b020034b?s=128&d=identicon&r=PG&f=1", "display_name": "Felix", "link": "https://stackoverflow.com/users/2843415/felix"}, "edited": false, "score": 1, "creation_date": 1476561820, "post_id": 40063470, "comment_id": 67401208, "body": "No, it is simply an argument to the function you&#39;re definining. <code>randomR (low, high) gen = foo</code> is essentially saying: Given values (low,high) and gen, I can give you foo.  When you actually use the function (ie. not when you define it) you will have to supply it with such a generator."}, {"owner": {"reputation": 6364, "user_id": 288913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/902e8cc4ad1dab7e25d3a2dc1eac732f?s=128&d=identicon&r=PG", "display_name": "Sarah", "link": "https://stackoverflow.com/users/288913/sarah"}, "reply_to_user": {"reputation": 137, "user_id": 2843415, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/58ac1c408c45bc187eed4b57b020034b?s=128&d=identicon&r=PG&f=1", "display_name": "Felix", "link": "https://stackoverflow.com/users/2843415/felix"}, "edited": false, "score": 1, "creation_date": 1476562308, "post_id": 40063470, "comment_id": 67401353, "body": "@Felix I&#39;ve added an example. And fixed a bug. ;-)"}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1476563051, "post_id": 40063470, "comment_id": 67401606, "body": "Wouldn&#39;t it be a bit cleaner (less partial functions) to use the <code>Random Bool</code> instance instead of <code>Random Int</code>? The only reason I used the latter in my answer is because is extends to anything that is <code>Enum</code> and <code>Bounded</code>..."}, {"owner": {"reputation": 6364, "user_id": 288913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/902e8cc4ad1dab7e25d3a2dc1eac732f?s=128&d=identicon&r=PG", "display_name": "Sarah", "link": "https://stackoverflow.com/users/288913/sarah"}, "reply_to_user": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1476563198, "post_id": 40063470, "comment_id": 67401645, "body": "@Alec Yes, I absolutely think so. I chose <code>Integer</code> because of the infinite number of possible values, so that this approach might be used for any <code>Random</code> instance. :)"}], "tags": [], "owner": {"reputation": 6364, "user_id": 288913, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/902e8cc4ad1dab7e25d3a2dc1eac732f?s=128&d=identicon&r=PG", "display_name": "Sarah", "link": "https://stackoverflow.com/users/288913/sarah"}, "is_accepted": false, "score": 4, "last_activity_date": 1476562261, "last_edit_date": 1476562261, "creation_date": 1476560636, "answer_id": 40063470, "question_id": 40063170, "link": "https://stackoverflow.com/questions/40063170/haskell-random-coin-instance/40063470#40063470", "title": "Haskell: Random Coin Instance", "body": "<p>The functions you are defining have types</p>\n\n<pre><code>randomR :: RandomGen g =&gt; (Coin, Coin) -&gt; StdGen -&gt; (Coin, StdGen)\nrandom  :: RandomGen g =&gt; StdGen                 -&gt; (Coin, StdGen)\n</code></pre>\n\n<p>In other words, you're already given a random generator -- the second argument of randomR and the first of random. Any attempt to get a system random generator will cause a type error, because suddenly you've added IO into the mix, and that occurs nowhere in these types.</p>\n\n<p>Usually, random instances translate one of the Integer-based functions into the specific types needed. For instance, we could use</p>\n\n<pre><code> randomR :: (RandomGen g) =&gt; (Integer, Integer) -&gt; g -&gt; (Integer, g)\n</code></pre>\n\n<p>to produce a number in the range (0,1) and translate 0 into <code>H</code> and 1 into <code>T</code>.</p>\n\n<pre><code>instance Random Coin where\n  randomR (low,high) generator =\n    case randomR (toInt low, toInt high) generator of\n      (i,g) -&gt; (toCoin i, g)\n   where\n    toInt :: Coin -&gt; Integer\n    toInt H = 0\n    toInt T = 1\n    toCoin 0 = H\n    toCoin 1 = T\n</code></pre>\n\n<p>I'll leave <code>random</code> for you to define.</p>\n\n<p>By the way, you might realize that this is basically the same instance that <code>Bool</code> must have, so a sensible way to solve your problem would also have been to check the <a href=\"https://hackage.haskell.org/package/random-1.1/docs/src/System-Random.html\" rel=\"nofollow\">source code for the \"random\" package</a> and search for \"instance Random Bool\".</p>\n\n<p>Afterwards, you could use it with any random generator, like so:</p>\n\n<pre><code>&gt; let gen = mkStdGen 1 in take 10 $ randomRs (H,T) gen\n[T,T,T,H,H,T,H,H,H,T]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 5668, "user_id": 712526, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/06e3c4065e9d08da698b4f4de3959294?s=128&d=identicon&r=PG", "display_name": "jpaugh", "link": "https://stackoverflow.com/users/712526/jpaugh"}, "is_accepted": false, "score": 1, "last_activity_date": 1476931804, "last_edit_date": 1495540803, "creation_date": 1476931804, "answer_id": 40144584, "question_id": 40063170, "link": "https://stackoverflow.com/questions/40063170/haskell-random-coin-instance/40144584#40144584", "title": "Haskell: Random Coin Instance", "body": "<p>I liked <a href=\"https://stackoverflow.com/a/40063424/712526\">Alec</a>'s implementation so much, I made it my own. By defining the <code>random</code> and <code>randomR</code> functions separately, it is easier to use for multiple instances (less boilerplate!)&nbsp;&mdash; and for my money&nbsp;&mdash; easier to read, too.</p>\n\n<pre><code>import Control.Arrow (first)\n\nboundedRandom :: (Bounded b, Random b, RandomGen g) =&gt; g -&gt; (b, g)\nboundedRandom = randomR (minBound, maxBound)\n\nenumRandomR :: (Enum e, RandomGen g) =&gt; (e,e) -&gt; g -&gt; (e,g)\nenumRandomR (min,max) g = toEnum `first` randomR (fromEnum min, fromEnum max) g\n\ninstance Random Coin where\n        random = boundedRandom\n        randomR = enumRandomR\n</code></pre>\n\n<p>The best part is, for any type implementing both <code>Enum</code> and <code>Bounded</code>, this is plug-n-play!</p>\n\n<pre><code>data Suite\n        = Spade\n        | Heart\n        | Club\n        | Diamond\n  deriving (Bounded, Enum)\n\ninstance Random Suite where\n        random = boundedRandom\n        randomR = enumRandomR\n</code></pre>\n"}], "owner": {"reputation": 137, "user_id": 2843415, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/58ac1c408c45bc187eed4b57b020034b?s=128&d=identicon&r=PG&f=1", "display_name": "Felix", "link": "https://stackoverflow.com/users/2843415/felix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 294, "favorite_count": 0, "accepted_answer_id": 40063424, "answer_count": 3, "score": 1, "last_activity_date": 1476931804, "creation_date": 1476558755, "question_id": 40063170, "link": "https://stackoverflow.com/questions/40063170/haskell-random-coin-instance", "title": "Haskell: Random Coin Instance", "body": "<p>I have defined a <code>Coin</code> data type:</p>\n\n<pre><code>data Coin = H | T\n    deriving (Bounded, Eq, Enum, Ord, Show)\n</code></pre>\n\n<p>I now have to write a Random Coin instance, given the following framework:</p>\n\n<pre><code>instance Random Coin where\nrandomR (l, h) g = undefined\nrandom           = undefined\n</code></pre>\n\n<p>Obviously, this random instance should return either H or T. I'm beginning to start understanding how Monads work, however, I'm confused about the initial random generator. I get that a random generator returns a <code>(a, gen)</code>, but where do we get the initial generator to create a first random Coin? I currently have the following:</p>\n\n<pre><code>instance Random Coin where\nrandomR (l, h) g = case randomR(l, h) g of\n                   (c, g') -&gt; (c, g')\nrandom           = getStdRandom(randomR(minBound :: Coin, maxBound :: Coin))\n</code></pre>\n\n<p>I'm especially confused about the <code>random</code> function, since particular expression seems to return type IO Coin. Any help to enlighten me is much appreciated!</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "edited": false, "score": 1, "creation_date": 1476556295, "post_id": 40062585, "comment_id": 67399367, "body": "The <code>length</code> function returns an <code>Int</code>, but <code>sqrt</code> expects a type with a <code>Floating</code> instance. Try using <code>genericLength</code> from <code>Data.List</code> instead, which can produce any type with a <code>Num</code> instance."}, {"owner": {"reputation": 13362, "user_id": 260584, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63f9744d1d903eef5f9954fa31d25a26?s=128&d=identicon&r=PG", "display_name": "erisco", "link": "https://stackoverflow.com/users/260584/erisco"}, "edited": false, "score": 0, "creation_date": 1476565086, "post_id": 40062585, "comment_id": 67402244, "body": "Your summary is incorrect. Type classes are not types. You cannot convert from Num to Int, or Int to Floating. These are apples and oranges.  Type classes constrain a type. You may have, for example, <code>Floating a =&gt; a -&gt; a -&gt; a</code> which says that <code>a</code> must have a Floating instance. <code>Float</code> does, <code>Int</code> does not."}, {"owner": {"reputation": 7193, "user_id": 363663, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/c59cd40f0edcd3feea80c7ca09bc8e76?s=128&d=identicon&r=PG", "display_name": "sof", "link": "https://stackoverflow.com/users/363663/sof"}, "reply_to_user": {"reputation": 13362, "user_id": 260584, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63f9744d1d903eef5f9954fa31d25a26?s=128&d=identicon&r=PG", "display_name": "erisco", "link": "https://stackoverflow.com/users/260584/erisco"}, "edited": false, "score": 0, "creation_date": 1476565473, "post_id": 40062585, "comment_id": 67402364, "body": "@erisco, The point is <code>type inference</code>, my wording may mislead you to think of the conversion  between <code>type class</code> and <code>type</code> etc."}, {"owner": {"reputation": 13362, "user_id": 260584, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63f9744d1d903eef5f9954fa31d25a26?s=128&d=identicon&r=PG", "display_name": "erisco", "link": "https://stackoverflow.com/users/260584/erisco"}, "edited": false, "score": 1, "creation_date": 1476566469, "post_id": 40062585, "comment_id": 67402649, "body": "The literal <code>1</code> can be inferred as any Num type. In the first case, <code>sqrt</code> has the constraint Floating, and <code>1</code> the constraint Num, which simplifies to just the constraint Floating (because Floating implies Num). In the second case, <code>length</code> has the constraint <code>(~) Int</code>, but this is unsatisfied because <code>Int</code> has no Floating instance."}, {"owner": {"reputation": 13362, "user_id": 260584, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63f9744d1d903eef5f9954fa31d25a26?s=128&d=identicon&r=PG", "display_name": "erisco", "link": "https://stackoverflow.com/users/260584/erisco"}, "edited": false, "score": 0, "creation_date": 1476567710, "post_id": 40062585, "comment_id": 67402999, "body": "Also I should add, <code>fromIntegral</code> weakens the Integral constraint to the Num constraint. <code>fromIntegral :: (Num b, Integral a) =&gt; a -&gt; b</code>. Arguably this should not exist because of adverse consequences such as <code>fromIntegral 1000 :: Word8</code>."}], "answers": [{"comments": [{"owner": {"reputation": 7193, "user_id": 363663, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/c59cd40f0edcd3feea80c7ca09bc8e76?s=128&d=identicon&r=PG", "display_name": "sof", "link": "https://stackoverflow.com/users/363663/sof"}, "edited": false, "score": 0, "creation_date": 1476564414, "post_id": 40062752, "comment_id": 67402047, "body": "could you kindly have a look at my edited post for reviewing whether it&#39;s properly summarized? Thanks!"}], "tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": true, "score": 4, "last_activity_date": 1476556365, "creation_date": 1476556365, "answer_id": 40062752, "question_id": 40062585, "link": "https://stackoverflow.com/questions/40062585/how-to-follow-type-inferences-in-haskell/40062752#40062752", "title": "How to follow type inferences in Haskell?", "body": "<p><code>1</code> can be any type of number and <code>+</code> can work with any type of number. The same is true for <code>maximum</code>. Thus <code>maximum . map (+1)</code> is a function that can can take a list of any type of number and produce a number of the same type as its result. This includes both integral numbers and floating point numbers.</p>\n\n<p>However <code>length</code> will specifically produce an <code>Int</code>. It can not produce any other type of number. So <code>maximum . map length</code> can take any list and produce a result of type <code>Int</code>, not of any other numeric type.</p>\n\n<p>Now <code>sqrt</code> needs its argument to be a floating point number. So in the first case type inference figures out that you must provide a list of floating point numbers, so the result of <code>maximum . map (+1)</code> will be a floating point number that can be passed to <code>sqrt</code>.</p>\n\n<p>However the second case simply can not work because <code>Int</code> is not a floating point type and <code>maximum . map length</code> can't produce anything other than an <code>Int</code>. So this causes an error.</p>\n\n<p>You can use the <code>fromIntegral</code> function to convert the result of <code>length</code> to any numeric type to make the second code work.</p>\n"}], "owner": {"reputation": 7193, "user_id": 363663, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/c59cd40f0edcd3feea80c7ca09bc8e76?s=128&d=identicon&r=PG", "display_name": "sof", "link": "https://stackoverflow.com/users/363663/sof"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "accepted_answer_id": 40062752, "answer_count": 1, "score": -2, "last_activity_date": 1476631492, "creation_date": 1476555362, "last_edit_date": 1476631492, "question_id": 40062585, "link": "https://stackoverflow.com/questions/40062585/how-to-follow-type-inferences-in-haskell", "title": "How to follow type inferences in Haskell?", "body": "<p>Couldn't really follow the type inferences below, where case 1 worked but case 2 failed, why?</p>\n\n<pre><code>ghci&gt; :t sqrt . maximum . map (+1)   -- case 1\n\n(Floating c, Ord c) =&gt; [c] -&gt; c\n\nghci&gt; :t sqrt . maximum . map length -- case 2\n\nCould not deduce (Floating Int) arising from a use of \u2018sqrt\u2019\nfrom the context (Foldable t)\nbound by the inferred type of it :: Foldable t =&gt; [t a] -&gt; Int\n</code></pre>\n\n<p><strong>@EDIT</strong></p>\n\n<p>On OOP , <code>Num</code> is ususally the lower bound for all its <code>subtypes</code> e.g. <code>Int</code> and <code>Float</code>. Hence, <code>Int</code> will be inferentially acceptable if <code>Num</code> is the qualified type, but not vice versa. </p>\n\n<p>Besides, on C-like languages, the built-in number conversion can automatically fulfill the case from the lower precision to the higher e.g. from <code>Int</code> to <code>Float</code>. </p>\n\n<p>In contrast, on Haskell with <a href=\"https://en.wikipedia.org/wiki/Hindley%E2%80%93Milner_type_system\" rel=\"nofollow\">HM type system</a>, <code>Num</code> is the <code>class</code> for all its <code>instances</code> e.g. <code>Int</code> and the <code>subclasses</code> e.g. <code>Floating</code>. The qualified types can be bi-inferred between the ancestor and the descendant e.g. from <code>Num</code> to <code>Int</code>, <code>Floating</code> or vice versa, but not between <code>Int</code> and <code>Floating</code>.</p>\n\n<p>To remedy case 2, <code>Int</code> should firstly be adapted to <code>Num</code> by <code>fromIntegral</code> or exerting <code>Data.List.genericLength</code> to produce the <code>Num</code> - the inferentially qualified type for <code>Floating</code> that <code>sqrt</code>requires.</p>\n\n<p>Let's apply the aforementioned points to follow the type inferences below,</p>\n\n<pre><code>ghci&gt; :t (+)\nNum a =&gt; a -&gt; a -&gt; a\n\nghci&gt; :t 1.1\nFractional a =&gt; a\n\nghci&gt; :i Fractional\nclass Num a =&gt; Fractional a\ninstance Fractional Float\ninstance Fractional Double\n\nghci&gt; :t 1\nNum a =&gt; a\n\nghci&gt; :t length [1]\nInt \n\nghci&gt; :i Int\ninstance Num Int    \ninstance Real Int \ninstance Integral Int \n\nghci&gt; :t 1.1 + 1          -- case 1\nFractional a =&gt; a\n\nghci&gt; :t 1.1 + length [1] -- case 2\nNo instance for (Fractional Int) arising from the literal \u20181.1\u2019\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1476556085, "post_id": 40062579, "comment_id": 67399301, "body": "Your helper function is fine (up to using <code>&#39;</code> instead of <code>`</code> on <code>div</code>), but only goes halfway to your goal; i.e. it breaks the input into its individual digits but does not translate them into words. That is why the compiler is complaining."}, {"owner": {"reputation": 39, "user_id": 6004645, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/10156517859875542/picture?type=large", "display_name": "Rick", "link": "https://stackoverflow.com/users/6004645/rick"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1476556306, "post_id": 40062579, "comment_id": 67399372, "body": "that was a typo when i added it to stack. my actual code has <code>div</code> not &#39;div&#39;."}, {"owner": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 0, "creation_date": 1476568490, "post_id": 40062579, "comment_id": 67403234, "body": "And don&#39;t forget that -minInt == minInt."}], "answers": [{"comments": [{"owner": {"reputation": 2313, "user_id": 5276520, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dbaa9803983597167dbb65d52c24a3da?s=128&d=identicon&r=PG", "display_name": "dkasak", "link": "https://stackoverflow.com/users/5276520/dkasak"}, "edited": false, "score": 0, "creation_date": 1476559941, "post_id": 40063284, "comment_id": 67400616, "body": "I just noticed that your <code>helper</code> implementation is wrong too (in the sense of giving wrong answers). I&#39;ll update my answer shortly."}, {"owner": {"reputation": 39, "user_id": 6004645, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/10156517859875542/picture?type=large", "display_name": "Rick", "link": "https://stackoverflow.com/users/6004645/rick"}, "edited": false, "score": 0, "creation_date": 1476562971, "post_id": 40063284, "comment_id": 67401582, "body": "wouldn&#39;t it be better to have the list in reverse? Thinking ahead, would it not be easier to convert to text by processing the ones digit before the tens digit?"}, {"owner": {"reputation": 2313, "user_id": 5276520, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dbaa9803983597167dbb65d52c24a3da?s=128&d=identicon&r=PG", "display_name": "dkasak", "link": "https://stackoverflow.com/users/5276520/dkasak"}, "reply_to_user": {"reputation": 39, "user_id": 6004645, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/10156517859875542/picture?type=large", "display_name": "Rick", "link": "https://stackoverflow.com/users/6004645/rick"}, "edited": false, "score": 0, "creation_date": 1476563604, "post_id": 40063284, "comment_id": 67401784, "body": "What do you mean by &quot;to have the list in reverse&quot;? If you mean to construct it reversed in the first place, this is possible (by using <code>(++)</code> to append) but inefficient if processing the number from the smaller to the larger end (right-to-left). Regarding your second question, you&#39;re already processing the ones digits before the tens digit. Did you mean to say process the number left-to-right?"}, {"owner": {"reputation": 39, "user_id": 6004645, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/10156517859875542/picture?type=large", "display_name": "Rick", "link": "https://stackoverflow.com/users/6004645/rick"}, "edited": false, "score": 0, "creation_date": 1476564976, "post_id": 40063284, "comment_id": 67402207, "body": "just as you said, my version of the helper function returns the list of digits in reverse."}, {"owner": {"reputation": 39, "user_id": 6004645, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/10156517859875542/picture?type=large", "display_name": "Rick", "link": "https://stackoverflow.com/users/6004645/rick"}, "edited": false, "score": 0, "creation_date": 1476565050, "post_id": 40063284, "comment_id": 67402232, "body": "now, i&#39;m not sure how i can take this list of digits and change it to words. But this makes sense as the first step. I was thinking that my version of the helper function would make the next step easier than yours because it would allow me to process the number right to left. or no?"}, {"owner": {"reputation": 2313, "user_id": 5276520, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dbaa9803983597167dbb65d52c24a3da?s=128&d=identicon&r=PG", "display_name": "dkasak", "link": "https://stackoverflow.com/users/5276520/dkasak"}, "reply_to_user": {"reputation": 39, "user_id": 6004645, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/10156517859875542/picture?type=large", "display_name": "Rick", "link": "https://stackoverflow.com/users/6004645/rick"}, "edited": false, "score": 0, "creation_date": 1476565768, "post_id": 40063284, "comment_id": 67402442, "body": "Ah, now I see what you mean. Yes, having the list reversed might offer some benefits in that case."}], "tags": [], "owner": {"reputation": 2313, "user_id": 5276520, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dbaa9803983597167dbb65d52c24a3da?s=128&d=identicon&r=PG", "display_name": "dkasak", "link": "https://stackoverflow.com/users/5276520/dkasak"}, "is_accepted": true, "score": 2, "last_activity_date": 1476561458, "last_edit_date": 1476561458, "creation_date": 1476559333, "answer_id": 40063284, "question_id": 40062579, "link": "https://stackoverflow.com/questions/40062579/attempting-to-convert-ints-into-strings-in-haskell/40063284#40063284", "title": "Attempting to convert ints into strings in haskell", "body": "<p>Names of types cannot begin with a lowercase letter. Change <code>wordInt</code> to <code>WordInt</code> here:</p>\n\n<pre><code>newtype wordInt = WI Int\n</code></pre>\n\n<p>The method <code>show</code> of the <code>Show</code> class must return a <code>String</code> and your <code>helper</code> has the type <code>Int -&gt; [Int]</code> (when applied to an <code>Int</code>). You need to somehow convert the list into a <code>String</code>, for instance by calling <code>show</code> on the list:</p>\n\n<pre><code>instance Show WordInt where\n   show (WI x) | x &gt;= 0 = show $ helper x\n               | x &lt; 0  = show $ helper (-x)\n</code></pre>\n\n<p>Finally, notice that I put <code>-x</code> in parentheses. This is needed for unary minus because otherwise the compiler will think you are trying to subtract <code>x</code> from <code>helper</code> (which is a function and not an <code>Int</code>).</p>\n\n<p>However, your implementation of <code>helper</code> is wrong because it returns the list of digits in reverse. To fix this, you can write a helper function to split the digits and then reverse the list:</p>\n\n<pre><code>helper :: Int -&gt; [Int]\nhelper = reverse . go\n    where go 0 = [0]\n          go x = x `mod` 10 : go (x `div` 10)\n</code></pre>\n\n<p>However, this will pad the number with a leading zero:</p>\n\n<pre><code>\u03bb. helper 4321\n[0,4,3,2,1]\n</code></pre>\n\n<p>This doesn't change the meaning, of course, but if it is a problem, write a wrapper function to deal with this case:</p>\n\n<pre><code>helper :: Int -&gt; [Int]\nhelper x =\n    case splitIntoDigits x of\n        [] -&gt; [0]\n        xs -&gt; reverse xs\n\nsplitIntoDigits :: Int -&gt; [Int]\nsplitIntoDigits 0 = []\nsplitIntoDigits x = x `mod` 10 : splitIntoDigits (x `div` 10)\n</code></pre>\n\n<p>It then works in both cases:</p>\n\n<pre><code>\u03bb. helper 0\n[0]\n\u03bb. helper 4321\n[4,3,2,1]\n</code></pre>\n"}], "owner": {"reputation": 39, "user_id": 6004645, "user_type": "registered", "accept_rate": 80, "profile_image": "https://graph.facebook.com/10156517859875542/picture?type=large", "display_name": "Rick", "link": "https://stackoverflow.com/users/6004645/rick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 115, "favorite_count": 0, "accepted_answer_id": 40063284, "answer_count": 1, "score": 2, "last_activity_date": 1476561458, "creation_date": 1476555338, "last_edit_date": 1476557724, "question_id": 40062579, "link": "https://stackoverflow.com/questions/40062579/attempting-to-convert-ints-into-strings-in-haskell", "title": "Attempting to convert ints into strings in haskell", "body": "<p>I am attempting to write a code to take in an integer and output that integer in words. Ex: if the input is 4321 the output is four thousand three hundred twenty one.\nFor this, I would first like to break the input into it's individual digits. ex input 4321 would become an array of [4,3,2,1].</p>\n\n<p>My current code</p>\n\n<pre><code>newtype wordInt = WI Int\n\ninstance Show WordInt where\n   show (WI x) | x&gt;= 0 = helper x\n               | x &lt; 0 = helper -x\n\nhelper 0 = [0]\nhelper x = x `mod` 10 : helper (x `div` 10)\n</code></pre>\n\n<p>At the moment, I think i'm getting a type error.\nPlease note that this needs to be able to hand both positive and negative numbers. Also, if you can think of an efficient way to do the conversion i'm looking for, it would be much appreciated.</p>\n"}, {"tags": ["haskell", "types", "phantom-types"], "comments": [{"owner": {"reputation": 14485, "user_id": 190376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd8280c5e1491b8cf55760750ed97dec?s=128&d=identicon&r=PG", "display_name": "Reid Barton", "link": "https://stackoverflow.com/users/190376/reid-barton"}, "edited": false, "score": 2, "creation_date": 1476554017, "post_id": 40062180, "comment_id": 67398623, "body": "All branches return an <code>a</code>. Maybe your translation was wrong?"}, {"owner": {"reputation": 3436, "user_id": 4364027, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/e84dbb0e9c838c25bbb70b326fd696aa?s=128&d=identicon&r=PG&f=1", "display_name": "Marko Grdinic", "link": "https://stackoverflow.com/users/4364027/marko-grdinic"}, "reply_to_user": {"reputation": 14485, "user_id": 190376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd8280c5e1491b8cf55760750ed97dec?s=128&d=identicon&r=PG", "display_name": "Reid Barton", "link": "https://stackoverflow.com/users/190376/reid-barton"}, "edited": false, "score": 0, "creation_date": 1476555480, "post_id": 40062180, "comment_id": 67399082, "body": "No, not really. The way I read it, one returns an <code>Int</code> and the other <code>Bool</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1476558143, "post_id": 40062180, "comment_id": 67400002, "body": "&quot;can only be id&quot; is wrong. Try evaluating e.g. <code>Add (+100) (C 1) (C 2)</code> of type <code>Expr Int</code> or <code>Add show (C 1) (C 2)</code> of type <code>Expr String</code>."}, {"owner": {"reputation": 14485, "user_id": 190376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd8280c5e1491b8cf55760750ed97dec?s=128&d=identicon&r=PG", "display_name": "Reid Barton", "link": "https://stackoverflow.com/users/190376/reid-barton"}, "edited": false, "score": 0, "creation_date": 1476558153, "post_id": 40062180, "comment_id": 67400009, "body": "But <code>add</code> returns an <code>Expr Int</code> while <code>eq</code> returns an <code>Expr Bool</code>. So if you were to call <code>eval</code> on the result of <code>add</code>, then <code>a</code> will be <code>Int</code>, and it&#39;s fine to return an <code>Int</code> then."}, {"owner": {"reputation": 14485, "user_id": 190376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd8280c5e1491b8cf55760750ed97dec?s=128&d=identicon&r=PG", "display_name": "Reid Barton", "link": "https://stackoverflow.com/users/190376/reid-barton"}, "edited": false, "score": 0, "creation_date": 1476558833, "post_id": 40062180, "comment_id": 67400257, "body": "Could you post your translation? That seems to be where the problem is. You know <code>Int-&gt;a</code> is just a function from <code>Int</code> to <code>a</code> right?"}, {"owner": {"reputation": 3436, "user_id": 4364027, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/e84dbb0e9c838c25bbb70b326fd696aa?s=128&d=identicon&r=PG&f=1", "display_name": "Marko Grdinic", "link": "https://stackoverflow.com/users/4364027/marko-grdinic"}, "reply_to_user": {"reputation": 14485, "user_id": 190376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd8280c5e1491b8cf55760750ed97dec?s=128&d=identicon&r=PG", "display_name": "Reid Barton", "link": "https://stackoverflow.com/users/190376/reid-barton"}, "edited": false, "score": 0, "creation_date": 1476559813, "post_id": 40062180, "comment_id": 67400564, "body": "@ReidBarton As per request, I&#39;ve added the Fsharp translation. In Fsharp the fields are tuples, but that is the only difference."}, {"owner": {"reputation": 14485, "user_id": 190376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd8280c5e1491b8cf55760750ed97dec?s=128&d=identicon&r=PG", "display_name": "Reid Barton", "link": "https://stackoverflow.com/users/190376/reid-barton"}, "edited": false, "score": 1, "creation_date": 1476559920, "post_id": 40062180, "comment_id": 67400607, "body": "Does F# not allow polymorphic recursion?"}, {"owner": {"reputation": 3436, "user_id": 4364027, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/e84dbb0e9c838c25bbb70b326fd696aa?s=128&d=identicon&r=PG&f=1", "display_name": "Marko Grdinic", "link": "https://stackoverflow.com/users/4364027/marko-grdinic"}, "edited": false, "score": 0, "creation_date": 1476560269, "post_id": 40062180, "comment_id": 67400712, "body": "The closest that I&#39;ve found is <a href=\"http://www.fpish.net/topic/None/57593\" rel=\"nofollow noreferrer\">this example</a>. I do not know this subject well enough to understand whether there are gradations of polymorphic recursion or how to make it work in this example."}, {"owner": {"reputation": 14485, "user_id": 190376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd8280c5e1491b8cf55760750ed97dec?s=128&d=identicon&r=PG", "display_name": "Reid Barton", "link": "https://stackoverflow.com/users/190376/reid-barton"}, "edited": false, "score": 3, "creation_date": 1476560698, "post_id": 40062180, "comment_id": 67400853, "body": "It looks like you need to use an &quot;explicit type parameter&quot; <code>let rec eval&lt;&#39;a&gt; ...</code> (<a href=\"http://stackoverflow.com/questions/15825034/what-is-use-cases-of-f-explicit-type-parameters\" title=\"what is use cases of f explicit type parameters\">stackoverflow.com/questions/15825034/&hellip;</a>). Then your F# program does compile."}, {"owner": {"reputation": 3436, "user_id": 4364027, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/e84dbb0e9c838c25bbb70b326fd696aa?s=128&d=identicon&r=PG&f=1", "display_name": "Marko Grdinic", "link": "https://stackoverflow.com/users/4364027/marko-grdinic"}, "edited": false, "score": 0, "creation_date": 1476560901, "post_id": 40062180, "comment_id": 67400927, "body": "Holy crap, it does. I had no idea this was possible. I am glad I posted this question since I was sure this was a Haskell-only thing. Thanks."}], "answers": [{"comments": [{"owner": {"reputation": 3436, "user_id": 4364027, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/e84dbb0e9c838c25bbb70b326fd696aa?s=128&d=identicon&r=PG&f=1", "display_name": "Marko Grdinic", "link": "https://stackoverflow.com/users/4364027/marko-grdinic"}, "edited": false, "score": 0, "creation_date": 1476556265, "post_id": 40062378, "comment_id": 67399361, "body": "Please see the edit. Well, obviously it works, but what I am really looking for is why that example above works in Haskell and fails in F#. The desired type of the continuations cannot possibly be <code>_ -&gt; a</code> because the returns are different at the three branches. Also, I am not sure why you started talking about monads all of a sudden. :)"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 3436, "user_id": 4364027, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/e84dbb0e9c838c25bbb70b326fd696aa?s=128&d=identicon&r=PG&f=1", "display_name": "Marko Grdinic", "link": "https://stackoverflow.com/users/4364027/marko-grdinic"}, "edited": false, "score": 0, "creation_date": 1476574152, "post_id": 40062378, "comment_id": 67404496, "body": "@MarkoGrdinic, I started thinking about the (instructive) <code>Functor</code> instance, but then got carried away. See my edit."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 3, "last_activity_date": 1476574088, "last_edit_date": 1476574088, "creation_date": 1476554105, "answer_id": 40062378, "question_id": 40062180, "link": "https://stackoverflow.com/questions/40062180/how-can-this-phantom-type-example-possibly-be-valid/40062378#40062378", "title": "How can this phantom type example possibly be valid?", "body": "<p>There are no phantom types here. <code>Expr a</code> is the type of expressions with a result of type <code>a</code>. It's either a given constant (<code>C 3</code>, <code>C \"Hello\"</code>) or a sum of integers, or an equality test of integers. Let's look at <code>Add</code>:</p>\n\n<pre><code>| Add (Int-&gt;a) (Expr Int) (Expr Int)\n</code></pre>\n\n<p>This takes two integers to be added and a \"continuation\" saying how to turn their sum into the desired result type. Similarly,</p>\n\n<pre><code>| Eq (Bool-&gt;a) (Expr Int) (Expr Int)\n</code></pre>\n\n<p>takes two integers to be compared and a continuation saying how to turn the result of computation them into the desired result type.</p>\n\n<hr>\n\n<p>You can easily see that this is a functor:</p>\n\n<pre><code>instance Functor Expr where\n  fmap f (C x) = C (f x)\n  fmap f (Add g x y) = Add (f.g) x y\n  fmap f (Eq g x y) = Eq (f.g) x y\n</code></pre>\n\n<p>This is reminiscent of <a href=\"https://hackage.haskell.org/package/kan-extensions-5.0.1/docs/Data-Functor-Coyoneda.html\" rel=\"nofollow\"><code>Coyoneda</code></a>, but it uses <code>Int</code> instead of <code>f b</code>. It \"upgrades\" an expression involving <code>Int</code>s using an arbitrary function. No extra trickery is necessary.</p>\n"}, {"tags": [], "owner": {"reputation": 2313, "user_id": 5276520, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dbaa9803983597167dbb65d52c24a3da?s=128&d=identicon&r=PG", "display_name": "dkasak", "link": "https://stackoverflow.com/users/5276520/dkasak"}, "is_accepted": true, "score": 4, "last_activity_date": 1476557610, "creation_date": 1476557610, "answer_id": 40062961, "question_id": 40062180, "link": "https://stackoverflow.com/questions/40062180/how-can-this-phantom-type-example-possibly-be-valid/40062961#40062961", "title": "How can this phantom type example possibly be valid?", "body": "<p>Take a look at the following type:</p>\n\n<pre><code>eval :: Expr a -&gt; a\n</code></pre>\n\n<p>This says, \"given a value of type <code>Expr a</code>, for any <code>a</code> at all, I can produce an <code>a</code>\". Your implementation of <code>eval</code> needs to be a proof of this statement.</p>\n\n<p>Going back to the definition of the <code>Expr</code> type</p>\n\n<pre><code>data Expr a\n  = C a\n  | Add (Int -&gt; a) (Expr Int) (Expr Int)\n  | Eq (Bool -&gt; a) (Expr Int) (Expr Int)\n</code></pre>\n\n<p>we can see that the constructors <code>Add</code> and <code>Eq</code>, apart from containing two values of type <code>Expr Int</code>, also contain a function from <code>Int</code> or <code>Bool</code> to <code>a</code>. The important part here is that <em>this is the same <code>a</code> as in the type constructor</em>, therefore the type of the value contained in this field will constrain the type of the value as a whole. You can check this in ghci:</p>\n\n<pre><code>\u03bb. :t Add id\nAdd id :: Expr Int -&gt; Expr Int -&gt; Expr Int\n\u03bb. :t Eq id\nEq id :: Expr Int -&gt; Expr Int -&gt; Expr Bool\n</code></pre>\n\n<p>This also works in the other direction, meaning that if an expression of type <code>Expr Bool</code> is expected in some context, and you try to use the <code>Add</code> constructor to create this expression, the type of its first field <em>must</em> be <code>Int -&gt; Bool</code>. Generalising this leads you to the conclusion: if an expression of type <code>Expr a</code> is expected in that context, and you attempt to create such an expression using the <code>Add</code> or <code>Eq</code> constructors, the function contained inside <em>must</em> be of type <code>Int -&gt; a</code> or <code>Bool -&gt; a</code>, respectively.</p>\n\n<p>Therefore, the functions contained inside those constructors are <em>proof</em> that, no matter which concrete <code>a</code> is in question, you will be able to apply them to either an <code>Int</code> or a <code>Bool</code> to construct an <code>a</code>. This is true <em>by construction</em> since picking out a concrete function chooses which concrete <code>a</code> we are dealing with.</p>\n\n<p>Finally, going back to the implementation of <code>eval</code>:</p>\n\n<pre><code>eval :: Expr a -&gt; a\neval (C x) = x\neval (Add f e1 e2) = f (eval e1 + eval e2)\neval (Eq f e1 e2) = f (eval e1 == eval e2)\n</code></pre>\n\n<p>Let's examine the three branches to check whether it is indeed a proof of the we set out to prove, which was \"given a value of type <code>Expr a</code>, for any <code>a</code> at all, I can produce an <code>a</code>\":</p>\n\n<ul>\n<li>For the <code>C</code> branch this is trivially true since <code>x :: a</code>.</li>\n<li>For the <code>Add</code> branch, we can determine that the type of <code>eval e1 + eval e2</code> must be <code>Int</code>. Luckily, we have <code>f :: Int -&gt; a</code> which, by construction, is able to give us an <code>a</code> from an <code>Int</code> so this case is proved.</li>\n<li>For the <code>Eq</code> branch, <code>eval e1 == eval e2</code> clearly has the type <code>Bool</code> (due to <code>(==)</code>). Again, we have <code>f :: Bool -&gt; a</code> which is able to produce an <code>a</code> from this <code>Bool</code> and satisfy the type.</li>\n</ul>\n\n<p>Therefore, given a value of type <code>Expr a</code> constructed via any of its constructors, we are able to produce an <code>a</code> without knowing what concrete <code>a</code> we are talking about.</p>\n\n<p>Also, keep in mind that since <code>eval</code> is polymorphic in <code>a</code>, different calls of <code>eval</code> <em>can</em> return values of different types, but the above should demonstrate that for a single call, all three branches are constrained to return the same type.</p>\n"}], "owner": {"reputation": 3436, "user_id": 4364027, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/e84dbb0e9c838c25bbb70b326fd696aa?s=128&d=identicon&r=PG&f=1", "display_name": "Marko Grdinic", "link": "https://stackoverflow.com/users/4364027/marko-grdinic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 217, "favorite_count": 0, "accepted_answer_id": 40062961, "answer_count": 2, "score": -1, "last_activity_date": 1476602947, "creation_date": 1476552924, "last_edit_date": 1476602947, "question_id": 40062180, "link": "https://stackoverflow.com/questions/40062180/how-can-this-phantom-type-example-possibly-be-valid", "title": "How can this phantom type example possibly be valid?", "body": "<pre><code>data Expr a\n  = C a\n  | Add (Int -&gt; a) (Expr Int) (Expr Int)\n  | Eq (Bool -&gt; a) (Expr Int) (Expr Int)\n\nadd = Add id\neq  = Eq id\n\neval :: Expr a -&gt; a\neval (C x) = x\neval (Add f e1 e2) = f (eval e1 + eval e2)\neval (Eq f e1 e2)  = f (eval e1 == eval e2)\n\nexpr1 = (C 5 `add` C 1) `eq` C 6\n\nmain = print $ eval expr1\n</code></pre>\n\n<p>Coming from a different functional language, ever so often I get an inkling that I do not exactly get Haskell's type system and the above is one of those cases.</p>\n\n<p>What the above does is emulate a GADT with phantom types, but not in a way I could have imagined it working. <code>Int -&gt; a</code> and <code>Bool -&gt; a</code> are supposedly proofs of what type is supposed to be here, but when I translated the above example in F# as expected, it did not work because one of the pattern matching branches returns a <code>bool</code> while the other returns an <code>int</code>.</p>\n\n<p>Can anyone illuminate as to why this example is correct in Haskell?</p>\n\n<p>Edit: Here is a further elaboration of the problem.</p>\n\n<pre><code>data Expr a\n  = C a\n  | Add (Expr Int) (Expr Int)\n  | Eq (Expr Int) (Expr Int)\n\nadd = Add\neq  = Eq\n\neval :: Expr a -&gt; a\neval (C x) = x\neval (Add e1 e2) = eval e1 + eval e2\neval (Eq e1 e2)  = eval e1 == eval e2\n\nexpr1 = (C 5 `add` C 1) `eq` C 6\n\nmain = print $ eval expr1\n</code></pre>\n\n<p>When I remove the <code>Int -&gt; a</code> and <code>Bool -&gt; a</code> parts, the example fails to typecheck.</p>\n\n<p>But in the first example those functions can only be <code>id</code>, that is of type <code>Int -&gt; Int</code> and <code>Bool -&gt; Bool</code> respectively. Applying the proof function the ADTs are carrying around with them should do absolutely nothing to change that fact as they are <code>id</code> in the example and should logically fail to typecheck. Applying them should do absolutely nothing.</p>\n\n<p>This is what I do not understand; as far as I am concerned this example is pretty much magical to me in terms of how types work.</p>\n\n<p>Edit2: Here is the F# translation:</p>\n\n<pre><code>type Expr&lt;'a&gt; =\n    | C of 'a\n    | Add of ((int -&gt; 'a) * Expr&lt;int&gt; * Expr&lt;int&gt;)\n    | Eq of ((bool -&gt; 'a) * Expr&lt;int&gt; * Expr&lt;int&gt;)\n\nlet inline id x = x\nlet inline add x y = Add(id,x,y)\nlet inline eq x y = Eq(id,x,y)\n\nlet rec eval (x: Expr&lt;'a&gt;) : 'a = \n    match x with\n    | C x -&gt; x\n    | Add(f,x,y) -&gt; f (eval x + eval y)\n    | Eq(f,x,y) -&gt; f (eval x = eval y)\n\nlet expr = add (C 5) (C 1) |&gt; eq (C 7)\n\nlet r = eval expr\n</code></pre>\n\n<p>In the above example, in the <code>eval</code> function <code>'a</code> is inferred to be of type <code>int</code> and as a result the last line fails to type check.</p>\n"}, {"tags": ["haskell", "haskell-diagrams"], "answers": [{"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1476571261, "post_id": 40062012, "comment_id": 67403915, "body": "I wonder what they thought when they designed that functionality of named-lookup list. It seems pretty useless, or at least very ineffective compared to the function instance, which allows arbitrary parameters to be passed from the command line."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1476572513, "post_id": 40062012, "comment_id": 67404149, "body": "@leftaroundabout It is quite strange indeed. The only thing I can think of is it being an idiosyncratic way of arranging a slideshow of diagrams."}], "tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 2, "last_activity_date": 1477445974, "last_edit_date": 1477445974, "creation_date": 1476551992, "answer_id": 40062012, "question_id": 40061865, "link": "https://stackoverflow.com/questions/40061865/haskell-diagrams-error-no-diagram-selected/40062012#40062012", "title": "Haskell Diagrams error: &quot;No diagram selected.&quot;", "body": "<p>If you use <code>mainWith</code> in this way, you have to choose which of the diagrams will be rendered through the <code>-S</code> command line option. Quoting the official <a href=\"http://projects.haskell.org/diagrams/doc/cmdline.html\" rel=\"nofollow\">comand-line tutorial</a>:</p>\n\n<blockquote>\n  <p>If we have multiple diagrams with names we can use mainWith to give an\n  interface that allows the selection of a particular diagram by name.</p>\n</blockquote>\n\n<pre><code>&gt; -- Multiple\n&gt;\n&gt; d1, d2, d3 :: Diagram SVG V2 Double\n&gt; ...\n&gt;\n&gt; main = mainWith [(\"First\", d1),(\"Second\", d2),(\"Third\", d3)]\n</code></pre>\n\n<blockquote>\n  <p>The --list option just lists the available diagrams to render and the\n  -S selection option takes a name and renders the associated diagram with the standard options.</p>\n</blockquote>\n\n<pre><code>$ ./Multiple --list\nAvailable diagrams:\n  First Second Third\n$ ./Multiple -o d1.svg -w 100 -S First\n</code></pre>\n\n<p>Note that the option used is <code>-S</code>, and not <code>-s</code> like in the tutorial (as of 2016/10/25). The option had been changed due to <a href=\"https://github.com/diagrams/diagrams-lib/issues/172\" rel=\"nofollow\">this issue</a>, but the change wasn't reflected in the tutorial yet (a patch fixing it was accepted though, so it should become correct anytime soon). The help message of the program is correct though:</p>\n\n<pre><code>$ stack --resolver=lts-7.2 exec -- runhaskell Dag.hs -?\nDag.hs\n\nUsage: Dag.hs [-?|--help] [-w|--width WIDTH] [-h|--height HEIGHT]\n              [-o|--output OUTPUT] [-l|--loop] [-s|--src ARG]\n              [-i|--interval INTERVAL] [-p|--pretty] [-S|--selection NAME]\n              [-L|--list]\n  Command-line diagram generation.\n\nAvailable options:\n  -?,--help                Show this help text\n  -w,--width WIDTH         Desired WIDTH of the output image\n  -h,--height HEIGHT       Desired HEIGHT of the output image\n  -o,--output OUTPUT       OUTPUT file\n  -l,--loop                Run in a self-recompiling loop\n  -s,--src ARG             Source file to watch\n  -i,--interval INTERVAL   When running in a loop, check for changes every\n                           INTERVAL seconds.\n  -p,--pretty              Pretty print the SVG output\n  -S,--selection NAME      NAME of the diagram to render\n  -L,--list                List all available diagrams\n</code></pre>\n"}], "owner": {"reputation": 4029, "user_id": 3224967, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/963b108f3bcde98ac96d09b04abbf63f?s=128&d=identicon&r=PG&f=1", "display_name": "mherzl", "link": "https://stackoverflow.com/users/3224967/mherzl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1477445974, "creation_date": 1476551042, "last_edit_date": 1477396101, "question_id": 40061865, "link": "https://stackoverflow.com/questions/40061865/haskell-diagrams-error-no-diagram-selected", "title": "Haskell Diagrams error: &quot;No diagram selected.&quot;", "body": "<p>I am attempting to create a set of diagrams, using the following main function:</p>\n\n<pre><code>main = mainWith [(\"here0\", myDiagram), (\"here1\", myDiagram)]\n</code></pre>\n\n<p>and am getting the following error:</p>\n\n<pre><code>No diagram selected.\nAvailable diagrams:\n  here0 here1\n</code></pre>\n\n<p>Any idea what this error means?</p>\n\n<hr>\n\n<p>More details:</p>\n\n<p>My \"myDiagram\" has type:</p>\n\n<pre><code>myDiagram :: Diagram B\n</code></pre>\n\n<p>and the program works correctly when the main function is instead:</p>\n\n<pre><code>main = mainWith myDiagram\n</code></pre>\n\n<hr>\n\n<p>EDIT:</p>\n\n<p>Thanks for the comments. I looked at the linked command-line tutorial and attempted to follow it as closely as possible (including specifying the -s option), but am still running into the same issue. Here's exactly what I did:</p>\n\n<p>Created a file \"Animation.hs\":</p>\n\n<pre><code>{-# LANGUAGE NoMonomorphismRestriction #-}\n\nimport Diagrams.Prelude \nimport Diagrams.Backend.SVG.CmdLine\n\nmain = mainWith [(\"myBlue\", myBlue), (\"myGreen\", myGreen)]\n\nmyBlue :: Diagram B\nmyBlue = circle 1 # lw none # fc blue\n\nmyGreen :: Diagram B\nmyGreen = circle 1 # lw none # fc green\n</code></pre>\n\n<p>Compiled it via:</p>\n\n<pre><code>ghc --make Animation.hs\n</code></pre>\n\n<p>Displayed the available diagrams to render, with:</p>\n\n<pre><code>./Animation --list\n</code></pre>\n\n<p>which, as expected, returned:</p>\n\n<pre><code>Available diagrams:\n  myBlue myGreen\n</code></pre>\n\n<p>But finally, attempting to generate one of the .svg's via:</p>\n\n<pre><code>./Animation -o out.svg -w 400 -s myBlue\n</code></pre>\n\n<p>returned:</p>\n\n<pre><code>No diagram selected.\nAvailable diagrams:\n  myBlue myGreen\n</code></pre>\n\n<p>I feel like there must be something simple that I'm missing but cannot seem to find it -- I am specifying a listed available diagram with \"-s myBlue\".</p>\n"}, {"tags": ["haskell", "applicative"], "comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user824425"}, "edited": false, "score": 0, "creation_date": 1476541581, "post_id": 40060162, "comment_id": 67394453, "body": "Can you also provide the definition of the <code>Reader</code> data type, for those of us who are not going to buy that book?"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 2, "creation_date": 1476541649, "post_id": 40060162, "comment_id": 67394473, "body": "@Rhymoid This is a little harsh. What <code>Reader</code> is is common knowledge, after all."}, {"owner": {"reputation": 7105, "user_id": 236007, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/BiYes.jpg?s=128&g=1", "display_name": "Emre Sevin&#231;", "link": "https://stackoverflow.com/users/236007/emre-sevin%c3%a7"}, "edited": false, "score": 0, "creation_date": 1476541907, "post_id": 40060162, "comment_id": 67394536, "body": "Sorry for the missing Reader type, I&#39;ve added it to the question above."}], "answers": [{"tags": [], "owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "is_accepted": true, "score": 11, "last_activity_date": 1553131996, "last_edit_date": 1553131996, "creation_date": 1476541946, "answer_id": 40060292, "question_id": 40060162, "link": "https://stackoverflow.com/questions/40060162/how-to-write-the-when-writing-the-applicative-instance-for-reader-r/40060292#40060292", "title": "How to write the &lt;*&gt; when writing the Applicative instance for Reader r", "body": "<p>Let's play type tennis. Looking at the pieces you have in scope,</p>\n\n<pre><code>rab :: r -&gt; (a -&gt; b)\nra :: r -&gt; a\nr :: r\n</code></pre>\n\n<p>and the goal type of <code>b</code>, you can see that the only way you can get a <code>b</code> out is by applying <code>rab</code> to two arguments.</p>\n\n<pre><code>Reader rab &lt;*&gt; Reader ra = Reader $ \\r -&gt; rab _ _\n</code></pre>\n\n<p>Now, the first hole has a type of <code>r</code>, and you only have one <code>r</code> in scope.</p>\n\n<pre><code>Reader rab &lt;*&gt; Reader ra = Reader $ \\r -&gt; rab r _\n</code></pre>\n\n<p>The remaining hole has a type of <code>a</code>. The only <code>a</code> you have in scope is the return value of <code>ra</code>,</p>\n\n<pre><code>Reader rab &lt;*&gt; Reader ra = Reader $ \\r -&gt; rab r (ra _)\n</code></pre>\n\n<p>and <code>ra</code>'s argument must be an <code>r</code>, for which once again you have only one choice.</p>\n\n<pre><code>Reader rab &lt;*&gt; Reader ra = Reader $ \\r -&gt; rab r (ra r)\n</code></pre>\n\n<p>Notice that <code>rab</code> and <code>ra</code> both receive <code>r</code> as an argument. All the steps in a composed <code>Reader</code> computation have access to the same environment.</p>\n\n<p>Incidentally, this definition makes <code>&lt;*&gt;</code> equivalent to the famous <a href=\"https://en.m.wikipedia.org/wiki/SKI_combinator_calculus\" rel=\"nofollow noreferrer\"><code>S</code> combinator</a> (and <code>pure</code> is <code>K</code>).</p>\n"}], "owner": {"reputation": 7105, "user_id": 236007, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/BiYes.jpg?s=128&g=1", "display_name": "Emre Sevin&#231;", "link": "https://stackoverflow.com/users/236007/emre-sevin%c3%a7"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 595, "favorite_count": 1, "accepted_answer_id": 40060292, "answer_count": 1, "score": 8, "last_activity_date": 1553131996, "creation_date": 1476541259, "last_edit_date": 1476542142, "question_id": 40060162, "link": "https://stackoverflow.com/questions/40060162/how-to-write-the-when-writing-the-applicative-instance-for-reader-r", "title": "How to write the &lt;*&gt; when writing the Applicative instance for Reader r", "body": "<p>I'm stuck with an exercise in <a href=\"http://haskellbook.com/\" rel=\"noreferrer\">Haskell Book</a>, \"Chapter 22. Reader\". The exercise says \"Implement the Applicative for Reader\" and it gives the following:</p>\n\n<pre><code>{-# LANGUAGE InstanceSigs #-}\n\nnewtype Reader r a =\n  Reader { runReader :: r -&gt; a }\n\ninstance Applicative (Reader r) where \n  pure :: a -&gt; Reader r a\n  pure a = Reader $ ???\n\n  (&lt;*&gt;) :: Reader r (a -&gt; b) -&gt; Reader r a -&gt; Reader r b\n  (Reader rab) &lt;*&gt; (Reader ra) = Reader $ \\r -&gt; ???\n</code></pre>\n\n<p>I was able to write the <code>pure</code> after also writing a <code>Functor</code> instance (I wrote the <code>Functor</code> instance, because otherwise GHC was complaining \"No instance for <code>(Functor (Reader r)) \u2026</code> arising from the superclasses of an instance declaration In the instance declaration for <code>\u2018Applicative (Reader r)\u2019</code>\"):</p>\n\n<pre><code>{-# LANGUAGE InstanceSigs #-}\n\nnewtype Reader r a =\n  Reader { runReader :: r -&gt; a }\n\ninstance Functor (Reader r) where\n  fmap f (Reader x) = Reader (f . x)\n\ninstance Applicative (Reader r) where\n  pure :: a -&gt; Reader r a\n  pure a = Reader $ \\_ -&gt; a\n\n  (&lt;*&gt;) :: Reader r (a -&gt; b) -&gt; Reader r a -&gt; Reader r b\n  (Reader rab) &lt;*&gt; (Reader ra) = Reader $ \\r -&gt; ???\n</code></pre>\n\n<p>But I'm stuck with the <code>???</code> part.</p>\n\n<p>The book gives the following hint:</p>\n\n<blockquote>\n  <p>We got the definition of the apply function started for you, we\u2019ll\n  describe what you need to do and you write the code. If you unpack the\n  type of Reader\u2019s apply above, you get the following.</p>\n\n<pre><code>&lt;*&gt; :: (r -&gt; a -&gt; b) \n    -&gt; (r -&gt; a) \n    -&gt; (r -&gt; b)\n\n -- contrast this with the type of fmap\n\nfmap :: (a -&gt; b) \n     -&gt; (r -&gt; a)\n     -&gt; (r -&gt; b)\n</code></pre>\n  \n  <p>So what\u2019s the difference? The difference is that <code>apply</code>, unlike\n  <code>fmap</code>, also takes an argument of type <code>r</code>.</p>\n  \n  <p>Make it so.</p>\n</blockquote>\n\n<p>Yes, but how to make it so? Using <em>typed holes</em>, the compiler tells me that the type of <code>???</code> must be <code>b</code>. But I still can't see how I can construct a lambda expression that takes an <code>r</code> and returns something of type <code>b</code>, given <code>rab</code> and <code>ra</code>.</p>\n"}, {"tags": ["haskell", "types", "composition"], "answers": [{"comments": [{"owner": {"reputation": 81, "user_id": 907823, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e8367427f961c0812624fc7de7a2c5c?s=128&d=identicon&r=PG", "display_name": "Basu", "link": "https://stackoverflow.com/users/907823/basu"}, "edited": false, "score": 1, "creation_date": 1521215867, "post_id": 40055334, "comment_id": 85651198, "body": "I think you are missing an arrow there ((a1 -&gt; b) -&gt; (f a1 -&gt; f b)) -&gt; (a -&gt; (a1 -&gt; b)) -&gt; a -&gt; (f a1 -&gt; f b)"}, {"owner": {"reputation": 1953, "user_id": 899723, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f68bcc2d6f5196fa090d578eb8356b9c?s=128&d=identicon&r=PG", "display_name": "mac10688", "link": "https://stackoverflow.com/users/899723/mac10688"}, "reply_to_user": {"reputation": 81, "user_id": 907823, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4e8367427f961c0812624fc7de7a2c5c?s=128&d=identicon&r=PG", "display_name": "Basu", "link": "https://stackoverflow.com/users/907823/basu"}, "edited": false, "score": 0, "creation_date": 1521240207, "post_id": 40055334, "comment_id": 85662996, "body": "I added the arrow. Thank you"}], "tags": [], "owner": {"reputation": 1953, "user_id": 899723, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f68bcc2d6f5196fa090d578eb8356b9c?s=128&d=identicon&r=PG", "display_name": "mac10688", "link": "https://stackoverflow.com/users/899723/mac10688"}, "is_accepted": true, "score": 5, "last_activity_date": 1521240193, "last_edit_date": 1521240193, "creation_date": 1476509407, "answer_id": 40055334, "question_id": 40055333, "link": "https://stackoverflow.com/questions/40055333/applying-compose-to-fmap/40055334#40055334", "title": "Applying compose to fmap", "body": "<p>To get this I took fmap</p>\n\n<pre><code>fmap :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b\nfmap :: Functor f =&gt; (a -&gt; b) -&gt; (f a -&gt; f b)\n</code></pre>\n\n<p>if</p>\n\n<pre><code>:t (.)\n(.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c\n</code></pre>\n\n<p>then</p>\n\n<p>(b -> c) of the start of the (.) function can be replaced with </p>\n\n<pre><code>((a -&gt; b) -&gt; (f a -&gt; f b))\n</code></pre>\n\n<p>thus I have</p>\n\n<pre><code>((a1 -&gt; b) -&gt; (f a1 -&gt; f b)) -&gt; (a -&gt; (a1 -&gt; b)) -&gt; a -&gt; (f a1 -&gt; f b)\n</code></pre>\n\n<p>Since (.) has been applied to fmap, we can eliminate ((a1 -> b) -> (f a1 -> f b)) and we are left with</p>\n\n<pre><code>(a -&gt; (a1 -&gt; b)) -&gt; a -&gt; (f a1 -&gt; f b)\n</code></pre>\n\n<p>Then to be extra clean we can eliminate extra parentheses.</p>\n\n<p>Glguy and Hamme from the IRC Beginner-haskell channel both reminded me (->) is right associative</p>\n\n<p>e.g. (a -> b -> c -> d)  = (a -> (b -> (c -> d)))</p>\n\n<p>so we eliminate the redundant parentheses.</p>\n\n<pre><code>(a -&gt; a1 -&gt; b) -&gt; a -&gt; f a1 -&gt; f b\n\n:t (.) fmap\n(.) fmap :: Functor f =&gt; (a -&gt; a1 -&gt; b) -&gt; a -&gt; f a1 -&gt; f b\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 68390, "user_id": 55246, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/c25ae0f8b2c34d0766717abab05b2efb?s=128&d=identicon&r=PG", "display_name": "Sridhar Ratnakumar", "link": "https://stackoverflow.com/users/55246/sridhar-ratnakumar"}, "is_accepted": false, "score": 2, "last_activity_date": 1476512824, "last_edit_date": 1476512824, "creation_date": 1476511624, "answer_id": 40055613, "question_id": 40055333, "link": "https://stackoverflow.com/questions/40055333/applying-compose-to-fmap/40055613#40055613", "title": "Applying compose to fmap", "body": "<p>The type signature can be understood intuitively if you rename <code>a</code> to <code>c</code>, rename <code>a1</code> to <code>a</code>, and add an extra pair of parentheses:</p>\n\n<pre><code>&gt; :t (.) fmap\n(.) fmap :: Functor f =&gt; (c -&gt; (a -&gt; b)) -&gt; c -&gt; f a -&gt; f b\n</code></pre>\n\n<p>The first argument is a function that returns another function <code>(a -&gt; b)</code> that gets fed into <code>fmap</code>. Applying the first argument produces the fully composed function waiting on that one argument <code>c</code>. Applying <code>c</code> produces <code>fmap (a -&gt; b)</code> which is only waiting on the last argument <code>f a</code>.</p>\n\n<pre><code>   ((.) fmap)\n   ((.) fmap (c -&gt; (a -&gt; b))     -- Apply the 1st argument\n   ((.) fmap (c -&gt; (a -&gt; b)) c   -- Apply the 2nd argument\n   fmap (a -&gt; b)\n   fmap (a -&gt; b) f a             -- Apply the 3rd argument\n   f b                           -- The result\n</code></pre>\n\n<p>An example:</p>\n\n<pre><code>&gt; ((.) fmap) (\\n -&gt; (+n)) 42 [1..5]  -- Becomes: fmap (+42) [1..5]\n[43,44,45,46,47]\n&gt; ((.) fmap) (\\n -&gt; (+n)) 13 [1..5]\n[14,15,16,17,18]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 0, "last_activity_date": 1476540094, "creation_date": 1476540094, "answer_id": 40059952, "question_id": 40055333, "link": "https://stackoverflow.com/questions/40055333/applying-compose-to-fmap/40059952#40059952", "title": "Applying compose to fmap", "body": "<p>One way to understand how the type is derived is to look at what <code>(fmap .)</code> means.</p>\n\n<p>Consider <code>fmap . g</code>: what does this mean? Expanding the definition of <code>.</code>, we see that <code>fmap . g = \\x -&gt; fmap (g x)</code>. Since the first argument to <code>fmap</code> needs to be a function with type <code>a -&gt; b</code>, <code>g</code> must be function with a type like <code>c -&gt; a -&gt; b</code>; it <em>computes</em> an appropriate function given an argument.</p>\n\n<p>Now, whereas we can apply <code>fmap f</code> directly to a list (or other functor), we need to give <code>fmap . g</code> an argument first:</p>\n\n<pre><code>fmap f someFunctorialValue == someOtherFunctorialValue\n((fmap . g) x) someFunctorialValue == someOtherFunctorialValue\n</code></pre>\n\n<p>Dropping some redundant parentheses, this becomes</p>\n\n<pre><code>(fmap .) g x someFunctorialValue == someOtherFunctorialValue\n</code></pre>\n\n<p>and now we can directly what the type of each expression should be:</p>\n\n<pre><code>-- someFunctorialValue :: Functor f =&gt; f a\n-- someOtherFunctorialValue :: Functor f =&gt; f b\n-- x :: c\n-- g :: (c -&gt; a -&gt; b)\n-- (fmap .) :: (c -&gt; a -&gt; b) -&gt; c -&gt; f a -&gt; f b\n-- fmap     :: (     a -&gt; b)      -&gt; f a -&gt; f b\n</code></pre>\n\n<p>In other words: <code>fmap</code> takes a concrete function <code>a -&gt; b</code>, while <code>(fmap .)</code> takes a \"parameterized\" function <code>g</code> and a \"function selector\" <code>x</code>.</p>\n"}], "owner": {"reputation": 1953, "user_id": 899723, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/f68bcc2d6f5196fa090d578eb8356b9c?s=128&d=identicon&r=PG", "display_name": "mac10688", "link": "https://stackoverflow.com/users/899723/mac10688"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 467, "favorite_count": 1, "accepted_answer_id": 40055334, "answer_count": 3, "score": 3, "last_activity_date": 1521240193, "creation_date": 1476509407, "question_id": 40055333, "link": "https://stackoverflow.com/questions/40055333/applying-compose-to-fmap", "title": "Applying compose to fmap", "body": "<p>For weeks I've been trying to figure out how the Haskell compiler applies the (.) to fmap.</p>\n\n<p>What I mean is.</p>\n\n<pre><code>:t (.)\n(.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c\n\n:t fmap\nfmap :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b\n\n:t (.) fmap\n(.) fmap :: Functor f =&gt; (a -&gt; a1 -&gt; b) -&gt; a -&gt; f a1 -&gt; f b\n</code></pre>\n\n<p>How did the compiler arrive at the type for (.) fmap?</p>\n\n<p>I was actually going to ask this question here but while I was explaining what I've tried it all came together. So now I'm just going to post the answer too.</p>\n"}, {"tags": ["json", "haskell", "haskell-lens", "aeson", "lenses"], "answers": [{"comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1476503379, "post_id": 40054686, "comment_id": 67385069, "body": "Nice. I suspected the answer would be in <code>Control.Lens.Traversal</code>, but my eyes went past this combinator amidst all the other ones :)"}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1476506569, "post_id": 40054686, "comment_id": 67385534, "body": "@duplode I totally understand.  There is a <i>lot</i> in there."}], "tags": [], "owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "is_accepted": true, "score": 5, "last_activity_date": 1476502635, "creation_date": 1476502635, "answer_id": 40054686, "question_id": 40053199, "link": "https://stackoverflow.com/questions/40053199/combining-prisms-when-extracting-json-fields-with-lens-aeson/40054686#40054686", "title": "Combining prisms when extracting JSON fields with lens-aeson", "body": "<p>There is in fact a combinator that tries an optic and goes to a backup if the first one fails.  It's called <a href=\"https://hackage.haskell.org/package/lens-4.15.1/docs/Control-Lens-Traversal.html#v:failing\" rel=\"noreferrer\">failing</a>.</p>\n\n<p>Note that the condition on it should be satisfied by the case you describe.  Even if it wasn't, the combinator would still function, it would just behave irregularly when refactoring.  (Which is the main problem with using <a href=\"https://hackage.haskell.org/package/lens-4.15.1/docs/Control-Lens-Fold.html#v:filtered\" rel=\"noreferrer\">filtered</a> as a <code>Traversal</code>.)</p>\n"}, {"tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 0, "last_activity_date": 1476505005, "last_edit_date": 1495540407, "creation_date": 1476505005, "answer_id": 40054888, "question_id": 40053199, "link": "https://stackoverflow.com/questions/40053199/combining-prisms-when-extracting-json-fields-with-lens-aeson/40054888#40054888", "title": "Combining prisms when extracting JSON fields with lens-aeson", "body": "<p>Before <a href=\"https://stackoverflow.com/a/40054686/2751851\">Carl's answer</a>, which is what you should use, I was going to suggest <a href=\"http://hackage.haskell.org/package/lens-4.15.1/docs/Control-Lens-Prism.html#v:outside\" rel=\"nofollow noreferrer\"><code>outside</code></a> as a way to perform case analysis with those prisms:</p>\n\n<pre><code>tryNumberThenString :: AL.AsPrimitive t =&gt; t -&gt; [String]\ntryNumberThenString =\n    outside AL._Number .~ (:[]) . show $\n    outside AL._String .~ (:[]) . T.unpack $\n    const []\n</code></pre>\n\n\n\n<pre><code>v1 = obj ^.. AL.values . AL.key fieldName . folding tryNumberThenString\n</code></pre>\n\n<p>Note that, unless there is some other trick I am missing, this is not only more complicated than what Carl suggests but also less flexible -- I can only get a <code>Fold</code> from the plain function <code>tryNumberThenString</code>, while <code>failing</code> combines the prisms into a <code>Traversal</code>.</p>\n"}], "owner": {"reputation": 145, "user_id": 6840642, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6e5097e226bafec8ac922e683f1ad195?s=128&d=identicon&r=PG&f=1", "display_name": "Hapal", "link": "https://stackoverflow.com/users/6840642/hapal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 331, "favorite_count": 2, "accepted_answer_id": 40054686, "answer_count": 2, "score": 2, "last_activity_date": 1477773841, "creation_date": 1476486290, "last_edit_date": 1477773841, "question_id": 40053199, "link": "https://stackoverflow.com/questions/40053199/combining-prisms-when-extracting-json-fields-with-lens-aeson", "title": "Combining prisms when extracting JSON fields with lens-aeson", "body": "<p>I have a JSON blob similar to the following:</p>\n\n<pre><code>[\n  {\n    \"version\": 1\n  },\n  {\n    \"version\": \"3\"\n  },\n  ...\n]\n</code></pre>\n\n<p>Note that some of the versions are numbers and some are strings.\nI want to get a list of versions.\nI can use the following lens combination to extract the numeric versions:</p>\n\n<pre><code>v1 :: [String]\nv1 = obj ^.. AL.values . AL.key fieldName . AL._Number . to show\n</code></pre>\n\n<p>And the following to extract the strings</p>\n\n<pre><code>v2 :: [String]\nv2 = obj ^.. AL.values . AL.key fieldName . AL._String . to T.unpack\n</code></pre>\n\n<p>But, how can I get a list of versions by a single pass over the list?\nIs there any lens combinator that takes lenses <code>AL._Number . to show</code> and <code>AL._String . to T.unpack</code> and returns a combined getter so that if the first one failes, tries the second one? Something like <code>msum</code> for lenses?</p>\n"}, {"tags": ["sorting", "haskell"], "comments": [{"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 10, "creation_date": 1476487566, "post_id": 40053153, "comment_id": 67382564, "body": "I don&#39;t think this is a good idea. Whether or not the result is <code>Nothing</code> will depend on which comparisons are made, and which comparisons are made will depend on which sorting algorithm is used. To check that all possible comparisons are <code>Just</code> would take O(n^2) time."}, {"owner": {"reputation": 2313, "user_id": 5276520, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/dbaa9803983597167dbb65d52c24a3da?s=128&d=identicon&r=PG", "display_name": "dkasak", "link": "https://stackoverflow.com/users/5276520/dkasak"}, "edited": false, "score": 3, "creation_date": 1476488593, "post_id": 40053153, "comment_id": 67382756, "body": "I think it would be beneficial if you described to us what you are trying to achieve with this. Why not just ensure that you are passing valid data to <code>sortBy</code> beforehand? Is there a use case in mind? If you do this, we may be able to help better."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1476499637, "post_id": 40053153, "comment_id": 67384594, "body": "I could imagine using such a function for a <i>topological</i> sort, where if the return value was <code>Nothing</code> then you could arbitrarily pick one or the other to come first. But in that case, you could just as well have the function return <code>LT</code> instead of <code>Nothing</code>, and still use <code>sortBy</code>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1476503971, "post_id": 40053153, "comment_id": 67385146, "body": "@chepner, can&#39;t you mess things up trying to do a topological sort like that? You could conclude <code>x&lt;y</code> and later <code>y&lt;x</code>."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1476526929, "post_id": 40053153, "comment_id": 67390308, "body": "@Cirdec this <i>could</i> be well-defined and algorithm-agnostic if the comparison function has some extra properties, for instance if the comparison only fails when the elements are sufficiently close, but then fails consistently. In this case, aborting during the sorting process is the most efficient thing to do: the sorting brings neighbouring elements ever closer together, but avoids unnecessary work if you already get a failure at some point before the list is completely sorted (where you would ultimately get a failure anyway)."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1476533588, "post_id": 40053153, "comment_id": 67392141, "body": "@leftaroundabout @Cirdec I think it&#39;s enough to have transitivity: i.e. whenever two comparisons <code>x&lt;y,y&lt;z</code> both succeed (<code>isJust</code>) with <code>LT</code>, then the comparison <code>x&lt;z</code> must succeed with <code>LT</code> (ditto for <code>GT,EQ</code>, including mixed cases). When that happens and the sort returns <code>Just</code>, the comparisons performed by <code>sort</code> should be enough to guarantee that the comparison always succeeds."}], "answers": [{"tags": [], "owner": {"reputation": 2585, "user_id": 6701918, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/fBOp9.jpg?s=128&g=1", "display_name": "V. Semeria", "link": "https://stackoverflow.com/users/6701918/v-semeria"}, "is_accepted": true, "score": 2, "last_activity_date": 1476542415, "last_edit_date": 1476542415, "creation_date": 1476541956, "answer_id": 40060295, "question_id": 40053153, "link": "https://stackoverflow.com/questions/40053153/sorting-a-list-using-a-a-a-maybe-ordering-function/40060295#40060295", "title": "Sorting a list using a &quot;a -&gt; a -&gt; Maybe Ordering&quot; function", "body": "<p>You can adapt quickSort :</p>\n\n<pre><code>quickSortBy :: (a -&gt; a -&gt; Maybe Ordering) -&gt; [a] -&gt; Maybe [a]\nquickSortBy f [] = Just []\nquickSortBy f (x:xs) = do\n  comparisons &lt;- fmap (zip xs) $ mapM (f x) xs\n  sortLesser &lt;- quickSortBy f . map fst $ filter ((`elem` [GT, EQ]) . snd) comparisons\n  sortUpper &lt;- quickSortBy f . map fst $ filter ((== LT) . snd) comparisons\n  return $ sortLesser ++ [x] ++ sortUpper\n</code></pre>\n\n<p>At least assume that your sorting predicate <code>f :: a -&gt; a -&gt; Maybe Ordering</code> is anti-symmetric : <code>f x y == Just LT</code> if and only if <code>f y x == Just GT</code>. Then when <code>quickSortBy f</code> returns <code>Just [x1,...,xn]</code>, I think you have this guarantee : for all i in [1..n-1], <code>f xi x(i+1)</code> is <code>Just LT</code> or <code>Just EQ</code>.</p>\n\n<p>When in particular f is a partial order (transitive), then [x1,...,xn] is totally ordered.</p>\n"}], "owner": {"reputation": 957, "user_id": 5771245, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d4ff1986f900f764881c1862b5300a6d?s=128&d=identicon&r=PG&f=1", "display_name": "haskellHQ", "link": "https://stackoverflow.com/users/5771245/haskellhq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 241, "favorite_count": 0, "accepted_answer_id": 40060295, "answer_count": 1, "score": 4, "last_activity_date": 1476542415, "creation_date": 1476486018, "question_id": 40053153, "link": "https://stackoverflow.com/questions/40053153/sorting-a-list-using-a-a-a-maybe-ordering-function", "title": "Sorting a list using a &quot;a -&gt; a -&gt; Maybe Ordering&quot; function", "body": "<p>Is there a variant of</p>\n\n<pre><code>sortBy :: (a -&gt; a -&gt; Ordering) -&gt; [a] -&gt; [a]\n</code></pre>\n\n<p>(in Data.List) that allows me to use a <code>a -&gt; a -&gt; Maybe Ordering</code> sorting function instead of <code>a -&gt; a -&gt; Ordering</code>?</p>\n\n<p>What this variant would do is this:</p>\n\n<pre><code>sortBy' :: (a -&gt; a -&gt; Maybe Ordering) -&gt; [a] -&gt; Maybe [a]\n</code></pre>\n\n<p>If <code>a -&gt; a -&gt; Maybe Ordering</code> ever returns <code>Nothing</code> when it's called during the sort, <code>sortBy'</code> would return <code>Nothing</code>. Otherwise it would return the sorted list wrapped in <code>Just</code>.</p>\n\n<p>If such a variant is not already available, can you please help me construct one? (Preferably one that is at least as efficient as <code>sortBy</code>.)</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "edited": false, "score": 1, "creation_date": 1476476757, "post_id": 40051404, "comment_id": 67379067, "body": "Not in general. Haskell does not have an <code>eval</code> function, and in fact, that information does not even exist at runtime. You <i>can</i> create a lookup table for a particular set of functions, though, since functions are first class values."}], "answers": [{"tags": [], "owner": {"reputation": 62252, "user_id": 1435869, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TrEd9.jpg?s=128&g=1", "display_name": "karakfa", "link": "https://stackoverflow.com/users/1435869/karakfa"}, "is_accepted": true, "score": 3, "last_activity_date": 1476477076, "creation_date": 1476477076, "answer_id": 40051529, "question_id": 40051404, "link": "https://stackoverflow.com/questions/40051404/convert-operator-character-to-corresponding-function/40051529#40051529", "title": "Convert operator character to corresponding function", "body": "<p>You can easily define a partial function for this purpose with pattern matching</p>\n\n<pre><code>Prelude&gt; :set +m\nPrelude&gt; let f '+' = (+)\nPrelude|     f '-' = (-)\nPrelude|     f '*' = (*)\nPrelude|     f '/' = (/)\nPrelude|\nPrelude&gt; f '*' 3 4\n12.0\nPrelude&gt; f '+' 1 2\n3.0\nPrelude&gt;\n</code></pre>\n\n<p>and the deduced type</p>\n\n<pre><code>Prelude&gt; :t f\nf :: Fractional a =&gt; Char -&gt; a -&gt; a -&gt; a\n</code></pre>\n"}], "owner": {"reputation": 271, "user_id": 3727064, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/685893932/picture?type=large", "display_name": "Amoz", "link": "https://stackoverflow.com/users/3727064/amoz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 641, "favorite_count": 0, "accepted_answer_id": 40051529, "answer_count": 1, "score": 2, "last_activity_date": 1476478354, "creation_date": 1476476473, "last_edit_date": 1476478354, "question_id": 40051404, "link": "https://stackoverflow.com/questions/40051404/convert-operator-character-to-corresponding-function", "title": "Convert operator character to corresponding function", "body": "<p>Is there a way to convert the characters '+', '-', '*', '/' to the corresponding functions? I mean a function like this (obviously I tried it and it didn't work):</p>\n\n<pre><code>toOperator :: Num a =&gt; String -&gt; a -&gt; a -&gt; a\ntoOperator c = read c :: Num a =&gt; a -&gt; a -&gt; a\n</code></pre>\n"}, {"tags": ["haskell", "generics"], "answers": [{"tags": [], "owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "is_accepted": true, "score": 3, "last_activity_date": 1476477347, "last_edit_date": 1495540843, "creation_date": 1476476572, "answer_id": 40051426, "question_id": 40051229, "link": "https://stackoverflow.com/questions/40051229/how-to-define-generic-function-without-argument-of-generic-type/40051426#40051426", "title": "How to define generic function without argument of generic type?", "body": "<p>This is exactly the sort of thing <code>TypeApplication</code> lets you do - you can explicitly pass the type for <code>m</code>. You then also need <code>ScopedTypeVariables</code> to make sure that all the <code>m</code>s inside you <code>checkMonoid</code> are the same, and <code>AllowAmbiguousTypes</code> to let GHC know that you are fine with the fact that <code>checkMonoid</code> will be ambiguous without a type application.</p>\n\n<pre><code>{-# LANGUAGE TypeApplications, AllowAmbiguousTypes, ScopedTypeVariables #-}\n\n-- ...\n\ncheckMonoid :: forall m. (Eq m, Monoid m, Show m, Arbitrary m) =&gt; IO ()\ncheckMonoid = do\n  quickCheck (monoidAssoc   :: AssocCheck m)\n  quickCheck (monoidLeftId  :: IdCheck m)\n  quickCheck (monoidRightId :: IdCheck m)\n\n\nmain :: IO ()\nmain = do\n  checkMonoid @(Maybe String)\n  checkMonoid @[String]\n</code></pre>\n\n<p>The principal behind <code>TypeApplications</code> is that under the hood Haskell is transforming polymorphic functions into functions that also take types as arguments (<a href=\"https://stackoverflow.com/a/38249762/3072788\">see more here</a>) - and normally GHC takes care of figuring out which type arguments to fill in. With <code>TypeApplications</code>, <code>@SomeType</code> says \"let the first type argument to the preceding function call be <code>SomeType</code>\".</p>\n\n<p>By having the <code>forall m.</code> I make sure GHC will do the above. Then, when I call <code>checkMonoid</code>, I pass the type for <code>m</code> explicitly.</p>\n"}], "owner": {"reputation": 2106, "user_id": 916384, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/38055799f271a72b7d50d91c322ce561?s=128&d=identicon&r=PG", "display_name": "franza", "link": "https://stackoverflow.com/users/916384/franza"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 214, "favorite_count": 0, "accepted_answer_id": 40051426, "answer_count": 1, "score": 1, "last_activity_date": 1476477852, "creation_date": 1476475695, "last_edit_date": 1476477852, "question_id": 40051229, "link": "https://stackoverflow.com/questions/40051229/how-to-define-generic-function-without-argument-of-generic-type", "title": "How to define generic function without argument of generic type?", "body": "<p>I'm reading \"Haskell Book\"'s monoid section right now where author uses QuickCheck to check monoid laws. After writing some things on my own, I have this code:</p>\n\n<pre><code>module Main where\n\nimport Data.Monoid\nimport Test.QuickCheck\n\nmonoidAssoc :: (Eq m, Monoid m) =&gt; m -&gt; m -&gt; m -&gt; Bool\nmonoidAssoc a b c = ((a &lt;&gt; b) &lt;&gt; c) == (a &lt;&gt; (b &lt;&gt; c))\n\nmonoidLeftId :: (Eq m, Monoid m) =&gt; m -&gt; Bool\nmonoidLeftId a = (mempty &lt;&gt; a) == a\n\nmonoidRightId :: (Eq m, Monoid m) =&gt; m -&gt; Bool\nmonoidRightId a = (a &lt;&gt; mempty) == a\n\ntype AssocCheck a = a -&gt; a -&gt; a -&gt; Bool\ntype IdCheck a = a -&gt; Bool\n\nmain :: IO ()\nmain = do\n  quickCheck (monoidAssoc   :: AssocCheck (Maybe String))\n  quickCheck (monoidLeftId  :: IdCheck (Maybe String))\n  quickCheck (monoidRightId :: IdCheck (Maybe String))\n\n  quickCheck (monoidAssoc   :: AssocCheck [String])\n  quickCheck (monoidLeftId  :: IdCheck [String])\n  quickCheck (monoidRightId :: IdCheck [String])\n</code></pre>\n\n<p>As you can see <code>main</code> function has two almost same blocks which I would like to reduce to something like this:</p>\n\n<pre><code>checkMonoid :: (Eq m, Monoid m) =&gt; m -&gt; IO ()\ncheckMonoid = do\n  quickCheck (monoidAssoc   :: AssocCheck m)\n  quickCheck (monoidLeftId  :: IdCheck m)\n  quickCheck (monoidRightId :: IdCheck m)\n\n\nmain :: IO ()\nmain = do\n  checkMonoid :: Maybe String -&gt; IO ()\n  checkMonoid :: [String] -&gt; IO ()\n</code></pre>\n\n<p>But this obviously will not work. What I want here is to somehow pass type to the <code>checkMonoid</code> function so <code>quickCheck</code> function will know what <code>arbitrary</code> data must be generated.</p>\n"}, {"tags": ["haskell", "functional-programming", "type-systems"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1476475809, "post_id": 40051039, "comment_id": 67378648, "body": "Some of these are indeed obvious, and I don&#39;t know why &quot;Axiom&quot; is required, but many &quot;obvious&quot; things need to be included to set up a type system or logic."}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1476476901, "post_id": 40051039, "comment_id": 67379130, "body": "In case this question is not fit, if someone could link me to a practical tutorial on how to write a type-checker out of those formulas (perhaps using the STLC or something simple) it would advance a lot my understanding. I&#39;m reading <a href=\"http://typesafety.net/thesis/chapter-2.pdf\" rel=\"nofollow noreferrer\">this</a> guide on light logics on the meanwhile, trying to compare its formulas to those I posted, I&#39;m finding it very instructive."}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1476477475, "post_id": 40051039, "comment_id": 67379388, "body": "The title of the question is a bit misleading: are you asking about the judgements in this particular case, or understanding judgements in general?"}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1476477725, "post_id": 40051039, "comment_id": 67379500, "body": "@Alec if I understand how to do it in general then it would be easy to do it on this particular case, right? But I think the question evolved more for this particular case so I edited the title..."}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 5, "creation_date": 1476480176, "post_id": 40051039, "comment_id": 67380484, "body": "In general, to implement a typechecker, you need your type system in syntax-directed form\u2014I don\u2019t know if this is. Then each rule corresponds to a case branch on the syntax. E.g., <b>Ax</b> could be <code>typecheck gamma (Var x) = case Map.lookup x gamma of { Just a -&gt; return a; Nothing -&gt; fail &quot;unbound variable&quot; }</code>, like the Var rule in HM, x : A \u2208 \u0393 / \u0393 \u22a2 x : A."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1476483211, "post_id": 40051039, "comment_id": 67381511, "body": "@dfeuer Axiom is the only rule without a premise -- if we didn&#39;t have that we could not type anything. Think of it as the base case for the induction."}, {"owner": {"reputation": 11986, "user_id": 3237465, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/vOArX.png?s=128&g=1", "display_name": "user3237465", "link": "https://stackoverflow.com/users/3237465/user3237465"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1476522687, "post_id": 40051039, "comment_id": 67389109, "body": "@dfeuer, <code>Axiom</code> says that if you have some <code>x : A</code> in a context, you can reference this <code>x : A</code>. It&#39;s like in normal STLC where you can construct <code>\\(x : A) -&gt; x</code> \u2014 here the lambda binds a variable (i.e. adds it to the context) and <code>Axiom</code> allows to mention it later (i.e. take it from a (possibly empty) extension of the context where it was bound)."}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 8, "last_activity_date": 1476542834, "last_edit_date": 1476542834, "creation_date": 1476482577, "answer_id": 40052632, "question_id": 40051039, "link": "https://stackoverflow.com/questions/40051039/how-can-i-interpret-the-typing-rules-on-this-paper/40052632#40052632", "title": "How can I interpret the typing rules on this paper?", "body": "<p>This is a bit too broad, but from your comments I guess that you lack some basics of linear type systems. This system has weakening (not usually allowed in linear logic), so it actually corresponds to affine intuitionistic logic.</p>\n\n<p>The key idea is: you can use every value you have (e.g. variables) <em>at most once</em>.</p>\n\n<p>The type <code>A (x) B</code> (tensor product) roughly stands for the type of pair values, from which you can project out both a <code>A</code> value and a <code>B</code> value.</p>\n\n<p>The type <code>A -o B</code> stands for a linear function which <em>consumes</em> a value <code>A</code> (remember: at most one use!) and produces a single <code>B</code>.</p>\n\n<p>You can have e.g. <code>\\x.x : A -o A</code> but you can not have any term <code>: A -o (A (x) A)</code> since that would require you to use the argument twice.</p>\n\n<p>The type <code>!A</code> (\"of course A!\") stands for values of type <code>A</code> which can be duplicated as will -- as you can do normally in non-linear lambda calculi. This is done by the Contraction rule.</p>\n\n<p>For instance, <code>!A -o !B</code> represents a plain function: it requires a value (in an unbounded amount of copies) and produce a value (in an unbounded amount of copies). You can write a function <code>!A -o (!A (x) !A)</code> as follows:</p>\n\n<pre><code>\\a. (a (x) a)\n</code></pre>\n\n<p>Note that every linear typing rule with multiple premises has to split the environment variables between the premises (e.g. one gets Gamma, the other Delta), without overlap. Otherwise, you could duplicate linear variables. Cut has two contexts because of this. The non-linear cut would be:</p>\n\n<pre><code>G |- t: A        G, x:A |- u: B\n--------------------------------\n  G |- u[t/x]: B\n</code></pre>\n\n<p>but here both terms <code>t</code> and <code>u</code> can use the variables in <code>G</code>, hence <code>u[t/x]</code> can use variables twice -- not good. Instead, the linear cut</p>\n\n<pre><code>G1 |- t: A        G2, x:A |- u: B\n--------------------------------\n  G1,G2 |- u[t/x]: B\n</code></pre>\n\n<p>forces you to split variables between the two premises: what you use in <code>t</code> is unavailable for <code>u</code>.</p>\n"}], "owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 473, "favorite_count": 6, "answer_count": 1, "score": 10, "last_activity_date": 1476542834, "creation_date": 1476474890, "last_edit_date": 1495540821, "question_id": 40051039, "link": "https://stackoverflow.com/questions/40051039/how-can-i-interpret-the-typing-rules-on-this-paper", "title": "How can I interpret the typing rules on this paper?", "body": "<p>Those typing rules are present on the <a href=\"http://www.sciencedirect.com/science/article/pii/S0890540114001369\" rel=\"nofollow noreferrer\">\"On the expressivity of elementary linear logic: characterizing Ptime and an exponential time hierarchy\"</a> paper:</p>\n\n<p><a href=\"https://i.stack.imgur.com/GLi1x.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/GLi1x.png\" alt=\"typing rules\"></a> </p>\n\n<p>From the <a href=\"https://stackoverflow.com/questions/12532552/what-part-of-milner-hindley-do-you-not-understand\">\u201cWhat part of Milner-Hindley do you not understand?\u201d</a> Stack Overflow question, I can read some of those in English, but it is still difficult to figure out how to make a type checker out of that. This is my attempt at reading the first 4 rules:</p>\n\n<ul>\n<li><p><strong>Ax</strong>: as an axiom, if x has type A, then x has type A. <em>(Isn't that obvious?)</em></p></li>\n<li><p><strong>Cut</strong>: If a context <code>\u0393</code> proves <code>t has type A</code>, and another context <code>\u2206</code>, extended with the assertion <code>x has type A</code>, proves <code>u has type B</code>, then those two contexts together prove the substitution of all occurrences of <code>x</code> by <code>t</code> in <code>u</code> has type <code>B</code>. <em>(What does that mean, though? Why there are two contexts, where the extra one comes from? Also, that seems like a rule for substitution, but how, if substitution isn't a term, but an operation? The classical Milner-Hindley has nothing like that; it has just a very simple rule for App.)</em></p></li>\n<li><p><strong>Weak</strong>: If a context proves <code>t has type A</code>, then that context extended with the statement <code>x has type B</code> still proves <code>t has type A</code>. <em>(Again, isn't that obvious?)</em></p></li>\n<li><p><strong>Contr</strong>: if a context extended with <code>x1 has type !A</code> and <code>x2 has type !A</code> proves <code>t has type B</code>, then that context, extended with <code>x has type !A</code> proves substituting all occurrences of <code>x1</code> and <code>x2</code> by <code>x</code> in <code>t</code> has type <code>B</code>. <em>(Another rule for substitution, it seems? But why there are two terms above, one term below? Also, why those <code>!</code>s? Where would that all show up on the type checker?)</em></p></li>\n</ul>\n\n<p>I quite get what those rules want to say, but I am missing something before it truly clicks and I'm able to implement the corresponding type checker. How can I approach understanding those rules?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "edited": false, "score": 3, "creation_date": 1476466871, "post_id": 40049027, "comment_id": 67374116, "body": "Case: <code>addpoly</code> is not the same as <code>addPoly</code>"}, {"owner": {"reputation": 219, "user_id": 6153621, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ecfe0c52af8570b73de3a39fee4750aa?s=128&d=identicon&r=PG&f=1", "display_name": "Tom Haley", "link": "https://stackoverflow.com/users/6153621/tom-haley"}, "reply_to_user": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "edited": false, "score": 0, "creation_date": 1476466995, "post_id": 40049027, "comment_id": 67374179, "body": "Wow, stupid mistake forgot to capitalize the p in &#39;addPoly&#39;. Thanks for your help"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1476467470, "post_id": 40049027, "comment_id": 67374413, "body": "Do you realize that you have redundant parentheses on every right-hand side? Also, you may be better off with a stricter <code>Polynomial</code> type and/or a more polymorphic one."}], "answers": [{"tags": [], "owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "is_accepted": false, "score": 5, "last_activity_date": 1476466914, "creation_date": 1476466914, "answer_id": 40049058, "question_id": 40049027, "link": "https://stackoverflow.com/questions/40049027/haskell-error-lacks-an-accompanying-binding/40049058#40049058", "title": "Haskell Error - &quot;lacks an accompanying binding&quot;", "body": "<p>The line:</p>\n\n<pre><code>addpoly::Polynomial -&gt; Polynomial -&gt; Polynomial\n</code></pre>\n\n<p>Should be:</p>\n\n<pre><code>addPoly::Polynomial -&gt; Polynomial -&gt; Polynomial\n</code></pre>\n\n<p>Notice the letter <code>P</code>.</p>\n"}], "owner": {"reputation": 219, "user_id": 6153621, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ecfe0c52af8570b73de3a39fee4750aa?s=128&d=identicon&r=PG&f=1", "display_name": "Tom Haley", "link": "https://stackoverflow.com/users/6153621/tom-haley"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 715, "favorite_count": 0, "closed_date": 1476469393, "answer_count": 1, "score": 0, "last_activity_date": 1476466914, "creation_date": 1476466794, "last_edit_date": 1476466861, "question_id": 40049027, "link": "https://stackoverflow.com/questions/40049027/haskell-error-lacks-an-accompanying-binding", "closed_reason": "Not suitable for this site", "title": "Haskell Error - &quot;lacks an accompanying binding&quot;", "body": "<p>I have the following haskell code dealing with adding polynomials:</p>\n\n<pre><code>module PolyLA2 where  -- defines the module name so you can import from another haskell file\n\ntype Coeff = Int\ntype Exp = Int\ntype Polynomial = [(Coeff, Exp)] -- a list of terms in a polynomial formula\n\naddpoly::Polynomial -&gt; Polynomial -&gt; Polynomial\naddPoly [] ys = ys -- Base case \naddPoly xs [] = xs -- Base case \naddPoly ((a,b):xs) ((c,d):ys)\n     | a == c = ((a, b + d) : (addPoly xs ys))\n     | a &lt; c = ((a,b) : (addPoly xs ((c,d) : ys)))\n     | a &gt; c = ((c,d) : (addPoly ((a,b) : xs) ys)) \n</code></pre>\n\n<p>I believe the logic is correct however, when I try to compile it I get a \"lacks accompany binding error\" My question is what is causing this error? </p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1476467904, "post_id": 40048812, "comment_id": 67374681, "body": "Include your imports and the definitions of <code>Deck</code> and <code>Hand</code> so that we can reproduce your problem."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1476470571, "post_id": 40048812, "comment_id": 67376022, "body": "Thank you for your efforts to reduce the problem to just the relevant core information, that&#39;s much appreciated! Unfortunately, even after your latest edit I had to make many changes to produce the problem you report. In the future, please test that your reduction has not removed any important information."}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 2, "last_activity_date": 1476470445, "creation_date": 1476470445, "answer_id": 40050030, "question_id": 40048812, "link": "https://stackoverflow.com/questions/40048812/making-a-function-that-constructs-a-maximal-set-of-distinct-hands-from-a-given-d/40050030#40050030", "title": "Making a function that constructs a maximal set of distinct hands from a given deck", "body": "<p><code>foldl</code> expects a function with the shape <code>b -&gt; a -&gt; b</code>:</p>\n\n<pre><code>foldl :: Foldable t =&gt; (b -&gt; a -&gt; b) -&gt; b -&gt; t a -&gt; b\n</code></pre>\n\n<p>But <code>insert</code> has a flipped shape:</p>\n\n<pre><code>insert :: Ord a =&gt; a -&gt; Set a -&gt; Set a\n</code></pre>\n\n<p>You can use <code>flip</code> to fix the mismatch:</p>\n\n<pre><code>flip :: (a -&gt; b -&gt; c) -&gt; (b -&gt; a -&gt; c)\n</code></pre>\n\n<p>Thus, try <code>distinctHands deck = foldl (flip insert) empty (allHands deck)</code>. You may also like the <code>fromList</code> function</p>\n\n<pre><code>fromList :: Ord a =&gt; [a] -&gt; Set a\n</code></pre>\n\n<p>which would let you write <code>distinctHands = fromList . allHands</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 1, "user_id": 3689256, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9cb098ad089c7f7e4829578ebfd527d2?s=128&d=identicon&r=PG&f=1", "display_name": "user3689256", "link": "https://stackoverflow.com/users/3689256/user3689256"}, "is_accepted": false, "score": 0, "last_activity_date": 1603307788, "creation_date": 1603307788, "answer_id": 64470268, "question_id": 40048812, "link": "https://stackoverflow.com/questions/40048812/making-a-function-that-constructs-a-maximal-set-of-distinct-hands-from-a-given-d/64470268#64470268", "title": "Making a function that constructs a maximal set of distinct hands from a given deck", "body": "<p>distinctHands :: Deck -&gt; Set Hand\ndistinctHands deck = foldl' (\\set hand -&gt; insert hand set) empty (allHands deck)</p>\n"}], "owner": {"reputation": 3, "user_id": 7020055, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c71cc2237a7dbe3ccf89fe0ba603f24?s=128&d=identicon&r=PG&f=1", "display_name": "Dany", "link": "https://stackoverflow.com/users/7020055/dany"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 323, "favorite_count": 0, "accepted_answer_id": 40050030, "answer_count": 2, "score": 0, "last_activity_date": 1603307788, "creation_date": 1476465922, "last_edit_date": 1476469181, "question_id": 40048812, "link": "https://stackoverflow.com/questions/40048812/making-a-function-that-constructs-a-maximal-set-of-distinct-hands-from-a-given-d", "title": "Making a function that constructs a maximal set of distinct hands from a given deck", "body": "<p>I'm trying to write a function that constructs a maximal set of distinct hands from deck. I made a function allHands that gives all possible 5-card hands that can be taken from a given deck where   </p>\n\n<pre><code>type Deck = [Card] \n\ndata Card = Card { rank :: Rank, suit :: Suit }\nderiving (Eq, Ord)\n\ndata Rank = R2 | R3 | R4 | R5 | R6 | R7 | R8 | R9 | R10 | J | Q | K | A\nderiving (Bounded, Enum, Eq, Ord)  \n\ndata Suit = S | H | D | C --spades , hearts, diamonds, clubs\nderiving (Bounded, Enum, Eq, Ord, Show)\n\nnewtype Hand = Hand { unHand :: [Card] } deriving (Eq, Show)\n\ndistinctHands :: Deck -&gt; Set Hand\ndistinctHands deck = foldl insert empty (allHands deck)\n\nallHands :: Deck -&gt; [Hand]\nallHands deck = map Hand (combs 5 deck)\n\ncombs :: Int -&gt; [a] -&gt; [[a]]\ncombs 0 [] = [[]]\ncombs 0 xs = [[]]\ncombs 1 xs = map (:[]) xs \ncombs n xs = [ y: ys | y:xs' &lt;- tails xs, ys &lt;- combs (n-1) xs']\n</code></pre>\n\n<p>When I compile my code in GHCi it gives the following errors:   </p>\n\n<pre><code>Couldn't match type \u2018Set Hand\u2019 with \u2018Hand\u2019\n   Expected type: Set Hand -&gt; Set Hand -&gt; Set Hand\n   Actual type: Hand -&gt; Set Hand -&gt; Set Hand\n   In the first argument of \u2018foldl\u2019, namely \u2018insert\u2019 \n\nCouldn't match type \u2018Hand\u2019 with \u2018Set Hand\u2019\n   Expected type: [Set Hand]\n   Actual type: [Hand]\n   In the third argument of \u2018foldl\u2019, namely \u2018(allHands deck)\u2019\n</code></pre>\n\n<p>I don't know how to fix this can anyone help?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 1, "creation_date": 1476460600, "post_id": 40047227, "comment_id": 67370757, "body": "How doesn&#39;t it work? What error are you seeing? Questions asking &quot;why isn&#39;t this code working&quot; need a description of a specific problem or error. If <code>deck :: [Card]</code> then <code>map</code>ping <code>Hand :: [Card] -&gt; Hand</code> over <code>combs 5 deck :: [[Card]]</code> should have the type <code>[Hand]</code>. It should work, so it&#39;s impossible to tell what problem you&#39;re encountering from the current description of the problem."}], "answers": [{"comments": [{"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1476460985, "post_id": 40047382, "comment_id": 67371021, "body": "What does this do when there are more than 5 cards in the deck? Are the hands distinct?"}, {"owner": {"reputation": 2863, "user_id": 2297560, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/948d4a17494b3c616a0873453b74670c?s=128&d=identicon&r=PG", "display_name": "user2297560", "link": "https://stackoverflow.com/users/2297560/user2297560"}, "reply_to_user": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1476461064, "post_id": 40047382, "comment_id": 67371075, "body": "@Cirdec good point. there will be duplicates with this approach, but the requirements didn&#39;t say they must be unique ;)"}], "tags": [], "owner": {"reputation": 2863, "user_id": 2297560, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/948d4a17494b3c616a0873453b74670c?s=128&d=identicon&r=PG", "display_name": "user2297560", "link": "https://stackoverflow.com/users/2297560/user2297560"}, "is_accepted": false, "score": 2, "last_activity_date": 1476461248, "last_edit_date": 1476461248, "creation_date": 1476460481, "answer_id": 40047382, "question_id": 40047227, "link": "https://stackoverflow.com/questions/40047227/how-to-write-a-function-in-haskell-that-returns-all-combinations-of-5-card-hands/40047382#40047382", "title": "How to write a function in Haskell that returns all combinations of 5-card hands than can be taken from a given deck of cards", "body": "<p>You almost have it.</p>\n\n<pre><code>allHands deck = map Hand (combs 5 deck)\n</code></pre>\n\n<p>Here's my original answer which probably doesn't do what you want (because it generates duplicates):</p>\n\n<pre><code>import Data.List (permutations)\n\nallHands = map Hand . map (take 5) . permutations\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1476461553, "post_id": 40047611, "comment_id": 67371362, "body": "This is one way to implement <code>combs</code>. It may take a very very long time to calculate all small hands of a medium-sized deck this way."}], "tags": [], "owner": {"reputation": 62252, "user_id": 1435869, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TrEd9.jpg?s=128&g=1", "display_name": "karakfa", "link": "https://stackoverflow.com/users/1435869/karakfa"}, "is_accepted": false, "score": 0, "last_activity_date": 1476461314, "creation_date": 1476461314, "answer_id": 40047611, "question_id": 40047227, "link": "https://stackoverflow.com/questions/40047227/how-to-write-a-function-in-haskell-that-returns-all-combinations-of-5-card-hands/40047611#40047611", "title": "How to write a function in Haskell that returns all combinations of 5-card hands than can be taken from a given deck of cards", "body": "<p>Using Data.List subsequences</p>\n\n<pre><code>allHands = filter ((5==).length) . subsequences\n</code></pre>\n"}], "owner": {"reputation": 3, "user_id": 7020055, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c71cc2237a7dbe3ccf89fe0ba603f24?s=128&d=identicon&r=PG&f=1", "display_name": "Dany", "link": "https://stackoverflow.com/users/7020055/dany"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 377, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1476461749, "creation_date": 1476460023, "last_edit_date": 1476461749, "question_id": 40047227, "link": "https://stackoverflow.com/questions/40047227/how-to-write-a-function-in-haskell-that-returns-all-combinations-of-5-card-hands", "title": "How to write a function in Haskell that returns all combinations of 5-card hands than can be taken from a given deck of cards", "body": "<p>I'm not very experienced with programming and I have a problem that I can't seem to figure out.\nI have the types:  </p>\n\n<pre><code>newtype Hand = Hand { unHand :: [Card] } deriving (Eq, Show)\ntype Deck = [Card]\n</code></pre>\n\n<p>I want to write a function <code>allHands</code> such that it returns all possible combinations of 5 cards that can be taken from a given deck.  </p>\n\n<pre><code>allHands :: Deck -&gt; [Hand]  \nallHands deck = combs 5 deck \n</code></pre>\n\n<p>where <code>combs :: Int -&gt; [a] -&gt; [[a]]</code> is a function I made that returns all  the possible combinations that can be formed by taking n elements from a list.</p>\n\n<p>My function doesn't work because the result of my function <code>(combs 5 deck )</code> is <code>[[Card]]</code> and I want it to be <code>[Hand]</code>. Can anyone help me with this?</p>\n"}, {"tags": ["haskell", "profiling", "ghc"], "answers": [{"tags": [], "owner": {"reputation": 14485, "user_id": 190376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd8280c5e1491b8cf55760750ed97dec?s=128&d=identicon&r=PG", "display_name": "Reid Barton", "link": "https://stackoverflow.com/users/190376/reid-barton"}, "is_accepted": false, "score": 4, "last_activity_date": 1476456910, "creation_date": 1476456910, "answer_id": 40046184, "question_id": 40044364, "link": "https://stackoverflow.com/questions/40044364/making-sense-from-ghc-profiler/40046184#40046184", "title": "Making sense from GHC profiler", "body": "<p><code>time -l</code> is displaying the (resident, i.e. not swapped out) size of the process as seen by the operating system (obviously). This includes twice the maximum size of the Haskell heap (due to the way that GHC's GC works), plus anything else allocated by the RTS or other C libraries, plus the code of your executable itself plus the libraries it depends on, etc. I'm guessing in this case the primary contributor to the 19M is the size of your exectuable.</p>\n\n<p><code>total alloc</code> is the total amount allocated onto the Haskell heap. It is not at all a measure of maximum heap size (which is what people usually mean by \"how much memory is my program using\"). Allocation is very cheap and allocation rates of around 1GB/s are typical for a Haskell program.</p>\n\n<p>The number in the header of the hp2ps output \"114,272 bytes x seconds\" is something completely different again: it is the integral of the graph, and is measured in bytes * seconds, not in bytes. For example if your program holds onto a 10 MB structure for 4 seconds then that will cause this number to increase by 40 MB*s.</p>\n\n<p>The number around 1.8 MB shown in the graph is the actual maximum size of the Haskell heap, which is probably the number you're most interested in.</p>\n\n<p>You've omitted the most useful source of numbers about your program's execution, which is running it with <code>+RTS -s</code> (this doesn't even require it to have been built with profiling).</p>\n"}, {"comments": [{"owner": {"reputation": 631, "user_id": 2435054, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/4391746fc426b77353167c1c11366953?s=128&d=identicon&r=PG", "display_name": "Slabko", "link": "https://stackoverflow.com/users/2435054/slabko"}, "edited": false, "score": 0, "creation_date": 1476465742, "post_id": 40046433, "comment_id": 67373525, "body": "Thank Zeta for your reply. I have one more question. The size of the binary is 63M. Does it mean that the binary was not fully loaded into the memory somehow?"}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "reply_to_user": {"reputation": 631, "user_id": 2435054, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/4391746fc426b77353167c1c11366953?s=128&d=identicon&r=PG", "display_name": "Slabko", "link": "https://stackoverflow.com/users/2435054/slabko"}, "edited": false, "score": 0, "creation_date": 1476473622, "post_id": 40046433, "comment_id": 67377617, "body": "@Slabko: I don&#39;t have a Unix environment to check the semantics of <code>time -l</code> at the moment, so that might not be 100% correct. However, I haven&#39;t found any actual man pages where <code>-l</code> is described. Which <code>time</code> do you use?"}, {"owner": {"reputation": 631, "user_id": 2435054, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/4391746fc426b77353167c1c11366953?s=128&d=identicon&r=PG", "display_name": "Slabko", "link": "https://stackoverflow.com/users/2435054/slabko"}, "edited": false, "score": 0, "creation_date": 1476478285, "post_id": 40046433, "comment_id": 67379743, "body": "I use Mac OS 10.11 and embedded version of <code>time</code>. It uses POSIX&#39;s <code>getrusage</code>. Interestingly enough, <code>getusage</code> returns size in kb and 19070976 kb is a really big number. I tried GNU <code>time</code> on linux; with the binary size of 48M it still claims that maximum resident set size equals 32820Kb But I think, I received more than good answer for my question, and now I understand how I should read numbers of GHC profiler. I don&#39;t think that the way <code>time</code> works is relevant to the understanding of Haskell memory optimization in my case. Thank you very much for your help, I really appreciate it!"}, {"owner": {"reputation": 14485, "user_id": 190376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd8280c5e1491b8cf55760750ed97dec?s=128&d=identicon&r=PG", "display_name": "Reid Barton", "link": "https://stackoverflow.com/users/190376/reid-barton"}, "edited": false, "score": 2, "creation_date": 1476496517, "post_id": 40046433, "comment_id": 67384129, "body": "The whole executable file doesn&#39;t necessarily need to be loaded at runtime. If the executable has a symbol table it could be larger than the actual code and data."}], "tags": [], "owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "is_accepted": true, "score": 7, "last_activity_date": 1476457630, "creation_date": 1476457630, "answer_id": 40046433, "question_id": 40044364, "link": "https://stackoverflow.com/questions/40044364/making-sense-from-ghc-profiler/40046433#40046433", "title": "Making sense from GHC profiler", "body": "<blockquote>\n  <p>A man with a watch knows what time it is. A man with two watches is never sure.</p>\n</blockquote>\n\n<p>Ah, but what do does two watches show? Are both meant to show the current time in UTC? Or is one of them supposed to show the time in UTC, and the other one the time on a certain point on Mars? As long as they are in sync, the second scenario wouldn't be a problem, right?</p>\n\n<p>And that is exactly what is happening here. You compare different memory measurements:</p>\n\n<ul>\n<li>the <strong>maximum residency</strong></li>\n<li>the <strong>total amount of allocated memory</strong></li>\n</ul>\n\n<p>The maximum residency is the highest amount of memory your program ever uses at a given time. That's 19MB. However, the total amount of allocated memory is a lot more, since that's how GHC works: it \"allocates\" memory for objects that are garbage collected, which is almost everything that's not unpacked.</p>\n\n<p>Let us inspect a C example for this:</p>\n\n<pre><code>int main() {\n   int i;\n   char * mem;\n\n   for(i = 0; i &lt; 5; ++i) {\n      mem = malloc(19 * 1000 * 1000);\n      free(mem);\n   }\n   return 0;\n}\n</code></pre>\n\n<p>Whenever we use <code>malloc</code>, we will allocate 19 megabytes of memory. However, we free the memory immediately after. The highest amount of memory we ever have at one point is therefore 19 megabytes (and a little bit more for the stack and the program itself).</p>\n\n<p>However, in total, we allocate 5 * 19M, <strong>95M total</strong>. Still, we could run our little program with just 20 megs of RAM fine. That's the difference between <strong>total allocated memory</strong> and <strong>maximum residency</strong>. Note that the residency reported by time is always at least <code>du &lt;executable&gt;</code>, since that has to reside in memory too.</p>\n\n<p>That being said, the easiest way to generate statistics is <code>-s</code>, which will show how what was the maximum residency from the Haskell's program point of view. In your case, it will be the <strong>1.9M</strong>, the number in your heap profile (or double the amount due to profiling). And yeah, Haskell executables tend to get extremely large, since libraries are statically linked.</p>\n"}], "owner": {"reputation": 631, "user_id": 2435054, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/4391746fc426b77353167c1c11366953?s=128&d=identicon&r=PG", "display_name": "Slabko", "link": "https://stackoverflow.com/users/2435054/slabko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 330, "favorite_count": 5, "accepted_answer_id": 40046433, "answer_count": 2, "score": 5, "last_activity_date": 1476465270, "creation_date": 1476451609, "last_edit_date": 1476465270, "question_id": 40044364, "link": "https://stackoverflow.com/questions/40044364/making-sense-from-ghc-profiler", "title": "Making sense from GHC profiler", "body": "<p>I'm trying to make sense from GHC profiler. There is a rather simple app, which uses <code>werq</code> and <code>lens-aeson</code> libraries, and while learning about GHC profiling, I decided to play with it a bit. </p>\n\n<p>Using different options (<code>time</code> tool, <code>+RTS -p -RTS</code> and <code>+RTS -p -h</code>) I acquired entirely different numbers of my memory usage. Having all those numbers, I'm now completely lost trying to understand what is going on, and how much memory the app actually uses.</p>\n\n<p>This situation reminds me the phrase by Arthur Bloch: \"A man with a watch knows what time it is. A man with two watches is never sure.\"</p>\n\n<p>Can you, please, suggest me, how I can read all those numbers, and what is the meaning of each of them.</p>\n\n<p>Here are the numbers:</p>\n\n<p><code>time -l</code> reports around <strong>19M</strong></p>\n\n<pre><code>#/usr/bin/time -l ./simple-wreq\n...\n        3.02 real         0.39 user         0.17 sys\n  19070976  maximum resident set size\n         0  average shared memory size\n         0  average unshared data size\n         0  average unshared stack size\n     21040  page reclaims\n         0  page faults\n         0  swaps\n         0  block input operations\n         0  block output operations\n        71  messages sent\n        71  messages received\n      2991  signals received\n        43  voluntary context switches\n      6490  involuntary context switches\n</code></pre>\n\n<p>Using <code>+RTS -p -RTS</code> flag reports around <strong>92M</strong>. Although it says \"total alloc\" it seems strange to me, that a simple app like this one can allocate and release 91M</p>\n\n<pre><code># ./simple-wreq +RTS -p -RTS      \n# cat simple-wreq.prof\n        Fri Oct 14 15:08 2016 Time and Allocation Profiling Report  (Final)\n\n           simple-wreq +RTS -N -p -RTS\n\n        total time  =        0.07 secs   (69 ticks @ 1000 us, 1 processor)\n        total alloc =  91,905,888 bytes  (excludes profiling overheads)\n\nCOST CENTRE                             MODULE                          %time %alloc\n\nmain.g                                  Main                             60.9   88.8\nMAIN                                    MAIN                             24.6    2.5\ndecodeLenient/look                      Data.ByteString.Base64.Internal   5.8    2.6\ndecodeLenientWithTable/fill             Data.ByteString.Base64.Internal   2.9    0.1\ndecodeLenientWithTable.\\.\\.fill         Data.ByteString.Base64.Internal   1.4    0.0\ndecodeLenientWithTable.\\.\\.fill.\\       Data.ByteString.Base64.Internal   1.4    0.1\ndecodeLenientWithTable.\\.\\.fill.\\.\\.\\.\\ Data.ByteString.Base64.Internal   1.4    3.3\ndecodeLenient                           Data.ByteString.Base64.Lazy       1.4    1.4\n\n\n                                                                                                             individual     inherited\nCOST CENTRE                                              MODULE                            no.     entries  %time %alloc   %time %alloc\n\nMAIN                                                     MAIN                              443           0   24.6    2.5   100.0  100.0\n main                                                    Main                              887           0    0.0    0.0    75.4   97.4\n  main.g                                                 Main                              889           0   60.9   88.8    75.4   97.4\n   object_                                               Data.Aeson.Parser.Internal        925           0    0.0    0.0     0.0    0.2\n    jstring_                                             Data.Aeson.Parser.Internal        927          50    0.0    0.2     0.0    0.2\n   unstream/resize                                       Data.Text.Internal.Fusion         923         600    0.0    0.3     0.0    0.3\n   decodeLenient                                         Data.ByteString.Base64.Lazy       891           0    1.4    1.4    14.5    8.1\n    decodeLenient                                        Data.ByteString.Base64            897         500    0.0    0.0    13.0    6.7\n....\n</code></pre>\n\n<p><code>+RTS -p -h</code> and <code>hp2ps</code> show me the following picture and two numbers: <strong>114K</strong> in the header and something around <strong>1.8Mb</strong> on the graph.\n<a href=\"https://i.stack.imgur.com/5BYk1.png\" rel=\"nofollow\"><img src=\"https://i.stack.imgur.com/5BYk1.png\" alt=\"Memory Profiling\"></a></p>\n\n<p>And, just in case, here is the app:</p>\n\n<pre><code>module Main where\n\nimport Network.Wreq\nimport Control.Lens\nimport Data.Aeson.Lens\nimport Control.Monad\n\nmain :: IO ()\nmain = replicateM_ 10 g\n  where \n    g = do\n        r &lt;- get \"http://httpbin.org/get\"\n        print $ r ^. responseBody\n                   . key \"headers\"\n                   . key \"User-Agent\"\n                   . _String\n</code></pre>\n\n<p><strong>UPDATE 1:</strong> Thank everyone for incredible good responses. As was suggested, I add <code>+RTS -s</code> output, so the entire picture builds up for everyone who read it.</p>\n\n<pre><code>#./simple-wreq +RTS -s\n...\n     128,875,432 bytes allocated in the heap\n      32,414,616 bytes copied during GC\n       2,394,888 bytes maximum residency (16 sample(s))\n         355,192 bytes maximum slop\n               7 MB total memory in use (0 MB lost due to fragmentation)\n\n                                     Tot time (elapsed)  Avg pause  Max pause\n  Gen  0       194 colls,     0 par    0.018s   0.022s     0.0001s    0.0022s\n  Gen  1        16 colls,     0 par    0.027s   0.031s     0.0019s    0.0042s\n</code></pre>\n\n<p><strong>UPDATE 2</strong>: The size of the executable:</p>\n\n<pre><code>#du -h simple-wreq\n63M     simple-wreq\n</code></pre>\n"}, {"tags": ["scala", "haskell"], "comments": [{"owner": {"reputation": 10394, "user_id": 1151929, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/922d81e934a0f2e3eb8b2c2d18022830?s=128&d=identicon&r=PG", "display_name": "sarveshseri", "link": "https://stackoverflow.com/users/1151929/sarveshseri"}, "edited": false, "score": 1, "creation_date": 1476451688, "post_id": 40044118, "comment_id": 67364619, "body": "Well... I have not read the full article but as far as I can understand the author is talking about SemiGroups. Now for any set of <code>T</code> the <code>semigroup&#39;s</code> arrow builders will have type <code>T =&gt; T =&gt; T</code>. <code>A =&gt; B</code> is a morphism from set of <code>A&#39;s</code> to set of <code>B&#39;s</code>. Here the intended function will take a <code>List</code> of <code>A</code> and a morphism from A to B, then uses the <code>arrows</code> to fold the morphed <code>List</code> of <code>B</code>&#39;s into a <code>B</code>"}], "answers": [{"comments": [{"owner": {"reputation": 12424, "user_id": 345859, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/cdb711788e4473ecd856108533787144?s=128&d=identicon&r=PG&f=1", "display_name": "Jas", "link": "https://stackoverflow.com/users/345859/jas"}, "edited": false, "score": 0, "creation_date": 1476452669, "post_id": 40044368, "comment_id": 67365345, "body": "cool.  <code>e</code> is the current element traversed by <code>foldLeft</code> <code>ab(e)</code> means apply conversion from a to b.  <code>acc</code> is just an accumulator varialbe to accumulate the result. and <code>B =&gt; B =&gt; B</code> is a notation to denote we have a function of two inputs (the first two B) and single output the third B.  why is it taking me so long to understand such small code? what can I do so it will take me a snap to understand it right now i have to ponder over it for 5 minutes to get the pieces (I see variables not defined so i need to almost guess what is <code>e</code> what is <code>acc</code> ...)"}], "tags": [], "owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "is_accepted": true, "score": 4, "last_activity_date": 1476451617, "creation_date": 1476451617, "answer_id": 40044368, "question_id": 40044118, "link": "https://stackoverflow.com/questions/40044118/in-insufficiently-polymorphic-why-do-we-need-the-bbb-b-b-b/40044368#40044368", "title": "in insufficiently-polymorphic why do we need the `bbb: B =&gt; B =&gt; B`?", "body": "<p>This is hinted at later in the post with the further generalised version:</p>\n\n<pre><code>foo :: forall f a r. (Foldable f, Semigroup r) =&gt; f a -&gt; (a -&gt; r) -&gt; r -&gt; r\n</code></pre>\n\n<p>A semigroup is just a structure which supports a binary append operation e.g.</p>\n\n<pre><code>trait Semigroup[T] {\n    def append(v1: T, v2: T): T\n}\n</code></pre>\n\n<p>So <code>foo</code> takes an input list, a function to map each list element to some appropriate semigroup instance (the function <code>a -&gt; b</code> and an <code>append</code> operation for the semigroup. The final <code>b</code> parameter is the initial value to accumulate.</p>\n\n<p><code>foo</code> then simply iterates over the list combining the current accumulator with the value associated with the current list item e.g.</p>\n\n<pre><code>def foo[A, B](as: List[A], b: B, ab: A =&gt; B, bbb: B =&gt; B =&gt; B): B = \n    as.foldLeft(b)((acc, e) =&gt; bbb(ab(e), acc))\n</code></pre>\n\n<p>Lists form a semigroup where <code>append</code> just appends the two lists.</p>\n"}], "owner": {"reputation": 12424, "user_id": 345859, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/cdb711788e4473ecd856108533787144?s=128&d=identicon&r=PG&f=1", "display_name": "Jas", "link": "https://stackoverflow.com/users/345859/jas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 88, "favorite_count": 0, "accepted_answer_id": 40044368, "answer_count": 1, "score": 0, "last_activity_date": 1476451617, "creation_date": 1476450847, "question_id": 40044118, "link": "https://stackoverflow.com/questions/40044118/in-insufficiently-polymorphic-why-do-we-need-the-bbb-b-b-b", "title": "in insufficiently-polymorphic why do we need the `bbb: B =&gt; B =&gt; B`?", "body": "<p>in <a href=\"http://degoes.net/articles/insufficiently-polymorphic\" rel=\"nofollow\">insufficiently-polymorphic</a></p>\n\n<p>why did the author add the 3rd argument: <code>bbb: B =&gt; B =&gt; B</code> what does it mean from b to b to b, why do we need such a thing?</p>\n\n<blockquote>\n  <p>Let\u2019s say we take this one step further and introduce even more\n  polymorphism into the code, hiding the fact that the second parameter\n  and return values are lists:</p>\n</blockquote>\n\n<pre><code>foo :: forall a b. List a -&gt; (a -&gt; b) -&gt; (b -&gt; b -&gt; b) -&gt; b -&gt; b\ndef foo[A, B](as: List[A], b: B, ab: A =&gt; B, bbb: B =&gt; B =&gt; B): B\n</code></pre>\n\n<p>and why is there suddenly a conversion function from a to b: <code>ab: A =&gt; B</code> we didn't have that in original code, why was it added?</p>\n"}, {"tags": ["list", "haskell"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1476446366, "post_id": 40042423, "comment_id": 67360836, "body": "<code>drop 12 myList</code>?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1476446513, "post_id": 40042423, "comment_id": 67360947, "body": "To reproduce the exact semantics of the posted code is tricky, since there might be more than one occurrence of a character in <code>myList</code>. However, I think you might be OK with something very close to that. Can you express in plain words what is the task you want to implement?"}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 2, "last_activity_date": 1476446195, "creation_date": 1476446195, "answer_id": 40042608, "question_id": 40042423, "link": "https://stackoverflow.com/questions/40042423/efficient-list-operations/40042608#40042608", "title": "Efficient list operations?", "body": "<p>The usual approach is to pair each character with its index before doing the real processing</p>\n\n<pre><code>process $ zip [0..] myList\n</code></pre>\n\n<p>Now <code>process</code> can perform the actual computation, which can use the indexes as well as the characters.</p>\n\n<p>In some contexts, this approach is known as the <a href=\"https://en.wikipedia.org/wiki/Schwartzian_transform\" rel=\"nofollow\">Schwartzian transform</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 34669, "user_id": 34409, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/4dfdadcd9bb62300eb1a54f02fe5dc18?s=128&d=identicon&r=PG", "display_name": "Chad Gilbert", "link": "https://stackoverflow.com/users/34409/chad-gilbert"}, "is_accepted": false, "score": 1, "last_activity_date": 1476447928, "last_edit_date": 1476447928, "creation_date": 1476447001, "answer_id": 40042850, "question_id": 40042423, "link": "https://stackoverflow.com/questions/40042423/efficient-list-operations/40042850#40042850", "title": "Efficient list operations?", "body": "<p>Your function returns a string that skips the first twelve characters and reverses the output, dropping any characters that are also in those first twelve.</p>\n\n<p>For a more efficient version of this, you could use <code>Data.Set</code> to store those first twelve characters for fast lookup, the filter them out and reverse the remainder of the string:</p>\n\n\n\n<pre class=\"lang-haskell prettyprint-override\"><code>import qualified Data.Set as Set\n\nsearchText =\n    let hash = (Set.fromList . take 12) myList\n    in (reverse . filter (flip Set.notMember hash) . drop 12) myList\n</code></pre>\n"}], "owner": {"reputation": 2691, "user_id": 5477287, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/yKMgF.jpg?s=128&g=1", "display_name": "Babra Cunningham", "link": "https://stackoverflow.com/users/5477287/babra-cunningham"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "accepted_answer_id": 40042608, "answer_count": 2, "score": 0, "last_activity_date": 1476447928, "creation_date": 1476445625, "question_id": 40042423, "link": "https://stackoverflow.com/questions/40042423/efficient-list-operations", "title": "Efficient list operations?", "body": "<p>I have the following function that searches through [Char] and returns [Char] based on their index number:</p>\n\n<pre><code>myList = \"abcdefghijk\"\n\nsearchText = foldl (\\acc el -&gt; if elemIndex el myList &gt; Just 11 then el : acc else acc) [] myList\n</code></pre>\n\n<p>Clearly this is somewhat inefficent as elemIndex returns the index number of each element then applies the condition.</p>\n\n<p>Is there a more efficient way of performing this operation? </p>\n"}, {"tags": ["haskell", "fullscreen", "xmonad", "tiling"], "answers": [{"tags": [], "owner": {"reputation": 2915, "user_id": 1295154, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9687b362fd1d4754033efc0b19001e81?s=128&d=identicon&r=PG", "display_name": "Dominique Devriese", "link": "https://stackoverflow.com/users/1295154/dominique-devriese"}, "is_accepted": true, "score": 5, "last_activity_date": 1476425455, "creation_date": 1476425455, "answer_id": 40036102, "question_id": 40035523, "link": "https://stackoverflow.com/questions/40035523/fullscreen-and-xmonad/40036102#40036102", "title": "Fullscreen and xmonad", "body": "<p>A quick google search turns up <a href=\"https://wiki.archlinux.org/index.php/Xmonad#Chromium.2FChrome_will_not_go_fullscreen\" rel=\"noreferrer\">this explanation</a> on the Arch wiki. You might try the instructions there:</p>\n\n<pre><code>import XMonad.Hooks.EwmhDesktops\n...\n...   xmonad $ defaultConfig\n        { handleEventHook    = fullscreenEventHook\n        }\n</code></pre>\n"}], "owner": {"reputation": 337, "user_id": 4807549, "user_type": "registered", "accept_rate": 46, "profile_image": "https://lh3.googleusercontent.com/-zRbnN_A_wy0/AAAAAAAAAAI/AAAAAAAAAB0/1IyAlZ4V9jY/photo.jpg?sz=128", "display_name": "Avi Caspe", "link": "https://stackoverflow.com/users/4807549/avi-caspe"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3570, "favorite_count": 1, "accepted_answer_id": 40036102, "answer_count": 1, "score": 5, "last_activity_date": 1476425455, "creation_date": 1476422820, "question_id": 40035523, "link": "https://stackoverflow.com/questions/40035523/fullscreen-and-xmonad", "title": "Fullscreen and xmonad", "body": "<p>I am using xmonad and I am unable to get Chromium to display videos in fullscreen.</p>\n\n<p>It was my impression that the following would create a very basic Manage Hook that would detect fullscreen applications and make the window fullscreen and floating:</p>\n\n<pre><code>myManageHook = composeAll [ manageDocks\n    , manageHook defaultConfig\n    , (isFullscreen --&gt; doFullFloat) ]\n</code></pre>\n\n<p>NOTE: This does require xmonad-contrib, which I have.\nThe issue is that a YouTube video in chromium will not fill to fit the entire screen when I tell YouTube to be fullscreen. The same thing occurs with Netflix too.</p>\n\n<p>Why is this not making videos fullscreen and how do I fix it? If it is needed my entire xmonad.hs config file is here: </p>\n\n<pre><code>import XMonad\nimport XMonad.Hooks.DynamicLog\nimport XMonad.Hooks.ManageDocks\nimport XMonad.Hooks.ManageHelpers\nimport XMonad.Util.EZConfig(additionalKeys)\nimport XMonad.Layout.NoBorders\nimport System.IO\n\nmain = do\n    config &lt;- statusBar \"xmobar\" myPP toggleXMobarKey myConfig\n    xmonad $ config\n\nmyPP = xmobarPP { ppTitle = xmobarColor \"#0373fc\" \"\" . shorten 50\n            }\n\nmyConfig = defaultConfig { manageHook = myManageHook\n    , layoutHook = smartBorders . avoidStruts  $  layoutHook defaultConfig\n    , terminal = \"termite\"\n    , focusedBorderColor = \"#00bbff\"\n    , modMask = mod4Mask     -- Rebind Mod to the Windows key\n    }\n\nmyManageHook = composeAll\n   [ manageDocks\n   , manageHook defaultConfig\n   , (isFullscreen --&gt; doFullFloat)\n   ]\n\ntoggleXMobarKey XConfig {XMonad.modMask = modMask} = (modMask, xK_z)\n</code></pre>\n"}, {"tags": ["haskell", "operators"], "answers": [{"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1476407731, "post_id": 40033429, "comment_id": 67343924, "body": "Might be worth mentioning that <code>myFunc = id</code> would do the exact same thing."}, {"owner": {"reputation": 1141, "user_id": 5802468, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/yqeEu.gif?s=128&g=1", "display_name": "Majora320", "link": "https://stackoverflow.com/users/5802468/majora320"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 3, "creation_date": 1476407852, "post_id": 40033429, "comment_id": 67343950, "body": "@leftaroundabout True, but I think that op&#39;s question was an obviously simplified example, to be applied in a larger problem."}, {"owner": {"reputation": 419, "user_id": 5461035, "user_type": "registered", "accept_rate": 78, "profile_image": "https://graph.facebook.com/759957520817224/picture?type=large", "display_name": "Vitali  Kuzmin", "link": "https://stackoverflow.com/users/5461035/vitali-kuzmin"}, "edited": false, "score": 1, "creation_date": 1476410772, "post_id": 40033429, "comment_id": 67344624, "body": "Thank you so much! True, it was my mistake, that I wrote here Boolean instead of Bool"}, {"owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 1, "creation_date": 1476412787, "post_id": 40033429, "comment_id": 67345016, "body": "also worth mentioning you can use actual operator names to pattern match arguments. E.g. <code>myFunc (#) a b = a # b</code>"}, {"owner": {"reputation": 1141, "user_id": 5802468, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/yqeEu.gif?s=128&g=1", "display_name": "Majora320", "link": "https://stackoverflow.com/users/5802468/majora320"}, "reply_to_user": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 0, "creation_date": 1476412873, "post_id": 40033429, "comment_id": 67345036, "body": "@rampion You can, but I belive it is clearer here using explicit backticks to emphasize the fact that we are calling a function."}, {"owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 1, "creation_date": 1476412980, "post_id": 40033429, "comment_id": 67345058, "body": "@Majora320 - given that OP referred to it as passing an operator, perhaps we should be stressing to them that operators are just functions with symbolic names?"}, {"owner": {"reputation": 1141, "user_id": 5802468, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/yqeEu.gif?s=128&g=1", "display_name": "Majora320", "link": "https://stackoverflow.com/users/5802468/majora320"}, "reply_to_user": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 0, "creation_date": 1476413052, "post_id": 40033429, "comment_id": 67345081, "body": "@rampion I suppose you are correct, I&#39;ll edit a short section on that into the answer."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 2, "creation_date": 1476420332, "post_id": 40033429, "comment_id": 67346664, "body": "You need parens around the operator parameters. <code>myFunc # a b</code> does not parse. If it did, it would most likely (try to) define the operator <code>(#)</code>, not <code>myFunc</code> (for example, <code>a # b = ...</code> is a definition for <code>(#)</code>, not <code>a</code>). <code>myFunc (#) a b</code> will do what you are suggesting."}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 1, "creation_date": 1476421021, "post_id": 40033429, "comment_id": 67346894, "body": "Your operators <code>#</code> and <code>%</code> will always have the default fixity <code>infixl 9</code>. <code>f (*) (+) a b c = a * b + c</code> and <code>f (+) (*) a b c = a + b * c</code> are the same function. The second one left-associates as <code>(a + b) * c</code>."}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 2, "creation_date": 1476421208, "post_id": 40033429, "comment_id": 67346950, "body": "<code>`&#47;`</code> is a syntax error. It&#39;d be more correct to say that <code>(</code> and <code>)</code> make an operator into a function and a pair of <code>`</code>s makes a function into an operator."}], "tags": [], "owner": {"reputation": 1141, "user_id": 5802468, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/yqeEu.gif?s=128&g=1", "display_name": "Majora320", "link": "https://stackoverflow.com/users/5802468/majora320"}, "is_accepted": true, "score": 8, "last_activity_date": 1476420788, "last_edit_date": 1476420788, "creation_date": 1476407579, "answer_id": 40033429, "question_id": 40033307, "link": "https://stackoverflow.com/questions/40033307/operator-as-an-argument-in-haskell/40033429#40033429", "title": "Operator as an argument in Haskell", "body": "<p>You can do that with haskell function arguments.\nIn your function above, you want <code>myFunc</code> to take a function that takes two <code>Int</code>s and returns a <code>Bool</code> (<em>not</em> a <code>Boolean</code>, you must have typed that wrong). The declaration for that function would be <code>(Int -&gt; Int -&gt; Bool)</code>. Therefore, you can write:</p>\n\n<pre><code>myFunc :: (Int -&gt; Int -&gt; Bool) -&gt; Int -&gt; Int -&gt; Bool\nmyFunc op a b = a `op` b\n</code></pre>\n\n<p>This defines a higher-order function that takes a function with two <code>Int</code> parameters that returns a <code>Bool</code> (and two <code>Int</code>s). You can now use it like any other function parameter!</p>\n\n<p>Note that this is exactly the same as doing:</p>\n\n<pre><code>myFunc (#) a b = a # b\n</code></pre>\n\n<p>Or:</p>\n\n<pre><code>myFunc (%) a b = a % b\n</code></pre>\n\n<p>Because using infix operaters like <code>*</code> or <code>/</code>, or <em>any</em> operator composed only of special characters, without backticks is just shorthand for using them with (typing <code>`/`</code> every time you want to divide something would get annoying!).</p>\n"}, {"tags": [], "owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "is_accepted": false, "score": 7, "last_activity_date": 1476427717, "creation_date": 1476427717, "answer_id": 40036671, "question_id": 40033307, "link": "https://stackoverflow.com/questions/40033307/operator-as-an-argument-in-haskell/40036671#40036671", "title": "Operator as an argument in Haskell", "body": "<p>Under the hood, functions \"exist\" without names. Any function you define (or that is already defined in libraries), such as <code>myFunc</code> just <strong>is</strong> a function value, and the name just gives us a way to refer to it in other code that wants to use it. This is exactly the same as if you write <code>x = 3</code>: the value <code>3</code> \"exists\" independently of the name <code>x</code>, that name just gives us a way to refer to it.</p>\n\n<p>Why is this relevant to your question about passing operators?</p>\n\n<p>Well, as far as Haskell is concerned, operators like <code>&gt;</code> and <code>&lt;=</code> are <em>also</em> just nameless functions that happen to be bound to the names <code>&gt;</code> and <code>&lt;=</code>. The special treatment of them as operators (that you can write them infix between the arguments you're calling them on) is only about the <em>names</em>, and changes if you refer to them with different names.</p>\n\n<p>There are two types of names in Haskell. Alphanumeric names (consisting only of letters, numbers, and underscores), and symbolic names (consisting only of symbol characters). If you have an expression <code>{1} {2} {3}</code>, then if <code>{2}</code> is a symbolic name (and <code>{1}</code> and <code>{3}</code> <strong>aren't</strong> symbolic names; otherwise you have a syntax error), then the expression is interpreted as meaning \"call <code>{2}</code> on the arguments <code>{1}</code> and <code>{3}</code>\". But if none of them are symbolic names, then it's instead interpreted as \"call <code>{1}</code> on the arguments <code>{2}</code> and <code>{3}</code>\".<sup>1</sup></p>\n\n<p>But all of this happens only with reference to the <strong>name</strong>, not to the functions actually referred to by those names. So if you write your <code>myFunc</code> like so:</p>\n\n<pre><code>myFunc operator a b = operator a b\n</code></pre>\n\n<p>Then it doesn't actually matter whether <code>myFunc</code> was called like <code>myFunc (+) 1 2</code> or like <code>myFunc plus 1 2</code>; inside the definition of <code>myFunc</code> the \"operator\" is referred to by the name <code>operator</code>, which is an alphanumeric name. So you put it first when you want to call it, with its arguments following.</p>\n\n<p>Alternatively <strong>you could use a symbolic name</strong> inside <code>myFunc</code>, like so:</p>\n\n<pre><code>myFunc ($&amp;^*) a b = a $&amp;^* b\n</code></pre>\n\n<p>Again, this also works even when <code>myFunc</code> was called with a non-operator function like <code>myFunc plus 1 2</code>.</p>\n\n<p>And of course, there are ways to convert either kind of name to work like the other; you can put an alphanumeric name in backticks to use it infix like an operator:</p>\n\n<pre><code>myFunc operator a b = a `operator` b\n</code></pre>\n\n<p>And you can put a symbolic name in parentheses to simply use it as reference to the function it's bound to (and this is in fact the only way to use an operator without providing arguments for it):</p>\n\n<pre><code>myFunc ($^&amp;*) a b = ($&amp;^*) a b\n</code></pre>\n\n<p>So basically, the only special thing you needed to know to pass an operator to your function is what you already knew: put the operator in parentheses when you call the function. Inside the definition of the function, you can write it exactly the same as any other function; the style of name you choose <strong>in that function definition</strong> will determine whether you call it like an operator or like an ordinary function. You don't need to know (and in fact <em>cannot</em> find out) whether it was an operator \"outside\" the function.</p>\n\n<hr>\n\n<p><sup>1</sup> Of course, when you have more complex expressions involving more than 3 things and multiple operators, then the rules of precedence and associativity come into play to determine exactly what's going on.</p>\n"}], "owner": {"reputation": 419, "user_id": 5461035, "user_type": "registered", "accept_rate": 78, "profile_image": "https://graph.facebook.com/759957520817224/picture?type=large", "display_name": "Vitali  Kuzmin", "link": "https://stackoverflow.com/users/5461035/vitali-kuzmin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3244, "favorite_count": 0, "accepted_answer_id": 40033429, "answer_count": 2, "score": 5, "last_activity_date": 1476427717, "creation_date": 1476406627, "question_id": 40033307, "link": "https://stackoverflow.com/questions/40033307/operator-as-an-argument-in-haskell", "title": "Operator as an argument in Haskell", "body": "<p>I'm quite new to Haskell, may be it's a stupid question.\nWhat I want is to give to my function as an argument any operator.\nFor example:</p>\n\n<pre><code>myFunc :: a -&gt; Int -&gt; Int -&gt; Boolean\nmyFunc operator a b = a operator b\n\n*Project&gt; myFunc (&gt;) 5 2\nTrue\n*Project&gt; myFunc (&lt;=) 5 2\nFalse\n</code></pre>\n\n<p>Help me in advice how to do that please!</p>\n"}, {"tags": ["list", "haskell", "split"], "comments": [{"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "edited": false, "score": 2, "creation_date": 1476391500, "post_id": 40030460, "comment_id": 67338464, "body": "<code>breakLastSpace str = (reverse (drop 1 y), reverse x) where (x, y) = break (== &#39; &#39;) $ reverse str</code> is a relatively na&#239;ve implementation."}, {"owner": {"reputation": 137, "user_id": 5771177, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f66c6628f434a7998195c89f2af5427b?s=128&d=identicon&r=PG&f=1", "display_name": "suffi", "link": "https://stackoverflow.com/users/5771177/suffi"}, "edited": false, "score": 0, "creation_date": 1476394875, "post_id": 40030460, "comment_id": 67340198, "body": "note also, that you can split your string on spaces by the <code>words</code> function"}, {"owner": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 0, "creation_date": 1476405986, "post_id": 40030460, "comment_id": 67343515, "body": "Note, for what it&#39;s worth, that <code>text</code> has <code>breakOnEnd :: Text -&gt; Text -&gt; (Text, Text)</code> so that <code>T.breakOnEnd &quot; &quot;  &quot;a b c d e&quot; </code> gives the desired result <code>(&quot;a b c d &quot;,&quot;e&quot;)</code>."}], "answers": [{"comments": [{"owner": {"reputation": 28488, "user_id": 402884, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/35583fe46c2cde92467710cc7ceff266?s=128&d=identicon&r=PG", "display_name": "Chris Martin", "link": "https://stackoverflow.com/users/402884/chris-martin"}, "edited": false, "score": 0, "creation_date": 1476394822, "post_id": 40030712, "comment_id": 67340183, "body": "Might as well make it <code>a -&gt; [a] -&gt; ([a], [a])</code>, no?"}, {"owner": {"reputation": 137, "user_id": 5771177, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f66c6628f434a7998195c89f2af5427b?s=128&d=identicon&r=PG&f=1", "display_name": "suffi", "link": "https://stackoverflow.com/users/5771177/suffi"}, "reply_to_user": {"reputation": 28488, "user_id": 402884, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/35583fe46c2cde92467710cc7ceff266?s=128&d=identicon&r=PG", "display_name": "Chris Martin", "link": "https://stackoverflow.com/users/402884/chris-martin"}, "edited": false, "score": 0, "creation_date": 1476395020, "post_id": 40030712, "comment_id": 67340264, "body": "@chris martin Sure, do as you like, I just wanted to make clear how to use that function in this context by providing that typesignature."}], "tags": [], "owner": {"reputation": 137, "user_id": 5771177, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f66c6628f434a7998195c89f2af5427b?s=128&d=identicon&r=PG&f=1", "display_name": "suffi", "link": "https://stackoverflow.com/users/5771177/suffi"}, "is_accepted": false, "score": 2, "last_activity_date": 1476392719, "last_edit_date": 1476392719, "creation_date": 1476391754, "answer_id": 40030712, "question_id": 40030460, "link": "https://stackoverflow.com/questions/40030460/haskell-split-string-on-last-occurence/40030712#40030712", "title": "Haskell split string on last occurence", "body": "<p>Its not beautiful, but it works: </p>\n\n<pre><code>import Data.List\nf :: Char -&gt; String -&gt; (String, String)\nf char str = let n = findIndex (==char) (reverse str) in\n                case n of\n                  Nothing -&gt; (str, [])\n                  Just n  -&gt; splitAt (length str - n -1) str\n</code></pre>\n\n<p>I mean <code>f 'e' \"a b c d e\" = (\"a b c d \", \"e\")</code>, but I myself wouldn't crop that trailing space.</p>\n"}, {"tags": [], "owner": {"reputation": 1825, "user_id": 2671214, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/v464b.jpg?s=128&g=1", "display_name": "Tomasz Lewowski", "link": "https://stackoverflow.com/users/2671214/tomasz-lewowski"}, "is_accepted": false, "score": 1, "last_activity_date": 1476393927, "last_edit_date": 1476393927, "creation_date": 1476392188, "answer_id": 40030838, "question_id": 40030460, "link": "https://stackoverflow.com/questions/40030460/haskell-split-string-on-last-occurence/40030838#40030838", "title": "Haskell split string on last occurence", "body": "<p>I can propose the following solution:</p>\n\n<pre><code>splitLast list elem = (reverse $ snd reversedSplit, reverse $ fst reversedSplit)\n  where \n  reversedSplit = span (/= elem) $ reverse list\n</code></pre>\n\n<p>probably not the fastest one (two needless reverses) but I like it's simplicity.</p>\n\n<p>If you insist on removing the space we're splitting on, you can go for:</p>\n\n<pre><code>import qualified Data.List as List\nsplitLast list elem = splitAt (last $ List.elemIndices elem list) list\n</code></pre>\n\n<p>however, this version assumes that there will be at least one element matching the pattern. If you don't like this assumption, the code gets slightly longer (but no double-reversals here):</p>\n\n<pre><code>import qualified Data.List as List\nsplitLast list elem = splitAt index list where\n    index = if null indices then 0 else last indices\n    indices = List.elemIndices elem list\n</code></pre>\n\n<p>Of course, choice of splitting at the beginning is arbitrary and probably splitting at the end would be more intuitive for you - then you can simply replace <code>0</code> with <code>length list</code></p>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 2, "last_activity_date": 1476397817, "last_edit_date": 1476397817, "creation_date": 1476397196, "answer_id": 40031972, "question_id": 40030460, "link": "https://stackoverflow.com/questions/40030460/haskell-split-string-on-last-occurence/40031972#40031972", "title": "Haskell split string on last occurence", "body": "<p>I would go with more pattern matching.</p>\n\n<pre><code>import Data.List\n\nsplitLast = contract . words\n    where contract [] = (\"\", \"\")\n          contract [x] = (x, \"\")\n          contract [x,y] = (x, y)\n          contract (x:y:rest) = contract $ intercalate \" \" [x,y] : rest  \n</code></pre>\n\n<p>For long lists, we just join the first two strings with a space and try the shorter list again. Once the length is reduced to 2, we just return the pair of strings.</p>\n\n<p><code>(x, \"\")</code> seemed like a reasonable choice for strings with no whitespace, but I suppose you could return <code>(\"\", x)</code> instead.</p>\n\n<p>It's not clear that <code>(\"\", \"\")</code> is the best choice for empty strings, but it seems like a reasonable alternative to raising an error or changing the return type to something like <code>Maybe (String, String)</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 5, "creation_date": 1476398952, "post_id": 40032178, "comment_id": 67341679, "body": "I&#39;m not sure the point-free versions are even worth mentioning."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1476399089, "post_id": 40032178, "comment_id": 67341706, "body": "It should be mentioned that <code>Data.List.Split</code> is provided by the <code>split</code> package."}, {"owner": {"reputation": 13362, "user_id": 260584, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63f9744d1d903eef5f9954fa31d25a26?s=128&d=identicon&r=PG", "display_name": "erisco", "link": "https://stackoverflow.com/users/260584/erisco"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1476399226, "post_id": 40032178, "comment_id": 67341760, "body": "I like finding point-free versions, and I like them, so I give them :)"}], "tags": [], "owner": {"reputation": 13362, "user_id": 260584, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63f9744d1d903eef5f9954fa31d25a26?s=128&d=identicon&r=PG", "display_name": "erisco", "link": "https://stackoverflow.com/users/260584/erisco"}, "is_accepted": false, "score": 1, "last_activity_date": 1476399175, "last_edit_date": 1476399175, "creation_date": 1476398323, "answer_id": 40032178, "question_id": 40030460, "link": "https://stackoverflow.com/questions/40030460/haskell-split-string-on-last-occurence/40032178#40032178", "title": "Haskell split string on last occurence", "body": "<p>My idea is to split at every occurrence and then separate the initial parts from the last part.</p>\n\n<p>Pointed:</p>\n\n<pre><code>import Control.Arrow   -- (&amp;&amp;&amp;)\nimport Data.List       -- intercalate\nimport Data.List.Split -- splitOn\nbreakOnLast :: Eq a =&gt; a -&gt; [a] -&gt; ([a], [a])\nbreakOnLast x = (intercalate x . init &amp;&amp;&amp; last) . splitOn x\n</code></pre>\n\n<p>Point-free:</p>\n\n<pre><code>liftA2 (.) ((&amp;&amp;&amp; last) . (. init) . intercalate) splitOn\n\n(.) &lt;$&gt; ((&amp;&amp;&amp;) &lt;$&gt; ((.) &lt;$&gt; pure init &lt;*&gt; intercalate) &lt;*&gt; pure last) &lt;*&gt; splitOn\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1476406650, "post_id": 40032635, "comment_id": 67343666, "body": "This is perhaps the simplest I&#39;ve seen so far, but it actually performs two passes, one deconstructing the input and another constructing the output. It&#39;s therefore stricter than necessary, and slower for very long lists. You can fix this, but avoiding the risk of memory leaks could be a bit tricky."}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1476410546, "post_id": 40032635, "comment_id": 67344574, "body": "@dfeuer Thank you for the correction. I always forget the structure has to be built back up. The alternative you mention would be a left fold?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1476414434, "post_id": 40032635, "comment_id": 67345371, "body": "Hrmmm... What I was thinking won&#39;t work. I think the only lazy way is to accumulate a chunk and wait to see if it should be attached to the end."}], "tags": [], "owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "is_accepted": true, "score": 5, "last_activity_date": 1476407819, "last_edit_date": 1476407819, "creation_date": 1476401222, "answer_id": 40032635, "question_id": 40030460, "link": "https://stackoverflow.com/questions/40030460/haskell-split-string-on-last-occurence/40032635#40032635", "title": "Haskell split string on last occurence", "body": "<p>I'm not sure why the solutions suggested are so complicated. Only <strong><s>one</s> two  traversals</strong> are needed:</p>\n\n<pre><code>splitLast :: Eq a =&gt; a -&gt; [a] -&gt; Either [a] ([a],[a])\nsplitLast c' = foldr go (Left [])\n    where\n        go c (Right (f,b)) = Right (c:f,b)\n        go c (Left s) | c' == c = Right ([],s)\n                      | otherwise = Left (c:s)\n</code></pre>\n\n<p>Note this is <strong>total</strong> and clearly signifies its failure. When a split is not possible (because the character specified wasn't in the string) it returns a <code>Left</code> with the original list. Otherwise, it returns a <code>Right</code> with the two components.</p>\n\n<pre><code>ghci&gt; splitLast ' ' \"hello beautiful world\"\nRight (\"hello beautiful\",\"world\")\nghci&gt; splitLast ' ' \"nospaceshere!\"\nLeft \"nospaceshere!\"\n</code></pre>\n"}], "owner": {"reputation": 193, "user_id": 4392714, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/9d145af011ef0de49a0ec9e2ed2ef322?s=128&d=identicon&r=PG&f=1", "display_name": "rainmaker", "link": "https://stackoverflow.com/users/4392714/rainmaker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1128, "favorite_count": 1, "accepted_answer_id": 40032635, "answer_count": 5, "score": 3, "last_activity_date": 1476407819, "creation_date": 1476390794, "question_id": 40030460, "link": "https://stackoverflow.com/questions/40030460/haskell-split-string-on-last-occurence", "title": "Haskell split string on last occurence", "body": "<p>Is there any way I can split String in Haskell on the last occurrence of given character into 2 lists?\nFor example I want to split list \"a b c d e\" on space into (\"a b c d\", \"e\").\nThank you for answers.</p>\n"}, {"tags": ["haskell", "haskell-stack"], "answers": [{"comments": [{"owner": {"reputation": 113, "user_id": 532828, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/83dd7c2c2066f1896ec8b4345164a2ee?s=128&d=identicon&r=PG", "display_name": "Myrn", "link": "https://stackoverflow.com/users/532828/myrn"}, "edited": false, "score": 0, "creation_date": 1476462624, "post_id": 40031999, "comment_id": 67371927, "body": "Well, that is the same conclusion I came to. I guess I&#39;ll open an issue on stack."}, {"owner": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "reply_to_user": {"reputation": 113, "user_id": 532828, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/83dd7c2c2066f1896ec8b4345164a2ee?s=128&d=identicon&r=PG", "display_name": "Myrn", "link": "https://stackoverflow.com/users/532828/myrn"}, "edited": false, "score": 0, "creation_date": 1476482659, "post_id": 40031999, "comment_id": 67381344, "body": "<a href=\"https://github.com/epsilonhalbe/stack-tests--tests-only-example\" rel=\"nofollow noreferrer\">here on github</a> is the source code for the example I have tested."}], "tags": [], "owner": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "is_accepted": true, "score": 4, "last_activity_date": 1476481782, "last_edit_date": 1476481782, "creation_date": 1476397312, "answer_id": 40031999, "question_id": 40028933, "link": "https://stackoverflow.com/questions/40028933/can-i-use-haskells-stack-to-compile-and-run-only-the-tests/40031999#40031999", "title": "Can I use Haskell&#39;s stack to compile and run _only_ the tests?", "body": "<p>I have made some experiments using <code>stack build &lt;pkgname&gt;:test:&lt;testsuite&gt;</code> and found nothing really pleasing when you have all your app/src/main in one <strike>directory</strike> cabal-project.</p>\n\n<p>Now I did not investigate if this is an issue due to stack using <code>Cabal</code> as a library or whether this is a stack issue.</p>\n\n<p>here are a few issues that might be related</p>\n\n<ul>\n<li><a href=\"https://github.com/commercialhaskell/stack/issues/1940\" rel=\"nofollow\">Turning on test coverage rebuilds all packages #1940</a></li>\n<li><a href=\"https://github.com/commercialhaskell/stack/issues/1845\" rel=\"nofollow\">stack ghci foo:test:bar uses library dependencies unless --test is passed #1845</a></li>\n<li><a href=\"https://github.com/commercialhaskell/stack/issues/1659\" rel=\"nofollow\">Allow stack test to skip certain test suites #1659</a></li>\n<li><a href=\"https://github.com/commercialhaskell/stack/issues/2519\" rel=\"nofollow\">How to specify a subset of tests to run? #2519</a></li>\n<li><a href=\"https://github.com/commercialhaskell/stack/issues/1961\" rel=\"nofollow\">\"stack test \" does not run tests? #1961</a></li>\n</ul>\n\n<p>But I guess you'd have to file a bug if noone provides a better answer.</p>\n\n<hr>\n\n<p>A possible but quite ugly solution (in my opinion) is to split test-suite, app and library into separate cabal projects - here is the example folder structure I used for testing.</p>\n\n<pre><code>myproject\n\u251c\u2500\u2500 stackapp            \n\u2502\u00a0\u00a0 \u251c\u2500\u2500 app             \n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 Main.hs     \n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ChangeLog.md    \n\u2502\u00a0\u00a0 \u251c\u2500\u2500 LICENSE         \n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Setup.hs        \n\u2502\u00a0\u00a0 \u2514\u2500\u2500 stackapp.cabal  \n\u251c\u2500\u2500 stacksrc            \n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ChangeLog.md    \n\u2502\u00a0\u00a0 \u251c\u2500\u2500 LICENSE         \n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Setup.hs        \n\u2502\u00a0\u00a0 \u251c\u2500\u2500 src             \n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 Lib.hs      \n\u2502\u00a0\u00a0 \u2514\u2500\u2500 stacksrc.cabal  \n\u251c\u2500\u2500 stacktest           \n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ChangeLog.md    \n\u2502\u00a0\u00a0 \u251c\u2500\u2500 LICENSE         \n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Setup.hs        \n\u2502\u00a0\u00a0 \u251c\u2500\u2500 src             \n\u2502\u00a0\u00a0 \u251c\u2500\u2500 stacktest.cabal \n\u2502\u00a0\u00a0 \u2514\u2500\u2500 tst             \n\u2502\u00a0\u00a0     \u2514\u2500\u2500 Spec.hs     \n\u2514\u2500\u2500 stack.yaml  \n</code></pre>\n\n<blockquote>\n  <h2>stack.yaml</h2>\n\n<pre><code>resolver: lts-7.3\n\npackages:\n- './stacksrc'\n- './stacktest'\n- './stackapp'\nextra-deps: []\nflags: {}\nextra-package-dbs: []\n</code></pre>\n</blockquote>\n\n<p>Note that you need to include a \"dummy\" library section in order to make it compile, cabal is picky about cabal files that have neither lib nor exe part.</p>\n\n<blockquote>\n  <h2>stacktest.cabal</h2>\n\n<pre><code>...\nlibrary\n  -- dummy\n  build-depends:       base &gt;=4.9 &amp;&amp; &lt;4.10\n  hs-source-dirs:      src\n  default-language:    Haskell2010\n\ntest-suite tests\n  type:          exitcode-stdio-1.0\n  main-is:       Spec.hs\n  hs-source-dirs: tst\n  build-depends: base\n               , stacksrc\n               , hspec\n               , hspec-expectations-pretty-diff\n\n  default-language: Haskell2010\n</code></pre>\n</blockquote>\n\n<p>Then you can modify tests and run <code>stack stacktests:test:tests</code> without rebuilding the lib and/or the app part, but stack is intelligent enough designed to rebuild the lib part if you change it before you run the tests.</p>\n\n<h2>UPDATE</h2>\n\n<p>For future reference here is a link to the opened ticket:</p>\n\n<h2><a href=\"https://github.com/commercialhaskell/stack/issues/2710\" rel=\"nofollow\">To use stack to compile and run <em>only</em> the tests #2710</a></h2>\n"}], "owner": {"reputation": 113, "user_id": 532828, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/83dd7c2c2066f1896ec8b4345164a2ee?s=128&d=identicon&r=PG", "display_name": "Myrn", "link": "https://stackoverflow.com/users/532828/myrn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 594, "favorite_count": 2, "accepted_answer_id": 40031999, "answer_count": 1, "score": 8, "last_activity_date": 1476481782, "creation_date": 1476385282, "question_id": 40028933, "link": "https://stackoverflow.com/questions/40028933/can-i-use-haskells-stack-to-compile-and-run-only-the-tests", "title": "Can I use Haskell&#39;s stack to compile and run _only_ the tests?", "body": "<p>When I run a <code>stack test</code> or a <code>stack test &lt;package&gt;:&lt;test-suite&gt;</code> then the output looks something like:</p>\n\n<pre><code>package: configure (lib + exe + test)\npackage: build (lib + exe + test)\npackage: copy/register\npackage: test (suite: tests)\n</code></pre>\n\n<p>And it ends up basically compiling all my changes twice: once for the exe or lib and a second time for the test.</p>\n\n<p>What I would like is a command like <code>stack test --test-only</code> that would produce something like:</p>\n\n<pre><code>package: configure (test)\npackage: build (test)\npackage: copy/register\npackage: test (suite: tests)\n</code></pre>\n\n<p>I have already looked through the available command line flags and stack documentation. I have also attempted a google search to see if anyone has talked about something similar.</p>\n\n<p>So my questions are:<br>\n1. What is the best currently available way to compile and run <em>only</em> the tests? My best guess on this one is to try putting the tests in a separate cabal package.<br>\n2. Is there some reason why stack doesn't or couldn't do this?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 5, "creation_date": 1476373140, "post_id": 40025319, "comment_id": 67327977, "body": "The <code>f</code> in <code>fmap</code> doesn&#39;t mean <code>flat</code>. The equivalent of <code>flatMap</code> in Haskell is <code>(&gt;&gt;=)</code>. The <code>map</code> function for lists was defined first so another name was needed for the more general <code>fmap</code> function."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 3, "creation_date": 1476373332, "post_id": 40025319, "comment_id": 67328120, "body": "Rather, <code>fmap</code> is the generalization of <code>map</code> to other functors besides the list functor. Whoever told you that <code>fmap</code> was short for <code>flat map</code> was mistaken."}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 4, "creation_date": 1476373384, "post_id": 40025319, "comment_id": 67328156, "body": "Are you sure that the lecture you allude to was referring to <code>fmap</code> when saying &quot;flat map&quot;? It&#39;d make more sense if it had been referring to <code>concatMap</code> (aka <code>&gt;&gt;=</code>), which is often called <code>flatMap</code> in other languages and behaves in the way you expected."}, {"owner": {"reputation": 1293, "user_id": 1086638, "user_type": "registered", "accept_rate": 12, "profile_image": "https://www.gravatar.com/avatar/45196398e9685000d195ec626d477f0e?s=128&d=identicon&r=PG", "display_name": "trans", "link": "https://stackoverflow.com/users/1086638/trans"}, "edited": false, "score": 0, "creation_date": 1476373717, "post_id": 40025319, "comment_id": 67328401, "body": "Sigh, I am so confused. I thought that&#39;s what they meant when they said &quot;flat map&quot;. I&#39;ve heard them talk about &quot;flat map&quot; being the basis of what a Monad is, and I thought they were talking about fmap. I never once heard that &gt;&gt;= was flatMap. Can any one show me an example of using <code>&gt;&gt;=</code> as a &quot;flat map&quot;?"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1476373821, "post_id": 40025319, "comment_id": 67328454, "body": "@trans <code>[1,2,3] &gt;&gt;= \\x -&gt; [x,x]</code>"}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 0, "creation_date": 1476373860, "post_id": 40025319, "comment_id": 67328482, "body": "If they said it&#39;s the basis for monads, they were definitely talking about <code>&gt;&gt;=</code>, which is part of the Monad typeclass. <code>fmap</code> is the basis for functors."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1476373878, "post_id": 40025319, "comment_id": 67328493, "body": "<code>[[1],[2]] &gt;&gt;= map (+1)</code> ~&gt; <code>[2,3]</code>"}, {"owner": {"reputation": 1293, "user_id": 1086638, "user_type": "registered", "accept_rate": 12, "profile_image": "https://www.gravatar.com/avatar/45196398e9685000d195ec626d477f0e?s=128&d=identicon&r=PG", "display_name": "trans", "link": "https://stackoverflow.com/users/1086638/trans"}, "edited": false, "score": 0, "creation_date": 1476373985, "post_id": 40025319, "comment_id": 67328555, "body": "Okay that is starting to clear some thing up! But why do we need the <code>map</code> in the example <code>[[1],[2]] &gt;&gt;= map (+1)</code> if <code>&gt;&gt;=</code> is already flatMap?"}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 0, "creation_date": 1476374138, "post_id": 40025319, "comment_id": 67328654, "body": "@trans It&#39;s calling flatMap (<code>&gt;&gt;=</code>) on the outer list and <code>map</code> on each inner list. Like it&#39;s calling <code>map (+1) [1]</code> and <code>map (+1) [2]</code> and then flattening the results into one list."}, {"owner": {"reputation": 1293, "user_id": 1086638, "user_type": "registered", "accept_rate": 12, "profile_image": "https://www.gravatar.com/avatar/45196398e9685000d195ec626d477f0e?s=128&d=identicon&r=PG", "display_name": "trans", "link": "https://stackoverflow.com/users/1086638/trans"}, "edited": false, "score": 0, "creation_date": 1476374677, "post_id": 40025319, "comment_id": 67329017, "body": "Why does <code>[[1,2],[3,4]] &gt;&gt;= \\x -&gt; x</code> produces <code>[1,2,3,4]</code> but <code>[[1,2],[3,4]] &gt;&gt;= \\x -&gt; [x]</code> produces <code>[[1,2],[3,4]]</code>. Why isn&#39;t the later <code>[[1],[2],[3],[4]]</code>?"}, {"owner": {"reputation": 1293, "user_id": 1086638, "user_type": "registered", "accept_rate": 12, "profile_image": "https://www.gravatar.com/avatar/45196398e9685000d195ec626d477f0e?s=128&d=identicon&r=PG", "display_name": "trans", "link": "https://stackoverflow.com/users/1086638/trans"}, "reply_to_user": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 0, "creation_date": 1476375041, "post_id": 40025319, "comment_id": 67329300, "body": "@sepp2k if I take out the inner list, e.g. <code>[1,2,3,4] &gt;&gt;= (negate)</code> I don&#39;t get a result, just <code>:: Num [b] =&gt; [b]</code>, why is that? How to get a list?"}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 0, "creation_date": 1476375301, "post_id": 40025319, "comment_id": 67329475, "body": "@trans &quot;Why isn&#39;t the later <code>[[1],[2],[3],[4]]</code>&quot; because <code>x</code> is the sublist, so if you were mapping instead of flat mapping <code>map (\\x -&gt; x) [[1,2], [3,4]]</code> would be [[1,2],[3,4]]. If you flatten that you get [1,2,3,4]. If you do <code>map (\\x -&gt; [x]) [[1,2], [3,4]]</code> you get <code>[[1,2]], [3,4]]</code>, i.e. you just add another layer of lists around each sublist. And if you flatten that (by one layer), you get <code>[[1,2], [3,4]]</code>. Another way to think of it is that you&#39;re inserting ++ between the functions results. So you get <code>[[1,2]] ++ [[3,4]]</code>, which is <code>[[1,2], [3,4]]</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1476375372, "post_id": 40025319, "comment_id": 67329515, "body": "The flattening is performed last, not first. In <code>[[1,2],[3,4]] &gt;&gt;= \\x -&gt; [x]</code> we take every element of the list and bind it to <code>x</code> (hence <code>x=[1,2]</code> and <code>x=[3,4]</code>), then we apply the function <code>\\x-&gt;[x]</code> to each <code>x</code>, obtaining the result list <code>[ [[1,2]], [[3,4]] ]</code>. Finally, we flatten the last list to the result: <code>[[1,2],[3,4]]</code>."}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 0, "creation_date": 1476375423, "post_id": 40025319, "comment_id": 67329550, "body": "@trans <code>&gt;&gt;=</code> needs the function to produce a list (or generally a value of the same monad). <code>negate</code> produces a number, not a list. So Haskell tries to make this work by saying it only works with the types of numbers that are also lists, but since no such type exists (though you could define it), that&#39;s pretty useless."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1476375548, "post_id": 40025319, "comment_id": 67329629, "body": "Perhaps it helps thinking of <code>&gt;&gt;=</code> as <code>\\x f -&gt; join (fmap f x)</code>, where the <code>join</code> is the flattening -- for lists we have <code>join :: [[a]]-&gt;[a]</code>. Hence the name flatMap in some languages: use map/fmap, and then flatten/join."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1476375621, "post_id": 40025319, "comment_id": 67329672, "body": "This comment thread is getting a bit out of hand. Perhaps someone could summarize the main points in a community wiki answer?"}, {"owner": {"reputation": 1293, "user_id": 1086638, "user_type": "registered", "accept_rate": 12, "profile_image": "https://www.gravatar.com/avatar/45196398e9685000d195ec626d477f0e?s=128&d=identicon&r=PG", "display_name": "trans", "link": "https://stackoverflow.com/users/1086638/trans"}, "edited": false, "score": 0, "creation_date": 1476376260, "post_id": 40025319, "comment_id": 67330091, "body": "Okay, I get it now. Yeah a summary would be good. This really clears things up for me. One important one that I bet most Haskellers(?) don&#39;t even think to mention is that the flattening is only <i>one</i> level deep. I had thought it was all levels. When it comers to Haskell there seems to be a huge difference between actually using the language and listening to lectures about it. :-)"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1476387961, "post_id": 40025319, "comment_id": 67336508, "body": "This question has four close votes. At this stage, it seems unnecessary to close it just because it came out of a misunderstanding. I have just edited the title so that it doesn&#39;t state that misunderstanding, thus making things clearer for the posterity."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1476472773, "post_id": 40025319, "comment_id": 67377200, "body": "I still believe there is no point in closing this question. Reopen vote cast."}], "answers": [{"comments": [{"owner": {"reputation": 1293, "user_id": 1086638, "user_type": "registered", "accept_rate": 12, "profile_image": "https://www.gravatar.com/avatar/45196398e9685000d195ec626d477f0e?s=128&d=identicon&r=PG", "display_name": "trans", "link": "https://stackoverflow.com/users/1086638/trans"}, "edited": false, "score": 0, "creation_date": 1476377346, "post_id": 40026523, "comment_id": 67330718, "body": "It&#39;s not just numbers though, even a list when there are different depths, <code>[[[1,2]],[3],[4]] &gt;&gt;= \\x -&gt; x</code> only produces <code>:: (Num [t], Num t) =&gt; [[t]]</code>, not <code>[[1,2],3,4]</code>."}, {"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "reply_to_user": {"reputation": 1293, "user_id": 1086638, "user_type": "registered", "accept_rate": 12, "profile_image": "https://www.gravatar.com/avatar/45196398e9685000d195ec626d477f0e?s=128&d=identicon&r=PG", "display_name": "trans", "link": "https://stackoverflow.com/users/1086638/trans"}, "edited": false, "score": 0, "creation_date": 1476378101, "post_id": 40026523, "comment_id": 67331152, "body": "@trans Note that <code>[[[1,2]],[3],[4]]</code> is not a valid Haskell value. It does not have a type\u2014it is neither <code>Num t =&gt; [[t]]</code> nor <code>Num t =&gt; [[[t]]]</code> because the depth is not consistent."}, {"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "reply_to_user": {"reputation": 1293, "user_id": 1086638, "user_type": "registered", "accept_rate": 12, "profile_image": "https://www.gravatar.com/avatar/45196398e9685000d195ec626d477f0e?s=128&d=identicon&r=PG", "display_name": "trans", "link": "https://stackoverflow.com/users/1086638/trans"}, "edited": false, "score": 0, "creation_date": 1476378157, "post_id": 40026523, "comment_id": 67331181, "body": "The reason you get that type is because of the way <code>Num</code> works, so it infers a type of <code>Num t =&gt; [[t]]</code> where it expects <code>[1, 2]</code> to have a <code>Num</code> instance. Of course, it does not. Try with non-numbers to get clearer results."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1476381386, "post_id": 40026523, "comment_id": 67332900, "body": "&quot;Writing such a function isn&#39;t really possible in Haskell without some complicated typeclass trickery&quot; - I disagree. <code>data Nested f a = Flat a | Nested (f (Nested f a)) deriving Foldable</code> is a pretty simple type for arbitrarily nested <code>Foldable</code>s"}, {"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 1, "creation_date": 1476382379, "post_id": 40026523, "comment_id": 67333419, "body": "@BenjaminHodgson I meant using only the built-in <code>[]</code> type. It\u2019s obviously pretty easy if you use your own wrapper."}, {"owner": {"user_type": "does_not_exist", "display_name": "user824425"}, "edited": false, "score": 0, "creation_date": 1476526524, "post_id": 40026523, "comment_id": 67390212, "body": "It is incorrect to assert that <code>map</code> was initially defined for lists in Haskell. <a href=\"/questions/18761302/why-were-haskell-98s-standard-classes-made-inferior-to-haskell-1-3s\">Haskell 1.3 had it right</a>."}, {"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "edited": false, "score": 0, "creation_date": 1476554378, "post_id": 40026523, "comment_id": 67398736, "body": "@Rhymoid Feel free to edit the answer (it\u2019s community wiki for a reason)."}], "tags": [], "owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "is_accepted": false, "score": 36, "last_activity_date": 1476376571, "creation_date": 1476376571, "answer_id": 40026523, "question_id": 40025319, "link": "https://stackoverflow.com/questions/40025319/fmap-and-flat-map-in-haskell/40026523#40026523", "title": "fmap and &quot;flat map&quot; in Haskell", "body": "<blockquote>\n  <p>And if so, why did <code>f</code> in <code>fmap</code> come to mean \u201cflat\u201d, why not \u201cfunctor map\u201d?</p>\n</blockquote>\n\n<p>Your intuition is right: the <code>f</code> in <code>fmap</code> <strong>does</strong> stand for \u201cfunctor map\u201d, not \u201cflat map\u201d at all. In fact, in newer, similar languages, such as PureScript, the name is just <code>map</code>. The Haskell <code>map</code> was defined first for lists, though, so coming up with a new name was difficult. Using the F from Functor was an easy, if not particularly creative, choice.</p>\n\n<p>It is more likely that the lecturer was referring to the monadic bind function, <code>&gt;&gt;=</code>. Due to <code>x &gt;&gt;= f</code>\u2019s equivalence to <code>join (fmap f x)</code>, bind is also sometimes called <code>flatMap</code> in other languages. It has the behavior you expect on lists, for example:</p>\n\n<pre><code>&gt; [1,2,3] &gt;&gt;= \\x -&gt; [x,x]\n[1,1,2,2,3,3]\n</code></pre>\n\n<p>It\u2019s important to keep in mind, though, that this \u201cflat map\u201d does not recursively flatten to an arbitrary depth. In fact, writing such a function isn\u2019t really possible in Haskell without some complicated typeclass trickery. Try it yourself: what would the type signature for a <code>flatten</code> function look like, even one that operates directly on lists?</p>\n\n<pre><code>flatten :: ??? -&gt; [a]\n</code></pre>\n\n<p>The <code>&gt;&gt;=</code> function is very simple in comparison: it is like <code>fmap</code>, but every output element must be wrapped in the functor, and <code>&gt;&gt;=</code> shallowly \u201cflattens\u201d the results into a single wrapper. This operation is the essence of what a monad is, which is why the <code>&gt;&gt;=</code> function lives in the <code>Monad</code> typeclass, but <code>fmap</code> is in <code>Functor</code>.</p>\n\n<p><sub>This answer is taken from some of the comments on the original question, so I have marked it community wiki. Edits and improvements are welcome.</sub></p>\n"}, {"tags": [], "owner": {"reputation": 1955, "user_id": 160466, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a63cd97a85054261d3521719ec6205db?s=128&d=identicon&r=PG", "display_name": "dividebyzero", "link": "https://stackoverflow.com/users/160466/dividebyzero"}, "is_accepted": false, "score": 9, "last_activity_date": 1490820635, "creation_date": 1490820635, "answer_id": 43103906, "question_id": 40025319, "link": "https://stackoverflow.com/questions/40025319/fmap-and-flat-map-in-haskell/43103906#43103906", "title": "fmap and &quot;flat map&quot; in Haskell", "body": "<p>Here are some explicit equivalent examples of how to do <code>flatMap</code> in Haskell.</p>\n\n<pre><code>Prelude&gt; map (replicate 3) [1..4]\n[[1,1,1],[2,2,2],[3,3,3],[4,4,4]]\nPrelude&gt; fmap (replicate 3) [1..4]\n[[1,1,1],[2,2,2],[3,3,3],[4,4,4]]\nPrelude&gt; concat [[1,2],[3,4]]\n[1,2,3,4]\nPrelude&gt; concat (map (replicate 3) [1..4])\n[1,1,1,2,2,2,3,3,3,4,4,4]\nPrelude&gt; concat $ map (replicate 3) [1..4]\n[1,1,1,2,2,2,3,3,3,4,4,4]\nPrelude&gt; concatMap (replicate 3) [1..4]\n[1,1,1,2,2,2,3,3,3,4,4,4]\nPrelude&gt; replicate 3 `concatMap` [1..4]\n[1,1,1,2,2,2,3,3,3,4,4,4]\nPrelude&gt; [1..4] &gt;&gt;= replicate 3\n[1,1,1,2,2,2,3,3,3,4,4,4]\n</code></pre>\n\n<p>It should be clear that <code>flatMap</code> is map first and then flat, you flatten the output of the map, as opposed to flattening the input list you are about to process (this isn't <code>flatMap</code>, this has no name, it is just a flat and then map).</p>\n"}], "owner": {"reputation": 1293, "user_id": 1086638, "user_type": "registered", "accept_rate": 12, "profile_image": "https://www.gravatar.com/avatar/45196398e9685000d195ec626d477f0e?s=128&d=identicon&r=PG", "display_name": "trans", "link": "https://stackoverflow.com/users/1086638/trans"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 11887, "favorite_count": 7, "answer_count": 2, "score": 22, "last_activity_date": 1490820635, "creation_date": 1476372965, "last_edit_date": 1476388062, "question_id": 40025319, "link": "https://stackoverflow.com/questions/40025319/fmap-and-flat-map-in-haskell", "title": "fmap and &quot;flat map&quot; in Haskell", "body": "<p>All this time, when any Haskell lecture spoke of \"flat map\", usually in relation to Monads, I thought it was called \"flat\" for a reason, i.e. it flattens out the container. So </p>\n\n<pre><code>[[1,2],[3,4]]\n</code></pre>\n\n<p>would be processed just as if it were</p>\n\n<pre><code>[1,2,3,4]\n</code></pre>\n\n<p>But now I discover that fmap and map are basically the same thing, the only difference being the application of one for functors and the other for just lists. And that was only done, in the end, to avoid confusing error messages when using map.</p>\n\n<p>Is that true? And if so why did <code>f</code> in fmap come to mean \"flat\", why not \"functor map\"?</p>\n"}, {"tags": ["haskell", "cabal", "cabal-install"], "answers": [{"comments": [{"owner": {"reputation": 24266, "user_id": 946226, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/5823d09208b1e4b63bbfcd189492032c?s=128&d=identicon&r=PG", "display_name": "Joachim Breitner", "link": "https://stackoverflow.com/users/946226/joachim-breitner"}, "edited": false, "score": 2, "creation_date": 1476367318, "post_id": 40023025, "comment_id": 67323349, "body": "How about overriding the constraint with <code>cabal install clanki --allow-newer base</code>"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 24266, "user_id": 946226, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/5823d09208b1e4b63bbfcd189492032c?s=128&d=identicon&r=PG", "display_name": "Joachim Breitner", "link": "https://stackoverflow.com/users/946226/joachim-breitner"}, "edited": false, "score": 1, "creation_date": 1476368425, "post_id": 40023025, "comment_id": 67324226, "body": "@JoachimBreitner: I didn&#39;t actually know that option, but that&#39;s great! Why don&#39;t you make it an answer?"}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 6, "last_activity_date": 1476366898, "creation_date": 1476366898, "answer_id": 40023025, "question_id": 40022261, "link": "https://stackoverflow.com/questions/40022261/how-to-downgrade-base-with-cabal/40023025#40023025", "title": "How to downgrade base with cabal?", "body": "<p>You can't. <code>base</code> is fixed to the GHC install; the only way to get a different version is to install an older compiler, i.e. GHC-7.10. <a href=\"https://docs.haskellstack.org/en/stable/README/\" rel=\"noreferrer\"><code>stack</code></a> would automatically do that for you, but I wouldn't be sure if that's the best solution.</p>\n\n<p>Likely enough, the package <em>will</em> actually work with GHC-8.0; in fact the constraint <code>base &lt;= 4.9.0</code> indicates that it should. That constraint doesn't make a lot of sense since it only allows the pre-first subrevision; it should probably really be <code>base &lt; 4.10</code>.</p>\n\n<p>So the best thing would be to download the source from github, where <code>base</code> does in fact not have the upper bound, and install it from the local folder with <code>cabal install</code>. If that works, notify the author to relax the bound on Hackage.</p>\n\n<p>If it doesn't compile in GHC-8.0, again the best thing would be to <em>make it work</em> by editing the source and then file a pull request.</p>\n\n<p>Alternatively, I'd then resort to stack for installing the package with an older GHC. To do this, get the source code <em>with the <code>base &lt; 4.9</code> constraint</em> (you need to insert that in the github code), and run <code>stack setup</code>, <code>stack init</code> and <code>stack install</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 24266, "user_id": 946226, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/5823d09208b1e4b63bbfcd189492032c?s=128&d=identicon&r=PG", "display_name": "Joachim Breitner", "link": "https://stackoverflow.com/users/946226/joachim-breitner"}, "is_accepted": false, "score": 12, "last_activity_date": 1519574251, "last_edit_date": 1519574251, "creation_date": 1476392004, "answer_id": 40030787, "question_id": 40022261, "link": "https://stackoverflow.com/questions/40022261/how-to-downgrade-base-with-cabal/40030787#40030787", "title": "How to downgrade base with cabal?", "body": "<p>According to @leftroundabout\u2019s answer, the upper bound on <code>base</code> in this package is bogus. In such a case, or simply if you feel bold, you can instruct <code>cabal</code> to ignore upper bounds on dependencies with the appropriate option:</p>\n\n<pre><code>cabal install clanki --allow-newer=base\n</code></pre>\n"}], "owner": {"reputation": 2317, "user_id": 5961990, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/971b4e854947e71931bf6dee307b59c0?s=128&d=identicon&r=PG&f=1", "display_name": "garci560", "link": "https://stackoverflow.com/users/5961990/garci560"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3667, "favorite_count": 0, "accepted_answer_id": 40023025, "answer_count": 2, "score": 7, "last_activity_date": 1519574251, "creation_date": 1476364961, "question_id": 40022261, "link": "https://stackoverflow.com/questions/40022261/how-to-downgrade-base-with-cabal", "title": "How to downgrade base with cabal?", "body": "<p>I'm trying to install a program called <a href=\"https://github.com/marcusbuffett/Clanki\" rel=\"noreferrer\">clanki</a> on Windows 10. In it's installation doc it says to use 'cabal install clanki'. I downloaded cabal, then ghc. Now I run into a version problem for the package <code>base</code>.</p>\n\n<pre><code>$ cabal install clanki\nResolving dependencies...\ncabal.exe: Could not resolve dependencies:\ntrying: clanki-1.2.7 (user goal)\nnext goal: base (dependency of clanki-1.2.7)\nrejecting: base-4.9.0.0/installed-4.9... (conflict: clanki =&gt; base&lt;=4.9.0)\nrejecting: base-4.9.0.0, base-4.8.2.0, base-4.8.1.0, base-4.8.0.0,\nbase-4.7.0.2, base-4.7.0.1, base-4.7.0.0, base-4.6.0.1, base-4.6.0.0,\nbase-4.5.1.0, base-4.5.0.0, base-4.4.1.0, base-4.4.0.0, base-4.3.1.0,\nbase-4.3.0.0, base-4.2.0.2, base-4.2.0.1, base-4.2.0.0, base-4.1.0.0,\nbase-4.0.0.0, base-3.0.3.2, base-3.0.3.1 (constraint from non-upgradeable\npackage requires installed instance)\nDependency tree exhaustively searched.\n</code></pre>\n\n<p>So clanki requires base to be older than 4.9 (stack says this more clearly than cabal), and I then would like to downgrade base to 4.8.2.0. When I try <code>ghc-pkg unregister base</code>, it doesn't allow me. Not even with <code>--force</code>:</p>\n\n<pre><code>$ ghc-pkg unregister base --force\nunregistering would break the following packages: xhtml-3000.2.1 Win32-2.3.1.1 transformers-0.5.2.0 time-1.6.0.1 template-haskell-2.11.0.0 process-1.4.2.0 pretty-1.1.3.3 hpc-0.6.0.3 hoopl-3.10.2.1 haskeline-0.7.2.3 ghci-8.0.1 ghc-boot-th-8.0.1 ghc-boot-8.0.1 ghc-8.0.1 filepath-1.4.1.0 directory-1.2.6.2 deepseq-1.4.2.0 containers-0.5.7.1 Cabal-1.24.0.0 bytestring-0.10.8.1 binary-0.8.3.0 array-0.5.1.1 (ignoring)\n</code></pre>\n\n<p>As I mentioned, I tried also with stack, but in the end it also comes down to the wrong version of base. How can I downgrade this package?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user824425"}, "edited": false, "score": 4, "creation_date": 1476356049, "post_id": 40018065, "comment_id": 67314764, "body": "Just to note: list comprehension isn&#39;t magical. Something like <code>[f x | x &lt;- xs, p x]</code> ends up being understood in terms of <code>map</code>, <code>concatMap</code>, and <code>filter</code> (in this case, it&#39;s basically <code>map f (filter p xs)</code>). Furthermore, <code>[a .. b]</code> is just a nice way of saying <code>enumFromTo a b</code> (where <code>enumFromTo</code> is part of the <code>Enum</code> type class)."}, {"owner": {"reputation": 844, "user_id": 3658288, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/9b8039bc450532453f00c018b6b9a1d6?s=128&d=identicon&r=PG", "display_name": "Adrian Z.", "link": "https://stackoverflow.com/users/3658288/adrian-z"}, "edited": false, "score": 0, "creation_date": 1476357039, "post_id": 40018065, "comment_id": 67315462, "body": "@Rhymoid Thanks that&#39;s a really nice an concise explanation."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1476416190, "post_id": 40018065, "comment_id": 67345743, "body": "@Rhymoid, in fact, list comprehensions are translated to <code>foldr</code> and <code>build</code> forms when optimization is enabled, and to pre-optimized recursive forms otherwise. <code>map</code>, <code>concatMap</code>, and <code>filter</code> are never produced."}, {"owner": {"reputation": 844, "user_id": 3658288, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/9b8039bc450532453f00c018b6b9a1d6?s=128&d=identicon&r=PG", "display_name": "Adrian Z.", "link": "https://stackoverflow.com/users/3658288/adrian-z"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1476430398, "post_id": 40018065, "comment_id": 67351158, "body": "@dfeuer is there an optimalized compilation? How do you enable it?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user824425"}, "edited": false, "score": 0, "creation_date": 1476436487, "post_id": 40018065, "comment_id": 67354563, "body": "If you&#39;re using GHC, you&#39;d usually <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/using-optimisation.html#o-convenient-packages-of-optimisation-flags\" rel=\"nofollow noreferrer\">use <code>-O2</code></a>; so rather than running <code>ghc Main.hs</code>, you&#39;d run <code>ghc -O2 Main.hs</code>. Please note that GHC might not use the <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-420003.11\" rel=\"nofollow noreferrer\"><code>concatMap</code>-based approach</a> anyway, regardless of optimisation flags, because it doesn&#39;t have to literally do so; it just has to generate code that gives the same results."}], "answers": [{"comments": [{"owner": {"reputation": 844, "user_id": 3658288, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/9b8039bc450532453f00c018b6b9a1d6?s=128&d=identicon&r=PG", "display_name": "Adrian Z.", "link": "https://stackoverflow.com/users/3658288/adrian-z"}, "edited": false, "score": 0, "creation_date": 1476354863, "post_id": 40018461, "comment_id": 67314027, "body": "Thanks for the quick answer! I&#39;m not sure if you tested your code or if you typed it from the top of your head but I can&#39;t compile it so I&#39;m not fully sure what it does."}, {"owner": {"reputation": 1308, "user_id": 2248754, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0f3fdf7274a422a407b9554e822c96e8?s=128&d=identicon&r=PG", "display_name": "OllieB", "link": "https://stackoverflow.com/users/2248754/ollieb"}, "reply_to_user": {"reputation": 844, "user_id": 3658288, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/9b8039bc450532453f00c018b6b9a1d6?s=128&d=identicon&r=PG", "display_name": "Adrian Z.", "link": "https://stackoverflow.com/users/3658288/adrian-z"}, "edited": false, "score": 0, "creation_date": 1476355415, "post_id": 40018461, "comment_id": 67314366, "body": "It&#39;s untested in afraid. The fromIntegral function converts the Int to a Num a type. logBase 2.0 finds the log2 of the number, and toInteger casts it back to an int, which will round down.2 to the power of the log2 will give the result. All functions can be checked on Hoogle for type."}, {"owner": {"reputation": 1308, "user_id": 2248754, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0f3fdf7274a422a407b9554e822c96e8?s=128&d=identicon&r=PG", "display_name": "OllieB", "link": "https://stackoverflow.com/users/2248754/ollieb"}, "reply_to_user": {"reputation": 844, "user_id": 3658288, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/9b8039bc450532453f00c018b6b9a1d6?s=128&d=identicon&r=PG", "display_name": "Adrian Z.", "link": "https://stackoverflow.com/users/3658288/adrian-z"}, "edited": false, "score": 0, "creation_date": 1476355437, "post_id": 40018461, "comment_id": 67314378, "body": "I can&#39;t compile at the moment to check. Its likely something trivial."}, {"owner": {"reputation": 844, "user_id": 3658288, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/9b8039bc450532453f00c018b6b9a1d6?s=128&d=identicon&r=PG", "display_name": "Adrian Z.", "link": "https://stackoverflow.com/users/3658288/adrian-z"}, "edited": false, "score": 0, "creation_date": 1476356493, "post_id": 40018461, "comment_id": 67315098, "body": "I have modified your answer a bit <code>map (2^) [1..(floor $ logBase 2.0 (fromIntegral n))]</code> but it seems to use more memory than my previous solution. It&#39;s also slower so now I&#39;m unsure if I can optimise my first solution."}, {"owner": {"reputation": 2226, "user_id": 2246434, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bTuEI.jpg?s=128&g=1", "display_name": "Julia Path", "link": "https://stackoverflow.com/users/2246434/julia-path"}, "edited": false, "score": 0, "creation_date": 1476357018, "post_id": 40018461, "comment_id": 67315451, "body": "<code>take (x+1) $ iterate (2*) 1</code> should be faster if you actually access most the elements in the list, as it doesn&#39;t have to calculate the powers repetitively. However your implementation of <code>myFunc</code> should be faster if most of the elements in the list are not being forced."}, {"owner": {"reputation": 844, "user_id": 3658288, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/9b8039bc450532453f00c018b6b9a1d6?s=128&d=identicon&r=PG", "display_name": "Adrian Z.", "link": "https://stackoverflow.com/users/3658288/adrian-z"}, "reply_to_user": {"reputation": 2226, "user_id": 2246434, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bTuEI.jpg?s=128&g=1", "display_name": "Julia Path", "link": "https://stackoverflow.com/users/2246434/julia-path"}, "edited": false, "score": 0, "creation_date": 1476357405, "post_id": 40018461, "comment_id": 67315691, "body": "@jpath I&#39;m not really sure what you mean. Is you snippet meant for my version or the one from OllieB?"}, {"owner": {"reputation": 2226, "user_id": 2246434, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bTuEI.jpg?s=128&g=1", "display_name": "Julia Path", "link": "https://stackoverflow.com/users/2246434/julia-path"}, "reply_to_user": {"reputation": 844, "user_id": 3658288, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/9b8039bc450532453f00c018b6b9a1d6?s=128&d=identicon&r=PG", "display_name": "Adrian Z.", "link": "https://stackoverflow.com/users/3658288/adrian-z"}, "edited": false, "score": 1, "creation_date": 1476362296, "post_id": 40018461, "comment_id": 67319088, "body": "@Adrian Z. I mean @OllieB&#39;s solution. He uses map (2^) [1..x]. So his solution calculates [2^1, 2^2, 2^3,..,2^x]. But if all of those thunks are actually forced, that is the values are actually looked at and calculated, then it should be more performant to use <code>iterate</code>, because that way you only have to multiply by 2 for every value, which should be more efficient than calculating the power (2^). Unless (2^) is optimised to bitwise operations."}, {"owner": {"reputation": 1308, "user_id": 2248754, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0f3fdf7274a422a407b9554e822c96e8?s=128&d=identicon&r=PG", "display_name": "OllieB", "link": "https://stackoverflow.com/users/2248754/ollieb"}, "edited": false, "score": 0, "creation_date": 1476387304, "post_id": 40018461, "comment_id": 67336108, "body": "My point was that if you just want to get the largest power of 2, why bother with calculating lists at all? That is what myFunc2 does in the example. If you want to really discuss performance, your test methodology and compiler flags will be helpful."}, {"owner": {"reputation": 1308, "user_id": 2248754, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0f3fdf7274a422a407b9554e822c96e8?s=128&d=identicon&r=PG", "display_name": "OllieB", "link": "https://stackoverflow.com/users/2248754/ollieb"}, "edited": false, "score": 0, "creation_date": 1476387772, "post_id": 40018461, "comment_id": 67336408, "body": "Depending on the representation of the underlying type, 2^n is a simple bitshift, which can often be faster than multiplication. Really, to discuss this, the target architecture, compiler flags, and test setup are relevant."}], "tags": [], "owner": {"reputation": 1308, "user_id": 2248754, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0f3fdf7274a422a407b9554e822c96e8?s=128&d=identicon&r=PG", "display_name": "OllieB", "link": "https://stackoverflow.com/users/2248754/ollieb"}, "is_accepted": true, "score": 1, "last_activity_date": 1476369136, "last_edit_date": 1476369136, "creation_date": 1476354468, "answer_id": 40018461, "question_id": 40018065, "link": "https://stackoverflow.com/questions/40018065/performance-of-iterator-list-comprehension/40018461#40018461", "title": "Performance of iterator list comprehension", "body": "<p>If it optimisation you're after, you're going about it the wrong way. It is generally always better to optimise the algorithm. (Warning, untested)</p>\n\n<p>The basic algorithm for this is 2^(floor(log2(n)))</p>\n\n<p>Why not:</p>\n\n<pre><code>myFunc :: Int -&gt; [Int]\nmyFunc n = map (2^) list\n    where list = [1..x]\n          x = floor $ logBase 2 (fromIntegral n)\n</code></pre>\n\n<p>or if you just want the highest power of 2 to a number</p>\n\n<pre><code>myFunc2 :: Int -&gt; Int\nmyFunc2 n = 2 ^ (floor $ logBase 2 (fromIntegral n))\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1308, "user_id": 2248754, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0f3fdf7274a422a407b9554e822c96e8?s=128&d=identicon&r=PG", "display_name": "OllieB", "link": "https://stackoverflow.com/users/2248754/ollieb"}, "edited": false, "score": 0, "creation_date": 1476387416, "post_id": 40021023, "comment_id": 67336192, "body": "Simpler maybe, but not obviously fast for large x."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 1308, "user_id": 2248754, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0f3fdf7274a422a407b9554e822c96e8?s=128&d=identicon&r=PG", "display_name": "OllieB", "link": "https://stackoverflow.com/users/2248754/ollieb"}, "edited": false, "score": 0, "creation_date": 1476387830, "post_id": 40021023, "comment_id": 67336430, "body": "It&#39;s basically the same algorithm as the <code>iterate</code>- and <code>map</code>-based approaches; I&#39;m just not creating an explicit list of all the smaller powers of 2 at the same time. It returns nearly instantly for 1000-digit numbers. (Granted, I tested with a hard-coded 1000-digit number, so <code>ghc -O2</code> appears to have completely unrolled the loop to get the answer...)"}, {"owner": {"reputation": 1308, "user_id": 2248754, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0f3fdf7274a422a407b9554e822c96e8?s=128&d=identicon&r=PG", "display_name": "OllieB", "link": "https://stackoverflow.com/users/2248754/ollieb"}, "edited": false, "score": 0, "creation_date": 1476387965, "post_id": 40021023, "comment_id": 67336510, "body": "Agreed. In the example I give, myFunc2 does this in constant rather than linear time (assuming logbase 2 is constant time)"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 1308, "user_id": 2248754, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0f3fdf7274a422a407b9554e822c96e8?s=128&d=identicon&r=PG", "display_name": "OllieB", "link": "https://stackoverflow.com/users/2248754/ollieb"}, "edited": false, "score": 0, "creation_date": 1476388482, "post_id": 40021023, "comment_id": 67336789, "body": "It&#39;s only constant time for <code>Int</code>, since the input size is bounded. For <code>Integer</code>, it&#39;s logarithmic in the magnitude of the input, just like this."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 0, "last_activity_date": 1476361780, "creation_date": 1476361780, "answer_id": 40021023, "question_id": 40018065, "link": "https://stackoverflow.com/questions/40018065/performance-of-iterator-list-comprehension/40021023#40021023", "title": "Performance of iterator list comprehension", "body": "<p>A <em>much</em> simpler answer is to use recursion directly.</p>\n\n<pre><code>foo 1 = 1\nfoo x = 2 * foo (div x 2)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 115, "user_id": 3403811, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5ddb70d1c41a978fab65e15ca4d9ffcf?s=128&d=identicon&r=PG", "display_name": "Roman Czyborra", "link": "https://stackoverflow.com/users/3403811/roman-czyborra"}, "is_accepted": false, "score": 0, "last_activity_date": 1476398296, "creation_date": 1476398296, "answer_id": 40032167, "question_id": 40018065, "link": "https://stackoverflow.com/questions/40018065/performance-of-iterator-list-comprehension/40032167#40032167", "title": "Performance of iterator list comprehension", "body": "<pre><code>  largestPowerOfTwoIn n = until ((&gt;n).(*2)) (*2) 1\n</code></pre>\n\n<p>where the <a href=\"http://hackage.haskell.org/package/base-4.9.0.0/docs/src/GHC.Base.html#until\" rel=\"nofollow\">Prelude.until</a> idiom yields a constant-space tail-recursive iteration to your end result.</p>\n"}], "owner": {"reputation": 844, "user_id": 3658288, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/9b8039bc450532453f00c018b6b9a1d6?s=128&d=identicon&r=PG", "display_name": "Adrian Z.", "link": "https://stackoverflow.com/users/3658288/adrian-z"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 221, "favorite_count": 2, "accepted_answer_id": 40018461, "answer_count": 3, "score": 0, "last_activity_date": 1476398296, "creation_date": 1476353244, "last_edit_date": 1476353992, "question_id": 40018065, "link": "https://stackoverflow.com/questions/40018065/performance-of-iterator-list-comprehension", "title": "Performance of iterator list comprehension", "body": "<p>I'm new to functional programming with Haskell and was wondering if there was any difference with performance between iterate and list comprehension. Right now I'm using <code>last (takeWhile (&lt; n) (iterate (2*) 1))</code> to get the highest power of two that can fit in a given number <code>n</code>. I would like to optimise this as much as possible. Is there a better way? Without the <code>last</code> it would return a list of powers of two lower than <code>n</code>. With the <code>last</code> it just returns the largest one.</p>\n\n<p>Example: If I input 117 for <code>n</code> the output will be <code>64</code> and the list would be <code>[1, 2, 4, 8, 16, 32, 64]</code>.</p>\n"}, {"tags": ["haskell", "dll", "ghc"], "comments": [{"owner": {"reputation": 1825, "user_id": 2671214, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/v464b.jpg?s=128&g=1", "display_name": "Tomasz Lewowski", "link": "https://stackoverflow.com/users/2671214/tomasz-lewowski"}, "edited": false, "score": 1, "creation_date": 1476353058, "post_id": 40017835, "comment_id": 67312765, "body": "perhaps this link: <a href=\"https://ghc.haskell.org/trac/ghc/wiki/Building/Compiling32on64\" rel=\"nofollow noreferrer\">ghc.haskell.org/trac/ghc/wiki/Building/Compiling32on64</a> will help?"}, {"owner": {"reputation": 331, "user_id": 5377701, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/osnHj.jpg?s=128&g=1", "display_name": "O.Phillips", "link": "https://stackoverflow.com/users/5377701/o-phillips"}, "reply_to_user": {"reputation": 1825, "user_id": 2671214, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/v464b.jpg?s=128&g=1", "display_name": "Tomasz Lewowski", "link": "https://stackoverflow.com/users/2671214/tomasz-lewowski"}, "edited": false, "score": 0, "creation_date": 1476373630, "post_id": 40017835, "comment_id": 67328335, "body": "@TomaszLewowski Blame on me, I forget to specify that I have Windows on this particular machine."}], "answers": [{"tags": [], "owner": {"reputation": 14485, "user_id": 190376, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cd8280c5e1491b8cf55760750ed97dec?s=128&d=identicon&r=PG", "display_name": "Reid Barton", "link": "https://stackoverflow.com/users/190376/reid-barton"}, "is_accepted": true, "score": 3, "last_activity_date": 1476368706, "creation_date": 1476368706, "answer_id": 40023753, "question_id": 40017835, "link": "https://stackoverflow.com/questions/40017835/ghc-how-to-build-a-32-bit-dll-using-64-bit-ghc-to-call-functions-from-c/40023753#40023753", "title": "GHC: how to build a 32-bit DLL using 64-bit GHC? (To call functions from c++)", "body": "<p>A normal Windows 64-bit GHC build (such as the one you can download from the GHC website) is only capable of building 64-bit object files. For example, it doesn't include 32-bit versions of any of the libraries that come with GHC.</p>\n\n<p>Your options are to build a Windows 64-bit to Windows 32-bit cross-compiler, or just run the normal Windows 32-bit build of GHC (probably much easier).</p>\n"}], "owner": {"reputation": 331, "user_id": 5377701, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/osnHj.jpg?s=128&g=1", "display_name": "O.Phillips", "link": "https://stackoverflow.com/users/5377701/o-phillips"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 348, "favorite_count": 1, "accepted_answer_id": 40023753, "answer_count": 1, "score": 3, "last_activity_date": 1535357009, "creation_date": 1476352593, "last_edit_date": 1535357009, "question_id": 40017835, "link": "https://stackoverflow.com/questions/40017835/ghc-how-to-build-a-32-bit-dll-using-64-bit-ghc-to-call-functions-from-c", "title": "GHC: how to build a 32-bit DLL using 64-bit GHC? (To call functions from c++)", "body": "<p>I'd like to build the 32-bit DLL with 64-bit GHC. And here is the minimal example.</p>\n\n<p><strong>Test.hs</strong>\n</p>\n\n<pre><code>{-# LANGUAGE ForeignFunctionInterface #-}\nmodule Test where\n\nimport Foreign.C.Types\n\nforeign export ccall c_hello :: IO()\nforeign export ccall boo :: CInt\n\nc_hello :: IO()\nc_hello = do\n    print \"Hello!\" \n</code></pre>\n\n<p><strong>init_exit.cpp</strong>\n</p>\n\n<pre><code>#include \"Test_stub.h\"\n#include &lt;C:\\Program Files\\Haskell Platform\\8.0.1\\lib\\include\\Rts.h&gt;\n\n#define DLLExport extern \"C\" __declspec(dllexport)\n\nDLLExport void hello()\n{\n    c_hello();    \n}\n\nDLLExport int HsStart()\n{\n    int argc = 1;\n    char* argv[] = {\"ghcDLL\", NULL};\n\n    char** args = argv;\n    hs_init(&amp;argc, &amp;args);\n\n    printf(\"Haskell library has been initialized!\\n\");\n    return 0;\n}\n\nDLLExport int HsEnd()\n{\n    hs_exit();\n\n    printf(\"Haskell library has been finalized!\\n\");\n    return 0;\n}\n</code></pre>\n\n<p>And then I build the library, using the following commands:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>ghc -c -O Test.hs \nghc -c init_exit.cpp \nghc -shared -o Test.dll Test.o init_exit.o\n</code></pre>\n\n<p>What flags should I pass to ghc or maybe to gcc to build the 32-bit DLL instead of 64-bit? Or maybe there is another way to do this.</p>\n"}, {"tags": ["haskell", "types"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1476350453, "post_id": 40016036, "comment_id": 67310986, "body": "Your C++ example doesn&#39;t show any objects. While <code>User</code> is not officially a type, <code>User&lt;int&gt;</code> is a type and not an object. So if your question is whether Haskell types are used the same way C++ types are used, then the answer is &quot;by and large, yes&quot;."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 4, "creation_date": 1476351204, "post_id": 40016036, "comment_id": 67311501, "body": "Your <code>Users a</code> type in Haskell roughly corresponds to your <code>User&lt;A&gt;</code> type in C++. I wonder why custom types surprise you, they can be declared in many programming languages."}], "answers": [{"comments": [{"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "edited": false, "score": 0, "creation_date": 1476352405, "post_id": 40017472, "comment_id": 67312258, "body": "&quot;and writing in your own code an instance for a type defined in some other library (the jargon term for that is &quot;orphan instance&quot;) is almost always a terrible idea&quot; You missed the condition that the class also has to be defined in some other library."}, {"owner": {"reputation": 2691, "user_id": 5477287, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/yKMgF.jpg?s=128&g=1", "display_name": "Babra Cunningham", "link": "https://stackoverflow.com/users/5477287/babra-cunningham"}, "edited": false, "score": 0, "creation_date": 1476472657, "post_id": 40017472, "comment_id": 67377131, "body": "@duplode can you explain further using Maybe to replace Nil? I don&#39;t quite understand..."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 2691, "user_id": 5477287, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/yKMgF.jpg?s=128&g=1", "display_name": "Babra Cunningham", "link": "https://stackoverflow.com/users/5477287/babra-cunningham"}, "edited": false, "score": 1, "creation_date": 1476473670, "post_id": 40017472, "comment_id": 67377640, "body": "@BabraCunningham If you were using <code>Nill</code> as a placeholder for a missing town, it is better to not make it part of the type <code>Town</code>, as a non-existent town is not a town. After doing that, you can use <code>Maybe Town</code> instead of <code>Town</code> when missing values are possible (e.g. <code>Just &quot;Cheltenham&quot;</code> versus <code>Nothing</code>), and just use <code>Town</code> when they aren&#39;t. That is both more precise (as you know just from the type when a the value might be missing) and more convenient (you don&#39;t have to bother with a <code>Nill</code> case if there is no way the value might be missing). I have updated the answer."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1476543694, "post_id": 40017472, "comment_id": 67395110, "body": "(In the comment above it should be <code>Just (TownA &quot;Cheltenham&quot;)</code> rather than <code>Just &quot;Cheltenham&quot;</code>, of course.)"}], "tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": true, "score": 6, "last_activity_date": 1520701152, "last_edit_date": 1520701152, "creation_date": 1476351630, "answer_id": 40017472, "question_id": 40016036, "link": "https://stackoverflow.com/questions/40016036/purpose-of-customized-data-types/40017472#40017472", "title": "Purpose of customized data types?", "body": "<p>Without considering the types you quote specifically [1], I think we can talk about three main kinds of benefits:</p>\n\n<h2>Restricting your power</h2>\n\n<p>As an arbitrary example, pick your <code>Users</code> type. Rather than defining a separate data type, you might try just using a list instead. Perhaps you might even use <code>type</code> to provide a type synonym and make it a little prettier:</p>\n\n<pre><code>type Users a = [a]\nmakeUsers u1 u2 u3 = [u1, u2, u3]\n</code></pre>\n\n<p>However, if your original definition was <code>data Users a = Users a a a</code>, it is reasonable to assume that there being three fields in the data type isn't fruit of an arbitrary choice, but that it was so because there being three users in each set is a relevant condition you want to enforce. If <code>Users</code> is a list, however, it is trivial to break that by changing the number of elements in the list:</p>\n\n<pre><code>us1 = makeUsers \"Jack\" \"Eric\" \"Ginger\"\nus2 = drop 1 us1 -- Oops!\n</code></pre>\n\n<p>If you define the type as you originally proposed, however, such an accident becomes impossible, as there is no way of creating that <code>Users</code> with more or less than three fields. In general, a custom type gives you much better control over what you, or anyone else, can do with the values of the type. Other similar moves include not exporting constructors and field names for a custom type (which has roughly the same effect of making fields private in something like C++) and not writing instances for classes you don't want to actually use.</p>\n\n<h2>Increasing your power</h2>\n\n<p>Given what we said above, someone might think of making <code>Users</code> a 3-tuple instead -- after all, that is guaranteed to hold three elements:</p>\n\n<pre><code>type Users a = (a, a, a)\nmakeUsers u1 u2 u3 = (u1, u2, u3)\n</code></pre>\n\n<p>That is certainly an improvement. However, let's say you want, for whatever reason, to apply a function to all three values in an <code>Users</code>. If <code>Users</code> were a <code>Functor</code>, you could simply use <code>fmap</code>:</p>\n\n<pre><code>us1' = fmap reverse us\n</code></pre>\n\n<p>However, there is no <code>Functor</code> instance for homogeneous 3-tuples, and writing in your own code an instance of a class when both class and type are defined in some other library (the jargon term for that is \"orphan instance\") is almost always a terrible idea. So you are stuck with writing a class-less map function, with a name of its own:</p>\n\n<pre><code>mapUsers :: (a -&gt; b) -&gt; Users a -&gt; Users b\nmapUsers f (Users u1 u2 u3) = Users (f u1) (f u2) (f u3)\n</code></pre>\n\n<p>Doing that all the time, however, gets old quickly, pollutes your namespace with a lot of unneeded names and, worst of all, prevents you from using all the machinery in other libraries which expects an instance of <code>Functor</code>, as opposed to some arbitrary type which happens to have a <code>fmap</code>-like function defined for it. If you have a custom type, though, you can provide the instance just fine:</p>\n\n<pre><code>instance Functor Users where\n    fmap f (Users u1 u2 u3) = Users (f u1) (f u2) (f u3)\n</code></pre>\n\n<p>(By the way, I should mention there is a tool in the language which covers precisely the case in which you would like to use a preexisting type but with new or different instances: the keyword <code>newtype</code>. But that is for another, future, question.)</p>\n\n<h2>Clarifying your code</h2>\n\n<p>Finally, there is the benefit of custom types with custom names (and custom field names, if you use record syntax) making it far more obvious what each value you are using is actually meant for, which is certainly a very significant gain.</p>\n\n<hr>\n\n<p>As chi points out in a comment, these benefits apply to any language with types. Given how powerful Haskell's type system is, however, the advantages brought by defining your own types well are larger than in most other languages.</p>\n\n<hr>\n\n<p>[1]: Though if you were actually using that <code>Towns a</code> you probably should remove the missing value placeholder <code>Nill</code>...</p>\n\n<pre><code>data Town = TownA String | TownB Int\n</code></pre>\n\n<p>... and use <code>Maybe Town</code> instead of <code>Town</code> in the cases you would need <code>Nill</code>.</p>\n"}], "owner": {"reputation": 2691, "user_id": 5477287, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/yKMgF.jpg?s=128&g=1", "display_name": "Babra Cunningham", "link": "https://stackoverflow.com/users/5477287/babra-cunningham"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 151, "favorite_count": 0, "accepted_answer_id": 40017472, "answer_count": 1, "score": 1, "last_activity_date": 1520701152, "creation_date": 1476347625, "last_edit_date": 1476351224, "question_id": 40016036, "link": "https://stackoverflow.com/questions/40016036/purpose-of-customized-data-types", "title": "Purpose of customized data types?", "body": "<p>This is a simple question, but one I'm still unsure about. What is the main benefit(s) of having customized types in Haskell, such as: </p>\n\n<pre><code>data Users a = User a a a \ndata Towns a = TownA Int | TownB String | Nill\n</code></pre>\n\n<p>Is the main use of these custom types to act like objects in imperative languages? Such as </p>\n\n<pre><code>template&lt;typename U&gt;\nclass User \n{\n  U a1;\n  U a2;\n  U a3;\n};\n\nint main()\n{\n  User&lt;std::string&gt; UserObj; UserObj.a1=\"a1\"; //etc\n}\n</code></pre>\n\n<p>Does anyone have a brief and general explanation?</p>\n\n<hr>\n\n<p>N.B I understand the usefulness of binary types such as Maybe, my question is more about the use of custom types.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "edited": false, "score": 0, "creation_date": 1476345322, "post_id": 40015083, "comment_id": 67307777, "body": "Lists are a suboptimal choice for this problem, if you are allowed I would use <code>Data.Sequence</code> for inserting at a given index, otherwise I would go on and use <code>Data.List.groupBy</code> and <code>length</code> to get a list of building blocks, reverse the letters and partition by those lengths and insert the letters by zipping it."}, {"owner": {"reputation": 11986, "user_id": 3237465, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/vOArX.png?s=128&g=1", "display_name": "user3237465", "link": "https://stackoverflow.com/users/3237465/user3237465"}, "edited": false, "score": 0, "creation_date": 1476366812, "post_id": 40015083, "comment_id": 67322922, "body": "<a href=\"http://ideone.com/gunPgg\" rel=\"nofollow noreferrer\">Here</a> is a version that can reverse an infinite list and keep digits available for lookup."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1476376113, "post_id": 40015311, "comment_id": 67329983, "body": "One quibble: they asked for non-digits to be reversed. Your code reverses letters. The solution, of course, is simply to use <code>not . isDigit</code> instead of <code>isLetter</code>."}], "tags": [], "owner": {"reputation": 187800, "user_id": 320615, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/65c80e12b6a33913538653f6d4ef1277?s=128&d=identicon&r=PG", "display_name": "Dogbert", "link": "https://stackoverflow.com/users/320615/dogbert"}, "is_accepted": true, "score": 5, "last_activity_date": 1476369094, "last_edit_date": 1476369094, "creation_date": 1476345358, "answer_id": 40015311, "question_id": 40015083, "link": "https://stackoverflow.com/questions/40015083/how-to-reverse-characters-in-a-string-keeping-digits-at-the-original-index/40015311#40015311", "title": "How to reverse characters in a string keeping digits at the original index?", "body": "<blockquote>\n  <ol>\n  <li>How to insert digits at the repective index into <code>reversedChars</code></li>\n  </ol>\n</blockquote>\n\n<p>I would use a recursive function like this, which inserts the next reversed char if it encounters a letter, otherwise just inserts the actual character:</p>\n\n<pre><code>import Data.Char\n\nreverseLetters :: String -&gt; String\nreverseLetters xs = go xs (reverse $ filter isLetter $ xs)\n  where\n    go xs [] = xs\n    go (x:xs) (r:rs) | isLetter x = r : go xs rs\n                     | otherwise  = x : go xs (r:rs)\n\nmain = print $ reverseLetters \"H1AW2J1\"\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>\"J1WA2H1\"\n</code></pre>\n\n<blockquote>\n  <ol start=\"2\">\n  <li><code>elemIndex</code> is returning same index <code>Just 1</code> for multiple occurrence of 1.</li>\n  </ol>\n</blockquote>\n\n<p>That's because that is what <code>elemIndex</code> is defined to return. If you want all indices, you can do:</p>\n\n<pre><code>Prelude&gt; map fst $ filter ((== '1') . snd) $ zip [0..] \"H1AW2J1\"\n[1,6]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2226, "user_id": 2246434, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bTuEI.jpg?s=128&g=1", "display_name": "Julia Path", "link": "https://stackoverflow.com/users/2246434/julia-path"}, "is_accepted": false, "score": 2, "last_activity_date": 1476346483, "creation_date": 1476346483, "answer_id": 40015664, "question_id": 40015083, "link": "https://stackoverflow.com/questions/40015083/how-to-reverse-characters-in-a-string-keeping-digits-at-the-original-index/40015664#40015664", "title": "How to reverse characters in a string keeping digits at the original index?", "body": "<p>My solution would also look similar to @Dogbert's however here is one that implements it the way you approached the problem.</p>\n\n<p>There is no <code>update</code> function for lists in the standard library and even if there was, it would not be a good idea to use it, as it would have O(n) where n is the index, because lists are singly linked lists. Instead you have to write your own function to include the numbers back into the string:</p>\n\n<pre><code>reverseChars :: [Char] -&gt; [Char]\nreverseChars cs = insert reversedChars digits\n  where reversedChars = reverse $ filter isLetter cs\n        digits = filter (\\(_,c) -&gt; isDigit c) $ indexes cs\n\ninsert :: [a] -&gt; [(Int, a)] -&gt; [a]\ninsert = go 0\n  where go i (x:xs) ((j,y):ys)\n          | j &gt; i = x : go (i+1) xs ((j,y):ys)\n          | otherwise = y : go (i+1) (x:xs) ys\n        go _ xs [] = xs\n        go _ [] ys = map snd ys\n\nindexes :: [a] -&gt; [(Int, a)]\nindexes = zip [0..]\n</code></pre>\n\n<p>I have also changed the implementation of indexes, because <code>elemIndex</code> also has complexity O(n) with n being the position of the searched-for element in the list, so your indexes function would have O(n\u00b2). Furthermore with this implementation you get rid of the <code>Maybe</code> in <code>indexes</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1476376300, "post_id": 40020597, "comment_id": 67330122, "body": "Isn&#39;t this the same as Dogbert&#39;s, with a more general predicate? Note that your type signature isn&#39;t as general as it could be. <code>reverseIf :: (a -&gt; Bool) -&gt; [a] -&gt; [a]</code>."}, {"owner": {"reputation": 68390, "user_id": 55246, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/c25ae0f8b2c34d0766717abab05b2efb?s=128&d=identicon&r=PG", "display_name": "Sridhar Ratnakumar", "link": "https://stackoverflow.com/users/55246/sridhar-ratnakumar"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1476377311, "post_id": 40020597, "comment_id": 67330695, "body": "@dfeuer Yes, I only noticed it after posting the answer. Since mine is implemented slightly differently (I aimed to make it pointfree, with use of existing abstractions -- <code>&lt;*&gt;</code> and <code>mapAccumL</code>) I left the answer as is for what it is worth. I have modified the code with your suggestion."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1476377464, "post_id": 40020597, "comment_id": 67330779, "body": "Your second version is incomprehensible and uses partial functions. What exactly does it have to say for itself? You could (arguably) justify that by making this work with any <code>Traversable</code>."}, {"owner": {"reputation": 68390, "user_id": 55246, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/c25ae0f8b2c34d0766717abab05b2efb?s=128&d=identicon&r=PG", "display_name": "Sridhar Ratnakumar", "link": "https://stackoverflow.com/users/55246/sridhar-ratnakumar"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1476377739, "post_id": 40020597, "comment_id": 67330936, "body": "The second version uses <code>mapAccumL</code> which takes the iteration responsibility from the (earlier) <code>fill</code> function so comparatively little user code needs to be written. Otherwise it achieves the same."}], "tags": [], "owner": {"reputation": 68390, "user_id": 55246, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/c25ae0f8b2c34d0766717abab05b2efb?s=128&d=identicon&r=PG", "display_name": "Sridhar Ratnakumar", "link": "https://stackoverflow.com/users/55246/sridhar-ratnakumar"}, "is_accepted": false, "score": 0, "last_activity_date": 1476377850, "last_edit_date": 1476377850, "creation_date": 1476360482, "answer_id": 40020597, "question_id": 40015083, "link": "https://stackoverflow.com/questions/40015083/how-to-reverse-characters-in-a-string-keeping-digits-at-the-original-index/40020597#40020597", "title": "How to reverse characters in a string keeping digits at the original index?", "body": "<p>A different approach does away with having to find the indices of individual elements:</p>\n\n<pre><code>reverseIf :: (a -&gt; Bool) -&gt; [a] -&gt; [a]\nreverseIf f = fill &lt;*&gt; reverse . filter f\n  where fill s []     = s\n        fill (s:ss) (r:rs)\n          | f s       = x : fill ss rs\n          | otherwise = s : fill ss (r:rs)\n</code></pre>\n\n<p>Here is another version:</p>\n\n<pre><code>reverseIf :: (a -&gt; Bool) -&gt; [a] -&gt; [a]\nreverseIf f = snd . (flip (mapAccumL g) &lt;*&gt; reverse . filter f)\n  where g r e | f e       = (tail r, head r)\n              | otherwise = (r, e)\n</code></pre>\n\n<p>Invocation:</p>\n\n<pre><code>&gt; reverseIf (not . isDigit) \"H1AW2J1\"\n\"J1WA2H1\"\n</code></pre>\n"}], "owner": {"reputation": 835, "user_id": 6301341, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/bb987d3e8cfa45185a84db4232af8312?s=128&d=identicon&r=PG&f=1", "display_name": "jyet", "link": "https://stackoverflow.com/users/6301341/jyet"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 514, "favorite_count": 2, "accepted_answer_id": 40015311, "answer_count": 3, "score": 3, "last_activity_date": 1476377850, "creation_date": 1476344567, "last_edit_date": 1592644375, "question_id": 40015083, "link": "https://stackoverflow.com/questions/40015083/how-to-reverse-characters-in-a-string-keeping-digits-at-the-original-index", "title": "How to reverse characters in a string keeping digits at the original index?", "body": "<p>I have recently started learning Haskell. I am trying to reverse a string which contains chars and numbers. The string is to be reversed keeping digits at the original place.</p>\n<blockquote>\n<p>Original String = &quot;H1AW2J1&quot;</p>\n<p>Reversed = J1WA2H1</p>\n</blockquote>\n<p>I am trying to follow the pattern which I used in Swift.</p>\n<ol>\n<li>filter digits and then reverse the string.</li>\n<li>find the index of digits in the original string.</li>\n<li>insert the digits at index obtained from step 2 into the string from step 1.</li>\n</ol>\n<p>Below are the codes following above steps.</p>\n<p><strong>reversedChars &quot;H1AW2J1&quot; retuns  &quot;JWAH&quot;</strong></p>\n<pre><code>reversedChars  = reverse . filter isLetter\n</code></pre>\n<p><strong>Indexes returns tuples.</strong></p>\n<pre><code>indexes xs = [(x, elemIndex x xs) | x &lt;- xs]\n</code></pre>\n<blockquote>\n<p>[('H',Just 0),('1',Just 1),('A',Just 2),('W',Just 3),('2',Just 4),('J',Just 5),('1',Just 1)]</p>\n</blockquote>\n<p><strong>Questions</strong></p>\n<ol>\n<li>How to insert digits at the repective index into <code>reversedChars</code></li>\n<li><code>elemIndex</code> is returning same index <code>Just 1</code> for multiple occurrence of 1.</li>\n</ol>\n"}, {"tags": ["haskell", "pandoc"], "answers": [{"comments": [{"owner": {"reputation": 277, "user_id": 696501, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/48369edcb9d92ba7d6a1816cad4fd9af?s=128&d=identicon&r=PG", "display_name": "Richard Parsons", "link": "https://stackoverflow.com/users/696501/richard-parsons"}, "edited": false, "score": 0, "creation_date": 1476376336, "post_id": 40024364, "comment_id": 67330135, "body": "Thanks, your explanation is very clear. I was incorrectly assuming that &quot;Meta -&gt; Meta&quot; would match up with &quot;a -&gt; a&quot;."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 277, "user_id": 696501, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/48369edcb9d92ba7d6a1816cad4fd9af?s=128&d=identicon&r=PG", "display_name": "Richard Parsons", "link": "https://stackoverflow.com/users/696501/richard-parsons"}, "edited": false, "score": 0, "creation_date": 1476393492, "post_id": 40024364, "comment_id": 67339535, "body": "@RichardParsons I don&#39;t think that assumption was incorrect, and I think this answer explicitly says that assumption is correct; why do you think it is incorrect?"}, {"owner": {"reputation": 277, "user_id": 696501, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/48369edcb9d92ba7d6a1816cad4fd9af?s=128&d=identicon&r=PG", "display_name": "Richard Parsons", "link": "https://stackoverflow.com/users/696501/richard-parsons"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1476399888, "post_id": 40024364, "comment_id": 67341946, "body": "@DanielWagner I struggle to get the Haskell terminology correct, but I&#39;ll do my best. I could see that the function toJSONFilter required the arguments (a -&gt; a). Since my function has the signature Meta -&gt; Meta, and Meta is from Pandoc, I figured toJSONFilter would work on it. In actual fact, there is no instance &quot;Walkable Meta Pandoc&quot; and so it failed. Michael&#39;s answer explained that since there is an instance of &quot;Walkable Pandoc Pandoc&quot; I could alter my function to use that signature instead of Meta -&gt; Meta.  Is that clearer now?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 277, "user_id": 696501, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/48369edcb9d92ba7d6a1816cad4fd9af?s=128&d=identicon&r=PG", "display_name": "Richard Parsons", "link": "https://stackoverflow.com/users/696501/richard-parsons"}, "edited": false, "score": 0, "creation_date": 1476402256, "post_id": 40024364, "comment_id": 67342553, "body": "@RichardParsons Okay, I&#39;m very happy! It seems I just misunderstood you, and you yourself were understanding things well. Glad to discover this."}], "tags": [], "owner": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "is_accepted": true, "score": 4, "last_activity_date": 1476371214, "last_edit_date": 1476371214, "creation_date": 1476370277, "answer_id": 40024364, "question_id": 40014431, "link": "https://stackoverflow.com/questions/40014431/filter-to-add-metadata-to-pandoc/40024364#40024364", "title": "Filter to add metadata to pandoc", "body": "<p>I think the expanation of the messages is that the compiler can see that</p>\n\n<pre><code>addName :: Meta -&gt; Meta\n</code></pre>\n\n<p>is an example of <code>a -&gt; a</code> and that only available instance is thus</p>\n\n<pre><code>instance Walkable a Pandoc =&gt; ToJSONFilter (a -&gt; a)\n</code></pre>\n\n<p>Putting <code>Meta</code> for <code>a</code>, it needs to find the presupposed <code>instance Walkable Meta Pandoc</code> somewhere, but doesn't.  </p>\n\n<p>The solution is plain enough: we do have it that <code>Walkable Pandoc Pandoc</code>, so we can just make a <code>Pandoc -&gt; Pandoc</code> transformation instead. That is the most intuitive input to <code>toJSONFilter</code> anyway:</p>\n\n<pre><code>addName :: Pandoc -&gt; Pandoc \naddName (Pandoc m ls) = Pandoc m' ls where\n  m' = Meta (insert \"Name\" (MetaString \"My Name\") (unMeta m))\n\nmain :: IO ()\nmain = toJSONFilter addName\n</code></pre>\n"}], "owner": {"reputation": 277, "user_id": 696501, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/48369edcb9d92ba7d6a1816cad4fd9af?s=128&d=identicon&r=PG", "display_name": "Richard Parsons", "link": "https://stackoverflow.com/users/696501/richard-parsons"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 306, "favorite_count": 1, "accepted_answer_id": 40024364, "answer_count": 1, "score": 3, "last_activity_date": 1476371214, "creation_date": 1476342440, "question_id": 40014431, "link": "https://stackoverflow.com/questions/40014431/filter-to-add-metadata-to-pandoc", "title": "Filter to add metadata to pandoc", "body": "<p>I'm trying to write a filter that adds some new metadata to a pandoc.</p>\n\n<p>This is my code so far:</p>\n\n<pre><code>#!/usr/bin/runhaskell\n\nimport Data.Map\nimport Text.Pandoc\nimport Text.Pandoc.JSON\nimport Text.Pandoc.Walk\n\naddName :: Meta -&gt; Meta\naddName m = Meta $ insert \"Name\" (MetaString \"My Name\") (unMeta m)\n\nmain :: IO ()\nmain = toJSONFilter addName\n</code></pre>\n\n<p>I get the following error:</p>\n\n<pre><code>add-meta.hs:12:8: error:\n    \u2022 No instance for (Walkable Meta Pandoc)\n        arising from a use of \u2018toJSONFilter\u2019\n    \u2022 In the expression: toJSONFilter addName\n      In an equation for \u2018main\u2019: main = toJSONFilter addName\nFailed, modules loaded: none.\n</code></pre>\n\n<p>How can I alter this so it builds correctly?</p>\n"}]