[{"tags": ["haskell", "overlapping-instances"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1522281194, "post_id": 49545045, "comment_id": 86099343, "body": "<a href=\"https://en.wikipedia.org/wiki/Expression_problem\" rel=\"nofollow noreferrer\">The Expression Problem</a>; <a href=\"http://www.cs.ru.nl/~W.Swierstra/Publications/DataTypesALaCarte.pdf\" rel=\"nofollow noreferrer\">Data Types a la Carte</a>"}], "answers": [{"comments": [{"owner": {"reputation": 4593, "user_id": 2289983, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LG4hj.jpg?s=128&g=1", "display_name": "Damian Nadales", "link": "https://stackoverflow.com/users/2289983/damian-nadales"}, "edited": false, "score": 0, "creation_date": 1522396141, "post_id": 49546517, "comment_id": 86148685, "body": "I&#39;ve learn a lot from your response. Thanks so much for the time you took in writing it. One question, in the line 51 of your gist, couldn&#39;t we just write <code>PairHas item a b inA inB =&gt; Has item (a :&amp; b)</code>. I found that this works, but maybe is just by coincidence."}, {"owner": {"reputation": 4593, "user_id": 2289983, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LG4hj.jpg?s=128&g=1", "display_name": "Damian Nadales", "link": "https://stackoverflow.com/users/2289983/damian-nadales"}, "edited": false, "score": 0, "creation_date": 1522396748, "post_id": 49546517, "comment_id": 86148930, "body": "I was also wondering, aren&#39;t there libraries featuring something similar to the <code>Has</code> class here. Also I would expect the type family <code>==</code> to be defined at <code>Data.Type.Bool</code> but for some reason it isn&#39;t..."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "reply_to_user": {"reputation": 4593, "user_id": 2289983, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LG4hj.jpg?s=128&g=1", "display_name": "Damian Nadales", "link": "https://stackoverflow.com/users/2289983/damian-nadales"}, "edited": false, "score": 0, "creation_date": 1522412500, "post_id": 49546517, "comment_id": 86156041, "body": "I didn&#39;t know that change works! I&#39;m not quite sure what&#39;s going on, although it makes sense since <code>inA</code> and <code>inB</code> are uniquely determined by the other parameters. There is a <code>(==)</code> defined in <i>base</i>, in<code>Data.Type.Equality</code>, but since base 4.11 it behaves quite differently. In particular <code>a Equality.== a</code> does not reduce to <code>True</code> when <code>a</code> is an uninstantiated variable, as opposed to the one I defined here."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 3, "last_activity_date": 1522285735, "creation_date": 1522285735, "answer_id": 49546517, "question_id": 49545045, "link": "https://stackoverflow.com/questions/49545045/defining-incremental-environments-without-running-into-overlapping-instances/49546517#49546517", "title": "Defining incremental environments without running into overlapping instances", "body": "<p>The problem with the present <code>Sum</code> instances is that we don't know whether the object we are looking for is to the left or to the right.</p>\n\n<p>Here's the plan: each component of the environment should declare what capabilities it offers so that we can then search for it.</p>\n\n<p><a href=\"https://gist.github.com/Lysxia/162a74cce510741fda1775541a0a9800\" rel=\"nofollow noreferrer\">Gist</a> of this answer.</p>\n\n<h1>Declaring capabilities</h1>\n\n<p>As environments will be composed, we will need a (type-level) data structure to carry the capabilities from their different parts. We will use a binary tree, so we can preserve the structure of components.</p>\n\n<pre><code>-- Tree of capabilities (ingredient categories)\ndata Tree a = Leaf a | Node (Tree a) (Tree a)\n</code></pre>\n\n<p>Capabilities associated with an environment are declared via this type family.</p>\n\n<pre><code>type family Contents basket :: Tree *\n\ntype instance Contents [Fruit] = 'Leaf Fruit\ntype instance Contents [Vegetable] = 'Leaf Vegetable\ntype instance Contents [Legume] = 'Leaf Legume\n\n-- Pair of environments\ndata a :&amp; b = a :&amp; b  -- \"Sum\" was confusing\n\n-- The capabilities of a pair are the pair of their capabilities.\ntype instance Contents (a :&amp; b) = 'Node (Contents a) (Contents b)\n\n-- e.g., Contents ([Fruit] :&amp; [Vegetable]) = 'Node ('Leaf Fruit) ('Leaf Vegetable)\n</code></pre>\n\n<h1>Looking up a capability</h1>\n\n<p>As mentioned at the beginning, when encountering a pair <code>:&amp;</code>, we will need to tell whether to find the capability in the left or right component. Thus we start with a function (at the type level) that returns <code>True</code> if the capability can be found in the tree.</p>\n\n<pre><code>type family In (x :: *) (ys :: Tree *) :: Bool where\n  In x (Leaf y) = x == y\n  In x (Node l r) = In x l || In x r\n\ntype family x == y :: Bool where\n  x == x = 'True\n  x == y = 'False\n</code></pre>\n\n<h2>The <code>Has</code> class</h2>\n\n<p>This class now has a superclass constraint: that the capability we are looking for is indeed available.</p>\n\n<pre><code>class (In item (Contents basket) ~ 'True)\n      =&gt; Has item basket where\n  get :: basket -&gt; Name -&gt; Maybe item\n</code></pre>\n\n<p>It may seem superfluous, because instance resolution would fail anyway if the capability is not found, but a precise superclass constraint has benefits:</p>\n\n<ul>\n<li><p>preventing mistakes: the compiler will complain earlier if something is missing;</p></li>\n<li><p>a form of documentation, informing us of when an instance may exist.</p></li>\n</ul>\n\n<h2>Leaf instances</h2>\n\n<pre><code>instance Has Fruit [Fruit] where\n  get = (...)\n\ninstance Has Vegetable [Vegetable] where\n  get = (...)\n\ninstance Has Legume [Legume] where\n  get = (...)\n</code></pre>\n\n<p>We don't need to write dubious instances like <code>Has Fruit [Vegetable]</code>; we actually can't: they would contradict the superclass constraint.</p>\n\n<h2>Instance for <code>(:&amp;)</code></h2>\n\n<p>We need to defer to a new class, <code>PairHas</code> that will discriminate on the result of the <code>In</code> predicate on both sides to determine which part of the environment to zoom in.</p>\n\n<pre><code>instance PairHas item a b (In item (Contents a)) (In item (Contents b))\n         =&gt; Has item (a :&amp; b) where\n  get = getPair\n</code></pre>\n\n<p>Again, we make the superclass constraints extra precise about the intent of <code>PairHas</code>. <code>inA</code> and <code>inB</code> can only be instantiated with <code>In item (Contents a)</code> and <code>In item (Contents b)</code> respectively, and their disjunction should be <code>True</code>, meaning that <code>item</code> can be found in at least one of them.</p>\n\n<pre><code>class ( In item (Contents a) ~ inA\n      , In item (Contents b) ~ inB\n      , (inA || inB) ~ 'True)\n      =&gt; PairHas item a b inA inB where\n  getPair :: (a :&amp; b) -&gt; Name -&gt; Maybe item\n</code></pre>\n\n<p>Of course we have two instances to go left and right respectively, using recursive <code>Has</code> constraints (note that <code>Has</code> provides one equality via its own superclass constraint).</p>\n\n<pre><code>instance ( Has item a\n         , In item (Contents b) ~ 'False)\n         =&gt; PairHas item a b 'True 'False where\n  getPair (a :&amp; _) = get a\n\ninstance ( In item (Contents a) ~ 'False\n         , Has item b)\n         =&gt; PairHas item a b 'False 'True where\n  getPair (_ :&amp; b) = get b\n</code></pre>\n\n<p>What if both sides have the same capability? We shall consider that an error and require the user to explicitly hide one of the duplicate capabilities via other mechanisms. We can use <code>TypeError</code> to print a custom error message at compile-time. We could also pick either side by default.</p>\n\n<pre><code>instance (TypeError (Text \"Duplicate contents\")  -- can be more descriptive\n         , In item (Contents a) ~ 'True\n         , In item (Contents b) ~ 'True)\n         =&gt; PairHas item a b 'True 'True where\n  getPair = undefined\n</code></pre>\n\n<p>We can also write a custom error message for the case when both sides are false. It is a bit surprising because that contradicts the superclass constraint <code>(inA || inB) ~ 'True</code>, but the message does get printed so we won't complain.</p>\n\n<pre><code>instance ( TypeError (Text \"Not found\")  -- can be more descriptive\n         , In item (Contents a) ~ 'False\n         , In item (Contents b) ~ 'False\n         , 'False ~ 'True)\n         =&gt; PairHas item a b 'False 'False where\n  getPair = undefined\n</code></pre>\n\n<h2>Let's cook</h2>\n\n<p>Now we can safely write <code>cook</code>:</p>\n\n<pre><code>cook :: (Smootie, Salad)\ncook = let ingredients = [Orange] :&amp; [Cucumber] :&amp; [BlackEyedPeas] in\n  (mkSmootie ingredients, mkSalad ingredients)\n</code></pre>\n\n<hr>\n\n<p>You can also see what happens if you duplicate or forget some ingredients</p>\n\n<pre><code>cook :: (Smootie, Salad)\ncook = let ingredients = [Orange] :&amp; [Cucumber] :&amp; [BlackEyedPeas] :&amp; [Pear] in\n  (mkSmootie ingredients, mkSalad ingredients)\n\n-- error: Duplicate contents\n</code></pre>\n\n<hr>\n\n<pre><code>cook :: (Smootie, Salad)\ncook = let ingredients = [Orange] :&amp; [Cucumber] in\n  (mkSmootie ingredients, mkSalad ingredients)\n\n-- error: Not found\n</code></pre>\n"}], "owner": {"reputation": 4593, "user_id": 2289983, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LG4hj.jpg?s=128&g=1", "display_name": "Damian Nadales", "link": "https://stackoverflow.com/users/2289983/damian-nadales"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 75, "favorite_count": 0, "accepted_answer_id": 49546517, "answer_count": 1, "score": 2, "last_activity_date": 1522285735, "creation_date": 1522275296, "question_id": 49545045, "link": "https://stackoverflow.com/questions/49545045/defining-incremental-environments-without-running-into-overlapping-instances", "title": "Defining incremental environments without running into overlapping instances", "body": "<p>How to define an environment to which we can add \"capabilities\" without running into overlapping instances?</p>\n\n<p>Suppose we have the following data-types and type-classes:</p>\n\n<pre><code>type Name = String\n\ndata Fruit = Orange | Pear | Apple\n\ndata Vegetable = Cucumber | Carrot | Spinach\n\ndata Legume = Lentils | Chickpeas | BlackEyedPeas\n\nclass HasFruit e where\n    getFruit :: e -&gt; Name -&gt; Maybe Fruit\n\nclass HasVegetable e where\n    getVegetable :: e -&gt; Name -&gt; Maybe Vegetable\n\nclass HasLegume e where\n    getLegume :: e -&gt; Name -&gt; Maybe Legume\n</code></pre>\n\n<p>Now we would like to define a couple of functions that require certain ingredients from the environment:</p>\n\n<pre><code>data Smootie\n\nmkSmoothie :: (HasFruit e, HasVegetable e) =&gt; e -&gt; Smootie\nmkSmoothie = undefined\n\ndata Salad\n\nmkSalad :: (HasVegetable e, HasLegume e) =&gt; e -&gt; Salad\nmkSalad = undefined\n</code></pre>\n\n<p>And we define some instances for <code>Has*</code>:</p>\n\n<pre><code>instance HasFruit [Fruit] where\n    getFruit = undefined\n\ninstance HasVegetable [Vegetable] where\n    getVegetable = undefined\n\ninstance HasLegume [Legume] where\n    getLegume = undefined\n</code></pre>\n\n<p>And finally, we would like to define a function that prepares a smoothie and a salad:</p>\n\n<pre><code>cook :: (Smootie, Salad)\ncook = let ingredients = undefined in\n    (mkSmoothie ingredients, mkSalad ingredients)\n</code></pre>\n\n<p>Now the first question is, what to pass as ingredients to that the instances defined above can be used? My first solution to this was to use tuples:</p>\n\n<pre><code>instance HasFruit e0 =&gt; HasFruit (e0, e1, e2) where\n    getFruit (e0, _, _) = getFruit e0\n\ninstance HasVegetable e1 =&gt; HasVegetable (e0, e1, e2) where\n    getVegetable (_, e1, _) = getVegetable e1\n\ninstance HasLegume e2 =&gt; HasLegume (e0, e1, e2) where\n    getLegume (_, _, e2) = getLegume e2\n\ncook :: (Smootie, Salad)\ncook = let ingredients = ([Orange], [Cucumber], [BlackEyedPeas]) in\n    (mkSmoothie ingredients, mkSalad ingredients)\n</code></pre>\n\n<p>This, even though cumbersome, works. But now assume that we\ndecide to add a <code>mkStew</code>, which requires some <code>HasMeat</code> instance.\nThen we'd have to change all the instances above. Furthermore,\nif we would like to use <code>mkSmothie</code> in isolation, we cannot just\npass <code>([Orange], [Cucumber])</code> since there is no instance defined\nfor it.</p>\n\n<p>I could define:</p>\n\n<pre><code>data Sum a b = Sum a b\n</code></pre>\n\n<p>and instances like:</p>\n\n<pre><code>instance HasFruit e0 =&gt; HasFruit (Sum e0 e1) where\n    getFruit (Sum e0 _) = getFruit e0\n\ninstance HasVegetable e1 =&gt; HasVegetable (Sum e0 e1) where\n    getVegetable (Sum _ e1) = getVegetable e1\n\ninstance HasLegume e1 =&gt; HasLegume (Sum e0 e1) where\n    getLegume (Sum _ e1) = getLegume e1\n</code></pre>\n\n<p>But the following won't work (No instance for <code>HasVegetable [Legume]</code>):</p>\n\n<pre><code>cook1 :: (Smootie, Salad)\ncook1 = let ingredients = Sum [Orange] (Sum [Cucumber] [BlackEyedPeas]) in\n    (mkSmoothie ingredients, mkSalad ingredients)\n</code></pre>\n\n<p>And This instance will overlap!</p>\n\n<pre><code>instance HasVegetable e0 =&gt; HasVegetable (Sum e0 e1) where\n    getVegetable (Sum e0 e1) = getVegetable e0\n</code></pre>\n\n<p>Is there a way to solve this problem in an elegant way? </p>\n"}, {"tags": ["haskell", "list-comprehension"], "answers": [{"comments": [{"owner": {"reputation": 69, "user_id": 6209441, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/36a02632e6afdaafe57afd9be71017e0?s=128&d=identicon&r=PG&f=1", "display_name": "hhwwww", "link": "https://stackoverflow.com/users/6209441/hhwwww"}, "edited": false, "score": 0, "creation_date": 1522262663, "post_id": 49541831, "comment_id": 86091324, "body": "thanks :) so if I would wanted to add a condition to the result I could do it like this for example: <code>[ (a, b) | a &lt;- [1..3], b &lt;- [1..2] , a &lt; b]</code> ?"}], "tags": [], "owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "is_accepted": true, "score": 5, "last_activity_date": 1522262237, "creation_date": 1522262237, "answer_id": 49541831, "question_id": 49541559, "link": "https://stackoverflow.com/questions/49541559/list-comprehension-with-list-of-lists/49541831#49541831", "title": "List Comprehension with list of lists", "body": "<p>In your case, the part after the comma is not a condition, but a second generator. Simplified, the notation looks like this:</p>\n\n<pre><code>&gt; [ (a, b) | a &lt;- [1..3], b &lt;- [1..2] ]\n&gt; [(1,1),(1,2),(2,1),(2,2),(3,1),(3,2)]\n</code></pre>\n\n<p>The example compherension above means the following: </p>\n\n<ol>\n<li>go through list <code>[1..3]</code>, and for every element of it, </li>\n<li>go through list <code>[1..2]</code>, and for every element of it,</li>\n<li>produce a tuple</li>\n</ol>\n\n<p>Further, a generator can depend on elements of previous generators, e.g.:</p>\n\n<pre><code>&gt; [ (a, b) | a &lt;- [1..3], b &lt;- [1..a] ]\n&gt; [(1,1),(2,1),(2,2),(3,1),(3,2),(3,3)]\n</code></pre>\n\n<hr>\n\n<p>So in your case:</p>\n\n<pre><code>[ (i : is ) | i &lt;- [0..(length ts - 1)],is &lt;- treePositions (index ts i) ]\n</code></pre>\n\n<p>the logic is this:</p>\n\n<ol>\n<li>for every <code>i</code> in <code>0..(length ts - 1)</code>,</li>\n<li>go through every <code>is</code> in <code>treePositions (index ts i)</code>,</li>\n<li>and produce <code>i : is</code> as result</li>\n</ol>\n"}], "owner": {"reputation": 69, "user_id": 6209441, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/36a02632e6afdaafe57afd9be71017e0?s=128&d=identicon&r=PG&f=1", "display_name": "hhwwww", "link": "https://stackoverflow.com/users/6209441/hhwwww"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1061, "favorite_count": 0, "accepted_answer_id": 49541831, "answer_count": 1, "score": 0, "last_activity_date": 1522262237, "creation_date": 1522261278, "last_edit_date": 1522261580, "question_id": 49541559, "link": "https://stackoverflow.com/questions/49541559/list-comprehension-with-list-of-lists", "title": "List Comprehension with list of lists", "body": "<p>I have problems to understand the following piece of code: </p>\n\n<pre><code>treePositions :: Tree a -&gt; [[Int]]\ntreePositions (Node _ ts) =\n    [] : [ (i : is ) | i &lt;- [0..(length ts - 1)],\n    is &lt;- treePositions (index ts i) ]\n</code></pre>\n\n<p>This function would calculate any valid paths to a position in the given tree, where for every node the edges are marked with 0..lastOutgoingEdge. \nIf I understood it right the index function would return the node at Index i in the node list of the tree. </p>\n\n<pre><code>index :: [a] -&gt; Int -&gt; a\nindex :: [a] -&gt; Int -&gt; a\nindex [] i = error \"invalid index\"\nindex (x:xs) 0 = x\nindex (x:xs) i = ith xs (i-1) \n</code></pre>\n\n<p>Now for given trees:</p>\n\n<pre><code>t1 = Node \"a\" [\n        Node \"b\" [\n            Node \"c\"[],\n            Node \"d\"[]\n        ]\n     ]\nt2 = Node \"z\" [] \n</code></pre>\n\n<p>the function would return:  </p>\n\n<pre><code>treePositions t1 == [ [], [0], [0,0], [0,1] ] \ntreePositions t2 == [ [] ]\n</code></pre>\n\n<p>What I don't understand is this part:</p>\n\n<p><code>[] : [ (i : is ) | i &lt;- [0..(length ts - 1)],is &lt;- treePositions (index ts i) ]</code> </p>\n\n<p>My thoughts:</p>\n\n<p>If I have <code>x|x &lt;- [0..10], x &lt; 2</code>. This would translate in \"take every x in <code>[0..10]</code> for which <code>x &lt; 2</code> applies. So if I would take every i in <code>[0..(length ts - 1)]</code>, how would this then return lists for a condition? </p>\n"}, {"tags": ["haskell", "typeclass"], "answers": [{"comments": [{"owner": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "edited": false, "score": 1, "creation_date": 1522269730, "post_id": 49542135, "comment_id": 86095275, "body": "Great answer. However there is a typo in the type of <code>toJSON1</code>, should be <code>(ToJSON1 f, ToJSON a) =&gt; f a -&gt; Value</code> (<code>f</code> is missing in the function argument)"}, {"owner": {"reputation": 3185, "user_id": 114887, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/6b0c7e3c2d9ff81adf7470e066e4a705?s=128&d=identicon&r=PG&f=1", "display_name": "Matthew Piziak", "link": "https://stackoverflow.com/users/114887/matthew-piziak"}, "edited": false, "score": 1, "creation_date": 1522275500, "post_id": 49542135, "comment_id": 86097808, "body": "This works great. I put <code>deriving (Generic1, ToJSON1)</code> on <code>Id1</code>, and from there it was easy to define a <code>generic1ToJSON</code> function analogous to Aeson&#39;s <code>genericToJSON</code>. Thank you!"}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 10, "last_activity_date": 1522280846, "last_edit_date": 1522280846, "creation_date": 1522263244, "answer_id": 49542135, "question_id": 49541473, "link": "https://stackoverflow.com/questions/49541473/writing-an-instance-of-the-form-forall-a-class-a-class-f-a-class-t/49542135#49542135", "title": "Writing an instance of the form `(forall a . Class a =&gt; Class (f a)) =&gt; Class (Type f)`", "body": "<p>Until QuantifiedConstraints arrive, there is a standard solution to encode a constraint like <code>forall a. ToJSON a =&gt; ToJSON (f a)</code>, that seems like what you mentioned, but we don't have to give up functions that use a <code>ToJSON</code> constraint.</p>\n\n<p><code>forall a. ToJSON a =&gt; ToJSON (f a)</code> is a constraint on <code>f</code>: we can define that as a typeclass. Luckily, <a href=\"https://hackage.haskell.org/package/aeson-1.3.0.0/docs/Data-Aeson.html#t:ToJSON1\" rel=\"nofollow noreferrer\"><em>aeson</em> already has <code>ToJSON1</code></a>.</p>\n\n<pre><code>class ToJSON1 f where  -- encoding of `forall a. ToJSON a =&gt; ToJSON (f a)`\n  ...\n</code></pre>\n\n<p>And to use that class there is a function</p>\n\n<pre><code>toJSON1 :: (ToJSON1 f, ToJSON a) =&gt; f a -&gt; Value\n</code></pre>\n\n<p>If any type <code>F</code> has an instance <code>ToJSON1 F</code>, then it is expected that its <code>ToJSON</code> instance is equivalent to</p>\n\n<pre><code>instance ToJSON a =&gt; ToJSON (F a) where\n  toJSON = toJSON1\n</code></pre>\n\n<p>So that <code>ToJSON1 F</code> indeed encodes <code>forall a. ToJSON a =&gt; ToJSON1 (F a)</code>.</p>\n\n<p>One thing that seems missing from <em>aeson</em> is a way to solve a <code>ToJSON (f a)</code> constraint given <code>ToJSON1 f</code> and <code>ToJSON a</code>, but you can also encode it using the following newtype (higher-kinded version of <code>Identity</code>):</p>\n\n<pre><code>newtype Id1 f a = Id1 { unId1 :: f a }\n\ninstance (ToJSON1 f, ToJSON a) =&gt; ToJSON (Id1 f a) where\n  toJSON = toJSON1 . unId1\n</code></pre>\n\n<p>Then to define <code>ToJSON (MyType f)</code>, we can first apply <code>coerce :: MyType f -&gt; MyType (Id1 f)</code>.</p>\n\n<pre><code>import Data.Coerce\n\ninstance ToJSON1 f =&gt; ToJSON (MyType f) where\n  toJSON = (...) . (coerce :: MyType f -&gt; MyType (Id1 f))\n    {- in \"(...)\" we can use functions that require \"ToJSON (Id1 f a)\", which is informally equivalent to \"ToJSON (f a)\" -}\n</code></pre>\n"}], "owner": {"reputation": 3185, "user_id": 114887, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/6b0c7e3c2d9ff81adf7470e066e4a705?s=128&d=identicon&r=PG&f=1", "display_name": "Matthew Piziak", "link": "https://stackoverflow.com/users/114887/matthew-piziak"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 309, "favorite_count": 1, "accepted_answer_id": 49542135, "answer_count": 1, "score": 10, "last_activity_date": 1522280846, "creation_date": 1522260952, "question_id": 49541473, "link": "https://stackoverflow.com/questions/49541473/writing-an-instance-of-the-form-forall-a-class-a-class-f-a-class-t", "title": "Writing an instance of the form `(forall a . Class a =&gt; Class (f a)) =&gt; Class (Type f)`", "body": "<p>I perform default resolution in one of my programs by performing a natural transformation from <code>MyType Maybe</code> to <code>MyType Identity</code>. I want to derive a <code>ToJSON</code> instance for these types. I know that <code>Maybe</code> and <code>Identity</code> have instances <code>ToJSON a =&gt; ToJSON (Maybe a)</code> and <code>ToJSON a =&gt; ToJSON (Identity a)</code>. </p>\n\n<p>I would like to declare an instance of the following form: </p>\n\n<pre><code>instance (forall a . ToJSON a =&gt; ToJSON (f a)) =&gt; ToJSON (MyType f)\n</code></pre>\n\n<p>This seems like a reasonable request to put forth to the type system. I want to demonstrate a <code>ToJSON</code> instance for <code>MyType f</code>, <em>provided</em> that I can always get a <code>ToJSON (f a)</code> for every <code>ToJSON a</code>. In logical notation, this is like saying that I can demonstrate <em>(P(a) \u21d2 P(f(a))) \u21d2 P(h(f))</em> for some property <em>P</em>. This seems well formed to me.</p>\n\n<p>Unfortunately, I get the following error with the syntax as is:</p>\n\n<pre><code>\u2022 Illegal polymorphic type: forall a. ToJSON a =&gt; ToJSON (f a)\n  A constraint must be a monotype\n\u2022 In the context: (forall a. ToJSON a =&gt; ToJSON (f a))\n  While checking an instance declaration\n  In the instance declaration for \u2018ToJSON (GpgParams f)\u2019\n</code></pre>\n\n<p>It looks like the <a href=\"https://ghc.haskell.org/trac/ghc/wiki/QuantifiedConstraints\" rel=\"noreferrer\">QuantifiedConstraints</a> proposal would provide this syntax, but it has not been implemented yet.</p>\n\n<p>I can try to work around this constraint by implementing my own class <code>JSONable</code>.</p>\n\n<pre><code>class JSONable f where\n  jsonize :: f a -&gt; Value\n\n  default jsonize :: (ToJSON a, ToJSON (f a)) =&gt; f a -&gt; Value\n  jsonize = toJSON\n</code></pre>\n\n<p>Unfortunately this means giving up all functions in the standard library that use require a <code>ToJSON</code> constraint.</p>\n\n<p>As far as I can tell the best tradeoff in this case is to simply give up and write explicit instances for:</p>\n\n<pre><code>instance ToJSON (MyType Maybe)\ninstance ToJSON (MyType Identity)\n</code></pre>\n\n<p>Is it true that this is simply as powerful as the language gets? Is the desired instance simply ill-formed? Or is it in fact possible to declare such an instance in Haskell for an existing typeclass?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 2, "creation_date": 1522254561, "post_id": 49539394, "comment_id": 86086645, "body": "Have you looked at <code>mapM</code>?"}, {"owner": {"reputation": 289, "user_id": 9189009, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e8867132937b784622d8bdc154e230b2?s=128&d=identicon&r=PG&f=1", "display_name": "Alexia Desouza", "link": "https://stackoverflow.com/users/9189009/alexia-desouza"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1522254651, "post_id": 49539394, "comment_id": 86086712, "body": "yes i managed to get it. thank u :)"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1522254780, "post_id": 49539394, "comment_id": 86086789, "body": "Feel free to post and accept your answer."}], "answers": [{"comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 3, "creation_date": 1522257667, "post_id": 49539865, "comment_id": 86088471, "body": "Note that you don&#39;t need the <code>do</code> keyword here; <code>do a == a</code>. Also, I think <code>mapM</code> is effectively just retained for backwards compatibility, as it is just <code>traverse</code> specialized to monads rather than all applicative functors."}, {"owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1522259361, "post_id": 49539865, "comment_id": 86089416, "body": "@chepner it&#39;s certainly not useful anywhere <code>traverse</code> isn&#39;t, but I think <code>mapM</code> is occasionally more descriptive than <code>traverse</code>. For instance <code>traverse print someValues</code> doesn&#39;t feel as obvious to me as <code>mapM print someValues</code>, though YMMV there."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "edited": false, "score": 1, "creation_date": 1522294976, "post_id": 49539865, "comment_id": 86102680, "body": "@AdamSmith FWIW, my mileage does vary: I really like &quot;traverse&quot; as a name. I think it captures &quot;walk across a structure, performing an action/computation/effect/what-have-you at each step&quot; quite well. It is also evokes a sense of direction, which is one of the key things about <code>Traversable</code> (as opposed to, say, <code>Functor</code>)."}], "tags": [], "owner": {"reputation": 289, "user_id": 9189009, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e8867132937b784622d8bdc154e230b2?s=128&d=identicon&r=PG&f=1", "display_name": "Alexia Desouza", "link": "https://stackoverflow.com/users/9189009/alexia-desouza"}, "is_accepted": false, "score": 2, "last_activity_date": 1522301675, "last_edit_date": 1522301675, "creation_date": 1522254937, "answer_id": 49539865, "question_id": 49539394, "link": "https://stackoverflow.com/questions/49539394/get-all-the-tweets-of-the-followers/49539865#49539865", "title": "Get all the tweets of the followers", "body": "<pre><code>allTweets1 listusers =\n    mapM (\\listu -&gt; (getWith authenticate (urldata2++(listu) ) &gt;&gt;= \\body1 -&gt; getBody1 body1)  ) listusers\n</code></pre>\n\n<p>I was able to solve my problem using mapM as Thomas suggested.\nI was facing the problem for map cause <code>(DL.map) :: (a -&gt; b) -&gt; [a] -&gt; [b]</code>\nit expects it to be in same container. \nBut for <code>mapM :: (Monad m, Traversable t) =&gt; (a -&gt; m b) -&gt; t a -&gt; m (t b)</code> we can give it out in any container like format</p>\n"}], "owner": {"reputation": 289, "user_id": 9189009, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e8867132937b784622d8bdc154e230b2?s=128&d=identicon&r=PG&f=1", "display_name": "Alexia Desouza", "link": "https://stackoverflow.com/users/9189009/alexia-desouza"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 69, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1522903869, "creation_date": 1522253388, "last_edit_date": 1522903869, "question_id": 49539394, "link": "https://stackoverflow.com/questions/49539394/get-all-the-tweets-of-the-followers", "title": "Get all the tweets of the followers", "body": "<pre><code>urldata2 :: String\nurldata2 = \"https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name=\"\n\nallTweets :: [String] -&gt; IO (Either String [Tweets])\nallTweets listusers = do\n    getWith authenticate (urldata2++(DL.head listusers) ) &gt;&gt;= \\body1 -&gt; getBody1 body1\n</code></pre>\n\n<p>this is the <code>allTweets</code> function i tried</p>\n\n<p>getBody1 takes my response and <code>IO (Either String [Tweets])</code></p>\n\n<p>i want to get the tweets of all the users in the list, but i managed for only head user. \nhow can i get for all users in the list? </p>\n"}, {"tags": ["haskell", "x11", "cabal", "xlib"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1522239943, "post_id": 49534282, "comment_id": 86075224, "body": "You say &quot;Cabal X11 installed&quot;. What does that mean, exactly? (What command did you run to install X11? Are you using a sandbox? Are you using new-*?) What does <code>ghc-pkg list X11</code> say?"}, {"owner": {"reputation": 125, "user_id": 9419947, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78daa77f0251eb5ac51d0dd69995d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "UnseenElder", "link": "https://stackoverflow.com/users/9419947/unseenelder"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1522240244, "post_id": 49534282, "comment_id": 86075479, "body": "/Library/Frameworks/GHC.framework/Versions/8.2.2-x86_64/usr/&zwnj;&#8203;lib/ghc-8.2.2/packag&zwnj;&#8203;e.conf.d     (no packages) /Users/ivankretov/.ghc/x86_64-darwin-8.2.2/package.conf.d     (no packages) I&#39;m using a Mac btw"}, {"owner": {"reputation": 125, "user_id": 9419947, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78daa77f0251eb5ac51d0dd69995d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "UnseenElder", "link": "https://stackoverflow.com/users/9419947/unseenelder"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1522240289, "post_id": 49534282, "comment_id": 86075520, "body": "The command was cabal install x11"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1522240356, "post_id": 49534282, "comment_id": 86075558, "body": "What was the output when you ran <code>cabal install x11</code>? I suspect it did not succeed, and printed error messages that you will need to diagnose."}, {"owner": {"reputation": 125, "user_id": 9419947, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78daa77f0251eb5ac51d0dd69995d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "UnseenElder", "link": "https://stackoverflow.com/users/9419947/unseenelder"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1522240420, "post_id": 49534282, "comment_id": 86075601, "body": "It actually did work, it went all the way through an installation list. Shame I did not save it"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1522240733, "post_id": 49534282, "comment_id": 86075856, "body": "It is not harmful to run it again. Consider doing so and including the output in a code block in your question."}, {"owner": {"reputation": 125, "user_id": 9419947, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78daa77f0251eb5ac51d0dd69995d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "UnseenElder", "link": "https://stackoverflow.com/users/9419947/unseenelder"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1522240900, "post_id": 49534282, "comment_id": 86075994, "body": "I&#39;m very new to stackoverflow, should I ask a new question, or is there a way to continue this thread? Thank you very much for your help"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1522241113, "post_id": 49534282, "comment_id": 86076186, "body": "Click &quot;edit&quot; under your question to include additional information."}], "owner": {"reputation": 125, "user_id": 9419947, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78daa77f0251eb5ac51d0dd69995d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "UnseenElder", "link": "https://stackoverflow.com/users/9419947/unseenelder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 190, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1522240164, "creation_date": 1522239305, "last_edit_date": 1522240164, "question_id": 49534282, "link": "https://stackoverflow.com/questions/49534282/graphics-x11-xlib-haskell", "title": "Graphics.X11.Xlib Haskell", "body": "<p>I'm trying to get the <code>import Graphics.X11.Xlib</code> running from my GHC, but  I get</p>\n\n<blockquote>\n  <p>Could not find module \u2018Graphics.X11.Xlib\u2019</p>\n</blockquote>\n\n<p>How do you normally deal with this kind of issue, when you don't know where a module is located, or whether it is there at all?</p>\n\n<p>Cabal X11 installed</p>\n"}, {"tags": ["haskell", "functional-programming", "runtime"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1522228713, "post_id": 49530528, "comment_id": 86067015, "body": "<code>filter</code> selects <i>all</i> elements in the list that match the condition, wheras <code>takeWhile</code> stops from the moment one of the elements fails."}], "answers": [{"tags": [], "owner": {"reputation": 118092, "user_id": 4952130, "user_type": "registered", "accept_rate": 95, "profile_image": "https://i.stack.imgur.com/kKQZw.png?s=128&g=1", "display_name": "Dimitris Fasarakis Hilliard", "link": "https://stackoverflow.com/users/4952130/dimitris-fasarakis-hilliard"}, "is_accepted": false, "score": 3, "last_activity_date": 1522229101, "last_edit_date": 1522229101, "creation_date": 1522228924, "answer_id": 49530687, "question_id": 49530528, "link": "https://stackoverflow.com/questions/49530528/filter-vs-takewhile-difference-and-runtime/49530687#49530687", "title": "filter vs takeWhile: difference and runtime", "body": "<p><a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/libraries/base-4.10.1.0/Prelude.html#v:filter\" rel=\"nofollow noreferrer\"><code>filter</code></a> just keeps going through the list you supply to find all elements that satisfy the predicate. Giving it an infinite list it will just keep churning. </p>\n\n<p><a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/libraries/base-4.10.1.0/Prelude.html#v:takeWhile\" rel=\"nofollow noreferrer\"><code>takeWhile</code></a> on the other hand returns the longest initial sequence of elements that satisfy the predicate, stopping when one does not.</p>\n"}, {"comments": [{"owner": {"reputation": 1033, "user_id": 2056878, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/IZFw8.jpg?s=128&g=1", "display_name": "devio", "link": "https://stackoverflow.com/users/2056878/devio"}, "edited": false, "score": 0, "creation_date": 1522243632, "post_id": 49530743, "comment_id": 86078137, "body": "Pretty clear! Thanks!"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 9, "last_activity_date": 1522229075, "last_edit_date": 1592644375, "creation_date": 1522229075, "answer_id": 49530743, "question_id": 49530528, "link": "https://stackoverflow.com/questions/49530528/filter-vs-takewhile-difference-and-runtime/49530743#49530743", "title": "filter vs takeWhile: difference and runtime", "body": "<p>Yes there is a huge difference. If we read the documentation, we see:</p>\n<blockquote>\n<p><a href=\"http://hackage.haskell.org/package/base-4.11.0.0/docs/Prelude.html#v:takeWhile\" rel=\"noreferrer\"><strong><code>takeWhile :: (a -&gt; Bool) -&gt; [a] -&gt; [a]</code></strong></a></p>\n<p><code>takeWhile</code>, applied to a predicate <code>p</code> and a list <code>xs</code>, returns the <strong>longest prefix</strong> (possibly empty) of <code>xs</code> of elements that satisfy <code>p</code>.</p>\n</blockquote>\n<p>whereas:</p>\n<blockquote>\n<p><a href=\"http://hackage.haskell.org/package/base-4.11.0.0/docs/Prelude.html#v:filter\" rel=\"noreferrer\"><strong><code>filter :: (a -&gt; Bool) -&gt; [a] -&gt; [a]</code></strong></a></p>\n<p><code>filter</code>, applied to a predicate and a list, returns the <strong>list of those elements that satisfy the predicate</strong>.</p>\n</blockquote>\n<p>As input list for the <code>filter</code> and <code>takeWhile</code>, you use a list:</p>\n<pre><code>filter odd (map (^2) [1..])\n</code></pre>\n<p>So that means that you generate a list of <em>all</em> squares with <code>map (^2) [1...]</code>, and then <code>filter odd</code> from these. That is again an infinite list (but even if it was limited, that would never terminate, since <code>filter</code> has no knowledge about the list, and thus will keep trying to find <code>odd</code> elements).</p>\n<p>So the input list has infinite size. We can see that the items in the list are growing, but <code>filter</code> does not know that. So although after a certain element the list will keep failing, <code>filter</code> will keep enumerating over the list when searching for the next element.</p>\n<p><code>takeWhile</code> on the other hand terminates from the moment it finds an element that does <em>not</em> satisfies the condition. For example:</p>\n<pre><code>Prelude&gt; takeWhile odd [1,3,5,12,7,9,1,3]\n[1,3,5]\n</code></pre>\n<p>whereas:</p>\n<pre><code>Prelude&gt; filter odd [1,3,5,12,7,9,1,3]\n[1,3,5,7,9,1,3]\n</code></pre>\n"}], "owner": {"reputation": 1033, "user_id": 2056878, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/IZFw8.jpg?s=128&g=1", "display_name": "devio", "link": "https://stackoverflow.com/users/2056878/devio"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1391, "favorite_count": 1, "closed_date": 1522229082, "accepted_answer_id": 49530743, "answer_count": 2, "score": 3, "last_activity_date": 1522229101, "creation_date": 1522228510, "question_id": 49530528, "link": "https://stackoverflow.com/questions/49530528/filter-vs-takewhile-difference-and-runtime", "closed_reason": "Duplicate", "title": "filter vs takeWhile: difference and runtime", "body": "<p>In GHCI, I have ran the below. The first expression gives the result very fast. The second doesn't (I interrupted it after 10 seconds). I want to understand why? Is there an infinite loop?</p>\n\n<pre><code>Prelude&gt; sum (takeWhile (&lt;10000) (filter odd (map (^2) [1..])))\n166650\nPrelude&gt; sum (filter (&lt;10000) (filter odd (map (^2) [1..])))\nInterrupted.\nPrelude&gt;\n</code></pre>\n"}, {"tags": ["haskell", "windows-subsystem-for-linux", "nix"], "comments": [{"owner": {"reputation": 815, "user_id": 245743, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/11a87619d08da72466e99e16453ea318?s=128&d=identicon&r=PG", "display_name": "ppb", "link": "https://stackoverflow.com/users/245743/ppb"}, "edited": false, "score": 0, "creation_date": 1522241644, "post_id": 49529842, "comment_id": 86076598, "body": "See these issues on nixpkgs issue tracker: <a href=\"https://github.com/NixOS/nixpkgs/issues/26506\" rel=\"nofollow noreferrer\">github.com/NixOS/nixpkgs/issues/26506</a> <a href=\"https://github.com/NixOS/nixpkgs/issues/27808\" rel=\"nofollow noreferrer\">github.com/NixOS/nixpkgs/issues/27808</a> Unfortunately it sounds like there is no working solution as of yet."}], "owner": {"reputation": 4538, "user_id": 499478, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/791526e67831fbd70e3d179a6c585b44?s=128&d=identicon&r=PG", "display_name": "Wizek", "link": "https://stackoverflow.com/users/499478/wizek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 276, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1522232619, "creation_date": 1522226475, "last_edit_date": 1522232619, "question_id": 49529842, "link": "https://stackoverflow.com/questions/49529842/with-nix-and-wsl-what-can-cause-an-error-of-file-exists-n-file-exists", "title": "With Nix and WSL, what can cause an error of `.: File exists \\n ..: File exists`?", "body": "<p>I've run into this error in a WSL shell:</p>\n\n<pre><code>$ nix-shell -p 'haskell.packages.ghc822.ghcWithPackages (p: with p; [text])' --run ghci -j4\nthese derivations will be built:\n  /nix/store/qkbijf516579sf5654i75g0nvkyk8f08-ghc-8.2.2-with-packages.drv\nbuilding '/nix/store/qkbijf516579sf5654i75g0nvkyk8f08-ghc-8.2.2-with-packages.drv'...\n.: File exists\n..: File exists\n.: File exists\n..: File exists\nlib: /nix/store/2dn56f3pvazrfqpxl9629d94v323crq2-text-1.2.2.2/lib\nnix-support: /nix/store/2dn56f3pvazrfqpxl9629d94v323crq2-text-1.2.2.2/nix-support\nrm: cannot remove '/nix/store/bcr5inb3vf8aazqprh216xchif8si2ia-ghc-8.2.2-with-packages/bin/ghc': Permission denied\nkilling process 9380: No such process\nbuilder for '/nix/store/qkbijf516579sf5654i75g0nvkyk8f08-ghc-8.2.2-with-packages.drv' failed with exit code 1\nerror: build of '/nix/store/qkbijf516579sf5654i75g0nvkyk8f08-ghc-8.2.2-with-packages.drv' failed\n\n$ nix-shell --version\nnix-shell (Nix) 2.0\n</code></pre>\n\n<ul>\n<li>What can cause this?</li>\n<li>Could it be that the WSL /nix/store is corrupted somehow?</li>\n<li>If so, can I repair it?</li>\n<li>Or is my only option to delete it and start from 0?</li>\n</ul>\n\n<p>Edit:</p>\n\n<p>I've tried <code>nix-store --check-contents --verify</code> and <code>nix-store --delete /nix/store/...</code> with all implicated store paths in the error message. Neither of them got rid of the error.</p>\n\n<p>Edit 2:</p>\n\n<ul>\n<li>Microsoft Windows [Version 10.0.16299.309]</li>\n<li>Tried both under <code>Ubuntu 14.04.5 LTS</code> and <code>16.04.4</code>, same error.</li>\n</ul>\n"}, {"tags": ["haskell", "monad-transformers", "servant"], "comments": [{"owner": {"reputation": 5397, "user_id": 2193020, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/aa10d01a3d48851073bd61877a56b5a7?s=128&d=identicon&r=PG", "display_name": "hnefatl", "link": "https://stackoverflow.com/users/2193020/hnefatl"}, "edited": false, "score": 0, "creation_date": 1522229211, "post_id": 49527770, "comment_id": 86067402, "body": "You might have an issue in that <code>Handler</code> is an <code>ExceptT ServantErr</code>, but your errors are <code>String</code>s. Can we assume you have a function <code>String -&gt; ServantErr</code> that you can use to convert the errors?"}], "answers": [{"comments": [{"owner": {"reputation": 1044, "user_id": 193424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/11ba6dfa8271fb1cd0c475a2c0626853?s=128&d=identicon&r=PG", "display_name": "Alp Mestanogullari", "link": "https://stackoverflow.com/users/193424/alp-mestanogullari"}, "edited": false, "score": 2, "creation_date": 1522241504, "post_id": 49531243, "comment_id": 86076465, "body": "You can go even further and use your custom error type in an ExceptT monad (or something similar) and use <code>hoistServer</code> (see <a href=\"https://haskell-servant.readthedocs.io/en/stable/tutorial/Server.html#using-another-monad-for-your-handlers\" rel=\"nofollow noreferrer\">here</a>)."}, {"owner": {"reputation": 5397, "user_id": 2193020, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/aa10d01a3d48851073bd61877a56b5a7?s=128&d=identicon&r=PG", "display_name": "hnefatl", "link": "https://stackoverflow.com/users/2193020/hnefatl"}, "reply_to_user": {"reputation": 1044, "user_id": 193424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/11ba6dfa8271fb1cd0c475a2c0626853?s=128&d=identicon&r=PG", "display_name": "Alp Mestanogullari", "link": "https://stackoverflow.com/users/193424/alp-mestanogullari"}, "edited": false, "score": 0, "creation_date": 1522255894, "post_id": 49531243, "comment_id": 86087433, "body": "@AlpMestanogullari Ooh, cool. I don&#39;t actually know anything about <code>servant</code>, so hopefully OP will see your comment and find it useful."}], "tags": [], "owner": {"reputation": 5397, "user_id": 2193020, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/aa10d01a3d48851073bd61877a56b5a7?s=128&d=identicon&r=PG", "display_name": "hnefatl", "link": "https://stackoverflow.com/users/2193020/hnefatl"}, "is_accepted": false, "score": 2, "last_activity_date": 1522233757, "last_edit_date": 1522233757, "creation_date": 1522230371, "answer_id": 49531243, "question_id": 49527770, "link": "https://stackoverflow.com/questions/49527770/either-computations-in-servant-handler/49531243#49531243", "title": "Either computations in servant handler", "body": "<p>Assuming you have a function <code>strToServantErr :: String -&gt; ServantErr</code> for converting the errors returned by <code>f,g,h</code> into errors that can be returned by your handler, then we can use:</p>\n\n<ul>\n<li><a href=\"https://hackage.haskell.org/package/mtl-2.2.2/docs/Control-Monad-Except.html#v:liftEither\" rel=\"nofollow noreferrer\"><code>liftEither</code></a> to get the <code>Either String Int</code>s into <code>ExceptT String</code>s.</li>\n<li><a href=\"https://hackage.haskell.org/package/mtl-2.2.2/docs/Control-Monad-Except.html#v:withExceptT\" rel=\"nofollow noreferrer\"><code>withExceptT</code></a> to convert from <code>ExceptT String</code> to <code>ExceptT ServantErr</code> as required by <code>Handler</code>.</li>\n</ul>\n\n\n\n<pre><code>x1 &lt;- withExceptT strToServantErr $ liftEither f\n</code></pre>\n\n<p>As you're doing this three times, we can make it neater using <a href=\"http://hackage.haskell.org/package/base-4.11.0.0/docs/Data-Traversable.html#v:mapM\" rel=\"nofollow noreferrer\"><code>mapM</code></a>:</p>\n\n<pre><code>[x1, x2, x3] &lt;- mapM (withExceptT strToServantErr . liftEither) [f, g, h]\n</code></pre>\n\n<hr>\n\n<p>Now that we've sorted the arguments, we can use the same idea to fix the return. Renaming your <code>convertError</code> function to <code>someErrorToServantErr</code> for uniformity and assuming it has type <code>SomeError -&gt; ServantErr</code>, then we can do:</p>\n\n<pre><code>result &lt;- liftIO $ a x1 x2 x3\nwithExceptT someErrorToServantErr $ liftEither result\n</code></pre>\n\n<p>We unwrap the <code>IO</code> computation of <code>a</code>, then lift it to <code>ExceptT</code> and convert the exception type.</p>\n\n<p>After tidying away some of the code into a helper function, this gives us something like:</p>\n\n<pre><code>myHandler :: Handler Text\nmyHandler = do\n    [x1, x2, x3] &lt;- mapM (liftMapE strToServantErr) [f, g, h]\n    eitherResult &lt;- liftIO $ a x1 x2 x3\n    liftMapE someErrorToServantErr eitherResult\n  where liftMapE f = withExceptT f . liftEither\n</code></pre>\n\n<p>Which will fail ASAP with a converted error as desired, and while it's dense is hopefully not all that unreadable.</p>\n\n<hr>\n\n<p>You could also go the Applicative route, although I can't find a way of making it particularly nice (I've not used applicative functors much though, I'm probably missing some useful tricks):</p>\n\n<pre><code>myHandler :: Handler Text\nmyHandler = do\n    let [x1, x2, x3] = map (liftMapE strToServantErr) [f, g, h] -- [Handler Int]\n    tmp &lt;- a &lt;$&gt; x1 &lt;*&gt; x2 &lt;*&gt; x3 -- IO (Either SomeError Text)\n    eitherResult &lt;- liftIO $ tmp\n    liftMapE someErrorToServantErr eitherResult\n  where liftMapE f = withExceptT f . liftEither\n</code></pre>\n\n<p>Any improvements on the above code are welcome!</p>\n"}], "owner": {"reputation": 2167, "user_id": 459877, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/QdrXY.jpg?s=128&g=1", "display_name": "beta", "link": "https://stackoverflow.com/users/459877/beta"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 183, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1522233757, "creation_date": 1522219402, "question_id": 49527770, "link": "https://stackoverflow.com/questions/49527770/either-computations-in-servant-handler", "title": "Either computations in servant handler", "body": "<p>A <a href=\"https://hackage.haskell.org/package/servant-server-0.13/docs/Servant-Server.html#t:Handler\" rel=\"nofollow noreferrer\">servant-server Handler</a> is a newtype wrapper over an <code>ExceptT</code>, and has instances for <code>MonadThrow</code>, <code>MonadCatch</code>, <code>MonadError</code>, etc.</p>\n\n<p>This might be a somewhat contrived example, but it shows an issue I often face:</p>\n\n<p>In a handler I want to call three functions that return <code>Either String Int</code>, then perform a computation of type <code>Int -&gt; Int -&gt; Int -&gt; IO (Either SomeError Text)</code>, taking the three <code>Int</code>s from before.</p>\n\n<p>How should I structure this code to ensure that an error is returned as early as possible?</p>\n\n<p>I see that I can use <code>Either</code>'s <code>Monad</code> instance to \u201ccollapse\u201d the first three <code>Either String Int</code> computations into e.g. <code>Either String (Int,Int,Int)</code>, and then binding the <code>IO</code> computation to some result value and then use <code>case</code> to decide whether to return a successful result or use <code>throwError</code> to throw the <code>SomeError</code> type (after a conversion?), but I was hoping to be able to something like the following:</p>\n\n<pre><code>f, g, h :: Either String Int\na :: Int -&gt; Int -&gt; Int -&gt; IO (Either SomeError Text) \n\nmyHandler :: Handler Text\nmyHandler = do\n    x1 &lt;- f\n    x2 &lt;- g\n    x3 &lt;- h\n    liftIO $ convertError $ (a x1 x2 x3)\n</code></pre>\n\n<p>Is it possible to write it similar to the code above?</p>\n"}, {"tags": ["haskell", "codeworld"], "answers": [{"comments": [{"owner": {"reputation": 2501, "user_id": 598892, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a22954b638ce69b9994c9e3623953a5?s=128&d=identicon&r=PG", "display_name": "Chris Smith", "link": "https://stackoverflow.com/users/598892/chris-smith"}, "edited": false, "score": 2, "creation_date": 1530995237, "post_id": 49524967, "comment_id": 89433518, "body": "Just FYI, the first example using <code>closedCurve</code> will be approximately an ellipse, but not exact.  To get a true ellipse, scaling a circle is the right way."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": false, "score": 1, "last_activity_date": 1531102375, "last_edit_date": 1531102375, "creation_date": 1522202710, "answer_id": 49524967, "question_id": 49524086, "link": "https://stackoverflow.com/questions/49524086/ellipse-in-haskell-codeworld/49524967#49524967", "title": "ellipse in haskell CodeWorld", "body": "<p>Using a closed curve, you can set the 4 vertices like so:</p>\n\n<pre><code>ellipse'(a, b) = closedCurve([(a,0),(0,b),(-a,0),(0,-b)])\n</code></pre>\n\n<p>Another way to do it is to say that an ellipse is a circle rescaled in one direction.</p>\n\n<pre><code>ellipse(a, b) = scaled(circle(1), a, b)\n</code></pre>\n\n<p><a href=\"https://code.world/#Ps8tKc4KH4v8Z4iq91NZsew\" rel=\"nofollow noreferrer\">https://code.world/#Ps8tKc4KH4v8Z4iq91NZsew</a></p>\n"}], "owner": {"reputation": 21, "user_id": 9544775, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Amy", "link": "https://stackoverflow.com/users/9544775/amy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1312, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1531102375, "creation_date": 1522194866, "question_id": 49524086, "link": "https://stackoverflow.com/questions/49524086/ellipse-in-haskell-codeworld", "title": "ellipse in haskell CodeWorld", "body": "<p>Can anyone tell me how to draw an Ellipse using the CodeWorld package of Haskell? I want it to be like the rectangle function where I give two arguments for length and width. I have tried using solidClosedCurve-am I heading in the right direction?</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 189, "user_id": 8179137, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46b43fe26a1b6191280614f56683525d?s=128&d=identicon&r=PG&f=1", "display_name": "Potato44", "link": "https://stackoverflow.com/users/8179137/potato44"}, "edited": false, "score": 1, "creation_date": 1522221698, "post_id": 49524014, "comment_id": 86062342, "body": "You can use guards in other places than top level functions. <code>case</code>, defining functions in <code>where</code> and <code>let</code>, even defining values that don&#39;t take parameters in <code>let</code>."}, {"owner": {"reputation": 5397, "user_id": 2193020, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/aa10d01a3d48851073bd61877a56b5a7?s=128&d=identicon&r=PG", "display_name": "hnefatl", "link": "https://stackoverflow.com/users/2193020/hnefatl"}, "reply_to_user": {"reputation": 189, "user_id": 8179137, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46b43fe26a1b6191280614f56683525d?s=128&d=identicon&r=PG&f=1", "display_name": "Potato44", "link": "https://stackoverflow.com/users/8179137/potato44"}, "edited": false, "score": 0, "creation_date": 1522227312, "post_id": 49524014, "comment_id": 86066008, "body": "@Potato44 Thanks for pointing out that guards can be used in <code>case</code>, I&#39;d not seen that syntax before. I&#39;ve changed the opening to make it clear that I&#39;m talking about all functions, rather than just top-level ones. I&#39;ve not been able to find an example of your very last case though, would you mind pointing me towards an example?"}, {"owner": {"reputation": 189, "user_id": 8179137, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46b43fe26a1b6191280614f56683525d?s=128&d=identicon&r=PG&f=1", "display_name": "Potato44", "link": "https://stackoverflow.com/users/8179137/potato44"}, "edited": false, "score": 0, "creation_date": 1522230076, "post_id": 49524014, "comment_id": 86068093, "body": "The question asker of the link to the <a href=\"https://stackoverflow.com/questions/10370346/using-guards-in-let-in-expressions\">&quot;hack&quot;</a> you mentioned uses it in the <code>let</code> on the value <code>brainiac</code>."}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 2, "creation_date": 1522240663, "post_id": 49524014, "comment_id": 86075783, "body": "The <code>case () of _ | choice == &quot;Computer&quot; -&gt; \u2026 | choice == &quot;2 Player&quot; -&gt; \u2026 | \u2026</code> can be replaced with <code>if | choice == &quot;Computer&quot; -&gt; \u2026 | choice == &quot;2 Player&quot; -&gt; \u2026 | \u2026</code> using the <code>MultiWayIf</code> extension, which has been available since GHC 7.6."}, {"owner": {"reputation": 189, "user_id": 8179137, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46b43fe26a1b6191280614f56683525d?s=128&d=identicon&r=PG&f=1", "display_name": "Potato44", "link": "https://stackoverflow.com/users/8179137/potato44"}, "reply_to_user": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 0, "creation_date": 1522327978, "post_id": 49524014, "comment_id": 86120617, "body": "@JonPurdy I think that should be made a full answer because that is almost exactly what the question asker wrote besides the <code>if</code>."}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "reply_to_user": {"reputation": 189, "user_id": 8179137, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46b43fe26a1b6191280614f56683525d?s=128&d=identicon&r=PG&f=1", "display_name": "Potato44", "link": "https://stackoverflow.com/users/8179137/potato44"}, "edited": false, "score": 0, "creation_date": 1522339218, "post_id": 49524014, "comment_id": 86128846, "body": "@Potato44: Alright, I\u2019ve added one. (Tried to make it different enough that it\u2019s not redundant.)"}, {"owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "edited": false, "score": 1, "creation_date": 1522344829, "post_id": 49524014, "comment_id": 86132077, "body": "What I don&#39;t like about guards is that they use an &#39;=&#39; sign after the boolean condition. It is not an equation, it is a result, an arrow."}, {"owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "edited": false, "score": 0, "creation_date": 1522345663, "post_id": 49524014, "comment_id": 86132502, "body": "The advantage of using guards in a case is having pattern matching drill down with booleans, and booleans again doing case. It can become as ugly as desired."}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "reply_to_user": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "edited": false, "score": 0, "creation_date": 1522348502, "post_id": 49524014, "comment_id": 86133912, "body": "@fpmora: But it is an equation, when you\u2019re writing a definition. It\u2019d be inconsistent unless function definitions <i>without</i> guards used an arrow as well, like <code>f x y z -&gt; impl</code>. A guard is just slotting <code>| condition</code> between <code>f x y z</code> and <code>=</code>, or <code>(Some pattern)</code> and <code>-&gt;</code> in <code>case</code>, without changing the surrounding syntax."}, {"owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "edited": false, "score": 0, "creation_date": 1522353990, "post_id": 49524014, "comment_id": 86136515, "body": "The right side of a guard expression is a result <i>because</i> a Boolean is True. In an equation the left side becomes the right side after beta reduction. Also, guards behave like &#39;=&#39; signs in recursive function definitions possible without an equal sign, such as f8 (a,b) | null b = [a] | True =  a : (f8 (splitAt 3 b)) so, I guess, is consistent. TY!"}], "tags": [], "owner": {"reputation": 5397, "user_id": 2193020, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/aa10d01a3d48851073bd61877a56b5a7?s=128&d=identicon&r=PG", "display_name": "hnefatl", "link": "https://stackoverflow.com/users/2193020/hnefatl"}, "is_accepted": true, "score": 5, "last_activity_date": 1522227762, "last_edit_date": 1522227762, "creation_date": 1522194235, "answer_id": 49524014, "question_id": 49523980, "link": "https://stackoverflow.com/questions/49523980/how-do-i-use-a-guard-with-putstrln/49524014#49524014", "title": "How do I use a guard with putStrLn?", "body": "<p>There's a limited set of places where you can use guards - they're most commonly used only in function definitions. In this situation you're probably looking for the <code>case</code> statement instead:</p>\n\n<pre><code>choice &lt;- getLine\ncase choice of\n     \"Computer\" -&gt; main\n     \"2 Player\" -&gt; tictactoe\n      _         -&gt; putStrLn \"That's not a choice!\"\n</code></pre>\n\n<p><sup>The <code>_</code> pattern matches anything, which \"mops up\" the leftover patterns.\n Its use here is analogous to <code>otherwise</code>, although <code>otherwise</code> is actually just syntactic sugar for <code>true</code> given that the expressions in guards are <code>boolean</code>.</sup></p>\n\n<p>It's not quite the same as guards, as guards evaluate boolean expressions while <code>case</code> does pattern matching, but it works. A more accurate dual of guards would be <code>if</code> expressions, but the <code>case</code> syntax is nicer when you can use it instead. Take a look at the <a href=\"https://en.wikibooks.org/wiki/Haskell/Control_structures\" rel=\"nofollow noreferrer\">control structures</a> page on the wiki for more examples.</p>\n\n<hr>\n\n<p>As pointed out in the comments, it's possible to use guards in <code>case</code> expressions as well - you can see this in <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-460003.13\" rel=\"nofollow noreferrer\">the specification</a> and in <a href=\"https://stackoverflow.com/questions/40836222/haskell-guard-inside-case-statement\">this question/answer</a>. It does require at least one pattern match though, which is ugly here - you could use the <a href=\"https://stackoverflow.com/a/10371604/2193020\">\"hack\" described here</a> to do something like:</p>\n\n<pre><code>case () of\n _ | choice == \"Computer\" -&gt; main\n   | choice == \"2 Player\" -&gt; tictactoe\n   | otherwise            -&gt; putStrLn \"That's not a choice!\"\n</code></pre>\n\n<p>But here there's no advantage to doing so.</p>\n"}, {"tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": false, "score": 1, "last_activity_date": 1522339127, "creation_date": 1522339127, "answer_id": 49560429, "question_id": 49523980, "link": "https://stackoverflow.com/questions/49523980/how-do-i-use-a-guard-with-putstrln/49560429#49560429", "title": "How do I use a guard with putStrLn?", "body": "<p>There are a few ways to test values like this, but the way that\u2019s most similar to what you\u2019ve written is to use the extension called <code>MultiWayIf</code>, available since GHC 7.6 (September 2012). Add the pragma:</p>\n\n<pre><code>{-# LANGUAGE MultiWayIf #-}\n</code></pre>\n\n<p>To the top of your source file (or use <code>:set -XMultiWayIf</code> in GHCi) and you can write the following:</p>\n\n<pre><code>choice &lt;- getLine\n-- Simply add the \u2018if\u2019 keyword here.\nif\n  | choice == \"Computer\" -&gt; main\n  | choice == \"2 Player\" -&gt; tictactoe\n  | otherwise -&gt; putStrLn \"That's not a choice!\"\n</code></pre>\n\n<p>Ordinarily, guard syntax <code>| <i>condition</i></code> only works in two places: in <em>definitions</em> (where a guard goes after the name &amp; arguments, before the <code>=</code> symbol) and in <code>case</code> (where it goes after the pattern, before the <code>-&gt;</code> symbol):</p>\n\n<pre><code>doubleIfEven :: Int -&gt; Int\n-- Definition\ndoubleIfEven x\n  | even x = x * 2\n  --------\n  | otherwise = x\n  -----------\n\ndoubleIfJustEven :: Maybe Int -&gt; Maybe Int\ndoubleIfJustEven mx\n  -- Match\n  = case mx of\n    Just x\n      | even x -&gt; Just (x * 2)\n      --------\n      | otherwise -&gt; Just x\n      -----------\n    Nothing -&gt; Nothing\n</code></pre>\n\n<hr>\n\n<p>Here are the alternatives:</p>\n\n<ol>\n<li><p><code>case</code> expressions, in this case where you\u2019re only testing for (structural) equality on strings:</p>\n\n<pre><code>case choice of\n  \"Computer\" -&gt; main\n  \"2 Player\" -&gt; tictactoe\n  _ -&gt; putStrLn \"That's not a choice!\"\n</code></pre></li>\n<li><p>A local definition in a <code>where</code> clause or <code>let</code> binding:</p>\n\n<pre><code>tictac :: IO ()\ntictac = do \n  putStrLn \"Would you like to play against the computer or\\\n           \\ another player? Enter: 2 Player or Computer\"\n  choice &lt;- getLine\n  check choice\n\n  where\n    check choice\n      | choice == \"Computer\" = main\n      | choice == \"2 Player\" = tictactoe\n      | otherwise = putStrLn \"That's not a choice!\"\n\n----\n\ntictac :: IO ()\ntictac = do \n  putStrLn \"Would you like to play against the computer or\\\n           \\ another player? Enter: 2 Player or Computer\"\n  let\n    check choice\n      | choice == \"Computer\" = main\n      | choice == \"2 Player\" = tictactoe\n      | otherwise = putStrLn \"That's not a choice!\"\n  choice &lt;- getLine\n  check choice\n</code></pre></li>\n<li><p>Nested <code>if</code> expressions:</p>\n\n<pre><code>if choice == \"Computer\" then main\n  else if choice == \"2 Player\" then tictactoe\n  else putStrLn \"That's not a choice!\"\n</code></pre></li>\n<li><p><code>case</code> with a dummy pattern and guards (an old idiom):</p>\n\n<pre><code>case () of\n  _ | choice == \"Computer\" -&gt; main\n    | choice == \"2 Player\" -&gt; tictactoe\n    | otherwise -&gt; putStrLn \"That's not a choice!\"\n</code></pre></li>\n</ol>\n\n<p>#1 is most common for matching; #2 is used if you need guards and either want to avoid <code>MultiWayIf</code> to support old compilers, or simply want to factor out the logic into a separate definition for readability; #3 and #4 aren\u2019t very common or idiomatic, but there\u2019s nothing \u201cwrong\u201d with them.</p>\n"}], "owner": {"reputation": 109, "user_id": 9036068, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Z6aq3.jpg?s=128&g=1", "display_name": "wawaloo_17", "link": "https://stackoverflow.com/users/9036068/wawaloo-17"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 302, "favorite_count": 1, "accepted_answer_id": 49524014, "answer_count": 2, "score": 1, "last_activity_date": 1522339127, "creation_date": 1522193958, "last_edit_date": 1522194020, "question_id": 49523980, "link": "https://stackoverflow.com/questions/49523980/how-do-i-use-a-guard-with-putstrln", "title": "How do I use a guard with putStrLn?", "body": "<p>I'm trying to write a function that will execute 2 different game modes which are defined as <code>tictactoe :: IO ()</code> and <code>main :: IO ()</code>. I'm getting a parse error on input '|'. I don't understand what I am doing wrong. Could someone please explain this to me?</p>\n\n<pre><code>tictac :: IO()\ntictac = do \n       putStrLn \"Would you like to play against the computer or \n                 another player? Enter: 2 Player or Computer\"\n       choice &lt;- getLine\n         |choice == \"Computer\" = main\n         |choice == \"2 Player\" = tictactoe\n         |otherwise = putStrLn \"That's not a choice!\"\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 4004, "user_id": 1498178, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/2a7f53f1d991f2ab18a4957a1f192960?s=128&d=identicon&r=PG", "display_name": "toraritte", "link": "https://stackoverflow.com/users/1498178/toraritte"}, "edited": false, "score": 0, "creation_date": 1522176143, "post_id": 49519683, "comment_id": 86046081, "body": "I accepted Silvio Mayolo&#39;s answer because it also included <code>Maybe</code>&#39;s <code>Eq</code> instance that I missed, but thank you Daniel Wagner for the prompt reassurance!"}, {"owner": {"reputation": 4004, "user_id": 1498178, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/2a7f53f1d991f2ab18a4957a1f192960?s=128&d=identicon&r=PG", "display_name": "toraritte", "link": "https://stackoverflow.com/users/1498178/toraritte"}, "edited": false, "score": 0, "creation_date": 1522176405, "post_id": 49519683, "comment_id": 86046238, "body": "Does Haskell&#39;s laziness come into play in <code>isNothing</code>? Because its type signature does mention <code>Maybe a</code>, but I assume that because it is never matched, the compiler will ignore it."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1522177337, "post_id": 49519683, "comment_id": 86046796, "body": "Laziness is always in play. But I&#39;m not sure I understood your question yet; what are the two &quot;it&quot;s in &quot;I assume that because it is never matched, the compiler will ignore it&quot;?"}, {"owner": {"reputation": 4004, "user_id": 1498178, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/2a7f53f1d991f2ab18a4957a1f192960?s=128&d=identicon&r=PG", "display_name": "toraritte", "link": "https://stackoverflow.com/users/1498178/toraritte"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1522178380, "post_id": 49519683, "comment_id": 86047445, "body": "Sorry for the ambiguity; I think I am starting to overthinking it. What I meant is that <code>isNothing</code>&#39;s type signature mentions <code>Maybe a</code>, but the compiler won&#39;t throw an error because type variable <code>a</code> is never matched (instantiated?)."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1522179354, "post_id": 49519683, "comment_id": 86047976, "body": "Don&#39;t confuse the type level with the term level. <code>Nothing</code> is a perfectly suitable term, and its type is <code>Maybe a</code> regardless of what <code>a</code> is. There is no conflict between the statements &quot;this term contains no values of type <code>a</code>&quot; and &quot;this term has a type which mentions <code>a</code>&quot;."}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 6, "last_activity_date": 1522174335, "creation_date": 1522174335, "answer_id": 49519795, "question_id": 49519683, "link": "https://stackoverflow.com/questions/49519683/why-is-eq-a-constraint-required-for-the-solution-using-elem/49519795#49519795", "title": "Why is `Eq a` constraint required for the solution using `elem`?", "body": "<blockquote>\n  <p>Is it simply because <code>filter</code> and <code>isNothing</code> have no constraints on the type variables and <code>elem</code> has? (Also with <code>isNothing</code> the type variable never even comes into play because it is ignored.)</p>\n</blockquote>\n\n<p>Correct, you nailed it here.</p>\n\n<blockquote>\n  <p><code>Maybe</code> has an <code>Eq</code> instance, but I guess the compiler does not know anything about <code>a</code>, right?</p>\n</blockquote>\n\n<p>Nailed it again.</p>\n"}, {"tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": true, "score": 9, "last_activity_date": 1522174356, "creation_date": 1522174356, "answer_id": 49519803, "question_id": 49519683, "link": "https://stackoverflow.com/questions/49519683/why-is-eq-a-constraint-required-for-the-solution-using-elem/49519803#49519803", "title": "Why is `Eq a` constraint required for the solution using `elem`?", "body": "<blockquote>\n  <p>Is it simply because <code>filter</code> and <code>isNothing</code> have no constraints on the type variables and <code>elem</code> has? (Also with <code>isNothing</code> the type variable never even comes into play because it is ignored.)</p>\n</blockquote>\n\n<p>You've hit the nail on the head here. <code>elem</code>, <em>in general</em>, will only work if <code>Eq a</code> is satisfied. You're trying to use it on <code>[Maybe a]</code>, and <code>Maybe a</code> has the following <code>Eq</code> instance.</p>\n\n<pre><code>instance Eq a =&gt; Eq (Maybe a) where\n    ...\n</code></pre>\n\n<p>So <code>elem</code> looks at your <code>Maybe a</code> and says \"I need this to be <code>Eq</code>\". It sees the above instance and says \"for <code>Maybe a</code> to satisfy <code>Eq</code>, <code>a</code> must satisfy <code>Eq</code>, and I don't know <code>Eq a</code>\". Now, in your <em>particular</em> case, you only compare against <code>Nothing</code>, so the <code>Eq a</code> instance is never actually used. But the compiler doesn't have enough information to know this; it just knows that <code>elem</code> needs <code>Eq a</code>, and you don't provide it with that constraint.</p>\n\n<p>In order to get this function to work without <code>Eq</code>, you need to do it the way you already did it, either with explicit recursion or with <code>filter</code> and <code>isNothing</code>. In short, I think you've already figured out the answer, and I'm just reiterating the things you've already said.</p>\n"}], "owner": {"reputation": 4004, "user_id": 1498178, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/2a7f53f1d991f2ab18a4957a1f192960?s=128&d=identicon&r=PG", "display_name": "toraritte", "link": "https://stackoverflow.com/users/1498178/toraritte"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 236, "favorite_count": 0, "accepted_answer_id": 49519803, "answer_count": 2, "score": 7, "last_activity_date": 1522174356, "creation_date": 1522173982, "question_id": 49519683, "link": "https://stackoverflow.com/questions/49519683/why-is-eq-a-constraint-required-for-the-solution-using-elem", "title": "Why is `Eq a` constraint required for the solution using `elem`?", "body": "<p>I was solving the following exercise from the <a href=\"http://haskellbook.com/\" rel=\"noreferrer\">Haskell Book</a>:</p>\n\n<pre><code>-- &gt;&gt;&gt; flipMaybe [Just 1, Just 2, Just 3]\n-- Just [1, 2, 3]\n-- &gt;&gt;&gt; flipMaybe [Just 1, Nothing, Just 3]\n-- Nothing\n\nflipMaybe :: [Maybe a] -&gt; Maybe [a]\nflipMaybe = undefined\n</code></pre>\n\n<p>First I tried using <code>elem</code>,</p>\n\n<pre><code>flipMaybeWithElem :: [Maybe a] -&gt; Maybe [a]\nflipMaybeWithElem ms\n  | Nothing `elem` ms = Nothing\n  | otherwise         = Just (catMaybes ms)\n</code></pre>\n\n<p>but I got the error message:</p>\n\n<pre><code>misc.hs:86:5: error:\n    \u2022 No instance for (Eq a) arising from a use of \u2018elem\u2019\n      Possible fix:\n        add (Eq a) to the context of\n          the type signature for:\n            flipMaybe2 :: forall a. [Maybe a] -&gt; Maybe [a]\n    \u2022 In the expression: Nothing `elem` ms\n      In a stmt of a pattern guard for\n                     an equation for \u2018flipMaybe2\u2019:\n        Nothing `elem` ms\n      In an equation for \u2018flipMaybe2\u2019:\n          flipMaybe2 ms\n            | Nothing `elem` ms = Nothing\n            | otherwise = Just (catMaybes ms)\n   |\n86 |   | Nothing `elem` ms = Nothing\n   |     ^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>I understand that I should just add the <code>Eq a =&gt;</code> constraint to the function signature, but I was trying to stay true to the provided function stub. So I reused previous functions, and it did work:</p>\n\n<pre><code>flipMaybe :: [Maybe a] -&gt; Maybe [a]\nflipMaybe ms =\n  case (filter isNothing ms) of\n    [] -&gt; Just (catMaybes ms)\n    _  -&gt; Nothing\n</code></pre>\n\n<p>The helper functions used:</p>\n\n<pre><code>isNothing :: Maybe a -&gt; Bool\nisNothing Nothing = True\nisNothing _       = False\n\nmayybee :: b -&gt; (a -&gt; b) -&gt; Maybe a -&gt; b\nmayybee b _ Nothing = b\nmayybee b f (Just a) = f a\n\nfromMaybe :: a -&gt; Maybe a -&gt; a\nfromMaybe a maybe = mayybee a id maybe\n\ncatMaybes :: [Maybe a] -&gt; [a]\ncatMaybes xs = map (fromMaybe undefined) (filter isJust xs)\n</code></pre>\n\n<hr>\n\n<p>So <strong>why doesn't the first solution with <code>elem</code> work without the type constraints?</strong></p>\n\n<p>Is it simply because <code>filter</code> and <code>isNothing</code> have no constraints on the type variables and <code>elem</code> has? (Also with <code>isNothing</code> the type variable never even comes into play because it is ignored.)</p>\n\n<pre><code>&gt; :t filter               \nfilter :: (a -&gt; Bool) -&gt; [a] -&gt; [a]\n\n&gt; :t isNothing                              \nisNothing :: Maybe a -&gt; Bool                               \n\n&gt; :t elem\nelem :: (Eq a, Foldable t) =&gt; a -&gt; t a -&gt; Bool \n</code></pre>\n\n<p><code>Maybe</code> has an <code>Eq</code> instance, but I guess the compiler does not know anything about <code>a</code>, right?</p>\n"}, {"tags": ["haskell", "gadt"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1522173199, "post_id": 49519247, "comment_id": 86044339, "body": "Can you elaborate on how would you like to &quot;pass on the type level information&quot; when using a list which has heterogeneous tags? I&#39;d think that either you can do that with existentials or the task is impossible to achieve in a type safe way."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1522174575, "post_id": 49519247, "comment_id": 86045161, "body": "You don&#39;t lose the ability to pass on the type-level information about <code>MyType</code>; you&#39;re just required to re-wrap in an existential after you&#39;ve passed it on. But to set you straight we&#39;d have to see what it was you tried that didn&#39;t work."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1522178059, "post_id": 49519247, "comment_id": 86047267, "body": "Another direction is a list type that exposes the types of its contents. See, for example, <code>Data.Vinyl.Core</code> in the <code>vinyl</code> package."}], "answers": [{"tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": true, "score": 5, "last_activity_date": 1522240331, "last_edit_date": 1522240331, "creation_date": 1522185230, "answer_id": 49522504, "question_id": 49519247, "link": "https://stackoverflow.com/questions/49519247/list-of-heterogeneous-gadts/49522504#49522504", "title": "list of heterogeneous GADTs", "body": "<p>The solution here is an existential:</p>\n\n<pre><code>data Test a where\n  A :: Int -&gt; Test Int\n  B :: Double -&gt; Test Double\n\ndata SomeTest where\n  SomeTest :: Test a -&gt; SomeTest\n\nmyData :: [SomeTest]\nmyData =\n  [ SomeTest (A (3 :: Int))\n  , SomeTest (B (5.0 :: Double))\n  ]\n</code></pre>\n\n<p>This just changes how you can <em>consume</em> this type. You can recover type information by pattern-matching on it:</p>\n\n<pre><code>consume :: Test a -&gt; Int\nconsume (A a) = a + 1\nconsume (B b) = truncate b\n\nmap (\\ (SomeTest x) -&gt; consume x) myData :: [Int]\n</code></pre>\n\n<p>With <code>RankNType</code>s you can unwrap it with a continuation that recovers the type:</p>\n\n<pre><code>test :: (forall a. Test a -&gt; r) -&gt; SomeTest -&gt; r\ntest k (SomeTest x) = k x\n\ntest (\\ x -&gt; case x of\n  A a -&gt; a + 1 {- \u2018a\u2019 is known to be \u2018Int\u2019 here -}\n  B b -&gt; truncate b {- \u2018b\u2019 is known to be \u2018Double\u2019 here -})\n  :: SomeTest -&gt; Int\n</code></pre>\n\n<p>An existential without any typeclass constraints is mostly useful when you\u2019re using it to pack <em>multiple</em> things together in a sort of \u201cmodule\u201d where they all must agree on the type, but that type is opaque from the outside. This constrains the operations that the consumer can do\u2014for example, consider a pair of a request and a variable to store the result of that request:</p>\n\n<pre><code>data SomeRequest where\n  SomeRequest :: IO a -&gt; IORef a -&gt; SomeRequest\n\nfetchRequests :: [SomeRequest] -&gt; IO ()\nfetchRequests = traverse_ fetchRequest\n  where\n\n    -- \u2018fetchRequest\u2019 controls the fetching strategy (sync/async)\n    -- but can\u2019t do anything with the fetched value\n    -- other than store it in the \u2018IORef\u2019.\n    fetchRequest :: SomeRequest -&gt; IO ()\n    fetchRequest (SomeRequest request result) = do\n      value &lt;- request\n      writeIORef result value\n</code></pre>\n\n<p>If you have a totally polymorphic type, like:</p>\n\n<pre><code>data Test a where\n  Test :: a -&gt; Test a\n</code></pre>\n\n<p>Then you can recover more interesting information about the type by adding typeclass constraints. For example, if you want full dynamic information, you can get it with <code>Typeable</code>:</p>\n\n<pre><code>data SomeTest where\n  SomeTest :: Typeable a =&gt; Test a -&gt; SomeTest\n\ntest :: (forall a. Typeable a =&gt; Test a -&gt; r) -&gt; SomeTest -&gt; r\ntest k (SomeTest x) = k x\n\ntest (\\ (Test a) -&gt; case cast a of\n  Just a' -&gt; (a' :: Int) + 1\n  Nothing -&gt; case cast a of\n    Just a' -&gt; length (a' :: String)\n    Nothing -&gt; 0)\n</code></pre>\n\n<p>Most of the time you can use a typeclass with less power than this, depending on the operations you actually need.</p>\n"}], "owner": {"reputation": 8049, "user_id": 2718064, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/jEp0E.jpg?s=128&g=1", "display_name": "marcosh", "link": "https://stackoverflow.com/users/2718064/marcosh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 309, "favorite_count": 1, "accepted_answer_id": 49522504, "answer_count": 1, "score": 2, "last_activity_date": 1522240331, "creation_date": 1522172463, "last_edit_date": 1522176081, "question_id": 49519247, "link": "https://stackoverflow.com/questions/49519247/list-of-heterogeneous-gadts", "title": "list of heterogeneous GADTs", "body": "<p>I have a GADT like the following</p>\n\n<pre><code>data MyTypes\n    = MyInt\n    | MyDouble\n\ndata Test (t :: MyTypes) where\n    A :: Int -&gt; Test 'MyInt\n    B :: Double -&gt; Test 'MyDouble\n</code></pre>\n\n<p>this allows me to to keep track of the value contained in the <code>Test</code> values at the type level, so that I can also do something like</p>\n\n<pre><code>data Test2 (t :: MyTypes) where\n    A2 :: Test 'MyInt -&gt; Test2 'MyInt\n    B2 :: Test 'MyDouble -&gt; Test2 'MyDouble\n</code></pre>\n\n<p>and pass along the information.</p>\n\n<p>However, if I want to have a list of <code>Test</code> values with different <code>MyTypes</code>, like</p>\n\n<pre><code>myData :: [Test (t :: MyTypes)]\nmyData =\n    [ A (3 :: Int)\n    , B (5.0 :: Double)\n    ]\n</code></pre>\n\n<p>I get as expected <code>\u2018t\u2019 is a rigid type variable bound</code> error message.</p>\n\n<p>I tried to use existential types to overcome the problem of rigid type variables, but then I lose the ability to pass on the type level information about <code>MyType</code>.</p>\n\n<p>How should I approach such a problem?</p>\n"}, {"tags": ["list", "haskell", "pattern-matching"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1522171141, "post_id": 49518884, "comment_id": 86043270, "body": "You define two <code>sum&#39;</code>s here"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1522171169, "post_id": 49518884, "comment_id": 86043287, "body": "See: <a href=\"https://stackoverflow.com/q/3067885/67579\">stackoverflow.com/q/3067885/67579</a>"}], "answers": [{"tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": true, "score": 4, "last_activity_date": 1522171573, "creation_date": 1522171573, "answer_id": 49519021, "question_id": 49518884, "link": "https://stackoverflow.com/questions/49518884/non-exhaustive-patterns-in-function-haskell/49519021#49519021", "title": "Non-exhaustive patterns in function (Haskell)", "body": "<p>To create a function with pattern matching, or using multi line in the command line of ghci you should use <code>{}</code> and separate with <code>;</code> in your case:</p>\n\n<pre><code>Prelude&gt; let { sum' [] = 0 ; sum' (x:xs) = x + sum' xs }\nPrelude&gt; sum' [1,2,3,4,5]\n=&gt; 15\n</code></pre>\n\n<p>otherwise you will be binding only one equation (in this case the last one) to the function name <code>sum'</code> and that's why you get a pattern matching failure</p>\n"}], "owner": {"reputation": 1033, "user_id": 2056878, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/IZFw8.jpg?s=128&g=1", "display_name": "devio", "link": "https://stackoverflow.com/users/2056878/devio"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 740, "favorite_count": 1, "closed_date": 1522171952, "accepted_answer_id": 49519021, "answer_count": 1, "score": 3, "last_activity_date": 1572883497, "creation_date": 1522171109, "last_edit_date": 1572883497, "question_id": 49518884, "link": "https://stackoverflow.com/questions/49518884/non-exhaustive-patterns-in-function-haskell", "closed_reason": "Duplicate", "title": "Non-exhaustive patterns in function (Haskell)", "body": "<p>I have two code snippets that throw the same error:</p>\n\n<pre><code>Prelude&gt; sum' [] = 0\nPrelude&gt; sum' (x:xs) = x + sum' xs\nPrelude&gt; sum' [1,2,3,4,5]\n*** Exception: &lt;interactive&gt;:142:1-25: Non-exhaustive patterns in function sum'\n</code></pre>\n\n<p>and the following as well:</p>\n\n<pre><code>Prelude&gt; prod [] = 1\nPrelude&gt; prod (x:xs) = x * (prod xs)\nPrelude&gt; prod [1,2,3,4,5]\n*** Exception: &lt;interactive&gt;:139:1-27: Non-exhaustive patterns in function prod\n</code></pre>\n\n<p>I must be missing a pattern, but what is it? Also, how do I such errors? How should I think when defining a function using pattern matching? (I'm asking for a methodolgy/technique)</p>\n"}, {"tags": ["list", "haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1522169317, "post_id": 49518370, "comment_id": 86042293, "body": "Instead of looking for a function, can you think of what pattern you would need."}, {"owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 0, "creation_date": 1522170031, "post_id": 49518370, "comment_id": 86042688, "body": "What would be the signature of such a function?"}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1522173349, "post_id": 49518370, "comment_id": 86044425, "body": "more or less duplicate of <a href=\"https://stackoverflow.com/questions/30551033/swap-two-elements-in-a-list-by-its-indices\" title=\"swap two elements in a list by its indices\">stackoverflow.com/questions/30551033/&hellip;</a>"}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1522173815, "post_id": 49518370, "comment_id": 86044688, "body": "also <a href=\"https://gist.github.com/ijt/2010183\" rel=\"nofollow noreferrer\">gist.github.com/ijt/2010183</a>"}], "answers": [{"comments": [{"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1522182771, "post_id": 49518905, "comment_id": 86049745, "body": "Nice. But it&#39;s not clear whether the OP wants to identify the element to be shifted by its index (like you do) or by its value (like the other answer)."}], "tags": [], "owner": {"reputation": 303, "user_id": 9557757, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/dNmFv.png?s=128&g=1", "display_name": "Scarabyte", "link": "https://stackoverflow.com/users/9557757/scarabyte"}, "is_accepted": false, "score": 1, "last_activity_date": 1522171153, "creation_date": 1522171153, "answer_id": 49518905, "question_id": 49518370, "link": "https://stackoverflow.com/questions/49518370/how-to-move-1-element-of-a-list-to-right-or-left-in-haskell/49518905#49518905", "title": "How to move 1 element of a List to right or left in Haskell?", "body": "<pre><code>swapElementsAt :: Int -&gt; [a] -&gt; [a]                                             \nswapElementsAt n list = let (beg, a:b:rest) = splitAt (n-1) list in beg ++ b:a:rest\n</code></pre>\n\n<p>It works like</p>\n\n<pre><code>\u03bb&gt; swapElementsAt 3 [1,10,4,5,3]\n[1,10,5,4,3]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1349, "user_id": 7655081, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2b23af7029d2ec53c15d8d9d2cccb0bb?s=128&d=identicon&r=PG&f=1", "display_name": "0xd34df00d", "link": "https://stackoverflow.com/users/7655081/0xd34df00d"}, "is_accepted": true, "score": 0, "last_activity_date": 1522171376, "creation_date": 1522171376, "answer_id": 49518965, "question_id": 49518370, "link": "https://stackoverflow.com/questions/49518370/how-to-move-1-element-of-a-list-to-right-or-left-in-haskell/49518965#49518965", "title": "How to move 1 element of a List to right or left in Haskell?", "body": "<p>Consider how would you write this function if you were to traverse the input list from left to right looking at a very local vicinity of the beginning of the list (since that's what you can easily pattern-match on).</p>\n\n<p>The most straightforward way would be to pattern-match on the first two elements, and check if the second element matches your pattern. If so, just build a new list by swapping these elements and appending the remainder of the list, otherwise, go recursively over the rest.</p>\n\n<p>In code:</p>\n\n<pre><code>swapElem :: Eq a =&gt; a -&gt; [a] -&gt; [a]\nswapElem e (x:y:xs) | y == e = y : x : xs\nswapElem e (x:xs) = x : swapElem e xs\nswapElem _ [] = []\n</code></pre>\n\n<p>The first pattern only matches when there are at least two elements in the list, and the second element is equal to the desired one. If there are less elements or the second element is not the right one, it will fall through to the second pattern, that matches arbitrary non-empty list and calls <code>swapElem</code> on the remainder of the list. The third pattern is there to provide the base recursion case of an empty input list.</p>\n\n<p>Note this code only changes the first occurrence of the target element:</p>\n\n<pre><code>Prelude&gt; swapElem 5 [1, 10, 4, 5, 3]\n[1,10,5,4,3]\nPrelude&gt; swapElem 5 [1, 10, 5, 4, 5, 3]\n[1,5,10,4,5,3]\n</code></pre>\n\n<p>How would you change it so that it left-shifts all <code>5</code>s?</p>\n\n<p>Also, the answer depends on what exactly is your input. The answer by @Scarabyte considers the case where you're given the position of the target element, while this approach instead considers the element that you want to shift left.</p>\n"}], "owner": {"reputation": 41, "user_id": 7215941, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c750e494a7c173026b35c1e6108c220f?s=128&d=identicon&r=PG&f=1", "display_name": "U\u011furcan \u015eahin", "link": "https://stackoverflow.com/users/7215941/u%c4%9furcan-%c5%9eahin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 741, "favorite_count": 0, "accepted_answer_id": 49518965, "answer_count": 2, "score": 2, "last_activity_date": 1522171376, "creation_date": 1522169211, "last_edit_date": 1522169295, "question_id": 49518370, "link": "https://stackoverflow.com/questions/49518370/how-to-move-1-element-of-a-list-to-right-or-left-in-haskell", "title": "How to move 1 element of a List to right or left in Haskell?", "body": "<p>Hi I have been looking for an answer but could not find one. Lets say that we have a list like <code>[1,10,4,5,3]</code> how can I shift 5 to left so that this list becomes <code>[1,10,5,4,3]</code>.</p>\n\n<p>I tried to <code>swapElementsAt</code> by finding the index of that element but it looks very insufficient.</p>\n"}, {"tags": ["haskell", "typeclass", "monoids"], "comments": [{"owner": {"reputation": 1349, "user_id": 7655081, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2b23af7029d2ec53c15d8d9d2cccb0bb?s=128&d=identicon&r=PG&f=1", "display_name": "0xd34df00d", "link": "https://stackoverflow.com/users/7655081/0xd34df00d"}, "edited": false, "score": 0, "creation_date": 1522166679, "post_id": 49517453, "comment_id": 86040563, "body": "Do you want to have <code>mappend = undefined</code> in your real <code>Monoid</code> instance, or will it join somehow two <code>Options</code> values?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1522166730, "post_id": 49517453, "comment_id": 86040606, "body": "You could do this, but it makes me wonder whether we will save much effort with this. The idea of definining a <code>Monoid</code> is to define such <code>mempty</code> &quot;for once and for all&quot;."}, {"owner": {"reputation": 4113, "user_id": 4601931, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4785004388498e25bc6794fe1d9d4a38?s=128&d=identicon&r=PG&f=1", "display_name": "user4601931", "link": "https://stackoverflow.com/users/4601931/user4601931"}, "reply_to_user": {"reputation": 1349, "user_id": 7655081, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2b23af7029d2ec53c15d8d9d2cccb0bb?s=128&d=identicon&r=PG&f=1", "display_name": "0xd34df00d", "link": "https://stackoverflow.com/users/7655081/0xd34df00d"}, "edited": false, "score": 0, "creation_date": 1522167001, "post_id": 49517453, "comment_id": 86040775, "body": "@0xd34df00d I left it <code>undefined</code> because it&#39;s not part of the question.  I will, of course, eventually define it."}, {"owner": {"reputation": 4113, "user_id": 4601931, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4785004388498e25bc6794fe1d9d4a38?s=128&d=identicon&r=PG&f=1", "display_name": "user4601931", "link": "https://stackoverflow.com/users/4601931/user4601931"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1522167115, "post_id": 49517453, "comment_id": 86040841, "body": "@WillemVanOnsem I can write <code>Nothing</code> fifteen times, for sure.  I was just wondering if there was a slick way to populate a record type with all the same value.  Or maybe a way to use the monoid instance for <code>Maybe a</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1522168115, "post_id": 49517453, "comment_id": 86041552, "body": "You can use <code>Monoid</code> instance for <code>Maybe a</code>, but it doesn&#39;t solve the problem you are asking about: <code>mempty = Options mempty mempty mempty</code>."}], "answers": [{"comments": [{"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1522171856, "post_id": 49517842, "comment_id": 86043637, "body": "I think spelling the field names out directly actually makes it more likely that you\u2019d miss a case here, since it will no longer give an error if there is a missing one."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 1, "creation_date": 1522172806, "post_id": 49517842, "comment_id": 86044145, "body": "@DavidYoung <code>-Wmissing-fields</code> is on by default."}, {"owner": {"reputation": 4113, "user_id": 4601931, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4785004388498e25bc6794fe1d9d4a38?s=128&d=identicon&r=PG&f=1", "display_name": "user4601931", "link": "https://stackoverflow.com/users/4601931/user4601931"}, "edited": false, "score": 0, "creation_date": 1522174463, "post_id": 49517842, "comment_id": 86045096, "body": "Thanks for your answer.  I went with just writing out all the fields, as I agree it&#39;s the most thoughtful way to do it.  (&quot;Explicit is better than implicit&quot; or some such thing.)"}], "tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": true, "score": 5, "last_activity_date": 1522167848, "last_edit_date": 1522167848, "creation_date": 1522167386, "answer_id": 49517842, "question_id": 49517453, "link": "https://stackoverflow.com/questions/49517453/defining-a-monoid-instance-for-a-record-type/49517842#49517842", "title": "Defining a monoid instance for a record type", "body": "<p>I would recommend just writing the <code>Nothing</code>s, or even spelling out all the record fields explicitly, so you can be sure you don\u2019t miss a case when adding new fields with a different <code>mempty</code> value, or reordering fields:</p>\n\n<pre><code>mempty = Options\n  { _optionOne = Nothing\n  , _optionTwo = Nothing\n  , _optionThree = Nothing\n  }\n</code></pre>\n\n<p>I haven\u2019t tried it before, but it seems you can use the <a href=\"https://hackage.haskell.org/package/generic-deriving-1.12.1\" rel=\"noreferrer\">generic-deriving</a> package for this purpose, as long as all the fields of your record are <code>Monoid</code>s. You would add the following language pragma and imports:</p>\n\n<pre><code>{-# LANGUAGE DeriveGeneric #-}\nimport GHC.Generics (Generic)\nimport Generics.Deriving.Monoid\n</code></pre>\n\n<p>Add <code>deriving (Generic)</code> to your data type and wrap all your non-<code>Monoid</code> fields in a type from <code>Data.Monoid</code> with the combining behaviour you want, such as <code>First</code>, <code>Last</code>, <code>Sum</code>, or <code>Product</code>:</p>\n\n<pre><code>data Options = Options\n  { _optionOne :: Last Integer\n  , _optionTwo :: Last Integer\n  , _optionThree :: Maybe String\n  } deriving (Generic, Show)\n</code></pre>\n\n<p>Examples:</p>\n\n<ul>\n<li><code>Last (Just 2) &lt;&gt; Last (Just 3)</code> = <code>Last {getLast = Just 3}</code></li>\n<li><code>First (Just 2) &lt;&gt; First (Just 3)</code> = <code>First {getFirst = Just 2}</code></li>\n<li><code>Sum 2 &lt;&gt; Sum 3</code> = <code>Sum {getSum = 5}</code></li>\n<li><code>Product 2 &lt;&gt; Product 3</code> = <code>Product {getProduct = 6}</code></li>\n</ul>\n\n<p>Then use the following function(s) from <code>Generics.Deriving.Monoid</code> to make your default instance:</p>\n\n<pre><code>memptydefault :: (Generic a, Monoid' (Rep a)) =&gt; a\nmappenddefault :: (Generic a, Monoid' (Rep a)) =&gt; a -&gt; a -&gt; a\n</code></pre>\n\n<p>In context:</p>\n\n<pre><code>instance Monoid Options where\n  mempty = memptydefault\n  mappend = ...\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1349, "user_id": 7655081, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2b23af7029d2ec53c15d8d9d2cccb0bb?s=128&d=identicon&r=PG&f=1", "display_name": "0xd34df00d", "link": "https://stackoverflow.com/users/7655081/0xd34df00d"}, "is_accepted": false, "score": 3, "last_activity_date": 1522167819, "last_edit_date": 1522167819, "creation_date": 1522167460, "answer_id": 49517862, "question_id": 49517453, "link": "https://stackoverflow.com/questions/49517453/defining-a-monoid-instance-for-a-record-type/49517862#49517862", "title": "Defining a monoid instance for a record type", "body": "<p>If the <code>Monoid</code> instance for your record type follows naturally from the <code>Monoid</code> instances of the record fields, then you could use <a href=\"https://hackage.haskell.org/package/generic-deriving-1.12.1/docs/Generics-Deriving-Monoid.html\" rel=\"nofollow noreferrer\">Generics.Deriving.Monoid</a>. The code could would look like this:</p>\n\n<pre><code>{-# LANGUAGE DeriveGeneric #-}\n\nimport GHC.Generics\nimport Generics.Deriving.Monoid\n\ndata Options = { .. your options .. }\n             deriving (Show, Generic)\n\ninstance Monoid Options where\n  mempty = memptydefault\n  mappend = mappenddefault\n</code></pre>\n\n<p>Note that the record fields have to be <code>Monoid</code> too, so you will have to wrap your <code>Integer</code>s into <code>Sum</code> or <code>Product</code> (or possibly some other <code>newtype</code>) depending on the exact behavior you want.</p>\n\n<p>Then, assuming you want the resulting monoid to be synced with addition on top of <code>Integer</code> and use the <code>Sum</code> newtype, the resulting behavior would be:</p>\n\n<pre><code>&gt; mempty :: Options\nOptions {_optionOne = Nothing, _optionTwo = Nothing, _optionThree = Nothing}\n&gt; Options (Just $ Sum 1) (Just $ Sum 2) (Just $ Sum 3) &lt;&gt; Options (Just $ Sum 1) (Just $ Sum 2) Nothing\nOptions {_optionOne = Just (Sum {getSum = 2}), _optionTwo = Just (Sum {getSum = 4}), _optionThree = Just (Sum {getSum = 3})}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1197, "user_id": 4051020, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/42660a4e623fd8d2c850081291bcb585?s=128&d=identicon&r=PG&f=1", "display_name": "dopamane", "link": "https://stackoverflow.com/users/4051020/dopamane"}, "is_accepted": false, "score": 1, "last_activity_date": 1602418387, "creation_date": 1602418387, "answer_id": 64303877, "question_id": 49517453, "link": "https://stackoverflow.com/questions/49517453/defining-a-monoid-instance-for-a-record-type/64303877#64303877", "title": "Defining a monoid instance for a record type", "body": "<p>Check out the <a href=\"http://hackage.haskell.org/package/generic-monoid\" rel=\"nofollow noreferrer\">generic-monoid</a> package on hackage. Specifically, the <a href=\"http://hackage.haskell.org/package/generic-monoid-0.1.0.1/docs/Data-Monoid-Generic.html\" rel=\"nofollow noreferrer\">Data.Monoid.Generic</a> module. We can automatically derive the semigroup and monoid instances with the <a href=\"https://downloads.haskell.org/%7Eghc/latest/docs/html/users_guide/glasgow_exts.html#extension-DerivingVia\" rel=\"nofollow noreferrer\">DerivingVia</a> extension. That way you can avoid having to write extensive <code>mappend</code> and <code>mempty</code> functions when your records are large and every field in the record is already a monoid. The documentation gives the following example:</p>\n<pre><code>data X = X [Int] String\n  deriving (Generic, Show, Eq)\n  deriving Semigroup via GenericSemigroup X\n  deriving Monoid    via GenericMonoid X\n</code></pre>\n<p>This works because <code>[Int]</code> is a monoid and <code>String</code> is a monoid. In both fields <code>mappend</code> is concatenation and <code>mempty</code> is the empty list <code>[]</code> and empty string <code>&quot;&quot;</code>.Therefore we can make <code>X</code> a monoid.</p>\n<pre><code>X [] &quot;&quot; == (mempty :: X)\nTrue\n</code></pre>\n<p>Keep in mind, Haskell requires that you need a semigroup if you want to define a Monoid. We see that the <a href=\"https://hackage.haskell.org/package/base-4.14.0.0/docs/Data-Monoid.html#t:Monoid\" rel=\"nofollow noreferrer\">typeclass of Monoid</a> has the <code>Semigroup</code> constraint:</p>\n<pre><code>class Semigroup a =&gt; Monoid a where\n ...\n</code></pre>\n<p>Unfortunately not all fields are monoids in your <code>Option</code> record. Specifically, <code>Maybe Int</code> does not satisfy the <code>Semigroup</code> constraint out-of-the-box because Haskell doesn't know how you want to <code>mappend</code> two <code>Int</code>s, perhaps you would add <code>(+)</code> them or maybe you'd like to multiply <code>(*)</code> them etc. We can fix this easily by borrowing common monoids from <a href=\"https://hackage.haskell.org/package/base-4.14.0.0/docs/Data-Monoid.html\" rel=\"nofollow noreferrer\">Data.Monoid</a> (or writing our own) and making all the fields of <code>Option</code> monoids.</p>\n<pre><code>{-# DeriveGeneric #-}\n{-# DerivingVia   #-}\n\nimport GHC.Generics\nimport Data.Monoid\nimport Data.Monoid.Generic\n\ndata Options = Options\n  { _optionOne   :: First Integer\n  , _optionTwo   :: Sum   Integer\n  , _optionThree :: Maybe String\n  } \n  deriving (Generic, Show, Eq)\n  deriving Semigroup via GenericSemigroup Options\n  deriving Monoid    via GenericMonoid Options\n</code></pre>\n<p>You left the <code>mappend</code> function undefined in the question so I just picked some monoids at random to show variety (you may find the <a href=\"https://hackage.haskell.org/package/base-4.14.0.0/docs/Data-Monoid.html#g:4\" rel=\"nofollow noreferrer\"><code>Maybe</code> wrappers</a> interesting because their <code>mempty</code> is <code>Nothing</code>). <code>First</code>'s <code>mappend</code> always picks the first argument over the second and its <code>mempty</code> is <code>Nothing</code>. <code>Sum</code>'s <code>mappend</code> just adds <code>Integer</code>s and its <code>mempty</code> is zero <code>0</code>. <code>Maybe String</code> is already a monoid with <code>mappend</code> as <code>String</code> concatenation and <code>mempty</code> as <code>Nothing</code>. Once each field is a monoid, we can derive the semigroup and monoid via <code>GenericSemigroup</code> and <code>GenericMonoid</code>.</p>\n<pre><code>mempty :: Options\nOptions {\n  _optionOne = First { getFirst = Nothing },\n  _optionTwo = Sum { getSum = 0 },\n  _optionThree = Nothing\n}\n</code></pre>\n<p>Indeed, <code>mempty</code> matches our expectation and we didn't have to write any monoid or semigroup instances for our <code>Options</code> type. Haskell was able to derive it for us!</p>\n<p>P.S. A quick note about using <code>Maybe a</code> as a monoid. Its <code>mempty</code> is <code>Nothing</code>, but it also requires <code>a</code> to be a semigroup. If either argument to <code>mappend</code> (or since we're talking about semigroups its <code>&lt;&gt;</code>) is <code>Nothing</code>, then the other argument is chosen. However, if both arguments are <code>Just</code>, we use <code>a</code>'s underlying semigroup instance's <code>&lt;&gt;</code>.</p>\n<pre><code>instance Semigroup a =&gt; Semigroup (Maybe a) where\n    Nothing &lt;&gt; b       = b\n    a       &lt;&gt; Nothing = a\n    Just a  &lt;&gt; Just b  = Just (a &lt;&gt; b)\n\ninstance Semigroup a =&gt; Monoid (Maybe a) where\n    mempty = Nothing\n</code></pre>\n"}], "owner": {"reputation": 4113, "user_id": 4601931, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4785004388498e25bc6794fe1d9d4a38?s=128&d=identicon&r=PG&f=1", "display_name": "user4601931", "link": "https://stackoverflow.com/users/4601931/user4601931"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 500, "favorite_count": 1, "accepted_answer_id": 49517842, "answer_count": 3, "score": 5, "last_activity_date": 1602418387, "creation_date": 1522166131, "question_id": 49517453, "link": "https://stackoverflow.com/questions/49517453/defining-a-monoid-instance-for-a-record-type", "title": "Defining a monoid instance for a record type", "body": "<p>Suppose I have a type like </p>\n\n<pre><code>data Options = Options\n  { _optionOne :: Maybe Integer\n  , _optionTwo :: Maybe Integer\n  , _optionThree :: Maybe String\n  } deriving Show\n</code></pre>\n\n<p>with many more fields.  I would like to define a <code>Monoid</code> instance for this type, for which the <code>mempty</code> value is an <code>Options</code> with all fields <code>Nothing</code>.  Is there a more concise way to write this than</p>\n\n<pre><code>instance Monoid Options where\n  mempty = Options Nothing Nothing Nothing\n  mappend = undefined\n</code></pre>\n\n<p>which would avoid the need to write a bunch of <code>Nothing</code>s when my <code>Options</code> has a ton more fields?</p>\n"}, {"tags": ["haskell", "types", "alias"], "comments": [{"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 1, "creation_date": 1522167190, "post_id": 49516850, "comment_id": 86040894, "body": "pattern synonyms may be what you want, but for what you&#39;re strictly asking about here you can just define <code>one = Symbol 1</code>, <code>zero = Blank</code>, etc."}], "answers": [{"comments": [{"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 0, "creation_date": 1522168677, "post_id": 49517076, "comment_id": 86041905, "body": "Just to expand on this a bit, with a bidirectional pattern synonym, <code>One</code> is equivalent to <code>Symbol 1</code> <i>both</i> when used as a pattern (definition <code>func One = impl</code> = <code>func (Symbol 1) = impl</code>) <i>and</i> when used as a value constructor (call <code>func One</code> = <code>func (Symbol 1)</code>)."}, {"owner": {"reputation": 3257, "user_id": 3578468, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7957773c9ae23195b8a064ade49af29?s=128&d=identicon&r=PG&f=1", "display_name": "lo tolmencre", "link": "https://stackoverflow.com/users/3578468/lo-tolmencre"}, "edited": false, "score": 0, "creation_date": 1522173515, "post_id": 49517076, "comment_id": 86044506, "body": "Can&#39;t get this to work. Always getting <code>Invalid type signature: pattern Zero :: ...     Perhaps you meant to use PatternSynonyms?</code>. Why is that?"}, {"owner": {"reputation": 374, "user_id": 1465449, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/8d5d5d4b1efba2d0396ceac6e67a0d6f?s=128&d=identicon&r=PG", "display_name": "heisenbug", "link": "https://stackoverflow.com/users/1465449/heisenbug"}, "edited": false, "score": 0, "creation_date": 1522184273, "post_id": 49517076, "comment_id": 86050453, "body": "@Io tolmencre, pattern synonyms are not in the base Haskell language. They can be enabled in GHC with <code>{-# Language PatternSynonyms #-}</code> (a language pragma) at the top of the source file. A good editor will suggest and do this for you."}, {"owner": {"reputation": 3257, "user_id": 3578468, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7957773c9ae23195b8a064ade49af29?s=128&d=identicon&r=PG&f=1", "display_name": "lo tolmencre", "link": "https://stackoverflow.com/users/3578468/lo-tolmencre"}, "reply_to_user": {"reputation": 374, "user_id": 1465449, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/8d5d5d4b1efba2d0396ceac6e67a0d6f?s=128&d=identicon&r=PG", "display_name": "heisenbug", "link": "https://stackoverflow.com/users/1465449/heisenbug"}, "edited": false, "score": 0, "creation_date": 1522185114, "post_id": 49517076, "comment_id": 86050850, "body": "@heisenbug Oh thanks, I did not put that line at the very top of the file but just above the <code>pattern ...</code> stuff"}], "tags": [], "owner": {"reputation": 3603, "user_id": 165806, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/c889e0a95a3bb07f90ab28ad442f1127?s=128&d=identicon&r=PG", "display_name": "Iceland_jack", "link": "https://stackoverflow.com/users/165806/iceland-jack"}, "is_accepted": true, "score": 6, "last_activity_date": 1522165025, "creation_date": 1522165025, "answer_id": 49517076, "question_id": 49516850, "link": "https://stackoverflow.com/questions/49516850/aliases-for-value-constructors/49517076#49517076", "title": "Aliases for Value Constructors", "body": "<pre><code>{-# Language PatternSynonyms #-}\n\npattern Zero :: Symbol a\npattern Zero = Blank\n\npattern One :: (Eq a, Num a) =&gt; Symbol a\npattern One = Symbol 1\n</code></pre>\n\n<p>works (bidirectional pattern synonym)</p>\n"}], "owner": {"reputation": 3257, "user_id": 3578468, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7957773c9ae23195b8a064ade49af29?s=128&d=identicon&r=PG&f=1", "display_name": "lo tolmencre", "link": "https://stackoverflow.com/users/3578468/lo-tolmencre"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 188, "favorite_count": 0, "accepted_answer_id": 49517076, "answer_count": 1, "score": 4, "last_activity_date": 1522165025, "creation_date": 1522164308, "last_edit_date": 1522164383, "question_id": 49516850, "link": "https://stackoverflow.com/questions/49516850/aliases-for-value-constructors", "title": "Aliases for Value Constructors", "body": "<p>Is it possible to define aliases for value constructors? The context is this: I am writing a program, that implements primitive recursive functions as Turing machines. For that I am working with unary integer encoding. My Turing machine type is defined like this:</p>\n\n<pre><code>-- definition of a Turing machine\ndata TuringMachine a = TuringMachine\n                     State      -- q0\n                     (Set State) -- F\n                     (Set State) -- Q\n                     (Set (Symbol a)) -- Gamma\n                     (Set (Symbol a)) -- Sigma\n                     (Map (State, Symbol a) (State, Symbol a, Instruction)) -- delta\n                     deriving (Show)\n</code></pre>\n\n<p>where my symbol type is defined like this:</p>\n\n<pre><code>data Symbol a = Symbol a | Blank | Delim | Final | One deriving (Eq, Ord)\n</code></pre>\n\n<p>I have <code>One</code> as a convenience in there, so I don't need to write <code>Symbol 1</code> everywhere. But that is a little untidy. I would like to define an alias outside of the type <code>Symbol</code>, like</p>\n\n<pre><code>alias One = Symbol 1\n</code></pre>\n\n<p>and</p>\n\n<pre><code>alias Zero = Blank\n</code></pre>\n\n<p>Is something like that possible?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1522162433, "post_id": 49516156, "comment_id": 86037458, "body": "For Aeson, I suggest you use <code>withObject</code> <a href=\"https://hackage.haskell.org/package/aeson-1.3.0.0/docs/Data-Aeson.html#v:withObject\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/aeson-1.3.0.0/docs/&hellip;</a>. In case you want to handle it yourself, for <code>Aeson</code> the idea is to <code>typeMismatch expected v</code>. Such that the parser can provide a useful error in case it goes wrong anyway."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1522162556, "post_id": 49516156, "comment_id": 86037550, "body": "After all, usually the idea is to see functions as independent building stones. So one function does not provide much context to another. Each function should aim to implement the specifications as complete as possible I would say (so a &quot;total&quot; approach)."}, {"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1522162840, "post_id": 49516156, "comment_id": 86037773, "body": "It&#39;s not parsing. I get representation of some entity with <code>toJSON something</code> then I want to add field to the resulting record (HashMap), so I unpack <code>Value</code> (expect it as <code>Object</code>) and insert other field (<code>HM.insert addKey addValue myObj</code>). So, I know that <code>toJSON something</code> returns <code>Value</code> with <code>Object</code> term but when I pattern-matching on it, I need to write something for other constructors (terms)"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1522163175, "post_id": 49516156, "comment_id": 86038077, "body": "As mentioned above, there are Aeson-specific solutions.  In general you either a) rework the types to eliminate the unused pattern or 2) Use something like <code>error &quot;Impossible: blah blah blah&quot;</code>."}, {"owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "edited": false, "score": 0, "creation_date": 1522244347, "post_id": 49516156, "comment_id": 86078650, "body": "@Paul-AG You should still handle the &quot;impossible&quot; case gracefully so that your code can be used in other contexts. For instance if some day someone wants to actually parse real JSON from a text file, they are going to want to have the typeMismatch calls included as per Willem Van Onsem&#39;s comment."}], "answers": [{"tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": false, "score": 7, "last_activity_date": 1522167704, "creation_date": 1522167704, "answer_id": 49517932, "question_id": 49516156, "link": "https://stackoverflow.com/questions/49516156/how-to-mark-unreachable-cases-in-pattern-matching/49517932#49517932", "title": "How to mark unreachable cases in pattern matching", "body": "<p>Having impossible constructors is a common occurrence in Haskell and can/is handled one of two ways depending on the situation and the style.  Many developers, especially those who favor a Haskell 98 style of code, will simply indicate the impossible cases via an error:</p>\n\n<pre><code>data SumType1 = ConstrA | ConstrB | ConstrC\n\nanyConstr :: SumType1 -&gt; Int\nanyConstr ConstrA = 1\nanyConstr ConstrB = 2\nanyConstr ConstrC = 3\n\nonlyConstrA :: SumType1 -&gt; Int\nonlyConstrA ConstrA = 1\nonlyConstrA _ = error \"Impossible: internal error, passed wrong constructor.\"\n</code></pre>\n\n<p>However, this is both unsatisfying and requiring the developer to ensure safety when the compiler is capable and much more reliable.  The common solution is to use a type that can only represent ConstrA.  You could have the <code>SumType1</code> be a sum of two types one of which has a field that is \"ConstrAType\" but that sort of refactoring can be really draining.  Sometimes I prefer a GADT solution:</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\n{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE KindSignatures #-}\n\ndata SumTag = A | Anything\ndata SumType (a :: SumTag) where\n     ConstrA :: SumType A\n     ConstrB :: SumType Anything\n     ConstrC :: SumType Anything\n\ndoAnything :: SumType a -&gt; Int\ndoAnything ConstrA = 1\ndoAnything ConstrB = 2\ndoAnything ConstrC = 3\n\nonlyConstrA :: SumType A -&gt; Int\nonlyConstrA ConstrA = 1\n</code></pre>\n\n<p>Now the function <code>onlyConstrA</code> has a type that clearly shows (when considered in conjunction with the data declaration) it can only be applied to the <code>ConstrA</code> constructor.  At the same time we haven't lost any power, for example <code>doAnything</code> doesn't need to consider a hairy bisection of the original SumType1 into various types - the constructors are all from the same original type.</p>\n"}], "owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 287, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1522167704, "creation_date": 1522162340, "question_id": 49516156, "link": "https://stackoverflow.com/questions/49516156/how-to-mark-unreachable-cases-in-pattern-matching", "title": "How to mark unreachable cases in pattern matching", "body": "<p>What is the standard way to \"mark\" unreachable cases in pattern-matching expression? For example, with Aeson, I have Value and need to unpack it. I do it with pattern matching and I know that it's Object and it's not Array, String, Number, etc, because I created it. So, I will have case like <code>_ -&gt; something</code>. What must be <code>something</code>? I mean standard Haskell, not LiquidHaskell approaches :)  Is it something like <code>error \"Internal error\"</code> or something else?</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 3, "last_activity_date": 1522151145, "creation_date": 1522151145, "answer_id": 49512048, "question_id": 49511315, "link": "https://stackoverflow.com/questions/49511315/how-to-get-subtotal-time-stats-for-subexpressions-in-haskell/49512048#49512048", "title": "How to get subtotal time stats for subexpressions in Haskell", "body": "<p>For measuring performance, GHCi is not a good choice, since it often runs interpreted code, and does not optimize the code as GHC (the compiler) does. It is much better to <em>compile</em> the code with GHC, turning on optimizations <code>-O</code>.</p>\n\n<p>When compiling, you can also turn on the <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/profiling.html\" rel=\"nofollow noreferrer\"><em>profiler</em></a> with <code>-prof -fprof-auto</code>. Doing so, running <code>yourProgram +RTS -p</code> will produce a report with all the costs for individual bindings (e.g. functions), helping you to identify the bottlenecks. You should be able, in this way, to obtain some report like this:</p>\n\n<pre><code>COST CENTRE MODULE                  no.     entries  %time %alloc   %time %alloc\n\nMAIN        MAIN                    102           0    0.0    0.0   100.0  100.0\n CAF        GHC.IO.Handle.FD        128           0    0.0    0.0     0.0    0.0\n CAF        GHC.IO.Encoding.Iconv   120           0    0.0    0.0     0.0    0.0\n CAF        GHC.Conc.Signal         110           0    0.0    0.0     0.0    0.0\n CAF        Main                    108           0    0.0    0.0   100.0  100.0\n  main      Main                    204           1    0.0    0.0   100.0  100.0\n   main.g   Main                    207           1    0.0    0.0     0.0    0.1\n    fib     Main                    208        1973    0.0    0.1     0.0    0.1\n   main.f   Main                    205           1    0.0    0.0   100.0   99.9\n    fib     Main                    206     2692537  100.0   99.9   100.0   99.9\n</code></pre>\n\n<p>You could also consider using the <a href=\"http://hackage.haskell.org/package/criterion-1.4.0.0/docs/Criterion.html\" rel=\"nofollow noreferrer\"><code>criterion</code></a> library to perform benchmarks. This is quite useful when trying to compare different implementations for the same function.</p>\n"}], "owner": {"reputation": 607, "user_id": 7723714, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/e0832d8187c62349d3a8aac8bb77ddaf?s=128&d=identicon&r=PG&f=1", "display_name": "micsza", "link": "https://stackoverflow.com/users/7723714/micsza"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 48, "favorite_count": 1, "accepted_answer_id": 49512048, "answer_count": 1, "score": 1, "last_activity_date": 1522154403, "creation_date": 1522148876, "last_edit_date": 1522154403, "question_id": 49511315, "link": "https://stackoverflow.com/questions/49511315/how-to-get-subtotal-time-stats-for-subexpressions-in-haskell", "title": "How to get subtotal time stats for subexpressions in Haskell", "body": "<p>I'm trying to improve time performance (measured by <code>:set +s</code>) of my <code>main</code> and need to identify some bottlenecks. <code>main</code> invokes many functions that invoke <code>foo</code>. Is there a simple way to get GHCi to report the total time spent on multiple subcalls of <code>foo</code> only?  </p>\n"}, {"tags": ["haskell", "pattern-matching", "monads"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1522143509, "post_id": 49508856, "comment_id": 86022733, "body": "Perhaps this is related: <a href=\"https://stackoverflow.com/questions/28526768/is-there-in-haskell-something-similar-to-sub-guards\" title=\"is there in haskell something similar to sub guards\">stackoverflow.com/questions/28526768/&hellip;</a>"}, {"owner": {"reputation": 7268, "user_id": 2303202, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/iT9aU.png?s=128&g=1", "display_name": "max630", "link": "https://stackoverflow.com/users/2303202/max630"}, "edited": false, "score": 0, "creation_date": 1522152233, "post_id": 49508856, "comment_id": 86029096, "body": "&quot;computation can fail when run, in which case I want the whole pattern match to fail, so to speak&quot; seem to contradict with &quot;When the first computation fails due to the guard or somewhere in compute, I want f to try the next pattern&quot;. If you want to have 2 types of failures - permanent and try next pattern, then you should have 2 layers of Maybe"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 1, "creation_date": 1522153176, "post_id": 49508856, "comment_id": 86029895, "body": "I think it&#39;s pretty clear from the code he means that the computation under the current branch should fail."}, {"owner": {"reputation": 3295, "user_id": 388010, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/f6c6f0feb5cb53e7023d5d9ecc443767?s=128&d=identicon&r=PG", "display_name": "Sebastian Graf", "link": "https://stackoverflow.com/users/388010/sebastian-graf"}, "edited": false, "score": 0, "creation_date": 1522153588, "post_id": 49508856, "comment_id": 86030188, "body": "Exactly. I edited that part."}, {"owner": {"reputation": 521, "user_id": 7126380, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/10207438513426512/picture?type=large", "display_name": "Johnny Liao", "link": "https://stackoverflow.com/users/7126380/johnny-liao"}, "edited": false, "score": 0, "creation_date": 1522158723, "post_id": 49508856, "comment_id": 86034311, "body": "What is your case spliting pattern for a b? Maybe it can be done another way. Something like generateCases a b &gt;&gt;= asum commute"}, {"owner": {"reputation": 521, "user_id": 7126380, "user_type": "registered", "accept_rate": 100, "profile_image": "https://graph.facebook.com/10207438513426512/picture?type=large", "display_name": "Johnny Liao", "link": "https://stackoverflow.com/users/7126380/johnny-liao"}, "edited": false, "score": 0, "creation_date": 1522159656, "post_id": 49508856, "comment_id": 86035056, "body": "Edit: generateCases a b &gt;&gt;= asum (commute &gt;&gt;= guard (==42))"}, {"owner": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "edited": false, "score": 0, "creation_date": 1522460345, "post_id": 49508856, "comment_id": 86174920, "body": "Regarding your edit, could you perhaps give such a more complex example?"}, {"owner": {"reputation": 3295, "user_id": 388010, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/f6c6f0feb5cb53e7023d5d9ecc443767?s=128&d=identicon&r=PG", "display_name": "Sebastian Graf", "link": "https://stackoverflow.com/users/388010/sebastian-graf"}, "edited": false, "score": 0, "creation_date": 1522493263, "post_id": 49508856, "comment_id": 86181476, "body": "I added a more concrete unification example."}], "answers": [{"comments": [{"owner": {"reputation": 3295, "user_id": 388010, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/f6c6f0feb5cb53e7023d5d9ecc443767?s=128&d=identicon&r=PG", "display_name": "Sebastian Graf", "link": "https://stackoverflow.com/users/388010/sebastian-graf"}, "edited": false, "score": 0, "creation_date": 1522249628, "post_id": 49514774, "comment_id": 86083027, "body": "See my last edit. While this is an answer specific to the snippet I&#39;ve given, the refactorings only apply limited to the code I was facing. This was helpful nonetheless!"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 3295, "user_id": 388010, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/f6c6f0feb5cb53e7023d5d9ecc443767?s=128&d=identicon&r=PG", "display_name": "Sebastian Graf", "link": "https://stackoverflow.com/users/388010/sebastian-graf"}, "edited": false, "score": 0, "creation_date": 1522327144, "post_id": 49514774, "comment_id": 86120014, "body": "@SebastianGraf Though I might be missing something, I think this strategy is more general than it might appear at first sight. See my latest edit."}, {"owner": {"reputation": 3295, "user_id": 388010, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/f6c6f0feb5cb53e7023d5d9ecc443767?s=128&d=identicon&r=PG", "display_name": "Sebastian Graf", "link": "https://stackoverflow.com/users/388010/sebastian-graf"}, "edited": false, "score": 0, "creation_date": 1522334943, "post_id": 49514774, "comment_id": 86126046, "body": "I don&#39;t think I can factor my <code>compute</code>ation into an <code>a -&gt; a -&gt; a</code> and a <code>a -&gt; f b</code>, because the branches have quite different logic actually, which probably leaves me with something like the other answer."}], "tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 3, "last_activity_date": 1522335339, "last_edit_date": 1522335339, "creation_date": 1522158718, "answer_id": 49514774, "question_id": 49508856, "link": "https://stackoverflow.com/questions/49508856/pattern-matching-in-alternative/49514774#49514774", "title": "Pattern matching in `Alternative`", "body": "<p>If you were using <code>Maybe</code> alone, you would be able to do this with pattern guards:</p>\n\n<pre><code>import Control.Monad\nimport Control.Applicative\n\nensure :: Alternative f =&gt; (a -&gt; Bool) -&gt; a -&gt; f a\nensure p a = a &lt;$ guard (p a)\n\ncompute :: Int -&gt; Maybe Int\ncompute = return\n\nf :: Maybe Int -&gt; Maybe Int -&gt; Maybe Int\nf (Just m) (Just n)\n    | Just x &lt;- ensure (== 42) =&lt;&lt; compute (m + n)\n    = return x\nf (Just m) _\n    | Just x &lt;- ensure (== 42) =&lt;&lt; compute m\n    = return x\nf _ (Just n)\n    | Just x &lt;- ensure (== 42) =&lt;&lt; compute n\n    = return x\nf _ _ = empty\n</code></pre>\n\n<p>(<code>ensure</code> is a general purpose combinator. Cf. <a href=\"https://stackoverflow.com/q/49281530/2751851\"><em>Lift to Maybe using a predicate</em></a>)</p>\n\n<p>As you have <code>StateT</code> on the top, though, you would have to supply a state in order to pattern match on <code>Maybe</code>, which would foul up everything. That being so, you are probably better off with something in the vein of your \"ugly\" solution. Here is a whimsical attempt at improving its looks:</p>\n\n<pre><code>import Control.Monad\nimport Control.Applicative\nimport Control.Monad.State\nimport Control.Monad.Trans\nimport Data.Foldable\n\nensure :: Alternative f =&gt; (a -&gt; Bool) -&gt; a -&gt; f a\nensure p a = a &lt;$ guard (p a)\n\ncompute :: Int -&gt; StateT () Maybe Int\ncompute = return\n\nf :: Maybe Int -&gt; Maybe Int -&gt; StateT () Maybe Int\nf a b = asum (map (\\c -&gt; f' (c a b)) [liftA2 (+), const, flip const])\n    where\n    f' = ensure (== 42) &lt;=&lt; compute &lt;=&lt; lift\n</code></pre>\n\n<blockquote>\n  <p>While this is an answer specific to the snippet I've given, the refactorings only apply limited to the code I was facing.</p>\n</blockquote>\n\n<p>Perhaps it's not that far-fetched of an idea to extract the skeleton of the <code>asum</code> expression above to a more general combinator:</p>\n\n<pre><code>-- A better name would be welcome.\nselector :: Alternative f =&gt; (a -&gt; a -&gt; a) -&gt; (a -&gt; f b) -&gt; a -&gt; a -&gt; f b\nselector g k x y = asum (fmap (\\sel -&gt; k (sel x y)) [g, const, flip const])\n\nf :: Maybe Int -&gt; Maybe Int -&gt; StateT () Maybe Int\nf = selector (liftA2 (+)) (ensure (== 42) &lt;=&lt; compute &lt;=&lt; lift)\n</code></pre>\n\n<p>Though it is perhaps a bit awkward of a combinator, <code>selector</code> does show the approach is more general than it might appear at first: the only significant restriction is that <code>k</code> has to produce results in some <code>Alternative</code> context.</p>\n\n<p>P.S.: While writing <code>selector</code> with <code>(&lt;|&gt;)</code> instead of <code>asum</code> is arguably more tasteful...</p>\n\n<pre><code>selector g k x y = k (g x y) &lt;|&gt; k x &lt;|&gt; k y\n</code></pre>\n\n<p>... the <code>asum</code> version straightforwardly generalises to an arbitrary number of pseudo-patterns:</p>\n\n<pre><code>selector :: Alternative f =&gt; [a -&gt; a -&gt; a] -&gt; (a -&gt; f b) -&gt; a -&gt; a -&gt; f b\nselector gs k x y = asum (fmap (\\g -&gt; k (g x y)) gs)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 3295, "user_id": 388010, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/f6c6f0feb5cb53e7023d5d9ecc443767?s=128&d=identicon&r=PG", "display_name": "Sebastian Graf", "link": "https://stackoverflow.com/users/388010/sebastian-graf"}, "edited": false, "score": 0, "creation_date": 1522249675, "post_id": 49518519, "comment_id": 86083078, "body": "I think I&#39;ll go with something like this in the end. But I&#39;ll wait for some more input before I decide which answer to accept."}], "tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": true, "score": 3, "last_activity_date": 1522170397, "last_edit_date": 1522170397, "creation_date": 1522169869, "answer_id": 49518519, "question_id": 49508856, "link": "https://stackoverflow.com/questions/49508856/pattern-matching-in-alternative/49518519#49518519", "title": "Pattern matching in `Alternative`", "body": "<p>When I need something like this, I just use <code>asum</code> with the blocks inlined. Here I also condensed the multiple patterns <code>Just n1 &lt;- pure a; Just n2 &lt;- pure b</code> into one, <code>(Just n1, Just n2) &lt;- pure (a, b)</code>.</p>\n\n<pre><code>f :: Maybe Int -&gt; Maybe Int -&gt; StateT () Maybe ()\nf a b = asum\n\n  [ do\n    (Just n1, Just n2) &lt;- pure (a, b)\n    m &lt;- compute (n1 + n2) \n    guard (m == 42)\n\n  , do\n    Just n &lt;- pure a\n    m &lt;- compute n\n    guard (m == 42)\n\n  , do\n    Just n &lt;- pure b\n    m &lt;- compute n\n    guard (m == 42)\n\n  ]\n</code></pre>\n\n<p>You can also use chains of <code>&lt;|&gt;</code>, if you prefer:</p>\n\n<pre><code>f :: Maybe Int -&gt; Maybe Int -&gt; StateT () Maybe ()\nf a b\n\n  = do\n    (Just n1, Just n2) &lt;- pure (a, b)\n    m &lt;- compute (n1 + n2) \n    guard (m == 42)\n\n  &lt;|&gt; do\n    Just n &lt;- pure a\n    m &lt;- compute n\n    guard (m == 42)\n\n  &lt;|&gt; do\n    Just n &lt;- pure b\n    m &lt;- compute n\n    guard (m == 42)\n</code></pre>\n\n<p>This is about as minimal as you can get for this kind of \u201cfallthrough\u201d.</p>\n"}, {"comments": [{"owner": {"reputation": 3295, "user_id": 388010, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/f6c6f0feb5cb53e7023d5d9ecc443767?s=128&d=identicon&r=PG", "display_name": "Sebastian Graf", "link": "https://stackoverflow.com/users/388010/sebastian-graf"}, "edited": false, "score": 1, "creation_date": 1522249766, "post_id": 49530572, "comment_id": 86083170, "body": "See my latest edit at the bottom of the question. I&#39;m afraid this solution is too overfitted to the code snippet I&#39;ve given."}, {"owner": {"reputation": 931, "user_id": 2631185, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/75f07727c65d676aa81eeb97b794cfa7?s=128&d=identicon&r=PG", "display_name": "Regis Kuckaertz", "link": "https://stackoverflow.com/users/2631185/regis-kuckaertz"}, "reply_to_user": {"reputation": 3295, "user_id": 388010, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/f6c6f0feb5cb53e7023d5d9ecc443767?s=128&d=identicon&r=PG", "display_name": "Sebastian Graf", "link": "https://stackoverflow.com/users/388010/sebastian-graf"}, "edited": false, "score": 0, "creation_date": 1522304954, "post_id": 49530572, "comment_id": 86105905, "body": "No worries, thanks for the update. In effect, you&#39;re saying there is no <code>Maybe Int</code> but instead some <code>f a</code> representing RHS expressions, am I right? Another observation is that your computation does not care  which branch of the pattern match is taken: does that still hold?"}, {"owner": {"reputation": 3295, "user_id": 388010, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/f6c6f0feb5cb53e7023d5d9ecc443767?s=128&d=identicon&r=PG", "display_name": "Sebastian Graf", "link": "https://stackoverflow.com/users/388010/sebastian-graf"}, "edited": false, "score": 0, "creation_date": 1522334694, "post_id": 49530572, "comment_id": 86125854, "body": "The computation is actually different for each branch. But something like what you suggested is what I would end up writing in absence of a better idea."}], "tags": [], "owner": {"reputation": 931, "user_id": 2631185, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/75f07727c65d676aa81eeb97b794cfa7?s=128&d=identicon&r=PG", "display_name": "Regis Kuckaertz", "link": "https://stackoverflow.com/users/2631185/regis-kuckaertz"}, "is_accepted": false, "score": 1, "last_activity_date": 1522320189, "last_edit_date": 1522320189, "creation_date": 1522228632, "answer_id": 49530572, "question_id": 49508856, "link": "https://stackoverflow.com/questions/49508856/pattern-matching-in-alternative/49530572#49530572", "title": "Pattern matching in `Alternative`", "body": "<p>It looks like you could get rid of the whole pattern match by relying on the fact that <code>Int</code> forms a <code>Monoid</code> with addition and <code>0</code> as the identity element, and that <code>Maybe a</code> forms a <code>Monoid</code> if <code>a</code> does. Then your function becomes:</p>\n\n<pre><code>f :: Maybe Int -&gt; Maybe Int -&gt; StateT () Maybe Int\nf a b = pure $ a &lt;&gt; b &gt;&gt;= compute &gt;&gt;= pure . mfilter (== 42)\n</code></pre>\n\n<p>You could generalise by passing the predicate as an argument:</p>\n\n<pre><code>f :: Monoid a =&gt; (a -&gt; Bool) -&gt; Maybe a -&gt; Maybe a -&gt; StateT () Maybe a\nf p a b = pure $ a &lt;&gt; b &gt;&gt;= compute &gt;&gt;= pure . mfilter p\n</code></pre>\n\n<p>The only thing is that <code>compute</code> is now taking a <code>Maybe Int</code> as input, but that is just a matter of calling <code>traverse</code> inside that function with whatever computation you need to do.</p>\n\n<hr>\n\n<p><strong>Edit</strong>: Taking into account your last edit, I find that if you spread your pattern matches into separate computations that may fail, then you can just write</p>\n\n<pre><code>f a b = f1 a b &lt;|&gt; f2 a b &lt;|&gt; f3 a b\n  where f1 (Just a) (Just b) = compute (a + b) &gt;&gt;= check\n        f1 _        _        = empty\n        f2 (Just a) _        = compute a &gt;&gt;= check\n        f2 _        _        = empty\n        f3 _        (Just b) = compute b &gt;&gt;= check\n        f3 _        _        = empty\n        check x              = guard (x == 42)\n</code></pre>\n"}], "owner": {"reputation": 3295, "user_id": 388010, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/f6c6f0feb5cb53e7023d5d9ecc443767?s=128&d=identicon&r=PG", "display_name": "Sebastian Graf", "link": "https://stackoverflow.com/users/388010/sebastian-graf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 196, "favorite_count": 0, "accepted_answer_id": 49518519, "answer_count": 3, "score": 2, "last_activity_date": 1522493566, "creation_date": 1522142141, "last_edit_date": 1522493566, "question_id": 49508856, "link": "https://stackoverflow.com/questions/49508856/pattern-matching-in-alternative", "title": "Pattern matching in `Alternative`", "body": "<p>I have a function that pattern matches on its arguments to produce a computation in <code>StateT () Maybe ()</code>. This computation can fail when run, in which case I want the current pattern match branch to fail, so to speak.</p>\n\n<p>I highly doubt it's possible to have something like</p>\n\n<pre><code>compute :: Int -&gt; StateT () Maybe Int\ncompute = return\n\nf :: Maybe Int -&gt; Maybe Int -&gt; StateT () Maybe ()\nf (Just n1) (Just n2) = do\n  m &lt;- compute (n1 + n2) \n  guard (m == 42)\nf (Just n) _ = do\n  m &lt;- compute n\n  guard (m == 42)\nf _ (Just n) = do\n  m &lt;- compute n\n  guard (m == 42)\n</code></pre>\n\n<p>behave in the way I want it to: When the first computation fails due to the <code>guard</code> or somewhere in <code>compute</code>, I want <code>f</code> to try the next pattern.</p>\n\n<p>Obviously the above can't work, because <code>StateT</code> (as any other monad might) involves an additional parameter when expanded, so I probably can't formulate this as simple pattern guards.</p>\n\n<p>The following does what I want, but it's ugly:</p>\n\n<pre><code>f' :: Maybe Int -&gt; Maybe Int -&gt; StateT () Maybe ()\nf' a b = asum (map (\\f -&gt; f a b) [f1, f2, f3])\n  where\n    f1 a b = do\n      Just n1 &lt;- pure a\n      Just n2 &lt;- pure b\n      m &lt;- compute (n1 + n2) \n      guard (m == 42)\n    f2 a _ = do\n      Just n &lt;- pure a\n      m &lt;- compute n\n      guard (m == 42)\n    f3 _ b = do\n      Just n &lt;- pure b\n      m &lt;- compute n\n      guard (m == 42)\n</code></pre>\n\n<p>A call like <code>execStateT (f (Just 42) (Just 1)) ()</code> would fail for <code>f</code> but return <code>Just ()</code> for <code>f'</code>, because it matches <code>f2</code>.</p>\n\n<p>How do I get the behavior of <code>f'</code> while having elegant pattern matching with as little auxiliary definitions as possible like in <code>f</code>? Are there other, more elegant ways to formulate this?</p>\n\n<hr>\n\n<p>Complete runnable example:</p>\n\n<pre><code>#! /usr/bin/env stack\n-- stack --resolver=lts-11.1 script\n\nimport Control.Monad.Trans.State\nimport Control.Applicative\nimport Control.Monad\nimport Data.Foldable\n\ncompute :: Int -&gt; StateT () Maybe Int\ncompute = return\n\nf :: Maybe Int -&gt; Maybe Int -&gt; StateT () Maybe ()\nf (Just n1) (Just n2) = do\n  m &lt;- compute (n1 + n2) \n  guard (m == 42)\nf (Just n) _ = do\n  m &lt;- compute n\n  guard (m == 42)\nf _ (Just n) = do\n  m &lt;- compute n\n  guard (m == 42)\n\nf' :: Maybe Int -&gt; Maybe Int -&gt; StateT () Maybe ()\nf' a b = asum (map (\\f -&gt; f a b) [f1, f2, f3])\n  where\n    f1 a b = do\n      Just n1 &lt;- pure a\n      Just n2 &lt;- pure b\n      m &lt;- compute (n1 + n2) \n      guard (m == 42)\n    f2 a _ = do\n      Just n &lt;- pure a\n      m &lt;- compute n\n      guard (m == 42)\n    f3 _ b = do\n      Just n &lt;- pure b\n      m &lt;- compute n\n      guard (m == 42)\n\nmain = do\n  print $ execStateT (f (Just 42) (Just 1)) ()  -- Nothing\n  print $ execStateT (f' (Just 42) (Just 1)) () -- Just (), because `f2` succeeded\n</code></pre>\n\n<hr>\n\n<p><strong>Edit</strong>: I elicited quite some clever answers with this question so far, thanks! Unfortunately, they mostly suffer from overfitting to the particular code example I've given. In reality, I need something like this for unifying two expressions (let-bindings, to be precise), where I want to try unifying the RHS of two simultaneous lets if possible and fall through to the cases where I handle let bindings one side at a time by floating them. So, actually there's no clever structure on <code>Maybe</code> arguments to exploit and I'm not <code>compute</code>ing on <code>Int</code> actually.</p>\n\n<p>The answers so far might benefit others beyond the enlightenment they brought me though, so thanks!</p>\n\n<hr>\n\n<p><strong>Edit 2</strong>: Here's some compiling example code with probably bogus semantics:</p>\n\n<pre><code>module Unify (unify) where\n\nimport Control.Applicative\nimport Control.Monad.Trans.State.Strict\n\ndata Expr\n  = Var String -- meta, free an bound vars\n  | Let String Expr Expr\n  -- ... more cases\n  -- no Eq instance, fwiw\n\n-- | If the two terms unify, return the most general unifier, e.g.\n-- a substitution (`Map`) of meta variables for terms as association\n-- list.\nunify :: [String] -&gt; Expr -&gt; Expr -&gt; Maybe [(String, Expr)]\nunify metaVars l r = execStateT (go [] [] l r) [] -- threads the current substitution as state\n  where\n    go locals floats (Var x) (Var y)\n      | x == y = return ()\n    go locals floats (Var x) (Var y)\n      | lookup x locals == Just y = return ()\n    go locals floats (Var x) e\n      | x `elem` metaVars = tryAddSubstitution locals floats x e\n    go locals floats e (Var y)\n      | y `elem` metaVars = tryAddSubstitution locals floats y e\n    -- case in point:\n    go locals floats (Let x lrhs lbody) (Let y rrhs rbody) = do\n      go locals floats lrhs rrhs -- try this one, fail current pattern branch if rhss don't unify\n      -- if we get past the last statement, commit to this branch, no matter\n      -- the next statement fails or not\n      go ((x,y):locals) floats lbody rbody\n    -- try to float the let binding. terms mentioning a floated var might still\n    -- unify with a meta var\n    go locals floats (Let x rhs body) e = do\n      go locals (Left (x,rhs):floats) body e\n    go locals floats e (Let y rhs body) = do\n      go locals (Right (y,rhs):floats) body e\n\n    go _ _ _ _ = empty\n\n    tryAddSubstitution = undefined -- magic\n</code></pre>\n"}, {"tags": ["haskell", "conduit", "network-conduit"], "answers": [{"comments": [{"owner": {"reputation": 131, "user_id": 218582, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/rthpZ.png?s=128&g=1", "display_name": "Kuznero", "link": "https://stackoverflow.com/users/218582/kuznero"}, "edited": false, "score": 0, "creation_date": 1522154944, "post_id": 49512566, "comment_id": 86031212, "body": "Indeed <code>\\r\\n</code> might have got in the way, but in the end it is somehow connected to the <code>leftover</code> call. I updated original question."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": false, "score": 0, "last_activity_date": 1522152749, "creation_date": 1522152749, "answer_id": 49512566, "question_id": 49508251, "link": "https://stackoverflow.com/questions/49508251/chunk-data-with-conduit/49512566#49512566", "title": "Chunk data with Conduit", "body": "<p>Print <code>x</code> in <code>go</code> to debug.</p>\n\n<pre><code>  ...\n  go x = do\n    liftIO (Prelude.print x)\n    if ...\n</code></pre>\n\n<p>The socket receives a bytestring that ends with <code>\\r\\n</code>, so you go to the <code>else</code> branch, which terminates the session.</p>\n"}, {"tags": [], "owner": {"reputation": 131, "user_id": 218582, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/rthpZ.png?s=128&g=1", "display_name": "Kuznero", "link": "https://stackoverflow.com/users/218582/kuznero"}, "is_accepted": true, "score": 1, "last_activity_date": 1522159146, "creation_date": 1522159146, "answer_id": 49514935, "question_id": 49508251, "link": "https://stackoverflow.com/questions/49508251/chunk-data-with-conduit/49514935#49514935", "title": "Chunk data with Conduit", "body": "<p>Finally figured out that it was necessary to <code>await</code> instead of <code>leftover</code> on the base case. Here is how working <code>message</code> combinator looks like:</p>\n\n<pre><code>message :: Monad m =&gt; ConduitT BS.ByteString BS.ByteString m ()\nmessage = do\n  minput &lt;- await\n  case minput of\n    Nothing    -&gt; return ()\n    Just input -&gt; process input &gt;&gt; message\n  where\n    process input =\n      case BS.breakSubstring \"|\" input of\n        (\"\", \"\")  -&gt; return ()\n        (\"\", \"|\") -&gt; return ()\n        (\"\", xs)  -&gt; leftover $ BS.tail xs\n        (x, \"\")   -&gt; do\n          minput &lt;- await\n          case minput of\n            Nothing -&gt; return ()\n            Just newInput -&gt; process $ BS.concat [x, newInput]\n        (x, xs)   -&gt; do\n          yield x\n          leftover $ BS.tail xs\n</code></pre>\n\n<blockquote>\n  <p>A bit of boilerplate that can probably be cleaned up, but it works.</p>\n</blockquote>\n"}], "owner": {"reputation": 131, "user_id": 218582, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/rthpZ.png?s=128&g=1", "display_name": "Kuznero", "link": "https://stackoverflow.com/users/218582/kuznero"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 143, "favorite_count": 0, "accepted_answer_id": 49514935, "answer_count": 2, "score": 1, "last_activity_date": 1522159146, "creation_date": 1522140377, "last_edit_date": 1522154887, "question_id": 49508251, "link": "https://stackoverflow.com/questions/49508251/chunk-data-with-conduit", "title": "Chunk data with Conduit", "body": "<p>Here is an example of a <code>conduit</code> combinator that supposed to <code>yield</code> downstream when a complete message is received from upstream:</p>\n\n<pre><code>import qualified Data.ByteString as BS\nimport Data.Conduit\nimport Data.Conduit.Combinators\nimport Data.Conduit.Network\n\nmessage :: Monad m =&gt; ConduitT BS.ByteString BS.ByteString m ()\nmessage = loop\n  where\n    loop = await &gt;&gt;= maybe (return ()) go\n    go x = if (BS.isSuffixOf \"|\" x)\n        then yield (BS.init x) &gt;&gt; loop\n        else leftover x\n</code></pre>\n\n<p>Server code itself looks like following:</p>\n\n<pre><code>main :: IO ()\nmain = do\n  runTCPServer (serverSettings 5000 \"!4\") $ \\ appData -&gt; runConduit $\n    (appSource appData)\n    .| message\n    .| (appSink appData)\n</code></pre>\n\n<p>For some reason <code>telnet 127.0.0.1 5000</code> disconnects after sending any message:</p>\n\n<pre><code>telnet 127.0.0.1 5000\nTrying 127.0.0.1...\nConnected to 127.0.0.1.\nEscape character is '^]'.\n123|\nConnection closed by foreign host.\n</code></pre>\n\n<p>Please advice, what am I doing wrong here?</p>\n\n<p><strong>Update</strong></p>\n\n<p>More importantly what I try doing here is wait for completion signal <code>|</code> and then <code>yield</code> the complete message downstream. Here is the evolution of <code>message</code> combinator:</p>\n\n<pre><code>message :: Monad m =&gt; ConduitT BS.ByteString BS.ByteString m ()\nmessage = do\n  minput &lt;- await\n  case minput of\n    Nothing    -&gt; return ()\n    Just input -&gt; do\n      case BS.breakSubstring \"|\" input of\n        (\"\", \"\")  -&gt; return ()\n        (\"\", \"|\") -&gt; return ()\n        (\"\", xs)  -&gt; leftover $ BS.tail xs\n        (x, \"\")   -&gt; leftover x -- problem is in this leftover\n        (x, xs)   -&gt; do\n          yield x\n          leftover $ BS.tail xs\n      message\n</code></pre>\n\n<p>The idea I had is that if there is nothing coming from the upstream combinator will have to wait until there will be something, such that it can send a complete message downstream. But it seams that <code>conduit</code> starts spinning on CPU a lot on that <code>leftover</code> call in the above <code>message</code> combinator.</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "edited": false, "score": 5, "creation_date": 1522144255, "post_id": 49508223, "comment_id": 86023331, "body": "You can also enable <code>PolyKinds</code>, then <code>Wrapper</code> becomes kind-polymorphic in <code>f</code>."}], "tags": [], "owner": {"reputation": 1169, "user_id": 997994, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e8c11f523fb9ff0c4fb407bbda335234?s=128&d=identicon&r=PG", "display_name": "MnZrK", "link": "https://stackoverflow.com/users/997994/mnzrk"}, "is_accepted": true, "score": 7, "last_activity_date": 1522140290, "creation_date": 1522140290, "answer_id": 49508223, "question_id": 49507964, "link": "https://stackoverflow.com/questions/49507964/declare-a-type-with-unused-type-function-argument/49508223#49508223", "title": "Declare a type with unused type function argument", "body": "<p>Turns out I just need to use language extension:</p>\n\n<pre><code>&gt; {-# LANGUAGE KindSignatures #-}\n\n&gt; newtype Wrapper (f :: * -&gt; *) a = Wrapper a\n\n&gt; :kind Wrapper\nWrapper :: (* -&gt; *) -&gt; * -&gt; *\n</code></pre>\n"}], "owner": {"reputation": 1169, "user_id": 997994, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e8c11f523fb9ff0c4fb407bbda335234?s=128&d=identicon&r=PG", "display_name": "MnZrK", "link": "https://stackoverflow.com/users/997994/mnzrk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 42, "favorite_count": 0, "accepted_answer_id": 49508223, "answer_count": 1, "score": 3, "last_activity_date": 1522140290, "creation_date": 1522139491, "question_id": 49507964, "link": "https://stackoverflow.com/questions/49507964/declare-a-type-with-unused-type-function-argument", "title": "Declare a type with unused type function argument", "body": "<p>By 'type function argument' I mean this</p>\n\n<pre><code>&gt; newtype Wrapper f a = Wrapper (f a)\n&gt; :kind Wrapper\nWrapper :: (* -&gt; *) -&gt; * -&gt; *\n</code></pre>\n\n<p>So <code>f</code> here is a type function argument, so I can construct type like this</p>\n\n<pre><code>&gt; :kind Wrapper Maybe Int\nWrapper Maybe Int :: *\n</code></pre>\n\n<p>Now the problem for me is that I actually use <code>f</code> in the value of <code>Wrapper</code>, and I want to ignore it:</p>\n\n<pre><code>&gt; newtype Wrapper f a = Wrapper a\n&gt; :kind Wrapper\nWrapper :: * -&gt; * -&gt; *\n</code></pre>\n\n<p>Guess what! <code>f</code> is no longer a type function and causes my previous type construction to fail:</p>\n\n<pre><code>&gt; :kind Wrapper Maybe Int\n&lt;interactive&gt;:1:9: error:\n    \u2022 Expecting one more argument to \u2018Maybe\u2019\n      Expected a type, but \u2018Maybe\u2019 has kind \u2018* -&gt; *\u2019\n    \u2022 In the first argument of \u2018Wrapper\u2019, namely \u2018Maybe\u2019\n      In the type \u2018Wrapper Maybe Int\u2019\n</code></pre>\n\n<p>So how can I construct type same way (<code>Wrapper Maybe Int</code>) without the need to have concrete <code>Maybe</code> value inside my <code>Wrapper</code> value?</p>\n"}, {"tags": ["haskell", "haskell-stack"], "comments": [{"owner": {"reputation": 28845, "user_id": 238232, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/ccda2293fc93c7a871956102004ac19d?s=128&d=identicon&r=PG", "display_name": "cnd", "link": "https://stackoverflow.com/users/238232/cnd"}, "edited": false, "score": 2, "creation_date": 1522133373, "post_id": 49504206, "comment_id": 86016140, "body": "either cabal and stack are not global package managers <a href=\"https://ivanmiljenovic.wordpress.com/2010/03/15/repeat-after-me-cabal-is-not-a-package-manager/\" rel=\"nofollow noreferrer\">ivanmiljenovic.wordpress.com/2010/03/15/&hellip;</a>"}, {"owner": {"reputation": 3666, "user_id": 3538165, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/M1snF.jpg?s=128&g=1", "display_name": "Radon Rosborough", "link": "https://stackoverflow.com/users/3538165/radon-rosborough"}, "reply_to_user": {"reputation": 28845, "user_id": 238232, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/ccda2293fc93c7a871956102004ac19d?s=128&d=identicon&r=PG", "display_name": "cnd", "link": "https://stackoverflow.com/users/238232/cnd"}, "edited": false, "score": 0, "creation_date": 1522174766, "post_id": 49504206, "comment_id": 86045294, "body": "@\u041c\u0430\u0448\u0430 I am aware of that sentiment. However, as I point out in the question, it&#39;s not an option to install Haskell packages through my system package manager, since they are not packaged. So I ask again, what is the recommended approach to install Haskell libraries globally?"}, {"owner": {"reputation": 1285, "user_id": 2075423, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/084668018e4752a76a838f27e041d182?s=128&d=identicon&r=PG", "display_name": "stevemao", "link": "https://stackoverflow.com/users/2075423/stevemao"}, "edited": false, "score": 0, "creation_date": 1570588463, "post_id": 49504206, "comment_id": 102955971, "body": "Looks like there&#39;s no global package manager. I just uninstall and reinstall if I want to upgrade anything."}], "answers": [{"tags": [], "owner": {"reputation": 3075, "user_id": 1164871, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d6a54a3752ab47170d790085935988f?s=128&d=identicon&r=PG", "display_name": "mgsloan", "link": "https://stackoverflow.com/users/1164871/mgsloan"}, "is_accepted": true, "score": 10, "last_activity_date": 1522124762, "creation_date": 1522124762, "answer_id": 49504352, "question_id": 49504206, "link": "https://stackoverflow.com/questions/49504206/recommended-approach-to-use-stack-as-global-package-manager/49504352#49504352", "title": "Recommended approach to use Stack as global package manager", "body": "<p>Well, <code>stack install</code> in any project will install to <code>~/.local/bin</code> therefore making whatever executable you install be globally accessible.</p>\n\n<p>The global project is used when running stack without a project, it is located in <code>~/.stack/global-project/stack.yaml</code>.</p>\n\n<p>If you want all of your globally accessible tools to have the same dependencies (perhaps to ensure that the ghc version matches or something), then you could make a project intended to build all of these tools.  It's up to you whether or not it is the \"global project\" - there's not much special about it, it's just a default if you run stack and aren't in a project.</p>\n\n<p>In order to record \"what haskell executables do I want installed globally\", you might consider creating a shell file like</p>\n\n<pre><code>#!/bin/sh\nstack install hindent\n</code></pre>\n\n<p>And then running this whenever you change the versions of the installed tools.</p>\n\n<p>Also, for tools like <code>intero</code> that need to match the ghc version, you can do <code>stack install --copy-compiler-tool intero</code>, and it will be available on the PATH when stack is used with that ghc version.</p>\n"}], "owner": {"reputation": 3666, "user_id": 3538165, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/M1snF.jpg?s=128&g=1", "display_name": "Radon Rosborough", "link": "https://stackoverflow.com/users/3538165/radon-rosborough"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2995, "favorite_count": 2, "accepted_answer_id": 49504352, "answer_count": 1, "score": 12, "last_activity_date": 1522124831, "creation_date": 1522123765, "last_edit_date": 1522124831, "question_id": 49504206, "link": "https://stackoverflow.com/questions/49504206/recommended-approach-to-use-stack-as-global-package-manager", "title": "Recommended approach to use Stack as global package manager", "body": "<p>I would like to install some Haskell libraries globally, for example <code>hindent</code> which is used by my editor's Haskell integration. What is the recommended way to do this?</p>\n\n<p>I thought that <code>stack install hindent</code> was the correct way to do this. However, then I wanted to update my packages and found that there was <em>no way to do this</em>. According to <a href=\"https://github.com/commercialhaskell/stack/issues/1610#issuecomment-169253575\" rel=\"noreferrer\">the GitHub issue report I found</a>,</p>\n\n<blockquote>\n  <p>stack is concerned with managing a local build sandbox for a project. It isn't intended to be a global package manager.</p>\n</blockquote>\n\n<p>There appear to be workarounds such as maintaining a dummy project with artificial dependencies on the packages I would like installed. This sounds like a terrible hack, and I have been unable to find any official documentation on what approach should actually be taken.</p>\n\n<p>Installing Haskell packages using my system package manager (Homebrew) is not an option since they are not packaged.</p>\n\n<p>I would have opened an issue report against Stack, however the contribution guidelines requested that I instead ask a question here under the <a href=\"/questions/tagged/haskell-stack\" class=\"post-tag\" title=\"show questions tagged &#39;haskell-stack&#39;\" rel=\"tag\">haskell-stack</a> tag.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 3, "creation_date": 1522122131, "post_id": 49503924, "comment_id": 86012117, "body": "You didn&#39;t copy it accurately."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 2388, "user_id": 6339494, "user_type": "registered", "accept_rate": 57, "profile_image": "https://i.stack.imgur.com/y07QW.jpg?s=128&g=1", "display_name": "Nayantara Jeyaraj", "link": "https://stackoverflow.com/users/6339494/nayantara-jeyaraj"}, "edited": false, "score": 0, "creation_date": 1522122390, "post_id": 49503924, "comment_id": 86012179, "body": "(1) &quot;You didn&#39;t copy it accurately&quot; -- More specifically, the code in the lecture does derive <code>Num</code> for <code>Sum</code> and <code>Product</code>. (2) GitHub style fenced code blocks (delimited by ```) don&#39;t work here. (3) @Nayantara Jeyaraj It is better to format error messages as code, to preserve formatting and avoid things like * being parsed as Markdown. You can add blockquote formatting around the code block if you want."}], "answers": [{"comments": [{"owner": {"reputation": 35, "user_id": 7739917, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HVOKO.jpg?s=128&g=1", "display_name": "Lee Lee Lee", "link": "https://stackoverflow.com/users/7739917/lee-lee-lee"}, "edited": false, "score": 0, "creation_date": 1522122665, "post_id": 49503992, "comment_id": 86012257, "body": "Yes , I delete deriving Num from code ,beacause it raise  derive error,and now  I find solution to aovid this . enable the GeneralizedNewtypeDeriving extension as GHCi suggests. thks"}], "tags": [], "owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "is_accepted": true, "score": 3, "last_activity_date": 1522122719, "last_edit_date": 1522122719, "creation_date": 1522122078, "answer_id": 49503992, "question_id": 49503924, "link": "https://stackoverflow.com/questions/49503924/how-to-fix-could-not-deduce-num-sum-a-arising-from-a-use-of/49503992#49503992", "title": "How to fix &quot;Could not deduce (Num (Sum a)) arising from a use of \u2018+\u2019&quot;?", "body": "<p>By defining <code>mappend</code> as <code>(+)</code>, you're saying that <code>Sum a</code> is itself a member of <code>Num</code>. Rather, it only contains those members, so <code>(+)</code> should operate on those members.</p>\n\n<pre><code>instance Num a =&gt; Monoid (Sum a) where\n    mempty                  = Sum 0\n    mappend (Sum x) (Sum y) = Sum $ x + y\n</code></pre>\n\n<p>Likewise for <code>Product</code></p>\n\n<pre><code>instance Num a =&gt; Monoid (Product a) where\n    mempty                          = Product 1\n    mappend (Product x) (Product y) = Product $ x * y\n</code></pre>\n\n<p>Then your monoid instances work as expected.</p>\n\n<pre><code>xs = map Sum [1..5]\nys = map Product [1..5]\nmconcat xs  -- 15\nmconcat ys  -- 120\n</code></pre>\n\n<hr>\n\n<p>Alternatively you could follow the lecture's code and derive <code>Num</code> in your newtypes.</p>\n\n<pre><code>-- from the linked lecture\nnewtype Sum a = Sum a\n  deriving (Eq, Ord, Num, Show)\nnewtype Product a = Product a\n  deriving (Eq, Ord, Num, Show)\n</code></pre>\n"}], "owner": {"reputation": 35, "user_id": 7739917, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HVOKO.jpg?s=128&g=1", "display_name": "Lee Lee Lee", "link": "https://stackoverflow.com/users/7739917/lee-lee-lee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 100, "favorite_count": 1, "accepted_answer_id": 49503992, "answer_count": 1, "score": 0, "last_activity_date": 1522122719, "creation_date": 1522121578, "last_edit_date": 1522122533, "question_id": 49503924, "link": "https://stackoverflow.com/questions/49503924/how-to-fix-could-not-deduce-num-sum-a-arising-from-a-use-of", "title": "How to fix &quot;Could not deduce (Num (Sum a)) arising from a use of \u2018+\u2019&quot;?", "body": "<p>I took code from <a href=\"http://www.seas.upenn.edu/~cis194/spring13/lectures/07-folds-monoids.html\" rel=\"nofollow noreferrer\">this lecture</a>, but I got an error with the demo code below: </p>\n\n<pre><code>newtype Sum a = Sum a\n  deriving (Eq,Ord,Show)\ngetSum::Sum a -&gt; a\ngetSum (Sum a) = a\ninstance Num a=&gt;Monoid (Sum a)where\n  mempty = Sum 0\n  mappend = (+)\nnewtype  Product a = Product a\n  deriving (Eq,Ord,Show)\ngetProduct ::Product a -&gt; a\ngetProduct (Product a ) = a\ninstance Num a =&gt; Monoid (Product a ) where\n  mempty = Product 1\n  mappend = (*)\n</code></pre>\n\n<p>I got the following error message (with GHC 8.2.2):</p>\n\n<pre><code>Test.hs:40:13: error:\n       ? Could not deduce (Num (Sum a)) arising from a use of \u2018+\u2019\n         from the context: Num a\n           bound by the instance declaration at Test.hs:38:10-30\n       ? In the expression: (+)\n         In an equation for \u2018mappend\u2019: mappend = (+)\n         In the instance declaration for \u2018Monoid (Sum a)\u2019   \n | 40 |   mappend = (+)  \n\nTest.hs:50:13: error:\n    ? Could not deduce (Num (Product a)) arising from a use of \u2018*\u2019\n      from the context: Num a\n        bound by the instance declaration at Test.hs:48:10-37\n    ? In the expression: (*)\n      In an equation for \u2018mappend\u2019: mappend = (*)\n      In the instance declaration for \u2018Monoid (Product a)\u2019\n50 |   mappend = (*)\n</code></pre>\n"}, {"tags": ["haskell", "monads", "state-monad", "do-notation"], "comments": [{"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1522117282, "post_id": 49503312, "comment_id": 86010990, "body": "Are you just using the <code>Monad</code> class as a convenience or is there somehow a lawful instance?"}, {"owner": {"reputation": 2224, "user_id": 1721424, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/215f7e243f29cacab4e533dad1bf1f67?s=128&d=identicon&r=PG", "display_name": "Ryan", "link": "https://stackoverflow.com/users/1721424/ryan"}, "reply_to_user": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1522118925, "post_id": 49503312, "comment_id": 86011376, "body": "@Li-yaoXia It&#39;s used mainly to create a DSL via do-notation. Whether the instance is lawful, I am not entirely sure, but it has been working successfully up until the point where unique labels were needed."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1522119232, "post_id": 49503312, "comment_id": 86011460, "body": "Okay, I wasn&#39;t sure whether I was missing something, but <code>X86</code> is in fact not even a <code>Functor</code> (which a <code>Monad</code> would have to be)."}, {"owner": {"reputation": 7268, "user_id": 2303202, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/iT9aU.png?s=128&g=1", "display_name": "max630", "link": "https://stackoverflow.com/users/2303202/max630"}, "edited": false, "score": 1, "creation_date": 1522123095, "post_id": 49503312, "comment_id": 86012363, "body": "you could try to implement State yourself, to get more idea of it. Basically, its <code>counter</code>&#39;s type should be rather <code>Integer -&gt; Integer</code>"}, {"owner": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "edited": false, "score": 0, "creation_date": 1522459926, "post_id": 49503312, "comment_id": 86174868, "body": "A minor suggestion: I&#39;d create a dedicated <code>Label</code> type for the result of <code>allocateUniqueLabel</code>. This will make your code a bit safer, making sure you only jump to labels, not arbitrary strings."}], "answers": [{"tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 8, "last_activity_date": 1558951594, "last_edit_date": 1558951594, "creation_date": 1522118820, "answer_id": 49503606, "question_id": 49503312, "link": "https://stackoverflow.com/questions/49503312/generating-a-unique-value-in-haskell-do-notation/49503606#49503606", "title": "Generating a unique value in Haskell do-notation", "body": "<p>We can use <a href=\"https://hackage.haskell.org/package/mtl\" rel=\"nofollow noreferrer\">mtl classes</a> to describe X86 code as effectful programs. We want:</p>\n\n<ul>\n<li>to generate code, this is a <code>Writer</code> effect;</li>\n<li>to maintain a counter, this is a <code>State</code> effect.</li>\n</ul>\n\n<p>We worry about instantiating these effects last, and in the description of the programs we use <code>MonadWriter</code> and <code>MonadState</code> constraints.</p>\n\n<pre><code>import Control.Monad.State  -- mtl\nimport Control.Monad.Writer\n</code></pre>\n\n<p>Allocating a new identifier increments the counter, without generating any code. This only uses the <code>State</code> effect.</p>\n\n<pre><code>type Id = Integer\n\nallocateUniqueLabel :: MonadState Id m =&gt; m String\nallocateUniqueLabel = do\n  i &lt;- get\n  put (i+1)  -- increment\n  return (\"Label\" ++ show (i+1))\n</code></pre>\n\n<p>And of course, we have actions to generate code, that don't need to care about the current state. So they use the <code>Writer</code> effect.</p>\n\n<pre><code>jmp :: MonadWriter String m =&gt; String -&gt; m ()\njmp l = tell (\"jmp \" ++ l ++ \";\\n\")\n\nlabel :: MonadWriter String m =&gt; String -&gt; m ()\nlabel l = tell (l ++ \":\\n\")\n</code></pre>\n\n<p>The actual program looks the same as the original, but with more general types.</p>\n\n<pre><code>generateCode :: (MonadState Id m, MonadWriter String m) =&gt; m ()\ngenerateCode = do\n  label1 &lt;- allocateUniqueLabel\n  label2 &lt;- allocateUniqueLabel\n  jmp label1\n  label label1\n  jmp label2\n  label label2\n</code></pre>\n\n<p>The effects are instantiated when we run this program, here using <code>runWriterT</code>/<code>runWriter</code> and <code>runStateT</code>/<code>runState</code> (the order doesn't matter much, these two effects commute).</p>\n\n<pre><code>type X86 = WriterT String (State Id)\n\nrunX86 :: X86 () -&gt; String\nrunX86 gen = evalState (execWriterT gen) 1 -- start counting from 1\n-- evalState and execWriterT are wrappers around `runStateT` and `runWriterT`:\n-- - execWriterT: discards the result (of type ()), only keeping the generated code.\n-- - evalState: discards the final state, only keeping the generated code,\n--   and does some unwrapping after there are no effects to handle.\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "edited": false, "score": 0, "creation_date": 1522467826, "post_id": 49503615, "comment_id": 86176101, "body": "Why do we need to increment the label counter for <code>jmp</code>? I&#39;d say it&#39;s only necessary to do so when generating a new label (unless we want to assign an unique identifier to each instruction in a piece of code, which would be a different problem)."}], "tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": false, "score": 4, "last_activity_date": 1522137832, "last_edit_date": 1522137832, "creation_date": 1522118854, "answer_id": 49503615, "question_id": 49503312, "link": "https://stackoverflow.com/questions/49503312/generating-a-unique-value-in-haskell-do-notation/49503615#49503615", "title": "Generating a unique value in Haskell do-notation", "body": "<p>You probably want to use this monad stack:</p>\n\n<pre><code>type X86 a = StateT Integer (Writer String) a\n</code></pre>\n\n<p>Since you have a state and a writer, you could also consider using <code>RWS</code> (reader-writer-state all in one):</p>\n\n<pre><code>type X86 a = RWS () String Integer a\n</code></pre>\n\n<p>Let's pick the first one for fun.  I'd first define a helper function to increment the counter (<a href=\"https://stackoverflow.com/questions/4765260/seeking-constructive-criticism-on-monad-implementation/4765447#4765447\">monads cannot lawfully increment a counter \"automatically\"</a>):</p>\n\n<pre><code>instr :: X86 a -&gt; X86 a\ninstr i = do\n    x &lt;- i\n    modify (+1)\n    return x\n</code></pre>\n\n<p>Then you could define <code>jmp</code> as:</p>\n\n<pre><code>jmp :: String -&gt; X86 ()\njmp l = instr $ do\n    lift (tell (\"jmp \" ++ l ++ \";\\n\"))\n       -- 'tell' is one of Writer's operations, and then we 'lift'\n       -- it into StateT\n</code></pre>\n\n<p>(The <code>do</code> there is superfluous, however I suspect there will be a pattern of starting instruction definitions with <code>instr $ do</code>)</p>\n\n<p>I would <em>not</em> roll my own monad for this -- it can be instructive to do so, but I think you'll get more mileage using the standard libraries for this one.</p>\n"}, {"tags": [], "owner": {"reputation": 60057, "user_id": 1333025, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/79ab43010f900324ac5e2de19a2916cb?s=128&d=identicon&r=PG", "display_name": "Petr", "link": "https://stackoverflow.com/users/1333025/petr"}, "is_accepted": false, "score": 3, "last_activity_date": 1522471525, "creation_date": 1522471525, "answer_id": 49584333, "question_id": 49503312, "link": "https://stackoverflow.com/questions/49503312/generating-a-unique-value-in-haskell-do-notation/49584333#49584333", "title": "Generating a unique value in Haskell do-notation", "body": "<p>As you probably now underestand from the other answers, the problem with your\napproach was that even though you were using the counter, you were still\ngenerating your labels locally. In particular</p>\n\n<pre><code>label1 &lt;- allocateUniqueLabel\nlabel label1\n</code></pre>\n\n<p>was equivalent to</p>\n\n<pre><code>X86 { code = \"Label1:\\n\", counter = 1, value = const () }    \n</code></pre>\n\n<p>We need to assemble the whole code first, generate the labels, and only\nafterwards (in some sense) generate the actual code using the labels.\nAnd this is what the other answers are suggesting by having the counter stored\nin the <code>State</code> (or <code>RWS</code>) monad.</p>\n\n<hr>\n\n<p>There is yet another issue that we can address: You want to be able to jump both\nforwards and backwards. This is most likely why you have separate\n<code>allocateUniqueLabel</code> and <code>label</code> functions. But this allows to set the same\nlabel twice.</p>\n\n<p>It is actually possible to use to <code>do</code> notation with \"backwards\" binding using\n<a href=\"http://hackage.haskell.org/package/base-4.9.0.0/docs/Control-Monad-Fix.html#t:MonadFix\" rel=\"nofollow noreferrer\"><code>MonadFix</code></a>,\nwhich defines this monadic operation:</p>\n\n<pre><code>mfix :: (a -&gt; m a) -&gt; m a\n</code></pre>\n\n<p>Since both <code>State</code> and <code>RWS</code> have <code>MonadFix</code> instances, we can indeed write code\nlike this:</p>\n\n<pre><code>{-# LANGUAGE GeneralizedNewtypeDeriving, RecursiveDo #-}\nmodule X86\n    ( X86()\n    , runX86\n    , label\n    , jmp\n    ) where\n\nimport Control.Monad.RWS\n\n-- In production code it'll be much faster if we replace String with\n-- ByteString.\nnewtype X86 a = X86 (RWS () String Int a)\n    deriving (Functor, Applicative, Monad, MonadFix)\n\nrunX86 :: X86 a -&gt; String\nrunX86 (X86 k) = snd (execRWS k () 1)\n\nnewtype Label = Label { getLabel :: String }\n\nlabel :: X86 Label\nlabel = X86 $ do\n    counter &lt;- get\n    let l = \"Label\" ++ show counter\n    tell (l ++ \":\\n\")\n    modify (+1)\n    return (Label l)\n\njmp :: Label -&gt; X86 ()\njmp (Label l) = X86 . tell $ \"jmp \" ++ l ++ \";\\n\"\n</code></pre>\n\n<p>And use it like this:</p>\n\n<pre><code>example :: X86 ()\nexample = do\n    rec l1 &lt;- label\n        jmp l2\n        l2 &lt;- label\n    jmp l1\n</code></pre>\n\n<p>There are a few things to note:</p>\n\n<ul>\n<li>We need to use the <code>RecursiveDo</code> extension to enable the <code>rec</code> keyword.</li>\n<li>Keyword <code>rec</code> delimits a block of mutually recursive definitions. In our case\nit could also start one line later (<code>rec jmp l2</code>). GHC then translates it into\nusing <code>mfix</code> internally. (Using the deprecated <code>mdo</code> keyword instead of <code>rec</code>\nwould make the code somewhat more natural.)</li>\n<li><p>We wrap the internals in the <code>X86</code> newtype. First it's always good to hide the\ninternal implementation, it allows easy refactorings later. Second, <code>mfix</code>\nrequires that the function passed to it <code>a -&gt; m a</code> isn't strict in its\nargument. The effect must not depend on the argument, otherwise <code>mfix</code>\ndiverges. This is condition is satisfied for our functions, but if the\ninternals are exposed, someone could define a contrived function like this:</p>\n\n<pre><code>-- | Reset the counter to the specified label.\nevilReset :: Label -&gt; X86 ()\nevilReset = X86 . put . read . drop 5 . getLabel\n</code></pre>\n\n<p>Not only it breaks the uniqueness of labels, but also causes the following code\nto hang:</p>\n\n<pre><code>diverge :: X86 ()\ndiverge = do\n    rec evilReset l2\n        l2 &lt;- label\n    return ()\n</code></pre></li>\n</ul>\n\n<hr>\n\n<p>Another quite similar alternative would be to use the\n<a href=\"http://hackage.haskell.org/package/MonadRandom-0.5.1/docs/Control-Monad-Trans-Random-Lazy.html\" rel=\"nofollow noreferrer\"><code>Rand</code></a>\nmonad and generate labels with the\n<a href=\"http://hackage.haskell.org/package/random-1.1/docs/System-Random.html#t:Random\" rel=\"nofollow noreferrer\"><code>Random</code></a>\ninstance of\n<a href=\"http://hackage.haskell.org/package/uuid-1.3.13/docs/Data-UUID.html#t:UUID\" rel=\"nofollow noreferrer\"><code>UUID</code></a>.\nSomething like <code>WriterT String Rand a</code>, which also has a <code>MonadFix</code> instance.</p>\n\n<hr>\n\n<p>(From purely academic perspective it might be possible to construct an arrow instead of a monad, that'd implement\n<a href=\"http://hackage.haskell.org/package/base-4.11.0.0/docs/Control-Arrow.html#t:ArrowLoop\" rel=\"nofollow noreferrer\"><code>ArrowLoop</code></a>,\nbut disallow state modifications that depend on values, such as in <code>evilReset</code>. But encapsulation of <code>X86</code> achieves the same goal, keeping the much friendlier <code>do</code> syntax.)</p>\n"}], "owner": {"reputation": 2224, "user_id": 1721424, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/215f7e243f29cacab4e533dad1bf1f67?s=128&d=identicon&r=PG", "display_name": "Ryan", "link": "https://stackoverflow.com/users/1721424/ryan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 373, "favorite_count": 4, "accepted_answer_id": 49503606, "answer_count": 3, "score": 5, "last_activity_date": 1558951594, "creation_date": 1522116278, "question_id": 49503312, "link": "https://stackoverflow.com/questions/49503312/generating-a-unique-value-in-haskell-do-notation", "title": "Generating a unique value in Haskell do-notation", "body": "<p>To generate x86 assembly code, I have defined a custom type called <code>X86</code>:</p>\n\n<pre><code>data X86 a = X86 { code :: String, counter :: Integer, value :: (X86 a -&gt; a) }\n</code></pre>\n\n<p>This type is used in do-notation like the following. This makes it easy to write templates for generating if-statements, for-loops, etc...</p>\n\n<pre><code>generateCode :: X86 ()\ngenerateCode = do\n  label1 &lt;- allocateUniqueLabel\n  label2 &lt;- allocateUniqueLabel\n  jmp label1\n  label label1\n  jmp label2\n  label label2\n</code></pre>\n\n<p>Instructions are defined like this:</p>\n\n<pre><code>jmp :: String -&gt; X86 ()\njmp l = X86 { code = \"jmp \" ++ l ++ \";\\n\", counter = 0, value = const () }\n\nlabel :: String -&gt; X86 ()\nlabel l = X86 { code = l ++ \":\\n\", counter = 0, value = const () }\n</code></pre>\n\n<p>And the completed assembly file is printed like so:</p>\n\n<pre><code>printAsm :: X86 a -&gt; String\nprintAsm X86{code=code} = code\n\nmain = do\n  putStrLn (printAsm generateCode)\n</code></pre>\n\n<p>I implemented the <code>X86</code> monad in the following manner. Essentially, the sequence operator concatenates blocks of assembly code in order and ensures the counters are incremented.</p>\n\n<pre><code>instance Monad X86 where\n  x &gt;&gt; y = X86 { code = code x ++ code y, counter = counter x + counter y, value = value y }\n  x &gt;&gt;= f = x &gt;&gt; y\n    where y = f (value x x)\n</code></pre>\n\n<p>The problem is the labels are not incremented properly, so they are not unique! The following is the output:</p>\n\n<pre><code>jmp Label1;\nLabel1:\njmp Label1;\nLabel1:\n</code></pre>\n\n<p>I desire the output to have a unique value for each label:</p>\n\n<pre><code>jmp Label1;\nLabel1:\njmp Label2;\nLabel2:\n</code></pre>\n\n<p>To complete the example, here is the implementation of the <code>allocatedUniqueLabel</code> function:</p>\n\n<pre><code>allocateUniqueId :: X86 Integer\nallocateUniqueId = X86 { code = \"\", counter = 1, value = counter }\n\nallocateUniqueLabel :: X86 String\nallocateUniqueLabel = do\n  id &lt;- allocateUniqueId\n  return (\"Label\" ++ show id)\n</code></pre>\n\n<p>How can I fix my <code>X86</code> monad so the labels are unique?</p>\n\n<p><strong>Here is what I've tried:</strong></p>\n\n<ul>\n<li>Incrementing a global counter. => Haskell does not safely allow global state outside the IO monad.</li>\n<li>Using the <code>State</code> monad. => I have looked into a number of examples, but do not understand how to integrate them into my existing <code>X86</code> monad.</li>\n<li>Keep track of the counter outside of the monad. => I rather the counter is updated \"behind the scenes\"; otherwise, a lot of code templates which do not use labels will need to propagate the counter manually.</li>\n</ul>\n"}, {"tags": ["parsing", "haskell"], "comments": [{"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 5, "creation_date": 1522114875, "post_id": 49503033, "comment_id": 86010403, "body": "<i>What</i> parsing error are you getting?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 4, "creation_date": 1522114911, "post_id": 49503033, "comment_id": 86010413, "body": "You must align the <code>i</code> and the <code>case</code> in your first <code>do</code> block (indent the latter one extra space), the <code>[]</code> and <code>[g&#39;]</code> patterns in your first <code>case</code> block (indent the latter two extra spaces), and the <code>putStrLn</code> and <code>play&#39;</code> statements in your second <code>do</code> block (indent the latter three extra spaces)."}, {"owner": {"reputation": 23, "user_id": 9374850, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/26318599ca8620555b4ac0dc3c13431e?s=128&d=identicon&r=PG&f=1", "display_name": "whatscsce", "link": "https://stackoverflow.com/users/9374850/whatscsce"}, "edited": false, "score": 0, "creation_date": 1522115285, "post_id": 49503033, "comment_id": 86010504, "body": "keeps giving error on input case (I updated code based on suggestions and still same error)"}, {"owner": {"reputation": 2031, "user_id": 670339, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/942f0170639d3fd6d2bd3a2ce057e3e7?s=128&d=identicon&r=PG", "display_name": "Marc Talbot", "link": "https://stackoverflow.com/users/670339/marc-talbot"}, "edited": false, "score": 0, "creation_date": 1522116052, "post_id": 49503033, "comment_id": 86010701, "body": "Is your parse error not giving you a hint about what line the problem is on?"}, {"owner": {"reputation": 23, "user_id": 9374850, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/26318599ca8620555b4ac0dc3c13431e?s=128&d=identicon&r=PG&f=1", "display_name": "whatscsce", "link": "https://stackoverflow.com/users/9374850/whatscsce"}, "edited": false, "score": 0, "creation_date": 1522116190, "post_id": 49503033, "comment_id": 86010728, "body": "yes, sorry. This line: &quot;case move g i p of&quot;"}], "answers": [{"comments": [{"owner": {"reputation": 23, "user_id": 9374850, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/26318599ca8620555b4ac0dc3c13431e?s=128&d=identicon&r=PG&f=1", "display_name": "whatscsce", "link": "https://stackoverflow.com/users/9374850/whatscsce"}, "edited": false, "score": 0, "creation_date": 1522116953, "post_id": 49503303, "comment_id": 86010919, "body": "this worked. Thank you =)"}, {"owner": {"reputation": 211, "user_id": 9553386, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/957d90ec6cc06412956543a4a88703b5?s=128&d=identicon&r=PG&f=1", "display_name": "Thomas English", "link": "https://stackoverflow.com/users/9553386/thomas-english"}, "reply_to_user": {"reputation": 23, "user_id": 9374850, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/26318599ca8620555b4ac0dc3c13431e?s=128&d=identicon&r=PG&f=1", "display_name": "whatscsce", "link": "https://stackoverflow.com/users/9374850/whatscsce"}, "edited": false, "score": 0, "creation_date": 1522118188, "post_id": 49503303, "comment_id": 86011206, "body": "@whatscsce Happy to help! If this answer or any other one has solved your issue, please consider voting on it or <a href=\"https://meta.stackexchange.com/q/5234/179419\">accepting it</a>."}], "tags": [], "owner": {"reputation": 211, "user_id": 9553386, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/957d90ec6cc06412956543a4a88703b5?s=128&d=identicon&r=PG&f=1", "display_name": "Thomas English", "link": "https://stackoverflow.com/users/9553386/thomas-english"}, "is_accepted": true, "score": 2, "last_activity_date": 1522116519, "last_edit_date": 1522116519, "creation_date": 1522116195, "answer_id": 49503303, "question_id": 49503033, "link": "https://stackoverflow.com/questions/49503033/parsing-in-haskell/49503303#49503303", "title": "parsing in Haskell", "body": "<p>It seems to be a problem with your indentation. In your \"do\" blocks, each action needs to start on the same column, like so:</p>\n\n<pre><code>example :: IO ()\nexample = do putStr \"How old are you?\"\n             age &lt;- getLine\n             let reply = \"You are: \" ++ age\n             putStr reply\n</code></pre>\n\n<p>Fixing the indentation should allow your code to compile. You just need to shift the 'case move g i p of' line (line 7) one character to the right, so that it lines up with the \"i\" in the previous line.</p>\n\n<p>Incorrect:</p>\n\n<pre><code>   | p == O     = do i &lt;- getNat (prompt p)\n                    case move g i p of \n</code></pre>\n\n<p>Correct:</p>\n\n<pre><code>   | p == O     = do i &lt;- getNat (prompt p)\n                     case move g i p of \n</code></pre>\n\n<p>I made this change locally, and it fixed the issue. The full code with correct indentation follows:</p>\n\n<pre><code>play' :: Grid -&gt; Player -&gt; IO ()\nplay' g p \n   | wins O g   = putStrLn \"Player O wins!\\n \" \n   | wins X g   = putStrLn \"Player X wins!\\n \" \n   | full g     = putStrLn \"It' s a draw!\\n \" \n   | p == O     = do i &lt;- getNat (prompt p)\n                     case move g i p of \n                        [] -&gt; do putStrLn \"ERROR: Invalid move\";\n                                 play' g p\n                        [g'] -&gt; play g' (next p) \n   |p == X      = do putStr \"Player X is thinking... \" \n                     let gs = bestmoves g p \n                     n &lt;- randomRIO (0, length gs - 1) \n                     play (gs !! n) (next p)\n</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 9374850, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/26318599ca8620555b4ac0dc3c13431e?s=128&d=identicon&r=PG&f=1", "display_name": "whatscsce", "link": "https://stackoverflow.com/users/9374850/whatscsce"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 65, "favorite_count": 0, "closed_date": 1522180761, "accepted_answer_id": 49503303, "answer_count": 1, "score": 0, "last_activity_date": 1522116519, "creation_date": 1522113947, "last_edit_date": 1522115234, "question_id": 49503033, "link": "https://stackoverflow.com/questions/49503033/parsing-in-haskell", "closed_reason": "Not suitable for this site", "title": "parsing in Haskell", "body": "<p>No matter what I try I keep getting parsing errors and it is extremely frustrating. Any idea what I can do to fix this? \n(This is a function of a tic tac toe program)</p>\n\n<pre><code>play' :: Grid -&gt; Player -&gt; IO ()\nplay' g p \n   | wins O g   = putStrLn \"Player O wins!\\n \" \n   | wins X g   = putStrLn \"Player X wins!\\n \" \n   | full g     = putStrLn \"It' s a draw!\\n \" \n   | p == O     = do i &lt;- getNat (prompt p)\n                    case move g i p of \n                       [] -&gt; do putStrLn \"ERROR: Invalid move\"\n                                play' g p \n                       [g'] -&gt; play g' (next p) \n   |p == X      = do putStr \"Player X is thinking... \" \n                     let gs = bestmoves g p \n                     n &lt;- randomRIO (0, length gs - 1) \n                     play (gs !! n) (next p)\n</code></pre>\n"}, {"tags": ["haskell", "recursion"], "answers": [{"tags": [], "owner": {"reputation": 211, "user_id": 9553386, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/957d90ec6cc06412956543a4a88703b5?s=128&d=identicon&r=PG&f=1", "display_name": "Thomas English", "link": "https://stackoverflow.com/users/9553386/thomas-english"}, "is_accepted": false, "score": 4, "last_activity_date": 1522109046, "creation_date": 1522109046, "answer_id": 49502460, "question_id": 49502376, "link": "https://stackoverflow.com/questions/49502376/haskell-count-of-all-elements-in-list-of-lists/49502460#49502460", "title": "Haskell count of all elements in list of lists", "body": "<p>You should check out how to use the 'map' function. <a href=\"http://learnyouahaskell.com/higher-order-functions#maps-and-filters\" rel=\"nofollow noreferrer\">Learn You a Haskell</a> is a good resource to learn more!</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>mylist = [[1,2,3],[4,3],[2,1],[5]]\n\n-- Get the length of each sublist with map\nsublist_lengths = map length mylist \n-- sublist_lengths = [3, 2, 2, 1]\n\nresult = sum sublist_lengths\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": true, "score": 9, "last_activity_date": 1522110318, "last_edit_date": 1522110318, "creation_date": 1522109100, "answer_id": 49502465, "question_id": 49502376, "link": "https://stackoverflow.com/questions/49502376/haskell-count-of-all-elements-in-list-of-lists/49502465#49502465", "title": "Haskell count of all elements in list of lists", "body": "<p>Three ways:</p>\n\n<ol>\n<li><p>Get the length of each inner list, and sum them all:</p>\n\n<pre><code>GHCi&gt; sum (fmap length [[1,2,3],[4,3],[2,1],[5]])\n8\n</code></pre>\n\n<p>(Note this is equivalent to <a href=\"https://stackoverflow.com/a/49502460/2751851\">Thomas English's answer</a>: <code>map</code> is <code>fmap</code> specialised to lists.)</p></li>\n<li><p>Flatten the list of lists, and then get the length:</p>\n\n<pre><code>GHCi&gt; length (concat [[1,2,3],[4,3],[2,1],[5]])\n8\n</code></pre></li>\n<li><p>Use the <a href=\"https://hackage.haskell.org/package/base-4.10.1.0/docs/Data-Functor-Compose.html\" rel=\"noreferrer\"><code>Compose</code></a> wrapper, which will make <code>length</code> drill through the two layers of lists.</p>\n\n<pre><code>GHCi&gt; import Data.Functor.Compose\nGHCi&gt; length (Compose [[1,2,3],[4,3],[2,1],[5]])\n8\n</code></pre>\n\n<p>(While explaining exactly what is going on here is a little bit tricky -- in a nutshell, we are exploiting that <code>Compose</code> has a <code>Foldable</code> instance -- behind the scenes it boils down to something very much like the first solution.)</p></li>\n</ol>\n\n<blockquote>\n  <p>I would assume the solution to be recursive</p>\n</blockquote>\n\n<p>Indeed. It's just that the additional recursion is performed by the other functions we use (<code>fmap</code> for lists, <code>sum</code>, <code>concat</code>, etc.), and so we don't have to write the recursive algorithms explicitly.</p>\n"}, {"tags": [], "owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "is_accepted": false, "score": 3, "last_activity_date": 1522113248, "creation_date": 1522113248, "answer_id": 49502951, "question_id": 49502376, "link": "https://stackoverflow.com/questions/49502376/haskell-count-of-all-elements-in-list-of-lists/49502951#49502951", "title": "Haskell count of all elements in list of lists", "body": "<p>One additional (pedantic) solution using folds:</p>\n\n<pre><code>foldr ((+) . foldr ((+) . const 1) 0) 0\n-- or more simply:\nfoldr ((+) . length) 0\n</code></pre>\n\n<p>This incredibly ugly fold generalizes to:</p>\n\n<pre><code>sum [1 | xs &lt;- xss, x &lt;- xs]\n</code></pre>\n\n<p>which is certainly easier to read.</p>\n"}, {"tags": [], "owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "is_accepted": false, "score": 0, "last_activity_date": 1522181687, "creation_date": 1522181687, "answer_id": 49521698, "question_id": 49502376, "link": "https://stackoverflow.com/questions/49502376/haskell-count-of-all-elements-in-list-of-lists/49521698#49521698", "title": "Haskell count of all elements in list of lists", "body": "<p>So all you need is to treat each list in the list as separate. What tools can do that? As Adam Smith demonstrates foldr is probably the tool of choice however fmap looks good, too and may be shorter.\nWhat other tools are there? One of my favorites, the list comprehension.\nThe basic list comprehension lets you process each element of a list in turn.\nFor yours:</p>\n\n<pre><code>yourList = [[1,2,3],[4,3],[2,1],[5]]\n\n[length l | l &lt;- yourList] -- gets the length of each list and\n\nsum [length l | l &lt;- yourList] -- adds up all the lengths produced \n</code></pre>\n"}], "owner": {"reputation": 125, "user_id": 9292645, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ac57196e732b7cd5707d9f659a78b8e6?s=128&d=identicon&r=PG&f=1", "display_name": "James Elkwood", "link": "https://stackoverflow.com/users/9292645/james-elkwood"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4715, "favorite_count": 0, "accepted_answer_id": 49502465, "answer_count": 4, "score": 1, "last_activity_date": 1522181687, "creation_date": 1522108356, "question_id": 49502376, "link": "https://stackoverflow.com/questions/49502376/haskell-count-of-all-elements-in-list-of-lists", "title": "Haskell count of all elements in list of lists", "body": "<p>In Haskell, given a list of lists, where each sublist contains any number of integers, how can I write a function that returns the total number of elements in all the lists?</p>\n\n<p>For example if my list is:</p>\n\n<pre><code>[[1,2,3],[4,3],[2,1],[5]]\n</code></pre>\n\n<p>The function would return <code>8</code>, since there are 8 total elements in the list of lists. I know you can use <code>length []</code> to get the length of a normal list, but how do I do this with a list of lists? I would assume the solution to be recursive, but could use some help, since I am new to the language.</p>\n"}, {"tags": ["string", "list", "haskell", "palindrome"], "answers": [{"comments": [{"owner": {"reputation": 187, "user_id": 9517321, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6dc52bd738d15863c94b001d51483099?s=128&d=identicon&r=PG&f=1", "display_name": "Aelin", "link": "https://stackoverflow.com/users/9517321/aelin"}, "edited": false, "score": 0, "creation_date": 1522100235, "post_id": 49500978, "comment_id": 86006104, "body": "Thank you, this clarified the problem! :)"}, {"owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "reply_to_user": {"reputation": 187, "user_id": 9517321, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6dc52bd738d15863c94b001d51483099?s=128&d=identicon&r=PG&f=1", "display_name": "Aelin", "link": "https://stackoverflow.com/users/9517321/aelin"}, "edited": false, "score": 0, "creation_date": 1522100414, "post_id": 49500978, "comment_id": 86006179, "body": "Note that you can go one step further than this. The law of function composition is that well-behaved functions follow the rule: <code>f (g x) == (f . g) x</code>. In this case <code>f</code> is <code>length</code> and <code>g</code> is <code>filter isPalindrome</code>, so you can rewrite this as <code>(length . filter isPalindrome) ss</code>. Once you have an argument on its own at the end of a function body you can omit it from the LHS and RHS of the function, so it can condense down to <code>countPalindromes = length . filter isPalindrome</code>, which is idiomatic Haskell!"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1522102821, "post_id": 49500978, "comment_id": 86007174, "body": "I&#39;m not sure that&#39;s really a <i>law</i>, so much as the definition of <code>(.)</code>. What would an ill-behaved function look like? It also implies there are multiple, non-trivially different implementations of <code>(.)</code> that would obey the law."}, {"owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1522103366, "post_id": 49500978, "comment_id": 86007369, "body": "@chepner You&#39;re right, I&#39;m playing fast and loose with definitions here and mixing up some terms (I was thinking of the functor laws, including <code>fmap (f . g) = fmap f . fmap g</code>, which does not hold for ill-behaved functors). <i>Mea culpa</i>."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 3, "creation_date": 1522104714, "post_id": 49500978, "comment_id": 86007756, "body": "Terminology matters aside, it is worth noting that the composition law of <code>Applicative</code>, <code>u &lt;*&gt; (v &lt;*&gt; w) = pure (.) &lt;*&gt; u &lt;*&gt; v &lt;*&gt; w</code> does look a lot like <code>u (v w) = (u . v) w</code>, and that is no coincidence -- in fact, for <code>Identity</code> the law amounts to exactly that."}], "tags": [], "owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "is_accepted": true, "score": 1, "last_activity_date": 1522099927, "creation_date": 1522099927, "answer_id": 49500978, "question_id": 49500685, "link": "https://stackoverflow.com/questions/49500685/match-type-error-when-counting-palindromes-in-a-list-in-haskell/49500978#49500978", "title": "Match type error when counting palindromes in a list in Haskell", "body": "<p><code>isPalindrome :: String -&gt; Bool</code>, which is to say that it expects a string, then gives you a boolean to say whether or not that string is a palindrome.</p>\n\n<p><code>(==) :: Eq a =&gt; a -&gt; a -&gt; Bool</code>, which is to say that it expects two values of typeclass <code>Eq</code> (in other words: anything equatable) and tells you whether or not they are equal.</p>\n\n<p>Pair those together and you get <code>(== isPalindrome) :: (String -&gt; Bool) -&gt; Bool</code>*. You've handed <code>(==)</code> a <code>String -&gt; Bool</code> value, so it's expecting one more and will tell you if the two are equal. That's not quite what you want, though. You're not comparing two functions....</p>\n\n<p>In fact, you're not comparing any two things at all. You only want to see which values passed to <code>countPalindromes</code> return <code>True</code> when called by <code>isPalindrome</code>. That's what <code>filter</code> is for!</p>\n\n<pre><code>filter :: (a -&gt; Bool) -&gt; [a] -&gt; [a]\n</code></pre>\n\n<p>It's looking for an <code>a -&gt; Bool</code> to pass as the first argument. This is the function that will be deciding what makes it through the filter and what doesn't, and in this case you want to use some derivation of <code>isPalindrome</code>. Looking again at <code>isPalindrome</code> in this context we see:</p>\n\n<pre><code>isPalindrome :: String -&gt; Bool\n</code></pre>\n\n<p>that looks an awful lot like an <code>a -&gt; Bool</code> function! Let's try substituting all the <code>a</code>s in <code>filter</code>'s type signature with <code>String</code>.</p>\n\n<pre><code>filter :: (String -&gt; Bool) -&gt; [String] -&gt; [String]\n</code></pre>\n\n<p>That looks like it's exactly what you're wanting! Try, then, using <code>filter isPalindrome</code> instead of <code>filter (== isPalindrome)</code>.</p>\n\n<hr>\n\n<p>* nitpick: functions (more generally: values of type <code>(-&gt; r)</code>) are not members of the <code>Eq</code> typeclass so you'd actually get an error saying that you can't tell if a <code>String -&gt; Bool</code> is equal to another <code>String -&gt; Bool</code>. It's not relevant to the problem at-hand, though, so I'm pretending that's not an issue and burying this explanation down here.</p>\n"}], "owner": {"reputation": 187, "user_id": 9517321, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6dc52bd738d15863c94b001d51483099?s=128&d=identicon&r=PG&f=1", "display_name": "Aelin", "link": "https://stackoverflow.com/users/9517321/aelin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 172, "favorite_count": 0, "accepted_answer_id": 49500978, "answer_count": 1, "score": -1, "last_activity_date": 1522212623, "creation_date": 1522098761, "last_edit_date": 1522212623, "question_id": 49500685, "link": "https://stackoverflow.com/questions/49500685/match-type-error-when-counting-palindromes-in-a-list-in-haskell", "title": "Match type error when counting palindromes in a list in Haskell", "body": "<p>I'm getting a match type <code>[Char]</code> with <code>String -&gt; Bool</code> error:</p>\n\n<pre><code>isPalindrome :: String -&gt; Bool\nisPalindrome w = w == reverse w\n\ncountPalindromes :: [String] -&gt; Int\ncountPalindromes ss = length (filter (== isPalindrome) ss)\n</code></pre>\n\n<p><code>countPalindromes</code> uses <code>isPalindrome</code> to check if a string is a palindrome.</p>\n\n<p>I now have a different issue than in <a href=\"https://stackoverflow.com/q/49498908/2751851\">my first question</a> about this palindrome count task. The first issue was solved, and I was instructed to open a new question to solve the new issue. Which is why this is a different question.</p>\n"}, {"tags": ["haskell", "svg", "haskell-diagrams"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1522101200, "post_id": 49500235, "comment_id": 86006485, "body": "So what are you asking \u2013 how to fool around with diagrams in an REPL, or how to generate SVG files within some existing Haskell application?"}, {"owner": {"reputation": 4173, "user_id": 593975, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/f9550b19b4c3f1dc5b72ae7c4123d817?s=128&d=identicon&r=PG", "display_name": "guthrie", "link": "https://stackoverflow.com/users/593975/guthrie"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1522103027, "post_id": 49500235, "comment_id": 86007250, "body": "How to generate svg files from inside GHCi. Seems that if I manually set the args in GHCi (:set args ...) and then run main it will work, but I&#39;d like to do this from within the .hs file itself."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1522104019, "post_id": 49500235, "comment_id": 86007538, "body": "<a href=\"https://hackage.haskell.org/package/diagrams-lib-1.4.2/docs/Diagrams-Size.html#v:mkSizeSpec\" rel=\"nofollow noreferrer\">The type of <code>mkSizeSpec</code> has changed a few <i>diagrams</i> versions ago</a>, as <code>SizeSpec</code> is now parameterised over the number of dimensions. The solution in the other Q&amp;A should work if you adjust it to account for that."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1522108088, "post_id": 49500235, "comment_id": 86008726, "body": "@guthrie yeah but why do you want that? The point of an REPL is to have direct feedback, but GHCi can&#39;t show you SVGs. (<a href=\"https://github.com/gibiansky/IHaskell\" rel=\"nofollow noreferrer\">IHaskell</a> can.)"}, {"owner": {"reputation": 4173, "user_id": 593975, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/f9550b19b4c3f1dc5b72ae7c4123d817?s=128&d=identicon&r=PG", "display_name": "guthrie", "link": "https://stackoverflow.com/users/593975/guthrie"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1522117214, "post_id": 49500235, "comment_id": 86010972, "body": "@duplode - Thanks, I saw that, but hadn&#39;t yet figured out  the mapping. And mkSizeSpec2D is still listed in Diagrams.TwoD.Size, although including it doesn&#39;t seem to expose it. Just working my way through this library..."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1522117673, "post_id": 49500235, "comment_id": 86011075, "body": "@guthrie <code>mkSizeSpec2D</code> appears to be reexported by <code>Diagrams.TwoD</code> and, transitively, by <code>Diagrams</code> and <code>Diagrams.Prelude</code>. Other than the signature change, it should work the same as before."}, {"owner": {"reputation": 4173, "user_id": 593975, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/f9550b19b4c3f1dc5b72ae7c4123d817?s=128&d=identicon&r=PG", "display_name": "guthrie", "link": "https://stackoverflow.com/users/593975/guthrie"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1522157362, "post_id": 49500235, "comment_id": 86033150, "body": "@leftaroundabout - yes; the Haskell file spawns a viewer, which is then run by GHCi from main."}], "answers": [{"comments": [{"owner": {"reputation": 4173, "user_id": 593975, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/f9550b19b4c3f1dc5b72ae7c4123d817?s=128&d=identicon&r=PG", "display_name": "guthrie", "link": "https://stackoverflow.com/users/593975/guthrie"}, "edited": false, "score": 0, "creation_date": 1522116785, "post_id": 49501755, "comment_id": 86010885, "body": "Thanks; the :main is the answer, I didn&#39;t know about it."}], "tags": [], "owner": {"reputation": 28488, "user_id": 402884, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/35583fe46c2cde92467710cc7ceff266?s=128&d=identicon&r=PG", "display_name": "Chris Martin", "link": "https://stackoverflow.com/users/402884/chris-martin"}, "is_accepted": true, "score": 2, "last_activity_date": 1522103999, "creation_date": 1522103999, "answer_id": 49501755, "question_id": 49500235, "link": "https://stackoverflow.com/questions/49500235/haskell-diagrams-generating-svg-without-compiling/49501755#49501755", "title": "Haskell diagrams: generating SVG without compiling?", "body": "<p>You can <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/ghci.html#ghci-cmd-:load\" rel=\"nofollow noreferrer\"><code>:load</code></a> the <code>.lhs</code> file into GHCi and then use the <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/ghci.html#ghci-cmd-:main\" rel=\"nofollow noreferrer\"><code>:main</code></a> command to run it.</p>\n\n<pre><code>$ cd $(mktemp -d)                                                                                                                                                                                                                     \n\n$ wget -q https://archives.haskell.org/projects.haskell.org/diagrams/gallery/FibCalls.lhs\n\n$ stack ghci --package diagrams-lib diagrams-svg diagrams-contrib\n\n\u03bb&gt; :load FibCalls.lhs\n[1 of 1] Compiling Main             ( FibCalls.lhs, interpreted )\nOk, one module loaded.\n\n\u03bb&gt; :main -o out.svg\n\n\u03bb&gt; :quit\nLeaving GHCi.\n\n$ head -n2 out.svg \n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n</code></pre>\n"}], "owner": {"reputation": 4173, "user_id": 593975, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/f9550b19b4c3f1dc5b72ae7c4123d817?s=128&d=identicon&r=PG", "display_name": "guthrie", "link": "https://stackoverflow.com/users/593975/guthrie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 238, "favorite_count": 0, "accepted_answer_id": 49501755, "answer_count": 1, "score": 1, "last_activity_date": 1522103999, "creation_date": 1522096747, "last_edit_date": 1522103062, "question_id": 49500235, "link": "https://stackoverflow.com/questions/49500235/haskell-diagrams-generating-svg-without-compiling", "title": "Haskell diagrams: generating SVG without compiling?", "body": "<p>I tried <a href=\"https://archives.haskell.org/projects.haskell.org/diagrams/gallery/FibCalls.html\" rel=\"nofollow noreferrer\">the Fibonacci demo from the <em>diagrams</em> gallery</a>\nbut, as many of their examples do, it requires compilation and then the <code>mainWith</code> function takes various options, including a file name for SVG output. I'd like to get the same result of an .svg output file, but from within GHCi, without having to compile first.</p>\n\n<p>While <a href=\"https://stackoverflow.com/questions/23083528/haskell-diagrams-output-without-commandline\">this Q&amp;A</a> is about the same issue, the solution there uses API calls that no longer seem to work, such as <code>SizeSpec2D</code> and <code>mkSizeSpec</code>.</p>\n"}, {"tags": ["haskell", "currying"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1522092800, "post_id": 49499095, "comment_id": 86002534, "body": "You can use template Haskell to generate an <code>uncurry</code> for every number (well up to the maximum number of elements a tuple can carry."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 2, "creation_date": 1522096464, "post_id": 49499095, "comment_id": 86004349, "body": "Though I have closed the question (and deleted my answer, for the sake of consistency -- it was the same as <a href=\"https://stackoverflow.com/a/7054444/2751851\">the accepted one in the target</a>), note that this a textbook example of an useful duplicate: essentially the same question, but phrased in a very different way."}], "owner": {"reputation": 3418, "user_id": 738762, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/0ef9a1ef193431ba6a0e2fc5c71ab22d?s=128&d=identicon&r=PG", "display_name": "nomen", "link": "https://stackoverflow.com/users/738762/nomen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 68, "favorite_count": 0, "closed_date": 1522096063, "answer_count": 0, "score": 1, "last_activity_date": 1522093048, "creation_date": 1522092068, "question_id": 49499095, "link": "https://stackoverflow.com/questions/49499095/haskell-uncurrying-for-multiple-arguments", "closed_reason": "Duplicate", "title": "Haskell Uncurrying for Multiple Arguments", "body": "<p>I have a Haskell data constructor that defines an \"API\" (in a higher layer in my app), so I don't want to change it:</p>\n\n<pre><code>ViewModel = ViewModel { foo :: Entity Foo\n                      , bar :: Entity Bar\n                      , baz :: Entity Baz\n                      }\n</code></pre>\n\n<p>and I have a function that produces lists of triples:</p>\n\n<pre><code>getViewModels :: Monad m =&gt; m [(Entity Foo, Entity Bar, Entity Baz)]\n</code></pre>\n\n<p>Is there a general method to uncurry <code>ViewModel</code> in such a way that it consumes triples?  More generally, <strong>is there a way to make <code>ViewModel</code> consume <code>n</code>-tuples?</strong></p>\n\n<p>I have in mind something like this when I call my code:</p>\n\n<pre><code>do\n  views &lt;- getViewModels\n  return . fmap (uncurryN ViewModel) $ views\n</code></pre>\n\n<p>where <code>N</code> is some natural number.</p>\n"}, {"tags": ["string", "list", "haskell", "palindrome"], "comments": [{"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1522091596, "post_id": 49498908, "comment_id": 86001868, "body": "I don&#39;t follow you. This code is equivalent to <code>length (filter (== isPalindrome) ss)</code>. What do you say that <code>length</code> is applied to two arguments ?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1522091606, "post_id": 49498908, "comment_id": 86001875, "body": "I think a first issue is the <code>filter (== isPalindrom)</code>. Why do you expect that to list all palindromes in the string?"}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1522091666, "post_id": 49498908, "comment_id": 86001910, "body": "Ah indeed, a <code>map</code> is missing here."}, {"owner": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "reply_to_user": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1522091692, "post_id": 49498908, "comment_id": 86001926, "body": "@St&#233;phaneLaurent No, <code>length filter (== isPalindrome) ss</code> is parsed as <code>((length filter) (== isPalindrome)) ss</code>"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1522091721, "post_id": 49498908, "comment_id": 86001947, "body": "@St&#233;phaneLaurent: no, furthermore the problem is a bit underspecified, do we count overlapping palindromes?"}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "reply_to_user": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "edited": false, "score": 0, "creation_date": 1522091759, "post_id": 49498908, "comment_id": 86001972, "body": "@M.Aroosi Ah ok. So this code does not compile. I didn&#39;t understand that."}], "answers": [{"comments": [{"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 2, "creation_date": 1522093195, "post_id": 49498981, "comment_id": 86002739, "body": "I&#39;m glad I read your answer carefully before pointing out the error in <code>filter (== isPalindrome) ss</code>."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 8, "last_activity_date": 1522091709, "creation_date": 1522091709, "answer_id": 49498981, "question_id": 49498908, "link": "https://stackoverflow.com/questions/49498908/count-number-of-palindromes-in-a-list-of-strings-haskell/49498981#49498981", "title": "Count number of palindromes in a list of strings, Haskell", "body": "<p>You may use parentheses to affect function application:</p>\n\n<pre><code>countPalindromes ss = length (filter (== isPalindrome) ss)\n</code></pre>\n\n<p>The parentheses will cause the entire expression <code>filter (== isPalindrome) ss</code> to be grouped into a single term, and its result passed on to <code>length</code>.</p>\n\n<p>This will get you to the next error; I encourage you to read it carefully and see if you can make progress from here yourself, then open a fresh question if you spend, say, fifteen minutes trying to understand it without making progress.</p>\n"}], "owner": {"reputation": 187, "user_id": 9517321, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6dc52bd738d15863c94b001d51483099?s=128&d=identicon&r=PG&f=1", "display_name": "Aelin", "link": "https://stackoverflow.com/users/9517321/aelin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 366, "favorite_count": 0, "accepted_answer_id": 49498981, "answer_count": 1, "score": 0, "last_activity_date": 1522091709, "creation_date": 1522091404, "question_id": 49498908, "link": "https://stackoverflow.com/questions/49498908/count-number-of-palindromes-in-a-list-of-strings-haskell", "title": "Count number of palindromes in a list of strings, Haskell", "body": "<p>The function countPalindromes receives a list of strings and returns a count of how many of the strings are palindromes.</p>\n\n<pre><code>isPalindrome :: String -&gt; Bool\nisPalindrome w = w == reverse w\n\ncountPalindromes :: [String] -&gt; Int\ncountPalindromes ss = length filter (== isPalindrome) ss \n</code></pre>\n\n<p>I know that the function length is applied to two arguments instead of one. I just don't know how to fix this?</p>\n"}, {"tags": ["haskell", "yesod"], "answers": [{"tags": [], "owner": {"reputation": 46, "user_id": 9573900, "user_type": "unregistered", "profile_image": "https://www.gravatar.com/avatar/632ca35420ca0495f2c76191e9ee74df?s=128&d=identicon&r=PG", "display_name": "Josh", "link": "https://stackoverflow.com/users/9573900/josh"}, "is_accepted": true, "score": 3, "last_activity_date": 1522409700, "last_edit_date": 1522409700, "creation_date": 1522398666, "answer_id": 49571057, "question_id": 49498584, "link": "https://stackoverflow.com/questions/49498584/whats-wrong-with-this-yesodauth-instance/49571057#49571057", "title": "What&#39;s wrong with this YesodAuth instance?", "body": "<p>Put <code>liftHandler .</code> before every <code>runDB</code>.</p>\n"}], "owner": {"reputation": 1106, "user_id": 4197293, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/fdd3542179c9735316f934724992b7ce?s=128&d=identicon&r=PG", "display_name": "jeiea", "link": "https://stackoverflow.com/users/4197293/jeiea"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 237, "favorite_count": 0, "accepted_answer_id": 49571057, "answer_count": 1, "score": 5, "last_activity_date": 1522409700, "creation_date": 1522090148, "last_edit_date": 1522185977, "question_id": 49498584, "link": "https://stackoverflow.com/questions/49498584/whats-wrong-with-this-yesodauth-instance", "title": "What&#39;s wrong with this YesodAuth instance?", "body": "<p>I've just migrated from current yesod scaffold to latest <code>yesod-1.6.0</code>, <code>yesod-auth-1.6.2</code>.</p>\n\n<pre><code>instance YesodAuth App where\n    type AuthId App = UserId\n\n    -- ....\n\n    authenticate creds = runDB $ do\n        x &lt;- getBy $ UniqueUser $ credsIdent creds\n        case x of\n            Just (Entity uid _) -&gt; return $ Authenticated uid\n            Nothing -&gt; return $ UserError InvalidUsernamePass\n</code></pre>\n\n<p>Before migration this code worked well. But after the following error occurs.</p>\n\n<pre><code>.../src/Foundation.hs:212:26: error:\n    \u2022 Could not deduce: m ~ HandlerFor site8\n      from the context: (MonadHandler m, HandlerSite m ~ App)\n        bound by the type signature for:\n                   authenticate :: forall (m :: * -&gt; *).\n                                   (MonadHandler m, HandlerSite m ~ App) =&gt;\n                                   Creds App -&gt; m (AuthenticationResult App)\n        at src/Foundation.hs:212:5-16\n      \u2018m\u2019 is a rigid type variable bound by\n        the type signature for:\n          authenticate :: forall (m :: * -&gt; *).\n                          (MonadHandler m, HandlerSite m ~ App) =&gt;\n                          Creds App -&gt; m (AuthenticationResult App)\n        at src/Foundation.hs:212:5-16\n      Expected type: m (AuthenticationResult App)\n        Actual type: HandlerFor site8 (AuthenticationResult App)\n    \u2022 In the expression:\n        runDB\n          $ do x &lt;- getBy $ UniqueUser $ credsIdent creds\n               case x of\n                 Just (Entity uid _) -&gt; return $ Authenticated uid\n                 Nothing -&gt; return $ UserError InvalidUsernamePass\n      In an equation for \u2018authenticate\u2019:\n          authenticate creds\n            = runDB\n                $ do x &lt;- getBy $ UniqueUser $ credsIdent creds\n                     case x of\n                       Just (Entity uid _) -&gt; return $ Authenticated uid\n                       Nothing -&gt; return $ UserError InvalidUsernamePass\n      In the instance declaration for \u2018YesodAuth App\u2019\n    \u2022 Relevant bindings include\n        authenticate :: Creds App -&gt; m (AuthenticationResult App)\n          (bound at src/Foundation.hs:212:5)\n    |\n212 |     authenticate creds = runDB $ do\n    |                          ^^^^^^^^^^...\n</code></pre>\n\n<p>I don't know why it can't pass type check. <code>runDB</code> works well in places not related to <code>yesod-auth</code>.</p>\n\n<p><strong>EDIT:</strong> I extracted codes that seems relevant.</p>\n\n<pre><code>class (MonadResource m, MonadLogger m) =&gt; MonadHandler m where\n    type HandlerSite m\n    type SubHandlerSite m\n    liftHandler :: HandlerFor (HandlerSite m) a -&gt; m a\n    liftSubHandler :: SubHandlerFor (SubHandlerSite m) (HandlerSite m) a -&gt; m a\n\ninstance MonadHandler (HandlerFor site) where\n    type HandlerSite (HandlerFor site) = site\n    type SubHandlerSite (HandlerFor site) = site\n    liftHandler = id\n    {-# INLINE liftHandler #-}\n    liftSubHandler (SubHandlerFor f) = HandlerFor f\n    {-# INLINE liftSubHandler #-}\n\nnewtype HandlerFor site a = HandlerFor\n    { unHandlerFor :: HandlerData site site -&gt; IO a\n    }\n    deriving Functor\n\ninstance MonadHandler (HandlerFor site) where\n    type HandlerSite (HandlerFor site) = site\n    type SubHandlerSite (HandlerFor site) = site\n    liftHandler = id\n    {-# INLINE liftHandler #-}\n    liftSubHandler (SubHandlerFor f) = HandlerFor f\n    {-# INLINE liftSubHandler #-}\n</code></pre>\n\n<p>With above definitions, I wonder the reason that the following cannot pass type check.</p>\n\n<pre><code>problem :: (MonadHandler m, HandlerSite m ~ App) =&gt; m ()\nproblem = (undefined :: HandlerFor App ())\n\n    \u2022 Could not deduce: m ~ HandlerFor App\n      from the context: (MonadHandler m, HandlerSite m ~ App)\n        bound by the type signature for:\n                   problem :: forall (m :: * -&gt; *).\n                          (MonadHandler m, HandlerSite m ~ App) =&gt;\n                          m ()\n        at /intero/intero1940cny-TEMP.hs:210:1-52\n      \u2018m\u2019 is a rigid type variable bound by\n        the type signature for:\n          problem :: forall (m :: * -&gt; *).\n                 (MonadHandler m, HandlerSite m ~ App) =&gt;\n                 m ()\n        at /intero/intero1940cny-TEMP.hs:210:1-52\n      Expected type: m ()\n        Actual type: HandlerFor App ()\n    \u2022 In the expression: (undefined :: HandlerFor App ())\n      In an equation for \u2018problem\u2019: problem = (undefined :: HandlerFor App ())\n    \u2022 Relevant bindings include\n        problem :: m ()\n          (bound at /intero/intero1940cny-TEMP.hs:211:1)\n</code></pre>\n"}, {"tags": ["haskell", "ghc", "type-inference", "functor"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1522091168, "post_id": 49498426, "comment_id": 86001636, "body": "A minimized version of this problem that may be worth thinking about: <code>good, bad :: Proxy a -&gt; Proxy b; good Proxy = Proxy; bad proxy = proxy</code>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1522135236, "post_id": 49498426, "comment_id": 86017275, "body": "By the way, this turns out to be a problem in Haskell <i>implementation</i>, because GHC&#39;s main intermediate language (called GHC core) is typed."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1522134845, "post_id": 49498573, "comment_id": 86016998, "body": "With <code>ScopedTypeVariables</code>, you can have type signatures in patterns."}], "tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": true, "score": 8, "last_activity_date": 1522090127, "creation_date": 1522090127, "answer_id": 49498573, "question_id": 49498426, "link": "https://stackoverflow.com/questions/49498426/type-check-fails-with-as-pattern/49498573#49498573", "title": "Type check fails with as-pattern", "body": "<p>You've stumbled upon a subtle little error. Take a look at the type of <code>First</code>.</p>\n\n<pre><code>First :: a -&gt; Or a b\n</code></pre>\n\n<p>Now, we usually leave out <code>forall</code> quantifiers, but this is true <em>for all</em> <code>a</code> and <code>b</code>. This is going to be important.</p>\n\n<pre><code>fmap1 _ (First x) = First x\n\nfmap2 _ first @ (First _) = first\n</code></pre>\n\n<p>Let's apply some explicit type signatures. (The below is not actual Haskell code, as you can't have type signatures in a pattern. But it illustrates the point.)</p>\n\n<pre><code>fmap1 :: (b -&gt; c) -&gt; Or a b -&gt; Or a c\nfmap1 _ ((First :: a -&gt; Or a b) x) = (First :: a -&gt; Or a c) x\n\nfmap2 :: (b -&gt; c) -&gt; Or a b -&gt; Or a c\nfmap2 _ (first :: Or a b) @ (First _) = (first :: Or a b)\n</code></pre>\n\n<p>So in <code>fmap2</code>, <code>first</code> has type <code>Or a b</code>, but you need an <code>Or a c</code> to make everything work. In the first example, it <em>looks</em> like you're just unapplying and then reapplying <code>First</code>, but you're really applying a different (but related) function. It's like how you can do <code>show 1</code> and <code>show \"A\"</code>. These are two different calls to two different functions which happen to share the name <code>show</code>. In your case, it's a similar concept. The <code>First</code> you're extracting is a <code>Or a b</code>, but the <code>First</code> you construct on the right-hand-side is a <code>Or a c</code>.</p>\n"}], "owner": {"reputation": 24109, "user_id": 775954, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/9f5a87db35489d2958945f35b457f1ee?s=128&d=identicon&r=PG", "display_name": "Matthias Braun", "link": "https://stackoverflow.com/users/775954/matthias-braun"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 48, "favorite_count": 0, "accepted_answer_id": 49498573, "answer_count": 1, "score": 1, "last_activity_date": 1522090127, "creation_date": 1522089583, "question_id": 49498426, "link": "https://stackoverflow.com/questions/49498426/type-check-fails-with-as-pattern", "title": "Type check fails with as-pattern", "body": "<p>I wrote a <code>Functor</code> instance for my custom <code>Either</code> type, called <code>Or</code>, which works just fine like this:</p>\n\n<pre><code>data Or a b = First a\n            | Second b\n            deriving (Eq, Show)\n\ninstance Functor (Or a) where\n  fmap _ (First x)  = First x\n  fmap f (Second b) = Second $ f b\n</code></pre>\n\n<p>Yet, when I use the as-pattern, the program doesn't typecheck anymore:</p>\n\n<pre><code>instance Functor (Or a) where\n  fmap _ first@(First _) = first\n  fmap f (Second b)      = Second $ f b\n</code></pre>\n\n<p>The error message:</p>\n\n<pre><code>error:\n    \u2022 Couldn't match type \u2018a1\u2019 with \u2018b\u2019\n      \u2018a1\u2019 is a rigid type variable bound by\n        the type signature for:\n          fmap :: forall a1 b. (a1 -&gt; b) -&gt; Or a a1 -&gt; Or a b\n        at /home/me/haskell/functors/src/Lib.hs:139:3-6\n      \u2018b\u2019 is a rigid type variable bound by\n        the type signature for:\n          fmap :: forall a1 b. (a1 -&gt; b) -&gt; Or a a1 -&gt; Or a b\n        at /home/me/haskell/functors/src/Lib.hs:139:3-6\n      Expected type: Or a b\n        Actual type: Or a a1\n    \u2022 In the expression: first\n      In an equation for \u2018fmap\u2019: fmap _ first@(First _) = first\n      In the instance declaration for \u2018Functor (Or a)\u2019\n    \u2022 Relevant bindings include\n        first :: Or a a1\n          (bound at /home/me/haskell/functors/src/Lib.hs:139:10)\n        fmap :: (a1 -&gt; b) -&gt; Or a a1 -&gt; Or a b\n          (bound at /home/me/haskell/functors/src/Lib.hs:139:3)\n    |\n139 |   fmap _ first@(First _) = first\n    |                            ^^^^^\n</code></pre>\n\n<p>This surprises me since I assumed <code>First x</code> and <code>first</code> to have the same type.</p>\n\n<p>What's the reason for this type error?</p>\n\n<p>I'm using GHC 8.2.2.</p>\n"}, {"tags": ["haskell", "pattern-matching", "hmatrix"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1522087657, "post_id": 49497808, "comment_id": 85999723, "body": "No, it thinks <code>a</code> should be a <code>Vector Double</code>, and you specify it as a <code>Double</code>. Note that in Haskell, the two operands of the <code>+</code> should be the same, and that Haskell has no subclassing or implicit type casts."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1522087737, "post_id": 49497808, "comment_id": 85999767, "body": "You can use <code>cmap (+a) v</code>."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1522089825, "post_id": 49497808, "comment_id": 86000888, "body": "How is this question about pattern matching? You&#39;re not doing any pattern matching here. If the real use case is more tricky than <code>madd a v = a + v</code> (which by the way is just a complicated way of writing <code>madd = (+)</code>), you should perhaps explain what the real use case is."}, {"owner": {"reputation": 341, "user_id": 5526180, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/TXrPk.jpg?s=128&g=1", "display_name": "mahmoud fathy", "link": "https://stackoverflow.com/users/5526180/mahmoud-fathy"}, "edited": false, "score": 0, "creation_date": 1522090684, "post_id": 49497808, "comment_id": 86001357, "body": "it works ... more elaboratively <code>cmap (\\x -&gt; x+a) v</code>  because thie other syntax gets me confused \ud83d\ude06 .. But why ? Do I need cmap always in order to d operations on hmatrix vectors !"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1522090964, "post_id": 49497808, "comment_id": 86001506, "body": "Well, you can certainly add vectors to vectors using <code>+</code> directly, but scalars are not vectors (no matter what Matlab et al. would have you believe). As I already commented in that other question, Haskell really doesn&#39;t lend itself well to an array-based workflow. This is somewhat <i>by design</i>: we like to give everything the type that it&#39;s <i>conceptually represents</i>, not say \u201coh well, everything is an array/vector/matrix/tensor/numberthingy\u201d."}, {"owner": {"reputation": 341, "user_id": 5526180, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/TXrPk.jpg?s=128&g=1", "display_name": "mahmoud fathy", "link": "https://stackoverflow.com/users/5526180/mahmoud-fathy"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1522091149, "post_id": 49497808, "comment_id": 86001627, "body": "@leftaroundabout the question is about pattern matching. I need the arguments with the function. In this example <code>v</code> doesn&#39;t match the <code>Vector Double</code> which is confusing and I can&#39;t wrap my head around it !"}, {"owner": {"reputation": 341, "user_id": 5526180, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/TXrPk.jpg?s=128&g=1", "display_name": "mahmoud fathy", "link": "https://stackoverflow.com/users/5526180/mahmoud-fathy"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1522091203, "post_id": 49497808, "comment_id": 86001668, "body": "@WillemVanOnsem the full error message <code>In the second argument of \u2018(+)\u2019, namely \u2018v\u2019       In the expression: a + v       In an equation for \u2018madd\u2019: madd a v = a + v</code> seems concerned about <code>v</code> not <code>a</code>"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1522091267, "post_id": 49497808, "comment_id": 86001694, "body": "Are you sure you want to add a number to an <i>array</i>? When Matlab does something like that, it usually means the array is just a poor man&#39;s representation of a <i>function</i> (sampled in some way). Why not just represent it as a function then? \u2014 Also: are you sure you&#39;ve understood what  pattern matching is? It seems you&#39;re using the term to mean <i>type matching</i>, but that&#39;s something quite different."}], "owner": {"reputation": 341, "user_id": 5526180, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/TXrPk.jpg?s=128&g=1", "display_name": "mahmoud fathy", "link": "https://stackoverflow.com/users/5526180/mahmoud-fathy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 74, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1522089673, "creation_date": 1522087343, "last_edit_date": 1522089673, "question_id": 49497808, "link": "https://stackoverflow.com/questions/49497808/pattern-matching-on-hmatrix-vector-type-in-haskell", "title": "Pattern matching on hmatrix Vector type in haskell", "body": "<p>That question sounds trivial but I really can't find anything helping me on how to deal with it. \nHere's a simple example to reproduce that on Haskell : </p>\n\n<pre><code>import Numeric.LinearAlgebra.HMatrix\nmadd :: Double -&gt; Vector Double -&gt; Vector Double\nmadd a v = a + v\n</code></pre>\n\n<p>when I load this it complains </p>\n\n<pre><code>Couldn't match expected type \u2018Double\u2019\n              with actual type \u2018Vector Double\u2019\n</code></pre>\n\n<p>it thinks v is Double while it should be Vector Double, how can I force it in the pattern match to be so ?</p>\n\n<p>please :\nI need to match the arguments, not just assign to a lambda function.</p>\n"}, {"tags": ["haskell", "typeclass", "representable", "distributive"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1522086621, "post_id": 49497241, "comment_id": 85999185, "body": "You appear to have the meaning of a superclass constraint backwards. e.g. there are <code>Applicative</code>s which are not <code>Monad</code>s, and we have <code>class Applicative f =&gt; Monad f</code>. (And see also <a href=\"https://hackage.haskell.org/package/adjunctions-4.4/docs/Data-Functor-Rep.html#v:distributeRep\" rel=\"nofollow noreferrer\"><code>distributeRep</code></a> which witnesses the inclusion of <code>Representable</code> in <code>Distributive</code>.)"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1560557044, "post_id": 49497241, "comment_id": 99788640, "body": "I know it has been a while, but anyway: I have rewritten my answer into something that hopefully will be more informative."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1560625299, "post_id": 49497748, "comment_id": 99801252, "body": "I never thought about the fact that the arrow is the wrong way around in a class declaration! Sounds like the Haskell committee made a mistake back in the day."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1560630209, "post_id": 49497748, "comment_id": 99802264, "body": "@dfeuer I feel both choices are defensible. Personally, I find <code>Applicative f &lt;= Monad f</code> a little awkward because <code>&lt;=</code> also suggests ordering, which might justify choosing to write it as <code>Monad f &lt;= Applicative f</code> instead. It is interesting to note that <a href=\"http://homepages.inf.ed.ac.uk/wadler/papers/class-letter/class-letter.txt\" rel=\"nofollow noreferrer\">Wadler&#39;s original propsal for type classes</a> didn&#39;t actually use any sort of arrow to introduce subclassing in a class declaration."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1560638303, "post_id": 49497748, "comment_id": 99803718, "body": "Another option would have been to swap the positions: <code>class Integral a =&gt; (Real a, Enum a) where ...</code>. That&#39;s not too far from Wadler."}], "tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 2, "last_activity_date": 1560556970, "last_edit_date": 1592644375, "creation_date": 1522087140, "answer_id": 49497748, "question_id": 49497241, "link": "https://stackoverflow.com/questions/49497241/how-to-write-a-representable-instance-using-only-distributive-properties/49497748#49497748", "title": "How to write a Representable instance using only Distributive properties?", "body": "<p>The superclass relationship between <code>Distributive</code> and <a href=\"http://hackage.haskell.org/package/adjunctions-4.4/docs/Data-Functor-Rep.html\" rel=\"nofollow noreferrer\"><code>Representable</code></a>...</p>\n<pre><code>class Distributive f =&gt; Representable f where\n</code></pre>\n<p>... means that if <code>f</code> is a <code>Representable</code>, then it also must be a <code>Distributive</code>, and not the other way around. When used for subclassing, <code>=&gt;</code> should be read as &quot;is a prerequisite of&quot;, rather than &quot;implies&quot;. (This is, in fact, opposite to how it is when <code>=&gt;</code> is used for constraints in type signatures. Purescript <a href=\"https://github.com/purescript/documentation/blob/master/language/Differences-from-Haskell.md#type-classes\" rel=\"nofollow noreferrer\">uses <code>&lt;=</code> for subclassing</a> for this very reason.)</p>\n<p>For most other pairs of superclass and subclass, the story would end here. <code>Distributive</code> and <code>Representable</code>, however, have a special relationship, in that <code>Distributive</code> functors are actually representable, as stated by the documentation of both <a href=\"http://hackage.haskell.org/package/distributive-0.6/docs/Data-Distributive.html\" rel=\"nofollow noreferrer\"><code>Distributive</code></a>...</p>\n<blockquote>\n<p>Categorically every <code>Distributive</code> functor is actually a right adjoint, and so it must be <code>Representable</code> endofunctor and preserve all limits. This is a fancy way of saying it isomorphic to <code>(-&gt;) x</code> for some <code>x</code>.</p>\n</blockquote>\n<p>... and <code>Representable</code>:</p>\n<blockquote>\n<p>A <code>Functor</code> <code>f</code> is <code>Representable</code> if <code>tabulate</code> and <code>index</code> witness an isomorphism to <code>(-&gt;) x</code>.</p>\n<p>Every <code>Distributive</code> <code>Functor</code> is actually <code>Representable</code>.</p>\n<p>Every <code>Representable</code> <code>Functor</code> from Hask to Hask is a right adjoint.</p>\n</blockquote>\n<p>The hierarchy is set up the way it is, with <code>Distributive</code> as the superclass, because <code>Distributive</code> is meant to have a simpler interface <a href=\"https://www.schoolofhaskell.com/user/edwardk/moore/for-less#distributive-functors--represent-\" rel=\"nofollow noreferrer\">which is expressible in Haskell 98</a>, unlike <code>Representable</code> (which uses a type family) and <a href=\"http://hackage.haskell.org/package/adjunctions-4.4/docs/Data-Functor-Adjunction.html\" rel=\"nofollow noreferrer\"><code>Adjunction</code></a> (which is a multi-parameter type class). From a more conceptual point of view, while the distributive laws imply that every <code>Distributive</code> is representable, they are not enough for figuring out what the representation is. Getting our hands on the representation requires specifying it, either directly (as in <code>Representable</code>) or indirectly (as in <code>Adjunction</code>).</p>\n"}], "owner": {"reputation": 1307, "user_id": 1549736, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/LBwQu.jpg?s=128&g=1", "display_name": "dbanas", "link": "https://stackoverflow.com/users/1549736/dbanas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 186, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1560556970, "creation_date": 1522085261, "question_id": 49497241, "link": "https://stackoverflow.com/questions/49497241/how-to-write-a-representable-instance-using-only-distributive-properties", "title": "How to write a Representable instance using only Distributive properties?", "body": "<p>Say I've got a <code>Distributive</code> instance written for some complex custom type, <code>Foo</code>.\nIs it possible to write <code>Foo</code>'s <code>Representable</code> instance using only the properties available from its <code>Distributive</code> instance? And, if not, then why is <code>Distributive</code> a superclass of <code>Representable</code>?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 3, "creation_date": 1522082830, "post_id": 49496529, "comment_id": 85997065, "body": "You&#39;re trying to use the same name for two different variables. You seem to think that <code>boardSize</code> refers to the <code>boardSize</code> identifier defined above. It does not. It is a pattern variable that has nothing to do with the <code>boardSize = 8</code> above."}, {"owner": {"reputation": 307, "user_id": 2840838, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/d7c45dc364cff6e3f55935b9894edf92?s=128&d=identicon&r=PG&f=1", "display_name": "Lo HaBuyshan", "link": "https://stackoverflow.com/users/2840838/lo-habuyshan"}, "reply_to_user": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1522083182, "post_id": 49496529, "comment_id": 85997246, "body": "I see, but I want to avoid hard-coding. I guess I need <code>i&gt;= 1 &amp;&amp; i &lt;= boardSize</code> etc..."}, {"owner": {"reputation": 307, "user_id": 2840838, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/d7c45dc364cff6e3f55935b9894edf92?s=128&d=identicon&r=PG&f=1", "display_name": "Lo HaBuyshan", "link": "https://stackoverflow.com/users/2840838/lo-habuyshan"}, "reply_to_user": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1522083528, "post_id": 49496529, "comment_id": 85997440, "body": "oops  <code>i == 1 &amp;&amp; j == boardSize</code> etc..."}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1522089948, "post_id": 49496529, "comment_id": 86000941, "body": "Yes, but can use the <code>Eq</code> instance on tuples, which is pointwise equality: <code>(i,j) -&gt; (i,j) == (boardSize, boardSize)</code>."}, {"owner": {"reputation": 2418, "user_id": 1232832, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/2c492983af89b49d44250c79579a2641?s=128&d=identicon&r=PG", "display_name": "Shou Ya", "link": "https://stackoverflow.com/users/1232832/shou-ya"}, "edited": false, "score": 0, "creation_date": 1522147242, "post_id": 49496529, "comment_id": 86025534, "body": "Note that haskell doesn&#39;t allow you to pattern matching on a variable value. So <code>(boardSize, 1)  -&gt; True</code> this line actually captures whatever in the first place in the tuple to variable <code>boardSize</code> (shadowing the global one), instead of matching value 8 at the place."}], "answers": [{"comments": [{"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1522085079, "post_id": 49496725, "comment_id": 85998291, "body": "What is the great solution with <code>elem</code> here? My preferred solution would be chepner&#39;s final suggestion, with the <code>inCorner</code> helper function."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1522085618, "post_id": 49496725, "comment_id": 85998586, "body": "@amalloy The same but with <code>inCorner = (`elem` [1, boardSize])</code>. Not that great, but decent."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 2, "last_activity_date": 1522083254, "creation_date": 1522083254, "answer_id": 49496725, "question_id": 49496529, "link": "https://stackoverflow.com/questions/49496529/haskell-conflicting-definitions-in-case/49496725#49496725", "title": "Haskell: Conflicting definitions in case", "body": "<p>Pattern matching introduces <em>new</em> variables. You are redeclaring <code>boardSize</code> as a local, new variable. Use instead new variable names, and constrain them to be <code>boardSize</code> with a guard. E.g.</p>\n\n<pre><code>case (i, j) of\n        (1, 1)                  -&gt; True\n        (1, y) | y == boardSize -&gt; True\n        (x, 1) | x == boardSize -&gt; True\n        (x, y) | x == boardSize &amp;&amp; y == boardSize -&gt; True \n        _ -&gt; False\n</code></pre>\n\n<p>Note that the code above could be improved greatly. So many <code>True</code> and <code>False</code> hint at using <code>&amp;&amp;</code> or <code>||</code> instead.</p>\n\n<p>As a hint, try <code>(some property of i) &amp;&amp; (some property of j)</code> instead, if you want to simplify your code. Properties can involve <code>==</code> and <code>||</code> as needed. (For a more advanced solution, exploit <code>elem</code>)</p>\n"}, {"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1522085922, "post_id": 49496729, "comment_id": 85998758, "body": "My preferred bikeshed color: <code>isCornerPos (i,j) = all (`elem` [1,boardSize]) [i,j]</code>."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 3, "last_activity_date": 1522087338, "last_edit_date": 1522087338, "creation_date": 1522083263, "answer_id": 49496729, "question_id": 49496529, "link": "https://stackoverflow.com/questions/49496529/haskell-conflicting-definitions-in-case/49496729#49496729", "title": "Haskell: Conflicting definitions in case", "body": "<p>Names on the lefthand side of the <code>-&gt;</code> are patterns to match, not variables to be used. When matching patterns, a literal can only match itself, but a variable matches <em>anything</em>, and that value is assigned <em>to</em> the variable. This means that your <code>(1, boardSize)          -&gt; True</code> matches any tuple where the first element is 1, and sets <code>boardSize</code> equal to the second element in the expression on the right-hand size.</p>\n\n<hr>\n\n<p>It works the same as when you are defining a function, where <code>isCornerPos (i,j) = ...</code> assigns the two elements of the argument tuple to <code>i</code> and <code>j</code>, respectively, rather than trying to match the existing values of <code>i</code> and <code>j</code> against the argument. In fact, this is <em>exactly</em> the same as in the <code>case</code> expression, because the function definition uses syntactic sugar in place of a <code>case</code> match.</p>\n\n<pre><code>isCornerPos (i,j) = ...\n</code></pre>\n\n<p>is just short for</p>\n\n<pre><code>isCornerPos = \\x -&gt; case $x of\n                (i,j) -&gt; ...\n</code></pre>\n\n<hr>\n\n<p>The standard way of using <code>boardSize</code> would be to use a guard:</p>\n\n<pre><code>isCornerPos :: Postion -&gt; Bool\nisCornerPos (i,j) | i == 1 &amp;&amp; j == 1 = True\n                  | i == 1 &amp;&amp; j == boardSize = True\n                  | i == boardSize &amp;&amp; j == 1 = True\n                  | i == boardSize &amp;&amp; j == BoardSize = True\n                  | otherwise = False\n</code></pre>\n\n<p>Or combining this with pattern matching:</p>\n\n<pre><code>isCornerPos :: Postion -&gt; Bool\nisCornerPos (1,1) = True\nisCornerPos (1,j) = j == boardSize\nisCornerPos (i,1) = i == boardSize\nisCornerPos (i,j) = i == boardSize &amp;&amp; j == boardSize\n</code></pre>\n\n<p>I would define a helper function instead and write this without guards.</p>\n\n<pre><code>isCornerPos (i,j) = inCorner i &amp;&amp; inCorner j\n   where inCorner x = x == 1 || x == boardSize\n</code></pre>\n"}], "owner": {"reputation": 307, "user_id": 2840838, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/d7c45dc364cff6e3f55935b9894edf92?s=128&d=identicon&r=PG&f=1", "display_name": "Lo HaBuyshan", "link": "https://stackoverflow.com/users/2840838/lo-habuyshan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 401, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1549993334, "creation_date": 1522082610, "last_edit_date": 1549993334, "question_id": 49496529, "link": "https://stackoverflow.com/questions/49496529/haskell-conflicting-definitions-in-case", "title": "Haskell: Conflicting definitions in case", "body": "<p>I am getting <code>Conflicting definitions for 'boardSize'</code> in <code>isCornerPos</code> but not <code>isCornerPos'</code>. Why?</p>\n\n<pre><code>boardSize :: Int\nboardSize = 8\n\nisCornerPos :: Position -&gt; Bool\nisCornerPos (i, j) =\n    case (i, j) of\n        (1, 1)                  -&gt; True\n        (1, boardSize)          -&gt; True\n        (boardSize, 1)          -&gt; True\n        (boardSize, boardSize)  -&gt; True -- problem with this line\n        _ -&gt; False\n\nisCornerPos' :: Position -&gt; Bool\nisCornerPos' (i, j) =\n    case (i, j) of\n        (1, 1) -&gt; True\n        (1, 8) -&gt; True\n        (8, 1) -&gt; True\n        (8, 8) -&gt; True\n        _ -&gt; False\n</code></pre>\n"}, {"tags": ["haskell", "reader-monad"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1522080701, "post_id": 49495838, "comment_id": 85995825, "body": "Not everything you find on the internet is better than everything you write yourself."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1522080871, "post_id": 49495838, "comment_id": 85995898, "body": "I don&#39;t think that the example is meant to show the usefulness of the reader monad (which is not that huge), but to show how to use <code>ask, asks</code>."}, {"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1522081263, "post_id": 49495838, "comment_id": 85996106, "body": "@dfeuer so do I assume that trying write a function the way I did would be a better option."}, {"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1522081290, "post_id": 49495838, "comment_id": 85996125, "body": "@chi is the reader monad really not that useful? I keep hearing that it is .. :("}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1522081524, "post_id": 49495838, "comment_id": 85996259, "body": "@matthias, the reader monad <i>transformer</i> is much more useful. In your version, you should either drop the <code>&lt;*&gt;</code> business or eta reduce <code>context</code> argument away."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1522081901, "post_id": 49495838, "comment_id": 85996503, "body": "It is something that should be learned -- you are not wasting your time. It is however rare (IMO) to see the reader monad being used on its own. Usually, the reader transformer is used (as dfeuer mentions), or some other transformer instantiated with the reader monad."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 1, "creation_date": 1522089073, "post_id": 49495838, "comment_id": 86000474, "body": "There are cases where Reader (or the monad instance for ((-&gt;) r)) is useful in the real world - but those cases are places where you have code that&#39;s polymorphic in a type constructor and your use case is passing an argument in. This can come up when using the polymorphic types offered by lenses, for instance."}], "answers": [{"tags": [], "owner": {"reputation": 2863, "user_id": 2297560, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/948d4a17494b3c616a0873453b74670c?s=128&d=identicon&r=PG", "display_name": "user2297560", "link": "https://stackoverflow.com/users/2297560/user2297560"}, "is_accepted": true, "score": 9, "last_activity_date": 1522081898, "creation_date": 1522081898, "answer_id": 49496331, "question_id": 49495838, "link": "https://stackoverflow.com/questions/49495838/reader-monad-explanation-of-trivial-case/49496331#49496331", "title": "Reader Monad - explanation of trivial case", "body": "<p><code>Reader</code> isn't often used by itself in real code. As you have observed, it's not really better than just passing an extra argument to your functions. However, as part of a monad transformer it is an excellent way to pass configuration parameters through your application. Usually this is done by adding a <code>MonadReader</code> constraint to any function that needs access to configuration.</p>\n\n<p>Here's an attempt at a more real-world example:</p>\n\n<pre><code>data Config = Config\n  { databaseConnection :: Connection\n  , ... other configuration stuff\n  }\n\ngetUser :: (MonadReader Config m, MonadIO m) =&gt; UserKey -&gt; m User\ngetUser x = do\n   db &lt;- asks databaseConnection\n   .... fetch user from database using the connection\n</code></pre>\n\n<p>then your <code>main</code> would look something like:</p>\n\n<pre><code>main :: IO ()\nmain = do\n  config &lt;- .... create the configuration\n  user &lt;- runReaderT (getUser (UserKey 42)) config\n  print user\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1522101105, "post_id": 49499030, "comment_id": 86006451, "body": "perhaps <code>end &lt;*&gt; greet &quot;James&quot;</code> is confusing because of the function names ... maybe something like <code>addEnding &lt;*&gt; great &quot;James&quot;</code> would be less so?"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1522102351, "post_id": 49499030, "comment_id": 86006972, "body": "[1/2] @matthias It is better, but only a little, I&#39;d say. The matter with <code>(&lt;*&gt;)</code> for functions is that (1) behind its compact looks, there is quite a bit of stuff going on for something that only involves function application (<code>g &lt;*&gt; f = \\x -&gt; g x (f x)</code>); and (2) uses of the function <code>Applicative</code> instance tend to catch people by surprise."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1522102372, "post_id": 49499030, "comment_id": 86006984, "body": "[2/2] @matthias It&#39;s all a bit subjective, but those issues are mitigated in <code>(&amp;&amp;) &lt;$&gt; isFoo &lt;*&gt; isBar</code> (or <code>liftA2 (&amp;&amp;) isFoo isBar</code>, which I like slightly less in the specific case of functions) by the familiar shape of the applicative style expression, as well as by <code>isFoo</code> and <code>isBar</code> clearly looking like single-argument functions, and <code>(&amp;&amp;)</code> transparently being a two-argument function -- in contrast, the arity of <code>greet &quot;James&quot;</code> is not immediately obvious. Those factors make it easier to recognise that the function <code>Applicative</code> is being used."}, {"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1522103067, "post_id": 49499030, "comment_id": 86007267, "body": "thanks, but can you please give me an example of how you would write it your self?"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1522103253, "post_id": 49499030, "comment_id": 86007329, "body": "@matthias In the plain old way: <code>\\input -&gt; addEnding input (greet &quot;James&quot; input)</code>. While I like taking up opportunities for omitting named arguments, I don&#39;t feel using <code>(&lt;*&gt;)</code> for that pays off in this case."}], "tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 1, "last_activity_date": 1522092411, "last_edit_date": 1592644375, "creation_date": 1522091846, "answer_id": 49499030, "question_id": 49495838, "link": "https://stackoverflow.com/questions/49495838/reader-monad-explanation-of-trivial-case/49499030#49499030", "title": "Reader Monad - explanation of trivial case", "body": "<p>dfeuer, chi and user2297560 are right in that <a href=\"https://stackoverflow.com/a/49496331/2751851\">&quot;<code>Reader</code> isn't often used by itself in real code&quot;</a>. It is worth noting, though, that there is next to no essential difference between what you do in the second snippet in the question and actually using <code>Reader</code> as a monad: the function functor is just <code>Reader</code> without the wrappers, and <a href=\"https://stackoverflow.com/a/40136614/2751851\">the <code>Monad</code> and <code>Applicative</code> instances for both of them are equivalent</a>. By the way, outside of highly polymorphic code<sup>1</sup>, the typical motivation for using the function <code>Applicative</code> is making code more pointfree. In that case, moderation is highly advisable. For instance, as far as my own taste goes, this...</p>\n<pre><code>(&amp;&amp;) &lt;$&gt; isFoo &lt;*&gt; isBar\n</code></pre>\n<p>... is fine (and sometimes it might even read nicer than the pointful spelling), while this...</p>\n<pre><code>end &lt;*&gt; greet &quot;James&quot;\n</code></pre>\n<p>... is just confusing.</p>\n<hr />\n<p><strong>Footnotes</strong></p>\n<ol>\n<li><p>For instance, <a href=\"https://stackoverflow.com/a/40136614/2751851\">as Carl points out in a comment</a>, it and the related instances can be useful in...</p>\n<blockquote>\n<p>[...] places where you have code that's polymorphic in a type constructor and your use case is passing an argument in. This can come up when using the polymorphic types offered by lenses, for instance.</p>\n</blockquote>\n</li>\n</ol>\n"}], "owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 959, "favorite_count": 0, "accepted_answer_id": 49496331, "answer_count": 2, "score": 2, "last_activity_date": 1522092411, "creation_date": 1522080149, "last_edit_date": 1522088702, "question_id": 49495838, "link": "https://stackoverflow.com/questions/49495838/reader-monad-explanation-of-trivial-case", "title": "Reader Monad - explanation of trivial case", "body": "<p>I have been trying to get to grips with the reader monad and came across <a href=\"https://passy.svbtle.com/dont-fear-the-reader\" rel=\"nofollow noreferrer\">this tutorial</a>. In it, the author presents this example: </p>\n\n<pre><code>example2 :: String -&gt; String\nexample2 context = runReader (greet \"James\" &gt;&gt;= end) context\n    where\n        greet :: String -&gt; Reader String String\n        greet name = do\n            greeting &lt;- ask\n            return $ greeting ++ \", \" ++ name\n\n        end :: String -&gt; Reader String String\n        end input = do\n            isHello &lt;- asks (== \"Hello\")\n            return $ input ++ if isHello then \"!\" else \".\"\n</code></pre>\n\n<p>I know that this is a trivial example that shows the mechanics, but I am trying to figure out why it would be better than doing something like:</p>\n\n<pre><code>example3 :: String -&gt; String\nexample3 = end &lt;*&gt; (greet \"James\")\n  where\n    greet name input = input ++ \", \" ++ name\n    end   input      = if input == \"Hello\" then (++ \"!\") else (++ \".\")\n</code></pre>\n"}, {"tags": ["haskell", "types", "ghc", "type-level-computation"], "answers": [{"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 5, "creation_date": 1522076772, "post_id": 49494599, "comment_id": 85993153, "body": "This is correct. It is important to mind the gap between <code>&#39;[</code> and <code>&#39;(...,...)</code>. Without the additional space the parser sees the character <code>&#39;[&#39;</code> and gets confused."}], "tags": [], "owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "is_accepted": true, "score": 9, "last_activity_date": 1522076447, "creation_date": 1522076447, "answer_id": 49494599, "question_id": 49494439, "link": "https://stackoverflow.com/questions/49494439/what-are-the-inhabitants-of-the-type-type-kind/49494599#49494599", "title": "What are the inhabitants of the [(Type,Type)] kind?", "body": "<p>You left out a backtick, <code>:k ('[ '(Bool,Bool)] :: [(Type,Type)])</code> works. You need the lifted tuple constructor alongside the lifted list constructor.</p>\n"}], "owner": {"reputation": 269, "user_id": 2290347, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/owtS1.jpg?s=128&g=1", "display_name": "lando", "link": "https://stackoverflow.com/users/2290347/lando"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 91, "favorite_count": 0, "accepted_answer_id": 49494599, "answer_count": 1, "score": 3, "last_activity_date": 1522076447, "creation_date": 1522076012, "question_id": 49494439, "link": "https://stackoverflow.com/questions/49494439/what-are-the-inhabitants-of-the-type-type-kind", "title": "What are the inhabitants of the [(Type,Type)] kind?", "body": "<p>On ghci (8.2), </p>\n\n<pre><code>:k ('[] :: [(Type,Type)]) \n</code></pre>\n\n<p>succeeds, but </p>\n\n<pre><code>:k ('[(Bool,Bool)] :: [(Type,Type)]) \n</code></pre>\n\n<p>doesn't, since (Bool,Bool) (or even things like ('True,False')) has kind *.</p>\n\n<p>I understand that the problem is with the (,) constructor, that constructs an * Type.</p>\n\n<p>What is the way to represent lists of pairs being strongly typed at type level?</p>\n"}, {"tags": ["haskell", "polyvariadic"], "comments": [{"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1522070852, "post_id": 49492394, "comment_id": 85988670, "body": "Have you taken a look at <code>Text.Printf</code> (which, unless I&#39;m misunderstanding what you&#39;re trying to do here, does exactly this?)"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1522071814, "post_id": 49492394, "comment_id": 85989354, "body": "I suspect if you want good type inference you&#39;re going to have to make one instance of <code>WriteParams</code> for each existing instance of <code>MonadIO</code> -- or at least one for each <code>MonadIO</code> instance you care about using. You can make this less tedious by giving a default, so that you need only write e.g. <code>instance (MonadIO m, a ~ ()) =&gt; WriteParams (ReaderT r m a)</code> and don&#39;t need to give the <code>where</code> block, but... yeah, a bit annoying."}, {"owner": {"reputation": 2530, "user_id": 6658809, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/5d30a3055ca065bcc94e1c7386de4e48?s=128&d=identicon&r=PG&f=1", "display_name": "siracusa", "link": "https://stackoverflow.com/users/6658809/siracusa"}, "reply_to_user": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1522084216, "post_id": 49492394, "comment_id": 85997846, "body": "@Cubic My use case is more complex that <code>printf</code>, I just simplified it a bit in the example so that they may look similar"}, {"owner": {"reputation": 2530, "user_id": 6658809, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/5d30a3055ca065bcc94e1c7386de4e48?s=128&d=identicon&r=PG&f=1", "display_name": "siracusa", "link": "https://stackoverflow.com/users/6658809/siracusa"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1522084574, "post_id": 49492394, "comment_id": 85998031, "body": "@DanielWagner That&#39;s a pretty simple but effective idea, I haven&#39;t thought of. Unfortunately it doesn&#39;t seem to solve the generalization of <code>test</code> that Li-yao Xia mentioned in their answer."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1522094072, "post_id": 49492394, "comment_id": 86003186, "body": "I&#39;m not sure what you mean. I have added an answer fleshing out my comment; perhaps you could object with a concrete code snippet that doesn&#39;t work well with that solution."}], "answers": [{"comments": [{"owner": {"reputation": 2530, "user_id": 6658809, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/5d30a3055ca065bcc94e1c7386de4e48?s=128&d=identicon&r=PG&f=1", "display_name": "siracusa", "link": "https://stackoverflow.com/users/6658809/siracusa"}, "edited": false, "score": 0, "creation_date": 1522084935, "post_id": 49493026, "comment_id": 85998223, "body": "Thank you, that sems to be pretty much what I was looking for. One thing that scares me a bit is the use of undecidable instances. I already tried to avoid overlapping instances as I was told they could lead to inconsitent behaviour. Aren&#39;t undecidable instances even worse then? Or are they okay when used with closed type families (I&#39;ve never used the latter ones before)?"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "reply_to_user": {"reputation": 2530, "user_id": 6658809, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/5d30a3055ca065bcc94e1c7386de4e48?s=128&d=identicon&r=PG&f=1", "display_name": "siracusa", "link": "https://stackoverflow.com/users/6658809/siracusa"}, "edited": false, "score": 0, "creation_date": 1522094335, "post_id": 49493026, "comment_id": 86003344, "body": "I added a few words about undecidable instances in my answer. The short answer is that they&#39;re much more safe than overlapping instances because they don&#39;t break type class coherence."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "reply_to_user": {"reputation": 2530, "user_id": 6658809, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/5d30a3055ca065bcc94e1c7386de4e48?s=128&d=identicon&r=PG&f=1", "display_name": "siracusa", "link": "https://stackoverflow.com/users/6658809/siracusa"}, "edited": false, "score": 0, "creation_date": 1522094799, "post_id": 49493026, "comment_id": 86003589, "body": "Overlapping instances are also not problematic when they are all defined in the same module, as is the case here. It&#39;s just that they might be better received with a proper mechanism in the language to restrict their usage."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 2, "last_activity_date": 1522094292, "last_edit_date": 1522094292, "creation_date": 1522071928, "answer_id": 49493026, "question_id": 49492394, "link": "https://stackoverflow.com/questions/49492394/polyvariadic-functions-with-polymorphic-result-value/49493026#49493026", "title": "Polyvariadic functions with polymorphic result value", "body": "<p>The two instances overlap, because their indices unify: <code>m' () ~ (a -&gt; r)</code> with <code>m' ~ (-&gt;) a</code> and <code>() ~ r</code>.</p>\n\n<p>To pick the first instance whenever <code>m'</code> is not a function type, you can add an <code>OVERLAPPING</code> pragma. (<a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#overlapping-instances\" rel=\"nofollow noreferrer\">Read more about it in the GHC user guide</a>)</p>\n\n<pre><code>-- We must put the equality (a ~ ()) to the left to make this\n-- strictly less specific than (a -&gt; r)\ninstance (MonadIO m, a ~ ()) =&gt; WriteParams (m a) where\n    writeParams = liftIO \n\ninstance {-# OVERLAPPING #-} (Show a, WriteParams r) =&gt; WriteParams (a -&gt; r) where\n    writeParams m a = writeParams (m &gt;&gt; putStr (show a ++ \" \"))\n</code></pre>\n\n<hr>\n\n<p>However, the overlapping instance makes it inconvenient to use <code>write</code> in a context where the monad is a parameter <code>m</code> (try generalizing the signature of <code>test</code>).</p>\n\n<p>There is a way to avoid overlapping instances by using closed type families, to define a type-level boolean that's true if and only if a given type is a function type, so that instances can match on it. See below.</p>\n\n<p>It arguably just looks like more code and more complexity, but, on top of the added expressiveness (we can have a generalized <code>test</code> with a <code>MonadIO</code> constraint), I think this style makes the logic of the instances clearer in the end by isolating the pattern-matching on types.</p>\n\n<pre><code>{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE FlexibleContexts #-}\n{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE UndecidableInstances #-}\n\nmodule Main where\n\nimport Control.Monad.IO.Class\nimport Control.Monad.Trans.Reader\nimport System.IO\n\n\nclass WriteParams a where\n    writeParams :: IO () -&gt; a\n\ninstance WriteParamsIf a (IsFun a) =&gt; WriteParams a where\n    writeParams = writeParamsIf\n\ntype family IsFun a :: Bool where\n  IsFun (m c) = IsFun1 m\n  IsFun a = 'False\n\ntype family IsFun1 (f :: * -&gt; *) :: Bool where\n  IsFun1 ((-&gt;) b) = 'True\n  IsFun1 f = 'False\n\nclass (isFun ~ IsFun a) =&gt; WriteParamsIf a isFun where\n  writeParamsIf :: IO () -&gt; a\n\ninstance (Show a, WriteParams r) =&gt; WriteParamsIf (a -&gt; r) 'True where\n  writeParamsIf m a = writeParams (m &gt;&gt; putStr (show a ++ \" \"))\n\ninstance ('False ~ IsFun (m a), MonadIO m, a ~ ()) =&gt; WriteParamsIf (m a) 'False where\n  writeParamsIf = liftIO\n\nwrite :: WriteParams params =&gt; params\nwrite = writeParams (return ())\n\ntest :: (MonadIO m, IsFun1 m ~ 'False) =&gt; m ()\ntest = do\n    write 123\n    write ('a', 'z') True\n\nmain = test  -- for ghc to compile it\n</code></pre>\n\n<hr>\n\n<h2>Some words on <code>UndecidableInstances</code></h2>\n\n<p>Undecidable instances are an orthogonal feature to overlapping instances, and in fact I think they're much less controversial. Whereas badly using <code>OVERLAPPING</code> may cause incoherence (constraints being solved differently in different contexts), badly using <code>UndecidableInstances</code> may at worst send the compiler in a loop (in practice GHC terminates with an error message once some threshold is reached), which is still bad but when it does manage to resolve instances it is still guaranteed that the solution is unique.</p>\n\n<p><code>UndecidableInstances</code> lifts limitations that made sense a long time ago, but are now too restrictive to work with the modern extensions to type classes.</p>\n\n<p>In practice, most common type classes and instances defined with <code>UndecidableInstances</code>, including the one above, still guarantee that their resolution will terminate. In fact, <a href=\"https://github.com/ghc-proposals/ghc-proposals/pull/114\" rel=\"nofollow noreferrer\">there is an active proposal</a> for a new instance termination checker. (I don't know yet whether it handles this case here.)</p>\n"}, {"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1522093898, "post_id": 49499504, "comment_id": 86003105, "body": "There is a trailing space after ... in the &quot;This prints ... when executed.&quot; sentence that the Markdown parser appears to be eating. If you know how to get it to appear, please let me know and I&#39;ll edit the answer to be slightly more precise."}, {"owner": {"reputation": 2530, "user_id": 6658809, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/5d30a3055ca065bcc94e1c7386de4e48?s=128&d=identicon&r=PG&f=1", "display_name": "siracusa", "link": "https://stackoverflow.com/users/6658809/siracusa"}, "edited": false, "score": 0, "creation_date": 1522143355, "post_id": 49499504, "comment_id": 86022634, "body": "What I meant in my earlier comment is Li-yao Xia&#39;s idea of generalizing the type of <code>test</code> to yield something like <code>(MonadIO m, ...) =&gt; m ()</code> which would be nice but doesn&#39;t seems to be possible with this version"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 2, "last_activity_date": 1522093787, "creation_date": 1522093787, "answer_id": 49499504, "question_id": 49492394, "link": "https://stackoverflow.com/questions/49492394/polyvariadic-functions-with-polymorphic-result-value/49499504#49499504", "title": "Polyvariadic functions with polymorphic result value", "body": "<p>Here I flesh out my comment into an answer. We will keep the idea of your original class, and even the existing instances, only adding instances. Simply add one instance for each existing <code>MonadIO</code> instance; I'll do just one to illustrate the pattern.</p>\n\n<pre><code>instance (MonadIO m, a ~ ()) =&gt; WriteParams (ReaderT r m a) where\n    writeParams = liftIO\n</code></pre>\n\n<p>Everything works fine:</p>\n\n<pre><code>main = do\n    write 45\n    flip runReaderT () $ do\n        write 45 ('a', 'z')\n        write \"hi\"\n</code></pre>\n\n<p>This prints <code>45 45 ('a','z') \"hi\"</code> when executed.</p>\n\n<p>If you would like to reduce the <code>writeParams = liftIO</code> boilerplate a little bit, you can turn on <code>DefaultSignatures</code> and add:</p>\n\n<pre><code>class WriteParams a where\n    writeParams :: IO () -&gt; a\n    default writeParams :: (MonadIO m, a ~ m ()) =&gt; IO () -&gt; a\n    writeParams = liftIO\n</code></pre>\n\n<p>Then the <code>IO</code> and <code>ReaderT</code> instances are just:</p>\n\n<pre><code>instance a ~ () =&gt; WriteParams (IO a)\ninstance (MonadIO m, a ~ ()) =&gt; WriteParams (ReaderT r m a)\n</code></pre>\n"}], "owner": {"reputation": 2530, "user_id": 6658809, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/5d30a3055ca065bcc94e1c7386de4e48?s=128&d=identicon&r=PG&f=1", "display_name": "siracusa", "link": "https://stackoverflow.com/users/6658809/siracusa"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 92, "favorite_count": 0, "accepted_answer_id": 49493026, "answer_count": 2, "score": 0, "last_activity_date": 1522094292, "creation_date": 1522070118, "question_id": 49492394, "link": "https://stackoverflow.com/questions/49492394/polyvariadic-functions-with-polymorphic-result-value", "title": "Polyvariadic functions with polymorphic result value", "body": "<p>I'm trying to implement a Pascal-style <code>write</code> procedure in Haskell as a polyvariadic function. Here is a simplified version with monomorphic result type (<code>IO</code> in that case) that works fine:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE ScopedTypeVariables #-}\nmodule Main where\n\nimport Control.Monad.IO.Class\nimport Control.Monad.Trans.Reader\nimport System.IO\n\n\nclass WriteParams a where\n    writeParams :: IO () -&gt; a\n\ninstance (a ~ ()) =&gt; WriteParams (IO a) where\n    writeParams = id\n\ninstance (Show a, WriteParams r) =&gt; WriteParams (a -&gt; r) where\n    writeParams m a = writeParams (m &gt;&gt; putStr (show a ++ \" \"))\n\nwrite :: WriteParams params =&gt; params\nwrite = writeParams (return ())\n\ntest :: IO ()\ntest = do\n    write 123\n    write ('a', 'z') True\n</code></pre>\n\n<p>When changing the result type to a polymorphic type, however, to use that function in different monads that have a <code>MonadIO</code> instance, I'm running into overlapping or undecidable instances. Specifically, that <code>a ~ ()</code> trick from the previous version doesn't work anymore. The best approach is the following which requires a lot of type annotations, though:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>class WriteParams' m a where\n    writeParams' :: m () -&gt; a\n\ninstance (MonadIO m, m ~ m') =&gt; WriteParams' m (m' ()) where\n    writeParams' m = m\n\ninstance (MonadIO m, Show a, WriteParams' m r) =&gt; WriteParams' m (a -&gt; r) where\n    writeParams' m a = writeParams' (m &gt;&gt; liftIO (putStr $ show a ++ \" \"))\n\nwrite' :: forall m params . (MonadIO m, WriteParams' m params) =&gt; params\nwrite' = writeParams' (return () :: m ())\n\ntest' :: IO ()\ntest' = do\n    write' 123 () :: IO ()\n    flip runReaderT () $ do\n        write' 45 ('a', 'z') :: ReaderT () IO ()\n        write' True\n</code></pre>\n\n<p>Is there anyway to make this example work without having to add type annotations here and there and still keep the result type polymorphic?</p>\n"}, {"tags": ["haskell", "split", "functional-programming", "reverse"], "comments": [{"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 3, "creation_date": 1522068049, "post_id": 49491461, "comment_id": 85986622, "body": "The accumulator argument is never used in that implementation. It probably should be omitted."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 1, "creation_date": 1522068069, "post_id": 49491461, "comment_id": 85986631, "body": "What do <code>lastDigit</code> and <code>dropLastDigit</code> do?"}], "answers": [{"tags": [], "owner": {"reputation": 11096, "user_id": 2749717, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46af1ef54856d737d52b7667afd240ee?s=128&d=identicon&r=PG&f=1", "display_name": "bipll", "link": "https://stackoverflow.com/users/2749717/bipll"}, "is_accepted": false, "score": 0, "last_activity_date": 1522067665, "creation_date": 1522067665, "answer_id": 49491617, "question_id": 49491461, "link": "https://stackoverflow.com/questions/49491461/what-does-split-in-haskell-do/49491617#49491617", "title": "What does split in Haskell do?", "body": "<p>Here, it takes a number and builds a list of its digits, one by one. At each moment it first checks whether the number argument is zero (then the returned value is an empty list), and, if not, a) takes its last digit; b) prepends the digit to the result of a recursive call to itself, now with number with the last digit dropped. The acc argument is never actually used, since the recursion was finally settled to be modulo cons.</p>\n\n<p>Note that list is finally built in least-endian order: the first element to the list is the least significant digit of the number.</p>\n"}, {"tags": [], "owner": {"reputation": 18111, "user_id": 303270, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4ad1c6176652d437e0fadb39ff275323?s=128&d=identicon&r=PG", "display_name": "fardjad", "link": "https://stackoverflow.com/users/303270/fardjad"}, "is_accepted": true, "score": 3, "last_activity_date": 1522070182, "last_edit_date": 1522070182, "creation_date": 1522069865, "answer_id": 49492316, "question_id": 49491461, "link": "https://stackoverflow.com/questions/49491461/what-does-split-in-haskell-do/49492316#49492316", "title": "What does split in Haskell do?", "body": "<pre><code>reverse $ split [] n\n</code></pre>\n\n<p>Is the same as</p>\n\n<pre><code>reverse (split [] n)\n</code></pre>\n\n<p>It reverses the return value of <code>split [] n</code> and returns the result.</p>\n\n<p>Split is defined in the next line.</p>\n\n<p>It takes a list (an accumulator) and an Integer and does this:</p>\n\n<p>Note that I assume that split is defined as follows (current implementation does not use acc). I also assume <code>lastDigit</code> and <code>dropLastDigit</code> do as their names would suggest:</p>\n\n<pre><code>split acc 0 = acc\nsplit acc m = split (lastDigit m : acc) (dropLastDigit m)\n</code></pre>\n\n<p>Now, <strong>split</strong> returns <strong>acc</strong> if <strong>m</strong> is zero, otherwise it recursively prepends last digit of <strong>m</strong> to <strong>acc</strong> and pass it as the first argument to <strong>split</strong>, and removes the last digit from <strong>m</strong> and pass it as the second argument to <strong>split</strong>. In other words, this function eventually splits a number to its digits and returns the result as a list of Integers. Having this said calling <code>split [] 1234</code> would return <code>[1, 2, 3, 4]</code>. You probably don't need to reverse the result of calling split.</p>\n"}], "owner": {"reputation": 1033, "user_id": 2056878, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/IZFw8.jpg?s=128&g=1", "display_name": "devio", "link": "https://stackoverflow.com/users/2056878/devio"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "accepted_answer_id": 49492316, "answer_count": 2, "score": 0, "last_activity_date": 1522070182, "creation_date": 1522067145, "question_id": 49491461, "link": "https://stackoverflow.com/questions/49491461/what-does-split-in-haskell-do", "title": "What does split in Haskell do?", "body": "<p>I'm new to <code>Haskell</code> and I came into the code below and don't actually understand what it does.\nI know that the <code>toDigits</code> function is declared to take an <code>Integer</code> and return an array of <code>Integer</code>s. If the argument <code>n</code> equals 0 or less, we return an empty array, otherwise...? That's the mystery!</p>\n\n<pre><code>toDigits :: Integer -&gt; [Integer]\ntoDigits n\n  | n &lt; 1     = []\n  | otherwise = reverse $ split [] n\n    where split _   0 = []\n          split acc m = lastDigit m : split acc (dropLastDigit m)\n</code></pre>\n\n<p>Could you please explain to me?</p>\n"}, {"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 2287, "user_id": 5267751, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bd62e8fd8fbb37abc7e2a39d23828047?s=128&d=identicon&r=PG&f=1", "display_name": "user202729", "link": "https://stackoverflow.com/users/5267751/user202729"}, "edited": false, "score": 3, "creation_date": 1522064435, "post_id": 49490571, "comment_id": 85984112, "body": "Just write it. Where specifically are you stuck at?"}, {"owner": {"reputation": 27, "user_id": 9552253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a6edb252dd3eeead243008875bbb121?s=128&d=identicon&r=PG&f=1", "display_name": "polebence", "link": "https://stackoverflow.com/users/9552253/polebence"}, "reply_to_user": {"reputation": 2287, "user_id": 5267751, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bd62e8fd8fbb37abc7e2a39d23828047?s=128&d=identicon&r=PG&f=1", "display_name": "user202729", "link": "https://stackoverflow.com/users/5267751/user202729"}, "edited": false, "score": 0, "creation_date": 1522064918, "post_id": 49490571, "comment_id": 85984436, "body": "dont even know where to start, but its an assignment for tomorrow :("}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 3, "creation_date": 1522071339, "post_id": 49490571, "comment_id": 85989004, "body": "There are many good Haskell tutorials available online; feel free to consult one to get some ideas about where to start, and come back when you have a concrete problem with code you have written. As for the other half of your comment... my band teacher in high school had a note on his door: &quot;Poor planning on your part does not constitute an emergency on my part.&quot;. Internalizing that changed my life, and I hope you find it as helpful as I did (though it does suck to hear it during your first poor planning emergency)."}], "answers": [{"tags": [], "owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "is_accepted": false, "score": 0, "last_activity_date": 1522082357, "creation_date": 1522082357, "answer_id": 49496463, "question_id": 49490571, "link": "https://stackoverflow.com/questions/49490571/how-can-i-write-a-groupby-function-for-list-elements-in-haskell/49496463#49496463", "title": "how can i write a groupBy function for list elements in haskell?", "body": "<p>Look at the comparisons that have to happen here. You're providing a function <code>f :: a -&gt; a -&gt; Bool</code> that will group each item as long as it remains true, in other words:</p>\n\n<pre><code>groupBy (&gt;=) [3, 3, 1, 5, 4]\n                [3]\n3 &gt;= 3 = True   [3, 3]  -- add RHS value\n3 &gt;= 1 = True   [3, 3, 1]\n1 &gt;= 5 = False  -- new group!\n\n                [5]\n5 &gt;= 4 = True   [5, 4]\n</code></pre>\n\n<p>This looks like recursion to me. Your inner function should keep an accumulator, look at each element of the list and decide to either A) include it in the current accumulator or B) give the accumulator back and start a new one based on the results of <code>f</code>.</p>\n\n<p>It's probably helpful to define <code>groupBy</code> as a wrapper around some helper function that does the real work.</p>\n\n<pre><code>groupBy :: (a -&gt; a -&gt; Bool) -&gt; [a] -&gt; [[a]]\ngroupBy f (x:xs) = go f [x] xs\n  where\n  -- base case: no values left to check\n  go _ acc       [] = [acc]\n\n  -- recursive case\n  go f acc@(y:_) (x:xs)\n    | y `f` x   =  go f (x:acc) xs    -- add to current group\n    | otherwise =  acc : go f [x] xs  -- start a new group\n</code></pre>\n\n<p>Note that the above has a subtle bug that I left in for illustrative purposes (and also because I wrote it this way first, so you might, too!)</p>\n"}], "owner": {"reputation": 27, "user_id": 9552253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a6edb252dd3eeead243008875bbb121?s=128&d=identicon&r=PG&f=1", "display_name": "polebence", "link": "https://stackoverflow.com/users/9552253/polebence"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 303, "favorite_count": 0, "answer_count": 1, "score": -6, "last_activity_date": 1522082357, "creation_date": 1522064361, "last_edit_date": 1522065482, "question_id": 49490571, "link": "https://stackoverflow.com/questions/49490571/how-can-i-write-a-groupby-function-for-list-elements-in-haskell", "title": "how can i write a groupBy function for list elements in haskell?", "body": "<p>It's signature has to look like this:</p>\n\n<pre><code>groupBy :: (a -&gt; a -&gt; Bool) -&gt; [a] -&gt; [[a]]\n</code></pre>\n\n<p>My function should group the input list's elements to output lists based on whether the elements are equal or there's a strictly monotonous incrementing partlist in it.</p>\n\n<p>Examples for termination:</p>\n\n<pre><code>-- groupBy (==) groups the equal elements\ngroupBy (==) [0, 0, 1, 1, 2, 2] == [[0, 0], [1, 1], [2, 2]]\ngroupBy (==) [0, 1, 2] == [[0], [1], [2]]\n\n-- groupBy (&lt;) returns the strictly monotonous incrementing partlists\ngroupBy (&lt;) [0, 1, 2, 1, 2, 3] == [[0,1,2],[1,2,3]]\ngroupBy (&lt;) [3, 4, 5] == [[3, 4, 5]]\n\ngroupBy (&gt;=) [3, 3, 1, 5] == [[3,3,1],[5]] --- monotonous decrementing\n\n-- partlists, where the consecutive elements' difference is 1:\ngroupBy (\\x y -&gt; abs (x - y) == 1) [0, 1, 3, 4] == [[0, 1], [3, 4]]\ngroupBy (\\x y -&gt; abs (x - y) == 1) [1, 2, 3, 2, 1, 10, 11] == [[1,2,3,2,1],[10,11]]\n</code></pre>\n\n<p>Thanks for your help in advance :)</p>\n"}, {"tags": ["haskell", "constructor", "scope", "datalist"], "answers": [{"comments": [{"owner": {"reputation": 25, "user_id": 9003212, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4638d4c3e6c1ac480e2a7a8515c6d67f?s=128&d=identicon&r=PG&f=1", "display_name": "Zhe Yu He", "link": "https://stackoverflow.com/users/9003212/zhe-yu-he"}, "edited": false, "score": 0, "creation_date": 1522123354, "post_id": 49488266, "comment_id": 86012438, "body": "thanks a lot! I have been thinking this question for several hours.. as a new learner of haskell"}, {"owner": {"reputation": 25, "user_id": 9003212, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4638d4c3e6c1ac480e2a7a8515c6d67f?s=128&d=identicon&r=PG&f=1", "display_name": "Zhe Yu He", "link": "https://stackoverflow.com/users/9003212/zhe-yu-he"}, "edited": false, "score": 0, "creation_date": 1522123797, "post_id": 49488266, "comment_id": 86012575, "body": "but i got a another error : The constructor \u2018FunDecl\u2019 should have 5 arguments, but has been given none when i followed your instruction"}, {"owner": {"reputation": 5397, "user_id": 2193020, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/aa10d01a3d48851073bd61877a56b5a7?s=128&d=identicon&r=PG", "display_name": "hnefatl", "link": "https://stackoverflow.com/users/2193020/hnefatl"}, "reply_to_user": {"reputation": 25, "user_id": 9003212, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4638d4c3e6c1ac480e2a7a8515c6d67f?s=128&d=identicon&r=PG&f=1", "display_name": "Zhe Yu He", "link": "https://stackoverflow.com/users/9003212/zhe-yu-he"}, "edited": false, "score": 0, "creation_date": 1522143126, "post_id": 49488266, "comment_id": 86022453, "body": "@ZheYuHe Oh yeah, my bad - you need to use brackets to group the data constructor so that your lambda takes one argument, not 6 individual ones. See my edit."}, {"owner": {"reputation": 25, "user_id": 9003212, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4638d4c3e6c1ac480e2a7a8515c6d67f?s=128&d=identicon&r=PG&f=1", "display_name": "Zhe Yu He", "link": "https://stackoverflow.com/users/9003212/zhe-yu-he"}, "edited": false, "score": 0, "creation_date": 1522176267, "post_id": 49488266, "comment_id": 86046168, "body": "yesterday, i tried &quot; \\FunDecl (declType name decl1 decl2 cmd) -&gt; name&quot; to make it meet the requirement but failed... now i finally understand this kind of syntax after seeing you edit. Thank you!!"}], "tags": [], "owner": {"reputation": 5397, "user_id": 2193020, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/aa10d01a3d48851073bd61877a56b5a7?s=128&d=identicon&r=PG", "display_name": "hnefatl", "link": "https://stackoverflow.com/users/2193020/hnefatl"}, "is_accepted": true, "score": 2, "last_activity_date": 1522143067, "last_edit_date": 1522143067, "creation_date": 1522057003, "answer_id": 49488266, "question_id": 49488180, "link": "https://stackoverflow.com/questions/49488180/data-constructor-not-in-the-scope-haskell/49488266#49488266", "title": "data constructor not in the scope Haskell \uff1f", "body": "<p>You appear to be confusing types/type constructors with variable names. <code>[Decl]</code> is a type, and <code>Decl</code> is both a type constructor and a type (<code>data Decl = Decl ...</code>), so neither are valid variable names - you want to assign an identifier to the value you'll be passed (which is of type <code>[Decl]</code>) so you need to use an identifier like <code>decl1</code> for it (may be worth looking over <a href=\"http://learnyouahaskell.com/starting-out#babys-first-functions\" rel=\"nofollow noreferrer\">this tutorial</a>).</p>\n\n<p>Words beginning with an uppercase letter can only be types and type constructors - only words beginning with lowercase (and that aren't restricted) can be identifiers (<a href=\"https://stackoverflow.com/questions/26938802/how-can-i-define-functions-in-haskell-using-uppercase-letters\">see this Q/A</a> or the <a href=\"https://www.haskell.org/onlinereport/lexemes.html#ids\" rel=\"nofollow noreferrer\">grammar specification</a>).</p>\n\n<hr>\n\n<p>So you need to change your lambda:</p>\n\n<pre><code>\\(FunDecl declType name decl1 decl2 cmd) -&gt; name == \"main\"\n</code></pre>\n\n<p>The <code>FunDecl</code> stays, as it's a type constructor that we're pattern matching against, where the identifiers given to the matched parts are called <code>name</code>, <code>decl1</code> etc.</p>\n\n<p><code>Name</code> is also changed to <code>name</code> in the lambda body so that we refer to the argument, not to the type constructor <code>Name</code>.</p>\n\n<hr>\n\n<p>Given that you're only using the <code>name</code> argument, you can also define your lambda as:</p>\n\n<pre><code>\\(FunDecl _ name _ _ _) -&gt; name == \"main\"\n</code></pre>\n\n<p>Where <code>_</code> is a \"special\" identifier which means \"an argument that we don't want to give a name\". This is usually better practice.</p>\n"}], "owner": {"reputation": 25, "user_id": 9003212, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4638d4c3e6c1ac480e2a7a8515c6d67f?s=128&d=identicon&r=PG&f=1", "display_name": "Zhe Yu He", "link": "https://stackoverflow.com/users/9003212/zhe-yu-he"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 228, "favorite_count": 0, "accepted_answer_id": 49488266, "answer_count": 1, "score": 0, "last_activity_date": 1522143067, "creation_date": 1522056778, "question_id": 49488180, "link": "https://stackoverflow.com/questions/49488180/data-constructor-not-in-the-scope-haskell", "title": "data constructor not in the scope Haskell \uff1f", "body": "<p>here are the concerning data definition </p>\n\n<pre><code>data Decl = Decl Name Type\n\ndata FunDecl = FunDecl Type Name [Decl] [Decl] Cmd\n\nnewtype Program = Program [FunDecl]\n</code></pre>\n\n<p>what i wanna do is to filter the [FunDecl] with the name of \"main\"</p>\n\n<pre><code>filterByname :: Program -&gt; Program\nfilterByname (Program p) =\n  let p_main = filter (\\FunDecl Type name [Decl] [Decl] cmd -&gt; Name == \"main\") in Program $ p_main p\n</code></pre>\n\n<p>but i get the error message of \"Not in scope: data constructor \u2018Type\u2019\"\nhow can i solve it ?</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 12289, "user_id": 596041, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/9eb6a78f4a48d143d59966fceec3c655?s=128&d=identicon&r=PG", "display_name": "Filip Haglund", "link": "https://stackoverflow.com/users/596041/filip-haglund"}, "edited": false, "score": 0, "creation_date": 1522057315, "post_id": 49488281, "comment_id": 85979338, "body": "It&#39;s also in Haskell 98"}, {"owner": {"reputation": 3892, "user_id": 1236045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9cdfcff173a4487d2a73a29e177930ec?s=128&d=identicon&r=PG&f=1", "display_name": "Micha\u0142 Politowski", "link": "https://stackoverflow.com/users/1236045/micha%c5%82-politowski"}, "reply_to_user": {"reputation": 12289, "user_id": 596041, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/9eb6a78f4a48d143d59966fceec3c655?s=128&d=identicon&r=PG", "display_name": "Filip Haglund", "link": "https://stackoverflow.com/users/596041/filip-haglund"}, "edited": false, "score": 3, "creation_date": 1522058218, "post_id": 49488281, "comment_id": 85979941, "body": "@FilipHaglund even in Haskell 1.0 actually, but why not link to the current report?"}, {"owner": {"reputation": 12289, "user_id": 596041, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/9eb6a78f4a48d143d59966fceec3c655?s=128&d=identicon&r=PG", "display_name": "Filip Haglund", "link": "https://stackoverflow.com/users/596041/filip-haglund"}, "edited": false, "score": 0, "creation_date": 1522086419, "post_id": 49488281, "comment_id": 85999071, "body": "Assumed it might have been added, so I pointed it out for anyone using Haskell 98. Maybe that&#39;s not how things work in Haskell land?"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 12289, "user_id": 596041, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/9eb6a78f4a48d143d59966fceec3c655?s=128&d=identicon&r=PG", "display_name": "Filip Haglund", "link": "https://stackoverflow.com/users/596041/filip-haglund"}, "edited": false, "score": 0, "creation_date": 1522090812, "post_id": 49488281, "comment_id": 86001422, "body": "@FilipHaglund Your remark is fine. As for &quot;maybe that&#39;s not how things work in Haskell land&quot;, it is true that almost everyone uses GHC &gt;= 7.x (which defaults to Haskell 2010), and that the standard language has been evolving at a measured pace  -- cf. how the features introduced in the 2010 report had mostly been bread-and-butter in GHC for a long time, or, for that matter, the number of widespread GHC extensions no one bats an eyelid about. (FWIW, when I link to the 2010 Report I don&#39;t point out the version explicitly unless the specific version matters for the poin&#39;t I&#39;m making.)"}, {"owner": {"reputation": 3892, "user_id": 1236045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9cdfcff173a4487d2a73a29e177930ec?s=128&d=identicon&r=PG&f=1", "display_name": "Micha\u0142 Politowski", "link": "https://stackoverflow.com/users/1236045/micha%c5%82-politowski"}, "reply_to_user": {"reputation": 12289, "user_id": 596041, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/9eb6a78f4a48d143d59966fceec3c655?s=128&d=identicon&r=PG", "display_name": "Filip Haglund", "link": "https://stackoverflow.com/users/596041/filip-haglund"}, "edited": false, "score": 0, "creation_date": 1522132669, "post_id": 49488281, "comment_id": 86015772, "body": "@FilipHaglund Makes sense. As for how things work in Haskell land - I&#39;m no expert really, so listen to duplode."}], "tags": [], "owner": {"reputation": 3892, "user_id": 1236045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9cdfcff173a4487d2a73a29e177930ec?s=128&d=identicon&r=PG&f=1", "display_name": "Micha\u0142 Politowski", "link": "https://stackoverflow.com/users/1236045/micha%c5%82-politowski"}, "is_accepted": true, "score": 5, "last_activity_date": 1522057054, "creation_date": 1522057054, "answer_id": 49488281, "question_id": 49487975, "link": "https://stackoverflow.com/questions/49487975/can-i-not-define-in-haskell-is-it-protected-from-use-somehow/49488281#49488281", "title": "Can I not define (:::) in Haskell? Is it protected from use somehow?", "body": "<p>You are probably missing that</p>\n\n<blockquote>\n  <p>An operator symbol starting with a colon is a constructor. </p>\n</blockquote>\n\n<p>-- <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch2.html#x7-180002.4\" rel=\"noreferrer\">The Haskell 2010 language report</a></p>\n\n<p>Use in a constructor declaration should work:</p>\n\n<pre><code>data Foo a b = a ::: b\n</code></pre>\n"}], "owner": {"reputation": 12289, "user_id": 596041, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/9eb6a78f4a48d143d59966fceec3c655?s=128&d=identicon&r=PG", "display_name": "Filip Haglund", "link": "https://stackoverflow.com/users/596041/filip-haglund"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82, "favorite_count": 0, "accepted_answer_id": 49488281, "answer_count": 1, "score": 0, "last_activity_date": 1522057054, "creation_date": 1522056140, "question_id": 49487975, "link": "https://stackoverflow.com/questions/49487975/can-i-not-define-in-haskell-is-it-protected-from-use-somehow", "title": "Can I not define (:::) in Haskell? Is it protected from use somehow?", "body": "<p>I got this error, but as far as I can tell, it should work. What am I missing?</p>\n\n<pre><code>Not in scope: data constructor ':::'\n        |\n        | (:::) = cons\n        | ^^^^^\n</code></pre>\n\n<p>There's also a similar error for the <code>infixr 5 :::</code> declaration.</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 3120, "user_id": 4402721, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/WCNcL.jpg?s=128&g=1", "display_name": "drRobertz", "link": "https://stackoverflow.com/users/4402721/drrobertz"}, "is_accepted": false, "score": 12, "last_activity_date": 1522054512, "last_edit_date": 1522054512, "creation_date": 1522053993, "answer_id": 49487347, "question_id": 49487275, "link": "https://stackoverflow.com/questions/49487275/do-infix-functions-in-haskell-have-type-expressions/49487347#49487347", "title": "Do infix functions in Haskell have type expressions ?", "body": "<p>Yes, the infix functions are functions, but to use them with <code>:t</code> you need to write it as a normal prefix function:</p>\n\n<pre><code>:t (++)\n</code></pre>\n\n<p>which gives</p>\n\n<pre><code>(++) :: [a] -&gt; [a] -&gt; [a]\n</code></pre>\n\n<p>This is part of the haskell syntax. To convert an infix function to prefix, surround it by parens, e.g.,</p>\n\n<pre><code>(+) 1 2\n</code></pre>\n\n<p>is equivalent to</p>\n\n<pre><code>1 + 2 \n</code></pre>\n\n<p>Conversely, a normal prefix function can be used infix by surrounding it\nwith backticks, e.g., </p>\n\n<pre><code>reverse `map` [\"hello\",\"world\"]\n</code></pre>\n\n<p>is the same as</p>\n\n<pre><code>map reverse [\"hello\",\"world\"]\n</code></pre>\n"}], "owner": {"reputation": 301, "user_id": 4412954, "user_type": "registered", "accept_rate": 22, "profile_image": "https://lh4.googleusercontent.com/-zk0yucZHI0U/AAAAAAAAAAI/AAAAAAAAACc/Ez0W1lKX72o/photo.jpg?sz=128", "display_name": "Justin Thong", "link": "https://stackoverflow.com/users/4412954/justin-thong"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 101, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1522054512, "creation_date": 1522053734, "question_id": 49487275, "link": "https://stackoverflow.com/questions/49487275/do-infix-functions-in-haskell-have-type-expressions", "title": "Do infix functions in Haskell have type expressions ?", "body": "<p>For example, <code>++</code>is essentially a function. I would expect that when I type <code>:t ++</code> or <code>:t prefixName</code> that I would obtain a type expression, but I receive a parse error. Is there a prefix for <code>++</code> or is there a special method to call <code>:t</code> for infix functions.</p>\n"}, {"tags": ["haskell", "yesod", "persistent"], "answers": [{"comments": [{"owner": {"reputation": 383, "user_id": 5181829, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LQG85.jpg?s=128&g=1", "display_name": "Marronnier", "link": "https://stackoverflow.com/users/5181829/marronnier"}, "edited": false, "score": 0, "creation_date": 1522195552, "post_id": 49489221, "comment_id": 86054202, "body": "I know we can show the <code>key</code>... I mean I want to show <code>Unique</code> itself."}, {"owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "reply_to_user": {"reputation": 383, "user_id": 5181829, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LQG85.jpg?s=128&g=1", "display_name": "Marronnier", "link": "https://stackoverflow.com/users/5181829/marronnier"}, "edited": false, "score": 0, "creation_date": 1522221864, "post_id": 49489221, "comment_id": 86062445, "body": "<code>Unique rec</code> is just a data type that wraps some fields of <code>rec</code>. Why do you want to show it if you can show <code>rec</code>?"}, {"owner": {"reputation": 383, "user_id": 5181829, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LQG85.jpg?s=128&g=1", "display_name": "Marronnier", "link": "https://stackoverflow.com/users/5181829/marronnier"}, "edited": false, "score": 0, "creation_date": 1522654417, "post_id": 49489221, "comment_id": 86220849, "body": "Two reasons. 1) After modifying <code>Unique record</code> several times, I can&#39;t be bothered to unwrap <code>Unique record</code>s and show <code>record</code>s  each time. 2) If there&#39;s no trouble, I think there&#39;s no reason not to make <code>Unique record</code> showable."}, {"owner": {"reputation": 383, "user_id": 5181829, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LQG85.jpg?s=128&g=1", "display_name": "Marronnier", "link": "https://stackoverflow.com/users/5181829/marronnier"}, "edited": false, "score": 0, "creation_date": 1523075119, "post_id": 49489221, "comment_id": 86421014, "body": "I&#39;d like to show it like this:  <code>mapM_ print persistUniqueKeys (Foo &quot;foo&quot;)</code>"}], "tags": [], "owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "is_accepted": false, "score": 1, "last_activity_date": 1522060005, "creation_date": 1522060005, "answer_id": 49489221, "question_id": 49487245, "link": "https://stackoverflow.com/questions/49487245/showing-unique-keys/49489221#49489221", "title": "Showing Unique keys?", "body": "<p>If you have <code>Unique record</code> value you can use <code>getBy</code> to get <code>Entity record</code> and show its key.</p>\n\n<pre><code>do\n  r &lt;- getBy u\n  let s = show $ entityKey r\n</code></pre>\n"}], "owner": {"reputation": 383, "user_id": 5181829, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LQG85.jpg?s=128&g=1", "display_name": "Marronnier", "link": "https://stackoverflow.com/users/5181829/marronnier"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1522060005, "creation_date": 1522053620, "last_edit_date": 1522059132, "question_id": 49487245, "link": "https://stackoverflow.com/questions/49487245/showing-unique-keys", "title": "Showing Unique keys?", "body": "<p>I don't know if here is the right place to ask this question. Anyway, what I want to do is to show <a href=\"http://hackage.haskell.org/package/persistent-2.8.1/docs/Database-Persist-Class.html#t:PersistEntity\" rel=\"nofollow noreferrer\">Unique keys</a>. Is it possible?</p>\n"}, {"tags": ["haskell", "linear-algebra"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1522065213, "post_id": 49482289, "comment_id": 85984632, "body": "You can use <a href=\"http://pointfree.io/\" rel=\"nofollow noreferrer\">pointfree.io</a> to convert to pointfree. Use with care, since pointfree easily turns into obfuscation."}], "answers": [{"comments": [{"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 3, "creation_date": 1522026840, "post_id": 49482521, "comment_id": 85968178, "body": "While this <code>(f .) . g</code> idiom is a common point-free way to compose a 1-argument function with a 2-argument one, it can also be written <code>fmap sum . zipWith (*)</code> or even <code>fmap sum &lt;$&gt; zipWith (*)</code> which I find slightly more descriptive than partial application of <code>(.)</code>, since while <code>fmap</code> in the <code>(-&gt;)</code> functor is equivalent to composition, it illustrates the fact that you\u2019re \u201cmapping\u201d over the result of a function by ignoring arguments (one <code>fmap</code> for each argument)."}], "tags": [], "owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "is_accepted": false, "score": 6, "last_activity_date": 1522025354, "creation_date": 1522025354, "answer_id": 49482521, "question_id": 49482289, "link": "https://stackoverflow.com/questions/49482289/how-to-define-dot-product-in-haskell-a-pointfree-style/49482521#49482521", "title": "How to define dot product in Haskell a pointfree style?", "body": "<p>Starting with a simpler version:</p>\n\n<pre><code>dot x y = sum (zipWith (*) x y)\n</code></pre>\n\n<p>you can convert <code>\\x -&gt; f (g x)</code> with function composition to <code>f . g</code>:</p>\n\n<pre><code>dot x = sum . zipWith (*) x\n</code></pre>\n\n<p><code>f . g</code> means <code>(.) f g</code>:</p>\n\n<pre><code>dot x = (sum.) (zipWith (*) x)\n</code></pre>\n\n<p>and you can convert <code>\\x -&gt; f (g x)</code> with function composition to <code>f . g</code>:</p>\n\n<pre><code>dot = (sum.) . zipWith (*)\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user5775230"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 528, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1522033552, "creation_date": 1522022888, "last_edit_date": 1522033552, "question_id": 49482289, "link": "https://stackoverflow.com/questions/49482289/how-to-define-dot-product-in-haskell-a-pointfree-style", "title": "How to define dot product in Haskell a pointfree style?", "body": "<p>Really, I'd like to figure out the more general solution of composing a fold with a zipwith in a single function point free.</p>\n\n<pre><code>zWMult :: Num c =&gt; [c] -&gt; [c] -&gt; [c]\nzWMult = zipWith (*)\n\nfoldPl0 :: Num c =&gt; [c] -&gt; c\nfoldPl0 = foldl (+) 0\n</code></pre>\n\n<p>I get the correct solution when I use arguements</p>\n\n<pre><code>dPr x y = foldPl0 (zWMult x y)\ndPr x y = foldPl0 $ zWMult x y\n</code></pre>\n\n<p>But have no idea how to naturally compose these without arguments.  Both these fail:</p>\n\n<pre><code>Prelude&gt; :{\nPrelude| let dPr1 :: Num c =&gt; [c] -&gt; [c] -&gt; c\nPrelude|     dPr1 = fPl0 $ zWMult\nPrelude| :}\n\n&lt;interactive&gt;:171:19:\nCouldn't match expected type \u2018[[c] -&gt; [c] -&gt; c]\u2019\n            with actual type \u2018[Integer] -&gt; [Integer] -&gt; [Integer]\u2019\nRelevant bindings include\n  dPr1 :: [c] -&gt; [c] -&gt; c (bound at &lt;interactive&gt;:171:5)\nProbable cause: \u2018zWMult\u2019 is applied to too few arguments\nIn the second argument of \u2018($)\u2019, namely \u2018zWMult\u2019\nIn the expression: fPl0 $ zWMult\n\nPrelude&gt; :{\nPrelude| let dPr1 :: Int c =&gt; [c] -&gt; [c] -&gt; c\nPrelude|     dPr1 = foldPl0 $ zWMult\nPrelude| :}\n\n&lt;interactive&gt;:11:13:\n\u2018Int\u2019 is applied to too many type arguments\nIn the type signature for \u2018dPr1\u2019: dPr1 :: Int c =&gt; [c] -&gt; [c] -&gt; c\n</code></pre>\n\n<p>As well as</p>\n\n<pre><code>dPr2 = foldPl0 . zWMult\n</code></pre>\n\n<p>Edit: \nCool, one should cross reference this post if you want a more complete understanding of the solution below.\n<a href=\"https://stackoverflow.com/questions/20279306/what-does-f-g-mean-in-haskell\">What does (f .) . g mean in Haskell?</a></p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 1, "last_activity_date": 1522019231, "last_edit_date": 1522019231, "creation_date": 1522017356, "answer_id": 49481689, "question_id": 49480933, "link": "https://stackoverflow.com/questions/49480933/using-exceptions-in-transformer-monad/49481689#49481689", "title": "Using Exceptions in Transformer Monad", "body": "<blockquote>\n  <p>I think that I should use <code>throwE</code>/<code>catchE</code> from <code>Control.Monad.Trans.Except</code>. However, <code>throwE</code> does not even compile when used with my transformer monad, as shown here:</p>\n\n<pre><code>apnCfg &lt;- return $ fromMaybe (throw UnknownApn) $ Map.lookup ueApn apnProfile\n</code></pre>\n  \n  <p>Using <code>throw</code> from <code>Control.Exception</code> gets past the compilation stage but I am not sure it will work.</p>\n</blockquote>\n\n<p>This can be solved by following the types. In your do-block, we have:</p>\n\n<pre><code>-- I won't use the synonym here, for the sake of explicitness:\nreturn :: a -&gt; StateT GtpcModSt (ExceptT GtpcExceptions IO) a\n</code></pre>\n\n<p>The type of <code>throwE</code> is:</p>\n\n<pre><code>throwE :: Monad m =&gt; e -&gt; ExceptT e m a \n</code></pre>\n\n<p>That being so, what you want is:</p>\n\n<pre><code>apnCfg &lt;- maybe (lift $ throwE UnknownApn) return $ Map.lookup ueApn apnProfile\n</code></pre>\n\n<p>Firstly, you only need <code>return</code> if you aren't throwing (<code>maybe</code> is more convenient than <code>fromMaybe</code> for expressing that). Secondly, <code>throwE</code> produces an <code>ExceptT</code> computation that you need to <code>lift</code> to the outer, <code>StateT</code> layer. You can make the <code>lift</code> implicit by using <em>mtl</em> instead of <em>transformers</em> directly. To do that, change your imports from...</p>\n\n<pre><code>import Control.Monad.Trans.State.Strict\nimport Control.Monad.Trans.Except\n</code></pre>\n\n<p>... to:</p>\n\n<pre><code>import Control.Monad.State.Strict\nimport Control.Monad.Except\n</code></pre>\n\n<p>Then you can simply write (using the <a href=\"https://hackage.haskell.org/package/mtl-2.2.2/docs/Control-Monad-Except.html#v:throwError\" rel=\"nofollow noreferrer\"><code>throwError</code></a> method from <code>MonadError</code>):</p>\n\n<pre><code>apnCfg &lt;- maybe (throwError UnknownApn) return $ Map.lookup ueApn apnProfile\n</code></pre>\n"}], "owner": {"reputation": 11, "user_id": 9549499, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4368ba43246aa0986bff60a87e7e4ae6?s=128&d=identicon&r=PG&f=1", "display_name": "RamanaG", "link": "https://stackoverflow.com/users/9549499/ramanag"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 68, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1522019231, "creation_date": 1522012036, "last_edit_date": 1522012826, "question_id": 49480933, "link": "https://stackoverflow.com/questions/49480933/using-exceptions-in-transformer-monad", "title": "Using Exceptions in Transformer Monad", "body": "<p>I have a question regarding use of Exceptions with a transformer stack.\nI am a trying to develop some networking software, specifically implement\nthe GTP control protocol on S5 interface.\nI am finding it difficult to get Exceptions work the transformer stack.</p>\n\n<pre><code>import Control.Monad (unless)\nimport Control.Exception\n....\nimport Control.Monad.Trans.State.Strict\nimport Control.Monad.Trans.Except\n...\ndata GtpcModSt = GtpcModSt { sock             :: Socket\n                       , rcvdBytes        :: BS.ByteString\n                       , s5cTeidKey     :: Word32\n                       ---- ....\n                       } --deriving (Show)\n\ntype EvalGtpC a = (StateT GtpcModSt (ExceptT GtpcExceptions IO )) a\n                  -- deriving (Functor, Applicative, Monad) \n\n\n\ngtpcProcess = loop\n       where loop = do\n             rcvAndProcessGtpc   `catch` (\\e -&gt; do\n                                      print \"Exception handler\"\n                                      print (e :: SomeException))\n            loop\n\n\n\n rcvAndProcessGtpc ::  EvalGtpC ()\n rcvAndProcessGtpc = do\n                    sock &lt;- gets sock\n                    (msg, addr) &lt;- liftIO $ recvFrom sock 1000\n                    modify (\\x -&gt; x {rcvdBytes = msg, sndrAddr = addr})\n                    processMsg\nprocessMsg :: EvalGtpC ()\n processMsg = do\n            --  validateSrc\n           -----\n          --....\n            msg &lt;- gets gtpMsg\n            processGtpc $ msgType msg\n\n -- createSessionRequest\n  processGtpc :: Word8 -&gt; EvalGtpC ()\n  processGtpc 32 = do\n         myState@GtpcModSt {..} &lt;- get\n         .....\n\n         sessParams &lt;- return $ foldl ieInfo (SessionParams { imsi = Nothing\n                              , mei = Nothing\n                              , msisdn = Nothing\n                              , senderFteidKey = Nothing\n                              , senderIpV4Addr = Nothing\n                              , senderIpV6Addr = Nothing\n                              , pgwFteidKey      = Nothing\n                              , pgwIpV4Addr   = Nothing\n                              , pgwIpV6Addr   = Nothing\n                              , apn           = Nothing\n                              , paaPdnType    = Nothing\n                              , pco           = Nothing\n                              , bearerContext = []\n                              , unDecodedIe   = []\n                              , unSupportedIe = []\n                              }) $ msgIeList gtpMsg\n\n\n        ueApn &lt;-return $ fromMaybe (throwE BadIe) (apn sessParams)\n        apnCfg &lt;- return $ fromMaybe (throw BadIe) $ Map.lookup ueApn apnProfile\n        thisSndrFteidKey &lt;-return $  fromMaybe (throw BadIe) (senderFteidKey sessParams)   \n</code></pre>\n\n<p>I think that I should use <code>throwE</code>/<code>catchE</code> from <code>Control.Monad.Trans.Except</code>. However, <code>throwE</code> does not even compile when used with my transformer monad, as shown here:</p>\n\n<pre><code>apnCfg &lt;- return $ fromMaybe (throw UnknownApn) $ Map.lookup ueApn apnProfile\n</code></pre>\n\n<p>Using <code>throw</code> from <code>Control.Exception</code> gets past the compilation stage but I am not sure it will work.\n Should I not be using Exception in a transformer monad that has <code>IO</code> as its base?</p>\n"}, {"tags": ["haskell", "haskell-persistent"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1522009801, "post_id": 49480209, "comment_id": 85964089, "body": "I have no experience with persistent, but I think underlying databases do not support sum types, so persistent can not map them (?). However, <code>Maybe</code> types should be mappable to nullable types, I guess."}, {"owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1522009920, "post_id": 49480209, "comment_id": 85964121, "body": "Under the hood both <code>UserId</code> and <code>GroupId</code> are <code>Key a</code>, which, in turn, is just <code>Int64</code> for SQL backends. So it should be possible. I even OK with dropping some type safety."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1522010803, "post_id": 49480209, "comment_id": 85964379, "body": "It is not possible to represent <code>Either Int64 Int64</code> inside <code>Int64</code>, since the former contains 1 more bit of information (&quot;left&quot; or &quot;right&quot;)."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1522014488, "post_id": 49480209, "comment_id": 85965433, "body": "To expand @chi &#39;s point further - Sure, you can serialize.  But how do you deserialize?  How do you know which type of key it is?"}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "edited": false, "score": 0, "creation_date": 1522028306, "post_id": 49480209, "comment_id": 85968496, "body": "Can you get away with sharing with a User implicitly creating a single-user group? (Or even always create a canonical single user group for each user). It just moves the awkwardness to a different place, so it might not be appropriate, but the different place is probably in Haskell land rather than persistent&#39;s DB DSL, so you&#39;d have more tools available."}, {"owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 1, "creation_date": 1522216688, "post_id": 49480209, "comment_id": 86059690, "body": "@Carl I was hoping persistent would hide from the details. It could&#39;ve add additional column to store the constructor for sum type, for instance. But I guess, I demand too much."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1526940572, "post_id": 49480209, "comment_id": 87927998, "body": "@arrowd, that surprises me a bit too. It&#39;s especially strange to me that there&#39;s an instance for lists but not for <code>Either</code>. The latter doesn&#39;t really seem inherently harder. Maybe you should open a GitHub issue for that?"}], "answers": [{"tags": [], "owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "is_accepted": true, "score": 0, "last_activity_date": 1522216535, "creation_date": 1522216535, "answer_id": 49527090, "question_id": 49480209, "link": "https://stackoverflow.com/questions/49480209/how-do-i-store-either-key-a-key-b/49527090#49527090", "title": "How do I store Either (Key a) (Key b)?", "body": "<p>After searching for some time and thinking about it I concluded there are two possible solutions:</p>\n\n<h2>1.</h2>\n\n<p>If number of <code>SharingIdType</code>s is static or rarely changes (means, it is OK to recompile the source to change it or alter the DB schema), the proper way to handle the problem is to have to entities for each sharing type:</p>\n\n<pre><code>User\n  ...\nGroup\n  ...\nUserSharing\n  userId UserId\nGroupSharing\n  groupId GroupId\n</code></pre>\n\n<p>Here the \"sumness\" of the problem is moved to DB queries. Whenever I need to find out with what something shared, I make two <code>selectList</code>s and query two tables instead of one.</p>\n\n<h2>2.</h2>\n\n<p>If number of <code>SharingIdTypes</code> needs to be altered dynamically, the <code>SharingType</code> entity is needed:</p>\n\n<pre><code>User\n  ...\nGroup\n  ...\nSharingType\n  description String\nSharing\n  objectId SharingTypeId\n</code></pre>\n\n<p>This table is filled up with values corresponding to <code>SharingIdType</code>s constructors:</p>\n\n<pre><code>do\n  insert $ SharingType \"user\"\n  insert $ SharingType \"group\"\n</code></pre>\n\n<p>Now whenever we share something, we refer <code>SharingTypeId</code>.</p>\n"}], "owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 127, "favorite_count": 0, "accepted_answer_id": 49527090, "answer_count": 1, "score": 1, "last_activity_date": 1526838219, "creation_date": 1522007197, "last_edit_date": 1526838219, "question_id": 49480209, "link": "https://stackoverflow.com/questions/49480209/how-do-i-store-either-key-a-key-b", "title": "How do I store Either (Key a) (Key b)?", "body": "<p>I have the following model:</p>\n\n<pre><code>User\n  ...\nGroup\n  ...\nSharing\n  objectId (Either UserId GroupId)\n</code></pre>\n\n<p>In <code>Sharing</code> entity I want to store either <code>UserId</code> or <code>GroupId</code> and differentiate between them. Simply using <code>Either</code> doesn't work:</p>\n\n<blockquote>\n  <ul>\n  <li>Not in scope: type constructor or class `UserId'</li>\n  <li>Not in scope: type constructor or class `GroupId'</li>\n  </ul>\n</blockquote>\n\n<p>Adding a new sum-type also doesn't work:</p>\n\n<pre><code>data SharingIdType = SharingUserId UserId | SharingGroupId GroupId\n</code></pre>\n\n<blockquote>\n  <ul>\n  <li>Not in scope: type constructor or class `SharingIdType'</li>\n  </ul>\n</blockquote>\n\n<p>Moving <code>SharingIdType</code> into another module isn't possible, because it uses <code>UserId</code> and <code>GroupId</code> types. The only way I see is to create an entity for each sharing type, like <code>UserSharing</code>/<code>GroupSharing</code>.</p>\n\n<p>Other than that, how to approach this problem?</p>\n"}, {"tags": ["haskell", "tagging"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1522004559, "post_id": 49479553, "comment_id": 85962271, "body": "Why did you add <code>cabal run</code> to the command?"}, {"owner": {"reputation": 11, "user_id": 9549135, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-3aVznXvSTJI/AAAAAAAAAAI/AAAAAAAAAAk/c6Zx4cx02Eg/photo.jpg?sz=128", "display_name": "Cyrus", "link": "https://stackoverflow.com/users/9549135/cyrus"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1522004725, "post_id": 49479553, "comment_id": 85962345, "body": "I have no idea how to run these commands, run fast-tags -o tags -R didn&#39;t work, just try all I have in my mind...Can you please show me what I should do next? I just install fast-tags by cabal install command, and I don&#39;t understand why it doesn&#39;t work, should I configure something else?"}, {"owner": {"reputation": 11, "user_id": 9549135, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-3aVznXvSTJI/AAAAAAAAAAI/AAAAAAAAAAk/c6Zx4cx02Eg/photo.jpg?sz=128", "display_name": "Cyrus", "link": "https://stackoverflow.com/users/9549135/cyrus"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1522005077, "post_id": 49479553, "comment_id": 85962511, "body": "It shows fast-tags: command not found"}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1522005863, "post_id": 49479553, "comment_id": 85962820, "body": "See also the paragraph starting &quot;<i>By default, <code>cabal</code> will install programs ...</i>&quot; at <a href=\"https://hackage.haskell.org/package/cabal-install\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/cabal-install</a>."}], "answers": [{"comments": [{"owner": {"reputation": 11, "user_id": 9549135, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-3aVznXvSTJI/AAAAAAAAAAI/AAAAAAAAAAk/c6Zx4cx02Eg/photo.jpg?sz=128", "display_name": "Cyrus", "link": "https://stackoverflow.com/users/9549135/cyrus"}, "edited": false, "score": 0, "creation_date": 1522005219, "post_id": 49479799, "comment_id": 85962565, "body": "Thanks for the answer, but when I run this, it shows hasktags is currently not installed, should I do something about configuring?"}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 11, "user_id": 9549135, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-3aVznXvSTJI/AAAAAAAAAAI/AAAAAAAAAAk/c6Zx4cx02Eg/photo.jpg?sz=128", "display_name": "Cyrus", "link": "https://stackoverflow.com/users/9549135/cyrus"}, "edited": false, "score": 1, "creation_date": 1522006177, "post_id": 49479799, "comment_id": 85962911, "body": "@Cyrus You should totally install <code>hasktags</code> first. I edited the post to indicate that."}], "tags": [], "owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "is_accepted": false, "score": 2, "last_activity_date": 1522006453, "last_edit_date": 1522006453, "creation_date": 1522004710, "answer_id": 49479799, "question_id": 49479553, "link": "https://stackoverflow.com/questions/49479553/how-to-generate-tags-for-my-haskell-project/49479799#49479799", "title": "How to generate tags for my haskell project?", "body": "<p>You can literally just go to your project directory and run:</p>\n\n<pre><code>hasktags .\n</code></pre>\n\n<p>(When I say <em>\"go\"</em> and <em>\"run\"</em>, I imply an ordinary POSIX compatible shell.)</p>\n\n<p>You will obtain a file called <code>tags</code> in that same directory.</p>\n\n<hr>\n\n<p>In order to run <code>hasktags</code>, you should first install it, of course. To do that, you may say:</p>\n\n<pre><code>stack install hasktags\n</code></pre>\n\n<p>(I am assuming you have <code>stack</code> on your system already.)</p>\n\n<p>\u2014 It should do the job. The executable <code>hasktags</code> will be placed at <code>~/.local/bin/hasktags</code>, so you may want to add <code>~/.local/bin</code> to your <code>PATH</code>, or just run <code>~/.local/bin/hasktags</code> instead of <code>hasktags</code> every time.</p>\n"}, {"comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1522005997, "post_id": 49479980, "comment_id": 85962847, "body": "For step 2: Alternatively, configure <code>cabal</code> to symlink your executables into some other directory (such as <code>~&#47;bin</code>)."}, {"owner": {"reputation": 11, "user_id": 9549135, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-3aVznXvSTJI/AAAAAAAAAAI/AAAAAAAAAAk/c6Zx4cx02Eg/photo.jpg?sz=128", "display_name": "Cyrus", "link": "https://stackoverflow.com/users/9549135/cyrus"}, "edited": false, "score": 0, "creation_date": 1522006454, "post_id": 49479980, "comment_id": 85963026, "body": "Thank you! It works for me, my problem is step 2, I didn&#39;t export my cabal path, thanks!"}, {"owner": {"reputation": 11, "user_id": 9549135, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-3aVznXvSTJI/AAAAAAAAAAI/AAAAAAAAAAk/c6Zx4cx02Eg/photo.jpg?sz=128", "display_name": "Cyrus", "link": "https://stackoverflow.com/users/9549135/cyrus"}, "edited": false, "score": 0, "creation_date": 1522007268, "post_id": 49479980, "comment_id": 85963270, "body": "Hi, I run hasktags . it generated ctags and TAGS files under my directory, can you show me how to track down now? I&#39;m using vim, tried ctrl+], it shows no tags..."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1522008749, "post_id": 49479980, "comment_id": 85963777, "body": "Cyrus: see my edit."}], "tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": false, "score": 3, "last_activity_date": 1522008740, "last_edit_date": 1522008740, "creation_date": 1522005731, "answer_id": 49479980, "question_id": 49479553, "link": "https://stackoverflow.com/questions/49479553/how-to-generate-tags-for-my-haskell-project/49479980#49479980", "title": "How to generate tags for my haskell project?", "body": "<ol>\n<li><p>Install <code>hasktags</code>.  For example, <code>cabal install hasktags</code> (or use stack or your OS package manager).</p></li>\n<li><p>Make sure your shell's PATH includes the directory where the <code>hasktags</code> binary went.  For <code>cabal</code> on *nix this is <code>$HOME/.cabal/bin</code>.  For example, in the shell do <code>export PATH=$HOME/.cabal/bin:$PATH</code>.  You should add a line like this into your <code>$HOME/.profile</code>.</p></li>\n<li><p>Change to your project directory.</p></li>\n<li><p>Invoke the <code>hasktags</code> binary with a call such as <code>hasktags --ignore-close-implementation --ctags .</code>  Or just <code>hasktags .</code> depending on your needs.</p></li>\n</ol>\n\n<p>EDIT: For example</p>\n\n<pre><code>% cabal unpack containers\nDownloading containers-0.5.11.0...\nUnpacking to containers-0.5.11.0/\n% cd containers-0.5.11.0\ncontainers-0.5.11.0% hasktags --ignore-close-implementation --ctags .\ncontainers-0.5.11.0% ls TAGS\nTAGS\n% vim\n</code></pre>\n\n<p>Then in vi/vim/neovim type <code>Map</code>, move the cursor over the word and hit <code>ctrl-]</code>.  It should open to the <code>Internal.hs</code> file line ~ 459.</p>\n\n<p>I have an extra binding to open a new tab.  In my init.vim (or your .vimrc) consider adding:</p>\n\n<pre><code>\" Open tags in new tabs (via C-[)\nnnoremap &lt;silent&gt;&lt;C-[&gt; &lt;C-w&gt;&lt;C-]&gt;&lt;C-w&gt;T\n</code></pre>\n"}], "owner": {"reputation": 11, "user_id": 9549135, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-3aVznXvSTJI/AAAAAAAAAAI/AAAAAAAAAAk/c6Zx4cx02Eg/photo.jpg?sz=128", "display_name": "Cyrus", "link": "https://stackoverflow.com/users/9549135/cyrus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 321, "favorite_count": 0, "closed_date": 1522180886, "answer_count": 2, "score": 1, "last_activity_date": 1522008740, "creation_date": 1522003445, "last_edit_date": 1522006018, "question_id": 49479553, "link": "https://stackoverflow.com/questions/49479553/how-to-generate-tags-for-my-haskell-project", "closed_reason": "Duplicate", "title": "How to generate tags for my haskell project?", "body": "<p>I'm new to haskell, I have read almost all the documents about hasktags, fast-tags etc. None of them have the details about how I can generate tags using those tools?</p>\n\n<p>I have installed both of them, but how can I first run and generate the tags file for my *.hs file? Can anyone please give me some details about what kind of command should I run, I have no idea what this means:</p>\n\n<blockquote>\n  <p>In order to generate tags for all Haskell files under current directory, issue <code>fast-tags -o tags -R</code>.</p>\n</blockquote>\n\n<p>Where should I type this command? I tried <code>fast-tags -o tags -R</code> under my project directory, it didn't work, please help!</p>\n"}, {"tags": ["haskell", "vector", "vectorization", "linear-algebra", "hmatrix"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1522001562, "post_id": 49478373, "comment_id": 85961170, "body": "Don&#39;t translate performance considerations from Python (or Matlab etc.) to Haskell. What these languages call <i>vectorisation</i> is only sensible because they are slow, dynamic languages, so the overhead of looping over individual elements within the language is greater than the overhead of a few intermediate array allocations. But that&#39;s not the case in fast, statically compiled languages like Rust, C, Java and, indeed, Haskell."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1522001717, "post_id": 49478373, "comment_id": 85961228, "body": "(That doesn&#39;t mean just using Haskell lists is a good idea, of course \u2013 these introduce cache-locality issues which make the language much slower than C etc.. And yes, there is also a kind of vectorisation that always makes sense, namely parallelisation either on a large scale or with small chunks that can be processed in a single AVX instruction.)"}, {"owner": {"reputation": 341, "user_id": 5526180, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/TXrPk.jpg?s=128&g=1", "display_name": "mahmoud fathy", "link": "https://stackoverflow.com/users/5526180/mahmoud-fathy"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1522064189, "post_id": 49478373, "comment_id": 85983960, "body": "@leftaroundabout that&#39;s what I mean by vectorization. I want my Haskell code to utilize SIMD executions."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1522066000, "post_id": 49478373, "comment_id": 85985143, "body": "Interesting, but I wouldn&#39;t expect too much from this for something like this sigmoid. There is no exponential function in the AVX instruction set. To really speed up something like this with SIMD, you&#39;d need to run it on a GPU; check out <a href=\"http://hackage.haskell.org/package/accelerate-llvm-ptx\" rel=\"nofollow noreferrer\">accelerate-llvm-ptx</a>."}], "answers": [{"comments": [{"owner": {"reputation": 341, "user_id": 5526180, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/TXrPk.jpg?s=128&g=1", "display_name": "mahmoud fathy", "link": "https://stackoverflow.com/users/5526180/mahmoud-fathy"}, "edited": false, "score": 0, "creation_date": 1522063985, "post_id": 49478712, "comment_id": 85983801, "body": "This seems very sound, I will try assess the computation once I get back to my machine. I hope it doesn&#39;t take the same amount of time as regular pattern matching, I am doing that for machine learning."}, {"owner": {"reputation": 341, "user_id": 5526180, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/TXrPk.jpg?s=128&g=1", "display_name": "mahmoud fathy", "link": "https://stackoverflow.com/users/5526180/mahmoud-fathy"}, "edited": false, "score": 0, "creation_date": 1522064234, "post_id": 49478712, "comment_id": 85983985, "body": "So .. Does this utilize SIMD, because that&#39;s what I mean Technically ?"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 341, "user_id": 5526180, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/TXrPk.jpg?s=128&g=1", "display_name": "mahmoud fathy", "link": "https://stackoverflow.com/users/5526180/mahmoud-fathy"}, "edited": false, "score": 0, "creation_date": 1522088376, "post_id": 49478712, "comment_id": 86000092, "body": "&quot;I hope it doesn&#39;t take the same amount of time as regular pattern matching&quot; -- I suggest not focusing your attention literally on pattern matching, as it, at most, a symptom of whatever else is going on. On the surface, <code>map (\\z -&gt; 1&#47;(1+exp (-z))) :: [Double] -&gt; [Double]</code> doesn&#39;t <i>seem</i> to be doing any pattern matching, yet it boils down to essentially the same code in your question. What truly matters is that the <code>[Double]</code> data structure isn&#39;t well suited to your use case."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 341, "user_id": 5526180, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/TXrPk.jpg?s=128&g=1", "display_name": "mahmoud fathy", "link": "https://stackoverflow.com/users/5526180/mahmoud-fathy"}, "edited": false, "score": 0, "creation_date": 1522088529, "post_id": 49478712, "comment_id": 86000181, "body": "&quot;So .. Does this utilize SIMD, because that&#39;s what I mean Technically ?&quot; -- <a href=\"https://hackage.haskell.org/package/hmatrix-0.18.2.0\" rel=\"nofollow noreferrer\"><i>hmatrix</i> uses BLAS, which exploits SIMD</a>, but cf. <a href=\"https://stackoverflow.com/questions/49478373/apply-element-wise-mathematical-function-using-hmatrix-with-vectorization/49478712?noredirect=1#comment85985143_49478373\">leftaroundabout&#39;s comment</a> (and also note that he knows a lot more about this kind of issue than I do). By the way, as usual, the best way of finding out whether something provides good enough performance for your use case is by testing it."}, {"owner": {"reputation": 341, "user_id": 5526180, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/TXrPk.jpg?s=128&g=1", "display_name": "mahmoud fathy", "link": "https://stackoverflow.com/users/5526180/mahmoud-fathy"}, "edited": false, "score": 1, "creation_date": 1522198167, "post_id": 49478712, "comment_id": 86054773, "body": "I tested it and it&#39;s obviously way faster than using the ordinary haskell lists"}], "tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": true, "score": 6, "last_activity_date": 1521998627, "creation_date": 1521998627, "answer_id": 49478712, "question_id": 49478373, "link": "https://stackoverflow.com/questions/49478373/apply-element-wise-mathematical-function-using-hmatrix-with-vectorization/49478712#49478712", "title": "Apply element-wise mathematical function using hmatrix (with vectorization)", "body": "<p>If you are using <em>hmatrix</em>, <a href=\"https://hackage.haskell.org/package/hmatrix-0.18.2.0/docs/Numeric-LinearAlgebra-Data.html#v:cmap\" rel=\"noreferrer\">you are probably looking for <code>cmap</code></a>:</p>\n\n<blockquote>\n<pre><code>cmap :: (Element b, Container c e) =&gt; (e -&gt; b) -&gt; c e -&gt; c b\n</code></pre>\n  \n  <p>like <code>fmap</code> (cannot implement instance Functor because of Element class constraint)</p>\n</blockquote>\n\n<pre><code>sigmoid :: Vector Double -&gt; Vector Double\nsigmoid = cmap (\\z -&gt; 1/(1+exp (-z)))\n</code></pre>\n"}], "owner": {"reputation": 341, "user_id": 5526180, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/TXrPk.jpg?s=128&g=1", "display_name": "mahmoud fathy", "link": "https://stackoverflow.com/users/5526180/mahmoud-fathy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 235, "favorite_count": 0, "accepted_answer_id": 49478712, "answer_count": 1, "score": 1, "last_activity_date": 1522001617, "creation_date": 1521996878, "last_edit_date": 1522001617, "question_id": 49478373, "link": "https://stackoverflow.com/questions/49478373/apply-element-wise-mathematical-function-using-hmatrix-with-vectorization", "title": "Apply element-wise mathematical function using hmatrix (with vectorization)", "body": "<p>I need to apply a function on elements of a vector in Haskell in an efficient way, which implies that i am not looking for something like this:</p>\n\n<pre><code>sigmoid :: [Float] -&gt; [Float]\nsigmoid [] = []\nsigmoid (z:zs) = ( 1/(1+exp (-z)) ):(sigmoid zs) \n</code></pre>\n\n<p>To be more specific, are there <code>exp, log, ... etc</code> for element-wise vector operations in hmatrix using Haskell, similarly to their counterparts in numpy using Python? My code runs very slowly if I am not using vector processing capabilities. </p>\n"}, {"tags": ["haskell", "ghc", "ffi"], "answers": [{"tags": [], "owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "is_accepted": true, "score": 1, "last_activity_date": 1522117067, "creation_date": 1522117067, "answer_id": 49503388, "question_id": 49477709, "link": "https://stackoverflow.com/questions/49477709/what-does-it-mean-to-pass-one-of-the-bytearray-types-through-ghcs-ffi/49503388#49503388", "title": "What does it mean to pass one of the ByteArray types through GHC&#39;s FFI?", "body": "<p>Thanks @ThomasM.DuBuisson for digging up an <a href=\"https://mail.haskell.org/pipermail/haskell-cafe/2014-June/114763.html\" rel=\"nofollow noreferrer\">old email thread</a>:</p>\n\n<blockquote>\n  <p>There is a way to pass an unpinned <code>ByteArray#</code> (or <code>MutableByteArray#</code>,\n  but the former seems right in your case) to a foreign call, using the\n  <code>UnliftedFFITypes</code> language extension. The <code>ByteArray#</code> is guaranteed to\n  not to be moved for the duration of the call. The code should treat\n  the <code>ByteArray#</code> argument as if it was a pointer to bytes. You will need\n  to do any address offset computations on the C side (i.e. pass any\n  offsets you need as extra argument to your C function).</p>\n</blockquote>\n\n<p>So: these are passed as pointers and GHC's runtime promises not to move them from under you.</p>\n"}], "owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 154, "favorite_count": 1, "accepted_answer_id": 49503388, "answer_count": 1, "score": 3, "last_activity_date": 1522117067, "creation_date": 1521992795, "question_id": 49477709, "link": "https://stackoverflow.com/questions/49477709/what-does-it-mean-to-pass-one-of-the-bytearray-types-through-ghcs-ffi", "title": "What does it mean to pass one of the ByteArray types through GHC&#39;s FFI?", "body": "<p>In the Haskell2010 report, from <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch8.html#x15-1540008.4\" rel=\"nofollow noreferrer\">section 8.4.2</a>, there is a list of basic types that are supported in FFI import/export declarations:</p>\n\n<blockquote>\n  <p>The following types constitute the set of basic foreign types:</p>\n  \n  <ul>\n  <li><code>Char</code>, <code>Int</code>, <code>Double</code>, <code>Float</code>, and <code>Bool</code> as exported by the Haskell Prelude as well as</li>\n  <li><code>Int8</code>, <code>Int16</code>, <code>Int32</code>, <code>Int64</code>, <code>Word8</code>, <code>Word16</code>, <code>Word32</code>, <code>Word64</code>, <code>Ptr a</code>, <code>FunPtr a</code>, and <code>StablePtr a</code>, for any type <code>a</code>, as exported by Foreign\n  (Section 24).</li>\n  </ul>\n  \n  <p>A Haskell system that implements the FFI needs to be able to pass\n  these types between the Haskell and the external context as function\n  arguments and results.</p>\n</blockquote>\n\n<p>From the GHC manual section on extensions on FFI, <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/ffi-chap.html#unboxed-types\" rel=\"nofollow noreferrer\">GHC adds to these types with some unboxed types</a>: </p>\n\n<blockquote>\n  <p>The following unboxed types may be used as basic foreign types (see\n  FFI Addendum, Section 3.2): <code>Int#</code>, <code>Word#</code>, <code>Char#</code>, <code>Float#</code>,\n  <code>Double#</code>, <code>Addr#</code>, <code>StablePtr# a</code>, <code>MutableByteArray#</code>,\n  <code>ForeignObj#</code>, and <code>ByteArray#</code>.</p>\n</blockquote>\n\n<p>It is pretty clear what happens for most of theses types at the level of the linker when i specify the <code>ccall</code> calling convention. For example, I'm pretty sure <code>Int</code>/<code>Int#</code> get passed on the stack as two 32-bit values. Similarly, <code>Ptr a</code>/<code>StablePtr a</code>/<code>StablePtr# a</code>/<code>Addr#</code> probably all get passed as pointers on the stack.</p>\n\n<p><strong>What about <code>ByteArray#</code> and <code>MutableByteArray#</code>?</strong></p>\n\n<p>All I can imagine is passing them as pointers, but that seems a bit nuts since, unless you make your <code>ByteArray#</code>/<code>MutableByteArray#</code> pinned, the GHC runtime might end up moving the array from under you. Also, you would be ignoring the size information also on the array.</p>\n"}, {"tags": ["haskell", "hackage"], "comments": [{"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1521992886, "post_id": 49477665, "comment_id": 85957890, "body": "&quot;since I want to deprecate that package&quot;. Surely you mean that &quot;module&quot;! I hope <code>hlint</code> as a whole isn&#39;t about to be deprecated."}, {"owner": {"reputation": 8563, "user_id": 160673, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/7BSPT.jpg?s=128&g=1", "display_name": "Neil Mitchell", "link": "https://stackoverflow.com/users/160673/neil-mitchell"}, "reply_to_user": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1521993011, "post_id": 49477665, "comment_id": 85957929, "body": "Thanks @Alec - you&#39;re totally right, edited above."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 4, "creation_date": 1521995067, "post_id": 49477665, "comment_id": 85958672, "body": "I want to know what packages (or even modules) use what <i>individual exports</i>. That would really help me understand how functions in the libraries I maintain are being used, do I can know how performance matters, and where it likely matters most. If I can get 20% savings on a 1ms operation (your example of something likely not worth the trouble) then I absolutely will do it for library code, but if I know what&#39;s on who&#39;s hot path, I&#39;ll be able to make better decisions."}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1521998507, "post_id": 49477665, "comment_id": 85960037, "body": "It seems like you should be able to cobble something together using <a href=\"https://packdeps.haskellers.com/reverse\" rel=\"nofollow noreferrer\">packdeps.haskellers.com/reverse</a> combined with some coarse-grained parsing of the Haskell module imports of the packages you get."}, {"owner": {"reputation": 8563, "user_id": 160673, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/7BSPT.jpg?s=128&g=1", "display_name": "Neil Mitchell", "link": "https://stackoverflow.com/users/160673/neil-mitchell"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1522050121, "post_id": 49477665, "comment_id": 85975094, "body": "@dfeuer - you&#39;re totally right, that would be a more general question, and strictly more useful."}], "owner": {"reputation": 8563, "user_id": 160673, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/7BSPT.jpg?s=128&g=1", "display_name": "Neil Mitchell", "link": "https://stackoverflow.com/users/160673/neil-mitchell"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 99, "favorite_count": 0, "answer_count": 0, "score": 7, "last_activity_date": 1521992995, "creation_date": 1521992577, "last_edit_date": 1521992995, "question_id": 49477665, "link": "https://stackoverflow.com/questions/49477665/find-all-modules-importing-a-given-module-on-hackage", "title": "Find all modules importing a given module on Hackage", "body": "<p>I'd like to find all modules on Hackage which import a given module from a given package. As an example of why this is useful, I'd like to see all modules that import <code>Language.Haskell.HLint</code> from the <code>hlint</code> package, since I want to deprecate that module but am interested in how it is currently used.</p>\n\n<p>Is there any index (ideally online) tracking such import relationships?</p>\n"}, {"tags": ["haskell", "stack"], "comments": [{"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 4, "creation_date": 1521981495, "post_id": 49475876, "comment_id": 85954304, "body": "Don&#39;t derive <code>Show</code> (remove <code>deriving Show</code>) if you define your own <code>Show</code> instance."}, {"owner": {"reputation": 311, "user_id": 8296096, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-Bk-j61llm3Q/AAAAAAAAAAI/AAAAAAAAADY/BEKd97nLQOw/photo.jpg?sz=128", "display_name": "Sushodhan", "link": "https://stackoverflow.com/users/8296096/sushodhan"}, "reply_to_user": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521982136, "post_id": 49475876, "comment_id": 85954488, "body": "@St&#233;phaneLaurent - If I do so it give me errors like         &quot;stackOp.hs:16:9:     Couldn&#39;t match expected type <code>Stack a&#39; with actual type </code>[a0]&#39;     In the expression: []     In an equation for <code>empty&#39;: empty = []  stackOp.hs:19:12:     Couldn&#39;t match expected type </code>Stack a&#39; with actual type <code>[a]&#39;     In the expression: x : s     In an equation for </code>push&#39;: push x s = x : s  stackOp.hs:19:14:     Couldn&#39;t match expected type <code>[a]&#39; with actual type </code>Stack a&#39;     In the second argument of <code>(:)&#39;, namely </code>s&#39;     In the expression: x : s     In an equation for `push&#39;: push x s = x : s"}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521982503, "post_id": 49475876, "comment_id": 85954625, "body": "This is another error... Let me take a look but perhaps we need an expert here (I&#39;m not one)."}, {"owner": {"reputation": 311, "user_id": 8296096, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-Bk-j61llm3Q/AAAAAAAAAAI/AAAAAAAAADY/BEKd97nLQOw/photo.jpg?sz=128", "display_name": "Sushodhan", "link": "https://stackoverflow.com/users/8296096/sushodhan"}, "reply_to_user": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521982603, "post_id": 49475876, "comment_id": 85954657, "body": "@St&#233;phaneLaurent Okay. Thanks for the help you did here."}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521982803, "post_id": 49475876, "comment_id": 85954717, "body": "There are at least three errors... I still look"}], "answers": [{"comments": [{"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521983152, "post_id": 49476143, "comment_id": 85954839, "body": "Note that I have not tested anything... I only guarantee the code compiles now."}, {"owner": {"reputation": 311, "user_id": 8296096, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-Bk-j61llm3Q/AAAAAAAAAAI/AAAAAAAAADY/BEKd97nLQOw/photo.jpg?sz=128", "display_name": "Sushodhan", "link": "https://stackoverflow.com/users/8296096/sushodhan"}, "edited": false, "score": 0, "creation_date": 1521984142, "post_id": 49476143, "comment_id": 85955192, "body": "Thank you very much. Now it is getting compiled. I think you are an expert."}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "reply_to_user": {"reputation": 311, "user_id": 8296096, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-Bk-j61llm3Q/AAAAAAAAAAI/AAAAAAAAADY/BEKd97nLQOw/photo.jpg?sz=128", "display_name": "Sushodhan", "link": "https://stackoverflow.com/users/8296096/sushodhan"}, "edited": false, "score": 0, "creation_date": 1521991183, "post_id": 49476143, "comment_id": 85957327, "body": "You&#39;re welcome @SushodhanVaishampayan. You could upvote the answer and click the checkmark if you&#39;re satisfied. And no I&#39;m not an expert. Most of the Haskell questions asked on Stackoverflow and their answers are the cosmos for me ^^"}], "tags": [], "owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "is_accepted": true, "score": 1, "last_activity_date": 1521982977, "creation_date": 1521982977, "answer_id": 49476143, "question_id": 49475876, "link": "https://stackoverflow.com/questions/49475876/generic-stack-implementation-in-haskell/49476143#49476143", "title": "Generic Stack implementation in haskell", "body": "<p>Here is your code with three corrections:</p>\n\n<pre><code>-- do not derive Show since you define it\ndata Stack a = Stack [a]\n               deriving (Eq,Ord)\n\n-- there was a redundant pattern matching here\nprintelems :: (Show a) =&gt; [a] -&gt; String\nprintelems []     = \"\"\nprintelems (x:xs) = if null xs then show x else show x ++ \"-&gt;\" ++ printelems xs\n\ninstance (Show a) =&gt; Show (Stack a)\n where\n show (Stack l) = printelems l\n\n-- \"Stack\" was missing\nempty :: Stack a\nempty = Stack []\n\n-- \"Stack\" was missing\npush :: a -&gt; Stack a -&gt; Stack a\npush x (Stack s) = Stack (x:s)\n</code></pre>\n"}], "owner": {"reputation": 311, "user_id": 8296096, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-Bk-j61llm3Q/AAAAAAAAAAI/AAAAAAAAADY/BEKd97nLQOw/photo.jpg?sz=128", "display_name": "Sushodhan", "link": "https://stackoverflow.com/users/8296096/sushodhan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 434, "favorite_count": 0, "accepted_answer_id": 49476143, "answer_count": 1, "score": 0, "last_activity_date": 1521984769, "creation_date": 1521981171, "last_edit_date": 1521984769, "question_id": 49475876, "link": "https://stackoverflow.com/questions/49475876/generic-stack-implementation-in-haskell", "title": "Generic Stack implementation in haskell", "body": "<p>I am trying to create a generic implementations of stack operations. On compiling it gives an error:</p>\n\n<pre><code>Duplicate instance declarations:\n      instance Show a =&gt; Show (Stack a) -- Defined at stackOp.hs:2:29\n      instance Show a =&gt; Show (Stack a) -- Defined at stackOp.hs:11:10\n</code></pre>\n\n<p>Here is my code:</p>\n\n<pre><code>data Stack a = Stack [a]\n               deriving (Eq,Show,Ord)\n\nprintelems :: (Show a) =&gt; [a] -&gt; String\nprintelems [] = \"\"\nprintelems x = show x\nprintelems (x:xs) = show x ++ \"-&gt;\" ++ (printelems xs)\n\n\n\ninstance (Show a) =&gt; Show (Stack a)\n where\n show (Stack l) = printelems l\n\nempty :: Stack a\nempty = []\n\npush :: a -&gt; Stack a -&gt; Stack a\npush x s = x:s\n</code></pre>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 2, "last_activity_date": 1521979146, "creation_date": 1521979146, "answer_id": 49475576, "question_id": 49475295, "link": "https://stackoverflow.com/questions/49475295/encoding-statically-known-size-of-fixed-vector-as-a-type-parameter/49475576#49475576", "title": "Encoding statically known size of fixed vector as a type parameter", "body": "<p>You're almost there!. In the body <code>compute</code> there is a reference to the type variable <code>n</code>, but to do that actually requires an extension: <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#lexically-scoped-type-variables\" rel=\"nofollow noreferrer\"><code>ScopedTypeVariables</code></a>.</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables #-}\n\n           -- Must be explicitly bound...\ncompute :: forall n. Arity n =&gt; Maybe (Result n)\ncompute = fmap (Result . calc) res\n  where\n    res = VF.replicateM (Just 1) :: Maybe (Vec n Int)  -- ... so it can be referred to here\n    calc = VF.sum\n</code></pre>\n"}], "owner": {"reputation": 493, "user_id": 6936672, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-0RF_e6-CrRw/AAAAAAAAAAI/AAAAAAAAEGw/E2UkeZuXueo/photo.jpg?sz=128", "display_name": "Alexander Morozov", "link": "https://stackoverflow.com/users/6936672/alexander-morozov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 94, "favorite_count": 0, "accepted_answer_id": 49475576, "answer_count": 1, "score": 2, "last_activity_date": 1521979146, "creation_date": 1521977254, "question_id": 49475295, "link": "https://stackoverflow.com/questions/49475295/encoding-statically-known-size-of-fixed-vector-as-a-type-parameter", "title": "Encoding statically known size of fixed vector as a type parameter", "body": "<p>I would like to encode a statically known size as an arbitrary type parameter and then inside operation on values of that type to use this parameter for operations on vectors from fixed-vector package.</p>\n\n<p>But I'm lost at how to use that type parameter to constrain a fixed vector to implied size.</p>\n\n<p>Very simplified example:</p>\n\n<pre><code>{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE FlexibleContexts #-}\n{-# LANGUAGE PolyKinds #-}\n{-# LANGUAGE RankNTypes #-}\n{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE UndecidableInstances #-}\nmodule Main where\n\nimport Data.Vector.Fixed (Arity)\nimport qualified Data.Vector.Fixed as VF\nimport Data.Vector.Fixed.Unboxed\n\nnewtype Result n = Result Int\n\ncompute :: Arity n =&gt; Maybe (Result n)\ncompute = fmap (Result . calc) res\n  where\n    res = VF.replicateM (Just 1) :: Maybe (Vec n Int)\n    calc = VF.sum\n\nunpack :: Arity n =&gt; Result n -&gt; Int\nunpack (Result x) = x \n\ncomp1 :: Int\ncomp1 = maybe 0 unpack r \n  where\n    r = compute :: Maybe (Result 1)\n\nmain :: IO ()\nmain = print comp1\n</code></pre>\n\n<p>Gives me the following error:</p>\n\n<pre><code>src/Main.hs:18:11: error:\n    \u2022 Could not deduce: Data.Vector.Fixed.Cont.Peano\n                          (n2 GHC.TypeLits.+ 1)\n                        ~\n                        'Data.Vector.Fixed.Cont.S (Data.Vector.Fixed.Cont.Peano n2)\n        arising from a use of \u2018VF.replicateM\u2019\n      from the context: Arity n\n        bound by the type signature for:\n                   compute :: Arity n =&gt; Maybe (Result n)\n        at src/Main.hs:15:1-38\n    \u2022 In the expression: VF.replicateM (Just 1) :: Maybe (Vec n Int)\n      In an equation for \u2018res\u2019:\n          res = VF.replicateM (Just 1) :: Maybe (Vec n Int)\n      In an equation for \u2018compute\u2019:\n          compute\n            = fmap (Result . calc) res\n            where\n                res = VF.replicateM (Just 1) :: Maybe (Vec n Int)\n                calc = VF.sum\n\nsrc/Main.hs:19:5: error:\n    \u2022 Could not deduce (Data.Vector.Fixed.Cont.ArityPeano\n                          (Data.Vector.Fixed.Cont.Peano n0),\n                        GHC.TypeLits.KnownNat n0,\n                        Data.Vector.Fixed.Cont.Peano (n0 GHC.TypeLits.+ 1)\n                        ~\n                        'Data.Vector.Fixed.Cont.S (Data.Vector.Fixed.Cont.Peano n0))\n        arising from a use of \u2018VF.sum\u2019\n      from the context: Arity n\n        bound by the type signature for:\n                   compute :: Arity n =&gt; Maybe (Result n)\n        at src/Main.hs:15:1-38\n      The type variable \u2018n0\u2019 is ambiguous\n    \u2022 When instantiating \u2018calc\u2019, initially inferred to have\n      this overly-general type:\n        forall (v :: * -&gt; *) a. (VF.Vector v a, Num a) =&gt; v a -&gt; a\n      NB: This instantiation can be caused by the monomorphism restriction.\n      In an equation for \u2018compute\u2019:\n          compute\n            = fmap (Result . calc) res\n            where\n                res = VF.replicateM (Just 1) :: Maybe (Vec n Int)\n                calc = VF.sum\n</code></pre>\n\n<p>I suspect that GHC does not see any connection between <code>n</code> in <code>Result n</code> and <code>n</code> in <code>:: Maybe (Vec n Int)</code>.</p>\n\n<p>Maybe I'm doing it all wrong.</p>\n\n<p>What I really have is a family of types, for each natural number from 1 to N. And I need to, for example, declare each type an instance of some class and use fixed vector for that number inside that class method. So, store a natural number as a type parameter, then, in some function bound only by that type, extract that number and use it to operate internally on fixed vectors by that size.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1521973946, "post_id": 49474253, "comment_id": 85952132, "body": "Actually you do not alter variables at all, you create a <i>new</i> variable with a <i>closer</i> scope, but this would fail dramatically for loops."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1521979971, "post_id": 49474253, "comment_id": 85953844, "body": "<code>let var = if (...) then 6 else 0</code>...? If that&#39;s not satisfactory, you should maybe modify your motivating example to show why."}], "answers": [{"tags": [], "owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "is_accepted": false, "score": 5, "last_activity_date": 1521971127, "creation_date": 1521971127, "answer_id": 49474479, "question_id": 49474253, "link": "https://stackoverflow.com/questions/49474253/handling-variables-in-haskell/49474479#49474479", "title": "Handling Variables in Haskell", "body": "<p>The correct way to deal with changing variables in Haskell is with functions and recursion. To \u201cchange\u201d the value of a variable you compute the new value and call some function with it. Then the function called will get that new value as it\u2019s argument. Often this is a recursive call. Example with factorial below.</p>\n\n<p>Imperative Pseudocode:</p>\n\n<pre><code>def factorial(n)\n  a=1\n  for i = 1 to n\n    a = a*i\n  return a\n</code></pre>\n\n<p>Translated to Haskell:</p>\n\n<pre><code>factorial n = go 1 1 where\n  go a i | i &lt;= n = go (a*i) (i+1)\n  go a i | i &gt;  n = a\n</code></pre>\n\n<p>Notice that we replace the mutation of variables with a recursive call. Here is factorial in idiomatic Haskell:</p>\n\n<pre><code>factorial n = product [1..n]\n</code></pre>\n\n<p>Often one doesn\u2019t really need values of variables to change at all.</p>\n\n<p>Finally one should note that you aren\u2019t actually changing the value of the variable <code>var</code> because your code is doing something like:</p>\n\n<pre><code>return 3 &gt;&gt;= \\var -&gt;\n(... return (var +3)) &gt;&gt;= \\var -&gt;\n..,\n</code></pre>\n\n<p>So you\u2019re just doing what I described above in a very roundabout unidiomatic way.</p>\n"}], "owner": {"reputation": 21, "user_id": 9547484, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5af9de838bf5b9323d884ad3d9fb7201?s=128&d=identicon&r=PG&f=1", "display_name": "Momentum", "link": "https://stackoverflow.com/users/9547484/momentum"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1521971127, "creation_date": 1521969294, "question_id": 49474253, "link": "https://stackoverflow.com/questions/49474253/handling-variables-in-haskell", "title": "Handling Variables in Haskell", "body": "<p>I Wonder if there is a better way (cause I'm feeling this is kinda \"bad style\") to store/alter values in Haskell:</p>\n\n<pre><code>foo :: IO ()\nfoo = do\n\n  var &lt;- return 3\n  var &lt;- if (...)\n              then\n                return (var + 3)\n         else\n           return (var - 3)\n\n  (...)\n\n  return ()\n</code></pre>\n"}, {"tags": ["haskell", "dynamic-programming", "memoization"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1521966736, "post_id": 49473764, "comment_id": 85950210, "body": "You can get O(1) <code>!</code> by using an array instead of a list."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1521967721, "post_id": 49473764, "comment_id": 85950454, "body": "There exist <a href=\"http://hackage.haskell.org/packages/search?terms=memoization\" rel=\"nofollow noreferrer\">helper libraries</a> if you do not want to code memoization yourself."}], "answers": [{"comments": [{"owner": {"reputation": 21654, "user_id": 107331, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/cf6d0868b2b4c69bac3e6f265a32b6a7?s=128&d=identicon&r=PG", "display_name": "Daniel Martin", "link": "https://stackoverflow.com/users/107331/daniel-martin"}, "edited": false, "score": 0, "creation_date": 1522346596, "post_id": 49556862, "comment_id": 86132941, "body": "I realize that I swapped the order of arguments <code>(t, d)</code> from the page shown. I&#39;m not going to go back and fix that unless people really find it confusing."}], "tags": [], "owner": {"reputation": 21654, "user_id": 107331, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/cf6d0868b2b4c69bac3e6f265a32b6a7?s=128&d=identicon&r=PG", "display_name": "Daniel Martin", "link": "https://stackoverflow.com/users/107331/daniel-martin"}, "is_accepted": true, "score": 1, "last_activity_date": 1522328731, "creation_date": 1522328731, "answer_id": 49556862, "question_id": 49473764, "link": "https://stackoverflow.com/questions/49473764/making-change-with-minimum-denominations-with-memoization/49556862#49556862", "title": "Making change with minimum denominations with memoization", "body": "<p>First off, to do <code>O(1)</code> access in Haskell, the standard go-to library is <a href=\"http://hackage.haskell.org/package/array-0.5.2.0/docs/Data-Array.html\" rel=\"nofollow noreferrer\">Data.Array</a>.</p>\n\n<p>Second, the general way to define something near a type but somehow \"outside\" it is to use the <code>Maybe</code> type; this is what I recommend for <code>INFINITY</code>. Also, I think that this makes more sense in the algorithm, because <code>INFINITY</code> really means \"we can't make this value with this set of denominations\", not \"we can make this value with an infinite number of coins\".</p>\n\n<p>So using <code>Maybe</code>, the first thing we'll want to define is a version of <code>min</code> that works on <code>Maybe Int</code>:</p>\n\n<pre><code>myMin :: Ord a =&gt; Maybe a -&gt; Maybe a -&gt; Maybe a\nmyMin (Just a) (Just b) = Just $ min a b\nmyMin Nothing x = x\nmyMin x Nothing = x\n</code></pre>\n\n<p>Then, using that we can attack this problem using the algorithm given in the linked page:</p>\n\n<pre><code>minCoinCoint :: Int -&gt; [Int] -&gt; Maybe Int\nminCoinCoint target denoms = res (target, length denoms)\n  where\n    denomArray = listArray (0, length denoms) (0:denoms)\n    myArrayBounds = ((0, 0), (target, length denoms))\n    myArray = array myArrayBounds [(i, res i) | i &lt;- range myArrayBounds]\n    res (_, 0) = Nothing\n    res (0, _) = Just 0\n    res (t, d) = let dval = denomArray ! d\n                     prev1 = myArray ! (t, d-1)\n                     prev2 = if t &gt;= dval\n                             then (+1) &lt;$&gt; (myArray ! (t-dval, d))\n                             else Nothing\n                 in myMin prev1 prev2\n</code></pre>\n\n<p>And that's it. (well, assuming you remember the <code>import Data.Array</code> line at the top of the file)</p>\n\n<p>Note that <code>myArray</code> is built by referring to <code>res</code>, and <code>res</code> makes all of its recursive calls by finding values in <code>myArray</code>.</p>\n\n<p>This syntax might be a bit confusing:</p>\n\n<pre><code>(+1) &lt;$&gt; (myArray ! (t-dval, d))\n</code></pre>\n\n<p>That's done because remember that each element of <code>myArray</code> isn't an <code>Int</code> but rather a <code>Maybe Int</code>. That syntax says \"apply the function <code>(+1)</code> to the inside of the value <code>(myArray ! (t-dval, d))</code>\", so that a <code>Just 4</code> will become a <code>Just 5</code>, but a <code>Nothing</code> will remain a <code>Nothing</code>.</p>\n"}], "owner": {"reputation": 1278, "user_id": 1374078, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/a96abe3865e9d233197150b1ae83743a?s=128&d=identicon&r=PG", "display_name": "phoxd", "link": "https://stackoverflow.com/users/1374078/phoxd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 76, "favorite_count": 0, "accepted_answer_id": 49556862, "answer_count": 1, "score": 1, "last_activity_date": 1522328731, "creation_date": 1521965357, "last_edit_date": 1521966642, "question_id": 49473764, "link": "https://stackoverflow.com/questions/49473764/making-change-with-minimum-denominations-with-memoization", "title": "Making change with minimum denominations with memoization", "body": "<p>I was wondering how to make efficient algorithm with memoization. Particularly, is there a way to make O(1) access time for index value in Haskell? </p>\n\n<p>Here is <a href=\"https://github.com/phoxd/Making-change-with-minimum-denominations\" rel=\"nofollow noreferrer\">the problem described in detail</a>. And here is my attempt for recursive algorithm:</p>\n\n<pre><code>denom :: (Int, Int) -&gt; [Int] -&gt; Int\ndenom (_, 0) _ = 0\ndenom (0, _) _ = (maxBound :: Int) - 1000 -- subtracting 1000 otherwise overflows\ndenom (i, j) di\n  | v &gt; j = denom (i-1, j) di\n  | otherwise = min (denom (i-1, j) di) (1 + denom (i, j-v) di)\n  where v = di !! (i - 1)\n</code></pre>\n\n<p>Also, how would I declare <code>INFINITY</code> in Haskell so that <code>min</code> works in all cases? </p>\n"}, {"tags": ["haskell", "filter", "custom-data-type"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 3, "creation_date": 1521964834, "post_id": 49473552, "comment_id": 85949743, "body": "You mean like <code>filter ((&gt;= someThreshold) . pointY)</code>?"}, {"owner": {"reputation": 49, "user_id": 3930101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/af24a4df904c9bf2d79821ca0f755ecc?s=128&d=identicon&r=PG&f=1", "display_name": "Eric", "link": "https://stackoverflow.com/users/3930101/eric"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1521977429, "post_id": 49473552, "comment_id": 85953085, "body": "That got me closer. I added the polygon structure. That changed the error to: Couldn&#39;t match type <code>Point -&gt; c0&#39; with </code>Point&#39;       Expected type: [Point]         Actual type: [Point -&gt; c0]"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 1, "creation_date": 1521979429, "post_id": 49473552, "comment_id": 85953663, "body": "Can you paste the current code together with the known types of the identifiers you use for context?"}, {"owner": {"reputation": 49, "user_id": 3930101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/af24a4df904c9bf2d79821ca0f755ecc?s=128&d=identicon&r=PG&f=1", "display_name": "Eric", "link": "https://stackoverflow.com/users/3930101/eric"}, "edited": false, "score": 0, "creation_date": 1521980575, "post_id": 49473552, "comment_id": 85954021, "body": "I think that edit should include the only thing missing. There is a different line returning the perimeters."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1521989173, "post_id": 49473552, "comment_id": 85956713, "body": "The definition of <code>periFilter</code> in your question is incomplete; please edit it to fix that."}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 1, "creation_date": 1521994783, "post_id": 49473552, "comment_id": 85958552, "body": "It probably is an easy syntax problem; it&#39;s just hard to confirm without a <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">minimal reproducible example</a>. But you didn&#39;t do what I said: <code>let threshold = fromIntegral (yvalue x); ... filter ((&gt;= threshold) . pointY)</code>"}, {"owner": {"reputation": 49, "user_id": 3930101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/af24a4df904c9bf2d79821ca0f755ecc?s=128&d=identicon&r=PG&f=1", "display_name": "Eric", "link": "https://stackoverflow.com/users/3930101/eric"}, "edited": false, "score": 0, "creation_date": 1522074110, "post_id": 49473552, "comment_id": 85991036, "body": "Note: file was modified to provide better test case, perifilter was not required to recreate problem."}, {"owner": {"reputation": 49, "user_id": 3930101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/af24a4df904c9bf2d79821ca0f755ecc?s=128&d=identicon&r=PG&f=1", "display_name": "Eric", "link": "https://stackoverflow.com/users/3930101/eric"}, "edited": false, "score": 0, "creation_date": 1522074150, "post_id": 49473552, "comment_id": 85991066, "body": "melpomene, Li-yao Xia, and duplode thank you for your help."}], "answers": [{"comments": [{"owner": {"reputation": 49, "user_id": 3930101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/af24a4df904c9bf2d79821ca0f755ecc?s=128&d=identicon&r=PG&f=1", "display_name": "Eric", "link": "https://stackoverflow.com/users/3930101/eric"}, "edited": false, "score": 0, "creation_date": 1522044258, "post_id": 49484897, "comment_id": 85972494, "body": "If no other solutions are added in 2 days, I will mark as answered."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1522077093, "post_id": 49484897, "comment_id": 85993404, "body": "That <code>Ord</code> instance is very much not well-behaved, in particular <code>Point 1 0 &lt; Point 0 0</code> and <code>Point 1 0 &gt; Point 0 0</code> would both be <code>False</code>, though these two points are clearly not equal. 2D points just do not form a proper <code>Ord</code> instance. \u2014 Why don&#39;t you use <code>filter ((&lt;fromIntegral yValue) . pointY) $ points a</code>?"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 2, "creation_date": 1522077124, "post_id": 49484897, "comment_id": 85993433, "body": "why not simply <code>filter (\\ p -&gt; pointY p &gt; fromIntegral yvalue) $ points a</code>, without the one-off (and bogus) <code>Ord</code> instance."}, {"owner": {"reputation": 49, "user_id": 3930101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/af24a4df904c9bf2d79821ca0f755ecc?s=128&d=identicon&r=PG&f=1", "display_name": "Eric", "link": "https://stackoverflow.com/users/3930101/eric"}, "edited": false, "score": 0, "creation_date": 1522122060, "post_id": 49484897, "comment_id": 86012096, "body": "leftaroundabout that sounds like what I started with, almost exactly and it wouldn&#39;t compare the point to a double. I couldn&#39;t get it to work."}, {"owner": {"reputation": 49, "user_id": 3930101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/af24a4df904c9bf2d79821ca0f755ecc?s=128&d=identicon&r=PG&f=1", "display_name": "Eric", "link": "https://stackoverflow.com/users/3930101/eric"}, "edited": false, "score": 0, "creation_date": 1522123501, "post_id": 49484897, "comment_id": 86012482, "body": "Will ness your solution works naturally and is definitely better. I was doing what I was doing, because I&#39;ve been doing haskell for about 2 weeks. So if you write it up I would select it answered, though it doesn&#39;t look like you need the points. I couldn&#39;t find anything that simply showed how to access a numerical value for comparison."}, {"owner": {"reputation": 49, "user_id": 3930101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/af24a4df904c9bf2d79821ca0f755ecc?s=128&d=identicon&r=PG&f=1", "display_name": "Eric", "link": "https://stackoverflow.com/users/3930101/eric"}, "edited": false, "score": 0, "creation_date": 1522123778, "post_id": 49484897, "comment_id": 86012565, "body": "That lambda by the way was the first one I&#39;ve ever written."}, {"owner": {"reputation": 49, "user_id": 3930101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/af24a4df904c9bf2d79821ca0f755ecc?s=128&d=identicon&r=PG&f=1", "display_name": "Eric", "link": "https://stackoverflow.com/users/3930101/eric"}, "edited": false, "score": 0, "creation_date": 1522124179, "post_id": 49484897, "comment_id": 86012679, "body": "It would be nice to have explained where if appropriate to use an instance of ord would be. If you have a link you trust to explain it well for a newb!"}], "tags": [], "owner": {"reputation": 49, "user_id": 3930101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/af24a4df904c9bf2d79821ca0f755ecc?s=128&d=identicon&r=PG&f=1", "display_name": "Eric", "link": "https://stackoverflow.com/users/3930101/eric"}, "is_accepted": false, "score": -1, "last_activity_date": 1522044206, "creation_date": 1522044206, "answer_id": 49484897, "question_id": 49473552, "link": "https://stackoverflow.com/questions/49473552/custom-data-type-filter-any-numerical-type/49484897#49484897", "title": "Custom Data Type Filter - Any Numerical Type", "body": "<p>Solution is:  </p>\n\n<p>If you wish to filter by a specific numeric data type field then you just have to implement an instance of compare. </p>\n\n<p>In my case:</p>\n\n<pre><code>instance Ord Point where\n    compare x y = compare (pointY x) (pointY y)\n</code></pre>\n\n<p>This set the specified field I wished to compare by to be pointY which was already an instance of Double. </p>\n\n<p>I was then able to use the following filter:</p>\n\n<pre><code>filter(\\x -&gt; x &gt; Point {pointX = 0.0, pointY = (fromIntegral(yvalue))} $ points a\n</code></pre>\n\n<p>Note: that the pointX in this filter is strictly irrelevant. </p>\n\n<p>There may be another solution which arises as there are some brilliant Haskell Programmers here, but this one works.</p>\n"}], "owner": {"reputation": 49, "user_id": 3930101, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/af24a4df904c9bf2d79821ca0f755ecc?s=128&d=identicon&r=PG&f=1", "display_name": "Eric", "link": "https://stackoverflow.com/users/3930101/eric"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 110, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1522076783, "creation_date": 1521963562, "last_edit_date": 1522076783, "question_id": 49473552, "link": "https://stackoverflow.com/questions/49473552/custom-data-type-filter-any-numerical-type", "title": "Custom Data Type Filter - Any Numerical Type", "body": "<pre><code>import System.IO()\n\ndata Point = Point\n    { pointX :: {-# UNPACK #-} !Double  -- ^ X coordinate\n    , pointY :: {-# UNPACK #-} !Double  -- ^ Y coordinate\n    } deriving (Show, Eq)\n\ndata Polygon = Polygon\n    { points :: [Point]\n    , yvalue :: Int\n    } deriving (Show)\n</code></pre>\n\n<ol>\n<li>create a file <code>test.hs</code></li>\n<li>copy the two custom data type definitions above into it  </li>\n<li>open ghci and type <code>:l test.hs</code></li>\n<li><p>enter this test case:  </p>\n\n<pre><code>*test&gt; let a = Polygon {points = [Point {pointX = 0.0, pointY = 0.0},Point {pointX = 4.0, pointY = 0.0},Point {pointX = 4.0, pointY = 2.0},Point {pointX = 4.0, pointY = 4.0},Point {pointX = 0.0, pointY = 4.0},Point {pointX = 0.0, pointY = 2.0},Point {pointX = 0.0, pointY = 0.0}], yvalue = 2}\n</code></pre></li>\n<li><p>Then:</p>\n\n<pre><code>*test&gt; let x = filter (&lt;=(fromIntegral (yvalue a)).pointY) $ points a  \n</code></pre></li>\n</ol>\n\n<p>You get the following error:</p>\n\n<pre><code>* couldn't match type `Point` with `Point -&gt; c'\n  Expected type: [Point -&gt; c]\n    Actual type: [Point]\n* In the second argument of `($)', namely `points a'\n  In the expression:\n    filter (&lt;=(fromIntegral (yvalue a)) . pointY) $ points a\n  In an equation for `x':\n    x = filter (&lt;=(fromIntegral (yvalue a)).pointY) $ points a  \n* Relevant bindings include\n    x :: [Point -&gt; c] (bound at &lt;interactive&gt;:92:5)\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "edited": false, "score": 0, "creation_date": 1521960270, "post_id": 49473201, "comment_id": 85948845, "body": "This is totally out of syntax..."}, {"owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "edited": false, "score": 1, "creation_date": 1521960329, "post_id": 49473201, "comment_id": 85948857, "body": "<code>mx</code>, <code>Just x</code> aren&#39;t functions."}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 1, "creation_date": 1521961133, "post_id": 49473201, "comment_id": 85948975, "body": "And <code>Just Nothing</code> has not type <code>Maybe Integer</code>."}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521961669, "post_id": 49473201, "comment_id": 85949090, "body": "<code>x&#47;y</code> is not an integer in general. Or do you want the quotient of the Euclidean division ?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1521990253, "post_id": 49473201, "comment_id": 85957022, "body": "<code>x &#47; y</code> doesn&#39;t even type check, even if <code>x</code> and <code>y</code> are both integers. You want <code>div</code> instead."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1521990309, "post_id": 49473201, "comment_id": 85957041, "body": "This is probably not what your lab instructor expects or wants, but you might want to look up the <code>liftA2</code> function found in <code>Control.Applicative</code>."}], "answers": [{"comments": [{"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521961446, "post_id": 49473338, "comment_id": 85949038, "body": "Oops sorry, <code>x&#47;y</code>  is not <code>Integer</code>... that will not work. I will delete my answer."}, {"owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "edited": false, "score": 0, "creation_date": 1521961503, "post_id": 49473338, "comment_id": 85949049, "body": "Maybe the asker intended <code>quot</code>...?"}, {"owner": {"reputation": 39, "user_id": 9465412, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/414669b36dbd7b08ed4c7e43a9d02cc1?s=128&d=identicon&r=PG&f=1", "display_name": "Tony", "link": "https://stackoverflow.com/users/9465412/tony"}, "edited": false, "score": 0, "creation_date": 1521962418, "post_id": 49473338, "comment_id": 85949221, "body": "Thanks, the type declaration is set by the Lab instruction and we have not learnt (x,y) yet."}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "reply_to_user": {"reputation": 39, "user_id": 9465412, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/414669b36dbd7b08ed4c7e43a9d02cc1?s=128&d=identicon&r=PG&f=1", "display_name": "Tony", "link": "https://stackoverflow.com/users/9465412/tony"}, "edited": false, "score": 0, "creation_date": 1521964890, "post_id": 49473338, "comment_id": 85949753, "body": "@Tony And what is the output desired by the lab ? The quotient of the Euclidean division ?"}, {"owner": {"reputation": 39, "user_id": 9465412, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/414669b36dbd7b08ed4c7e43a9d02cc1?s=128&d=identicon&r=PG&f=1", "display_name": "Tony", "link": "https://stackoverflow.com/users/9465412/tony"}, "edited": false, "score": 0, "creation_date": 1522017135, "post_id": 49473338, "comment_id": 85966128, "body": "Thanks again, this will help. I just need the general function but I can learn the format from the quotient function as well."}, {"owner": {"reputation": 39, "user_id": 9465412, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/414669b36dbd7b08ed4c7e43a9d02cc1?s=128&d=identicon&r=PG&f=1", "display_name": "Tony", "link": "https://stackoverflow.com/users/9465412/tony"}, "edited": false, "score": 0, "creation_date": 1522017497, "post_id": 49473338, "comment_id": 85966233, "body": "@St&#233;phane Laurent the lab asked only for general function of division,thanks for help. actually the function can also be written by guards, but I don&#39;t know how."}], "tags": [], "owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "is_accepted": false, "score": 1, "last_activity_date": 1521965783, "last_edit_date": 1521965783, "creation_date": 1521961400, "answer_id": 49473338, "question_id": 49473201, "link": "https://stackoverflow.com/questions/49473201/an-error-in-haskell-pattern-matching/49473338#49473338", "title": "An error in Haskell pattern matching", "body": "<p>Your program should rather looks like:</p>\n\n<pre><code>maybeDiv :: Maybe Integer -&gt; Maybe Integer -&gt; Maybe Integer\nmaybeDiv mx my = case (mx, my) of\n    (Just x, Just y)\n      | y == 0 -&gt; Nothing\n      | otherwise -&gt; Just (x / y)\n    _ -&gt; Nothing\n</code></pre>\n\n<p>My PC is currently busy with doing a huge animation so I cannot check. I'll check later unless someone corrects me before.</p>\n\n<p>But that will not work because <code>x/y</code> is not an Integer. You should rather want a <code>Double</code>. So:</p>\n\n<pre><code>maybeDiv :: Maybe Integer -&gt; Maybe Integer -&gt; Maybe Double\nmaybeDiv mx my = case (mx, my) of\n    (Just x, Just y)\n      | y == 0 -&gt; Nothing\n      | otherwise -&gt; Just (fromInteger x / fromInteger y)\n    _ -&gt; Nothing\n</code></pre>\n\n<h2>Edit</h2>\n\n<p>If you are not allowed to use the 2-tuple <code>(mx,my)</code>, as you said in a comment, you can do:</p>\n\n<pre><code>maybeDiv :: Maybe Integer -&gt; Maybe Integer -&gt; Maybe Double\nmaybeDiv mx my =\n  case my of\n    Nothing -&gt; Nothing\n    Just 0  -&gt; Nothing\n    Just y  -&gt; case mx of\n      Nothing -&gt; Nothing\n      Just x  -&gt; Just (fromInteger x / fromInteger y)\n</code></pre>\n\n<p>If you want the quotient of the Euclidean division as the output, do:</p>\n\n<pre><code>maybeDiv :: Maybe Integer -&gt; Maybe Integer -&gt; Maybe Integer\nmaybeDiv mx my =\n  case my of\n    Nothing -&gt; Nothing\n    Just 0  -&gt; Nothing\n    Just y  -&gt; case mx of\n      Nothing -&gt; Nothing\n      Just x  -&gt; Just (x `quot` y)\n</code></pre>\n\n<p>You could also generalize the function in order that it accepts <code>Integer</code> and <code>Int</code> types, like this: </p>\n\n<pre><code>maybeDiv :: Integral a =&gt; Maybe a -&gt; Maybe a -&gt; Maybe a\nmaybeDiv mx my =\n  case my of\n    Nothing -&gt; Nothing\n    Just 0  -&gt; Nothing\n    Just y  -&gt; case mx of\n      Nothing -&gt; Nothing\n      Just x  -&gt; Just (x `quot` y)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 291, "user_id": 9529580, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7e826697f12ac7b6de2a502cd1e7e0b5?s=128&d=identicon&r=PG", "display_name": "Vora", "link": "https://stackoverflow.com/users/9529580/vora"}, "is_accepted": false, "score": 0, "last_activity_date": 1522096892, "creation_date": 1522096892, "answer_id": 49500260, "question_id": 49473201, "link": "https://stackoverflow.com/questions/49473201/an-error-in-haskell-pattern-matching/49500260#49500260", "title": "An error in Haskell pattern matching", "body": "<p>Since this is for a lab, you might not be allowed to use Applicative - however, for the sake of clarity, here's what your function could/should actually be:</p>\n\n<pre><code>maybeDiv :: Maybe Int -&gt; Maybe Int -&gt; Maybe Int\nmaybeDiv ma mb = quot &lt;$&gt; ma &lt;*&gt; mb\n</code></pre>\n\n<p>This will end up equivalent to the other answers, but might be a lot cleaner to read.</p>\n"}], "owner": {"reputation": 39, "user_id": 9465412, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/414669b36dbd7b08ed4c7e43a9d02cc1?s=128&d=identicon&r=PG&f=1", "display_name": "Tony", "link": "https://stackoverflow.com/users/9465412/tony"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 142, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1522096892, "creation_date": 1521960074, "last_edit_date": 1521961979, "question_id": 49473201, "link": "https://stackoverflow.com/questions/49473201/an-error-in-haskell-pattern-matching", "title": "An error in Haskell pattern matching", "body": "<p>This is one of my lab question, I have to write a <code>maybeDiv</code> function, and here is my work. There is an error in <code>Just x y</code>, May I ask what causes this error? Thanks.</p>\n\n<pre><code>maybeDiv :: Maybe Integer -&gt; Maybe Integer -&gt; Maybe Integer\nmaybeDiv mx my = case mx my of\n    Just x y\n      | y == 0 -&gt; Just Nothing\n      | otherwise -&gt; Just (x / y)\n    Nothing -&gt; Nothing\n</code></pre>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "edited": false, "score": 0, "creation_date": 1521962350, "post_id": 49473420, "comment_id": 85949210, "body": "Or more simply, <code>equals y x = convert y == x</code> if <code>Celcius</code> derives <code>Eq</code>."}], "tags": [], "owner": {"reputation": 28488, "user_id": 402884, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/35583fe46c2cde92467710cc7ceff266?s=128&d=identicon&r=PG", "display_name": "Chris Martin", "link": "https://stackoverflow.com/users/402884/chris-martin"}, "is_accepted": true, "score": 1, "last_activity_date": 1521962351, "last_edit_date": 1521962351, "creation_date": 1521962193, "answer_id": 49473420, "question_id": 49472880, "link": "https://stackoverflow.com/questions/49472880/how-to-input-two-element/49473420#49473420", "title": "How to input two element", "body": "<p>First to make the code compile, you need two things here:</p>\n\n<pre><code>equals :: Fahrenheit -&gt; Celsius -&gt; Bool\nequals (F y) (C x)\n | (y-32)*5/9 == x = True\n | (y-32)*5/9 /= x = False\n | otherwise = False\n</code></pre>\n\n<ol>\n<li>Don't put the constructor names in quotes (quotes are only for strings)</li>\n<li>The argument types need to be <code>Fahrenheit</code> and <code>Celsius</code>, not <code>Double</code> and <code>Double</code>.</li>\n</ol>\n\n<p>To fix the failing doctest on <code>convert</code>, you also need to change its types so they aren't <code>Double</code>.</p>\n\n<pre><code>convert :: Fahrenheit -&gt; Celsius\nconvert (F f) = C ((f - 32) * 5 / 9)\n</code></pre>\n\n<p>The <code>equals</code> doctest is failing. First let's simplify your code.</p>\n\n<pre><code>equals :: Fahrenheit -&gt; Celsius -&gt; Bool\nequals (F y) (C x) = (y - 32) * 5 / 9 == x\n</code></pre>\n\n<p>I'm not sure what to do about this doctest, because the test itself looks wrong. 34 degrees F is not equal to 1 degree C; it should be 10/9 C. But you're not going to get working equality tests here because you're using <code>Double</code>, and so you're going to get floating point rounding error. Maybe you want to change your representations from <code>Double</code> to <a href=\"https://hackage.haskell.org/package/base-4.11.0.0/docs/Prelude.html#t:Rational\" rel=\"nofollow noreferrer\"><code>Rational</code></a>?</p>\n"}], "owner": {"reputation": 9, "user_id": 9546967, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/826c1d83ac04e533a376551172abf6c7?s=128&d=identicon&r=PG&f=1", "display_name": "studyer", "link": "https://stackoverflow.com/users/9546967/studyer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 168, "favorite_count": 0, "accepted_answer_id": 49473420, "answer_count": 1, "score": -3, "last_activity_date": 1521962351, "creation_date": 1521956389, "last_edit_date": 1521958025, "question_id": 49472880, "link": "https://stackoverflow.com/questions/49472880/how-to-input-two-element", "title": "How to input two element", "body": "<p>This is my code on Haskell</p>\n\n<pre><code>module Q5Degrees where\n\n-- The relationship between temperature c in degrees Celsius and temperature f in degrees Q5Degrees\n-- is defined by the function\n--   c = (f - 32) * 5 / 9\n-- Data types to represent temperature values in Q5Degrees and Celsius\ndata Fahrenheit =\n  F Double\n  deriving (Show)\n\ndata Celsius =\n  C Double\n  deriving (Show)\n\n-- | convert\n-- Takes a value representing temperature in degrees Fahrenheit and converts   it to degrees Celsius\n--\n-- Examples:\n--\n-- &gt;&gt;&gt; convert (F 50)\n-- C 10.0\n-- &gt;&gt;&gt; convert (F 14)\n-- C (-10.0)\nconvert :: Double -&gt; Double\nconvert f = (f - 32) * 5 / 9\n\n-- | equals\n-- Takes values representing temperature in degrees Celsius and degrees Fahrenheit and returns True\n-- if they are equal (to within 0.5 degrees Fahrenheit), and False otherwise\n--\n-- Examples:\n--\n-- &gt;&gt;&gt; equals (F 34) (C 1)\n-- True\n-- &gt;&gt;&gt; equals (F 33) (C 0)\n-- False\n-- &gt;&gt;&gt; equals (F 32) (C 0)\n-- True\nequals :: Double -&gt; Double -&gt; Bool\nequals (\"F\" y) (\"C\" x)\n | (y-32)*5/9 == x = True\n | (y-32)*5/9 /= x = False\n | otherwise = False\n</code></pre>\n\n<p>The doctest requires to input two value (F 34) (C 1). Can anyone teach me how to fix this line  in order to pass the doctest. I have tried to put \n    equals x y \nThere is an error if I input (F 34) (C 1)</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 28488, "user_id": 402884, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/35583fe46c2cde92467710cc7ceff266?s=128&d=identicon&r=PG", "display_name": "Chris Martin", "link": "https://stackoverflow.com/users/402884/chris-martin"}, "edited": false, "score": 0, "creation_date": 1522019116, "post_id": 49472878, "comment_id": 85966596, "body": "Out of curiosity, can you give an example of a library with a type that&#39;s missing a <code>Show</code> instance you&#39;d like to have?"}, {"owner": {"reputation": 3502, "user_id": 2558108, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/DUiG3.jpg?s=128&g=1", "display_name": "Qwertie", "link": "https://stackoverflow.com/users/2558108/qwertie"}, "reply_to_user": {"reputation": 28488, "user_id": 402884, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/35583fe46c2cde92467710cc7ceff266?s=128&d=identicon&r=PG", "display_name": "Chris Martin", "link": "https://stackoverflow.com/users/402884/chris-martin"}, "edited": false, "score": 0, "creation_date": 1522060496, "post_id": 49472878, "comment_id": 85981403, "body": "The types created by Yesod models. I think these are defined in template Haskell so I can&#39;t get to them."}, {"owner": {"reputation": 28488, "user_id": 402884, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/35583fe46c2cde92467710cc7ceff266?s=128&d=identicon&r=PG", "display_name": "Chris Martin", "link": "https://stackoverflow.com/users/402884/chris-martin"}, "edited": false, "score": 0, "creation_date": 1522080311, "post_id": 49472878, "comment_id": 85995603, "body": "Oh? It looks like all the examples here have a <code>deriving Show</code> clause <a href=\"https://www.yesodweb.com/book/persistent\" rel=\"nofollow noreferrer\">yesodweb.com/book/persistent</a>"}], "answers": [{"comments": [{"owner": {"reputation": 3502, "user_id": 2558108, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/DUiG3.jpg?s=128&g=1", "display_name": "Qwertie", "link": "https://stackoverflow.com/users/2558108/qwertie"}, "edited": false, "score": 0, "creation_date": 1521960281, "post_id": 49473076, "comment_id": 85948847, "body": "Is there any way to not set the text it will show and instead show all the fields inside Bar like deriving show would have?"}, {"owner": {"reputation": 11096, "user_id": 2749717, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46af1ef54856d737d52b7667afd240ee?s=128&d=identicon&r=PG&f=1", "display_name": "bipll", "link": "https://stackoverflow.com/users/2749717/bipll"}, "reply_to_user": {"reputation": 3502, "user_id": 2558108, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/DUiG3.jpg?s=128&g=1", "display_name": "Qwertie", "link": "https://stackoverflow.com/users/2558108/qwertie"}, "edited": false, "score": 0, "creation_date": 1521961821, "post_id": 49473076, "comment_id": 85949119, "body": "@Qwertie yes, you only need to not set the text it will show and instead show all the fields inside Bar, like <code>show (Bar x y z) = &quot;Bar &quot; ++ show x ++ &#39; &#39;:show y ++ &#39; &#39;:show z</code>"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1521986125, "post_id": 49473076, "comment_id": 85955754, "body": "Formatting nitpicking: <code>&lt;!-- language: lang-haskell --&gt;</code> <a href=\"https://meta.stackoverflow.com/q/267272/2751851\">doesn&#39;t actually add Haskell highlighting</a>."}], "tags": [], "owner": {"reputation": 9980, "user_id": 1944004, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/60f3cc97f94fa3690ba406f8c1a7fc4f?s=128&d=identicon&r=PG", "display_name": "Henri Menke", "link": "https://stackoverflow.com/users/1944004/henri-menke"}, "is_accepted": false, "score": 1, "last_activity_date": 1521983443, "last_edit_date": 1521983443, "creation_date": 1521958512, "answer_id": 49473076, "question_id": 49472878, "link": "https://stackoverflow.com/questions/49472878/show-record-without-deriving-show/49473076#49473076", "title": "`show` record without deriving Show", "body": "<p>You have to make your datatype an instance of <code>Show</code> if you want to print it in any way.  If you don't want to derive <code>Show</code> you can always implement it yourself.</p>\n\n<pre><code>data Foo = Bar\n\ninstance Show Foo where\n  show Bar = \"This is Bar\"\n\nmain = print f where f = Bar\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 3502, "user_id": 2558108, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/DUiG3.jpg?s=128&g=1", "display_name": "Qwertie", "link": "https://stackoverflow.com/users/2558108/qwertie"}, "edited": false, "score": 0, "creation_date": 1521961195, "post_id": 49473163, "comment_id": 85948987, "body": "Force seems helpful but most of the time I need to do this within my tests run from <code>stack test</code> and not ghci."}], "tags": [], "owner": {"reputation": 28488, "user_id": 402884, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/35583fe46c2cde92467710cc7ceff266?s=128&d=identicon&r=PG", "display_name": "Chris Martin", "link": "https://stackoverflow.com/users/402884/chris-martin"}, "is_accepted": true, "score": 9, "last_activity_date": 1521961273, "last_edit_date": 1521961273, "creation_date": 1521959546, "answer_id": 49473163, "question_id": 49472878, "link": "https://stackoverflow.com/questions/49472878/show-record-without-deriving-show/49473163#49473163", "title": "`show` record without deriving Show", "body": "<h2>Standalone deriving</h2>\n\n<p>A <code>deriving</code> clause on the type definition isn't the only way to derive. You can also use the <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html?highlight=standalonederiving#ghc-flag--XStandaloneDeriving\" rel=\"noreferrer\"><code>StandaloneDeriving</code></a> GHC language extension.</p>\n\n<pre><code>\u03bb&gt; :set -XStandaloneDeriving\n\n\u03bb&gt; data Person = Human { name :: String, age :: Int } | Dog { goodPupper :: Bool }\n\n\u03bb&gt; deriving instance Show Person\n\n\u03bb&gt; Human \"Chris\" 31\nHuman {name = \"Chris\", age = 31}\n</code></pre>\n\n<h2>Generics</h2>\n\n<p>If the type has a <code>Generic</code> instance, you can stringify it with the <a href=\"https://hackage.haskell.org/package/generic-deriving-1.12.1/docs/Generics-Deriving-Show.html#v:gshowsPrecdefault\" rel=\"noreferrer\"><code>gshowsPrecdefault</code></a> function from the <a href=\"https://hackage.haskell.org/package/generic-deriving\" rel=\"noreferrer\">generic-deriving</a> package.</p>\n\n<pre><code>\u03bb&gt; import GHC.Generics\n\u03bb&gt; import Generics.Deriving.Show\n\n\u03bb&gt; data Person = Human { name :: String, age :: Int } | Dog { goodPupper :: Bool } deriving Generic\n\n\u03bb&gt; putStrLn $ gshowsPrecdefault 0 (Dog True) \"\"\nDog {goodPupper = True}\n</code></pre>\n\n<h2>GHCi :force</h2>\n\n<p>You can use the <code>:force</code> command in GHCi to inspect a value.</p>\n\n<pre><code>\u03bb&gt; data Person = Human { name :: String, age :: Int } | Dog { goodPupper :: Bool }\n\n\u03bb&gt; x = Human \"Chris\" 31\n\n\u03bb&gt; x\n&lt;interactive&gt;:17:1: error:\n    \u2022 No instance for (Show Person) arising from a use of \u2018print\u2019\n    \u2022 In a stmt of an interactive GHCi command: print it\n\n\u03bb&gt; :force x\nx = &lt;Human&gt; \"Chris\" 31\n</code></pre>\n\n<p>See <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/ghci.html#breakpoints-and-inspecting-variables\" rel=\"noreferrer\"><em>Breakpoints and inspecting variables</em></a> in the GHC manual.</p>\n"}, {"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 1, "last_activity_date": 1521972733, "creation_date": 1521972733, "answer_id": 49474679, "question_id": 49472878, "link": "https://stackoverflow.com/questions/49472878/show-record-without-deriving-show/49474679#49474679", "title": "`show` record without deriving Show", "body": "<p>You can absolutely print things without <code>Show</code> instances.</p>\n\n<pre><code>data MyType a = MyType Int a\nshowMyType :: (a -&gt; String) -&gt; MyType a -&gt; String\nshowMyType f (MyType n a) =\n  \"MyType \" ++ show n ++ \" (\" ++ f a ++ \")\" \n</code></pre>\n"}], "owner": {"reputation": 3502, "user_id": 2558108, "user_type": "registered", "accept_rate": 91, "profile_image": "https://i.stack.imgur.com/DUiG3.jpg?s=128&g=1", "display_name": "Qwertie", "link": "https://stackoverflow.com/users/2558108/qwertie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 622, "favorite_count": 0, "accepted_answer_id": 49473163, "answer_count": 3, "score": 4, "last_activity_date": 1521986355, "creation_date": 1521956358, "last_edit_date": 1521986355, "question_id": 49472878, "link": "https://stackoverflow.com/questions/49472878/show-record-without-deriving-show", "title": "`show` record without deriving Show", "body": "<p>Quite often I need to print something while debugging and unless the datatype I need to see derives <code>Show</code> I can't print it. For some datatypes I can't add <code>deriving (Show)</code> to the definition because it may be in a library or somewhere else I can't get to.</p>\n\n<p>Is there anyway I can print these datatypes for debugging?</p>\n"}, {"tags": ["haskell", "libgit2"], "comments": [{"owner": {"reputation": 9980, "user_id": 1944004, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/60f3cc97f94fa3690ba406f8c1a7fc4f?s=128&d=identicon&r=PG", "display_name": "Henri Menke", "link": "https://stackoverflow.com/users/1944004/henri-menke"}, "edited": false, "score": 0, "creation_date": 1521945854, "post_id": 49471982, "comment_id": 85946681, "body": "Alternative:  Try <a href=\"https://hackage.haskell.org/package/hlibgit2\" rel=\"nofollow noreferrer\">hlibgit2</a> or <a href=\"https://hackage.haskell.org/package/gitlib\" rel=\"nofollow noreferrer\">gitlib</a>"}, {"owner": {"reputation": 507, "user_id": 467526, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/336abdba9ba141d3fef8e439b820a624?s=128&d=identicon&r=PG", "display_name": "user467526", "link": "https://stackoverflow.com/users/467526/user467526"}, "reply_to_user": {"reputation": 9980, "user_id": 1944004, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/60f3cc97f94fa3690ba406f8c1a7fc4f?s=128&d=identicon&r=PG", "display_name": "Henri Menke", "link": "https://stackoverflow.com/users/1944004/henri-menke"}, "edited": false, "score": 0, "creation_date": 1521946863, "post_id": 49471982, "comment_id": 85946849, "body": "The latest version of hlibgit2 provides bindings to libgit2 version 0.18.0 which, as I said in my post, is several years out of date and lacks the functions that I need."}, {"owner": {"reputation": 9980, "user_id": 1944004, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/60f3cc97f94fa3690ba406f8c1a7fc4f?s=128&d=identicon&r=PG", "display_name": "Henri Menke", "link": "https://stackoverflow.com/users/1944004/henri-menke"}, "edited": false, "score": 0, "creation_date": 1521953893, "post_id": 49471982, "comment_id": 85947863, "body": "Yes, but the <a href=\"https://hackage.haskell.org/package/gitlib\" rel=\"nofollow noreferrer\">gitlib</a> says \u201cSeveral different backends are available.\u201d  Maybe there is one which satifies your needs."}, {"owner": {"reputation": 7268, "user_id": 2303202, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/iT9aU.png?s=128&g=1", "display_name": "max630", "link": "https://stackoverflow.com/users/2303202/max630"}, "edited": false, "score": 0, "creation_date": 1521955199, "post_id": 49471982, "comment_id": 85948041, "body": "you should be able to get the actual linking command with adding &quot;-v&quot; to ghc command line. That would be very helpful to answer your question."}, {"owner": {"reputation": 7268, "user_id": 2303202, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/iT9aU.png?s=128&g=1", "display_name": "max630", "link": "https://stackoverflow.com/users/2303202/max630"}, "edited": false, "score": 0, "creation_date": 1521956484, "post_id": 49471982, "comment_id": 85948220, "body": "Could you have some indirect dependency on the libgit2? So that you depend on another C library, which depends on it? This could explain mismatched linking."}, {"owner": {"reputation": 7268, "user_id": 2303202, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/iT9aU.png?s=128&g=1", "display_name": "max630", "link": "https://stackoverflow.com/users/2303202/max630"}, "edited": false, "score": 0, "creation_date": 1521956623, "post_id": 49471982, "comment_id": 85948238, "body": "Or, maybe, you use a haskell binding in same program."}], "owner": {"reputation": 507, "user_id": 467526, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/336abdba9ba141d3fef8e439b820a624?s=128&d=identicon&r=PG", "display_name": "user467526", "link": "https://stackoverflow.com/users/467526/user467526"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 82, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1521945250, "creation_date": 1521945250, "question_id": 49471982, "link": "https://stackoverflow.com/questions/49471982/why-are-some-foreign-functions-statically-linked-while-others-are-dynamically-li", "title": "Why are some foreign functions statically linked while others are dynamically linked?", "body": "<p>I'm working on a program that needs to manipulate git repositories. I've decided to use libgit2. Unfortunately, the haskell bindings for it are several years out of date and lack several functions that I require. Because of this I've decided to write the portions that use libgit2 in C and call them through the FFI. For demonstration purposes one of them is called git_update_repo.</p>\n\n<p>git_update_repo works perfectly when used in a pure C program, however when it's called from haskell an assertion fails indicating that the libgit2 global init function, git_libgit2_init, hasn't been called. But, git_libgit2_init is called by git_update_repo. And if I use gdb I can see that git_libgit2_init is indeed called and reports that the initialization has been successful.</p>\n\n<p>I've used nm to examine the executables and found something interesting. In a pure C executable, all the libgit2 functions are dynamically linked (as expected). However, in my haskell executable, git_libgit2_init is dynamically linked, while the rest of the libgit2 functions are statically linked. I'm certain that this mismatch is the cause of my issue.</p>\n\n<p>So why do certain functions get linked dynamically and others statically? How can I change this?</p>\n\n<p>The relevant settings in my .cabal file are</p>\n\n<pre><code>  cc-options: -g\n  c-sources:\n      src/git-bindings.c\n  extra-libraries:\n      git2\n</code></pre>\n"}, {"tags": ["haskell", "monads"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 6, "creation_date": 1521927886, "post_id": 49470200, "comment_id": 85942956, "body": "Why wouldn&#39;t it be left-associative? You wouldn&#39;t want <code>monad &gt;&gt;= action1 &gt;&gt;= action2</code> being parsed as <code>monad &gt;&gt;= (action1 &gt;&gt;= action2)</code>, would you?"}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 5, "creation_date": 1521927946, "post_id": 49470200, "comment_id": 85942982, "body": "Also, the fixity of <code>&gt;&gt;</code> doesn&#39;t theoretically matter, since it is associative by the monad laws."}, {"owner": {"reputation": 101, "user_id": 8589404, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a63a84b05229e744c2f2cd2ffa666bd0?s=128&d=identicon&r=PG", "display_name": "W. Cadegan-Schlieper", "link": "https://stackoverflow.com/users/8589404/w-cadegan-schlieper"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1521928205, "post_id": 49470200, "comment_id": 85943063, "body": "@AJFarmar worth noting that the usual set of actions you&#39;d want to bind is m a, a-&gt;m b, b-&gt;m c so the right-associated bind wouldn&#39;t typecheck"}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "reply_to_user": {"reputation": 101, "user_id": 8589404, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a63a84b05229e744c2f2cd2ffa666bd0?s=128&d=identicon&r=PG", "display_name": "W. Cadegan-Schlieper", "link": "https://stackoverflow.com/users/8589404/w-cadegan-schlieper"}, "edited": false, "score": 0, "creation_date": 1521928336, "post_id": 49470200, "comment_id": 85943097, "body": "@W.Schlieper That&#39;s what I&#39;m pointing out."}, {"owner": {"reputation": 8563, "user_id": 160673, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/7BSPT.jpg?s=128&g=1", "display_name": "Neil Mitchell", "link": "https://stackoverflow.com/users/160673/neil-mitchell"}, "edited": false, "score": 1, "creation_date": 1521928689, "post_id": 49470200, "comment_id": 85943197, "body": "The fixity of <code>&lt;&gt;</code> doesn&#39;t theoretically matter because of Monoid laws, apart from of course it would make list concatenation <i>O(n^2)</i>. You&#39;ve given a good reason for <code>&gt;&gt;=</code>, so that&#39;s half the answer, but why <code>&gt;&gt;</code>?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 5, "creation_date": 1521928719, "post_id": 49470200, "comment_id": 85943206, "body": "For <code>&gt;&gt;</code> it would often be better to associate the other way, but maybe this was chosen for consistency with <code>&gt;&gt;=</code>."}, {"owner": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 4, "creation_date": 1521929027, "post_id": 49470200, "comment_id": 85943300, "body": "It would feel weird if <code>&gt;&gt;=</code> and <code>&gt;&gt;</code> did not associate the same way."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1521933838, "post_id": 49470200, "comment_id": 85944535, "body": "@NeilMitchell <code>&gt;&gt;</code> can be thought of as a monoid operation (&#39;monads are monoids in the category of endofunctors&#39;), and by corollary is associative."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 1, "creation_date": 1521953159, "post_id": 49470200, "comment_id": 85947756, "body": "@AJFarmar It is worth it to mention that the monoids in &quot;monads are monoids [...]&quot; lie in &quot;the category of endofunctors&quot;, and not in <b>Hask</b> -- the relevant monoid multiplication is <code>join :: M (M a) -&gt; M a</code>. From that, it does follow that, for a <code>Monad</code> <code>M</code>, <code>M ()</code> is a (plain old, <b>Hask</b>) monoid, with <code>return ()</code> as unit and <code>(&gt;&gt;)</code> as multiplication."}], "answers": [{"comments": [{"owner": {"reputation": 8563, "user_id": 160673, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/7BSPT.jpg?s=128&g=1", "display_name": "Neil Mitchell", "link": "https://stackoverflow.com/users/160673/neil-mitchell"}, "edited": false, "score": 1, "creation_date": 1521971457, "post_id": 49471125, "comment_id": 85951381, "body": "This is the key observation - you couldn&#39;t chain both operators if it wasn&#39;t infixl."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 14, "last_activity_date": 1521973353, "last_edit_date": 1521973353, "creation_date": 1521935252, "answer_id": 49471125, "question_id": 49470200, "link": "https://stackoverflow.com/questions/49470200/why-is-haskell-monadic-bind-left-associative/49471125#49471125", "title": "Why is Haskell monadic bind left-associative?", "body": "<p><code>&gt;&gt;=</code> must surely be left-associative.</p>\n\n<pre><code>Prelude&gt; [\"bla\",\"bli di\",\"blub\"] &gt;&gt;= words &gt;&gt;= reverse\n\"albilbidbulb\"\nPrelude&gt; [\"bla\",\"bli di\",\"blub\"] &gt;&gt;= (words &gt;&gt;= reverse)\n\n&lt;interactive&gt;:3:30: error:\n    \u2022 Couldn't match expected type \u2018[[b0]]\u2019\n                  with actual type \u2018String -&gt; [String]\u2019\n    \u2022 Probable cause: \u2018words\u2019 is applied to too few arguments\n      In the first argument of \u2018(&gt;&gt;=)\u2019, namely \u2018words\u2019\n      In the second argument of \u2018(&gt;&gt;=)\u2019, namely \u2018(words &gt;&gt;= reverse)\u2019\n      In the expression:\n        [\"bla\", \"bli di\", \"blub\"] &gt;&gt;= (words &gt;&gt;= reverse)\n</code></pre>\n\n<p>And <code>&gt;&gt;</code> pretty much follows <code>&gt;&gt;=</code>; if it had another fixity it would not only  <em>feel weird</em> as Lennart said, it would also prevent you from using both operators in a chain:</p>\n\n<pre><code>Prelude&gt; [\"bla\",\"bli di\",\"blub\"] &gt;&gt;= words &gt;&gt; \"Ha\"\n\"HaHaHaHa\"\nPrelude&gt; infixr 1 \u2b3f\u226b; (\u2b3f\u226b) = (&gt;&gt;)\nPrelude&gt; [\"bla\",\"bli di\",\"blub\"] &gt;&gt;= words \u2b3f\u226b \"Ha\"\n\n&lt;interactive&gt;:6:1: error:\n    Precedence parsing error\n        cannot mix \u2018&gt;&gt;=\u2019 [infixl 1] and \u2018\u2b3f\u226b\u2019 [infixr 1] in the same infix expression\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "is_accepted": false, "score": 6, "last_activity_date": 1521963847, "last_edit_date": 1521963847, "creation_date": 1521935439, "answer_id": 49471156, "question_id": 49470200, "link": "https://stackoverflow.com/questions/49470200/why-is-haskell-monadic-bind-left-associative/49471156#49471156", "title": "Why is Haskell monadic bind left-associative?", "body": "<p><code>&gt;&gt;=</code> is left-associative because it's convenient. We want <code>m &gt;&gt;= f1 &gt;&gt;= f2</code> to be parsed as <code>(m &gt;&gt;= f1) &gt;&gt;= f2</code>, not as <code>m &gt;&gt;= (f1 &gt;&gt;= f2)</code>, which would likely not type check, as pointed out in the comments.</p>\n\n<p>The associativity of <code>&gt;&gt;</code> however, is simply a mirror of <code>&gt;&gt;=</code>. This is likely for the sake of consistency, since we can prove that <code>&gt;&gt;</code> is associative via the third monad law: <code>(m &gt;&gt;= f) &gt;&gt;= g \u2261 m &gt;&gt;= ( \\x -&gt; f x &gt;&gt;= g )</code>. That is to say, its associativity doesn't theoretically matter. Here is the proof:</p>\n\n<pre><code>-- Definition:\na &gt;&gt; b \u2261 a &gt;&gt;= (\\_ -&gt; b)\n\n-- Proof: (a &gt;&gt; b) &gt;&gt; c \u2261 a &gt;&gt; (b &gt;&gt; c)\n  (a &gt;&gt; b) &gt;&gt; c\n\u2261 (a &gt;&gt;= (\\_ -&gt; b)) &gt;&gt; c                  -- [Definition]\n\u2261 (a &gt;&gt;= (\\_ -&gt; b)) &gt;&gt;= (\\_ -&gt; c)         -- [Definition]\n\u2261 a &gt;&gt;= (\\x -&gt; (\\_ -&gt; b) x &gt;&gt;= (\\_ -&gt; c)) -- [Monad law]\n\u2261 a &gt;&gt;= (\\_ -&gt; b &gt;&gt;= (\\_ -&gt; c))           -- [Beta-reduction]\n\u2261 a &gt;&gt;= (\\_ -&gt; b &gt;&gt; c)                    -- [Definition]\n\u2261 a &gt;&gt; (b &gt;&gt; c)                           -- [Definition]\n\u220e\n</code></pre>\n\n<p><code>do</code>-notation de-sugars differently because it has a different goal. Essentially, since do-notation is essentially writing out a lambda, right-association is needed. This is because <code>m &gt;&gt;= (\\v -&gt; (...))</code> is written as <code>do {v &lt;- m; (...)}</code>. As earlier, the de-sugaring of <code>&gt;&gt;</code> here seems to follow <code>&gt;&gt;=</code> for the sake of consistency.</p>\n"}], "owner": {"reputation": 8563, "user_id": 160673, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/7BSPT.jpg?s=128&g=1", "display_name": "Neil Mitchell", "link": "https://stackoverflow.com/users/160673/neil-mitchell"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 697, "favorite_count": 2, "accepted_answer_id": 49471125, "answer_count": 2, "score": 13, "last_activity_date": 1521973353, "creation_date": 1521927420, "last_edit_date": 1521927906, "question_id": 49470200, "link": "https://stackoverflow.com/questions/49470200/why-is-haskell-monadic-bind-left-associative", "title": "Why is Haskell monadic bind left-associative?", "body": "<p>The <code>&gt;&gt;=</code> and <code>&gt;&gt;</code> operators are both <code>infixl 1</code>. Why the left-associativity?</p>\n\n<p>In particular, I observe the equivalences:</p>\n\n<pre><code>(do a; b; c ) == (a &gt;&gt; (b &gt;&gt; c))   -- Do desugaring\n(a &gt;&gt; b &gt;&gt; c) == ((a &gt;&gt; b) &gt;&gt; c)   -- Fixity definition\n</code></pre>\n\n<p>So <code>do</code> is desugared differently to how the fixity definition naturally works, which is surprising.</p>\n"}, {"tags": ["haskell", "monads", "monad-transformers"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1521948426, "post_id": 49470106, "comment_id": 85947072, "body": "Advice for future questions: (1) Please don&#39;t make edits that radically change the original question, or that add separate questions, specially if someone has already answered (invalidating correct answers is not nice). If you have further questions, it is better to either leave comments to the answer asking for clarification, for smaller issues, or to post a new question, for bigger issues. (2) If you add extra information to a question, don&#39;t do it in reverse chronological order, as it makes the question very hard to read."}, {"owner": {"reputation": 37, "user_id": 1559094, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/9j9m7.jpg?s=128&g=1", "display_name": "Eddtothefullest", "link": "https://stackoverflow.com/users/1559094/eddtothefullest"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1522029866, "post_id": 49470106, "comment_id": 85968832, "body": "I&#39;ll be more conscious next time. Thank you Duplode"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1522030407, "post_id": 49470106, "comment_id": 85968950, "body": "No worries :) It may take a little while to get used to the conventions of this place, but it&#39;s all for the best (i.e. posts that will hold long-lasting value as reading material)."}], "answers": [{"comments": [{"owner": {"reputation": 37, "user_id": 1559094, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/9j9m7.jpg?s=128&g=1", "display_name": "Eddtothefullest", "link": "https://stackoverflow.com/users/1559094/eddtothefullest"}, "edited": false, "score": 0, "creation_date": 1521929305, "post_id": 49470382, "comment_id": 85943368, "body": "thank you chi! Please take a look at my updated question :-)"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 1, "last_activity_date": 1521928765, "creation_date": 1521928765, "answer_id": 49470382, "question_id": 49470106, "link": "https://stackoverflow.com/questions/49470106/monadstate-gets-stuck-in-an-infinite-recursive-loop/49470382#49470382", "title": "MonadState gets stuck in an infinite recursive loop", "body": "<p>You need to explicitly ask for the needed instances to be inherited.</p>\n\n<pre><code>newtype VM a = VM{\n    unwrapVM :: RWST [Quadruple] [String] (CPUState) IO a\n} deriving (Functor, Applicative, Monad, MonadIO, MonadState, MonadReader)\n                                               -- ^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>For this you probably need the extension <code>GeneralisedNewtypeDeriving</code>.</p>\n\n<p>You need to be explicit on inheriting these instances, since otherwise you could define your own</p>\n\n<pre><code>instance MonadState VM where ...\ninstance MonadReader VM where ...\n</code></pre>\n\n<p>Indeed, it is <em>very</em> common to wrap an existing type <code>T</code> under a <code>newtype W</code> only to provide <code>W</code> with a <em>different</em> instance than the one for <code>T</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 37, "user_id": 1559094, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/9j9m7.jpg?s=128&g=1", "display_name": "Eddtothefullest", "link": "https://stackoverflow.com/users/1559094/eddtothefullest"}, "is_accepted": false, "score": 0, "last_activity_date": 1521933166, "creation_date": 1521933166, "answer_id": 49470928, "question_id": 49470106, "link": "https://stackoverflow.com/questions/49470106/monadstate-gets-stuck-in-an-infinite-recursive-loop/49470928#49470928", "title": "MonadState gets stuck in an infinite recursive loop", "body": "<p>The infinite loop was due to me calling state inside the put. I just changed it to:</p>\n\n<pre><code>instance MonadState CPUState VM where\n    get = VM get\n    put s = VM . put $ s \n</code></pre>\n\n<p>For anyone that wants to hide the nested monad transformers, this is the way to go:</p>\n\n<pre><code>newtype VM a = VM{\n    unwrapVM :: RWST [Quadruple] [String] (CPUState) IO a\n} deriving (Functor, Applicative, Monad, MonadIO,MonadRWS [Quadruple] [String] CPUState)\n\ninstance MonadReader [Quadruple] VM where\n    ask = VM ask\n\ninstance MonadWriter [String] VM where\n    tell = VM . tell\n\ninstance MonadState CPUState VM where\n    get = VM get\n    put s = VM . put $ s \n</code></pre>\n"}], "owner": {"reputation": 37, "user_id": 1559094, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/9j9m7.jpg?s=128&g=1", "display_name": "Eddtothefullest", "link": "https://stackoverflow.com/users/1559094/eddtothefullest"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 81, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1521933166, "creation_date": 1521926730, "last_edit_date": 1521932323, "question_id": 49470106, "link": "https://stackoverflow.com/questions/49470106/monadstate-gets-stuck-in-an-infinite-recursive-loop", "title": "MonadState gets stuck in an infinite recursive loop", "body": "<p><strong>[EDIT 3]</strong></p>\n\n<p>I have finally pinned down the problem: I added the put method for the MonadState instance:</p>\n\n<pre><code>instance MonadState CPUState VM where\n    get = VM get\n    put s = do\n              liftIO $ putStrLn $ \"Modifying state\"\n              liftIO $ putStrLn.show $ (ip s)\n              state (\\_ -&gt; ((),s))\n</code></pre>\n\n<p>The infinite loop starts whenever the state needs to be updated:</p>\n\n<pre><code>let s' = (cpuState { ip = (ip cpuState) + 1 })\nput s'\n</code></pre>\n\n<p>I am not really sure why... Could anyone please be kind enough to clarify why it keeps on recursively calling the put method?</p>\n\n<p><strong>[EDIT 2]</strong></p>\n\n<p>Now I know why it's hanging, and it's all due to this single line:</p>\n\n<pre><code>modify $ \\s -&gt; (cpuState { globalMemory = newGlobalMemory, ip = currentIP + 1 })\n</code></pre>\n\n<p>Before I made the newtype, this was working perfectly... How would I implement the same method on the MonadState instance?</p>\n\n<p><strong>[EDIT 1]</strong></p>\n\n<p>Thanks chi! I actually did something similar:</p>\n\n<pre><code>newtype VM a = VM{\n    unwrapVM :: RWST [Quadruple] [String] (CPUState) IO a\n} deriving (Functor, Applicative, Monad, MonadIO,\n             MonadRWS [Quadruple] [String] CPUState)\n\ninstance MonadReader [Quadruple] VM where\n    ask = VM ask\n\ninstance MonadWriter [String] VM where\n    tell = VM . tell\n\ninstance MonadState CPUState VM where\n    get = VM get\n</code></pre>\n\n<p>This compiles, but when I evaluate the RWST, it just hangs there indefinitely</p>\n\n<p>I actually tried doing it your way, but I get the following compile errors (even with GeneralizedNewtypeDeriving):</p>\n\n<pre><code>\u2022 Expecting one more argument to \u2018VM\u2019\n  Expected a type, but \u2018VM\u2019 has kind \u2018* -&gt; *\u2019\n\u2022 In the first argument of \u2018MonadWriter\u2019, namely \u2018VM\u2019\n</code></pre>\n\n<p><strong>[Original Question]</strong></p>\n\n<p>Given a newtype that wraps an RWST:</p>\n\n<pre><code>newtype VM a = VM{\n    unwrapVM :: RWST [Quadruple] [String] (CPUState) IO a\n} deriving (Functor, Applicative, Monad, MonadIO)\n</code></pre>\n\n<p>Why isn't it possible to do something like this?</p>\n\n<pre><code>startVM :: [Quadruple] -&gt; Memory -&gt; Memory -&gt; IO ()\nstartVM quads globalMemory localMemory = \n    do \n      (a,w) &lt;- evalRWST (unwrapVM $ runVM) quads (setInitialCPUState globalMemory localMemory) \n      mapM_ (putStrLn) $ w \n\nrunVM :: VM ()\nrunVM = do\n          quadruples &lt;-  ask     . . . .    [1] \n          cpuState &lt;-  get       . . . .    [2]\n          return ()\n</code></pre>\n\n<p>Haskell complains in runVM that there is no instance for MonadReader [1] and for MonadState [2], however it's clearly not that way, since VM is just a wrapper for a RWST, right?</p>\n"}, {"tags": ["haskell", "types", "typeclass", "ambiguous"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1521927580, "post_id": 49470085, "comment_id": 85942871, "body": "Search for \u201cinjective type family\u201d."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1521935400, "post_id": 49470085, "comment_id": 85944862, "body": "@HTNW well it is at least a main part of the problem. If the type-level function isn&#39;t injective, the compiler can&#39;t possibly track back from <code>FooPType t</code> to <code>t</code>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1521936212, "post_id": 49470085, "comment_id": 85945017, "body": "What is the <code>t</code> supposed to represent? Perhaps your class should constrain the container or element type directly instead?"}], "answers": [{"comments": [{"owner": {"reputation": 1307, "user_id": 1549736, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/LBwQu.jpg?s=128&g=1", "display_name": "dbanas", "link": "https://stackoverflow.com/users/1549736/dbanas"}, "edited": false, "score": 0, "creation_date": 1521989661, "post_id": 49471254, "comment_id": 85956866, "body": "Thanks for the tip, re: adding &quot;@t&quot; to &quot;defPs&quot;! It never occurred to me that I could do that, and it&#39;s such a simple and elegant solution to the problem. I assume this &quot;trick&quot; only works for typeclass methods, and because, with those, there&#39;s an implicit &quot;slot&quot; to accept the &quot;@t&quot; type application; is that correct? Thanks again!"}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 1307, "user_id": 1549736, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/LBwQu.jpg?s=128&g=1", "display_name": "dbanas", "link": "https://stackoverflow.com/users/1549736/dbanas"}, "edited": false, "score": 0, "creation_date": 1521996701, "post_id": 49471254, "comment_id": 85959315, "body": "@dbanas The rules for type applications are <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#visible-type-application\" rel=\"nofollow noreferrer\">here</a>. No, it isn&#39;t just typeclass methods."}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": true, "score": 1, "last_activity_date": 1527716005, "last_edit_date": 1527716005, "creation_date": 1521936413, "answer_id": 49471254, "question_id": 49470085, "link": "https://stackoverflow.com/questions/49470085/how-do-i-avoid-ambiguous-type-errors-in-generic-functions-on-typeclasses-in-has/49471254#49471254", "title": "How do I avoid ambiguous type errors in generic functions on typeclasses, in Haskell?", "body": "<pre><code>tst :: forall t. _ =&gt; FooPType t\ntst = head $ toList _ -- want f (FooPType t)\ndefPs :: FooFType u (FooPType u)\ntst = head $ toList defPs\n-- try to unify (f (FooPType t)) with\n--   (FooFType u (FooPType u))\n-- Assume that f is injective: f x ~ g y iff f ~ g and x ~ y\n-- GHC assumes this because it doesn't allow you to abstract over non-injective\n--   type constructors anyway.\n-- try to unify f with FooFType u; OK\n-- try to unify FooPType t with FooPType u; oops\n</code></pre>\n\n<p>If <code>FooPType</code> is a <code>data family</code>, then <code>FooPType x ~ FooPType y</code> means <code>x ~ y</code>, because <code>data family</code>s are injective. Here, it's just a <code>type family</code>, which means that the compiler cannot infer that you want to call <code>defPs</code> for the type <code>t</code>. You could, for example, add <code>FooPType u ~ FooPType t</code> to <code>test</code>'s context, and now both <code>u</code> and <code>t</code> are valid type arguments to <code>defPs</code>.</p>\n\n<pre><code>test :: forall t u.\n        (  Foo t, Foo u\n         , Foldable (FooFType t), Foldable (FooFType u)\n         , FooPType t ~ FooPType u\n        ) =&gt; FooPType u\ntest = head $ toList defPs -- uh oh; which one?\n\ninstance Foo Bool where\n  type FooPType Bool = Int\n  type FooFType Bool = []\n  defPs = [1]\ninstance Foo Int where\n  type FooPType Int = Int\n  type FooFType Int = []\n  defPs = [3]\ntest @Bool @Int -- 1 or 3?\n</code></pre>\n\n<p>Interestingly enough, not even a type signature can save you here. It appears necessary to use a type application:</p>\n\n<pre><code>{-# LANGUAGE ExplicitForAll, ScopedTypeVariables, TypeApplications, ... #-}\ntest :: forall t. (Foo t, Foldable (FooFType t)) =&gt; FooPType t\ntest = head $ toList $ defPs @t\n</code></pre>\n"}], "owner": {"reputation": 1307, "user_id": 1549736, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/LBwQu.jpg?s=128&g=1", "display_name": "dbanas", "link": "https://stackoverflow.com/users/1549736/dbanas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "accepted_answer_id": 49471254, "answer_count": 1, "score": 0, "last_activity_date": 1527716005, "creation_date": 1521926557, "last_edit_date": 1521989579, "question_id": 49470085, "link": "https://stackoverflow.com/questions/49470085/how-do-i-avoid-ambiguous-type-errors-in-generic-functions-on-typeclasses-in-has", "title": "How do I avoid ambiguous type errors in generic functions on typeclasses, in Haskell?", "body": "<p>I'm trying to write a universal function for a typeclass:</p>\n\n<pre><code>{-# LANGUAGE AllowAmbiguousTypes #-}\n{-# LANGUAGE FlexibleContexts #-}\n{-# LANGUAGE RankNTypes #-}\n{-# LANGUAGE TypeFamilies #-}\n\nmodule Foo1 where\n\nimport Data.Foldable\n\nclass Foo t where\n  type FooPType t :: *              -- Base type.\n  type FooFType t :: * -&gt; *         -- Container type.\n  defPs :: FooFType t (FooPType t)  -- Initialized container.\n\n-- An attempt at a universal testing function valid for all types, t,\n-- of class Foo for which `FooFType t` is a foldable functor.\ntst :: forall t.\n  ( Foo t\n  , Functor  (FooFType t)\n  , Foldable (FooFType t)\n  ) =&gt; FooPType t\ntst = (head . toList) defPs\n</code></pre>\n\n<p>But, I'm getting this error from GHC (8.0.2):</p>\n\n<pre><code>Foo1.hs:30:23: error:\n    \u2022 Couldn't match type \u2018FooPType t0\u2019 with \u2018FooPType t\u2019\n      Expected type: FooFType t0 (FooPType t)\n        Actual type: FooFType t0 (FooPType t0)\n      NB: \u2018FooPType\u2019 is a type function, and may not be injective\n      The type variable \u2018t0\u2019 is ambiguous\n    \u2022 In the first argument of \u2018head . toList\u2019, namely \u2018defPs\u2019\n      In the expression: (head . toList) defPs\n      In an equation for \u2018tst\u2019: tst = (head . toList) defPs\n    \u2022 Relevant bindings include\n        tst :: FooPType t (bound at Foo1.hs:30:1)\n</code></pre>\n\n<p>Poking around a bit, I found that some people have gotten around this problem by changing \"type\" to \"data\", but this didn't work for me.\n(I changed it for <em>FooFType</em>. Should I have changed it for <em>FooPType</em>? For both?)</p>\n\n<p>D'oh! I should've tried answering that last question myself, before posting.\nSure enough, changing this line of code:</p>\n\n<pre><code>  type FooPType t :: *              -- Base type.\n</code></pre>\n\n<p>to read:</p>\n\n<pre><code>  data FooPType t :: *              -- Base type.\n</code></pre>\n\n<p>got rid of my compile error.</p>\n\n<p>Can anyone explain why that change worked?</p>\n\n<p>Here is the solution, as per @HTNW 's tip, re: adding \"@t\" after \"defPs\":</p>\n\n<pre><code>{-# LANGUAGE AllowAmbiguousTypes #-}\n{-# LANGUAGE FlexibleContexts #-}\n{-# LANGUAGE RankNTypes #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE TypeApplications #-}\n{-# LANGUAGE TypeFamilies #-}\n\nmodule Foo1 where\n\nimport Data.Foldable\n\nclass Foo t where\n  type FooPType t :: *              -- Base type.\n  type FooFType t :: * -&gt; *         -- Container type.\n  defPs :: FooFType t (FooPType t)  -- Initialized container.\n\n-- An attempt at a universal testing function valid for all types of class Foo.\ntst :: forall t.\n  ( Foo t\n  , Functor  (FooFType t)\n  , Foldable (FooFType t)\n  ) =&gt; FooPType t\ntst = (head . toList) $ defPs @t\n</code></pre>\n\n<p>The code above compiles w/o error under GHC 8.0.2:</p>\n\n<pre><code>Davids-Air-2:so_noninjective_type_funcs dbanas$ stack ghc -- -c Foo1.hs \n\nDavids-Air-2:so_noninjective_type_funcs dbanas$ \n</code></pre>\n"}, {"tags": ["haskell", "pretty-print"], "answers": [{"comments": [{"owner": {"reputation": 389, "user_id": 627303, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c1d80cf5fc097b20250baa26d06c5331?s=128&d=identicon&r=PG", "display_name": "rieux", "link": "https://stackoverflow.com/users/627303/rieux"}, "edited": false, "score": 0, "creation_date": 1567530998, "post_id": 57755753, "comment_id": 101987396, "body": "That sort of makes sense, but as you point out, why not make Union lazy?"}, {"owner": {"reputation": 1092, "user_id": 2800708, "user_type": "registered", "accept_rate": 45, "profile_image": "https://i.stack.imgur.com/Mc3Gf.jpg?s=128&g=1", "display_name": "user2800708", "link": "https://stackoverflow.com/users/2800708/user2800708"}, "reply_to_user": {"reputation": 389, "user_id": 627303, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c1d80cf5fc097b20250baa26d06c5331?s=128&d=identicon&r=PG", "display_name": "rieux", "link": "https://stackoverflow.com/users/627303/rieux"}, "edited": false, "score": 1, "creation_date": 1567636319, "post_id": 57755753, "comment_id": 102025726, "body": "I guess in that SML implementation the author had no intention of doing any kind of union other than as a group - maybe a good insight."}, {"owner": {"reputation": 1092, "user_id": 2800708, "user_type": "registered", "accept_rate": 45, "profile_image": "https://i.stack.imgur.com/Mc3Gf.jpg?s=128&g=1", "display_name": "user2800708", "link": "https://stackoverflow.com/users/2800708/user2800708"}, "reply_to_user": {"reputation": 389, "user_id": 627303, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c1d80cf5fc097b20250baa26d06c5331?s=128&d=identicon&r=PG", "display_name": "rieux", "link": "https://stackoverflow.com/users/627303/rieux"}, "edited": false, "score": 1, "creation_date": 1567636393, "post_id": 57755753, "comment_id": 102025744, "body": "I ported it to Elm, and I currently have a non-lazy Union. Now considering whether I should replace with Group or make the Union lazy. I guess I will go with Group until such time as I feel the need to implement some other kind of union."}], "tags": [], "owner": {"reputation": 1092, "user_id": 2800708, "user_type": "registered", "accept_rate": 45, "profile_image": "https://i.stack.imgur.com/Mc3Gf.jpg?s=128&g=1", "display_name": "user2800708", "link": "https://stackoverflow.com/users/2800708/user2800708"}, "is_accepted": false, "score": 1, "last_activity_date": 1567428673, "last_edit_date": 1567428673, "creation_date": 1567421870, "answer_id": 57755753, "question_id": 49469940, "link": "https://stackoverflow.com/questions/49469940/why-does-a-wadler-leijen-pretty-printer-use-union-instead-of-group/57755753#57755753", "title": "Why does a Wadler-Leijen pretty printer use Union instead of Group?", "body": "<p>Wadler's algorithm was first implemented in Haskell, which is lazily evaluated.</p>\n\n<p>A 'Group' is evaluated as a choice of 2 options - one with the grouped text all on one line, and one with it on multiple lines. This is expressed as a 'Union' of these two options. A group is turned into a union, but the 2 options are only calculated lazily due to being implemented in Haskell.</p>\n\n<p>By contrast, see this implementation in Stanard ML which is strictly evaluated.</p>\n\n<p><a href=\"https://github.com/kfl/wpp/blob/master/Wpp.sml\" rel=\"nofollow noreferrer\">https://github.com/kfl/wpp/blob/master/Wpp.sml</a></p>\n\n<p>The author there has made 'Group' a primitive and not 'Union'. This is so that the 2 options are only computed on demand, when evaluating how to layout a group.</p>\n\n<p>This isn't needed in the Haskell implementation. Also note that the Haskell library has a 'softline' function, which uses union. The SML doesn't, presumably since softline is not expressed so well by a group. The SML implementation could have taken a different path, by putting the choices under a union behind a thunk '() -> ...', to make them lazier, for example.</p>\n\n<p>===</p>\n\n<p>I just checked the implemenation of softline and it is 'group Line', so I was wrong about group not being the way to implement softline.</p>\n\n<p>Still I think the answer is that union is a general choice of two layouts, but group is a specific choice between a single line or multi-line layout and other choices ought to be possible and can be handled by the layout algorithm.</p>\n"}], "owner": {"reputation": 389, "user_id": 627303, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c1d80cf5fc097b20250baa26d06c5331?s=128&d=identicon&r=PG", "display_name": "rieux", "link": "https://stackoverflow.com/users/627303/rieux"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 141, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1567428673, "creation_date": 1521925427, "question_id": 49469940, "link": "https://stackoverflow.com/questions/49469940/why-does-a-wadler-leijen-pretty-printer-use-union-instead-of-group", "title": "Why does a Wadler-Leijen pretty printer use Union instead of Group?", "body": "<p><a href=\"http://belle.sourceforge.net/doc/hughes95design.pdf\" rel=\"nofollow noreferrer\">Hughes-style</a> pretty-printing combinators use a <code>Union</code> primitive for describing sets of differing layouts, but <a href=\"https://homepages.inf.ed.ac.uk/wadler/papers/prettier/prettier.pdf\" rel=\"nofollow noreferrer\">Wadler</a> replaced <code>Union</code> with <code>Group</code>, which tries to layout its argument on one line and then breaks lines if it can\u2019t. Yet the latest <a href=\"https://hackage.haskell.org/package/prettyprinter-1.2.0.1/docs/Data-Text-Prettyprint-Doc.html\" rel=\"nofollow noreferrer\">Wadler-Leijen</a> combinators make <code>Union</code> primitive, and define <code>group d</code> as <code>Union (flatten d) d</code>. What are the trade-offs between the two representations, and why do Wadler-Leijen pretty printers use <code>Union</code>?</p>\n"}, {"tags": ["linux", "haskell", "audio", "stream", "conduit"], "comments": [{"owner": {"reputation": 877, "user_id": 2402383, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/Q3QBc.jpg?s=128&g=1", "display_name": "zabeltech", "link": "https://stackoverflow.com/users/2402383/zabeltech"}, "edited": false, "score": 1, "creation_date": 1521916263, "post_id": 49468311, "comment_id": 85939178, "body": "i would suggest you to look into outputting a binary stream on stdout and then pipe it into aplay like above. basicly smth like this should be passible <code>haskell-app | aplay</code>"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1521921816, "post_id": 49468311, "comment_id": 85941076, "body": "How much Haskell do you know?  As it stands this question is too broad."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1521924986, "post_id": 49468311, "comment_id": 85942120, "body": "I think that library does NOT connect with the outside world, but its <a href=\"https://github.com/mtolly/conduit-audio\" rel=\"nofollow noreferrer\">other siblings</a> do. Check out the other packages."}, {"owner": {"reputation": 2588, "user_id": 916142, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/cf88a560a7f987712350b7d629ed2bc7?s=128&d=identicon&r=PG", "display_name": "Jeffrey Benjamin Brown", "link": "https://stackoverflow.com/users/916142/jeffrey-benjamin-brown"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1521945983, "post_id": 49468311, "comment_id": 85946698, "body": "@ThomasM.DuBuisson Is it specific enough now? Regarding myself, I know enough Haskell to have <a href=\"https://github.com/JeffreyBenjaminBrown/Tidal/tree/epic/\" rel=\"nofollow noreferrer\">overhauled the Tidal music-making DSL</a>. I&#39;m good inside Haskell, but connecting it to other stuff always confounds me."}], "owner": {"reputation": 2588, "user_id": 916142, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/cf88a560a7f987712350b7d629ed2bc7?s=128&d=identicon&r=PG", "display_name": "Jeffrey Benjamin Brown", "link": "https://stackoverflow.com/users/916142/jeffrey-benjamin-brown"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1104, "favorite_count": 3, "answer_count": 0, "score": 6, "last_activity_date": 1521947878, "creation_date": 1521915944, "last_edit_date": 1521947878, "question_id": 49468311, "link": "https://stackoverflow.com/questions/49468311/using-haskell-for-real-time-audio-streaming", "title": "Using Haskell for real-time audio streaming", "body": "<p>I would like to be able to play simple[1] audio in realtime from GHCI, starting and stopping independent oscillators and samples (\"voices\").</p>\n\n<p>Using Bash on Linux, it's easy[2] to <a href=\"https://unix.stackexchange.com/questions/13732/generating-random-noise-for-fun-in-dev-snd\">pipe data into a command</a> that streams audio through your speakers.</p>\n\n<p>In Haskell, I imagine something along these lines:</p>\n\n<pre><code>x &lt;- realtimeAudioSink\ncreateVoices x [VoiceName \"sinewave\",VoiceName \"drums\"]\nplay x (VoiceName \"sinewave\") $ sinewave (Hz 440)\nplay x (VoiceName \"sinewave\") $ sinewave (Hz 220)\n  -- replace the earlier sinewave with a lower-frequency one\nplay x (VoiceName \"drums\")\n  $ asSoonAs (theTime &gt;= floor theTime)\n  $ every (Seconds 10) $ soundfile \"snare.wav\"\n  -- starting on the next second, play the snare drum sample every 10 seconds\ndestroyVoice x (VoiceName \"drums\")\n  -- the drums stop, the sinewave keeps going\n</code></pre>\n\n<p>Haskell offers a lot of streaming libraries. Each looks hard to learn. Moreover the audio streaming problem is complicated by the need for realtime operation at a specific sample rate, and by the buffering problem[3].</p>\n\n<p>Is this easy or hard?</p>\n\n<hr>\n\n<p>[1] Four sinewaves and four samples concurrently seems like enough bandwidth to explore for a lifetime.</p>\n\n<p>[2] If you use ALSA, for instance, <code>cat /dev/urandom | aplay</code> will play white noise. (Warning: It plays at maximum volume.)</p>\n\n<p>[3] The buffering problem arises, I believe, from the following pair of opposing constraints:  (1) If each sample is given its own calculate-and-stream cycle, it might overwhelm the processor. (Or maybe it wouldn't, if the generated audio is simple enough?)  (2) If you calculate too many samples at a time before sending them out, you might not have finished calculating them all in time.</p>\n"}, {"tags": ["haskell", "hoogle"], "answers": [{"tags": [], "owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "is_accepted": false, "score": 1, "last_activity_date": 1522092946, "last_edit_date": 1522092946, "creation_date": 1521913315, "answer_id": 49467848, "question_id": 49467487, "link": "https://stackoverflow.com/questions/49467487/how-can-i-search-all-packages-with-hoogle-via-command-line/49467848#49467848", "title": "How can I search all packages with hoogle via command line?", "body": "<p>This project might be of interest: <a href=\"https://github.com/andrevdm/bhoogle\" rel=\"nofollow noreferrer\">https://github.com/andrevdm/bhoogle</a></p>\n\n<p>I've also written bash function (depends on jq, fzf, xclip):</p>\n\n<pre><code>hoogle_searchAndCopy() {\n  wget -qO- https://hoogle.haskell.org/\\?hoogle\\=\"$1\"\\&amp;scope\\=set%3Astackage\\&amp;mode\\=json \\\n    | jq -r \".[] | \\\"import \\\\(.module.name)\\\\n\\\\(.package.name)\\\\n--\\\"\" \\\n    | fzf | xclip ;\n  }\n</code></pre>\n\n<p><code>hoogle_searchAndCopy maybeToEither</code> results in:</p>\n\n<p><a href=\"https://i.stack.imgur.com/rMVvB.jpg\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/rMVvB.jpg\" alt=\"enter image description here\"></a></p>\n"}, {"tags": [], "owner": {"reputation": 8563, "user_id": 160673, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/7BSPT.jpg?s=128&g=1", "display_name": "Neil Mitchell", "link": "https://stackoverflow.com/users/160673/neil-mitchell"}, "is_accepted": true, "score": 1, "last_activity_date": 1521972197, "creation_date": 1521972197, "answer_id": 49474618, "question_id": 49467487, "link": "https://stackoverflow.com/questions/49467487/how-can-i-search-all-packages-with-hoogle-via-command-line/49474618#49474618", "title": "How can I search all packages with hoogle via command line?", "body": "<p>I tried:</p>\n\n<pre><code>$ cabal update\n$ cabal install hoogle\nInstalled hoogle-5.0.17.2\n$ hoogle generate --download\n$ hoogle maybeToEither\n</code></pre>\n\n<p>And got the response:</p>\n\n<pre><code>Data.Either.Utils maybeToEither :: MonadError e m =&gt; e -&gt; Maybe a -&gt; m a\nData.Either.Extra maybeToEither :: a -&gt; Maybe b -&gt; Either a b\nExtra maybeToEither :: a -&gt; Maybe b -&gt; Either a b\nProtolude.Either maybeToEither :: e -&gt; Maybe a -&gt; Either e a\nAgda.Utils.Either maybeToEither :: Maybe a -&gt; Either () a\nIntro maybeToEither :: () =&gt; a -&gt; Maybe b -&gt; Either a b\n</code></pre>\n\n<p>At the moment the web shows 6 entries, because it has merged the <code>Data.Either.Extra</code> and <code>Extra</code> entries into one line as they refer to the same definition. Other than that, they match.</p>\n\n<p>Note that <code>hoogle generate</code> generates a database based on what you have already downloaded, so if you run <code>hoogle generate</code> every month the result will not change. Adding <code>--download</code> forces Hoogle to download afresh.</p>\n"}], "owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 198, "favorite_count": 0, "accepted_answer_id": 49474618, "answer_count": 2, "score": 3, "last_activity_date": 1522092946, "creation_date": 1521911284, "question_id": 49467487, "link": "https://stackoverflow.com/questions/49467487/how-can-i-search-all-packages-with-hoogle-via-command-line", "title": "How can I search all packages with hoogle via command line?", "body": "<p>I've installed hoogle locally and have run <code>hoogle generate</code>.</p>\n\n<p>If I run <code>hoogle maybeToEither</code> I get:</p>\n\n<pre><code>Data.Either.Utils maybeToEither :: MonadError e m =&gt; e -&gt; Maybe a -&gt; m a\nEither maybeToEither :: Monoid b =&gt; (a -&gt; b) -&gt; Maybe a -&gt; b\nNetwork.Haskoin.Util maybeToEither :: b -&gt; Maybe a -&gt; Either b a\n</code></pre>\n\n<p>However if I use the web search I get a few more entries: <a href=\"https://hoogle.haskell.org/?hoogle=maybeToEither\" rel=\"nofollow noreferrer\">https://hoogle.haskell.org/?hoogle=maybeToEither</a></p>\n\n<p>Is there a way I can generate the same 'database' locally? Or is there possibly a CLI for searching  <a href=\"https://hoogle.haskell.org\" rel=\"nofollow noreferrer\">https://hoogle.haskell.org</a>?</p>\n\n<p>According to <a href=\"https://wiki.haskell.org/Hoogle\" rel=\"nofollow noreferrer\">https://wiki.haskell.org/Hoogle</a> I should be able to run <code>hoogle data</code> or <code>hoogle data all</code> - but this seems do just do a search (so maybe outdated?).</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 1, "creation_date": 1521902825, "post_id": 49465896, "comment_id": 85934753, "body": "What are &#39;strange results&#39;? We can&#39;t help you if we don&#39;t know your problem."}, {"owner": {"reputation": 1835, "user_id": 6090953, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/psAAO.jpg?s=128&g=1", "display_name": "Paul Brown", "link": "https://stackoverflow.com/users/6090953/paul-brown"}, "edited": false, "score": 1, "creation_date": 1521908515, "post_id": 49465896, "comment_id": 85936577, "body": "oddsAndEvens ns = (odds, length ns - odds) where odds = length (filter odd ns)"}, {"owner": {"reputation": 21, "user_id": 9544775, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Amy", "link": "https://stackoverflow.com/users/9544775/amy"}, "edited": false, "score": 0, "creation_date": 1521981288, "post_id": 49465896, "comment_id": 85954241, "body": "Thank you very much for your help!"}], "answers": [{"comments": [{"owner": {"reputation": 21, "user_id": 9544775, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Amy", "link": "https://stackoverflow.com/users/9544775/amy"}, "edited": false, "score": 1, "creation_date": 1521981348, "post_id": 49466107, "comment_id": 85954259, "body": "Thank you for your fast feedback! I&#39;ll try to write some more codes considering your advice in mind"}], "tags": [], "owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "is_accepted": false, "score": 3, "last_activity_date": 1521903259, "creation_date": 1521903259, "answer_id": 49466107, "question_id": 49465896, "link": "https://stackoverflow.com/questions/49465896/how-to-count-even-and-odd-numbers-in-a-list-of-numbers/49466107#49466107", "title": "How to count even and odd numbers in a list of numbers", "body": "<p>You have two problems.</p>\n\n<h2>Problem 1: <code>div</code> vs <code>mod</code>.</h2>\n\n<p><code>div</code> divides numbers. <code>mod</code> takes their remainder. For example, <code>div 6 2 = 3</code>, and <code>mod 6 2 = 0</code>.</p>\n\n<p>You incorrectly use <code>div</code>. That should be <code>mod</code>, so for instance your first function should be: </p>\n\n<pre><code>counteven :: [Integer] -&gt; Integer\ncounteven [] = 0\ncounteven (x:xs)\n  | x `mod` 2 == 0   = 1 + counteven xs -- NOTE: `mod` not `div`!\n  | otherwise        = counteven xs\n</code></pre>\n\n<p>I'm sure you can fix <code>countodd</code> on your own given this example.</p>\n\n<h2>Problem two: over-restrictive pattern matching.</h2>\n\n<p>Your final function has an issue too:</p>\n\n<pre><code>oddsAndEvens :: [Integer] -&gt; (Integer, Integer)\noddsAndEvens (x:xs) = (counteven (x:xs), countodd (x:xs))\n</code></pre>\n\n<p>The argument <code>(x:xs)</code> only pattern matches on non-empty lists, so <code>oddsAndEvens []</code> will produce an error, since you haven't defined its behaviour.</p>\n\n<p>It <em>should</em> be:</p>\n\n<pre><code>oddsAndEvens :: [Integer] -&gt; (Integer, Integer)\noddsAndEvens xs = (counteven xs, countodd xs)\n</code></pre>\n\n<p>Since <code>xs</code> matches anything, the function will now work for empty and nonempty lists.</p>\n"}, {"tags": [], "owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "is_accepted": false, "score": 2, "last_activity_date": 1521914300, "creation_date": 1521914300, "answer_id": 49468008, "question_id": 49465896, "link": "https://stackoverflow.com/questions/49465896/how-to-count-even-and-odd-numbers-in-a-list-of-numbers/49468008#49468008", "title": "How to count even and odd numbers in a list of numbers", "body": "<p>Another solution:</p>\n\n<pre><code>import           Data.List         (partition)\nimport           Data.Tuple.Extra  (both)\n\ncountEvenAndOdd :: Integral a =&gt; [a] -&gt; (Int, Int)\ncountEvenAndOdd x = both length (partition even x)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1017, "user_id": 707138, "user_type": "registered", "accept_rate": 20, "profile_image": "https://www.gravatar.com/avatar/dc68ec1db907917f4d69161b420d649e?s=128&d=identicon&r=PG", "display_name": "Melug", "link": "https://stackoverflow.com/users/707138/melug"}, "is_accepted": false, "score": 0, "last_activity_date": 1521921825, "creation_date": 1521921825, "answer_id": 49469328, "question_id": 49465896, "link": "https://stackoverflow.com/questions/49465896/how-to-count-even-and-odd-numbers-in-a-list-of-numbers/49469328#49469328", "title": "How to count even and odd numbers in a list of numbers", "body": "<p>Prelude has a function <code>odd :: Int -&gt; Bool</code> which checks if number is odd or not. So, filter all odd numbers and find the size of it. All other numbers are even numbers.</p>\n\n<pre><code>c :: [Int] -&gt; (Int, Int)\nc as = (odds, evens)\n    where odds  = length $ filter odd as\n          evens = length as - odds\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "is_accepted": false, "score": 0, "last_activity_date": 1522149790, "last_edit_date": 1522149790, "creation_date": 1522021053, "answer_id": 49482114, "question_id": 49465896, "link": "https://stackoverflow.com/questions/49465896/how-to-count-even-and-odd-numbers-in-a-list-of-numbers/49482114#49482114", "title": "How to count even and odd numbers in a list of numbers", "body": "<p>You only have to determine the count of one of the even/odd in the list. You have the length of the list. The length of the list minus the count of one of the even/odd in the list is the remainder or other number in the list.</p>\n\n<pre><code>let l = [1..5]\nlet l1 = [length [ n | n &lt;- l, mod n 2 == 0]]!!0\n[l1,(length l) - l1]\n-&gt; [2,3]\n</code></pre>\n\n<p>One line with a nested list comprehension to do assignments without do.</p>\n\n<pre><code>[[l1,l2] | l1 &lt;-[length [ n | n &lt;- l, mod n 2 == 0]], l2 &lt;-[length l - l1]]!!0\n</code></pre>\n\n<p>Yields the same.</p>\n"}], "owner": {"reputation": 21, "user_id": 9544775, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Amy", "link": "https://stackoverflow.com/users/9544775/amy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1469, "favorite_count": 0, "answer_count": 4, "score": 0, "last_activity_date": 1528081197, "creation_date": 1521901991, "last_edit_date": 1521905299, "question_id": 49465896, "link": "https://stackoverflow.com/questions/49465896/how-to-count-even-and-odd-numbers-in-a-list-of-numbers", "title": "How to count even and odd numbers in a list of numbers", "body": "<p>I want to write a function that will tell me the number of even and odd number occurences within a list. For example, if my list was [1,2,3,4,5], I want it to return (2,3). </p>\n\n<p>This is what I have so far</p>\n\n<pre><code>counteven :: [Integer] -&gt; Integer\ncounteven [] = 0\ncounteven (x:xs) \n     |(x `div` 2) == 0 = 1 + counteven xs\n     |otherwise = counteven xs\n\ncountodd :: [Integer] -&gt; Integer\ncountodd [] = 0\ncountodd (x:xs) \n     |(x `div` 2) /= 0 = 1 + countodd xs\n     |otherwise = countodd xs\n\noddsAndEvens :: [Integer] -&gt; (Integer,Integer)\noddsAndEvens (x:xs) = ((counteven(x:xs)),(countodd(x:xs)))\n</code></pre>\n\n<p>It does run on my text editor but I am getting strange results.<br>\nCan someone please help me what the problem might be?</p>\n"}, {"tags": ["haskell", "monads", "monad-transformers"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1521897550, "post_id": 49464948, "comment_id": 85933118, "body": "Why give <code>runVmEval</code> an argument that it doesn&#39;t use?"}, {"owner": {"reputation": 37, "user_id": 1559094, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/9j9m7.jpg?s=128&g=1", "display_name": "Eddtothefullest", "link": "https://stackoverflow.com/users/1559094/eddtothefullest"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1521898944, "post_id": 49464948, "comment_id": 85933485, "body": "That&#39;s because I am still a newbie and I was trying to wrap my mind around the concept of stacking monad transformers, so this code is really messy. Anyway, you are right, rumVmEval is more than enough."}], "answers": [{"comments": [{"owner": {"reputation": 37, "user_id": 1559094, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/9j9m7.jpg?s=128&g=1", "display_name": "Eddtothefullest", "link": "https://stackoverflow.com/users/1559094/eddtothefullest"}, "edited": false, "score": 0, "creation_date": 1521897750, "post_id": 49465142, "comment_id": 85933174, "body": "I had literally tried everything for the past 2 hours. Thanks a lot Daniel!"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 3, "last_activity_date": 1521897522, "creation_date": 1521897522, "answer_id": 49465142, "question_id": 49464948, "link": "https://stackoverflow.com/questions/49464948/combining-rwst-and-io/49465142#49465142", "title": "Combining RWST and IO", "body": "<p>Just use bind instead of <code>let</code>.</p>\n\n<pre><code>runVmEval m = do\n    (a,w) &lt;- evalRWST run () ()\n    putStrLn \"End\"\n    mapM_ putStrLn w\n</code></pre>\n"}], "owner": {"reputation": 37, "user_id": 1559094, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/9j9m7.jpg?s=128&g=1", "display_name": "Eddtothefullest", "link": "https://stackoverflow.com/users/1559094/eddtothefullest"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "accepted_answer_id": 49465142, "answer_count": 1, "score": 0, "last_activity_date": 1521897522, "creation_date": 1521896237, "question_id": 49464948, "link": "https://stackoverflow.com/questions/49464948/combining-rwst-and-io", "title": "Combining RWST and IO", "body": "<p>I needed to do an IO operation inside an RWS, so I decided to combine an RWST with an IO monad. Although everything works fine, I can't get the logs from the outer monad.</p>\n\n<p>This is what I currently have:</p>\n\n<pre><code>newtype VM2 a = VM2{\n    unwrapVM :: RWST () () () IO a } \nderiving (Functor, Applicative, Monad, MonadIO)\n\nrunVmEval :: VM2 a -&gt; IO () \nrunVmEval m = do \n                evalRWST (run) () ()\n                putStrLn $ \"End\"\n\ntest :: IO () \ntest = do\n         putStrLn \"Start\"\n         runVmEval $ return ()\n\nrun :: RWST () [String] () IO () \nrun = do \n        x &lt;- lift getLine\n        tell $ [x]\n        lift (print x)\n</code></pre>\n\n<p>This is what I would like to do:</p>\n\n<pre><code>runVmEval :: VM2 a -&gt; IO ()\nrunVmEval m = do\n    let w = evalRWST (run) () ()\n    putStrLn $ snd w\n    putStrLn $ \"End\"\n</code></pre>\n\n<p>This obviously fails, as w is of type <code>IO ((), [String])</code></p>\n\n<p>I have also tried the following:</p>\n\n<pre><code>runVmEval :: VM2 a -&gt; IO ()\nrunVmEval m = do\n    let (a,w) = evalRWST (run) () ()\n    putStrLn $ \"End\"\n    mapM_ (putStrLn) $ snd w\n</code></pre>\n\n<p>But I keep getting the aforementioned type error...</p>\n\n<p>Any ideas?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1521894217, "post_id": 49464632, "comment_id": 85932185, "body": "I find it a bit weird to return <code>0</code> otherwise. Usually in Haskell, then one uses <code>Maybe Int</code>, since then we can make a distinction between <code>Nothing</code>, and <code>Just 0</code>."}, {"owner": {"reputation": 35, "user_id": 9543584, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4496895b92be3542de262dd179bba444?s=128&d=identicon&r=PG&f=1", "display_name": "user376127", "link": "https://stackoverflow.com/users/9543584/user376127"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1521894515, "post_id": 49464632, "comment_id": 85932260, "body": "Unfortunately, this is a practice exam question, which has specified the function declaration to take a String and return an int."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1521894892, "post_id": 49464632, "comment_id": 85932349, "body": "in that case I would propose to return <code>-1</code> since that is a number that can <i>not</i> be represented with only digits."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1521895542, "post_id": 49464632, "comment_id": 85932549, "body": "The problem is, when handling <code>&quot;10&quot;</code>, the recursive call will return 0, as for the case <code>&quot;1a&quot;</code>, making it hard to distinguish the two cases."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1521895752, "post_id": 49464632, "comment_id": 85932622, "body": "<code>48 &lt;= fromEnum c</code> is probably more readable as <code>&#39;0&#39; &lt;= c</code> (and similarly for the other comparisons)."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 3, "last_activity_date": 1521895786, "last_edit_date": 1521895786, "creation_date": 1521895399, "answer_id": 49464817, "question_id": 49464632, "link": "https://stackoverflow.com/questions/49464632/convert-string-of-digits-to-int-in-haskell/49464817#49464817", "title": "convert string of digits to int in Haskell", "body": "<p>The main problem here I think is that you let <code>scanChar :: Char -&gt; Int</code> return both a zero for the zero character (<code>'0'</code>) as well as for other characters. As a result the <code>scanString</code> has to include extra logic and this makes it only more complex.</p>\n\n<p>So we can clean the <code>scanChar</code> by for instance returning a <code>-1</code> (or we could let it return a <code>Maybe Int</code> and let it return <code>Nothing</code>, regardless how you exactly specify it, the key is to try to encapsulate the checking logic in one function, such that we no longer have to care about it). So for example:</p>\n\n<pre><code>scanChar :: Char -&gt; Int\nscanChar c | '0' &lt;= c &amp;&amp; c &lt;= '9' = fromEnum c - fromEnum '0'\n           | otherwise = -1\n</code></pre>\n\n<p>So now we can encapsulate all the digit parsing logic in <code>scanChar</code>. Now we still need to implement <code>scanString :: String -&gt; Int</code>. This can be done by writing an extra function that works with an accumulator. For example:</p>\n\n<pre><code>scanString :: String -&gt; Int\nscanString = go 0\n    where go a s = ...\n</code></pre>\n\n<p>So here <code>go</code> acts as a function to emulate some sort of <code>while</code> loop. The <code>a</code> parameter is the <em>accumulator</em>, a parameter we pass through recursive calls and each time we can update it with more data. Initially we set it to zero.</p>\n\n<p>The <code>go</code> function has basically three cases:</p>\n\n<ul>\n<li>the end of the string is reached, we can return the accumulator;</li>\n<li>the first character of the string is not a digit, we return <code>0</code>; and</li>\n<li>the first character of the string is a digit, we multiply the accumulator with <code>10</code>, add the parsed value, and perform recursion on the tail of the string.</li>\n</ul>\n\n<p>We can thus implement those three cases like:</p>\n\n<pre><code>scanString :: String -&gt; Int\nscanString = go 0\n    where go a [] = a\n          go a (x:xs) | 0 &lt;= sc &amp;&amp; sc &lt;= 9 = go (10*a+sc) xs\n                      | otherwise = 0\n              where sc = scanChar x\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 21654, "user_id": 107331, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/cf6d0868b2b4c69bac3e6f265a32b6a7?s=128&d=identicon&r=PG", "display_name": "Daniel Martin", "link": "https://stackoverflow.com/users/107331/daniel-martin"}, "is_accepted": false, "score": 1, "last_activity_date": 1521895687, "creation_date": 1521895687, "answer_id": 49464867, "question_id": 49464632, "link": "https://stackoverflow.com/questions/49464632/convert-string-of-digits-to-int-in-haskell/49464867#49464867", "title": "convert string of digits to int in Haskell", "body": "<p>So you're limited by the specification of the problem that the outermost question be of type <code>String -&gt; Int</code>, but that doesn't mean that your helper function <code>scanChar</code> can't return <code>Maybe Int</code>.</p>\n\n<p>So let's look at doing that:</p>\n\n<pre><code>scanChar :: Char -&gt; Maybe Int\nscanChar c\n  | 48 &lt;= fromEnum c &amp;&amp; fromEnum c &lt;= 57 = Just $ (fromEnum c) - fromEnum '0'\n  | otherwise = Nothing\n</code></pre>\n\n<p>Now, using the approach in the other answer:</p>\n\n<pre><code>scanString :: String -&gt; Int\nscanString = go 0\n    where go a [] = a\n          go a (x:xs) = case (scanChar x) of\n                          Nothing -&gt; 0\n                          Just d -&gt; go (10*a + d) xs\n              where sc = scanChar x\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "is_accepted": false, "score": 1, "last_activity_date": 1521896717, "last_edit_date": 1521896717, "creation_date": 1521896094, "answer_id": 49464930, "question_id": 49464632, "link": "https://stackoverflow.com/questions/49464632/convert-string-of-digits-to-int-in-haskell/49464930#49464930", "title": "convert string of digits to int in Haskell", "body": "<p>Why not </p>\n\n<pre><code>scanString :: String -&gt; Int\nscanString x = if all (`elem` \"0123456789\") x\n                 then read x :: Int\n                 else 0\n</code></pre>\n\n<p>Note: it will not read negative integers.</p>\n\n<p>Or:</p>\n\n<pre><code>import Data.Char (isDigit)\nscanString' :: String -&gt; Int\nscanString' x = if all isDigit x\n                then read x :: Int\n                else 0\n</code></pre>\n\n<p>Also a <a href=\"https://stackoverflow.com/a/30030649/1100107\">simple solution here</a> using <code>readMaybe</code>. </p>\n"}, {"tags": [], "owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "is_accepted": false, "score": 0, "last_activity_date": 1522021862, "creation_date": 1522021862, "answer_id": 49482189, "question_id": 49464632, "link": "https://stackoverflow.com/questions/49464632/convert-string-of-digits-to-int-in-haskell/49482189#49482189", "title": "convert string of digits to int in Haskell", "body": "<p>You can make the following into a function with one parameter that is a string. This function will take only digits out of the string and pack them into another string which is then then converted.</p>\n\n<pre><code> [read [d | d &lt;- \"12a\", elem d \"1234567890\"] :: Int] !! 0\n</code></pre>\n\n<p>Yields 12</p>\n"}], "owner": {"reputation": 35, "user_id": 9543584, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4496895b92be3542de262dd179bba444?s=128&d=identicon&r=PG&f=1", "display_name": "user376127", "link": "https://stackoverflow.com/users/9543584/user376127"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3711, "favorite_count": 0, "accepted_answer_id": 49464817, "answer_count": 4, "score": 2, "last_activity_date": 1522021862, "creation_date": 1521894165, "question_id": 49464632, "link": "https://stackoverflow.com/questions/49464632/convert-string-of-digits-to-int-in-haskell", "title": "convert string of digits to int in Haskell", "body": "<p>I am trying to write this function in Haskell called scanString, which takes a string and convert it into int if it's composed of only digits and should return 0 otherwise. </p>\n\n<p>For example, scanString \"123\" = 123 but scanString \"12a\" = 0.</p>\n\n<p>Here's my implementation so far: </p>\n\n<pre><code>scanChar :: Char -&gt; Int\nscanChar c\n  | 48 &lt;= fromEnum c &amp;&amp; fromEnum c &lt;= 57 = (fromEnum c) - fromEnum '0'\n  | otherwise = 0\n\nscanString :: String -&gt; Int\nscanString str = case str of\n  [] -&gt; 0\n  x:xs\n    | 48 &lt;= fromEnum x &amp;&amp; fromEnum x &lt;= 57 -&gt; \n      ((scanChar x) * (10 ^ ((length str) -1 ))) + scanString xs\n    | otherwise -&gt; 0\n</code></pre>\n\n<p>This code does not do the right thing as scanString \"3a\" would give 30.</p>\n\n<p>Is there a way (like in Java or Python) where one can simply terminate a function and return a value? Of course, advice on the implementation on this function would be awesome!</p>\n\n<p>Thanks in advance!</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1521878993, "post_id": 49462338, "comment_id": 85928043, "body": "You should definitely adjust this post so that the grammar was correct and the code was <i>in the post</i> and formatted nicely. I will then gladly help you solve your predicaments."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1521886979, "post_id": 49462338, "comment_id": 85929934, "body": "Complete what function? What is the expected behavior?"}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1521888714, "post_id": 49462338, "comment_id": 85930450, "body": "Hello, I&#39;d recommend checking out the <a href=\"https://stackoverflow.com/help\">Help Center</a> on how to ask questions. Also, take a look at some of the other questions asked here to get a rough idea on what format your questions should be in, then try asking again."}, {"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 1, "creation_date": 1521896823, "post_id": 49462338, "comment_id": 85932908, "body": "Your question looks much better after your edit. I&#39;ve fixed a few things in it and voted to reopen."}], "answers": [{"tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": false, "score": 0, "last_activity_date": 1521927392, "creation_date": 1521927392, "answer_id": 49470197, "question_id": 49462338, "link": "https://stackoverflow.com/questions/49462338/how-to-understand-someints-int-ints/49470197#49470197", "title": "How to understand &quot;SomeInts Int Ints&quot;?", "body": "<p>You are asking a good style question with respect to when to use an explicit constructor, <code>otherwise</code>, or perhaps <code>_</code>.  Let's say we have your data type:</p>\n\n<pre><code>data Ints = NoInts | SomeInts Int Ints\n</code></pre>\n\n<p>And you'd like to perform some operation.  Which operation you are performing will dictate what solution you should probably use.  For example, if you are just making a boolean check to see if the constructor is <code>NoInts</code> or not then a wild card is wise:</p>\n\n<pre><code>noInts :: Ints -&gt; Bool\nnoInts x =\n  case x of\n    NoInts -&gt; True\n    _      -&gt; False\n</code></pre>\n\n<p>Notice we use <code>_</code> instead of <code>otherwise</code> because <code>otherwise</code> is just a variable name. If you turned on warnings the there are two you'd likely see 1. Shadowed definition of <code>otherwise</code> since in your pattern <code>otherwise = x</code> but in the Prelude <code>otherwise = True</code>.  2. Unused variable <code>otherwise</code> since the expression <code>False</code> doesn't use it.</p>\n\n<p>All this said, there are other cases where it is better to explicitly match on the constructor.  Let's say you were performing some computation:</p>\n\n<pre><code>someComputation :: Ints -&gt; Int\nsomeComputation x =\n  case x of\n    SomeInts x xs -&gt; x + someComputation xs\n    NoInts   -&gt; 0\n</code></pre>\n\n<p>Now if you expand the definition of <code>Ints</code> to include another constructor, say <code>| PerhapsInts [Int]</code> you'll get a warning at <code>someComputation</code> - thus the compiler will tell you where in your code this new constructor should be considered.  If you had used <code>_ -&gt; 0</code> for the second case then the compiler wouldn't give such a warning and it is hard to leverage the compiler when adding features or refactoring.</p>\n"}], "owner": {"reputation": 23, "user_id": 9543629, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8e12e381f55e2a477eaf70a5829fe09?s=128&d=identicon&r=PG&f=1", "display_name": "learner", "link": "https://stackoverflow.com/users/9543629/learner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 115, "favorite_count": 1, "answer_count": 1, "score": -5, "last_activity_date": 1521927392, "creation_date": 1521876556, "last_edit_date": 1521896599, "question_id": 49462338, "link": "https://stackoverflow.com/questions/49462338/how-to-understand-someints-int-ints", "title": "How to understand &quot;SomeInts Int Ints&quot;?", "body": "<p>This is my code on Haskell. </p>\n\n<pre><code>module CustomLists where\n\n-- | A list of Int elements\ndata Ints = NoInts | SomeInts Int Ints\n  deriving Show\n\n-- Examples:\nints :: Ints\nints = SomeInts 1 (SomeInts 2 (SomeInts 3 NoInts))\n\n-- | noInts\n-- Examples:\n-- &gt;&gt;&gt; noInts NoInts\n-- True\n-- &gt;&gt;&gt; noInts ints\n-- False\nnoInts :: Ints -&gt; Bool\nnoInts x = case x of\n NoInts -&gt; True\n otherwise -&gt; False\n</code></pre>\n\n<p>Should I use 'otherwise' here? Is there a better or more specific way to write the function?</p>\n"}, {"tags": ["haskell", "opengl", "glut"], "comments": [{"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521877811, "post_id": 49462274, "comment_id": 85927671, "body": "I&#39;m afraid OpenGL is not a GUI and this is not possible. So what is the purpose of this callback ? Otherwise is there something to create buttons and use the mouse callback with the help of the position of the cursor ?.."}], "answers": [{"comments": [{"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521892822, "post_id": 49464150, "comment_id": 85931706, "body": "Ok, thank you. Finally I&#39;ve found another solution: I use <code>attachMenu</code> to create some menus. That works fine."}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521893181, "post_id": 49464150, "comment_id": 85931838, "body": "So I guess the `&quot;Tablet button&quot; is also some type of hardware ?"}, {"owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "reply_to_user": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521893900, "post_id": 49464150, "comment_id": 85932088, "body": "GLUT is mainly about talking to hardware. Either peripherals, speakers (?) or graphics cards."}, {"owner": {"reputation": 149158, "user_id": 524368, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/oZ8Up.png?s=128&g=1", "display_name": "datenwolf", "link": "https://stackoverflow.com/users/524368/datenwolf"}, "edited": false, "score": 0, "creation_date": 1521894934, "post_id": 49464150, "comment_id": 85932365, "body": "@DanRobertson: Actually GLUT is a extremly simplistic framework to create bare bones OpenGL applications. It creates windows and OpenGL contexts for you, does have very limited support for showing popup menus and allows you to register callbacks for a very narrow set of events. It was never meant for developing &quot;serious&quot; applications, but rather provide a scaffolding for quick and dirty OpenGL demo hacks, or if you want to show off specific functions of a library that interfaces with OpenGL. <i>Don&#39;t use it in anything serious!</i>"}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521894945, "post_id": 49464150, "comment_id": 85932369, "body": "Ok, so I wasted my time with these callbacks. Fortunately, <code>attachMenu</code> is my savior :-)"}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "reply_to_user": {"reputation": 149158, "user_id": 524368, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/oZ8Up.png?s=128&g=1", "display_name": "datenwolf", "link": "https://stackoverflow.com/users/524368/datenwolf"}, "edited": false, "score": 0, "creation_date": 1521905750, "post_id": 49464150, "comment_id": 85935695, "body": "@datenwolf I find you&#39;re a bit hard with OpenGL/GLUT (I don&#39;t mean you&#39;re wrong). They allow nice 3D animations even so. I&#39;m also using the R package <code>rgl</code> for 3D anims,  it has some advantages but it renders the scenes very slowly as compared to Haskell. Of course this is not for GUI development."}, {"owner": {"reputation": 149158, "user_id": 524368, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/oZ8Up.png?s=128&g=1", "display_name": "datenwolf", "link": "https://stackoverflow.com/users/524368/datenwolf"}, "reply_to_user": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521913982, "post_id": 49464150, "comment_id": 85938341, "body": "@St&#233;phaneLaurent: I <i>love</i> OpenGL, and there&#39;s nothing wrong with it. It&#39;s GLUT which I love to diss, because it&#39;s such a widely misused library. And for some reason (I guess it&#39;s the examples in the OpenGL Red Book) <b>a lot</b> of people are under the impression that for some reason GLUT was kind of a vital part of OpenGL itself or the OpenGL ecosystem and that you always had to use it. I&#39;ve seen oh so many programs using Qt, GTK, plain Win32 or similar that threw a <code>glutInit</code>/<code>glutInitDisplayMode</code> somewhere at the beginning of the main function and then never use it again."}], "tags": [], "owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "is_accepted": true, "score": 2, "last_activity_date": 1521891021, "creation_date": 1521891021, "answer_id": 49464150, "question_id": 49462274, "link": "https://stackoverflow.com/questions/49462274/dialog-and-button-callback-in-haskell-opengl/49464150#49464150", "title": "Dialog and button callback in Haskell OpenGL", "body": "<p>A dial and button box is not a dialog box. It\u2019s a special purpose type of hardware, like a mouse, keyboard, joystick, or steering wheel. Eg <a href=\"http://simracinghardware.com/\" rel=\"nofollow noreferrer\">this company makes some</a>.</p>\n\n<p>Glut is not a gui library like gtk. It lets you get user input and draw things on the screen. You need to figure out exactly how to draw all your user interface components if you want to use glut</p>\n"}], "owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 113, "favorite_count": 0, "accepted_answer_id": 49464150, "answer_count": 1, "score": 0, "last_activity_date": 1521891021, "creation_date": 1521876058, "last_edit_date": 1521882550, "question_id": 49462274, "link": "https://stackoverflow.com/questions/49462274/dialog-and-button-callback-in-haskell-opengl", "title": "Dialog and button callback in Haskell OpenGL", "body": "<p><a href=\"https://hackage.haskell.org/package/GLUT-2.7.0.13/docs/Graphics-UI-GLUT-Callbacks-Window.html#g:14\" rel=\"nofollow noreferrer\">Graphics.UI.GLUT</a> has a <em>Dial and Button callback</em>. I don't find any example of use of this callback. I wanted to have one because currently I use the keyboard and the mouse callbacks and this is not enough and not user-friendly.</p>\n\n<p>I've tried to do one such callback. In my program:</p>\n\n<pre><code>dial :: IORef GLdouble -&gt; DialAndButtonBoxCallback\ndial zoom index =\n  case index of\n    DialAndButtonBoxDial 1 1 -&gt; zoom $~! (+1)\n    _                        -&gt; return ()\n</code></pre>\n\n<p>Then I expect to see a button (button <code>1</code>) in the OpenGL window which would increment <code>zoom</code> when I press on this button (<code>zoom $~! (+1)</code> zooms the graphic, I use it in the keyboard callback currently, no problem with that).</p>\n\n<p>Then in my <code>main</code> file:</p>\n\n<pre><code>  zoom &lt;- newIORef 0.0\n  dialAndButtonBoxCallback $= Just (dial zoom)\n</code></pre>\n\n<p>The code compiles. But when I run the program, there's no dialog box appearing anywhere.</p>\n\n<p>I would appreciate any help. Maybe I have to create a dialog box first ? I don't see anything like this in the documentation.</p>\n"}, {"tags": ["haskell", "functional-programming", "non-exhaustive-patterns"], "comments": [{"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 1, "creation_date": 1521878065, "post_id": 49462208, "comment_id": 85927732, "body": "<code>(x:xs)</code> assumes the list is not empty."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1521879802, "post_id": 49462208, "comment_id": 85928232, "body": "Turning on warning with <code>-Wall</code> would spot the issue."}], "answers": [{"comments": [{"owner": {"reputation": 35, "user_id": 9543584, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4496895b92be3542de262dd179bba444?s=128&d=identicon&r=PG&f=1", "display_name": "user376127", "link": "https://stackoverflow.com/users/9543584/user376127"}, "edited": false, "score": 0, "creation_date": 1521878406, "post_id": 49462506, "comment_id": 85927856, "body": "I see! Thanks for the explanation! However, I don&#39;t think your code works as in the recursive case, tails takes the same parameter. But this can easily fixed using case with pattern matching."}, {"owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "reply_to_user": {"reputation": 35, "user_id": 9543584, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4496895b92be3542de262dd179bba444?s=128&d=identicon&r=PG&f=1", "display_name": "user376127", "link": "https://stackoverflow.com/users/9543584/user376127"}, "edited": false, "score": 0, "creation_date": 1521878520, "post_id": 49462506, "comment_id": 85927902, "body": "Ah, sorry. Fixed."}, {"owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "reply_to_user": {"reputation": 35, "user_id": 9543584, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4496895b92be3542de262dd179bba444?s=128&d=identicon&r=PG&f=1", "display_name": "user376127", "link": "https://stackoverflow.com/users/9543584/user376127"}, "edited": false, "score": 0, "creation_date": 1521878641, "post_id": 49462506, "comment_id": 85927946, "body": "I also added a simper version."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1523498077, "post_id": 49462506, "comment_id": 86588897, "body": "The first version given should be removed. Computing <code>length xs == 0</code> will run down the entire list when you only need to look at the very top, and will also not work for infinite lists. It is also unidiomatic. The second version is the correct one."}, {"owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "reply_to_user": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1523501906, "post_id": 49462506, "comment_id": 86589747, "body": "@HTNW Fixed. Thank you."}], "tags": [], "owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "is_accepted": true, "score": 3, "last_activity_date": 1523501895, "last_edit_date": 1523501895, "creation_date": 1521878046, "answer_id": 49462506, "question_id": 49462208, "link": "https://stackoverflow.com/questions/49462208/non-exhaustive-patterns-haskell/49462506#49462506", "title": "Non-exhaustive patterns, Haskell", "body": "<p>The pattern is non-exhaustive because it can't accept <code>[]</code>. A list has form of either <code>[]</code> or <code>a:as</code>, where <code>a</code> is the leading element and <code>as</code> is the list of the trailing elements. So the pattern <code>x:xs</code> matches only if the list has a leading element. Fixing that gives:</p>\n\n<pre><code>tails :: [Char] -&gt; [[Char]]\ntails xs\n    | length xs == 0 = [\"\"]\n    | otherwise = let (_:xs') = xs in xs : tails xs'\n</code></pre>\n\n<p>And then <code>xs</code> accepts the list regardless of its form.\nBut this is inefficient due to <code>length</code>, and doesn't work for infinite lists.</p>\n\n<p>This should fully work, which directly does pattern mathing:</p>\n\n<pre><code>tails :: [Char] -&gt; [[Char]]\ntails [] = [\"\"]\ntails xs@(_:xs') = xs : tails xs'\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "is_accepted": false, "score": 0, "last_activity_date": 1523835475, "last_edit_date": 1523835475, "creation_date": 1522038927, "answer_id": 49484058, "question_id": 49462208, "link": "https://stackoverflow.com/questions/49462208/non-exhaustive-patterns-haskell/49484058#49484058", "title": "Non-exhaustive patterns, Haskell", "body": "<p>What about trying this or at least get some logic from it. It works well.\nIt's got a helper function to convert the string into a list of separate characters, for example \"abc\" becomes [\"a\",\"b\",\"c\"]. It is just less complicated to process them like that and it becomes necessary to collect distinct strings in the result list. There are two functions in the function set and a third is warranted to call the primary function with one parameter. The primary function is on one line but uses guards.</p>\n\n<pre><code>ca = [[c] | c &lt;- \"abcdef\"]\nf (l1,ls) | null ls = l1++[[]] | True = f ( l1 ++ [concat ls], (tail ls))\nf ([],ca)\n[\"abcdef\",\"bcdef\",\"cdef\",\"def\",\"ef\",\"f\",\"\"]\n</code></pre>\n\n<p><strong>Edit 4/4/2018</strong>\nI was wrong. The list parameter does not have to be made into a list before hand. By not doing so, the function becomes simpler by removing the concat function and changing the parameter list from tuple to individual removed lots or parentheses.</p>\n\n<pre><code>fs l1 ls = if null ls then l1++[\"\"] else fs (l1++[ls]) (tail ls)\n</code></pre>\n\n<p>It is invoked differently, too.</p>\n\n<p>fs [] \"Hello!\"</p>\n\n<p>This, by itself, produced the right results. </p>\n\n<p><strong>Edit/add 4/11/2018</strong></p>\n\n<p>What keeps recurring (no pun) is dependence on <code>tail</code> when Haskell splits up input into head and tail with <code>(x:xs)</code> they are ready to use. Here is a basic recursive function that uses <code>(x:xs)</code> only for head and tail. I produces all tails of input list including null.</p>\n\n<pre><code>t [] = [\"\"]; t (x:xs) = [x:xs] ++ t xs\n</code></pre>\n\n<p>And yet another that takes a list as the only parameter.</p>\n\n<pre><code>t ls = [drop n ls|n&lt;-[0..length ls - 1]]\n</code></pre>\n"}], "owner": {"reputation": 35, "user_id": 9543584, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4496895b92be3542de262dd179bba444?s=128&d=identicon&r=PG&f=1", "display_name": "user376127", "link": "https://stackoverflow.com/users/9543584/user376127"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 184, "favorite_count": 0, "accepted_answer_id": 49462506, "answer_count": 2, "score": 1, "last_activity_date": 1523835475, "creation_date": 1521875485, "last_edit_date": 1522045578, "question_id": 49462208, "link": "https://stackoverflow.com/questions/49462208/non-exhaustive-patterns-haskell", "title": "Non-exhaustive patterns, Haskell", "body": "<p>I am trying to write the function tails, which converts a string into a list of strings in the following way: </p>\n\n<pre><code>tails \"abc\" = [\"abc\", \"bc\", \"c\", \"\"]\n</code></pre>\n\n<p>Here is my implementation:</p>\n\n<pre><code>tails :: [Char] -&gt; [[Char]]\ntails (x:xs)\n  | length (x:xs) == 0 = [\"\"]\n  | otherwise = (x:xs) : tails xs\n</code></pre>\n\n<p>As the title suggests, there are non-exhaustive patterns in this function. Unfortunately, I don't see how so. </p>\n\n<p>I am new to Haskell... Any help would be appreciated!</p>\n"}, {"tags": ["haskell", "postgresql-simple"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1521854244, "post_id": 49459104, "comment_id": 85923461, "body": "Your type is very strange. Why all those <code>Integer</code>s? FYI, multiple choice for sex is not likely to work well for mammals."}], "answers": [{"comments": [{"owner": {"reputation": 1601, "user_id": 259517, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/GtRrC.jpg?s=128&g=1", "display_name": "Tae", "link": "https://stackoverflow.com/users/259517/tae"}, "edited": false, "score": 0, "creation_date": 1521905531, "post_id": 49459218, "comment_id": 85935600, "body": "Thanks! I thought <code>import Database.PostgreSQL.Simple (ToRow)</code> was the same. I need to read a little bit more about modules \ud83d\ude05"}, {"owner": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "reply_to_user": {"reputation": 1601, "user_id": 259517, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/GtRrC.jpg?s=128&g=1", "display_name": "Tae", "link": "https://stackoverflow.com/users/259517/tae"}, "edited": false, "score": 1, "creation_date": 1521916907, "post_id": 49459218, "comment_id": 85939414, "body": "That import only bring the type class into scope(even if the module exported both the class and its methods), and that only exists in the type-level namespace. Haskell has a different namespace for types and values."}, {"owner": {"reputation": 1601, "user_id": 259517, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/GtRrC.jpg?s=128&g=1", "display_name": "Tae", "link": "https://stackoverflow.com/users/259517/tae"}, "edited": false, "score": 0, "creation_date": 1521924085, "post_id": 49459218, "comment_id": 85941852, "body": "I see! Thank you again!"}], "tags": [], "owner": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "is_accepted": true, "score": 7, "last_activity_date": 1521844888, "creation_date": 1521844888, "answer_id": 49459218, "question_id": 49459104, "link": "https://stackoverflow.com/questions/49459104/torow-is-not-a-visible-method-of-class-torow/49459218#49459218", "title": "\u2018toRow\u2019 is not a (visible) method of class \u2018ToRow\u2019", "body": "<p>The module <code>Database.PostgreSQL.Simple</code> only exports the type classes <code>ToRow</code> and <code>FromRow</code>, without any of their methods.  </p>\n\n<p>For those methods you need to import the modules <code>Database.PostgreSQL.Simple.ToRow</code> and <code>Database.PostgreSQL.Simple.FromRow</code>, as is done in the sample you linked to.</p>\n"}], "owner": {"reputation": 1601, "user_id": 259517, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/GtRrC.jpg?s=128&g=1", "display_name": "Tae", "link": "https://stackoverflow.com/users/259517/tae"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 696, "favorite_count": 0, "accepted_answer_id": 49459218, "answer_count": 1, "score": 1, "last_activity_date": 1521844888, "creation_date": 1521844133, "question_id": 49459104, "link": "https://stackoverflow.com/questions/49459104/torow-is-not-a-visible-method-of-class-torow", "title": "\u2018toRow\u2019 is not a (visible) method of class \u2018ToRow\u2019", "body": "<p>I'm learning Haskell so I decided to write a web app. I did choose PostgreSQL Simple to work with the database. I successfully connected to it and tried simple math operations but I'm having problems trying to map records to data. This code doesn't compile:</p>\n\n<pre><code>module Handlers.SurveyReplies where\n\nimport Database.PostgreSQL.Simple\n\ndata AnswersSet = AnswersSet {\n  sex \u2237 Integer,\n  ageRange \u2237 Integer,\n  country \u2237 Integer,\n  commune \u2237 Maybe Integer\n} deriving (Show)\n\ninstance FromRow AnswersSet where\n  fromRow = AnswersSet &lt;$&gt; field &lt;*&gt; field &lt;*&gt; field &lt;*&gt; field\n\ninstance ToRow AnswersSet where\ntoRow r = [toField (sex r), toField (ageRange r), toField (country r), toField (commune r)]\n</code></pre>\n\n<p>The error is:</p>\n\n<pre><code>    \u2018fromRow\u2019 is not a (visible) method of class \u2018FromRow\u2019\n   |\n17 |   fromRow = AnswersSet &lt;$&gt; field &lt;*&gt; field &lt;*&gt; field &lt;*&gt; field\n   |   ^^^^^^^\n</code></pre>\n\n<p>And also:</p>\n\n<pre><code>    \u2018toRow\u2019 is not a (visible) method of class \u2018ToRow\u2019\n   |\n20 |         toRow r = [toField (sex r), toField (ageRange r), toField (country r), toField (commune r)]\n   |         ^^^^^\n</code></pre>\n\n<p>I looked some sample projects (<a href=\"https://github.com/keoko/postgresql-simple-examples/blob/master/Todo.hs#L27\" rel=\"nofollow noreferrer\">this among others</a>) but I don't get what I'm doing wrong :(</p>\n"}, {"tags": ["postgresql", "haskell", "yesod"], "owner": {"reputation": 162, "user_id": 1739676, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/8608f58b885cb0103935f435e6a438be?s=128&d=identicon&r=PG", "display_name": "synthcat", "link": "https://stackoverflow.com/users/1739676/synthcat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 80, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1521845745, "creation_date": 1521837018, "last_edit_date": 1592644375, "question_id": 49457864, "link": "https://stackoverflow.com/questions/49457864/yesod-migrations-on-existing-postgresql-databases-alter-vs-drop", "title": "Yesod migrations on existing PostgreSQL databases: ALTER vs. DROP", "body": "<p>After a few months, I am updating an existing service + db built using Yesod+Persistent, and running into a problem with the migrations.</p>\n<p>In the past, I always got the following migrations during a deploy, which worked fine.</p>\n<blockquote>\n<p>ALTER TABLE &quot;collected_highway&quot; ALTER COLUMN &quot;admin_unit&quot; TYPE varchar(8);</p>\n<p>ALTER TABLE &quot;collected_highway&quot; ALTER COLUMN &quot;date&quot; SET DEFAULT Now(); []</p>\n</blockquote>\n<p>But now I am suddenly receiving the following</p>\n<blockquote>\n<pre><code>ALTER TABLE &quot;collected_highway&quot; ALTER COLUMN &quot;admin_unit&quot; TYPE varchar(8);\n</code></pre>\n<p>*** ALTER TABLE &quot;collected_highway&quot; DROP COLUMN &quot;date&quot;;</p>\n</blockquote>\n<p>This happens with existing PostgreSQL databases for the app, even if I delete the contents of the column.</p>\n<p>Note that it does not happen in my local environment via &quot;stack exec yesod devel&quot;, even when using the same remote database.</p>\n<p>Here is the model in question.  It has not changed for quite a while.</p>\n<pre><code>CollectedHighway\n  highway     Highway\n  userId      Int64\n  highwayId   Int64\n  adminUnit   Text sqltype=varchar(8)\n  date        UTCTime default=Now()\n  UniqueCH    userId highway\n</code></pre>\n<p>yesod-bin version: 1.5.2.3</p>\n<p>Any idea why I am getting a DROP instead of an ALTER all of a sudden?  It's a problem because it requires manual intervention, and will probably cause data loss.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 3730, "user_id": 652301, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3fa42db9e3dd408f0de546a82d67c016?s=128&d=identicon&r=PG&f=1", "display_name": "sous2817", "link": "https://stackoverflow.com/users/652301/sous2817"}, "edited": false, "score": 1, "creation_date": 1521826355, "post_id": 49455400, "comment_id": 85913660, "body": "probably not a duplicate, but have you had a start here: <a href=\"https://stackoverflow.com/questions/1012573/getting-started-with-haskell?rq=1\" title=\"getting started with haskell\">stackoverflow.com/questions/1012573/&hellip;</a>"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 3730, "user_id": 652301, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3fa42db9e3dd408f0de546a82d67c016?s=128&d=identicon&r=PG&f=1", "display_name": "sous2817", "link": "https://stackoverflow.com/users/652301/sous2817"}, "edited": false, "score": 0, "creation_date": 1521834185, "post_id": 49455400, "comment_id": 85917434, "body": "I agree with @sous2817. Pattern matching is a fundamental part of the language that should be covered in the first few pages of any Haskell tutorial. If you haven&#39;t read about it yet, you probably shouldn&#39;t be asking Haskell questions here yet."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 3, "creation_date": 1521834248, "post_id": 49455400, "comment_id": 85917456, "body": "I&#39;m voting to close this question as off-topic because SO is not the place to learn the very basics of a new programming language. A book or tutorial would be more appropriate."}, {"owner": {"reputation": 1403, "user_id": 1748746, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/ZMrp9.png?s=128&g=1", "display_name": "Anthony Raimondo", "link": "https://stackoverflow.com/users/1748746/anthony-raimondo"}, "edited": false, "score": 0, "creation_date": 1521835145, "post_id": 49455400, "comment_id": 85917844, "body": "Calling it a &quot;object&quot;... criminal"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 1403, "user_id": 1748746, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/ZMrp9.png?s=128&g=1", "display_name": "Anthony Raimondo", "link": "https://stackoverflow.com/users/1748746/anthony-raimondo"}, "edited": false, "score": 0, "creation_date": 1521854504, "post_id": 49455400, "comment_id": 85923514, "body": "@AnthonyRaimondo Not really &quot;criminal&quot;, just a terminology slip (Jono: you can simply call it &quot;a <code>Node</code> value&quot;)."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 1403, "user_id": 1748746, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/ZMrp9.png?s=128&g=1", "display_name": "Anthony Raimondo", "link": "https://stackoverflow.com/users/1748746/anthony-raimondo"}, "edited": false, "score": 0, "creation_date": 1521870915, "post_id": 49455400, "comment_id": 85926255, "body": "@AnthonyRaimondo Why not call something an &quot;object&quot; if this term is not occupied and the concept is aligned in meaning with other usages of &quot;object&quot;, both in programming and in everyday life? Actually, this <i>thing</i> in question may have a value, but it is not yet <i>the</i> value; we do not call functions or string literals values, do we? And we can barely destructure a value; value is dumb and terminal, unlike an <i>object</i>.    I actually go around calling things &quot;objects&quot; in Haskell, consciously, and I would like not to be stigmatized as a criminal (or a fool) on the basis of that alone."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1521896687, "post_id": 49455400, "comment_id": 85932869, "body": "@IgnatInsarov While I agree with your broader point, we do use &quot;value&quot;, as a catch-all term, to talk about functions, strings and things we can destructure."}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1521899373, "post_id": 49455400, "comment_id": 85933600, "body": "@IgnatInsarov No, I would absolutely describe strings, functions, and compound structures as values. That&#39;s pretty standard. I&#39;m also happy to call things objects in Haskell though, with the understanding that this doesn&#39;t carry so of the specific meaning from object oriented programming, but is simply the everyday or mathematical usage of the word. But object vs value as a distinction between things with structure and things that are &quot;dumb and terminal&quot; is a very Java-ish concept, not useful in Haskell. Object and value are mostly synonyms to me when I&#39;m in Haskell mode."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1521904652, "post_id": 49455400, "comment_id": 85935323, "body": "@duplode It is very reasonable to consider all these things &quot;values&quot; insofar as they possess a &quot;type&quot;. But from the point of view of actual programming, as opposed to type theorizing, I would not call a function or a string literal a value, but rather speak of the &quot;value of a function&quot; and the &quot;value of a string literal&quot; (same word \u2014 different terms, actually) while reserving other terms for syntactic representations."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1521905761, "post_id": 49455400, "comment_id": 85935698, "body": "@IgnatInsarov Indeed, &quot;value of a string literal&quot; is entirely appropriate if you need to be explicit with respect to syntax versus semantics. I don&#39;t think we have the same issue with &quot;value of a function&quot;, though: a Haskell function is really a value. (Also cf. <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch1.html#x6-100001.1\" rel=\"nofollow noreferrer\">sections 1.1 and 1.3 of the Report</a> which, value versus expression distinction aside, impose basically no restrictions on what can be regarded as values.)"}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1521906305, "post_id": 49455400, "comment_id": 85935884, "body": "@duplode Yes, as I said \u2014 different terms. Suppose <code>f x = \\y -&gt; x + y</code>. Then, the value of <code>f 10</code> is a function (in the type theory sense) which value at <code>3</code> is <code>13</code> (in real analysis sense). So we have a value of a value at a value. Which is why I would not always refer to a function as a value, but only do so in type theoretic context."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1521906676, "post_id": 49455400, "comment_id": 85935991, "body": "@IgnatInsarov I think we are talking about different things. You are saying &quot;<code>f 10</code> is (or denotes, if we want to be rigorous) the value of a function (evaluated at <code>10</code>)&quot;; I am saying &quot;<code>f</code> is (or denotes) a value&quot;."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1521918781, "post_id": 49455400, "comment_id": 85940085, "body": "@duplode, I think of objects as ways to organize program state. They pretty much always have a notion of object identity. Objects show up in Haskell implementation as &quot;heap objects&quot;. I think you could consider a value based on mutable variables and mutable arrays to be kind of objectish, but otherwise I don&#39;t think the Haskell language really has objects."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1521940740, "post_id": 49455400, "comment_id": 85945896, "body": "@dfeuer I tend to agree. The &quot;smart object&quot; versus &quot;dumb value&quot; opposition Ben addresses upthread appears to be a byproduct of taking this meaning of object as paradigmatic."}], "answers": [{"tags": [], "owner": {"reputation": 2863, "user_id": 2297560, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/948d4a17494b3c616a0873453b74670c?s=128&d=identicon&r=PG", "display_name": "user2297560", "link": "https://stackoverflow.com/users/2297560/user2297560"}, "is_accepted": true, "score": 7, "last_activity_date": 1521826907, "creation_date": 1521826907, "answer_id": 49455533, "question_id": 49455400, "link": "https://stackoverflow.com/questions/49455400/how-can-i-get-data-out-of-a-haskell-object/49455533#49455533", "title": "How can I get data out of a Haskell object?", "body": "<p>The most common method to get at the fields of a data type is to pattern match on the constructors. The <code>LValue</code> type has the three constructors <code>PlainL !Text</code>, <code>PlainLL !Text !Text</code>, and <code>TypedL !Text !Text</code>.</p>\n\n<pre><code>handleLValue lvalue =\n  case lvalue of\n    PlainL a    -&gt; ... do something with the value a here\n    PlainLL a b -&gt; ... do something with the values a and b here\n    TypedL a b  -&gt; ... ditto\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1521832577, "post_id": 49455542, "comment_id": 85916708, "body": "Perhaps it should be added that, when <code>x</code> does not actually contain <code>PlainL t</code> but is, say, <code>PlainLL t1 t2</code>, the <code>let</code> above will make the program crash. Instead, a proper <code>case</code> can handle all the possible constructors."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 2, "last_activity_date": 1521826927, "creation_date": 1521826927, "answer_id": 49455542, "question_id": 49455400, "link": "https://stackoverflow.com/questions/49455400/how-can-i-get-data-out-of-a-haskell-object/49455542#49455542", "title": "How can I get data out of a Haskell object?", "body": "<p>Here are the relevant types from <code>Data.RDF.Types</code>:</p>\n\n<pre><code>data Node = UNode !T.Text \n          | BNode !T.Text \n          | BNodeGen !Int \n          | LNode !LValue deriving (Generic,Show)\n\ndata LValue = PlainL !T.Text \n            | PlainLL !T.Text !T.Text \n            | TypedL !T.Text !T.Text deriving (Generic,Show)\n</code></pre>\n\n<p>So if you have</p>\n\n<pre><code>x = LNode (PlainL \"Stories from the Italian Poets: with Lives of the Writers, Volume 1\")\n</code></pre>\n\n<p>you just pattern-match on it:</p>\n\n<pre><code>let (LNode (PlainL t)) = x\nin t\n</code></pre>\n"}], "owner": {"reputation": 8964, "user_id": 584121, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/3c7af62d226bc7420d49128d03a5b139?s=128&d=identicon&r=PG", "display_name": "Jonathan", "link": "https://stackoverflow.com/users/584121/jonathan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 328, "favorite_count": 0, "accepted_answer_id": 49455533, "answer_count": 2, "score": 1, "last_activity_date": 1521826927, "creation_date": 1521826260, "question_id": 49455400, "link": "https://stackoverflow.com/questions/49455400/how-can-i-get-data-out-of-a-haskell-object", "title": "How can I get data out of a Haskell object?", "body": "<p>Haskell beginner here, sorry in advance for the dumb question. I'm coming from Python, and just wondering how I can get data (i.e. a string) out of a Haskell data type. </p>\n\n<p>Let's say I have an RDF graph as used by <code>rdf4h</code>, and I can get an <code>Node</code> object out of it. This is what it looks like when I <code>print</code> it: </p>\n\n<pre><code>LNode (PlainL \"Stories from the Italian Poets: with Lives of the Writers, Volume 1\")\n</code></pre>\n\n<p>How can I get the string value out of this? (I.e., \"Stories from the...\") I searched Hoogle for <code>:: Node -&gt; Text</code> but I can't seem to find anything. I also can't seem to find the appropriate function in <a href=\"https://hackage.haskell.org/package/rdf4h-3.0.1/docs/Data-RDF-Types.html#t:LValue\" rel=\"nofollow noreferrer\">Data.RDF.Types</a> or anywhere similar. I'm sure there's something really obvious that I'm missing here. </p>\n"}, {"tags": ["haskell", "sparse-matrix", "monads"], "comments": [{"owner": {"reputation": 2863, "user_id": 2297560, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/948d4a17494b3c616a0873453b74670c?s=128&d=identicon&r=PG", "display_name": "user2297560", "link": "https://stackoverflow.com/users/2297560/user2297560"}, "edited": false, "score": 3, "creation_date": 1521825486, "post_id": 49454057, "comment_id": 85913187, "body": "Note to library authors: if you want the ability to print debug info, use MonadLogger instead of MonadIO."}, {"owner": {"reputation": 20350, "user_id": 411944, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/7bf057b98d0652db34842d1817234853?s=128&d=identicon&r=PG", "display_name": "Reactormonk", "link": "https://stackoverflow.com/users/411944/reactormonk"}, "edited": false, "score": 1, "creation_date": 1521826814, "post_id": 49454057, "comment_id": 85913885, "body": "Offending statement: <a href=\"https://github.com/ocramz/sparse-linear-algebra/blob/84d4fbf7aeec75e77de9628443d87ecd96fe7908/src/Control/Iterative.hs#L184\" rel=\"nofollow noreferrer\">github.com/ocramz/sparse-linear-algebra/blob/&hellip;</a>"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1521826835, "post_id": 49454057, "comment_id": 85913899, "body": "This seems to be a very bleeding edge library: its last upload on Hackage is nine days ago! If you wish to use that library, you might be able to contact the developer (Marco Zocca) and ask him to remove the IO dependency. You can also point him to this question. This might be an actually reasonable use case for that <code>unsafe</code> function which should not be named, e.g. if IO is only needed to access an underlying pure C function. If it is used only for logging, IO is overkill."}, {"owner": {"reputation": 702, "user_id": 2890063, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/07aeeae7c14c12cefde16bf826eceb4a?s=128&d=identicon&r=PG", "display_name": "ocramz", "link": "https://stackoverflow.com/users/2890063/ocramz"}, "edited": false, "score": 1, "creation_date": 1523028732, "post_id": 49454057, "comment_id": 86405281, "body": "Thanks all for the comments. That MonadIO constraint is unsightly I agree and is due to some old debugging constructs; up until not so long ago the library didn&#39;t have many users which is why its rough edges are still exposed. I was hoping to have such discussions somewhere more appropriate like the <code>sparse-linear-algebra</code> issue tracker rather than by public shaming."}], "answers": [{"tags": [], "owner": {"reputation": 115, "user_id": 8925788, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c32a104e80abe1c8aeceb1a7f5553fd5?s=128&d=identicon&r=PG&f=1", "display_name": "Jamie Ballingall", "link": "https://stackoverflow.com/users/8925788/jamie-ballingall"}, "is_accepted": true, "score": 1, "last_activity_date": 1523120472, "creation_date": 1523120472, "answer_id": 49709797, "question_id": 49454057, "link": "https://stackoverflow.com/questions/49454057/monadio-to-maybe/49709797#49709797", "title": "MonadIO to Maybe", "body": "<p>Based on the comments it seems like:</p>\n\n<ol>\n<li>Once you're in <code>Monad IO</code> there is no escape. As such, the answer to the original newbie Haskeller question is \"you can't\"</li>\n<li>The library author, @ocramz, had existing plans to use <code>MonadLogger</code> and we may see something as part of an upcoming redesign</li>\n</ol>\n"}], "owner": {"reputation": 115, "user_id": 8925788, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c32a104e80abe1c8aeceb1a7f5553fd5?s=128&d=identicon&r=PG&f=1", "display_name": "Jamie Ballingall", "link": "https://stackoverflow.com/users/8925788/jamie-ballingall"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 181, "favorite_count": 0, "accepted_answer_id": 49709797, "answer_count": 1, "score": 3, "last_activity_date": 1523120472, "creation_date": 1521821657, "question_id": 49454057, "link": "https://stackoverflow.com/questions/49454057/monadio-to-maybe", "title": "MonadIO to Maybe", "body": "<p>I've been using HMatrix for linear algebra and it's <code>linearSolve</code> function has the straightforward (albeit terse) type:</p>\n\n<pre><code>linearSolve :: Field t =&gt; Matrix t -&gt; Matrix t -&gt; Maybe (Matrix t)\n</code></pre>\n\n<p>I'd like to try out the <code>sparse-linear-algebra</code> library and it's <code>&lt;\\&gt;</code> function (not the <code>&lt;\\&gt;</code> function in HMatrix), which has type:</p>\n\n<pre><code>(&lt;\\&gt;) :: (MonadIO m, MonadThrow m) =&gt; MatrixType v -&gt; v -&gt; m v\n</code></pre>\n\n<p>While I'd like to use the additional information that this provides, I'd like to start with just a drop-in replacement of type:</p>\n\n<pre><code>MatrixType v -&gt; v -&gt; Maybe v\n</code></pre>\n\n<p>so that I don't have rewrite my code all the way back up to <code>main</code>. How can I do that?</p>\n\n<p>I'm fairly new to Haskell and still at the \"Oh! I understand monads now. No! Wait! It's gone again\" phase.</p>\n\n<p>Thanks</p>\n"}, {"tags": ["list", "haskell"], "comments": [{"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521818184, "post_id": 49452848, "comment_id": 85908664, "body": "Why do you drop the 4 ? I don&#39;t understand the desired output."}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521818241, "post_id": 49452848, "comment_id": 85908712, "body": "Ah ok you truncate to the length of the shortest inner list ?"}, {"owner": {"reputation": 75, "user_id": 9528272, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-LlcC0iMkxZs/AAAAAAAAAAI/AAAAAAAAAAo/-9fjMqrVcm4/photo.jpg?sz=128", "display_name": "Janik Ti", "link": "https://stackoverflow.com/users/9528272/janik-ti"}, "reply_to_user": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521818311, "post_id": 49452848, "comment_id": 85908756, "body": "Not only the 4, the shortest list has two elements so the first list has 4 elements so we need to cut out 2. the 3 and 4."}, {"owner": {"reputation": 75, "user_id": 9528272, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-LlcC0iMkxZs/AAAAAAAAAAI/AAAAAAAAAAo/-9fjMqrVcm4/photo.jpg?sz=128", "display_name": "Janik Ti", "link": "https://stackoverflow.com/users/9528272/janik-ti"}, "reply_to_user": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521818497, "post_id": 49452848, "comment_id": 85908877, "body": "to your question: yes"}], "answers": [{"comments": [{"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 1, "creation_date": 1521846155, "post_id": 49453081, "comment_id": 85921654, "body": "This is a good example of where it\u2019s okay to use a partial function like <code>minimum</code>\u2014if the input is empty, then <code>minimum</code> will never be called, and the output will be empty. Unfortunately, because of <code>length</code>, this doesn\u2019t work on infinite lists like the <code>ZipList</code> solution does."}, {"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 0, "creation_date": 1521856856, "post_id": 49453081, "comment_id": 85923926, "body": "You can inline the <code>l</code> in your shorter code snippet to make it even shorter."}], "tags": [], "owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "is_accepted": true, "score": 5, "last_activity_date": 1521818431, "creation_date": 1521818431, "answer_id": 49453081, "question_id": 49452848, "link": "https://stackoverflow.com/questions/49452848/cut-inner-lists-to-equal-length-in-haskell/49453081#49453081", "title": "Cut inner lists to equal length in Haskell", "body": "<p>Is it what you want ?</p>\n\n<pre><code>truncateList :: [[a]] -&gt; [[a]]\ntruncateList list = map (\\x -&gt; take l x) list\n  where\n  l = minimum (map length list)\n</code></pre>\n\n<p>or, shorter, </p>\n\n<pre><code>truncateList :: [[a]] -&gt; [[a]]\ntruncateList list = map (take l) list\n  where\n  l = minimum (map length list)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 1, "creation_date": 1521846443, "post_id": 49456239, "comment_id": 85921724, "body": "This has the advantage of both avoiding partial functions and working correctly on infinite lists. As long as one of the input lists is finite (e.g. <code>[[1, 2], [3..], [4..]]</code>), it will produce a result (<code>[[1, 2], [3, 4], [4, 5]]</code>). If <i>all</i> of the input lists are infinite, it will only be productive up to the original number of inputs: <code>take 3 $ map (take 2) $ truncateList [[1..], [2..], [3..]]</code> terminates."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1521899550, "post_id": 49456239, "comment_id": 85933663, "body": "This version appears to choke on the input <code>[]</code>."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1521914437, "post_id": 49456239, "comment_id": 85938528, "body": "Fascinating. <code>sequenceA ([] :: [ZipList a])</code> evaluates to <code>ZipList (repeat [])</code>. Makes some sense, since <code>repeat</code> is the only reasonable implementation of <code>pure</code> for a ZipList, and not incorrect: transposing that should produce <code>[]</code>. But it&#39;s sorta hard to implement transpose in that way."}], "tags": [], "owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "is_accepted": false, "score": 4, "last_activity_date": 1521829748, "creation_date": 1521829748, "answer_id": 49456239, "question_id": 49452848, "link": "https://stackoverflow.com/questions/49452848/cut-inner-lists-to-equal-length-in-haskell/49456239#49456239", "title": "Cut inner lists to equal length in Haskell", "body": "<p>Since you want to zip together an arbitrary number of lists, stopping as soon as the shortest list \"runs out\", this looks like a job for ZipList.</p>\n\n<p>Let's start by wrapping each of the input lists in the ZipList wrapper type:</p>\n\n<pre><code>truncateList :: [[a]] -&gt; [[a]]\ntruncateList xs = let lists = map ZipList xs\n                      ...\n                  in ...\n</code></pre>\n\n<p>Now, we have <code>lists :: [ZipList a]</code>, and we wish to fold over that list somehow, combining all of the <code>ZipList a</code> values into a single ZipList where all the excess elements have been trimmed out. For that, a good tool is</p>\n\n<pre><code>sequenceA :: [ZipList a] -&gt; ZipList [a]\n</code></pre>\n\n<p>and so we can write</p>\n\n<pre><code>truncateList :: [[a]] -&gt; [[a]]\ntruncateList xs = let lists = map ZipList xs\n                      inverted = sequenceA lists\n                  in ...\n</code></pre>\n\n<p>At this point <code>inverted</code> is close to the result that you wanted, but not quite: instead of <code>[[1,2],[2,3],[3,9]]</code> we have <code>ZipList [[1,2,3],[2,3,9]]</code>: the list is transposed, and it's wrapped in a newtype we no longer want. So, we unwrap it, and use <code>Data.List.transpose</code> to flip it back the way we want:</p>\n\n<pre><code>truncateList :: [[a]] -&gt; [[a]]\ntruncateList xs = let lists = map ZipList xs\n                      inverted = sequenceA lists\n                  in transpose (getZipList inverted)\n</code></pre>\n\n<p>And finally we can note that all of this is just composing several built-in functions together:</p>\n\n<pre><code>import Data.List (transpose)\nimport Control.Applicative (ZipList(..))\n\ntruncateList :: [[a]] -&gt; [[a]]\ntruncateList = transpose . getZipList . sequenceA . map ZipList\n</code></pre>\n\n<p>My motivation for finding a ZipList solution was to try to avoid the extra work involved in calling <code>length</code> and <code>take</code> on each of the input lists, traversing each several times. I'm not so sure my solution succeeded in this goal: as far as I can tell <code>sequenceA</code> traverses each list once, and <code>transpose</code> tranverses them again, so it's probably about as expensive. It's not really easier to read, either: the solution using <code>length</code> and <code>take</code> is quite clear.</p>\n\n<p>I do think it's a bit pretty though, and a useful exercise to recognize that this problem looks relatively simple when transposed into a different domain, i.e. the universe of <code>ZipList</code>s.</p>\n"}, {"comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1522034760, "post_id": 49458796, "comment_id": 85969890, "body": "I took a leaf out of your answer <a href=\"https://stackoverflow.com/a/49483487/2751851\">to write a <i>recursion-schemes</i> variation on the theme</a>."}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": false, "score": 4, "last_activity_date": 1523323711, "last_edit_date": 1523323711, "creation_date": 1521842160, "answer_id": 49458796, "question_id": 49452848, "link": "https://stackoverflow.com/questions/49452848/cut-inner-lists-to-equal-length-in-haskell/49458796#49458796", "title": "Cut inner lists to equal length in Haskell", "body": "<p>I think this version is more efficient than the others, because it only traverses the input list once, generating thunks with pointers to the future.</p>\n\n<pre><code>cut xss = let (ret, len) = foldr (\\xs (ret', len') -&gt;\n                                   (take len xs : ret', min len' (length xs))\n                                 ) ([], maxBound) xss\n           in ret\n</code></pre>\n\n<p>Note how <code>len</code> appears in its own definition. While the <code>foldr</code> is being evaluated, it keeps track of both the shortest length and the cut list, and it also has a pointer to where <code>len</code> will eventually be. When it adds a new list on top of the cut one, it doesn\u2019t actually create the list, but simply writes a bit of code that represents the expression <code>take len xs</code> (this is a consequence of laziness), which refers to <code>len</code> via the aforementioned pointer. When the loop ends, the final value of <code>len</code> is written at the other end of the pointer, and, in a bit of \"action-at-distance\", ends up \"updating\" all the <code>take</code> thunks with the correct length.</p>\n\n<p>This version is similar, but, instead of using a finite type to hold the length of the list, I define the type of natural numbers plus infinity. This performs better than the <code>ZipList</code> solution, but worse than the finite-only solutions, and it is the only one, so far, that correctly handles infinite lists.</p>\n\n<pre><code>data Nat = Z | S Nat\n-- data [()] = [] | (:) () [()]\n-- [()] is isomorphic to Nat, so a lot of these functions in the where\n-- clause are just list ones in disguise. Nat appears to perform\n-- better, though.\ncut :: [[a]] -&gt; [[a]]\ncut xss = let (ret, len) = foldr (\\xs (ret', len') -&gt;\n                                   (take' len xs : ret', min' len' (length' xs))\n                                 ) ([], inf) xss\n           in ret\n  where inf = S inf -- repeat ()\n        take' Z _ = [] -- flip (zipWith const)\n        take' (S n) (x : xs) = x : take' n xs\n        min' Z _ = Z -- zipWith const\n        min' _ Z = Z\n        min' (S n) (S m) = S $ min' n m\n        length' [] = Z -- void\n        length' (x:xs) = S $ length' xs\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 1, "last_activity_date": 1522034922, "last_edit_date": 1522034922, "creation_date": 1522034617, "answer_id": 49483487, "question_id": 49452848, "link": "https://stackoverflow.com/questions/49452848/cut-inner-lists-to-equal-length-in-haskell/49483487#49483487", "title": "Cut inner lists to equal length in Haskell", "body": "<p>This <code>cut</code> is very much like <a href=\"https://stackoverflow.com/a/49458796/2751851\">HTNW's second solution</a> (and seems to perform exactly as well as that one); however, instead of explicitly using a laziness trick I rely on <a href=\"https://hackage.haskell.org/package/recursion-schemes-5.0.2/docs/Data-Functor-Foldable.html#v:hylo\" rel=\"nofollow noreferrer\"><code>hylo</code> from <em>recursion-schemes</em></a> to fuse the traversals.</p>\n\n<pre><code>{-# LANGUAGE LambdaCase #-}\n{-# LANGUAGE TupleSections #-}\n{-# LANGUAGE DeriveFunctor #-}\n{-# LANGUAGE DeriveFoldable #-}\n{-# LANGUAGE DeriveTraversable #-}\n{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE TemplateHaskell #-}\n\nimport Data.Functor.Foldable\nimport Data.Functor.Foldable.TH\n\n-- At first, I used [()] instead; as HTNW describes, Nat does seem to \n-- improve performance\ndata Nat = Z | S Nat\n\n-- A list, annotated at the end with the length to be used for cutting.\ndata CutList a = Cutter Nat | CutCons a (CutList a)\nmakeBaseFunctor ''CutList\n\ncut :: [[a]] -&gt; [[a]]\ncut = snd . hylo algCut coalgSetup . (inf,) \n    where\n    coalgSetup = \\case\n        (cutter, []) -&gt; CutterF cutter\n        (cutter, xs : xss) -&gt; CutConsF xs (min' cutter (length' xs), xss)\n    algCut = \\case\n        CutterF cutter -&gt; (cutter, [])\n        CutConsF xs (cutter, xss) -&gt; (cutter, take' cutter xs : xss)\n    inf = S inf\n    take' (S n) (x : xs) = x : take' n xs\n    take' _ _ = []\n    min' (S n) (S m) = S (min' n m)\n    min' _ _ = Z\n    length' [] = Z\n    length' (x : xs) = S (length' xs)\n</code></pre>\n\n<p>(This might have been more comfortable to express as some sort of zygo-hylomorphism, but then I would have to define such a thing in the style of <em>recursion-schemes</em> to get good performance, and that would have been too distracting.)</p>\n"}, {"tags": [], "owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "is_accepted": false, "score": 0, "last_activity_date": 1522266213, "last_edit_date": 1522266213, "creation_date": 1522040602, "answer_id": 49484277, "question_id": 49452848, "link": "https://stackoverflow.com/questions/49452848/cut-inner-lists-to-equal-length-in-haskell/49484277#49484277", "title": "Cut inner lists to equal length in Haskell", "body": "<p>Perhaps you could get some ideas from this. The functions and assignments all seem to have correspondences in your function. </p>\n\n<pre><code>let nl = [[1..4],[2,3],[3,9]]\nlet min = minimum $ map length nl\nmap (take min) nl \n[[1,2],[2,3],[3,9]]\n</code></pre>\n\n<p>if there is objection to the use of length then try.</p>\n\n<pre><code>(\\(a:b:c:xs) -&gt; zip3 a b c ) [[1..5],[2..5],[3..5]]\n[(1,2,3),(2,3,4),(3,4,5)]\n</code></pre>\n\n<p>This only works with three lists but the functions above will work with any number.</p>\n"}], "owner": {"reputation": 75, "user_id": 9528272, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-LlcC0iMkxZs/AAAAAAAAAAI/AAAAAAAAAAo/-9fjMqrVcm4/photo.jpg?sz=128", "display_name": "Janik Ti", "link": "https://stackoverflow.com/users/9528272/janik-ti"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 340, "favorite_count": 0, "accepted_answer_id": 49453081, "answer_count": 5, "score": 4, "last_activity_date": 1523323711, "creation_date": 1521817725, "last_edit_date": 1522035587, "question_id": 49452848, "link": "https://stackoverflow.com/questions/49452848/cut-inner-lists-to-equal-length-in-haskell", "title": "Cut inner lists to equal length in Haskell", "body": "<p>Let's say we have a list of lists, and we want to cut all inner lists down to the length of the shortest inner list -- for instance, from <code>[[1,2,3,4],[2,3],[3,9]]</code> we should get <code>[[1,2],[2,3],[3,9]]</code>. </p>\n\n<p>This is my code up to now (it doesn't work):</p>\n\n<pre><code>cut :: [[a]] -&gt; [[a]]\ncut = map (\\xs -&gt; drop ((min(length xs)) - length xs) xs)\n</code></pre>\n\n<p>I tried to solve it like this:\nThere has to be a function that returns the length of the shortest list and, with that, we need a further function that cuts all the lists from the beginning to this new length.\nBut, in fact, I don't have a clue.</p>\n"}, {"tags": ["macos", "file", "haskell", "filesystems", "file-attributes"], "comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 1, "creation_date": 1521815861, "post_id": 49452140, "comment_id": 85906827, "body": "What do you get if you just use <code>ghc try.hs</code>?  ghc isn&#39;t gcc. It names the binary based on the input file by default."}, {"owner": {"reputation": 69, "user_id": 6209441, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/36a02632e6afdaafe57afd9be71017e0?s=128&d=identicon&r=PG&f=1", "display_name": "hhwwww", "link": "https://stackoverflow.com/users/6209441/hhwwww"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1521815942, "post_id": 49452140, "comment_id": 85906883, "body": "unfortunately same error"}, {"owner": {"reputation": 765, "user_id": 3316409, "user_type": "registered", "profile_image": "https://graph.facebook.com/719585406/picture?type=large", "display_name": "dvaergiller", "link": "https://stackoverflow.com/users/3316409/dvaergiller"}, "edited": false, "score": 0, "creation_date": 1521816142, "post_id": 49452140, "comment_id": 85907056, "body": "Unfortunately NOT same error. For me, with ghc 8.0.2 on Ubuntu 17.10, using the -o flag like this works just fine."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1521816748, "post_id": 49452140, "comment_id": 85907550, "body": "What are the permissions on <code>try.hs</code>? What is the contents of <code>try.hs</code>? What are the permissions on the current directory?"}, {"owner": {"reputation": 765, "user_id": 3316409, "user_type": "registered", "profile_image": "https://graph.facebook.com/719585406/picture?type=large", "display_name": "dvaergiller", "link": "https://stackoverflow.com/users/3316409/dvaergiller"}, "edited": false, "score": 0, "creation_date": 1521816848, "post_id": 49452140, "comment_id": 85907627, "body": "Hm, tried with ghc 8.2.2 in Ubuntu 17.10 and that also works perfectly. Can you do &quot;ls -l&quot; (that is a lower case L)"}, {"owner": {"reputation": 69, "user_id": 6209441, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/36a02632e6afdaafe57afd9be71017e0?s=128&d=identicon&r=PG&f=1", "display_name": "hhwwww", "link": "https://stackoverflow.com/users/6209441/hhwwww"}, "edited": false, "score": 0, "creation_date": 1521816893, "post_id": 49452140, "comment_id": 85907662, "body": "the file is empty, permissions are read and write"}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1521816974, "post_id": 49452140, "comment_id": 85907718, "body": "There are many circumstances where <code>ls</code> would <i>appear</i> to show the existence of a file named <code>try.hs</code> when the file was actually named something else.  What happens if you try <code>cat try.hs</code>?  Does it find the file?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1521817029, "post_id": 49452140, "comment_id": 85907766, "body": "@hhwwww And the permissions on the current directory? Bonus points for pasting the output of <code>ls -ld . try.hs</code>, so that we don&#39;t have to guess exactly what your vague &quot;permissions are read and write&quot; means."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1521817840, "post_id": 49452140, "comment_id": 85908378, "body": "@hhwwww After typing up two or three different replies, I can only conclude that I don&#39;t know what you mean. I can&#39;t think of any sensible interpretation of &quot;filetype was a text-edit document and now it isn&#39;t&quot; that would affect whether GHC considered that file to exist or not. Whether the file name includes &quot;.hs&quot; or not is a red herring; names are just names, and can be whatever the heck you like, so long as the program you&#39;re using on the file likes it as well as you do."}, {"owner": {"reputation": 69, "user_id": 6209441, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/36a02632e6afdaafe57afd9be71017e0?s=128&d=identicon&r=PG&f=1", "display_name": "hhwwww", "link": "https://stackoverflow.com/users/6209441/hhwwww"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1521818726, "post_id": 49452140, "comment_id": 85909056, "body": "@DanielWagner thanks for ur time, i found the issue with ur help so it wasn&#39;t wasted :) the filetype was a text-edit document. Now I created a new one ..."}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 2, "last_activity_date": 1521818858, "last_edit_date": 1521818858, "creation_date": 1521817232, "answer_id": 49452663, "question_id": 49452140, "link": "https://stackoverflow.com/questions/49452140/no-location-info-error-cant-find-file/49452663#49452663", "title": "&lt;no location info&gt;: error: can&#39;t find file", "body": "<p>I suspect you have symlink'd a non-existent file to <code>try.hs</code>. Here is a sample of how things look in my test directory where I can see the same error as you:</p>\n\n<pre><code>% ls try.hs\ntry.hs\n% ghc try.hs\n&lt;no location info&gt;: error: can't find file: try.hs\n% ls -l\ntotal 0\nlrwxrwxrwx. 1 &lt;redacted&gt; &lt;redacted&gt; 5 Mar 23 10:57 try.hs -&gt; wrong\n</code></pre>\n\n<p>As you can see by the <code>l</code> at the beginning of the permissions and the <code>-&gt; wrong</code> after the file name, here <code>try.hs</code> is a symlink to <code>wrong</code>. But there is no file named <code>wrong</code>.</p>\n"}], "owner": {"reputation": 69, "user_id": 6209441, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/36a02632e6afdaafe57afd9be71017e0?s=128&d=identicon&r=PG&f=1", "display_name": "hhwwww", "link": "https://stackoverflow.com/users/6209441/hhwwww"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1706, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1521922415, "creation_date": 1521815801, "last_edit_date": 1521922415, "question_id": 49452140, "link": "https://stackoverflow.com/questions/49452140/no-location-info-error-cant-find-file", "title": "&lt;no location info&gt;: error: can&#39;t find file", "body": "<p>I am using haskell version 8.2.2 on a mac and currently have a problem to compile a file : </p>\n\n<p>My terminal:</p>\n\n<pre><code>$ls \ntry.hs \n$ ghc -o try try.hs\n&lt;no location info&gt;: error: can't find file: try.hs\n</code></pre>\n\n<p>Terminal after <code>ls -l</code> :</p>\n\n<pre><code>total 0 \n-rw-rw-r--@ 1 &lt;&gt;  &lt;&gt; 0 Mar 23 15:54 try.hs \n</code></pre>\n\n<p>Terminal after <code>ls -l@</code> : </p>\n\n<pre><code>total 0\n-rw-rw-r--@ 1 &lt;&gt;  &lt;&gt;  0 Mar 23 15:54 try.hs \ncom.apple.TextEncoding  15 \ncom.apple.metadata:_kMDItemUserTags 42 \ncom.apple.metadata:kMDLabel_z4p7jqbpj7dblx5lt33gtc742u  105 \n</code></pre>\n"}, {"tags": ["javascript", "haskell", "recursion"], "comments": [{"owner": {"reputation": 35578, "user_id": 3000206, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/BK1fo.jpg?s=128&g=1", "display_name": "Carcigenicate", "link": "https://stackoverflow.com/users/3000206/carcigenicate"}, "edited": false, "score": 5, "creation_date": 1521812520, "post_id": 49450992, "comment_id": 85904309, "body": "This looks like it should be made runnable and posted on Code Review."}, {"owner": {"reputation": 106013, "user_id": 633183, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/RHeN9.png?s=128&g=1", "display_name": "Thank you", "link": "https://stackoverflow.com/users/633183/thank-you"}, "edited": false, "score": 1, "creation_date": 1521828014, "post_id": 49450992, "comment_id": 85914500, "body": "It doesn&#39;t look like you care about laziness here so I don&#39;t see the need for generators: <a href=\"https://repl.it/repls/StiffImaginaryThings\" rel=\"nofollow noreferrer\">repl.it/repls/StiffImaginaryThings</a>"}, {"owner": {"reputation": 9547, "user_id": 46279, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/df9614769cb56c2cc06330efa2599e3f?s=128&d=identicon&r=PG", "display_name": "coder_bro", "link": "https://stackoverflow.com/users/46279/coder-bro"}, "reply_to_user": {"reputation": 106013, "user_id": 633183, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/RHeN9.png?s=128&g=1", "display_name": "Thank you", "link": "https://stackoverflow.com/users/633183/thank-you"}, "edited": false, "score": 0, "creation_date": 1521881065, "post_id": 49450992, "comment_id": 85928516, "body": "@naomik: The code is elegant, can you please add it as an answer?"}, {"owner": {"reputation": 9547, "user_id": 46279, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/df9614769cb56c2cc06330efa2599e3f?s=128&d=identicon&r=PG", "display_name": "coder_bro", "link": "https://stackoverflow.com/users/46279/coder-bro"}, "reply_to_user": {"reputation": 106013, "user_id": 633183, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/RHeN9.png?s=128&g=1", "display_name": "Thank you", "link": "https://stackoverflow.com/users/633183/thank-you"}, "edited": false, "score": 0, "creation_date": 1521881707, "post_id": 49450992, "comment_id": 85928702, "body": "@naomik: keen to know, would you recommend any book for functional programming in JS?"}, {"owner": {"reputation": 192865, "user_id": 989121, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/1Cvf7.png?s=128&g=1", "display_name": "georg", "link": "https://stackoverflow.com/users/989121/georg"}, "reply_to_user": {"reputation": 106013, "user_id": 633183, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/RHeN9.png?s=128&g=1", "display_name": "Thank you", "link": "https://stackoverflow.com/users/633183/thank-you"}, "edited": false, "score": 0, "creation_date": 1521888318, "post_id": 49450992, "comment_id": 85930332, "body": "@naomik: of course, that <code>Empty</code> thing was what I was looking for... Nice idea!"}], "answers": [{"tags": [], "owner": {"reputation": 192865, "user_id": 989121, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/1Cvf7.png?s=128&g=1", "display_name": "georg", "link": "https://stackoverflow.com/users/989121/georg"}, "is_accepted": true, "score": 9, "last_activity_date": 1521888239, "last_edit_date": 1521888239, "creation_date": 1521812659, "answer_id": 49451067, "question_id": 49450992, "link": "https://stackoverflow.com/questions/49450992/takewhile-implementation-in-javascript-looking-for-better-ideas/49451067#49451067", "title": "takeWhile implementation in JavaScript - Looking for better ideas", "body": "<p>If you want your <code>takeWhile</code> to perform like in HS, i.e. lazily, you need generators in JS:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function* takeWhile(fn, xs) {\r\n    for (let x of xs)\r\n        if (fn(x))\r\n            yield x;\r\n        else\r\n            break;\r\n}\r\n\r\nfunction* naturalNumbers() {\r\n    let n = 0;\r\n    while (true)\r\n        yield n++;\r\n}\r\n\r\nresult = takeWhile(x =&gt; x &lt; 10, naturalNumbers())\r\nconsole.log([...result])</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>A straight port of the HS code is also possible, but it only works with materialized arrays (that is, eagerly):</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>// would be nice, but JS sucks ;(\r\n// let takeWhile = (f, [x, ...xs]) =&gt; f(x) ? [x, ...takeWhile(f, xs)] : [];\r\n\r\nlet takeWhile = (f, xs) =&gt; xs.length ? takeWhileNotEmpty(f, xs) : [];\r\nlet takeWhileNotEmpty = (f, [x, ...xs]) =&gt;  f(x) ? [x, ...takeWhile(f, xs)] : [];\r\n\r\n\r\nlet odd = x =&gt; x % 2\r\na = [1,3,5,7,8,9]\r\nr = takeWhile(odd, a)\r\nconsole.log(r)</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>Actually, as @naomik shows <a href=\"https://repl.it/repls/StiffImaginaryThings\" rel=\"noreferrer\">here</a> there's a better way to deal with empty lists:</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>let nil = {};\r\nlet takeWhile = (f, [x = nil, ...xs]) =&gt; (x === nil || !f(x)) \r\n    ? [] : [x, ...takeWhile(f, xs)];\r\n\r\nconsole.log(takeWhile(x =&gt; x % 2, [1, 3, 5, 7, 8, 9]));</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>Finally, your initial attempt does have a point, because, unlike the above, it's tail-recursive, which is a Good Thing. It can be written more concisely as</p>\n\n<pre><code>let takeWhile = (f, xs) =&gt; take1(f, xs, []);\nlet take1 = (f, xs, acc) =&gt; xs.length ? take2(f, xs, acc) : acc;\nlet take2 = (f, [x, ...xs], acc) =&gt; f(x) ? take1(f, xs, acc.concat(x)) : acc;\n</code></pre>\n\n<p>A combination of both approaches (that is, a recursive generator) left as an exercise... </p>\n"}, {"tags": [], "owner": {"reputation": 36, "user_id": 9359019, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "\u0160ar\u016bnas Guobis", "link": "https://stackoverflow.com/users/9359019/%c5%a0ar%c5%abnas-guobis"}, "is_accepted": false, "score": 0, "last_activity_date": 1521813957, "last_edit_date": 1592644375, "creation_date": 1521813957, "answer_id": 49451484, "question_id": 49450992, "link": "https://stackoverflow.com/questions/49450992/takewhile-implementation-in-javascript-looking-for-better-ideas/49451484#49451484", "title": "takeWhile implementation in JavaScript - Looking for better ideas", "body": "<p>You can use for loop with fliag, <a href=\"https://jsbin.com/fuxacixise/edit?js,console\" rel=\"nofollow noreferrer\">jsbin</a></p>\n<pre><code>const takeWhile = (func, arr) =&gt; {\n  for(let i = 0, isCorrect; !isCorrect; i++){\n    if(!func(arr[i]) || i &gt;= arr.length){isCorrect = true;}\n    else {\n     console.log(arr[i]);\n    }\n  }\n}\n</code></pre>\n<p>This function takes two arguments. One will be your predicate, second array.\nSo loop will end if your predicate fails or array ends. It will not return any value, but if you need just add return statement.</p>\n"}, {"tags": [], "owner": {"reputation": 313, "user_id": 7322030, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/9mLwC.png?s=128&g=1", "display_name": "Grafluxe", "link": "https://stackoverflow.com/users/7322030/grafluxe"}, "is_accepted": false, "score": 3, "last_activity_date": 1539981509, "last_edit_date": 1539981509, "creation_date": 1539893899, "answer_id": 52881913, "question_id": 49450992, "link": "https://stackoverflow.com/questions/49450992/takewhile-implementation-in-javascript-looking-for-better-ideas/52881913#52881913", "title": "takeWhile implementation in JavaScript - Looking for better ideas", "body": "<p>Here's a concise solution:</p>\n\n<pre><code>const takeWhile = (fn, arr) =&gt; {\n  const [x, ...xs] = arr;\n\n  if (arr.length &gt; 0 &amp;&amp; fn(x)) {\n    return [x, ...takeWhile(fn, xs)]\n  } else {\n    return [];\n  }\n};\n</code></pre>\n\n<hr>\n\n<p>Here's an extra condensed version of the above:</p>\n\n<pre><code>const takeWhile = \n  (fn, a) =&gt; a.length &amp;&amp; fn(a[0]) ? [a[0], ...takeWhile(fn, a.slice(1))] : [];\n</code></pre>\n\n<p>It's not easily readable, so I don't recommend you use the condensed version.</p>\n\n<hr>\n\n<p>A tail recursive version:</p>\n\n<pre><code>const takeWhile = (fn, arr) =&gt; {\n  const recur = (a, acc) =&gt; {\n    const [x, ...xs] = a;\n\n    if (a.length &gt; 0 &amp;&amp; fn(x)) {\n      return recur(xs, [...acc, x]);\n    } else {\n      return acc;\n    }\n  }\n\n  return recur(arr, []);\n};\n</code></pre>\n"}], "owner": {"reputation": 9547, "user_id": 46279, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/df9614769cb56c2cc06330efa2599e3f?s=128&d=identicon&r=PG", "display_name": "coder_bro", "link": "https://stackoverflow.com/users/46279/coder-bro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2264, "favorite_count": 0, "accepted_answer_id": 49451067, "answer_count": 3, "score": 5, "last_activity_date": 1539981509, "creation_date": 1521812444, "last_edit_date": 1521828367, "question_id": 49450992, "link": "https://stackoverflow.com/questions/49450992/takewhile-implementation-in-javascript-looking-for-better-ideas", "title": "takeWhile implementation in JavaScript - Looking for better ideas", "body": "<p>Haskell has a <code>takeWhile</code> function:</p>\n\n<pre><code>Prelude&gt; takeWhile odd [1,3,5,7,8,9]\n[1,3,5,7]\n</code></pre>\n\n<p>It \u201ctakes\u201d elements from a list as long as applying the predicate function results in <code>True</code>. At the point it becomes <code>False</code>, it stops.</p>\n\n<p>How can we implement it?</p>\n\n<p>Here is a Haskell recursive approach I came up with:</p>\n\n<pre><code>takewhile::(a-&gt;Bool)-&gt;[a]-&gt;[a]\ntakewhile _ [] = []\ntakewhile f (x:xs) | f x == True = x : takewhile f xs\n                   | otherwise = []\n</code></pre>\n\n<p>It keeps on calling itself as long as predicate <code>f x</code> is <code>True</code>, otherwise it returns an empty list without calling itself.</p>\n\n<p>I could come up with the following implementation for JavaScript. It is a bit verbose and invokes defining another function to pass the intermediate result around:</p>\n\n<pre><code>function takeWhile(f, xs) {\n return take(f, xs, [])\n}\n\nfunction take(f, xs, arr) {\n if(!xs || xs.length === 0) {\n return arr\n }\n x = xs.shift()\n if(f(x)) {\n   arr.push(x)\n   return take(f, xs, arr)\n } else {\n   return arr\n }\n}\n\ntakeWhile((x)=&gt;{\n return x % 2 !== 0\n},[1,3,5,7,9,11])\n</code></pre>\n\n<p>Are there better ideas for implementing it in JavaScript?</p>\n"}, {"tags": ["list", "haskell", "zipwith"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1521810408, "post_id": 49450314, "comment_id": 85902830, "body": "You need <code>map</code>, not <code>zipWith</code>."}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 1, "creation_date": 1521810425, "post_id": 49450314, "comment_id": 85902844, "body": "<code>map (\\x -&gt; (x, length x)) [&quot;Zoo&quot;, &quot;School&quot;]</code> works but not with a list of numbers. The <code>length</code> function does not return the &quot;length&quot; of a number (written in decimal notation)."}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521810636, "post_id": 49450314, "comment_id": 85902973, "body": "You can use <a href=\"https://hackage.haskell.org/package/number-length\" rel=\"nofollow noreferrer\">this package</a> for the length of a number."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1521816153, "post_id": 49450314, "comment_id": 85907062, "body": "Your function isn&#39;t well typed. How do you know a value of any arbitrary type <code>a</code> <i>has</i> any notion of length? <code>Int</code>, for instance, doesn&#39;t have a length. A string representation of an <code>Int</code> does, but there are many such representations: base 2, base 10, base 16? Written as an English word? A Russian word?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1521817062, "post_id": 49450314, "comment_id": 85907792, "body": "This is really a case where you want your own type class that behaves like <code>Foldable</code>. <code>class HasLength a where mylength :: a -&gt; Int</code>. Anything with a <code>Foldable</code> instance has a trivial <code>HasLength</code> instance (<code>mylength = length</code>), but I don&#39;t recall if there is an easy way to express that. Other types like <code>Int</code> that don&#39;t have a <code>Foldable</code> instance can still have a <code>HasLength</code> instance. (For example, <code>instance HasLength Int where mylength = length . show</code>.)"}], "answers": [{"comments": [{"owner": {"reputation": 75, "user_id": 9528272, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-LlcC0iMkxZs/AAAAAAAAAAI/AAAAAAAAAAo/-9fjMqrVcm4/photo.jpg?sz=128", "display_name": "Janik Ti", "link": "https://stackoverflow.com/users/9528272/janik-ti"}, "edited": false, "score": 0, "creation_date": 1521811036, "post_id": 49450517, "comment_id": 85903268, "body": "Thank you for now!"}, {"owner": {"reputation": 5679, "user_id": 1878788, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/fc54887ecbaba35e17251129e5b78c9a?s=128&d=identicon&r=PG", "display_name": "bli", "link": "https://stackoverflow.com/users/1878788/bli"}, "reply_to_user": {"reputation": 75, "user_id": 9528272, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-LlcC0iMkxZs/AAAAAAAAAAI/AAAAAAAAAAo/-9fjMqrVcm4/photo.jpg?sz=128", "display_name": "Janik Ti", "link": "https://stackoverflow.com/users/9528272/janik-ti"}, "edited": false, "score": 0, "creation_date": 1521811115, "post_id": 49450517, "comment_id": 85903329, "body": "Note that it will give you a wrong result when applied to a list of strings."}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521811214, "post_id": 49450517, "comment_id": 85903397, "body": "Not that for floating numbers this will yield a maybe unexpected result: <code>[(1.0,3),(2.5,3)]</code> for the input <code>[1,2.5]</code>. This includes the dot and also the <code>0</code> decimal."}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521811302, "post_id": 49450517, "comment_id": 85903465, "body": "I would do two functions. I would use <code>length</code> for types like <code>[a]</code> and the package I linked above for numbers."}, {"owner": {"reputation": 75, "user_id": 9528272, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-LlcC0iMkxZs/AAAAAAAAAAI/AAAAAAAAAAo/-9fjMqrVcm4/photo.jpg?sz=128", "display_name": "Janik Ti", "link": "https://stackoverflow.com/users/9528272/janik-ti"}, "edited": false, "score": 0, "creation_date": 1521811328, "post_id": 49450517, "comment_id": 85903484, "body": "But this doesnt work :                                                             <code>zipWithLength :: [a] -&gt; [(a, Int)]</code> &lt;br&gt;                                         <code>zipWithLength [] = []</code> &lt;br&gt; <code>zipWithLength (x:xs) = map (\\x -&gt; (x, length (show x)))</code>"}, {"owner": {"reputation": 5679, "user_id": 1878788, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/fc54887ecbaba35e17251129e5b78c9a?s=128&d=identicon&r=PG", "display_name": "bli", "link": "https://stackoverflow.com/users/1878788/bli"}, "reply_to_user": {"reputation": 75, "user_id": 9528272, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-LlcC0iMkxZs/AAAAAAAAAAI/AAAAAAAAAAo/-9fjMqrVcm4/photo.jpg?sz=128", "display_name": "Janik Ti", "link": "https://stackoverflow.com/users/9528272/janik-ti"}, "edited": false, "score": 0, "creation_date": 1521811416, "post_id": 49450517, "comment_id": 85903542, "body": "@JanikTi You don&#39;t need to decompose the list into <code>head:tail</code> to use <code>map</code>. When you pattern-match on <code>(x:xs)</code>, <code>x</code> will be an element of a list, and you will not be able to map something on it (unless the elements are in turn of type <code>[a]</code>)."}, {"owner": {"reputation": 75, "user_id": 9528272, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-LlcC0iMkxZs/AAAAAAAAAAI/AAAAAAAAAAo/-9fjMqrVcm4/photo.jpg?sz=128", "display_name": "Janik Ti", "link": "https://stackoverflow.com/users/9528272/janik-ti"}, "edited": false, "score": 0, "creation_date": 1521811670, "post_id": 49450517, "comment_id": 85903730, "body": "I forgot Thx, so i tried this but no positiv result: &lt;br/&gt; <code>zipWithLength :: [a] -&gt; [(a, Int)]</code> &lt;br/&gt; <code>zipWithLength [] = []</code> &lt;br/&gt; <code>zipWithLength = map (\\x -&gt; (x, length (show x)))</code>"}, {"owner": {"reputation": 5679, "user_id": 1878788, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/fc54887ecbaba35e17251129e5b78c9a?s=128&d=identicon&r=PG", "display_name": "bli", "link": "https://stackoverflow.com/users/1878788/bli"}, "reply_to_user": {"reputation": 75, "user_id": 9528272, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-LlcC0iMkxZs/AAAAAAAAAAI/AAAAAAAAAAo/-9fjMqrVcm4/photo.jpg?sz=128", "display_name": "Janik Ti", "link": "https://stackoverflow.com/users/9528272/janik-ti"}, "edited": false, "score": 0, "creation_date": 1521811833, "post_id": 49450517, "comment_id": 85903829, "body": "@JanikTi Note that <code>map</code> already deals with empty lists correctly."}], "tags": [], "owner": {"reputation": 5679, "user_id": 1878788, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/fc54887ecbaba35e17251129e5b78c9a?s=128&d=identicon&r=PG", "display_name": "bli", "link": "https://stackoverflow.com/users/1878788/bli"}, "is_accepted": false, "score": 2, "last_activity_date": 1521811662, "last_edit_date": 1521811662, "creation_date": 1521810876, "answer_id": 49450517, "question_id": 49450314, "link": "https://stackoverflow.com/questions/49450314/haskell-zip-the-element-of-a-list-with-its-length/49450517#49450517", "title": "Haskell, zip the element of a list with its length", "body": "<p>If you transform the numbers into strings (using <code>show</code>), you can apply <code>length</code> on them:</p>\n\n<pre><code>Prelude&gt; let zipWithLength = map (\\x -&gt; (x, length (show x)))\nPrelude&gt; zipWithLength [14,2,344,41,5,666]\n[(14,2),(2,1),(344,3),(41,2),(5,1),(666,3)]\n</code></pre>\n\n<p>However, you cannot use the same function on a list of strings:</p>\n\n<pre><code>Prelude&gt; zipWithLength [\"Zoo\",\"School\",\"Net\"]\n[(\"Zoo\",5),(\"School\",8),(\"Net\",5)]\n</code></pre>\n\n<p>The numbers are not the lengths of the strings, but of their representations:</p>\n\n<pre><code>Prelude&gt; show \"Zoo\"\n\"\\\"Zoo\\\"\"\nPrelude&gt; length (show \"Zoo\")\n5\n</code></pre>\n\n<p>As noted in the comments, similar problems may happen with other types of elements:</p>\n\n<pre><code>Prelude&gt; zipWithLength [(1.0,3),(2.5,3)]\n[((1.0,3),7),((2.5,3),7)]\nPrelude&gt; show (1.0,3)\n\"(1.0,3)\"\nPrelude&gt; length (show (1.0,3))\n7\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "edited": false, "score": 0, "creation_date": 1521831070, "post_id": 49450781, "comment_id": 85916021, "body": "Arrows would work well here, too. <code>mapWithLength f = map (id &amp;&amp;&amp; f)</code>"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 2, "last_activity_date": 1521818705, "last_edit_date": 1521818705, "creation_date": 1521811775, "answer_id": 49450781, "question_id": 49450314, "link": "https://stackoverflow.com/questions/49450314/haskell-zip-the-element-of-a-list-with-its-length/49450781#49450781", "title": "Haskell, zip the element of a list with its length", "body": "<p>If you want to apply a function on every element of a list, that is a <a href=\"http://hackage.haskell.org/package/base-4.11.0.0/docs/Prelude.html#v:map\" rel=\"nofollow noreferrer\"><strong><code>map :: (a -&gt; b) -&gt; [a] -&gt; [b]</code></strong></a>. The map thus takes a function <code>f</code> and a list <code>xs</code>, and generates a list <code>ys</code>, such that the <em>i</em>-th element of <code>ys</code>, is <code>f</code> applied to the <em>i</em>-th element of <code>xs</code>.</p>\n\n<p>So now the only question is what mapping function we want. We want to take an element <code>x</code>, and return a 2-tuple <code>(x, length x)</code>, we can express this with a <em>lambda expression</em>:</p>\n\n<pre><code>mapwithlength = map (\\x -&gt; (x, length x))\n</code></pre>\n\n<p>Or we can use <a href=\"http://hackage.haskell.org/package/base-4.11.0.0/docs/Control-Monad.html#v:ap\" rel=\"nofollow noreferrer\"><strong><code>ap :: Monad m =&gt; m (a -&gt; b) -&gt; m a -&gt; m b</code></strong></a> for that:</p>\n\n<pre><code>import Control.Monad(ap)\n\nmapwithlength = map (ap (,) length)\n</code></pre>\n\n<p>A problem is that this does not work for <code>Int</code>s, since these have no <code>length</code>. We can use <code>show</code> here, but there is an extra problem with that: if we perform <code>show</code> on a <code>String</code>, we get a string literal (this means that we get a string that has quotation marks, and where some characters are escaped). Based on the question, we do not want that.</p>\n\n<p>We can define a parameterized function for that like:</p>\n\n<pre><code>mapwithlength f = map (ap (,) (length . f))\n</code></pre>\n\n<p>We can basically leave it to the user. In case they want to work with integers, they have to call it with:</p>\n\n<pre><code>forintegers = mapwithlength show\n</code></pre>\n\n<p>and for <code>String</code>s:</p>\n\n<pre><code>forstrings = mapwithlength id\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521812189, "post_id": 49450826, "comment_id": 85904084, "body": "Note that <code>numberLength (-14)</code> gives <code>2</code>, not <code>3</code>. It does not count the minus sign. See the package documentation if you want <code>3</code>."}], "tags": [], "owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "is_accepted": true, "score": 1, "last_activity_date": 1521811911, "creation_date": 1521811911, "answer_id": 49450826, "question_id": 49450314, "link": "https://stackoverflow.com/questions/49450314/haskell-zip-the-element-of-a-list-with-its-length/49450826#49450826", "title": "Haskell, zip the element of a list with its length", "body": "<p>After installing the <code>number-length</code> package, you can do:</p>\n\n<pre><code>module Test where\nimport           Data.NumberLength\n\n-- use e.g for list of String\nwithLength :: [[a]] -&gt; [([a], Int)]\nwithLength = map (\\x -&gt; (x, length x))\n\n-- use e.g for list of Int\nwithLength' :: NumberLength a =&gt; [a] -&gt; [(a, Int)]\nwithLength' = map (\\x -&gt; (x, numberLength x))\n</code></pre>\n\n<p>Examples:</p>\n\n<pre><code>&gt;&gt;&gt; withLength [\"Zoo\", \"bear\"]\n[(\"Zoo\",3),(\"bear\",4)]\n&gt;&gt;&gt; withLength' [14, 344]\n[(14,2),(344,3)]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 14543, "user_id": 235908, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/rTstt.jpg?s=128&g=1", "display_name": "Simon Shine", "link": "https://stackoverflow.com/users/235908/simon-shine"}, "is_accepted": false, "score": 1, "last_activity_date": 1521812694, "creation_date": 1521812694, "answer_id": 49451082, "question_id": 49450314, "link": "https://stackoverflow.com/questions/49450314/haskell-zip-the-element-of-a-list-with-its-length/49451082#49451082", "title": "Haskell, zip the element of a list with its length", "body": "<p>As bli points out, calculating the length of a number using <code>length (show n)</code> does not transfer to calculating the length of a string, since <code>show \"foo\"</code> becomes <code>\"\\\"foo\\\"\"</code>. Since it is not obvious what the <em>length</em> of something is, you could parameterise the zip function with a length function:</p>\n\n<pre><code>zipWithLength :: (a -&gt; Int) -&gt; [a] -&gt; [(a, Int)]\nzipWithLength len = map (\\x -&gt; (x, len x))\n</code></pre>\n\n<p>Examples of use:</p>\n\n<pre><code>&gt; zipWithLength (length . show) [7,13,666]\n[(7,1),(13,2),(666,3)]\n\n&gt; zipWithLength length [\"Zoo\", \"School\", \"Bear\"]\n[(\"Zoo\",3),(\"School\",6),(\"Bear\",4)]\n\n&gt; zipWithLength (length . concat) [[[1,2],[3],[4,5,6,7]], [[],[],[6],[6,6]]]\n[([[1,2],[3,4],[5,6,7]],7),([[],[],[6],[6,6]],3)]\n</code></pre>\n"}], "owner": {"reputation": 75, "user_id": 9528272, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-LlcC0iMkxZs/AAAAAAAAAAI/AAAAAAAAAAo/-9fjMqrVcm4/photo.jpg?sz=128", "display_name": "Janik Ti", "link": "https://stackoverflow.com/users/9528272/janik-ti"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 519, "favorite_count": 0, "accepted_answer_id": 49450826, "answer_count": 4, "score": 3, "last_activity_date": 1521818705, "creation_date": 1521810125, "last_edit_date": 1521812020, "question_id": 49450314, "link": "https://stackoverflow.com/questions/49450314/haskell-zip-the-element-of-a-list-with-its-length", "title": "Haskell, zip the element of a list with its length", "body": "<p>The next lines should show how its has to work..</p>\n\n<p><code>[14,2,344,41,5,666]</code> after <code>[(14,2),(2,1),(344,3),(5,1),(666,3)]</code></p>\n\n<p><code>[\"Zoo\",\"School\",\"Net\"]</code> after <code>[(\"Zoo\",3),(\"School\",6),(\"Net\",3)]</code></p>\n\n<p>Thats my code up to now</p>\n\n<pre><code>zipWithLength :: [a] -&gt; [(a, Int)]\nzipWithLength (x:xs) = zipWith (\\acc x -&gt; (x, length x):acc) [] xs\n</code></pre>\n\n<p>I want to figure out what the problem in the second line is.</p>\n"}, {"tags": ["haskell", "types", "algebraic-data-types"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 2, "creation_date": 1521810466, "post_id": 49450208, "comment_id": 85902871, "body": "<code>Just &#39;x&#39;</code> is not the same as <code>&#39;x&#39;</code>. <code>Char</code> is not the same type as <code>Maybe Char</code>."}, {"owner": {"reputation": 3257, "user_id": 3578468, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7957773c9ae23195b8a064ade49af29?s=128&d=identicon&r=PG&f=1", "display_name": "lo tolmencre", "link": "https://stackoverflow.com/users/3578468/lo-tolmencre"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1521811091, "post_id": 49450208, "comment_id": 85903315, "body": "Not helpful without further explanation of what you are referring to."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1521814304, "post_id": 49450208, "comment_id": 85905580, "body": "fwiw, you&#39;re running into all these problems because you&#39;re trying to work around the type system. Single values are not the same as lists of values. You can&#39;t just use them interchangeably. When you go to work around this by adding a third type, you now have <i>three</i> types involved, not two."}, {"owner": {"reputation": 3257, "user_id": 3578468, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7957773c9ae23195b8a064ade49af29?s=128&d=identicon&r=PG&f=1", "display_name": "lo tolmencre", "link": "https://stackoverflow.com/users/3578468/lo-tolmencre"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1521814961, "post_id": 49450208, "comment_id": 85906109, "body": "@Carl But it seemed wrong to work with singleton lists for atomic values."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 3, "creation_date": 1521815727, "post_id": 49450208, "comment_id": 85906731, "body": "What is the semantic difference between <code>Sgl x</code> and <code>Sqc [x]</code>? If none, why do you allow both?"}, {"owner": {"reputation": 3257, "user_id": 3578468, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7957773c9ae23195b8a064ade49af29?s=128&d=identicon&r=PG&f=1", "display_name": "lo tolmencre", "link": "https://stackoverflow.com/users/3578468/lo-tolmencre"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1521816071, "post_id": 49450208, "comment_id": 85906991, "body": "@DanielWagner I didn&#39;t know how to define the list constructor to only contain lists of length &gt;= 2."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1521816386, "post_id": 49450208, "comment_id": 85907254, "body": "You could write <code>data PrimT a = Sgl a | Sqc a a [a]</code> to ensure that there are at least two values in the <code>Sqc</code> case. But in such a case I think I&#39;d prefer to use <code>data PrimT a = PrimT a [a]</code> or perhaps to just reuse the existing <a href=\"https://hackage.haskell.org/package/base-4.11.0.0/docs/Data-List-NonEmpty.html\" rel=\"nofollow noreferrer\"><code>NonEmpty</code></a> type. But doesn&#39;t primitive recursion also allow 0-ary functions? In which case we&#39;re back to my question: why single out 1-ary argument lists as special?"}], "answers": [{"comments": [{"owner": {"reputation": 3257, "user_id": 3578468, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7957773c9ae23195b8a064ade49af29?s=128&d=identicon&r=PG&f=1", "display_name": "lo tolmencre", "link": "https://stackoverflow.com/users/3578468/lo-tolmencre"}, "edited": false, "score": 0, "creation_date": 1521811033, "post_id": 49450431, "comment_id": 85903266, "body": "Okay, so I see why putting <code>Sqc</code> in front of the list comprehension is necessary. But I don&#39;t understand why it is necessary on fron of <code>args</code> inside the function body."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 3257, "user_id": 3578468, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7957773c9ae23195b8a064ade49af29?s=128&d=identicon&r=PG&f=1", "display_name": "lo tolmencre", "link": "https://stackoverflow.com/users/3578468/lo-tolmencre"}, "edited": false, "score": 1, "creation_date": 1521811942, "post_id": 49450431, "comment_id": 85903911, "body": "@lotolmencre We do not have <code>g :: [a] -&gt; ...</code> but only <code>g :: PrimT a -&gt; ...</code>, so we need to pass a value in the right type."}, {"owner": {"reputation": 3257, "user_id": 3578468, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7957773c9ae23195b8a064ade49af29?s=128&d=identicon&r=PG&f=1", "display_name": "lo tolmencre", "link": "https://stackoverflow.com/users/3578468/lo-tolmencre"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1521812476, "post_id": 49450431, "comment_id": 85904282, "body": "@chi But <code>g</code> has type <code>PrimT a -&gt; PrimT b</code> and args has type <code>PrimT a</code>. So... I still don&#39;t get it."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 3257, "user_id": 3578468, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7957773c9ae23195b8a064ade49af29?s=128&d=identicon&r=PG&f=1", "display_name": "lo tolmencre", "link": "https://stackoverflow.com/users/3578468/lo-tolmencre"}, "edited": false, "score": 1, "creation_date": 1521812566, "post_id": 49450431, "comment_id": 85904348, "body": "@lotolmencre No, <code>Sqc args</code> has type <code>PrimT a</code>, <code>args</code> has type <code>[a]</code>."}, {"owner": {"reputation": 3257, "user_id": 3578468, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7957773c9ae23195b8a064ade49af29?s=128&d=identicon&r=PG&f=1", "display_name": "lo tolmencre", "link": "https://stackoverflow.com/users/3578468/lo-tolmencre"}, "edited": false, "score": 0, "creation_date": 1521813114, "post_id": 49450431, "comment_id": 85904708, "body": "Ah, ok, now I get it.. kind of; I am still getting an error for <code>o (Sgl f) (Sqc gs) (Sqc args) = f $ Sqc [g (Sqc args) | g &lt;- gs]</code> which I still don&#39;t see why. <code>Couldn&#39;t match type \u2018b\u2019 with \u2018PrimT b\u2019</code> <code>Expected type: PrimT b         Actual type: PrimT (PrimT b)</code>. Why is that now? Apparently <code>Sqc [...]</code> is producing a <code>PrimT (PrimT b)</code>? Or where does that come from?"}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "reply_to_user": {"reputation": 3257, "user_id": 3578468, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7957773c9ae23195b8a064ade49af29?s=128&d=identicon&r=PG&f=1", "display_name": "lo tolmencre", "link": "https://stackoverflow.com/users/3578468/lo-tolmencre"}, "edited": false, "score": 1, "creation_date": 1521813307, "post_id": 49450431, "comment_id": 85904858, "body": "@lotolmencre <code>Sqc [SomeType]</code> has type <code>PrimT SomeType</code>. <code>[g (Sqc args) | g &lt;- gs]</code> has type <code>[PrimT b]</code>, so <code>SomeType</code> is <code>PrimT b</code> in this case and <code>Sqc [g (Sqc args) | g &lt;- gs]</code> has type <code>PrimT (PrimT b)</code>."}], "tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": true, "score": 3, "last_activity_date": 1521812367, "last_edit_date": 1521812367, "creation_date": 1521810539, "answer_id": 49450431, "question_id": 49450208, "link": "https://stackoverflow.com/questions/49450208/why-does-a-sum-type-of-a-containing-a-list-constructor-not-match-a-list-of-a/49450431#49450431", "title": "Why does a sum-type of `a` containing a list constructor not match a list of `a`?", "body": "<blockquote>\n  <p><code>PrimT a</code> can be a list of <code>a</code> (<code>[a]</code>) according to its definition</p>\n</blockquote>\n\n<p>No, <code>PrimT a</code> can either be an <code>Sgl</code> or an <code>Sqc</code>. So given a list <code>xs</code> of type <code>[a]</code>, <code>Sqc xs</code> would be a <code>PrimT a</code>, but <code>xs</code> would not. <code>xs</code> is already a list - it can't also be something else.</p>\n\n<p>By that same logic <code>Sqc args</code> is a <code>PrimT a</code> and <code>Sqc [g (Sqc args) | g &lt;- gs]</code> is a <code>PrimT (PrimT b)</code>, but without the <code>Sqc</code> they're just lists.</p>\n\n<p>I should also point out that <code>PrimT (PrimT b)</code> isn't the type that you want (you want <code>PrimT b</code>), so you'll still need to flatten the result to get what you want.</p>\n"}], "owner": {"reputation": 3257, "user_id": 3578468, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/c7957773c9ae23195b8a064ade49af29?s=128&d=identicon&r=PG&f=1", "display_name": "lo tolmencre", "link": "https://stackoverflow.com/users/3578468/lo-tolmencre"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 58, "favorite_count": 0, "accepted_answer_id": 49450431, "answer_count": 1, "score": 0, "last_activity_date": 1521812367, "creation_date": 1521809835, "last_edit_date": 1521811240, "question_id": 49450208, "link": "https://stackoverflow.com/questions/49450208/why-does-a-sum-type-of-a-containing-a-list-constructor-not-match-a-list-of-a", "title": "Why does a sum-type of `a` containing a list constructor not match a list of `a`?", "body": "<p>I am trying to implement <a href=\"https://en.wikipedia.org/wiki/Primitive_recursive_function\" rel=\"nofollow noreferrer\">primitive recursive functions</a>. As apparently it is not common to use variadic functions in Haskell I use a type</p>\n\n<pre><code>data PrimT a = Sgl a | Sqc [a]\n</code></pre>\n\n<p>so I can pass atomic values and lists of values to functions. This works alright for the zero function, projection, and the successor function:</p>\n\n<pre><code>zero k (Sqc args) = if length args == k then Right 0 else Left \"invalid number of arguments\"\nzero 1 (Sgl arg)  = Right 0\n\npi i k (Sqc args) = if length args == k then Right $ args!!i else Left \"invalid number of arguments\"\npi 1 1 (Sgl arg) = Right arg\n\nnu (Sgl i) = Sgl $ i + 1\n</code></pre>\n\n<p>But I am getting problems with composition (here <code>o</code>). The idea behind this definition is that composition can happen with a function f and: 1) a list of functions and a list of arguments, 2) a list of functions and one argument, 3) one function and a list of arguments and finally 4) one function and one argument. Therefore I put the functions and in a <code>PrimT</code> so I can have cases for <code>Sqc gs</code> for a list of functions and <code>Sgl g</code> for a single function. Same for the arguments: <code>Sqc args</code> and <code>Sgl arg</code>.</p>\n\n<pre><code>o :: PrimT (PrimT b -&gt; PrimT c) -&gt; PrimT (PrimT a -&gt; PrimT b) -&gt; PrimT a -&gt; PrimT c\no (Sgl f) (Sqc gs) (Sqc args) = f [g args | g &lt;- gs]\n-- o (Sgl f) (Sqc gs) (Sgl arg) = f [g arg | g &lt;- gs]\n-- o (Sgl f) (Sgl g) (Sqc args) = f [g args]\n-- o (Sgl f) (Sgl g) (Sgl arg) = f [g arg]\n</code></pre>\n\n<p>However the compiler is not happy with the part <code>f [g args | g &lt;- gs]</code>. It says:</p>\n\n<pre><code>primrec.hs:69:35: error:\n    \u2022 Couldn't match expected type \u2018PrimT b\u2019\n                  with actual type \u2018[PrimT b]\u2019\n    \u2022 In the first argument of \u2018f\u2019, namely \u2018[g args | g &lt;- gs]\u2019\n      In the expression: f [g args | g &lt;- gs]\n      In an equation for \u2018o\u2019:\n          o (Sgl f) (Sqc gs) (Sqc args) = f [g args | g &lt;- gs]\n    \u2022 Relevant bindings include\n        gs :: [PrimT a -&gt; PrimT b] (bound at primrec.hs:69:16)\n        f :: PrimT b -&gt; PrimT c (bound at primrec.hs:69:8)\n        o :: PrimT (PrimT b -&gt; PrimT c)\n             -&gt; PrimT (PrimT a -&gt; PrimT b) -&gt; PrimT a -&gt; PrimT c\n          (bound at primrec.hs:69:1)\n   |\n69 | o (Sgl f) (Sqc gs) (Sqc args) = f [g args | g &lt;- gs]\n   |                                   ^^^^^^^^^^^^^^^^^^\n\nprimrec.hs:69:38: error:\n    \u2022 Couldn't match expected type \u2018PrimT a\u2019 with actual type \u2018[a]\u2019\n    \u2022 In the first argument of \u2018g\u2019, namely \u2018args\u2019\n      In the expression: g args\n      In the first argument of \u2018f\u2019, namely \u2018[g args | g &lt;- gs]\u2019\n    \u2022 Relevant bindings include\n        g :: PrimT a -&gt; PrimT b (bound at primrec.hs:69:45)\n        args :: [a] (bound at primrec.hs:69:25)\n        gs :: [PrimT a -&gt; PrimT b] (bound at primrec.hs:69:16)\n        o :: PrimT (PrimT b -&gt; PrimT c)\n             -&gt; PrimT (PrimT a -&gt; PrimT b) -&gt; PrimT a -&gt; PrimT c\n          (bound at primrec.hs:69:1)\n   |\n69 | o (Sgl f) (Sqc gs) (Sqc args) = f [g args | g &lt;- gs]\n   |\n</code></pre>\n\n<p>But I don't understand why. <code>PrimT a</code> can be a list of <code>a</code> (<code>[a]</code>) according to its definition. So where is the problem?</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 3, "last_activity_date": 1521802085, "last_edit_date": 1521802085, "creation_date": 1521801652, "answer_id": 49447798, "question_id": 49447337, "link": "https://stackoverflow.com/questions/49447337/haskell-using-existentialquantification-and-got-an-error-couldnt-match-expect/49447798#49447798", "title": "Haskell: using ExistentialQuantification and got an error: Couldn&#39;t match expected type", "body": "<p>The dual to existential quantification (\u2203) is universal quantification (\u2200). The dual being needed because the passed-in function has <code>s</code> in <em>contravariant position</em> (i.e. it stands left of the function arrow). Passing a universally-quantified function in as a parameter makes the type of <code>test</code> <a href=\"https://en.wikipedia.org/wiki/Parametric_polymorphism#Higher-ranked_polymorphism\" rel=\"nofollow noreferrer\">rank-2</a>, so you need that extension.</p>\n\n<pre><code>{-# LANGUAGE Rank2Types #-}\n\ntest :: (forall s . s -&gt; a) -&gt; Func -&gt; a\ntest f (Func s) = f s\n</code></pre>\n\n<p>But, note that you won't actually be able to use this in any meaningful way, because the passed in function can't do anything with its argument if if can't know the type. You probably want to add some constraints to both the existential and the universal. Like (I'm using the syntax I'd prefer)</p>\n\n<pre><code>{-# LANGUAGE GADTs, UnicodeSyntax #-}\n\ndata Func where\n  Func :: Show s =&gt; s -&gt; Func\n\ntest :: (\u2200s . Show s =&gt; s -&gt; a) -&gt; Func -&gt; a\ntest f (Func s) = f s\n</code></pre>\n\n<p>A possibly better alternative is to avoid existential quantification (which is <a href=\"https://lukepalmer.wordpress.com/2010/01/24/haskell-antipattern-existential-typeclass/\" rel=\"nofollow noreferrer\">often used in a way that's not really Haskell-idiomatic</a>) entirely, in favour of parametric polymorphism:</p>\n\n<pre><code>data Func s = Func s\n\ntest :: (s -&gt; a) -&gt; Func s -&gt; a \ntest f (Func s) = f s\n</code></pre>\n"}], "owner": {"reputation": 699, "user_id": 7093297, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/Pi7EY.jpg?s=128&g=1", "display_name": "wind2412", "link": "https://stackoverflow.com/users/7093297/wind2412"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 103, "favorite_count": 0, "accepted_answer_id": 49447798, "answer_count": 1, "score": 0, "last_activity_date": 1521802085, "creation_date": 1521800282, "question_id": 49447337, "link": "https://stackoverflow.com/questions/49447337/haskell-using-existentialquantification-and-got-an-error-couldnt-match-expect", "title": "Haskell: using ExistentialQuantification and got an error: Couldn&#39;t match expected type", "body": "<p>I'm using ghc extension ExistentialQuantification and got an error on it. I know the <code>s</code> type of <code>test</code>'s second argument's will not be the same as the <code>s</code> defined in <code>test</code> function, but how can I force them to be the same?</p>\n\n<pre><code>1. {-# LANGUAGE ExistentialQuantification #-}\n2.\n3. data Func = forall s . Func s\n4.\n5. test :: (s -&gt; a) -&gt; Func -&gt; a\n6. test f (Func s) = f s\n</code></pre>\n\n<p>Got an error:</p>\n\n<pre><code>Untitled..hs:6:21: error:\n    \u2022 Couldn't match expected type \u2018s\u2019 with actual type \u2018s1\u2019\n      \u2018s1\u2019 is a rigid type variable bound by\n        a pattern with constructor: Func :: forall s. s -&gt; Func,\n        in an equation for \u2018test\u2019\n        at Untitled..hs:6:9\n      \u2018s\u2019 is a rigid type variable bound by\n        the type signature for:\n          test :: forall s a. (s -&gt; a) -&gt; Func -&gt; a\n        at Untitled..hs:5:9\n    \u2022 In the first argument of \u2018f\u2019, namely \u2018s\u2019\n      In the expression: f s\n      In an equation for \u2018test\u2019: test f (Func s) = f s\n    \u2022 Relevant bindings include\n        s :: s1 (bound at Untitled..hs:6:14)\n        f :: s -&gt; a (bound at Untitled..hs:6:6)\n        test :: (s -&gt; a) -&gt; Func -&gt; a (bound at Untitled..hs:6:1)\n</code></pre>\n"}, {"tags": ["haskell", "ghc", "llvm-ir"], "comments": [{"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521809898, "post_id": 49446373, "comment_id": 85902483, "body": "For me it works. I think I use <code>llvm</code> 4.0 (on Windows). I get the message <code>You are using an unsupported version of LLVM! Currently only 3.9 is supported.</code> but it works."}, {"owner": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "reply_to_user": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521820983, "post_id": 49446373, "comment_id": 85910616, "body": "Thanks @St&#233;phaneLaurent, I&#39;m on Ubuntu (14.04.5) but it&#39;s weird they say 3.8.0 is too new, and they only support 3.9.0 :]]"}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521822085, "post_id": 49446373, "comment_id": 85911312, "body": "Maybe that depends onn the GHC version ? I&#39;m using 8.2.1."}, {"owner": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "reply_to_user": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521822778, "post_id": 49446373, "comment_id": 85911724, "body": "The Glorious Glasgow Haskell Compilation System, version 8.0.2"}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521822967, "post_id": 49446373, "comment_id": 85911817, "body": "[ you&#39;ll need to install LLVM 3.7](<a href=\"https://www.haskell.org/ghc/download_ghc_8_0_2.html\" rel=\"nofollow noreferrer\">haskell.org/ghc/download_ghc_8_0_2.html</a>)"}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521823005, "post_id": 49446373, "comment_id": 85911841, "body": "Why don&#39;t use stack ? It allows to choose the GHC version."}], "owner": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 215, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1521797658, "creation_date": 1521797658, "question_id": 49446373, "link": "https://stackoverflow.com/questions/49446373/haskell-to-llvm-bitcode", "title": "Haskell to LLVM bitcode", "body": "<p>I'm trying to reproduce the Haskell compilation in <a href=\"https://stackoverflow.com/questions/33380547/generate-llvm-ir-from-haskell-code\">this code</a>\nsimilar to what it said in that post:</p>\n\n<pre><code>ghc -fllvm quicksort.hs\n</code></pre>\n\n<p>Here is quicksort.hs:</p>\n\n<pre><code>module Test where\n\nquicksort [] = []\nquicksort (p:xs) = (quicksort lesser) ++ [p] ++ (quicksort greater)\n    where\n        lesser = filter (&lt; p) xs\n        greater = filter (&gt;= p) xs\n</code></pre>\n\n<p>However I get the following message that llvm is too new:</p>\n\n<pre><code>[1 of 1] Compiling Test             ( quicksort.hs, quicksort.o )\nYou are using a new version of LLVM that hasn't been tested yet!\nWe will try though...\nopt: /tmp/ghc6115_0/ghc6115_0.ll:12:6: error: unexpected type in metadata definition\n!0 = metadata !{metadata !\"top\"}\n     ^\n</code></pre>\n\n<p>Now this is a strange because I'm using llvm 3.8.0. What's going on here?\nThanks!</p>\n"}, {"tags": ["list", "haskell", "optimization", "partitioning"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1521796649, "post_id": 49445991, "comment_id": 85893803, "body": "This looks like a problem to solve with dynamic programming: create a list that stores the difference between the two partions, iterate over the elements, and each time update the list with the new balance."}, {"owner": {"reputation": 1780, "user_id": 4168972, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fc92e82d2eb21eb030d4c133c70ff554?s=128&d=identicon&r=PG&f=1", "display_name": "David Fletcher", "link": "https://stackoverflow.com/users/4168972/david-fletcher"}, "edited": false, "score": 0, "creation_date": 1521800637, "post_id": 49445991, "comment_id": 85896431, "body": "Why not [1,3,4], [2,6] for second example?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user6306428"}, "reply_to_user": {"reputation": 1780, "user_id": 4168972, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fc92e82d2eb21eb030d4c133c70ff554?s=128&d=identicon&r=PG&f=1", "display_name": "David Fletcher", "link": "https://stackoverflow.com/users/4168972/david-fletcher"}, "edited": false, "score": 0, "creation_date": 1521803363, "post_id": 49445991, "comment_id": 85898289, "body": "@DavidFletcher That&#39;s actually correct, I came up with an example for unbalanced list from top of my head, forgot to double check it. Added better examples."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1521812700, "post_id": 49445991, "comment_id": 85904422, "body": "@WillemVanOnsem I&#39;m not sure dynamic programming helps much here. For example, the balancing of <code>[2,2,3,5,6]</code> is <code>([2,2,5],[3,6])</code>. This solution appears unrelated to the balancing of either <code>[2,3,5,6]</code> (namely, <code>([3,5], [2,6])</code>, which unlike the larger balancing puts the <code>2</code> and the <code>6</code> together) or <code>[2,2,3,5]</code> (namely, <code>([5], [2,2,3])</code> or <code>([5,2], [2,3])</code>, both of which separate one of the <code>2</code>&#39;s from the <code>5</code>)."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1521812938, "post_id": 49445991, "comment_id": 85904588, "body": "@DanielWagner: well it works in <i>O(n k)</i> with <i>k</i> the sum of the numbers and <i>n</i> the number of elements, and with some clever optimizations, <i>k</i> can be reduced. It is basically a bit equivalent to the <i>subset</i> sum problem, but the point is that here the <i>target sum</i> changes dynamically. The advantage of using dynamic programming over backtracking, is that we will not investigate two &quot;partial&quot; subsets that have the same sum."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1521813086, "post_id": 49445991, "comment_id": 85904684, "body": "@WillemVanOnsem Ah. In that case, I believe my answer implements pretty much what you have in mind... unfortunately <i>k</i> is still exponential in <i>n</i> in general."}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 2, "last_activity_date": 1521811444, "last_edit_date": 1521811444, "creation_date": 1521810154, "answer_id": 49450324, "question_id": 49445991, "link": "https://stackoverflow.com/questions/49445991/a-better-way-of-balancing-a-list-in-haskell/49450324#49450324", "title": "A better way of balancing a list in Haskell", "body": "<p>This is kind of a fun algorithm problem. I encourage you to keep thinking about it on your own; severe spoilers below.</p>\n\n<p>Here's my plan: I'm going to compute all the possible sums of subsets, together with (just one) witness of who's in and who's out to achieve that sum. Then we'll just check which possible sum is closest to half the entire list's sum. So:</p>\n\n<pre><code>import Data.Maybe\nimport Data.Map (Map)\nimport qualified Data.Map as M\n\ntype Sums a = Map a ([a], [a])\n\nupdate :: (Num a, Ord a) =&gt; a -&gt; Sums a -&gt; Sums a\nupdate n sums = M.union\n    (                          (\\(i, o) -&gt; (i, n:o)) &lt;$&gt; sums)\n    (M.mapKeysMonotonic (n+) $ (\\(i, o) -&gt; (n:i, o)) &lt;$&gt; sums)\n\ncomputeSums :: (Num a, Ord a) =&gt; [a] -&gt; Sums a\ncomputeSums = foldr update (M.singleton 0 ([], []))\n\nbalance :: (Integral a, Ord a) =&gt; [a] -&gt; ([a], [a])\nbalance xs = snd . fromJust $ M.lookupLE (sum xs `div` 2) (computeSums xs)\n</code></pre>\n\n<p>Trying it out:</p>\n\n<pre><code>&gt; mapM_ (\\xs -&gt; putStrLn $ show xs ++ \" ---&gt; \" ++ show (balance xs)) [[2,3,2,3,2],[1,2,3,7,8],[1,2,9,10],[1,1,1,1,1,2,3]]\n[2,3,2,3,2] ---&gt; ([3,3],[2,2,2])\n[1,2,3,7,8] ---&gt; ([3,7],[1,2,8])\n[1,2,9,10] ---&gt; ([2,9],[1,10])\n[1,1,1,1,1,2,3] ---&gt; ([2,3],[1,1,1,1,1])\n</code></pre>\n\n<p>It also terminates relatively quickly on large lists:</p>\n\n<pre><code>&gt; :set +s\n&gt; (\\(a,b) -&gt; (sum a, sum b)) . balance $ replicate 1001 1\n(500,501)\n(0.12 secs, 156,255,000 bytes)\n&gt; (\\(a,b) -&gt; (sum a, sum b)) . balance $ [1..200]\n(10050,10050)\n(1.25 secs, 752,015,256 bytes)\n&gt; (\\(a,b) -&gt; (sum a, sum b)) . balance $ take 20 (iterate (2*) 1)\n(524287,524288)\n(0.92 secs, 532,754,784 bytes)\n</code></pre>\n\n<p>This last example exercises the exponential worst-case behavior of this algorithm (since every subset of the powers of two gives a different sum).</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user6306428"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 0, "accepted_answer_id": 49450324, "answer_count": 1, "score": 0, "last_activity_date": 1521811444, "creation_date": 1521796391, "last_edit_date": 1521803268, "question_id": 49445991, "link": "https://stackoverflow.com/questions/49445991/a-better-way-of-balancing-a-list-in-haskell", "title": "A better way of balancing a list in Haskell", "body": "<p>I'm learning Haskell by solving some online problems and training exercises.</p>\n\n<p>Right now I'm trying to write a function that'd take a list and balance it like this</p>\n\n<pre><code>[2,3,2,3,2] ---&gt; [[2,2,2], [3,3]]\n[1,2,3,7,8] ---&gt; [[1,2,7], [3,8]]\n[1,2,9,10] ---&gt; [[2,9],[1,10]]\n[1,1,1,1,1,2,3] ---&gt; [[1,1,1,1,1],[2,3]]\n</code></pre>\n\n<p>(always in two parts, either works in the case of 2nd)</p>\n\n<hr>\n\n<p>The way I thought of doing this was by using <a href=\"http://hackage.haskell.org/package/base-4.11.0.0/docs/Data-List.html#v:permutations\" rel=\"nofollow noreferrer\">Permutation</a> function from base Data.List</p>\n\n<p>and filtering out valid lists with a function like this</p>\n\n<pre><code>sumCheck x\n  | sum (take (length x `div` 2) x) == sum (drop (length x `div` 2) x) = True\n  | otherwise = False\n</code></pre>\n\n<p>if the length of the list is even. If not then a recursive function that'd</p>\n\n<pre><code>(take y x) (drop (y - (y - 0)) x)\n(take (y - 1) x) (drop (y - (y - 1)) x) \n</code></pre>\n\n<p>and so on.</p>\n\n<p>or by just partitioning them like this</p>\n\n<pre><code>parts :: [a] -&gt; [([a], [a])]\nparts [] = [([], [])]\nparts (x : xs) = let pts = parts xs in\n    [(x : ys, zs) | (ys, zs) &lt;- pts] ++ [(ys, x : zs) | (ys, zs) &lt;- pts]\n</code></pre>\n\n<p>then checking the balance by</p>\n\n<pre><code>checkBal (xs, ys) = abs (sum xs - sum ys)\n</code></pre>\n\n<p>and sorting in ascending order, where the first one would be most balanced.</p>\n\n<hr>\n\n<p>Now this works well for smaller lists but as you might have guessed, for large lists, it just keeps on processing.</p>\n\n<p>I think <a href=\"https://hackage.haskell.org/package/Binpack-0.4.1/docs/Data-BinPack.html\" rel=\"nofollow noreferrer\">binPack</a> could help with this but I rather not use external packages and try to do it on my own. (with some help ofc!)</p>\n"}, {"tags": ["haskell", "types"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1521793691, "post_id": 49444668, "comment_id": 85892029, "body": "As far as I know, you can use the <a href=\"https://en.wikipedia.org/wiki/Hindley%E2%80%93Milner_type_system\" rel=\"nofollow noreferrer\"><i>Hindley-Milner type system (algorithm W)</i></a>"}], "answers": [{"comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1521817741, "post_id": 49448858, "comment_id": 85908297, "body": "Fun fact: &quot;Ignoring different names&quot; is a plain English translation of the mathematical concept of <a href=\"https://en.wikipedia.org/wiki/Lambda_calculus#Alpha_equivalence\" rel=\"nofollow noreferrer\"><i>alpha equivalence</i></a>."}], "tags": [], "owner": {"reputation": 399, "user_id": 964015, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/57b3afdd566b092e68363ec93cf09d96?s=128&d=identicon&r=PG", "display_name": "f4st", "link": "https://stackoverflow.com/users/964015/f4st"}, "is_accepted": false, "score": 5, "last_activity_date": 1521805233, "creation_date": 1521805233, "answer_id": 49448858, "question_id": 49444668, "link": "https://stackoverflow.com/questions/49444668/manually-determine-the-type-of-an-expression/49448858#49448858", "title": "Manually determine the type of an expression", "body": "<p>Knowing Hindle-Milner is definitely a possibility, but in many cases, you can get to a correct result using just a little bit of intuition.</p>\n\n<p>As you say, for basic expressions it's quite easy. Let's say you've got a simple function like <code>f :: Integer -&gt; Integer -&gt; Integer</code>. When you apply this function to an <code>Integer</code> (ie. something like <code>f 42</code>), you can immediately see that the type of this is <code>Integer -&gt; Integer</code>. Trivial.</p>\n\n<p>The fun begins once you start introducing type variables and constraints. Even though the basic concepts are still the same - applying a function of type <code>a -&gt; b</code> to an expression of type <code>a</code> yields you a <code>b</code> - you have to be careful to not mix up all the type variables and to not forget the constraints.</p>\n\n<p>Let's take your example of <code>(.) . (.)</code> and go through it, step by step.</p>\n\n<ul>\n<li>First of all, let's rewrite it as <code>((.) (.)) (.)</code> - this an application of <code>(.)</code> to <code>(.)</code> with the result being applied to yet another <code>(.)</code>. Let's just focus on the first application and take care of the second one later.</li>\n<li>As you know, the type of <code>(.)</code> is <code>(b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c</code> and in this case we're applying it to itself - therefore, we have to unify the type of the first argument (ie. <code>b -&gt; c</code>) with the type of <code>(.)</code>. This is the part where you have to be careful about your type variables - for this reason, I'll rename the type variables of the second (and later even the third) <code>(.)</code> to <code>(b1 -&gt; c1) -&gt; (a1 -&gt; b1) -&gt; a1 -&gt; c1</code> - this has no effect on the actual type, it just makes it easy for us to not get lost later.</li>\n<li>With this renaming now in place, let's unify the type of <code>b -&gt; c</code> with the type <code>(b1 -&gt; c1) -&gt; (a1 -&gt; b1) -&gt; a1 -&gt; c1</code>. <code>b</code> gets unified with <code>b1 -&gt; c1</code> and <code>c</code> gets unified with the rest, <code>(a1 -&gt; b1) -&gt; a1 -&gt; c1</code>. As there are no constraints on any of the type variables, we don't need to care about those.</li>\n<li>Now that we know the actual types that <code>b</code> and <code>c</code> represent, we can substitute these into the type of <code>(.)</code> (ignoring the first parameter, because we've just applied that) and we'll end up with this: <code>(a -&gt; b1 -&gt; c1) -&gt; a -&gt; (a1 -&gt; b1) -&gt; a1 -&gt; c1</code></li>\n<li>Now we can move on by applying this to the last remaining <code>(.)</code>.</li>\n<li>We need to unify the type of the last <code>(.)</code> (whose type variables I'll rename to <code>a2</code>, <code>b2</code> and <code>c2</code>, so it becomes <code>(b2 -&gt; c2) -&gt; (a2 -&gt; b2) -&gt; a2 -&gt; c2</code>) with <code>(a -&gt; b1 -&gt; c1)</code>. This is, again, easy. <code>a</code> becomes <code>b2 -&gt; c2</code>, <code>b1</code> becomes <code>a2 -&gt; b2</code> and finally <code>c1</code> becomes <code>a2 -&gt; c2</code>.</li>\n<li>Once again, we can substitute these into our original type before the unification, ignoring the parameter that represents the <code>(.)</code> we've just applied, We'll get <code>(b2 -&gt; c2) -&gt; (a1 -&gt; a2 -&gt; b2) -&gt; a1 -&gt; a2 -&gt; c2</code> and we are done.</li>\n</ul>\n\n<p>Ignoring different names, you can see that this is exactly the same result you'd get by using <code>:t (.) . (.)</code>.</p>\n\n<p>I hope this helps.</p>\n"}, {"tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": false, "score": 2, "last_activity_date": 1521807829, "creation_date": 1521807829, "answer_id": 49449589, "question_id": 49444668, "link": "https://stackoverflow.com/questions/49444668/manually-determine-the-type-of-an-expression/49449589#49449589", "title": "Manually determine the type of an expression", "body": "<p>Here is a somewhat graphical view of type inference.\nWe want to find the type of</p>\n\n<pre><code>(.)  .  (.) :: ?\n</code></pre>\n\n<p>For that we first list out the type of each variable, using fresh type variables. Putting lots of parentheses will also help avoid mistakes in the next steps.</p>\n\n<pre><code>    (.)     :: (a1 -&gt; a2) -&gt; ((a0 -&gt; a1) -&gt; (a0 -&gt; a2))\n(.)         :: (b1 -&gt; b2) -&gt; ((b0 -&gt; b1) -&gt; (b0 -&gt; b2))\n        (.) :: (c1 -&gt; c2) -&gt; ((c0 -&gt; c1) -&gt; (c0 -&gt; c2))\n</code></pre>\n\n<p>Then we align the types so the types of arguments match with the type of functions. First, for a simpler example, if we wanted to find the type of <code>f x y</code> where</p>\n\n<pre><code>f     :: a -&gt; a -&gt; a\n  x   :: b\n    y :: c\n</code></pre>\n\n<p>then we would align the types as follows</p>\n\n<pre><code>f     :: a -&gt; (a -&gt; a)\n  x   :: b             -- First argument\n    y ::       c        -- Second argument\n                 -- ^ Result type\n</code></pre>\n\n<p>Because <code>x</code> is the first argument of <code>f</code>, and <code>y</code> the second. This tells us to equate <code>a = b</code> and <code>a = c</code>, and that the result type is <code>a</code></p>\n\n<p>Here's what the diagram looks like for the original problem, adding lots of whitespace to stretch expressions so they match. </p>\n\n<pre><code>    (.)     :: (a1         -&gt; a2                        ) -&gt; (a0         -&gt; a1                        ) -&gt; (a0 -&gt; a2)\n(.)         ::  (b1 -&gt; b2) -&gt; ((b0 -&gt; b1) -&gt; (b0 -&gt; b2))\n        (.) ::                                                (c1 -&gt; c2) -&gt; ((c0 -&gt; c1) -&gt; (c0 -&gt; c2))\n                                                                                                        -- ^ Result\n</code></pre>\n\n<p>By looking at the columns these form, we obtain the following equations between types:</p>\n\n<pre><code>a1 = (b1 -&gt; b2)\na2 = ((b0 -&gt; b1) -&gt; (b0 -&gt; b2))\na0 = (c1 -&gt; c2)\na1 = ((c0 -&gt; c1) -&gt; (c0 -&gt; c2))\n</code></pre>\n\n<p>From the first one and the last one, we deduce further two more equations</p>\n\n<pre><code>b1 = (c0 -&gt; c1)\nb2 = (c0 -&gt; c2)\n</code></pre>\n\n<p>And the result type is <code>(a0 -&gt; a2)</code>, i.e., after substitution:</p>\n\n<pre><code>(c1 -&gt; c2) -&gt; (b0 -&gt; c0 -&gt; c1) -&gt; (b0 -&gt; c0 -&gt; c2)\n</code></pre>\n"}], "owner": {"reputation": 1492, "user_id": 3301188, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/df7a9e91cc32c3cfdb6d64595075cd69?s=128&d=identicon&r=PG", "display_name": "philx_x", "link": "https://stackoverflow.com/users/3301188/philx-x"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 281, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1521807829, "creation_date": 1521791073, "last_edit_date": 1521793503, "question_id": 49444668, "link": "https://stackoverflow.com/questions/49444668/manually-determine-the-type-of-an-expression", "title": "Manually determine the type of an expression", "body": "<p>How would I go about determining the type of an expression by hand, instead of using <code>:type</code> in GHCi?</p>\n\n<p>For basic expressions we can do it by just looking at the expression and come up with some type.</p>\n\n<p>Is there some kind of algorithmic approach for more complex expressions like <code>(.) . (.)</code>?</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 765, "user_id": 3316409, "user_type": "registered", "profile_image": "https://graph.facebook.com/719585406/picture?type=large", "display_name": "dvaergiller", "link": "https://stackoverflow.com/users/3316409/dvaergiller"}, "is_accepted": true, "score": 3, "last_activity_date": 1521795041, "creation_date": 1521795041, "answer_id": 49445623, "question_id": 49444631, "link": "https://stackoverflow.com/questions/49444631/how-do-accumulators-work-in-haskell/49445623#49445623", "title": "How do accumulators work in Haskell?", "body": "<p><code>go</code> is a function that is locally defined using the <code>where</code> keyword and then used directly in the <code>accu</code> function. Have a look here:\n<a href=\"http://learnyouahaskell.com/syntax-in-functions#where\" rel=\"nofollow noreferrer\">http://learnyouahaskell.com/syntax-in-functions#where</a></p>\n\n<p>That means the accumulator does not really change, it is just a different accumulator in each recursive call to the <code>go</code> function. The last line will recursively call the <code>go</code> function with a new accumulator value.</p>\n"}, {"tags": [], "owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "is_accepted": false, "score": 0, "last_activity_date": 1522039881, "creation_date": 1522039881, "answer_id": 49484169, "question_id": 49444631, "link": "https://stackoverflow.com/questions/49444631/how-do-accumulators-work-in-haskell/49484169#49484169", "title": "How do accumulators work in Haskell?", "body": "<p>Why not do it simply. </p>\n\n<pre><code>(\\n -&gt; (sum [0..n], [0..n])) 4\n(10,[0,1,2,3,4])\n</code></pre>\n\n<p>Or this is cleaner but longer.</p>\n\n<pre><code>(\\n -&gt; (\\l -&gt; (sum l, l)) [0..n]) 5\n(15,[0,1,2,3,4,5])\n</code></pre>\n"}], "owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 778, "favorite_count": 0, "accepted_answer_id": 49445623, "answer_count": 2, "score": 1, "last_activity_date": 1522039881, "creation_date": 1521790879, "last_edit_date": 1521795477, "question_id": 49444631, "link": "https://stackoverflow.com/questions/49444631/how-do-accumulators-work-in-haskell", "title": "How do accumulators work in Haskell?", "body": "<p>Hello i am trying to understand how do accumulators work by creating the following method :</p>\n\n<p>It receives a number and it creates a tuple of: <code>(sum [0..nr], [0..nr])</code>. For instance, given <code>4</code>, it should return <code>(10, [0,1,2,3,4])</code>.</p>\n\n<p>This is the code I have:</p>\n\n<pre><code>accu :: Int -&gt; (Int, [Int])\naccu 0  = (0, [0])\naccu nr = go (0, []) nr where   --I do not get this line, mainly the first argument\n            go (s,ls) 0  = (s, 0:ls)\n            go (s,ls) nr = go (s+nr, nr:ls) (nr-1)\n</code></pre>\n\n<p>I do not understand how the accumulator changes its value, since it is not a function, and thus shouldn't it be immutable? Shouldn't it be like a constant in my case?</p>\n"}, {"tags": ["haskell", "tuples"], "comments": [{"owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "edited": false, "score": 0, "creation_date": 1521842947, "post_id": 49441806, "comment_id": 85920739, "body": "I&#39;m not sure I understand the question. I think you are talking about converting tuple pairs to list pairs or a linear list of numbers. First, this is a list comprehension to convert tuple pairs to list pairs. Second just put a &#39;concat&#39; before the comprehension to get a linear list. &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;  [ [a,b] | (a,b) &lt;- zip [1..15] [16..30] ]"}], "answers": [{"tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": true, "score": 3, "last_activity_date": 1521778019, "creation_date": 1521778019, "answer_id": 49442208, "question_id": 49441806, "link": "https://stackoverflow.com/questions/49441806/cannot-form-a-list-of-tuples-in-haskell/49442208#49442208", "title": "Cannot form a list of tuples in Haskell", "body": "<p>Your issue is not with forming the list - the error shows line 16, which is the check function.  Looking there we see:</p>\n\n<pre><code>check :: [(Int, Int)] -&gt; Bool\ncheck points = ((==) `on` length) (nub $ map fst points) points\n</code></pre>\n\n<p>Notice the type of your equality function:</p>\n\n<pre><code>((==) `on` length) :: Foldable t =&gt; t a -&gt; t a -&gt; Bool\n</code></pre>\n\n<p>So you need to provide two arguments of the same type (advanced note: <code>on</code> would need to use RankNTypes to allow length to apply to arguments of different types).  However, you provide arguments of two different types (<code>[Int]</code> and <code>[(Int,Int)]</code>).  Stop trying to be fancy and just do the readable solution:</p>\n\n<pre><code>length (nub (map fst points)) == length points\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 1, "last_activity_date": 1521779339, "creation_date": 1521779339, "answer_id": 49442369, "question_id": 49441806, "link": "https://stackoverflow.com/questions/49441806/cannot-form-a-list-of-tuples-in-haskell/49442369#49442369", "title": "Cannot form a list of tuples in Haskell", "body": "<p>The error message tells you the problem is in <code>check</code>, and not in <code>main</code> (in particular, it doesn't have to do with <code>read</code> or <code>return</code>). More specifically, it says the type mismatch happens in the second argument of <code>(==) `on` length</code>. That being so, it is a good idea to have a look at what the type of <code>(==) `on` length</code> is:</p>\n\n<pre><code>GHCi&gt; :t (==) `on` length\n(==) `on` length :: Foldable t =&gt; t a -&gt; t a -&gt; Bool\n</code></pre>\n\n<p>That tells us both lists must have the same element type, which isn't the case in your <code>check</code> -- ergo \"Couldn't match type <code>(Int, Int)</code> with <code>Int</code>\". <code>on</code> accepts a single arbitrary projection function (<code>length</code>, in your case), and so the only way it can be ensured that the projection can be applied to both arguments is if they have the same type:</p>\n\n<pre><code>GHCi&gt; :t on\non :: (b -&gt; b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; a -&gt; c\n</code></pre>\n\n<p>There is no way the type system can make use of the fact that, in your specific case,  <code>length</code> can be applied to lists regardless of the element type and so the difference between the types of the arguments is irrelevant.</p>\n\n<p>The simplest solution to this difficulty is giving up on <code>on</code>:</p>\n\n<pre><code>check points = length (nub (map fst points)) == length points\n</code></pre>\n\n<p>Alternatively, you can apply <code>map fst</code> on both sides -- the element values don't matter except for <code>nub</code>, so it doesn't make a difference</p>\n\n<pre><code>check points = ((==) `on` length) (nub xCoords) xCoords\n    where\n    xCoords = map fst points\n</code></pre>\n\n<p>A more explicit way of achieving the same effect is with <code>void</code> from <code>Data.Functor</code>, which can be used to discard list elements:</p>\n\n<pre><code>check points = ((==) `on` length) (void . nub $ map fst points) (void points)\n</code></pre>\n\n<p>Finally, there is the option of switching to a different algorithm altogether. That makes an improvement possible: <code>check</code> can be performed by running through just the shortest list, rather than both of them (as using <code>length</code> twice demands). You might want to have a go at implementing that. For the sake of illustration, here is a fancy solution which exploits <a href=\"https://hackage.haskell.org/package/these-0.7.4/docs/Data-These.htm%C3%A7\" rel=\"nofollow noreferrer\"><code>These</code>, the exclusive disjunction type provided by the <em>these</em> package</a>.</p>\n\n<pre><code>import Data.List (nub)\nimport Data.Align (align)\nimport Data.These (isThese)\n\ncheck :: Eq a =&gt; [(a, b)] -&gt; Bool\ncheck pairs = null . dropWhile isThese $ align (nub . map fst $ pairs) pairs\n</code></pre>\n\n<p><code>align</code> can be succinctly described as a greedy <code>zip</code>. For extra commentary on that, cf. <a href=\"https://stackoverflow.com/q/41336345/2751851\"><em>Does Haskell have a greedy zip (one preserving all elements)?</em></a></p>\n"}], "owner": {"reputation": 287, "user_id": 3226641, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/08464e5b46111091f47687f4aad09c13?s=128&d=identicon&r=PG&f=1", "display_name": "yhylord", "link": "https://stackoverflow.com/users/3226641/yhylord"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 57, "favorite_count": 0, "accepted_answer_id": 49442208, "answer_count": 2, "score": 1, "last_activity_date": 1521779359, "creation_date": 1521774796, "last_edit_date": 1521779359, "question_id": 49441806, "link": "https://stackoverflow.com/questions/49441806/cannot-form-a-list-of-tuples-in-haskell", "title": "Cannot form a list of tuples in Haskell", "body": "<p>So my code tries to read pairs of <code>Int</code>s and turn them into a list:</p>\n\n<pre><code>import Control.Monad (forM, forM_)\nimport Data.Function (on)\nimport Data.List     (nub)\n\nmain = do\n    t &lt;- readLn\n    forM_ [1..t] (\\_ -&gt; do\n        n &lt;- readLn\n        points &lt;- forM [1..n] (\\_ -&gt; do\n            pointStr &lt;- getLine\n            let [x, y] = map read $ words pointStr\n            return (x, y))\n        putStrLn $ if check points then \"YES\" else \"NO\")\n\ncheck :: [(Int, Int)] -&gt; Bool\ncheck points = ((==) `on` length) (nub $ map fst points) points\n</code></pre>\n\n<p>However, GHC complains that</p>\n\n<pre><code>   \u2022 Couldn't match type \u2018(Int, Int)\u2019 with \u2018Int\u2019\n     Expected type: [Int]\n       Actual type: [(Int, Int)]\n   \u2022 In the second argument of \u2018(==) `on` length\u2019, namely \u2018points\u2019\n     In the expression: ((==) `on` length) (nub $ map fst points) points\n     In an equation for \u2018check\u2019:\n       check points = ((==) `on` length) (nub $ map fst points) points\n     |\n  16 | check points = ((==) `on` length) (nub $ map fst points) points\n     |                                                          ^^^^^^\n</code></pre>\n\n<p>I have tried to add a type declaration around <code>read</code>, but that doesn't work either. If I replace <code>return (x, y)</code> with <code>return x</code>, I get the same error. It seems like GHC recognizes <code>(x, y)</code> as an <code>Int</code>, rather than <code>(Int, Int)</code>.</p>\n\n<p>Any help?</p>\n"}, {"tags": ["list", "haskell", "tuples"], "comments": [{"owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "edited": false, "score": 1, "creation_date": 1521774643, "post_id": 49441567, "comment_id": 85885413, "body": "Can you give example input/output? for example <code>f [(1,5), (4,3), (5,6), (1,7), (7,9), (3,11)] [(6, 10)] = ...?</code>"}, {"owner": {"reputation": 585, "user_id": 3255197, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/D1FVb.jpg?s=128&g=1", "display_name": "AndyPet74", "link": "https://stackoverflow.com/users/3255197/andypet74"}, "reply_to_user": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "edited": false, "score": 0, "creation_date": 1521775249, "post_id": 49441567, "comment_id": 85885559, "body": "So expected would be: [(1,5),(5,6)(6,10)] whereas my output is [(5,6)(6,10)]  because my function continues down the tail and loses focus on the old head&#39;s"}, {"owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "edited": false, "score": 0, "creation_date": 1521784502, "post_id": 49441567, "comment_id": 85888046, "body": "I guess I don&#39;t understand why you&#39;d get anything but an infinite list <code>(1, 5)</code> matches both the <code>1</code> and the <code>5</code> -- so what&#39;s causing the base case?"}, {"owner": {"reputation": 14543, "user_id": 235908, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/rTstt.jpg?s=128&g=1", "display_name": "Simon Shine", "link": "https://stackoverflow.com/users/235908/simon-shine"}, "edited": false, "score": 1, "creation_date": 1521787907, "post_id": 49441567, "comment_id": 85889413, "body": "I also don&#39;t understand the problem description. You say that you need to return to the start of the list, but this is perhaps because you have not aggregated your input in such a way that it&#39;s immediately accessible in the way that you need it to be. You say &quot;I need to go from 1 to 4 to 5&quot;, but what does that mean? What happens when you &quot;go&quot; to 4? These seem to be the 1st part of the tuples; what is the significance of the 2nd part? Try and rephrase your problem description so it describes the problem and not your solution so far. (You can describe this separately of course.)"}, {"owner": {"reputation": 585, "user_id": 3255197, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/D1FVb.jpg?s=128&g=1", "display_name": "AndyPet74", "link": "https://stackoverflow.com/users/3255197/andypet74"}, "edited": false, "score": 0, "creation_date": 1521812698, "post_id": 49441567, "comment_id": 85904420, "body": "I added an edit which hopefully helps clear somethings up, sorry guys for not providing enough."}], "answers": [{"comments": [{"owner": {"reputation": 585, "user_id": 3255197, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/D1FVb.jpg?s=128&g=1", "display_name": "AndyPet74", "link": "https://stackoverflow.com/users/3255197/andypet74"}, "edited": false, "score": 0, "creation_date": 1521822878, "post_id": 49454053, "comment_id": 85911768, "body": "After reading over this once it seems to be extremely helpful. Let me do some digging and I&#39;ll comment back any questions. But this is exactly what I was talking about. Thank you for writing in an easy to understand manner as well."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 1, "last_activity_date": 1521823050, "last_edit_date": 1521823050, "creation_date": 1521821652, "answer_id": 49454053, "question_id": 49441567, "link": "https://stackoverflow.com/questions/49441567/haskell-iterating-through-loop-with-ability-to-look-back/49454053#49454053", "title": "Haskell Iterating through Loop with ability to look back", "body": "<p>Since you're learning Haskell, I guess you probably want to solve this problem yourself, so let me show you how might solve a simpler variation.  Let's say we have a list of words, and we want to build a new list of words where, for each adjacent pair, the last letter of the first word in the pair matches the first letter of the last word.  However, we'll <strong>only</strong> add words to the end of our list (unlike your example where you can add pairs to the beginning or end, or maybe even somewhere in the middle -- it wasn't clear from your description).</p>\n\n<p>So, if we start with a list of words:</p>\n\n<pre><code>[\"cat\",\"bat\",\"cow\",\"war\",\"rot\",\"tar\"]\n</code></pre>\n\n<p>and a \"seed\" list:</p>\n\n<pre><code>[\"tub\"]\n</code></pre>\n\n<p>then we'd like:</p>\n\n<pre><code>link [\"cat\",\"bat\",\"cow\",\"war\",\"rot\",\"tar\"] [\"tub\"]\n</code></pre>\n\n<p>to give:</p>\n\n<pre><code>[\"tub\",\"bat\",\"tar\",\"rot\"]\n</code></pre>\n\n<p>Here, starting with the list <code>[\"tub\"]</code>, we've found the first word that <em>starts</em> with a \"b\", so we can add it to the end to get <code>[\"tub\",\"bat\"]</code>, then we search for the remaining first word that starts with \"t\" to get <code>[\"tub\",\"bat\",\"tar\"]</code>, and then we search for the first remaining word that starts with \"r\" to get <code>[\"tub\",\"bat\",\"tar\",\"rot\"]</code>, and then the program ends because there are no remaining words that start with \"t\".</p>\n\n<p>Our first try (which I think is similar to your algorithm above) might be:</p>\n\n<pre><code>link :: [String] -&gt; [String] -&gt; [String]\nlink (wrd:wrds) chain\n  | lastLetter == head wrd = link wrds (chain ++ [wrd])\n  | otherwise              = link wrds chain\n  where lastLetter = last (last chain)\nlink [] chain = chain\n</code></pre>\n\n<p>Unfortunately, this gives the wrong answer:</p>\n\n<pre><code>&gt; link [\"cat\",\"bat\",\"cow\",\"war\",\"rot\",\"tar\"] [\"tub\"]\n[\"tub\",\"bat\",\"tar\"]\n&gt;\n</code></pre>\n\n<p>It misses <code>\"rot\"</code> because it only processes the tail of the list of words after adding <code>\"tar\"</code>, and there are no more words left.  You need it to go back to the beginning of the list, and this is where you're stuck.</p>\n\n<p>The problem is that, when you get the first successful match on <code>\"bat\"</code>, the recursive call is:</p>\n\n<pre><code>link wrds (chain ++ [wrd])\n=\nlink [\"cow\",\"war\",\"rot\",\"tar\"] ([\"tub\"] ++ [\"bat\"])\n</code></pre>\n\n<p>instead of:</p>\n\n<pre><code>link wrds (chain ++ [wrd])\n=\nlink [\"cat\",\"cow\",\"war\",\"rot\",\"tar\"] ([\"tub\"] ++ [\"bat\"])\n</code></pre>\n\n<p>You somehow need to include the list of unmatched words you've already processed (namely <code>[\"cat\"]</code>) as well as the tail of the list of words (starting with <code>\"cow\"</code>).</p>\n\n<p>In Haskell, if you need some information (like the \"list of unmatched words you've already processed), you usually pass it along as an extra parameter.  So, let's rewrite <code>link</code> to take that extra list:</p>\n\n<pre><code>link' :: [String] -&gt; [String] -&gt; [String] -&gt; [String]\nlink' unmatched (wrd:wrds) chain = ...\n</code></pre>\n\n<p>with the idea that the initial list of unmatched words will be empty:</p>\n\n<pre><code>&gt; link' [] [\"cat\",\"bat\",\"cow\",\"war\",\"rot\",\"tar\"] [\"tub\"]\n</code></pre>\n\n<p>Now, let's figure out the definition of <code>link'</code>.  We'll start with the easiest case, the \"otherwise\" case, where we did <em>not</em> match on the current <code>wrd</code>.  In this case, we add <code>wrd</code> to the list of unmatched words and continue looking in the rest of the <code>wrds</code>:</p>\n\n<pre><code>... | otherwise = link' (unmatched ++ [wrd]) wrds chain\n</code></pre>\n\n<p>On the other hand, if we <em>do</em> match, we want to add the word to the chain:</p>\n\n<pre><code>... | lastLetter == head wrd = link' ?? ?? (chain ++ [wrd])\n</code></pre>\n\n<p>but what should the first two arguments be?  Well, we want to start fresh, looking through all the words in the list except the <code>wrd</code> we matched.  That is, we want to look through all the <code>unmatched</code> words, plus the rest of the <code>wrds</code>, so we want:</p>\n\n<pre><code>... | lastLetter == head wrd = link' ?? (unmatched ++ wrds) (chain ++ [wrd])\n</code></pre>\n\n<p>What about the first argument for this call?  Well, we're starting fresh, so there aren't any unmatched words -- the unmatched list should be empty:</p>\n\n<pre><code>... | lastLetter == head wrd = link' [] (unmatched ++ wrds) (chain ++ [wrd])\n</code></pre>\n\n<p>This gives the complete, updated definition:</p>\n\n<pre><code>link' :: [String] -&gt; [String] -&gt; [String] -&gt; [String]\nlink' unmatched (wrd:wrds) chain\n  | lastLetter == head wrd = link' [] (unmatched ++ wrds) (chain ++ [wrd])\n  | otherwise              = link' (unmatched ++ [wrd]) wrds chain\n  where lastLetter = last (last chain)\n</code></pre>\n\n<p>What about the terminating case:</p>\n\n<pre><code>link' unmatched [] chain = ???\n</code></pre>\n\n<p>This is perhaps a little trickier.  However, remember that, if we ever <em>match</em> a word, we jump back to the beginning with:</p>\n\n<pre><code>link' [] (unmatched ++ wrds) (chain ++ [wrd])\n</code></pre>\n\n<p>If there's at least one word left (i.e., if <code>(unmatched ++ wrds)</code> is non-empty), we'll keep going with a non-terminating case.  The only way we could get to the terminating case would be if (1) we matched the last available word and jumped back to the \"beginning\" with an empty word list, or (2) we got to the end of the word list without a match.  In <em>either</em> case, the chain is complete -- in case (1), all words in the word list have been successfully added to the chain; in case (2), the word list is non-empty, but none of the words can be successfully added.  So, in <em>either</em> case, we want to stop and return the chain, and the terminating case is:</p>\n\n<pre><code>link' unmatched [] chain = chain\n</code></pre>\n\n<p>When you use an \"extra\" parameter like this, it's common to wrap things up in a helper function, so the final revised definition of <code>link</code> would look something like this:</p>\n\n<pre><code>link :: [String] -&gt; [String] -&gt; [String]\nlink wrds chain = link' [] wrds chain\n  where\n    link' unmatched (wrd:wrds) chain\n      | lastLetter == head wrd = link' [] (unmatched ++ wrds) (chain ++ [wrd])\n      | otherwise              = link' (unmatched ++ [wrd]) wrds chain\n      where lastLetter = last (last chain)\n    link' unmatched [] chain = chain\n</code></pre>\n\n<p>This now gives the right answer:</p>\n\n<pre><code>&gt; link [\"cat\",\"bat\",\"cow\",\"war\",\"rot\",\"tar\"] [\"tub\"]\n[\"tub\",\"bat\",\"tar\",\"rot\"]\n&gt;\n</code></pre>\n"}], "owner": {"reputation": 585, "user_id": 3255197, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/D1FVb.jpg?s=128&g=1", "display_name": "AndyPet74", "link": "https://stackoverflow.com/users/3255197/andypet74"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 871, "favorite_count": 0, "accepted_answer_id": 49454053, "answer_count": 1, "score": 0, "last_activity_date": 1521823050, "creation_date": 1521772828, "last_edit_date": 1521812671, "question_id": 49441567, "link": "https://stackoverflow.com/questions/49441567/haskell-iterating-through-loop-with-ability-to-look-back", "title": "Haskell Iterating through Loop with ability to look back", "body": "<p>I am learning Haskell currently and running into a problem where I am trying iterate through a list but I need the ability to return to the start of the list. For instance, if my list of tuples is is:</p>\n\n<p><code>[(1,5), (4,3), (5,6), (1,7), (7,9), (3,11)]</code></p>\n\n<p>I need to go from 1 to 4 to 5... I am doing this currently by recursively calling my function on the tail of the list. This works as it should but here is the problem:</p>\n\n<p>I am matching the numbers to another list of tuples. So for instance, my second list would be something like</p>\n\n<p><code>[(6,10)]</code></p>\n\n<p>So Neither 1 or 5 match 6 or 10, neither 4 or 3 match 6 or 10 but the 6 from <code>(5,6)</code> matches so I would add it to the front. and now I need to start back at the front of the list. The problem is the way I am iterating, calling the function by calling the tail means I can't see the <code>(1,5), (4,3)</code> I have been struggling to conceptually solve this problem for the better half of a week. I know how to the whole <code>(head list) : function (tail list)</code> but since my return is the new list of matched pairs I can't quite get that to work. </p>\n\n<p>Not sure if that makes sense but in a nutshell after adding the <code>(5,6)</code> to the list I get the result of <code>[(5,6),(6,10)]</code> which is good but when I want to now start checking again it starts with <code>(1,7)</code> instead of <code>(1,5)</code> which would match now.</p>\n\n<p>My code is in pieces right now in the middle of a solution so it would be a giant mess to show. Plus I am really just wanting help trying to conceptualize what I have to do. </p>\n\n<p><strong>EDIT</strong></p>\n\n<p>Ok to clear up some confusion, lets say I have two lists:</p>\n\n<p><code>list1: [(8,7),(1,5),(8,9),(4,3),(5,6),(1,7),(11,9)]\n list2: [(6,10),(10,12)]</code></p>\n\n<p>I have a function that takes both lists and will return the updated list2. List1 compares the characters in it's tuples with the characters at the front and rear of list2's tuples (I don't want to insert into between as they are linked <code>...,10)&lt;--&gt;(10,...</code>). So starting off, <code>(8,7)</code> does not match to either the <code>6</code> or <code>12</code> so I move on. Now when I move on I am calling back my function and passing it the tail of list1. </p>\n\n<p>for instance:\n<code>master list1 list2 \n      | comparisons.... = master (tail list1) (addToList list2)\n      . \n      .\n      .\n      | otherwise = master (tail list1) list2\n</code>\nI am not writing out all the comparisons to save space but they all work fine and it goes through the list as it should except for one part. Back to the list, I now have <code>(1,5)</code> which against doesn't match so I pass off the tail and get to <code>(8,9)</code>, again nothing so I progress, <code>(4,3)</code> doesn't match so I get to <code>(5,6)</code> which does match, I can flip it and add it to the front to make <code>[(5,6),(6,10),(10,12)]</code> and now I would remove <code>(5,6)</code> from list1 as I already added it to list2.  The problem is now I Would again pass the tail and be on <code>(1,7)</code> and then <code>(11,9)</code> which would then end the program because we are at the end of the list. </p>\n\n<p>My desired output would be <code>[(11,9),(9,8),(8,7),(7,1),(1,5),(5,6),(6,10),(10,12)]</code> instead of <code>[(5,6),(6,10),(10,12)]</code></p>\n\n<p>Again, code isn't really going to help me I just want someone to offer up a different way to think of it. This is my first time touching a functional language and to say I am confused at parts is an understatement. </p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 2424, "user_id": 3206471, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/fdc1f4bd9f3118fff33a160e9efdb61e?s=128&d=identicon&r=PG", "display_name": "gigabytes", "link": "https://stackoverflow.com/users/3206471/gigabytes"}, "edited": false, "score": 0, "creation_date": 1521771165, "post_id": 49441177, "comment_id": 85884594, "body": "What is exactly your question? Have you tried to pattern match on it and failed in some way? Your example does not even compile since you didn&#39;t instantiate <code>Eq</code> for the <code>Fruit</code> type so you don&#39;t have <code>(==)</code>."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 4, "creation_date": 1521771491, "post_id": 49441177, "comment_id": 85884679, "body": "<code>isYellow Banana = True</code>; <code>isYellow _ = False</code> \u2013 does that answer your question?"}], "owner": {"reputation": 159, "user_id": 3462522, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/db60b1fd3c3e45a93251306889c6c9ff?s=128&d=identicon&r=PG&f=1", "display_name": "user3462522", "link": "https://stackoverflow.com/users/3462522/user3462522"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 33, "favorite_count": 0, "closed_date": 1521774810, "answer_count": 0, "score": 1, "last_activity_date": 1521769693, "creation_date": 1521769693, "question_id": 49441177, "link": "https://stackoverflow.com/questions/49441177/pattern-match-with-data", "closed_reason": "Duplicate", "title": "Pattern Match With Data", "body": "<p>How do I pattern match against a data type?</p>\n\n<pre>\n\ndata Fruit = Apple | Banana | Orange \n\nisYellow :: Fruit -> Bool\nisYellow x\n  | x == Banana = True\n  | otherwise = False\n\n</pre>\n"}, {"tags": ["haskell", "ghc"], "comments": [{"owner": {"reputation": 12941, "user_id": 292731, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/e3f90adedab79538799e2375a9731920?s=128&d=identicon&r=PG", "display_name": "Justin L.", "link": "https://stackoverflow.com/users/292731/justin-l"}, "edited": false, "score": 0, "creation_date": 1521780343, "post_id": 49441116, "comment_id": 85886774, "body": "What is the error?"}, {"owner": {"reputation": 317, "user_id": 4298165, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f8e7f9af5c7b5481b2092c7a3b7bb25e?s=128&d=identicon&r=PG&f=1", "display_name": "gntskn", "link": "https://stackoverflow.com/users/4298165/gntskn"}, "reply_to_user": {"reputation": 12941, "user_id": 292731, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/e3f90adedab79538799e2375a9731920?s=128&d=identicon&r=PG", "display_name": "Justin L.", "link": "https://stackoverflow.com/users/292731/justin-l"}, "edited": false, "score": 0, "creation_date": 1521802426, "post_id": 49441116, "comment_id": 85897670, "body": "@Justin L. I&#39;ve updated the question"}, {"owner": {"reputation": 11001, "user_id": 727667, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/2e2cbd3a202d8d1cfe0cc2a9fff86733?s=128&d=identicon&r=PG", "display_name": "gallais", "link": "https://stackoverflow.com/users/727667/gallais"}, "edited": false, "score": 0, "creation_date": 1522158120, "post_id": 49441116, "comment_id": 86033805, "body": "You could of course play the usual trick of <code>data BinOp = Add | Sub | mul</code> and <code>data Instruction r where BinOp :: BinOp -&gt; Instruction r -&gt; Instruction r -&gt; Instruction r</code>."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1521825460, "post_id": 49453386, "comment_id": 85913179, "body": "That is ... weird. Your surprisingly-working example actually does seem to produce a constructor of the right type. It would be awfully nice if the OP&#39;s example would work too; it really doesn&#39;t seem like it should be so hard."}, {"owner": {"reputation": 317, "user_id": 4298165, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f8e7f9af5c7b5481b2092c7a3b7bb25e?s=128&d=identicon&r=PG&f=1", "display_name": "gntskn", "link": "https://stackoverflow.com/users/4298165/gntskn"}, "edited": false, "score": 0, "creation_date": 1521853853, "post_id": 49453386, "comment_id": 85923403, "body": "This is helpful, but does this mean the GADT definition signatures are just sugar for more complicated types? If so, where can I read about this?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1521856394, "post_id": 49453386, "comment_id": 85923824, "body": "I don&#39;t know how GHC actually does GADTs, but they certainly can be understood as wrappers around reified constraints (ofte, equality constraints). <a href=\"https://medium.com/@jonathangfischoff/existential-quantification-patterns-and-antipatterns-3b7b683b7d71\" rel=\"nofollow noreferrer\">Here&#39;s a blog post</a> that discusses this quite a bit."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 3, "last_activity_date": 1521819443, "creation_date": 1521819443, "answer_id": 49453386, "question_id": 49441116, "link": "https://stackoverflow.com/questions/49441116/is-it-possible-to-use-a-type-alias-in-a-gadt-definition/49453386#49453386", "title": "Is it possible to use a type alias in a GADT definition?", "body": "<p>It <strong>is</strong> possible, but not in the way you've done it. This here does work:</p>\n\n<pre><code>type Foo = Bar Int\n\ndata Bar a where\n  Bar :: Foo\n</code></pre>\n\n<p>...because <code>Foo</code> does in fact have the form <code>Bar a</code>, with <code>a ~ Int</code>. However, this doesn't:</p>\n\n<pre><code>type Foo = Int -&gt; Bar Int\n\ndata Bar a where\n  Bar :: Foo\n</code></pre>\n\n<p>And it can't work, because the GADT constructor</p>\n\n<pre><code>data Bar a where\n  Bar :: Int -&gt; Bar Int\n</code></pre>\n\n<p>does not actually declare an \u201cinvertible function\u201d <code>Bar :: Int -&gt; Bar Int</code>. Rather, it declares something like the following:</p>\n\n<pre><code>data Bar' a = Bar' (a <a href=\"http://hackage.haskell.org/package/base-4.11.0.0/docs/Data-Type-Equality.html#t::-126-:\" rel=\"nofollow noreferrer\">:~:</a> Int) Int</code></pre>\n\n<p>i.e., it encapsulates a (runtime-readable) proof that the <code>a</code> parameter type is in fact <code>Int</code>. The GADT syntax hides this under the hood, but it means you can't just substitute <code>Int -&gt; Bar Int</code> with a type synonym there, because that type synonym would <em>not</em> know how to encapsulate this type-equality proof.</p>\n\n<p>...thinking about it, I'm not sure why my first example actually works, since it would seem to run into the same issue...</p>\n"}], "owner": {"reputation": 317, "user_id": 4298165, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f8e7f9af5c7b5481b2092c7a3b7bb25e?s=128&d=identicon&r=PG&f=1", "display_name": "gntskn", "link": "https://stackoverflow.com/users/4298165/gntskn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 144, "favorite_count": 0, "accepted_answer_id": 49453386, "answer_count": 1, "score": 5, "last_activity_date": 1521819443, "creation_date": 1521769275, "last_edit_date": 1521802416, "question_id": 49441116, "link": "https://stackoverflow.com/questions/49441116/is-it-possible-to-use-a-type-alias-in-a-gadt-definition", "title": "Is it possible to use a type alias in a GADT definition?", "body": "<p>I've been playing around defining a GADT for WebAssembly instructions. Many of these instruction constructors have identical signatures:</p>\n\n<pre><code>data Instruction result where\n    Add :: Instruction r -&gt; Instruction r -&gt; Instruction r\n    Sub :: Instruction r -&gt; Instruction r -&gt; Instruction r\n    Mul :: Instruction r -&gt; Instruction r -&gt; Instruction r\n</code></pre>\n\n<p>With normal values, you could simply declare a type alias for these binary operators:</p>\n\n<pre><code>type Binop r = Instruction r -&gt; Instruction r -&gt; Instruction r\n</code></pre>\n\n<p>However, when I use the alias in the GADT definition:</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\n\nmodule Data.Instruction where\n\ntype Binop r = Instruction r -&gt; Instruction r -&gt; Instruction r\n\ndata Instruction result where\n    Add :: Binop r\n    Sub :: Binop r\n    Mul :: Binop r\n</code></pre>\n\n<p>It fails to compile:</p>\n\n<pre><code>[6 of 6] Compiling Data.Instruction ( src/Data/Instruction.hs, .stack-work/dist/x86_64-osx/Cabal-2.0.1.0/build/Data/Instruction.o )\n\n.../src/Data/Instruction.hs:8:5: error:\n    \u2022 Data constructor \u2018Add\u2019 returns type \u2018Binop r\u2019\n        instead of an instance of its parent type \u2018Instruction result\u2019\n    \u2022 In the definition of data constructor \u2018Add\u2019\n      In the data type declaration for \u2018Instruction\u2019\n   |\n11 |     Add :: Binop r\n   |     ^\n</code></pre>\n\n<p>Is there any way to achieve this with GHC? If not, what is the cause of the limitation?</p>\n"}, {"tags": ["haskell", "floating-point", "integer", "syntax-error"], "comments": [{"owner": {"reputation": 7268, "user_id": 2303202, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/iT9aU.png?s=128&g=1", "display_name": "max630", "link": "https://stackoverflow.com/users/2303202/max630"}, "edited": false, "score": 0, "creation_date": 1521764926, "post_id": 49440489, "comment_id": 85883083, "body": "Whcih compiler/environment do you use? It does not looks like gch&#39;s error messages"}, {"owner": {"reputation": 7268, "user_id": 2303202, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/iT9aU.png?s=128&g=1", "display_name": "max630", "link": "https://stackoverflow.com/users/2303202/max630"}, "edited": false, "score": 0, "creation_date": 1521765068, "post_id": 49440489, "comment_id": 85883108, "body": "<a href=\"https://wiki.haskell.org/Converting_numbers\" rel=\"nofollow noreferrer\">wiki.haskell.org/Converting_numbers</a> tldr: (1) type must be converted explicitely, (2) division is not defined for integers at all, convert them first"}], "answers": [{"tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": true, "score": 1, "last_activity_date": 1521765130, "creation_date": 1521765130, "answer_id": 49440600, "question_id": 49440489, "link": "https://stackoverflow.com/questions/49440489/haskell-division-resulting-in-integer-instead-of-double/49440600#49440600", "title": "(Haskell) Division resulting in Integer instead of double", "body": "<p>In Haskell, <code>/</code> works on <code>Fractional</code> types. Yet your <code>fatc</code> and <code>pot</code> return integers. Haskell, unlike C, will never implicitly convert between any types, so we need to use <code>fromInteger</code> to get non-integer values out of it.</p>\n\n<pre><code>divpi :: Integer -&gt; Double\ndivpi k = (fromInteger ((fatc (6*k)) * ((545140134*k) + 13591409)) / fromInteger ((fatc (3*k)) * (pot (fatc k) 3) * (pot (-262537412640768000) k)))\n</code></pre>\n\n<p>Also, as a future note, when you have complicated arithmetic like this, consider using <code>where</code> and <code>let</code> to create some intermediate variables. In addition to making things more readable, you'll get better error messages as well.</p>\n"}], "owner": {"reputation": 3, "user_id": 9537613, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1db5eedb97238ca80953baa0a610426f?s=128&d=identicon&r=PG&f=1", "display_name": "homemmakako", "link": "https://stackoverflow.com/users/9537613/homemmakako"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 751, "favorite_count": 0, "closed_date": 1521845818, "accepted_answer_id": 49440600, "answer_count": 1, "score": 0, "last_activity_date": 1521768088, "creation_date": 1521764348, "last_edit_date": 1521768088, "question_id": 49440489, "link": "https://stackoverflow.com/questions/49440489/haskell-division-resulting-in-integer-instead-of-double", "closed_reason": "Duplicate", "title": "(Haskell) Division resulting in Integer instead of double", "body": "<p>I am trying to make a simple code to get an aproximation for PI using haskell. However it seems the program predicts the result of the division is an Integer, even though the division is never exact (again, it is PI).... Or at least that is what I understand :P </p>\n\n<p><strong>Here is the code:</strong>  </p>\n\n<pre><code>divpi :: Integer -&gt; Double\ndivpi k = (((fatc (6*k)) * ((545140134*k) + 13591409))/((fatc (3*k)) * (pot (fatc k) 3) * (pot (-262537412640768000) k)))\n</code></pre>\n\n<p>fatc is factorial (fatc number) and pot is integer exponentiation (pot base exponent)</p>\n\n<p><strong>The error message:</strong></p>\n\n<pre><code>ERROR file:.\\haskel.hs:33 - Type error in explicitly typed binding\n*** Term           : divpi\n*** Type           : Integer -&gt; Integer\n*** Does not match : Integer -&gt; Double\n</code></pre>\n\n<p>If necessary, <a href=\"https://pastebin.com/iw48PrqW\" rel=\"nofollow noreferrer\">here</a> is the entire code</p>\n"}, {"tags": ["function", "haskell", "types", "type-declaration"], "answers": [{"comments": [{"owner": {"reputation": 1268, "user_id": 815086, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b3851b556ec5f1cbcac2bd5c1f97a583?s=128&d=identicon&r=PG", "display_name": "corecase", "link": "https://stackoverflow.com/users/815086/corecase"}, "edited": false, "score": 0, "creation_date": 1521760049, "post_id": 49439728, "comment_id": 85881687, "body": "So, specifically the data constructor Expr Op Int Int could only ever have two Ints, which in turn means that (+) in the function definition will always return an Int, so it doesn&#39;t match the type declaration... Did I understand that correctly?"}, {"owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "reply_to_user": {"reputation": 1268, "user_id": 815086, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b3851b556ec5f1cbcac2bd5c1f97a583?s=128&d=identicon&r=PG", "display_name": "corecase", "link": "https://stackoverflow.com/users/815086/corecase"}, "edited": false, "score": 2, "creation_date": 1521760523, "post_id": 49439728, "comment_id": 85881843, "body": "@corecase - Yes that&#39;s right - the caller gets to choose the type <code>a</code>, not your implementation so you can&#39;t make any assumptions about it."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 1268, "user_id": 815086, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b3851b556ec5f1cbcac2bd5c1f97a583?s=128&d=identicon&r=PG", "display_name": "corecase", "link": "https://stackoverflow.com/users/815086/corecase"}, "edited": false, "score": 1, "creation_date": 1521760524, "post_id": 49439728, "comment_id": 85881844, "body": "@corecase That type promises that whoever calls <code>evaluate</code> can choose the numeric return type (e.g. a <code>Double</code>). So, <code>evaluate</code> must adapt to any such choice, and can not just cover the <code>Int</code> case."}], "tags": [], "owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "is_accepted": true, "score": 4, "last_activity_date": 1521760275, "last_edit_date": 1521760275, "creation_date": 1521759280, "answer_id": 49439728, "question_id": 49439659, "link": "https://stackoverflow.com/questions/49439659/why-is-this-considered-a-type-mismatch-or-error/49439728#49439728", "title": "Why is this considered a type mismatch (or error)?", "body": "<pre><code>evaluate :: (Num a) =&gt; Expr -&gt; a\n</code></pre>\n\n<p>states that for <em>any</em> type <code>a</code> which has a <code>Num</code> instance, <code>evaluate</code> can return a value of type <code>a</code> given an <code>Expr</code> value. However given the definition of <code>Expr</code>, you can only ever return an <code>Int</code>, and the compiler is therefore rejecting your definition.</p>\n\n<p>If it were allowed you would be able to do:</p>\n\n<pre><code>evaluate (Expr Add 2 3) :: Double\n</code></pre>\n\n<p>which your definition cannot satisfy.</p>\n\n<p>You can use your definition if you allow <code>Expr</code> to be parameterised by the expression type:</p>\n\n<pre><code>data Expr a = Expr Op a a deriving (Show)\n\nevaluate :: (Num a) =&gt; Expr a -&gt; a\nevaluate (Expr Add a b) = a + b\n...\n</code></pre>\n"}], "owner": {"reputation": 1268, "user_id": 815086, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/b3851b556ec5f1cbcac2bd5c1f97a583?s=128&d=identicon&r=PG", "display_name": "corecase", "link": "https://stackoverflow.com/users/815086/corecase"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 53, "favorite_count": 0, "accepted_answer_id": 49439728, "answer_count": 1, "score": 0, "last_activity_date": 1521760275, "creation_date": 1521758874, "question_id": 49439659, "link": "https://stackoverflow.com/questions/49439659/why-is-this-considered-a-type-mismatch-or-error", "title": "Why is this considered a type mismatch (or error)?", "body": "<p>This is the code I have which results in the error that follows:    </p>\n\n<pre><code>import Prelude hiding (div)\n\ndata Expr = Expr Op Int Int deriving (Show)\ndata Op = Add | Sub | Mul | Div deriving (Show)\n\n\nevaluate :: (Num a) =&gt; Expr -&gt; a\nevaluate (Expr Add a b) = a + b\n--evaluate (Expr Sub a b) = sub a b\n--evaluate (Expr Mul a b) = mul a b\n--evaluate (Expr Div a b) = div a b\n</code></pre>\n\n<p>Error message:</p>\n\n<pre><code>    exprs.hs:8:27: error:\n    \u2022 Couldn't match expected type \u2018a\u2019 with actual type \u2018Int\u2019\n      \u2018a\u2019 is a rigid type variable bound by\n        the type signature for:\n          evaluate :: forall a. Num a =&gt; Expr -&gt; a\n        at exprs.hs:7:1-32\n    \u2022 In the expression: a + b\n      In an equation for \u2018evaluate\u2019: evaluate (Expr Add a b) = a + b\n    \u2022 Relevant bindings include\n        evaluate :: Expr -&gt; a (bound at exprs.hs:8:1)\n  |\n8 | evaluate (Expr Add a b) = a + b\n  |                           ^^^^^\nFailed, 0 modules loaded.\n</code></pre>\n\n<p>However, the (+) function has type <code>(Num a) =&gt; a -&gt; a -&gt; a</code>, and\nthe pattern I'm matching in the function <code>evaluate</code> has two <em>Ints</em> (a &amp; b) which are <strong>both part of the Num typeclass</strong>. Since the result of calling (+) on a &amp; b will be of type Int (from the Num typeclass) and that is also what I'm declaring the type of the output of my <code>evaluate</code> function to be, why is GHCi giving me this error?</p>\n\n<p>Note that, if I change the type declaration of <code>evaluate</code> to</p>\n\n<pre><code>evaluate :: Expr -&gt; Int\n</code></pre>\n\n<p>then this error does not come up.</p>\n"}, {"tags": ["haskell", "type-families", "injective-function"], "comments": [{"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 1, "creation_date": 1521738754, "post_id": 49433716, "comment_id": 85871129, "body": "Wouldn&#39;t a closed data family be a GADT?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 1, "creation_date": 1521740525, "post_id": 49433716, "comment_id": 85872194, "body": "@DavidYoung Interesting. But I guess that if you used a GADT, inside a <code>CDF Int</code> you could find either a <code>String</code> or a <code>Double</code>. With a closed data family, only a <code>String</code> would be possible."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1521740652, "post_id": 49433716, "comment_id": 85872278, "body": "@ch sure, that&#39;s what I meant."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1521741321, "post_id": 49433716, "comment_id": 85872716, "body": "The evidence flows the other way in a GADT, and the runtime representation is quite different."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1521745227, "post_id": 49436255, "comment_id": 85874881, "body": "That sounds <i>very</i> likely."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1521747930, "post_id": 49436255, "comment_id": 85876287, "body": "This does make a great deal of sense. Still wonder whether this is the official reason."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1523968369, "post_id": 49436255, "comment_id": 86772031, "body": "Suppose you had a magical type family for every data family, instantiated here as <code>type family FamilyOf CDF a :: Nat where {FamilyOf CDF Int = 1; FamilyOf CDF Bool = 2; FamilyOf CDF = 3}</code>. Now you could give types to the data family constructors: <code>CDFInt :: FamilyOf CDF a ~ 1 =&gt; String -&gt; CDF a</code>, <code>CDFBool :: FamilyOf CDF a ~ 2 =&gt; Char -&gt; CDF a</code>, and <code>CDFOther :: FamilyOf CDF a ~ 3 =&gt; Double -&gt; CDF a</code>. I don&#39;t know if this would run into some sort of trouble, but it smells like the right direction."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1523985221, "post_id": 49436255, "comment_id": 86783781, "body": "In my last comment, I meant &quot;for every closed data family&quot;."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 9, "last_activity_date": 1523968213, "last_edit_date": 1523968213, "creation_date": 1521744384, "answer_id": 49436255, "question_id": 49433716, "link": "https://stackoverflow.com/questions/49433716/why-cant-we-define-closed-data-families/49436255#49436255", "title": "Why can&#39;t we define closed data families?", "body": "<p>(Here I am only guessing, but I want to share this thought.)</p>\n\n<p>Assume we can write</p>\n\n<pre><code>data family CDF a where\n  CDF Int = CDFInt String\n  CDF Bool = CDFBool Char\n  CDF a = CDFOther Double\n</code></pre>\n\n<p>Now, what is the type of the value constructors induced by this definition? I would be tempted to say:</p>\n\n<pre><code>CDFInt   :: String -&gt; CDF Int\nCDFBool  :: Char   -&gt; CDF Bool\nCDFOther :: Double -&gt; CDF a\n</code></pre>\n\n<p>... but the last one feels very wrong, since we would get</p>\n\n<pre><code>CDFOther @ Int :: Double -&gt; CDF Int\n</code></pre>\n\n<p>which should be disallowed, since in a <em>closed</em> data family one would expect that a (non bottom) value of <code>CDF Int</code> must start with the <code>CDFInt</code> constructor.</p>\n\n<p>Perhaps a proper type would be</p>\n\n<pre><code>CDFOther :: (a /~ Int, a /~ Bool) =&gt; Double -&gt; CDF a\n</code></pre>\n\n<p>involving \"inequality constraints\", but this would require more typing machinery that currently available in GHC. I have no idea if type checking / inference would remain decidable with such extension.</p>\n\n<p>By contrast, <em>type</em> families involve no value constructors, so this issue does not arise there.</p>\n"}], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 578, "favorite_count": 2, "answer_count": 1, "score": 11, "last_activity_date": 1523968213, "creation_date": 1521735863, "last_edit_date": 1521740637, "question_id": 49433716, "link": "https://stackoverflow.com/questions/49433716/why-cant-we-define-closed-data-families", "title": "Why can&#39;t we define closed data families?", "body": "<p>All of the following work:</p>\n\n<pre><code>{-# LANGUAGE TypeFamilies #-}\n\ntype family TF a\ntype instance TF Int = String\ntype instance TF Bool = Char\n\ndata family DF a\ndata instance DF Int = DFInt String\ndata instance DF Bool = DFBool Char\n\ntype family CTF a where\n  CTF Int = String\n  CTF Bool = Char\n  CTF a = Double     -- Overlap OK!\n</code></pre>\n\n<p>...but this doesn't (as of GHC-8.2):</p>\n\n<pre><code>data family CDF a where\n  CDF Int = CDFInt String\n  CDF Bool = CDFBool Char\n  CDF a = CDFOther Double\n</code></pre>\n\n<pre><code>wtmpf-file24527.hs:16:19: <b>error:</b> parse error on input \u2018where\u2019\n   |\n16 | data family CDF a <b>where</b>\n   |                   <b>^^^^^</b>\n</code></pre>\n\n<p>Is it just that nobody has bothered to implement this yet, or is there a particular reason why it wouldn't make sense for data families to be closed? I have a data family where I'd rather like to keep the injectivity, but also the opportunity to make a disjoint catch-all instance. Right now, the only way I see to make this work is</p>\n\n<pre><code>newtype CDF' a = CDF' (CTF a)\n</code></pre>\n"}, {"tags": ["haskell", "recursion", "runtime", "typeclass", "dependent-type"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1521738532, "post_id": 49433636, "comment_id": 85871004, "body": "Nitpicking: Haskell has <i>no</i> methods, these are <i>functions</i> (there is some difference between a method and a function)."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1521738667, "post_id": 49433636, "comment_id": 85871079, "body": "@WillemVanOnsem How do you call two function that share the name then?"}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1521739278, "post_id": 49433636, "comment_id": 85871407, "body": "@WillemVanOnsem From the <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch4.html#x10-750004.3\" rel=\"nofollow noreferrer\">Haskell Report</a>: &quot;A class declaration introduces a new class and the operations (class <i>methods</i>) on it.&quot;"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1521762651, "post_id": 49433636, "comment_id": 85882524, "body": "This method is not recursive!"}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1521779185, "post_id": 49433636, "comment_id": 85886448, "body": "@DanielWagner But it is <i>obviously</i> recursive. Can you explain what you mean?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1521798368, "post_id": 49433636, "comment_id": 85894841, "body": "@IgnatInsarov Not at all: <code>count</code> doesn&#39;t call itself, it calls a <i>different function</i> that just happens to also be named <code>count</code>. e.g. <code>count @(S (S Z))</code> calls <code>count @(S Z)</code>; similarly <code>count @(S Z)</code> calls <code>count @Z</code> -- and these are three <i>different</i> functions."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1521807101, "post_id": 49433636, "comment_id": 85900577, "body": "@DanielWagner Well, this is a perspective from the low level where there are no classes, no methods, only functions. From a higher point of view, my opinion is that, if we think of it as a recursive method (for example, we arrange for a base case and a recursive case that gradually reduces the problem towards the base case), we may call it a recursive method. It just happens to compile down to something else, but this is not our primary care. (Before this question, I did not even know it does.) Do you have a specific objection to this kind of a &quot;higher level&quot; nomenclature?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1521808050, "post_id": 49433636, "comment_id": 85901184, "body": "@IgnatInsarov My mental model: a class is a collection of types, plus an implementation of the methods for each type in that collection. The collection that satisfies the <code>Count</code> constraint is recursively defined, but the methods are not: the implementation of the method for one type does not recurse back into its own implementation, but calls the method for another type in the collection. By analogy, <code>mempty = (mempty, mempty)</code> patently isn&#39;t recursive: the &quot;recursive&quot; calls to <code>mempty</code> behave very differently than the top-level one (and don&#39;t even have the same type!)."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1521808413, "post_id": 49433636, "comment_id": 85901448, "body": "@DanielWagner Well, I now have not one, but two useful mental models! I take it to be a good thing."}], "answers": [{"comments": [{"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1521742844, "post_id": 49434197, "comment_id": 85873586, "body": "So it&#39;s kind of like Template Haskell? And I end up with a hard coded chain of functions?"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 1, "creation_date": 1521747301, "post_id": 49434197, "comment_id": 85875938, "body": "It&#39;s a form of code generation like TH, but it&#39;s entirely type-directed and more integrated in the language. It also doesn&#39;t allow arbitrary code execution like TH does."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 5, "last_activity_date": 1521737335, "creation_date": 1521737335, "answer_id": 49434197, "question_id": 49433636, "link": "https://stackoverflow.com/questions/49433636/how-does-a-recursive-method-work/49434197#49434197", "title": "How does a recursive method work?", "body": "<p>Type classes are desugared to records. Everything happens at compile time.</p>\n\n<pre><code>data Count a = Count { count :: a -&gt; Int }\n\ninstance_Count_ProxyZ :: Count (Proxy Z)\ninstance_Count_ProxyZ = Count { count = \\_ -&gt; 0 }\n\ninstance_Count_ProxySn :: Count (Proxy n) -&gt; Count (Proxy (S n))\ninstance_Count_ProxySn context = Count {\n  count = \\_ -&gt; succ (count context (Proxy :: Proxy n)) }\n</code></pre>\n\n<p>Whenever we call <code>count :: Count n =&gt; n -&gt; Int</code>, the desugarer (that runs after the typechecker) looks at the inferred type for <code>n</code>, and tries to construct a record of type <code>Count n</code>.</p>\n\n<p>So if we write <code>count (Proxy :: Proxy (S (S (S Z))))</code>, we need a record of type <code>Count (S (S (S Z)))</code>, and the only matching instance is <code>Count (Proxy n) -&gt; Count (Proxy (S n))</code>, with <code>n ~ S (S Z)</code>. This means we now have to construct its argument, of type <code>Count (Proxy (S (S Z)))</code>, and so on.</p>\n\n<p>Note that this is also what happens in the process of desugaring the application of <code>count</code> in the instance for <code>Proxy (S n)</code>.</p>\n\n<p>After this process there are no type classes left, everything is just records.</p>\n"}, {"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 4, "creation_date": 1521738997, "post_id": 49434311, "comment_id": 85871264, "body": "@IgnatInsarov Turns out a thing can be both ugly and popular! But less tongue-in-cheek: everybody used them historically because it is the cleanest known alternative to type applications if type applications don&#39;t exist, and type applications are a very new feature."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1521741312, "post_id": 49434311, "comment_id": 85872709, "body": "@IgnatInsarov They are not that ugly, but it is weird that in order to choose a compile-time type argument <code>a</code>, one needs to also pass a run-time value argument <code>Proxy :: Proxy MyChoiceForA</code>. A few years ago, we had no other choice, so proxies were a necessity. Now we got type application <code>@ MyChoiceForA</code> which is purely compile-time, and we no longer need proxies, making out code simpler and shorter. (Personally, I tolerated <code>Proxy a</code> arguments, and disliked the idiom <code>proxy a</code> where <code>proxy</code> is a higher-kinded type variable which might stand for <code>Proxy</code> but also for <code>[], Maybe, ...</code>.)"}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1521742704, "post_id": 49434311, "comment_id": 85873501, "body": "@chi Would this mean that <code>count</code> used to be a polymorphic function, but has become a constant applicative form?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 2, "creation_date": 1521743790, "post_id": 49434311, "comment_id": 85874106, "body": "@IgnatInsarov That&#39;s a good question, since at the point <code>count</code> looks as a CAF. Actually, it is not, because its full type is not <code>count :: Int</code> but <code>count :: Count a =&gt; Int</code> showing that, underneath, it is implemented as a function taking the count-dictionary."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1521747795, "post_id": 49434311, "comment_id": 85876218, "body": "@chi FTR, we did have a choice even in ye olden days: <a href=\"http://hackage.haskell.org/package/tagged-0.8.5/docs/Data-Tagged.html\" rel=\"nofollow noreferrer\"><code>Tagged</code></a>, which I always found feeling less hackish than proxies \u2013 but it made code like this look even uglier. Luckily, <code>TypeApplications</code> are making all of this a thing of the past."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1521779620, "post_id": 49434311, "comment_id": 85886565, "body": "@leftaroundabout How is <code>Tagged</code> more suitable? As I understand, it has to carry an extra value, unnecessary in this case. Why would I write <code>Tagged () :: Tagged n ()</code> instead of just <code>Proxy :: Proxy n</code>?"}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1521779824, "post_id": 49434311, "comment_id": 85886625, "body": "@chi &amp; leftaroundabout Also, if you could edit the post and add some references or ways to rediscover these details by hand \u2014 some kind of primary source, \u2014 it would be very helpful."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1521795516, "post_id": 49434311, "comment_id": 85893057, "body": "@IgnatInsarov no, not <code>Tagged ()</code>. You&#39;d use <code>class Count a where count :: Tagged a Int</code>."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 7, "last_activity_date": 1521737752, "creation_date": 1521737752, "answer_id": 49434311, "question_id": 49433636, "link": "https://stackoverflow.com/questions/49433636/how-does-a-recursive-method-work/49434311#49434311", "title": "How does a recursive method work?", "body": "<p>Whenever a constraint turns up at the LHS of a function declaration, like</p>\n\n<pre><code>count :: (Count a) =&gt; a -&gt; Int\n</code></pre>\n\n<p>it's as it were syntactic sugar for</p>\n\n<pre><code>count' :: CountDictionary a -&gt; a -&gt; Int\n</code></pre>\n\n<p>where <code>CountDictionary a</code> is a runtime-suitable (but singleton \u2013 the compiler always chooses exactly one instance for each type!) representation of, indeed, the <em>methods</em> of the <code>Count</code> class, i.e.</p>\n\n<pre><code>data CountDictionary a = CountDict {\n         countMethod :: a -&gt; Int\n       }\n</code></pre>\n\n<p>Before I elaborate further, let me rewrite all without those ugly proxies in favour of <code>TypeApplications</code>:</p>\n\n<pre><code>{-# LANGUAGE AllowAmbiguousTypes, TypeApplications, ScopedTypeVariables, UnicodeSyntax #-}\n\nclass Count a where\n    count :: Int\n\u21d2 count' :: CountDictionary a -&gt; Int\nw/ data CountDictionary a = CountDict Int\n\ninstance Count Z where\n    count = 0\n\ninstance \u2200 n . Count n =&gt; Count (S n) where\n    count = succ $ count @n\n</code></pre>\n\n<p>Now when you write <code>count @(S(S(S Z)))</code>, it's represented by</p>\n\n<pre><code>count @(S(S(S Z)))\n  = count' ( CountDict (succ $ count @(S Z)) )\n  = count' ( CountDict (succ $ count' (CountDict (succ $ count @Z))) )\n  = count' ( CountDict (succ $ count' (CountDict (succ $ count' (CountDict 0)))) )\n</code></pre>\n"}], "owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 183, "favorite_count": 0, "accepted_answer_id": 49434197, "answer_count": 2, "score": 4, "last_activity_date": 1521737752, "creation_date": 1521735634, "question_id": 49433636, "link": "https://stackoverflow.com/questions/49433636/how-does-a-recursive-method-work", "title": "How does a recursive method work?", "body": "<p>Consider the following method <code>count</code> that maps type level natural numbers to value level ones:</p>\n\n<pre><code>{-# LANGUAGE\n    DataKinds\n  , KindSignatures\n  , PolyKinds\n  , FlexibleInstances\n  , FlexibleContexts\n  , ScopedTypeVariables\n  #-}\n\n\nmodule Nat where\n\ndata Nat = Z | S Nat\n\ndata Proxy (a :: k) = Proxy\n\nclass Count a where\n    count :: a -&gt; Int\n\ninstance Count (Proxy Z) where\n    count _ = 0\n\ninstance Count (Proxy n) =&gt; Count (Proxy (S n)) where\n    count _ = succ $ count (Proxy :: Proxy n)\n</code></pre>\n\n<p>It seems to work in repl:</p>\n\n<pre><code>\u03bb count (Proxy :: Proxy (S(S(S Z))) )\n3\n</code></pre>\n\n<p>For the recursion to terminate, there must be some indication at run time of the type of the <code>Proxy</code>, but types are supposed to be erased at run time. I can even replace <code>data</code> with <code>newtype</code> in the <code>Proxy</code> definition:</p>\n\n<pre><code>newtype Proxy (a :: k) = Proxy ()\n</code></pre>\n\n<p>\u2014 Which would oblige it to have the same memory representation every time, so that it were <code>Coercible</code>. With that in mind:</p>\n\n<ol>\n<li><p>I totally do not understand how a method gets dispatched. I would theorize that, either:</p>\n\n<ul>\n<li>A table of form <em>(Type, Method name)\u00a0\u27f6\u00a0Function</em> is generated by the compiler. Then, at run time, all the objects are tagged with their type, and a method is a higher order function that looks at the type tag and looks up the corresponding function in the table. But people say types are completely erased during compilation, so this does not add up.</li>\n<li>A table of form <em>Method name \u27f6 Function</em> is attached to every object, and a method invocation is represented as <em>Method name</em>. Then, a function application looks up the corresponding <em>Function</em> and applies it when it is forced. To save space, the table may be shared by all the members of the type, but then it is no different from having objects tagged with type.</li>\n<li>A table of form <em>(Method name, Instance index) \u27f6 Function</em> is generated by the compiler, and tables of form <em>(Method name -> Instance index)</em> are attached to objects at run time. This means an object does not know its type, but knows the classes it belongs to, and the correct choice of instance. I do not know if there are any advantages to this approach.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>So, I do not understand how the run time system determines the right choice for the method instance if the objects are not tagged with their type in some way, direct or indirect. People all around are talking about some dictionary passing stuff, but I totally do not get it:</p>\n\n<ul>\n<li>What are the keys?</li>\n<li>What are the values?</li>\n<li>Where does the dictionary reside? (On the heap, in the program text, still elsewhere?)</li>\n<li>Who has pointers to the dictionary?</li>\n</ul>\n\n<p>...Et cetera.</p></li>\n<li><p>Even if there is a trick in place that allows for the choice of method instance without tagging objects with types, there are only 2 instances of <code>Count</code>, so the choice of a method may only carry 1 bit of information. (For example, there may be a <code>Proxy</code> with a tag that says <em>\"apply methods from instance A<sub>1</sub> to me\"</em>, and the method instance in A<sub>1</sub> retags the <code>Proxy</code> with <em>\"apply methods from instance A<sub>0</sub> to me\"</em>.) This is clearly not enough. There must be something at run time that ticks down every time the recursive instance is applied.</p></li>\n</ol>\n\n<p>Can you walk me through the execution of this code, or throw in some links that describe the applicable particulars of the runtime system?</p>\n"}, {"tags": ["haskell", "c-preprocessor", "ghc", "doctest"], "comments": [{"owner": {"reputation": 20980, "user_id": 241990, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/265f1d52e6e484c9abe60b4da20fb8ee?s=128&d=identicon&r=PG", "display_name": "Shaun the Sheep", "link": "https://stackoverflow.com/users/241990/shaun-the-sheep"}, "edited": false, "score": 3, "creation_date": 1521735266, "post_id": 49431519, "comment_id": 85868850, "body": "Since doctest is mainly used to make sure your doc comments are in sync with the codebase, I would just add a flag to your cabal file to allow you to disable doctest for older builds. I do this <a href=\"https://github.com/tekul/jose-jwt/blob/7743fce642c521d55098c53d1a2083f8c7eb88ec/jose-jwt.cabal#L27\" rel=\"nofollow noreferrer\">here</a> for example."}], "owner": {"reputation": 3231, "user_id": 1013393, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/7bca51e5ae3eb8dc24a98616b4e5d6fd?s=128&d=identicon&r=PG", "display_name": "sjakobi", "link": "https://stackoverflow.com/users/1013393/sjakobi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 117, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1521730208, "creation_date": 1521729745, "last_edit_date": 1521730208, "question_id": 49431519, "link": "https://stackoverflow.com/questions/49431519/doctest-with-ghc-8-0-phase-c-pre-processor-failed-with-missing-binary-op", "title": "Doctest with GHC &lt; 8.0: &quot;phase `C pre-processor&#39; failed&quot; with &quot;missing binary operator before token &quot;(&quot;&quot;", "body": "<p>I'm puzzled by a failure of my doctests on GHC-7.10.3 and older. The full error message is</p>\n\n<pre><code>Data/ByteString/Builder/HTTP/Chunked.hs:75:0:\n     error: missing binary operator before token \"(\"\n     #if MIN_VERSION_base(4,8,0)\n     ^\ndoctests: doctests: phase `C pre-processor' failed (exitcode = 1)\n</code></pre>\n\n<p>With GHC >= 8.0 the tests work as intended. In all cases I'm using <code>doctest-0.15.0</code>.</p>\n\n<p><strong>EDIT:</strong> What I gather from <a href=\"https://ghc.haskell.org/trac/ghc/ticket/10970\" rel=\"nofollow noreferrer\">https://ghc.haskell.org/trac/ghc/ticket/10970</a> is that the <code>MIN_VERSION_</code> macros were originally defined by cabal, but have been generated by GHC itself since v8.0. It appears that cabal v2.2 still produces the macros for GHC &lt; 8.0 so e.g. <code>new-build</code> works but doctest bypasses cabal.</p>\n\n<p>Can someone suggest a good workaround?</p>\n"}, {"tags": ["haskell", "list-comprehension"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1521729488, "post_id": 49431373, "comment_id": 85864538, "body": "You miss a <code>return</code> before the <code>do</code>."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 2, "last_activity_date": 1521729762, "creation_date": 1521729762, "answer_id": 49431527, "question_id": 49431373, "link": "https://stackoverflow.com/questions/49431373/haskell-desugar-list-comprehension/49431527#49431527", "title": "Haskell: Desugar List comprehension", "body": "<p>Since you return the list comprehension, you need an <strong>extra <code>return</code></strong>:</p>\n\n<pre><code>do \n  x &lt;- [1..10]\n  <b>return</b> $ do \n    (a,b) &lt;- [(1,\"A\"),(2,\"B\")]\n    guard $ mod x 2 == 0\n    return b</code></pre>\n\n<p>Otherwise, you would construct have constructed it like:</p>\n\n<pre><code>[b|x &lt;- [1..10], (a,b)&lt;-[(1,\"A\"),(2,\"B\")], mod x 2 == 0]\n</code></pre>\n\n<p>Since you used the <code>do</code> as tailing element in the outer <code>do</code>, that <code>do</code> was redundant.</p>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 4, "last_activity_date": 1521729773, "creation_date": 1521729773, "answer_id": 49431533, "question_id": 49431373, "link": "https://stackoverflow.com/questions/49431373/haskell-desugar-list-comprehension/49431533#49431533", "title": "Haskell: Desugar List comprehension", "body": "<p>Remember that nested <code>do</code> constructs \"collapse\":</p>\n\n<pre><code>do\n A\n do B\n    C\n</code></pre>\n\n<p>is the same as</p>\n\n<pre><code>do\n A\n B\n C\n</code></pre>\n\n<p>(Or more precisely, multi-line <code>do</code> constructs desugar to nested <code>do</code> constructs.) So you want the sublist to be constructed and add to the outer list, rather than building a single list using the nested <code>do</code> construct to fill it.</p>\n\n<p>Using a hybrid, intermediate approach, you build the outer list by <code>return</code>ing each inner list separately.</p>\n\n<pre><code>do\n  x &lt;- [1..10]\n  return [[b|(a,b)&lt;-[(1,\"A\"),(2,\"B\")], mod x 2 == 0]\n</code></pre>\n\n<p>Then you desugar <em>that</em> comprehension:</p>\n\n<pre><code>do\n  x &lt;- [1..10]\n  return (do\n      (a, b) &lt;- ...\n      guard $ mod x 2 == 0\n      return b)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "is_accepted": false, "score": 0, "last_activity_date": 1523144080, "last_edit_date": 1523144080, "creation_date": 1522982345, "answer_id": 49684415, "question_id": 49431373, "link": "https://stackoverflow.com/questions/49431373/haskell-desugar-list-comprehension/49684415#49684415", "title": "Haskell: Desugar List comprehension", "body": "<p>I made minor modifications to your original list comprehension.</p>\n\n<pre><code>[ (x,[(b) | (a,b) &lt;- [(1,\"A\"),(2,\"B\")], mod x 2 == 0]) | x &lt;- [1..10] ]\n</code></pre>\n\n<p>Which resulted in</p>\n\n<pre><code>[(1,[]),(2,[\"A\",\"B\"]),(3,[]),(4,[\"A\",\"B\"]),(5,[]),(6,[\"A\",\"B\"]),(7,[]),(8,[\"A\",\"B\"]),(9,[]),(10,[\"A\",\"B\"])]\n</code></pre>\n\n<p>So with these parameters, it was producing b of (a,b) or a [].</p>\n\n<p>This translated into the following map.</p>\n\n<pre><code>map (\\x -&gt; if mod x 2 == 0 then [x] else [] ) [1..10]\n</code></pre>\n\n<p>Which produced</p>\n\n<pre><code>[[],[2],[],[4],[],[6],[],[8],[],[10]]\n</code></pre>\n\n<p>The following segment of your list comprehension </p>\n\n<pre><code>[b|(a,b)&lt;-[(1,\"A\"),(2,\"B\")]]\n</code></pre>\n\n<p>Produces simply</p>\n\n<pre><code>[\"A\",\"B\"]\n</code></pre>\n\n<p>The following map produces the same.</p>\n\n<pre><code>map snd [(1,\"A\"),(2,\"B\")]\n</code></pre>\n\n<p>Replacing [x] in the first map with the preceding map</p>\n\n<pre><code>map (\\x -&gt; if mod x 2 == 0 then map snd [(1,\"A\"),(2,\"B\")] else [] ) [1..10]\n</code></pre>\n\n<p>Does exactly what your list comprehension does. Changing the parameters would result in identical results.</p>\n"}], "owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 276, "favorite_count": 0, "accepted_answer_id": 49431533, "answer_count": 3, "score": 2, "last_activity_date": 1523144080, "creation_date": 1521729303, "question_id": 49431373, "link": "https://stackoverflow.com/questions/49431373/haskell-desugar-list-comprehension", "title": "Haskell: Desugar List comprehension", "body": "<p>How do I desugar</p>\n\n<pre><code>\u03bb: [[b|(a,b)&lt;-[(1,\"A\"),(2,\"B\")], mod x 2 == 0]|x &lt;- [1..10]]\n[[],[\"A\",\"B\"],[],[\"A\",\"B\"],[],[\"A\",\"B\"],[],[\"A\",\"B\"],[],[\"A\",\"B\"]]\n</code></pre>\n\n<p>I have tried</p>\n\n<pre><code>do \n  x &lt;- [1..10]\n  do \n    (a,b) &lt;- [(1,\"A\"),(2,\"B\")]\n    guard $ mod x 2 == 0\n    return b\n</code></pre>\n\n<p>but this seems to automatically <code>join</code> the result.</p>\n\n<p><code>[\"A\",\"B\",\"A\",\"B\",\"A\",\"B\",\"A\",\"B\",\"A\",\"B\"]</code></p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "edited": false, "score": 1, "creation_date": 1521722077, "post_id": 49428437, "comment_id": 85858806, "body": "Trouble is, <code>floor</code> turns a fractional type into an integer type. Perhaps you wanted <code>div</code> instead?"}], "answers": [{"comments": [{"owner": {"reputation": 406, "user_id": 1738086, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/44ffd4d27d01bce9b3425f88d83975a3?s=128&d=identicon&r=PG", "display_name": "Simon Courtenage", "link": "https://stackoverflow.com/users/1738086/simon-courtenage"}, "edited": false, "score": 0, "creation_date": 1521723329, "post_id": 49428809, "comment_id": 85859738, "body": "This was exactly my conclusion - that the use of (/) and floor meant finding a type that was an instance of both Integral and Fractional.  The error message strongly implies that such a type does not exist!"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1521725152, "post_id": 49428809, "comment_id": 85861211, "body": "...or, if you don&#39;t mind restricting it to <code>Integral</code> types, <code>if a &gt; 0 then func (a `div` 2) else print a</code> seems significantly briefer. Callers that wanted to pass a non-<code>Integral</code> type could add one call to <code>floor</code> up front, or you could define a <code>funcRealFrac = func . floor</code>."}, {"owner": {"reputation": 779, "user_id": 7624179, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/xDnhM.png?s=128&g=1", "display_name": "Kenta Nomoto", "link": "https://stackoverflow.com/users/7624179/kenta-nomoto"}, "edited": false, "score": 2, "creation_date": 1521727175, "post_id": 49428809, "comment_id": 85862797, "body": "Sorry for the late comment. Thanks! The problem is fixed. And I added in some specific type of the function :)"}, {"owner": {"reputation": 12941, "user_id": 292731, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/e3f90adedab79538799e2375a9731920?s=128&d=identicon&r=PG", "display_name": "Justin L.", "link": "https://stackoverflow.com/users/292731/justin-l"}, "edited": false, "score": 0, "creation_date": 1521752785, "post_id": 49428809, "comment_id": 85878919, "body": "While there is no type in <i>base</i> that is both an instance of <code>Integral</code> and <code>Fractional</code>, there might be one supplied by a library or the user.  In general, &quot;No such type satisfying these constraints&quot; is not something that GHC or Haskell can talk about; see my answer for elaboration :)  Furthermore, even if an instance <i>does</i> exist, the error would still happen."}, {"owner": {"reputation": 1909, "user_id": 258738, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/64980b61abd5be8de69dcdc8d4bc6501?s=128&d=identicon&r=PG", "display_name": "Marcelo Zabani", "link": "https://stackoverflow.com/users/258738/marcelo-zabani"}, "reply_to_user": {"reputation": 12941, "user_id": 292731, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/e3f90adedab79538799e2375a9731920?s=128&d=identicon&r=PG", "display_name": "Justin L.", "link": "https://stackoverflow.com/users/292731/justin-l"}, "edited": false, "score": 0, "creation_date": 1522077745, "post_id": 49428809, "comment_id": 85993862, "body": "For those who are reading this now: @JustinL.&#39;s answer correctly explains the error reason while mine does not. My answer provides only a way to understand part of the problem and a way to provide a fix."}], "tags": [], "owner": {"reputation": 1909, "user_id": 258738, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/64980b61abd5be8de69dcdc8d4bc6501?s=128&d=identicon&r=PG", "display_name": "Marcelo Zabani", "link": "https://stackoverflow.com/users/258738/marcelo-zabani"}, "is_accepted": true, "score": 6, "last_activity_date": 1521722683, "last_edit_date": 1521722683, "creation_date": 1521722040, "answer_id": 49428809, "question_id": 49428437, "link": "https://stackoverflow.com/questions/49428437/error-ambiguous-type-variable-t0-arising-from-a-use-of-func-prevents-the-co/49428809#49428809", "title": "error: Ambiguous type variable \u2018t0\u2019 arising from a use of \u2018func\u2019 prevents the constraint \u2018(Show t0)\u2019 from being solved", "body": "<p>The problem is that the function <code>floor</code> returns an <code>Integral</code> type, while the <code>/</code> function (the fractional divide-by operator) returns a <code>Fractional</code> type.  </p>\n\n<p>So you need <code>a</code> to be of a type that is both <code>Integral</code> and <code>Fractional</code>, which I believe does not exist (other Haskellers: feel free to correct me on this).</p>\n\n<p>One way to fix this is to let the <code>Integral</code> returned by <code>floor</code> free to become any type of number:    </p>\n\n<pre><code>func a = \n    if a &gt; 0 then \n        func $ fromIntegral (floor (a/2))\n    else \n        print (a)\n</code></pre>\n\n<p>Either way, it is a good practice to specify the type of your functions. The signature below would make your error clearer if you had tried it before using <code>fromIntegral</code>:</p>\n\n<pre><code>func :: Double -&gt; IO ()\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 12941, "user_id": 292731, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/e3f90adedab79538799e2375a9731920?s=128&d=identicon&r=PG", "display_name": "Justin L.", "link": "https://stackoverflow.com/users/292731/justin-l"}, "is_accepted": false, "score": 3, "last_activity_date": 1521753091, "last_edit_date": 1521753091, "creation_date": 1521752695, "answer_id": 49438445, "question_id": 49428437, "link": "https://stackoverflow.com/questions/49428437/error-ambiguous-type-variable-t0-arising-from-a-use-of-func-prevents-the-co/49438445#49438445", "title": "error: Ambiguous type variable \u2018t0\u2019 arising from a use of \u2018func\u2019 prevents the constraint \u2018(Show t0)\u2019 from being solved", "body": "<p>@Marcelo Zabani's answer is correct in getting the code to work, but the error message itself is actually because of a different cause: <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch4.html#x10-790004.3.4\" rel=\"nofollow noreferrer\">defaulting rules</a>.</p>\n\n<p>Let's look at what your original function's type would be if inferred by GHC:</p>\n\n<pre><code>func a = \n    if a &gt; 0 then \n      func (a/2)\n    else \n      print (a)\n</code></pre>\n\n<p>You use <code>/2</code> (which requires <code>Fractional</code>) and <code>print</code> (which requires <code>Show</code>), which means that GHC would infer that <code>func</code> has the type:</p>\n\n<pre><code>func :: (Fractional a, Show a) =&gt; a -&gt; IO ()\n</code></pre>\n\n<p>This is a perfectly fine type.  But, when you want to actually <em>call</em> <code>func</code>, you have to pick a <em>specific type</em> to call it with.  You can't call <code>(Fractional a, Show a) =&gt; a -&gt; IO ()</code>; you have to call <code>Double -&gt; IO ()</code>, or <code>Float -&gt; IO ()</code>, etc.  So, how does GHC know which one you \"want\" to call, when you do <code>func 5</code>?</p>\n\n<p>This is where <strong>defaulting</strong> kicks in.  By default, Haskell tries out all of the possible candidate types:</p>\n\n<ol>\n<li>Integer</li>\n<li>Double</li>\n</ol>\n\n<p>this list is hard-coded into GHC (and the Haskell language spec).  It tries them out, in order, and it defaults the type variable to the first one that would compile.</p>\n\n<p>In this case, it'd try out <code>Integer</code>, see that it doesn't work, and then try out <code>Double</code>, and then see that it does work, and calls <code>func :: Double -&gt; IO ()</code>.</p>\n\n<p>Now, your second function:</p>\n\n<pre><code>func a = \n    if a &gt; 0 then \n        func (floor (a/2))\n    else \n        print (a)\n</code></pre>\n\n<p>Now, because you call <code>floor (a/2)</code>, <code>a</code> now is inferred to have a <code>RealFrac</code> instance.  And because you call <code>func</code> with the result, <code>a</code> is now inferred to have an <code>Integral</code> instance.  So, the inferred type signature is:</p>\n\n<pre><code>func :: (RealFrac a, Integral a, Show a) =&gt; a -&gt; IO ()\n</code></pre>\n\n<p>This, too, is a perfectly fine type.  This is why <em>defining</em> the function was fine, and no errors happened.</p>\n\n<p>But, what happens when you call <code>func 5</code>?</p>\n\n<p>GHC again tries out all of the defaulting candidates in order.  Integer fails, Double fails, so...defaulting can't resolve the ambiguity, so you get a compile-time error.</p>\n\n<p>Note that the error is <strong>not</strong> because there is no type that is an instance of all three typeclasses.  This can never cause an error in Haskell, because typeclasses are global.  This would create weird situations where instances being declared in modules for types that aren't being used will cause code to compile or not compile.  So, a value that fails if there are <em>no</em> instances of a given typeclass is not allowed or sound in Haskell.</p>\n\n<p>So, <strong>even if</strong> there was an instance of all Integral, RealFrac, and Show that existed, you would <em>still get an error</em>.  Imagine there was a type <code>Foo</code> that had all three necessary instances.  <em>Even in this case</em>, there would still be an error, because <code>Foo</code> is not in the list of defaulting types that GHC tries out.</p>\n\n<p>The problem is that GHC needs help to figure out what type you want, since its list of defaults is exhausted.</p>\n\n<p>So, you can do something like:</p>\n\n<pre><code>func (5 :: Foo)\n</code></pre>\n\n<p>which will work, provided <code>Foo</code> has an instance of <code>RealFrac</code>, <code>Integral</code>, <em>and</em> <code>Show</code>.</p>\n\n<p>The problem isn't that no instance exists --- the problem is that GHC doesn't know which one to pick.</p>\n\n<p>In general, this is what \"Ambiguous type ...\" errors mean: <strong>not</strong> that no instances exist, but that GHC needs your help to pick which type you want to instantiate a function as, since GHC can't infer from type inference.</p>\n\n<p>The actual fix to get your code to work comes from the fact that you probably wanted things to work with <code>Double</code> in the first place.  If you give <code>func</code> a type signature, then the error will turn into <code>No instance for Integral Double</code>, which is the \"actual\" fundamental issue with your code.</p>\n"}], "owner": {"reputation": 779, "user_id": 7624179, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/xDnhM.png?s=128&g=1", "display_name": "Kenta Nomoto", "link": "https://stackoverflow.com/users/7624179/kenta-nomoto"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 595, "favorite_count": 0, "accepted_answer_id": 49428809, "answer_count": 2, "score": 0, "last_activity_date": 1521753091, "creation_date": 1521720833, "last_edit_date": 1521722696, "question_id": 49428437, "link": "https://stackoverflow.com/questions/49428437/error-ambiguous-type-variable-t0-arising-from-a-use-of-func-prevents-the-co", "title": "error: Ambiguous type variable \u2018t0\u2019 arising from a use of \u2018func\u2019 prevents the constraint \u2018(Show t0)\u2019 from being solved", "body": "<p>I am studying about Haskell. And i am trying to make a while loop that everytime it runs it makes the value 'a' 2 times smaller with flooring after that.</p>\n\n<p>this works fine:</p>\n\n<pre><code>func a = \n    if a &gt; 0 then \n      func (a/2)\n    else \n      print (a)\n</code></pre>\n\n<p>Now adding floor function to it.</p>\n\n<pre><code>func a = \n    if a &gt; 0 then \n        func (floor (a/2))\n    else \n        print (a)\n</code></pre>\n\n<p>now running it</p>\n\n<pre><code>func 5\n</code></pre>\n\n<p>And there is an error:</p>\n\n<pre><code>Ambiguous type variable \u2018t0\u2019 arising from a use of \u2018func\u2019\n      prevents the constraint \u2018(Show t0)\u2019 from being solved.\n      Probable fix: use a type annotation to specify what \u2018t0\u2019 should be.\n      These potential instances exist:\n        instance Show Ordering -- Defined in \u2018GHC.Show\u2019\n        instance Show Integer -- Defined in \u2018GHC.Show\u2019\n        instance Show a =&gt; Show (Maybe a) -- Defined in \u2018GHC.Show\u2019\n        ...plus 22 others\n        ...plus 12 instances involving out-of-scope types\n        (use -fprint-potential-instances to see them all)\n    \u2022 In the expression: func 1\n      In an equation for \u2018it\u2019: it = func 1\n</code></pre>\n\n<p>The two questions i have is: </p>\n\n<p>question 1:Why is this error occuring?</p>\n\n<p>question 2:And how can i fix it?</p>\n\n<p>I am using \"repl.it\" haskell. I'll appreciate every helps :)!</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 431, "user_id": 3042847, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/20812bf59589551344aeae214de49f6a?s=128&d=identicon&r=PG&f=1", "display_name": "xgrommx", "link": "https://stackoverflow.com/users/3042847/xgrommx"}, "edited": false, "score": 0, "creation_date": 1521717209, "post_id": 49424423, "comment_id": 85855339, "body": "Why not =) <code>(&lt;&gt;) &lt;*&gt; reverse $ [1,2,3]</code>"}], "answers": [{"comments": [{"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1521710620, "post_id": 49424610, "comment_id": 85850537, "body": "I wanted to create my own revert.And i know you can&#39;t  add a list to a single element .that is why i tried to first check if there&#39;s a single element (not in a list ! ) and concatenate it with the empty list,and then perform mylist++(listified single element)"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1521710731, "post_id": 49424610, "comment_id": 85850613, "body": "@BercoviciAdrian: yes, this would also work. But the disadvantage is that <code>(++)</code> runs in O(n) so that would make it a O(n^2) algorithm. By using an accumulator, we keep the reverse linear time."}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1521711692, "post_id": 49424610, "comment_id": 85851292, "body": "Just for learning reasons  in my case in the revert function how can i define the base case behaviour  if (element is single) then  apply :[] on it) ?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1521711964, "post_id": 49424610, "comment_id": 85851488, "body": "@BercoviciAdrian: you can write a single element as <code>revert [x] = [x]</code>, since the pattern is a singleton list <code>[x]</code> (with single element <code>x</code>), and the result is thus again a singleton list <code>[x]</code>."}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1521712414, "post_id": 49424610, "comment_id": 85851801, "body": "Oh you are right.So when i define the pattern it won&#39;t even touch the other patterns (call the inner function.) Thanks !"}, {"owner": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "edited": false, "score": 0, "creation_date": 1521734645, "post_id": 49424610, "comment_id": 85868412, "body": "There&#39;s a typo in the type of <code>(:)</code>: the first <code>-&gt;</code> should be replaced with <code>::</code>. I can&#39;t edit because that&#39;s too short an edit for SO. I just wanted to point that out."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 4, "last_activity_date": 1521734689, "last_edit_date": 1521734689, "creation_date": 1521709989, "answer_id": 49424610, "question_id": 49424423, "link": "https://stackoverflow.com/questions/49424423/how-to-define-guards-for-different-types-of-input-than-expected/49424610#49424610", "title": "How to define guards for different types of input than expected?", "body": "<p>I think you make things too complex. First of all, Haskell has already a <a href=\"http://hackage.haskell.org/package/base-4.11.0.0/docs/Prelude.html#v:reverse\" rel=\"nofollow noreferrer\"><strong><code>reverse :: [a] -&gt; [a]</code></strong></a> that reverses the list, so we can make it:</p>\n\n<pre><code>palindrize :: [a] -&gt; [a]\npalindrize l = l ++ reverse l\n</code></pre>\n\n<p>Furthermore there is no need to use a guard here. We can perform pattern matching: this is safer since the compiler can then guarantee us that all patterns are covered. So we can write it like:</p>\n\n<pre><code>revert :: [a] -&gt; [a]\nrevert [] = []\nrevert (x:xs) = (revert xs):(x:[])  -- error!\n</code></pre>\n\n<p>But this will result in a type error. Indeed, the <code>(:)</code> constructor has type <code>(:) :: a -&gt; [a] -&gt; [a]</code>, but <code>revert xs</code> will result in type <code>[a]</code>. In situations like that one, it is best to use an <em>accumulator</em>: a parameter that we initialize for instance with the empty list, and then each recursive call update and at the end of the recursive process return. For example:</p>\n\n<pre><code>revert :: [a] -&gt; [a]\nrevert = go []\n    where go xs [] = xs\n          go xs (x:ys) = go (x:xs) ys\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1521710710, "post_id": 49424671, "comment_id": 85850601, "body": "So when my tail recursion reaches a single element it&#39;s type is not a but [a]."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1521710770, "post_id": 49424671, "comment_id": 85850635, "body": "@BercoviciAdrian: the type of the single element (here <code>x</code>) is <code>a</code>, the type of the list <code>[x]</code> is thus <code>[a]</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1521710980, "post_id": 49424671, "comment_id": 85850783, "body": "@BercoviciAdrian In the single element case, the type of <code>[x]</code> is <code>[a]</code> (as any function argument), the type of <code>x</code> is <code>a</code>."}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1521711028, "post_id": 49424671, "comment_id": 85850813, "body": "Well when you perform tail recursion in a function like : func (x:xs)=if null (x:xs) then [] else x + func(xs)   -- in the else case ,the x is of type a not type [a]"}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1521711097, "post_id": 49424671, "comment_id": 85850857, "body": "I wanted to put a condition in the if case something like : if (x is one element of type a -&gt; apply x:[]) else ...."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1521711122, "post_id": 49424671, "comment_id": 85850879, "body": "@BercoviciAdrian The type is correct. However, note that <code>null (x:xs)</code> is always false -- that list is never null! Also, that is not tail recursion."}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1521711456, "post_id": 49424671, "comment_id": 85851112, "body": "Well in vscode-haskelly the linter tells me in the base case of a function like the one described above instead of using if mylist==[] then... to use if null mylist.Also what is this called if not tail recursion?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 1, "creation_date": 1521717677, "post_id": 49424671, "comment_id": 85855671, "body": "@BercoviciAdrian It&#39;s just recursion. A tail recursive function calls itself and the function returned by the recursive call is the return value itself. E.g. <code>f x = if ... then f (x+1) else f (x-1)</code> is tail recursion, <code>... else 2*f(x-1)</code> is not because after the call we perform <code>2*</code>. And indeed <code>xs==[]</code> is worse than <code>null xs</code>, which is worse than pattern matching against <code>[]</code> directly as done above in the answer."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 1, "last_activity_date": 1521711032, "last_edit_date": 1521711032, "creation_date": 1521710224, "answer_id": 49424671, "question_id": 49424423, "link": "https://stackoverflow.com/questions/49424423/how-to-define-guards-for-different-types-of-input-than-expected/49424671#49424671", "title": "How to define guards for different types of input than expected?", "body": "<p>First, you can not write <code>list : element</code>, nor <code>list : (element : [])</code> since types would not match: whatever is found at the left side of <code>:</code> must have the same type as the elements of the list found at the right side.</p>\n\n<p>You can, however, append two lists using <code>++</code>, like <code>list ++ (element : [])</code> or <code>list ++ [element]</code>.</p>\n\n<p>Second, to pattern match against a single element list, you can use</p>\n\n<pre><code>foo [] = ... -- empty list case\nfoo [x] = ... -- single element list case\nfoo (x1:x2:rest) = ... -- two elements or more case\n</code></pre>\n\n<p>If you prefer, the single element case can also be written <code>foo (x:[]) = ...</code>.</p>\n\n<p>Note that <code>foo [] = ...</code> is equivalent to <code>foo list | null list = ...</code>, but simpler. If possible, forget guards: they should only be used when pattern matching is not enough.</p>\n"}], "owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 108, "favorite_count": 1, "accepted_answer_id": 49424610, "answer_count": 2, "score": 1, "last_activity_date": 1521734689, "creation_date": 1521709383, "last_edit_date": 1521722075, "question_id": 49424423, "link": "https://stackoverflow.com/questions/49424423/how-to-define-guards-for-different-types-of-input-than-expected", "title": "How to define guards for different types of input than expected?", "body": "<p>I am trying to transform an input list into a palindrome. For instance: </p>\n\n<pre><code>Input: [1,2,3]\nOutput: [1,2,3,3,2,1]\n</code></pre>\n\n<p>Basically I need to add a reversed list. My problem lies in the following:</p>\n\n<pre><code>palindrize::[a]-&gt;[a]\npalindrize list | null list = []\npalindrize (x:xs)=(x:xs)++revert(x:xs) where\n                  revert list | null list =[] \n                  revert (x:xs)= (revert xs):(x:[])   ---Here \n</code></pre>\n\n<p>How can I create a guard or a condition to when there is only one element create a list out of it (applying the <code>(myelement:[])</code>)? I would need somehow to say: <code>revert</code> can get a list or an element, if it's an element apply <code>(element:[])</code> on it.  </p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521706735, "post_id": 49423626, "comment_id": 85848039, "body": "Rhhooo, stupid of me. Thanks! I believed that <code>until</code> meant &quot;until this condition is True, then apply this function&quot;."}, {"owner": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "edited": false, "score": 0, "creation_date": 1521706844, "post_id": 49423626, "comment_id": 85848095, "body": "That&#39;s exactly what it means. So if your function reurns true immediately it doesn&#39;t need to do anything."}, {"owner": {"reputation": 31724, "user_id": 6264, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/bbb17eeeecd3d9d06f4db310ab630a12?s=128&d=identicon&r=PG", "display_name": "Michiel Borkent", "link": "https://stackoverflow.com/users/6264/michiel-borkent"}, "edited": false, "score": 0, "creation_date": 1521706846, "post_id": 49423626, "comment_id": 85848098, "body": "Yes, it does work like that. So until &quot;not has duplicates, apply this function&quot; and then you will be left with something that hasn&#39;t got duplicates."}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521707006, "post_id": 49423626, "comment_id": 85848192, "body": "Yes sorry, I just realize that what it means. I had a bad French translation of <i>until</i> in fact..."}], "tags": [], "owner": {"reputation": 31724, "user_id": 6264, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/bbb17eeeecd3d9d06f4db310ab630a12?s=128&d=identicon&r=PG", "display_name": "Michiel Borkent", "link": "https://stackoverflow.com/users/6264/michiel-borkent"}, "is_accepted": false, "score": 3, "last_activity_date": 1521706640, "creation_date": 1521706640, "answer_id": 49423626, "question_id": 49423561, "link": "https://stackoverflow.com/questions/49423561/how-does-until-work/49423626#49423626", "title": "How does `until` work?", "body": "<p>You are probably forgetting a <code>not</code>:</p>\n\n<pre><code>f :: (Eq a) =&gt; [a] -&gt; [a]\nf x = until (not . hasAdjDups) removeAdjDups x\n\nf \"aabccddcceef\" -- \"bf\"\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 8, "last_activity_date": 1521719999, "last_edit_date": 1521719999, "creation_date": 1521706710, "answer_id": 49423648, "question_id": 49423561, "link": "https://stackoverflow.com/questions/49423561/how-does-until-work/49423648#49423648", "title": "How does `until` work?", "body": "<p>The <a href=\"http://hackage.haskell.org/package/base-4.11.0.0/docs/Prelude.html#v:until\" rel=\"nofollow noreferrer\"><strong><code>until :: (a -&gt; Bool) -&gt; (a -&gt; a) -&gt; a -&gt; a</code></strong></a> is documented as:</p>\n\n<blockquote>\n  <p><code>until p f</code> yields the result of <strong>applying <code>f</code> until <code>p</code> holds</strong>.</p>\n</blockquote>\n\n<p>It is implemented like:</p>\n\n<blockquote>\n<pre><code>until p f = go\n  where\n    go x | p x          = x\n         | otherwise    = go (f x)\n</code></pre>\n</blockquote>\n\n<p>So you provide a predicate <code>p</code>, and a function <code>f</code>. The function is also given an initial value <code>x</code>. By using recursion, it first checks if <code>p x</code> holds. In case it does, it returns <code>x</code>, otherwise, it makes a recursive call with <code>f x</code> as the new <code>x</code>.</p>\n\n<p>So a more clean (but less efficient) implementation is probably:</p>\n\n<pre><code>until p f x | p x = x\n            | otherwise = until p f (f x)\n</code></pre>\n\n<p>If we analyze your function, we see:</p>\n\n<pre><code>f x = until hasAdjDups removeAdjDups x\n</code></pre>\n\n<p>So that means <code>f</code> will terminale removing adjacent duplicate characters from the moment it <em>has</em> adjacent duplicate characters. You probably want the opposite predicate:</p>\n\n<pre><code>f x = until (not . hasAdjDups) removeAdjDups x\n</code></pre>\n\n<p>Or even shorter:</p>\n\n<pre><code>f = until (not . hasAdjDups) removeAdjDups\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521706872, "post_id": 49423661, "comment_id": 85848116, "body": "Thanks, I didn&#39;t know there was a `while&#180; in Haskell."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "reply_to_user": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 2, "creation_date": 1521706934, "post_id": 49423661, "comment_id": 85848152, "body": "@St&#233;phaneLaurent I don&#39;t know either. Turns out, there isn&#39;t. Oops."}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521707317, "post_id": 49423661, "comment_id": 85848394, "body": "I find <code>while</code> more natural. Maybe it&#39;s a question of habit. I&#39;ve never seen <code>until</code> in another language."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521708084, "post_id": 49423661, "comment_id": 85848890, "body": "@St&#233;phaneLaurent: several languages have one (like bash, perl), but indeed <code>while</code> is more popular. Although that can simply be historical (i.e. more languages implemented <code>while</code> in the first place, and as a result there was less reason to implement an <code>until</code> in new ones). After all the two are &quot;twins&quot;."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1521710861, "post_id": 49423661, "comment_id": 85850718, "body": "@St&#233;phaneLaurent Pascal has (had?) both <code>repeat .. until condition</code> and <code>while condition do ...</code> statements. <code>while</code> stops when the condition is false, <code>until</code> stops when the condition is true. In the same language, two different conventions. In more modern languages, the usual idiom is that loops stop on a false condition."}], "tags": [], "owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "is_accepted": false, "score": 2, "last_activity_date": 1521706953, "last_edit_date": 1521706953, "creation_date": 1521706748, "answer_id": 49423661, "question_id": 49423561, "link": "https://stackoverflow.com/questions/49423561/how-does-until-work/49423661#49423661", "title": "How does `until` work?", "body": "<p>Well, <code>until</code> repeatedly applies the transformation to the value <em>until</em> the predicate matches. In your case, the input already <code>hasAdjDups</code>, so <code>removeAdjDups</code> is never called. You might be looking for <code>while</code>:</p>\n\n<pre><code>while = until . (not .)\n</code></pre>\n"}], "owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1945, "favorite_count": 1, "accepted_answer_id": 49423648, "answer_count": 3, "score": 5, "last_activity_date": 1521719999, "creation_date": 1521706327, "question_id": 49423561, "link": "https://stackoverflow.com/questions/49423561/how-does-until-work", "title": "How does `until` work?", "body": "<p>I wanted to answer to <a href=\"https://stackoverflow.com/questions/49385950/haskell-removing-adjacent-duplicates-from-a-list\">this question</a> using <code>until</code>. But that does not work and I've concluded that I don't understand <code>until</code>.</p>\n\n<p>So I take the function given by the OP, verbatim: </p>\n\n<pre><code>removeAdjDups :: (Eq a) =&gt; [a] -&gt; [a]\nremoveAdjDups []           =  []\nremoveAdjDups [x]          =  [x]\nremoveAdjDups (x : y : ys)\n  | x == y = removeAdjDups ys\n  | otherwise = x : removeAdjDups (y : ys)\n</code></pre>\n\n<p>Then I write a <code>True/False</code> function retuning whether there is a duplicate:</p>\n\n<pre><code>hasAdjDups :: (Eq a) =&gt; [a] -&gt; Bool\nhasAdjDups []           =  False\nhasAdjDups [x]          =  False\nhasAdjDups (x : y : ys)\n  | x == y = True\n  | otherwise = hasAdjDups (y : ys)\n</code></pre>\n\n<p>Finally I use <code>until</code> as follows:</p>\n\n<pre><code>f :: (Eq a) =&gt; [a] -&gt; [a]\nf x = until hasAdjDups removeAdjDups x\n</code></pre>\n\n<p>And that does not work :</p>\n\n<pre><code>&gt; hasAdjDups  \"aabccddcceef\"\nTrue\n&gt; removeAdjDups   \"aabccddcceef\"\n\"bf\"\n&gt; f \"aabccddcceef\"\n\"aabccddcceef\"\n</code></pre>\n\n<p>I misunderstand <code>until</code>, or I did a mistake ?</p>\n"}, {"tags": ["haskell", "ghc"], "comments": [{"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1521706848, "post_id": 49421179, "comment_id": 85848101, "body": "I&#39;m sure I haven&#39;t understood what you&#39;re trying to do, but <code>fromListNArray&#47;foldr</code> seems like a strange rewrite rule to me. Rewrite rules are for spotting particular usage patterns but <code>fromListNArray&#47;foldr</code> just looks for any (saturated) use of <code>fromListNArray</code>. Why not just define <code>fromListNArray n xs = createArray n fromListN_too_short $ \\mary -&gt;  fillArrayN n mary xs 0</code>?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1521712866, "post_id": 49421179, "comment_id": 85852103, "body": "@BenjaminHodgson, compare what I&#39;m doing to the rules in <code>GHC.Base</code> and <code>GHC.List</code>."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1521713448, "post_id": 49421179, "comment_id": 85852515, "body": "Ah, I think I get it - the first rule tries to make it fuse-able and the second rule undoes the first if fusion didn&#39;t happen. Is that right?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1521713620, "post_id": 49421179, "comment_id": 85852645, "body": "@BenjaminHodgson, yes, that&#39;s the goal."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 1, "creation_date": 1521713663, "post_id": 49421179, "comment_id": 85852671, "body": "Thanks, I learned something even though I was wholly unhelpful to you :)"}], "answers": [{"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 1, "last_activity_date": 1522236368, "creation_date": 1522236368, "answer_id": 49533268, "question_id": 49421179, "link": "https://stackoverflow.com/questions/49421179/how-can-i-get-my-rule-to-fire/49533268#49533268", "title": "How can I get my rule to fire?", "body": "<p>The main problem appears to be a mistake on my part. In</p>\n\n<pre><code>\"fillArrayN/list\" [1] forall n mary xs i.\n  foldr (fillArray_go n mary) (fillArray_stop n) xs i = fillArrayN n mary xs i\n</code></pre>\n\n<p>the <code>foldr</code> is <code>Data.Foldable.foldr</code>, which is a class method and therefore doesn't work on the LHS of a rule. Fixing this problem makes the write-back rule work in simple cases.</p>\n\n<p>Unfortunately, when <code>fromListNArray</code> fuses with <code>augment</code> (which typically happens when it's applied to appended lists), the rule fails to fire for another reason. GHC creates a function for <code>fillArray_go n mary</code>, and doesn't inline it. I still don't understand why this happens.</p>\n"}], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 214, "favorite_count": 2, "answer_count": 1, "score": 19, "last_activity_date": 1522236368, "creation_date": 1521696515, "last_edit_date": 1521715810, "question_id": 49421179, "link": "https://stackoverflow.com/questions/49421179/how-can-i-get-my-rule-to-fire", "title": "How can I get my rule to fire?", "body": "<p>I'm working on list fusion rules for <code>fromListN</code> in <a href=\"https://hackage.haskell.org/package/primitive-0.6.3.0/docs/Data-Primitive-Array.html\" rel=\"noreferrer\"><code>Data.Primitive.Array</code></a>, and I'm a bit stuck. The function looks like this:</p>\n\n<pre><code>fromListNArray :: Int -&gt; [a] -&gt; Array a\nfromListNArray !n l =\n  createArray n fromListN_too_short $ \\mi -&gt;\n    let go i (x:xs)\n          | i &lt; n = writeArray mi i x &gt;&gt; go (i+1) xs\n          | otherwise = fromListN_too_long\n        go i [] = unless (i == n) fromListN_too_short\n     in go 0 l\n{-# NOINLINE fromListNArray #-}\n</code></pre>\n\n<p><code>fromListN_too_short</code> and <code>fromListN_too_long</code> are just error calls.</p>\n\n<p>My rewrite rules are</p>\n\n<pre><code>{-# RULES\n\"fromListNArray/foldr\" [~1] forall n xs.\n  fromListNArray n xs = createArray n fromListN_too_short $ \\mary -&gt;\n    foldr (fillArray_go n mary) (fillArray_stop n) xs 0\n\n\"fillArrayN/list\" [1] forall n mary xs i.\n  foldr (fillArray_go n mary) (fillArray_stop n) xs i = fillArrayN n mary xs i\n #-}\n</code></pre>\n\n<p>where the helpers are defined</p>\n\n<pre><code>fillArrayN :: Int -&gt; MutableArray s a -&gt; [a] -&gt; Int -&gt; ST s ()\nfillArrayN !n !mary xs0 !i0 = go i0 xs0\n  where\n    go i (x:xs)\n      | i &lt; n = writeArray mary i x &gt;&gt; go (i+1) xs\n      | otherwise = fromListN_too_long\n    go i [] = unless (i == n) fromListN_too_short\n{-# NOINLINE fillArrayN #-}\n\nfillArray_go :: Int\n             -&gt; MutableArray s a\n             -&gt; a\n             -&gt; (Int -&gt; ST s ())\n             -&gt; Int\n             -&gt; ST s ()\nfillArray_go !n !mary = \\x r i -&gt;\n  if i &lt; n\n    then writeArray mary i x &gt;&gt; r (i + 1)\n    else fromListN_too_long\n{-# INLINE CONLIKE [0] fillArray_go #-}\n\nfillArray_stop :: Int -&gt; Int -&gt; ST s ()\nfillArray_stop !n = \\i -&gt; unless (i == n) fromListN_too_short\n{-# INLINE [0] fillArray_stop #-}\n</code></pre>\n\n<p>The first rewrite rule seems to do okay. The second, write-back, rule is the problem. I can never seem to get it to fire. Can anyone offer a suggestion?</p>\n\n<hr>\n\n<p>Note: I know I could just fuse directly with <code>build</code> and <code>augment</code> to avoid having to write back, but it's ... not a pretty sight.</p>\n"}]