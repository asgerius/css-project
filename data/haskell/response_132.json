[{"tags": ["haskell", "types"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1500508419, "post_id": 45202843, "comment_id": 77372748, "body": "Haskells type system is <i>not</i> Turing complete. There are extensions in GHC to make it Turing complete."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1509621851, "post_id": 45202843, "comment_id": 81096237, "body": "re: <code>Property &quot;Colors&quot; (1,&quot;Red&quot;)</code> , try <code>:t (1,3) :: ((,) Int) Integer</code> at GHCi prompt."}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1500509463, "post_id": 45202972, "comment_id": 77373008, "body": "The <code>f</code> need not be a <code>Functor</code>. For example, <code>Property &quot;functions&quot; [Endo id]</code> is perfectly well-typed."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1500509863, "post_id": 45202972, "comment_id": 77373097, "body": "@DanielWagner you meant <code>Property &quot;functions&quot; (Endo id)</code>. :)"}, {"owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1509580763, "post_id": 45202972, "comment_id": 81079197, "body": "@DanielWagner you are right, thanks for the wise comment, I appreciate, if you want take another look to my edit please"}, {"owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1509580823, "post_id": 45202972, "comment_id": 81079207, "body": "@WillNess what&#39;s the difference between endo id, or [endo id]? (I updated the answer, If you want to take another look! thanks"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1509622207, "post_id": 45202972, "comment_id": 81096445, "body": "<code>Property &quot;functions&quot; [Endo id] :: Property [] (Endo a)</code> and <code>[]</code> is a Functor, so that&#39;s no counter-example. <code>Property &quot;functions&quot; (Endo id) :: Property Endo a</code> and <code>Endo</code> is <i>not</i> a Functor."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1509622809, "post_id": 45202972, "comment_id": 81096844, "body": "<code>data Property f a = Property String (f a)</code> means there&#39;s a function <code>Property :: String -&gt; f a -&gt; Property f a</code>, the so called data constructor for the type <code>Property f a</code> where <code>f :: * -&gt; *</code>. this means <code>Property (&quot;x&quot; :: String) (Just True :: Maybe Bool) :: Property Maybe Bool</code> i.e. <code>f</code> was matched with <code>Maybe</code> and <code>a</code> with <code>Bool</code>. In &quot;open formulas&quot; like <code>(x + 3)</code> it is not clear how to interpret the free variable <code>x</code>. Lambda expressions like <code>\\x -&gt; x + 3</code> make <code>x</code> a <i>bound</i> variable, i.e. they provide a binding for it. Same with <code>data</code> declarations, on type level. <code>Prop Str (f a)</code> has two"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1509622894, "post_id": 45202972, "comment_id": 81096896, "body": "two free type variables. What are they? how can they be interpreted? not clear. <code>data Property (f :: * -&gt; *) a</code> provides type-level binding for these type variables, <code>f</code>, and <code>a</code>. it&#39;s nothing, really. It&#39;s just saying, &quot;look out, in the following open formula there are two type variables in play, and we&#39;ll take care of them later&quot;. So we can ask <i>&quot;what&#39;s the <code>f</code> in the type of <code>Property &quot;x&quot; (Just True)</code>?&quot;</i> and answer <i>&quot;it&#39;s <code>Maybe</code>&quot;</i>."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1509625348, "post_id": 45202972, "comment_id": 81098602, "body": "glad to help. pass it forward. :)"}], "tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": false, "score": 0, "last_activity_date": 1504548403, "last_edit_date": 1504548403, "creation_date": 1500508920, "answer_id": 45202972, "question_id": 45202843, "link": "https://stackoverflow.com/questions/45202843/haskell-type-functions/45202972#45202972", "title": "Haskell type functions?", "body": "<p>You should read about <a href=\"https://stackoverflow.com/questions/13134825/how-do-functors-work-in-haskell\">functors</a> and <a href=\"https://stackoverflow.com/questions/26985562/make-data-type-of-kind-thats-not-a-functor\">kinds</a>:</p>\n\n<p>The <code>f</code> there is <em>like</em> a functor, (but it's not a functor) meaning in first place that the type of the type <code>f</code> (the type of a type is named <code>kind</code> in haskell), is <code>* -&gt; *</code>, meaning it takes a type, and returns a type to you. </p>\n\n<p>That's why <code>var = Property \"Colors\" [1,2,3,4]</code>, <code>var</code> has that \"rare\" type not because <code>[]</code> is the empty constructor of list, is because <code>[] :k</code> is <code>* -&gt; *</code></p>\n\n<p>Let's see this another example:</p>\n\n<pre><code>var2 = Property \"Perhaps A Bool\" (Just True)\n</code></pre>\n\n<p>type of <code>var2 :t</code> :</p>\n\n<pre><code>var2 :: Property Maybe Bool\n</code></pre>\n\n<p>Why is that, because Maybe also has kind <em>-></em>, it is waiting for a type to return another, see the type, <strong>it doesn't say</strong> <code>(Maybe Bool) Bool</code> <strong>it says</strong> <code>Maybe Bool</code>. Just as your another example, like <code>[]</code> instead <code>[Int]</code></p>\n\n<p>More about <a href=\"http://learnyouahaskell.com/functors-applicative-functors-and-monoids\" rel=\"nofollow noreferrer\">functors</a> and <a href=\"https://stackoverflow.com/questions/27095011/what-exactly-is-the-kind-in-haskell\">kinds</a></p>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 4, "last_activity_date": 1500509815, "last_edit_date": 1500509815, "creation_date": 1500508942, "answer_id": 45202975, "question_id": 45202843, "link": "https://stackoverflow.com/questions/45202843/haskell-type-functions/45202975#45202975", "title": "Haskell type functions?", "body": "<blockquote>\n  <p>The instructor said that Haskell has a Turing complete type language...</p>\n</blockquote>\n\n<p>First of all that claim is wrong. Haskell has no Turing complete type system. There are <em>extensions</em> in GHC to make it Turing complete, but pure Haskell has not Turing complete type system.</p>\n\n<blockquote>\n  <p>How is <code>f</code> behaving like <code>[]</code> here? Since <code>[]</code> is the constructor for the empty list, is <code>f</code> always going to be the outermost empty constructor for the type of a as in the following examples?</p>\n</blockquote>\n\n<p>You are mixing type constructors with value constructors. Haskell has defined a list as:</p>\n\n<pre><code>data <b>[]</b> a = [] | a : (<b>[]</b> a)</code></pre>\n\n<p>The boldface is the <strong><code>[]</code> type constructor</strong> the non-boldface is the value constructor. If you write <strong><code>[]</code></strong> in a type signature you refer to the type. For instance <code>map</code> has type <code>map :: (a -&gt; b) -&gt; [] a -&gt; [] b</code>.</p>\n\n<p>Now as we have seen in the definition of <code>data []</code>, we have a <strong>type parameter</strong>. We need to apply the <code>[]</code> type to another type before it is a \"concrete\" type. Therefore the \"meta-type\" of <code>[]</code> is <code>* -&gt; *</code>: it takes.</p>\n\n<p>The same holds for the type <code>Property</code>, it has meta-type <code>* -&gt; * -&gt; *</code> since it requires two type parameters. <code>Property []</code> on the other hand has meta-type <code>* -&gt; *</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 7, "last_activity_date": 1500508990, "creation_date": 1500508990, "answer_id": 45202981, "question_id": 45202843, "link": "https://stackoverflow.com/questions/45202843/haskell-type-functions/45202981#45202981", "title": "Haskell type functions?", "body": "<blockquote>\n  <p>What is <code>f</code> here? Is it a function acting on <code>a</code>? Is it a 'type function'?</p>\n</blockquote>\n\n<p>Yes, it is indeed a type function, in the sense that it accepts a type and yields a type, i.e. its <em>kind</em> is <code>Type -&gt; Type</code> \u2013 or, as Haskell traditionally writes it</p>\n\n<pre><code>&gt; :k []\n[] :: * -&gt; *\n</code></pre>\n\n<blockquote>\n  <p>How is <code>f</code> behaving like <code>[]</code> here? Since <code>[]</code> is the constructor for the empty list...</p>\n</blockquote>\n\n<p>That's a misunderstanding. Actually there are two different things called <code>[]</code> in Haskell:</p>\n\n<ol start=\"2\">\n<li>The list <em>value constructor</em> <code>[] :: [a]</code>. This generates an empty list (or arbitrary contained-type \u2013 since it actually contains zero elements anyway you don't care about that type).</li>\n</ol>\n\n<p>and</p>\n\n<ol>\n<li>The list <em>type constructor</em> <code>[] :: * -&gt; *</code>. This takes a <em>type</em> and gives the type of a list containing values of that type. The argument is important, because most interesting lists are obviously <em>not</em> empty.</li>\n</ol>\n\n<p>In <code>Property [] a</code>, you're dealing with the type constructor, which again, unlike the value constructor, is a function which operates on types, therefore you can instantiate it for <code>f</code>.</p>\n\n<blockquote>\n  <p><code>Property ((,) t) [Char]</code></p>\n</blockquote>\n\n<p>Here you've discovered another type-level function: the tuple type constructor. This takes two type arguments and gives a type (that of tuples of these types). With <code>(,) t</code> you already apply it to one type argument, but leave the other open, so again you can use this as a one-argument type function like <code>f</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 1540, "user_id": 6395452, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a57f20b2424b5a90e46cf1bbe311e033?s=128&d=identicon&r=PG&f=1", "display_name": "ITA", "link": "https://stackoverflow.com/users/6395452/ita"}, "edited": false, "score": 0, "creation_date": 1500548990, "post_id": 45203196, "comment_id": 77391747, "body": "This is a great answer and much appreciated. Clearly I have a lot of reading/ways to go. If someone could touch upon what happened when I constrained the <code>type function</code> <code>f</code> to be a <code>functor</code> it would be perfect."}], "tags": [], "owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "is_accepted": true, "score": 10, "last_activity_date": 1500512598, "last_edit_date": 1500512598, "creation_date": 1500510568, "answer_id": 45203196, "question_id": 45202843, "link": "https://stackoverflow.com/questions/45202843/haskell-type-functions/45203196#45203196", "title": "Haskell type functions?", "body": "<p>You've gotten confused by the (confusing) fact that <code>[]</code> means two different things in different contexts in Haskell, which has made it hard for you to interpret the rest of your experiments.</p>\n\n<p>At the value level <code>[]</code> indeed is the empty constructor for lists. But when you asked for the type of <code>Property \"Colors\" [1,2,3,4]</code> and saw <code>Property [] a</code> you're looking at a <strong>type</strong> expression, not a value expression. There is no empty list at the type level.<sup>1</sup> Instead <code>[]</code> is the <em>type constructor</em> for the list type. You can have <code>[Int]</code> (the type of lists of ints), <code>[Bool]</code> (the type of lists of bools), or <code>[a]</code> (the polymorphic type of lists of <code>a</code>); <code>[]</code> is the thing that's being applied to <code>Int</code>, <code>Bool</code>, and <code>a</code> in those examples.</p>\n\n<p>You can actually write <code>[Int]</code> as <code>[] Int</code> if you want, though it looks weird, so you usually only see <code>[]</code> at the type level when you want to use it unapplied.</p>\n\n<p>Lets take a look at your data declaration again:</p>\n\n<pre><code>data Property f a = Property String (f a) | Zilch\n</code></pre>\n\n<p>On the left-hand side you've declared the shape of the <strong>type</strong> <code>Property</code>; <code>Property f a</code> forms a type. On the right hand side you declare the shape of the <strong>values</strong> that go in that type, by listing the possible value constructors (<code>Property</code> and <code>Zilch</code>) and the types of the \"slots\" in those constructors (none for <code>Zilch</code>; one slot of type <code>String</code> and another one of type <code>f a</code>, for <code>Property</code>).</p>\n\n<p>So from that we can tell that whatever <code>f</code> and <code>a</code> are, the type expression <code>f a</code> (<code>f</code> applied to <code>a</code>) must form a type that has values. But <code>f</code> doesn't have to be (in fact it can't be) a normal type of values on its own! There is no slot of type <code>f</code> in the <code>Property</code> value constructor.</p>\n\n<p>A much clearer example to use would have been this:</p>\n\n<pre><code>*Main&gt; var = Property \"Stuff\" (Just True)\n*Main&gt; :t var\nvar :: Property Maybe Bool\n</code></pre>\n\n<p>If you don't know it, <code>Maybe</code> is a built in type whose declaration looks like this:</p>\n\n<pre><code>data Maybe a = Just a | Nothing\n</code></pre>\n\n<p>It's good for this example because we're not using the same name at the type level and the value level, which avoids confusion when you're trying to learn how things work.</p>\n\n<p><code>Just True</code> is a value of type <code>Maybe Bool</code>. At the value level we have the <code>Just</code> data constructor applied to the value <code>True</code>. At the type level we have the <code>Maybe</code> <em>type constructor</em> applied to the type <code>Bool</code>. <code>Maybe Bool</code> values go in the <code>f a</code> slot of the <code>Property</code> value constructor, which fits straightforwardly: <code>f</code> is <code>Maybe</code> and <code>a</code> is <code>Bool</code>.</p>\n\n<p>So going back to your original example:</p>\n\n<pre><code>*Main&gt; var = Property \"Colors\" [1,2,3,4]\n*Main&gt; :t var\nvar :: Num a =&gt; Property [] a\n</code></pre>\n\n<p>You're filling the <code>f a</code> slot with <code>[1, 2, 3, 4]</code>. That's a list of some kind of number, so it'll be <code>Num t =&gt; [t]</code>. So the <code>a</code> in <code>f a</code> is the <code>t</code> (with a <code>Num</code> constraint that needs to come along), and the <code>f</code> is the <strong>list type constructor</strong> <code>[]</code>. This <code>[]</code> is like <code>Maybe</code>, not like <code>Nothing</code>.</p>\n\n<pre><code>*Main&gt; var = Property \"Colors\" (1,\"Red\")\n*Main&gt; :t var\nvar :: Num t =&gt; Property ((,) t) [Char]\n</code></pre>\n\n<p>Here the <code>f a</code> slot is being filled with <code>(1, \"Red\")</code>, which is of type <code>Num t =&gt; (t, [Char])</code> (remembering that <code>String</code> is just another way of writing <code>[Char]</code>). Now to understand this we have to get a little finicky. Forget the constraint for now, and just focus on <code>(t, [Char])</code>. Somehow we need to interpret that as something applied to something else, so we can match it to <code>f a</code>. Well it turns out that although we have special <em>syntax</em> for tuple types (like <code>(a, b)</code>), they're really just like ordinary ADTs you could declare without the special syntax. A 2-tuple type is a type constructor that we can write <code>(,)</code> applied to two other types, in this case <code>t</code> and <code>[Char]</code>. And we can use partially applied type constructors, so we can think of <code>(,)</code> applied to <code>t</code> as one unit, and that unit applied to <code>[Char]</code>. We can write that interpretation as a Haskell type expression <code>((,) t) [Char]</code>, but I'm not sure if that's clearer. But what it comes down to is that we can match this to <code>f a</code> by taking the first \"unit\" <code>(,) t</code> as <code>f</code> and <code>[Char]</code> as <code>a</code>. Which then gives us <code>Property ((,) t) [Char]</code> (only we have to also put back the <code>Num t</code> constraint we forgot about earlier).</p>\n\n<p>And finally this one:</p>\n\n<pre><code>*Main&gt; var = Property \"Colors\" 20\n*Main&gt; :t var\nvar :: Num (f a) =&gt; Property f a\n</code></pre>\n\n<p>Here we're filling the <code>f a</code> slot with <code>20</code>, some sort of number. We haven't specified exactly what type the number is, so Haskell is willing to believe it could be any type in the <code>Num</code> class. But we still need the type to have a \"shape\" we can match with <code>f a</code>: some type constructor applied to some other type. And it's the whole type expression <code>f a</code> that needs to match the type of <code>20</code>, so <em>that's</em> what has a <code>Num</code> constraint. But we haven't said anything else about what <code>f</code> or <code>a</code> might be, and <code>20</code> can by <em>any</em> type that meets a <code>Num</code> constraint, so it can be any <code>Num (f a) =&gt; f a</code> we want for it, hence why the type of your <code>var</code> is still polymorphic in <code>f</code> and <code>a</code> (just with the added constraint).</p>\n\n<p>You might have only seen numeric types like <code>Integer</code>, <code>Int</code>, <code>Double</code>, etc, and so be wondering how there could possibly be an <code>f a</code> that's a number; all of those examples are just single basic types, not something applied to something. But you can write your own <code>Num</code> instances, so Haskell never assumes a given type (or shape of type) <em>couldn't</em> be a number, it'll just complain if you actually attempt to use it and it can't find a <code>Num</code> instance. So sometimes you get things like this that are <em>probably</em> errors, but Haskell accepts (for now) with a <code>Num</code> type on an odd thing that you weren't expecting.</p>\n\n<p>And in fact there <em>are</em> already types in the built-in libraries that do have compound type-level structore and have a <code>Num</code> instance. One example is the <code>Ratio</code> type for representing fractional numbers as ratios of two integers. You can have a <code>Ratio Int</code> or a <code>Ratio Integer</code>, for example:</p>\n\n<pre><code>Main*&gt; 4 :: Ratio Int\n4 % 1\n</code></pre>\n\n<p>So you could say:</p>\n\n<pre><code>*Main&gt; var = Property \"Colors\" (20 :: Ratio Integer)\n*Main&gt; :t var\nvar :: Property Ratio Integer\n</code></pre>\n\n<hr>\n\n<p><sup>1</sup> Actually there can be, with the <code>DataKinds</code> extension enabled to allow types that mirror the structure of almost any value, so you can have type-level lists. But that's not what's going on here and it's not really a feature you can use until you've got a good handle on the way types and values work in vanilla Haskell, so I recommend you ignore this footnote and pretend it doesn't exist yet.</p>\n"}], "owner": {"reputation": 1540, "user_id": 6395452, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/a57f20b2424b5a90e46cf1bbe311e033?s=128&d=identicon&r=PG&f=1", "display_name": "ITA", "link": "https://stackoverflow.com/users/6395452/ita"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3664, "favorite_count": 1, "accepted_answer_id": 45203196, "answer_count": 4, "score": 8, "last_activity_date": 1504548403, "creation_date": 1500508007, "last_edit_date": 1500509462, "question_id": 45202843, "link": "https://stackoverflow.com/questions/45202843/haskell-type-functions", "title": "Haskell type functions?", "body": "<p>Consider this ADT:</p>\n\n<pre><code>data Property f a = Property String (f a) | Zilch\n  deriving Show\n</code></pre>\n\n<p>What is <code>f</code> here? Is it a function acting on <code>a</code>? Is it a 'type function'? The instructor said that Haskell has a Turing complete type language...so in which case the types can have functions too I assume?</p>\n\n<pre><code>*Main&gt; var = Property \"Colors\" [1,2,3,4]\n*Main&gt; :t var\nvar :: Num a =&gt; Property [] a\n</code></pre>\n\n<p>How is <code>f</code> behaving like <code>[]</code> here? Since <code>[]</code> is the constructor for the empty list, is <code>f</code> always going to be the outermost empty constructor for the type of <code>a</code> as in the following examples?</p>\n\n<pre><code>*Main&gt; var = Property \"Colors\" [(1,\"Red\"),(2,\"Blue\")]\n*Main&gt; :t var\nvar :: Num t =&gt; Property [] (t, [Char])\n\n*Main&gt; var = Property \"Colors\" (1,\"Red\")\n*Main&gt; :t var\nvar :: Num t =&gt; Property ((,) t) [Char]\n</code></pre>\n\n<p>The latter one I don't quite get but if someone said Haskell inferred the empty constructor for that tuple, I'm okay buying that. On the other hand, </p>\n\n<pre><code>*Main&gt; var = Property \"Colors\" 20\n*Main&gt; :t var\nvar :: Num (f a) =&gt; Property f a\n</code></pre>\n\n<p>what is <code>f</code> here? Can't be the identity because <code>id :: a -&gt; a</code> but we need <code>(f a)</code>. </p>\n\n<p>I managed to make my ADT a functor with: </p>\n\n<pre><code>instance Functor f =&gt; Functor (Property f) where\n  fmap fun (Property name a) = Property name (fmap fun a)\n  fmap g Zilch               = Zilch \n</code></pre>\n\n<p>So something like the following works </p>\n\n<pre><code>*Main&gt; var = Property \"Colors\" [1,2,3,4]\n*Main&gt; fmap (+1) var\nProperty \"Colors\" [2,3,4,5]\n</code></pre>\n\n<p>But what if I gave it to the previous example of a tuple? </p>\n\n<p>I am really looking for explanatory answers (have seen Haskell for barely two months in a summer course), not references to things like <code>FlexibleContexts</code> to allow ... say <code>fmap</code> to work on arbitrary <code>a</code>.</p>\n"}, {"tags": ["haskell", "composition", "partial-application"], "comments": [{"owner": {"reputation": 23557, "user_id": 12266, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/6a2a454191fa75d4114ed05836a0b924?s=128&d=identicon&r=PG", "display_name": "Andrew Jaffe", "link": "https://stackoverflow.com/users/12266/andrew-jaffe"}, "edited": false, "score": 0, "creation_date": 1500505582, "post_id": 45202464, "comment_id": 77371938, "body": "What are you trying to do with the second one? What happens when you try it?"}, {"owner": {"reputation": 27, "user_id": 7945715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f06dbe79bee2a8ced192e7b4698e3829?s=128&d=identicon&r=PG&f=1", "display_name": "cde33", "link": "https://stackoverflow.com/users/7945715/cde33"}, "reply_to_user": {"reputation": 23557, "user_id": 12266, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/6a2a454191fa75d4114ed05836a0b924?s=128&d=identicon&r=PG", "display_name": "Andrew Jaffe", "link": "https://stackoverflow.com/users/12266/andrew-jaffe"}, "edited": false, "score": 0, "creation_date": 1500506243, "post_id": 45202464, "comment_id": 77372142, "body": "It was wrong. Please take a look at Willem&#39;s answer"}], "answers": [{"comments": [{"owner": {"reputation": 27, "user_id": 7945715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f06dbe79bee2a8ced192e7b4698e3829?s=128&d=identicon&r=PG&f=1", "display_name": "cde33", "link": "https://stackoverflow.com/users/7945715/cde33"}, "edited": false, "score": 1, "creation_date": 1500506119, "post_id": 45202483, "comment_id": 77372108, "body": "Thank you @Willem Van Onsem"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 4, "last_activity_date": 1500505979, "last_edit_date": 1500505979, "creation_date": 1500505616, "answer_id": 45202483, "question_id": 45202464, "link": "https://stackoverflow.com/questions/45202464/adding-a-value-with-composition-and-partial-application-haskell/45202483#45202483", "title": "adding a value with composition and partial application haskell", "body": "<p>The problem with that approach is that <code>(+)</code> is a binary operator. Since you put it at the right of the dot <code>.</code>, it will not be applied to the left operand. So you have written:</p>\n\n<pre><code>function :: Num a =&gt; a -&gt; a -&gt; a\nfunction m = (.) (m^2) (+)  -- wrong\n</code></pre>\n\n<p>This is short for:</p>\n\n<pre><code>function m = \\n -&gt; ((m^2) ((+) n))\n</code></pre>\n\n<p>So that means that <code>(+) n</code> will result in a function <code>(n+)</code> and we will apply that function to the result of <code>(m^2)</code>, which does not make much sense.</p>\n\n<p>You can however simply use:</p>\n\n<pre><code>function :: Num a =&gt; a -&gt; a -&gt; a\nfunction m = (+) (m^2)\n</code></pre>\n\n<p>Or:</p>\n\n<pre><code>function :: Num a =&gt; a -&gt; a -&gt; a\nfunction m = ((m^2) +)\n</code></pre>\n\n<p>Given <code>function m = (+) (m^2)</code>, if we apply <code>n</code> on that function, we will obtain:</p>\n\n<pre><code>((+) (m^2)) n\n-&gt; (+) (m^2) n\n-&gt; (m^2) + n\n</code></pre>\n\n<p>You can further modify the <code>function</code> and drop the <code>m</code> argument as well, with:</p>\n\n<pre><code>function :: Num a =&gt; a -&gt; a -&gt; a\nfunction = (+) . (^ 2)\n</code></pre>\n\n<p>Which is syntactical sugar for:</p>\n\n<pre><code>function :: Num a =&gt; a -&gt; a -&gt; a\nfunction = (.) (+) (^2)\n</code></pre>\n\n<p>If we now apply <code>m</code> on the function, it will evaluate to:</p>\n\n<pre><code>((.) (+) (^2)) m\n-&gt; (\\x -&gt; (+) ((^2) x)) m\n-&gt; (+) ((^2) m)\n-&gt; (+) (m^2)\n</code></pre>\n\n<p>So we obtain the state like in the previous command.</p>\n"}], "owner": {"reputation": 27, "user_id": 7945715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f06dbe79bee2a8ced192e7b4698e3829?s=128&d=identicon&r=PG&f=1", "display_name": "cde33", "link": "https://stackoverflow.com/users/7945715/cde33"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 58, "favorite_count": 0, "accepted_answer_id": 45202483, "answer_count": 1, "score": 1, "last_activity_date": 1500506314, "creation_date": 1500505489, "last_edit_date": 1500506314, "question_id": 45202464, "link": "https://stackoverflow.com/questions/45202464/adding-a-value-with-composition-and-partial-application-haskell", "title": "adding a value with composition and partial application haskell", "body": "<p>I'm trying to write this function applying composition and partial application with Haskell: </p>\n\n<pre><code>function m n = (m^2) + n\n</code></pre>\n\n<p>I tried this with:</p>\n\n<pre><code>function m = (m^2).(+)\n</code></pre>\n"}, {"tags": ["haskell", "cabal", "haskell-stack", "version-numbering"], "comments": [{"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1500494264, "post_id": 45199512, "comment_id": 77366999, "body": "Why don&#39;t you include the image as actual image in your post?"}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1500494730, "post_id": 45199512, "comment_id": 77367226, "body": "Just to get it right: the <code>x</code> in <code>1.x.x</code> isn&#39;t a placeholder, you&#39;re actually using an <code>x</code> in your version?"}, {"owner": {"reputation": 5242, "user_id": 50962, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e39b7acdae85aedee02487bed17ff5f6?s=128&d=identicon&r=PG", "display_name": "altern", "link": "https://stackoverflow.com/users/50962/altern"}, "reply_to_user": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1500494964, "post_id": 45199512, "comment_id": 77367368, "body": "@Zeta: yes, I am using 1.x.x as an actual version"}], "answers": [{"tags": [], "owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "is_accepted": false, "score": 2, "last_activity_date": 1500495631, "creation_date": 1500495631, "answer_id": 45200291, "question_id": 45199512, "link": "https://stackoverflow.com/questions/45199512/how-do-i-disable-version-parsing-in-cabal-or-stack/45200291#45200291", "title": "How do I disable version parsing in cabal or stack?", "body": "<p>You can't. The version will be parsed to <code>Version</code>, <a href=\"https://github.com/haskell/cabal/blob/master/Cabal/Distribution/Version.hs#L111-L118\" rel=\"nofollow noreferrer\">which is</a>:</p>\n\n<pre><code>data Version = PV0 {-# UNPACK #-} !Word64\n             | PV1 !Int [Int]\n</code></pre>\n\n<p>Stack uses Cabal as a library <a href=\"https://github.com/commercialhaskell/stack/blob/master/src/Stack/Types/Version.hs#L61-L64\" rel=\"nofollow noreferrer\">but has its own <code>Version</code> type:</a></p>\n\n<pre><code>newtype Version =\n  Version {unVersion :: Vector Word}\n  deriving (Eq,Ord,Typeable,Data,Generic,Store,NFData)\n</code></pre>\n\n<p>Neither cabal nor stack have a way to customize the parsing. You have to write your own variant of those programs if you want to use another version type. But then again, you're not winning anything at that point: neither Hackage nor Stackage will recognize your package's version.</p>\n\n<p>So the <code>1.x.x</code> isn't possible at the moment. You could exchange <code>x</code> with <code>99999999</code> or something similar to mitigate the problem. That being said, it's not clear what <code>cabal install</code> should then install. The <code>99999999</code> version? Or the latest stable variant?</p>\n\n<p>If you can express the semantics, a discussion on the mailing list as well as a feature request might change the behaviour in the (far away) future, but for now, you either have to patch the programs yourself or use another numbering scheme.</p>\n"}, {"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 1, "last_activity_date": 1500505739, "last_edit_date": 1500505739, "creation_date": 1500505431, "answer_id": 45202454, "question_id": 45199512, "link": "https://stackoverflow.com/questions/45199512/how-do-i-disable-version-parsing-in-cabal-or-stack/45202454#45202454", "title": "How do I disable version parsing in cabal or stack?", "body": "<blockquote>\n  <p>Is there a way to disable version parsing on cabal and stack commands? Is there a flag for it?</p>\n</blockquote>\n\n<p>No.</p>\n\n<blockquote>\n  <p>Or do I have to request this kind of change (adding flags, disabling version parsing) from the developers of <code>cabal</code> and <code>stack</code>?</p>\n</blockquote>\n\n<p>You can of course ask, but there are so many <a href=\"https://github.com/commercialhaskell/stack/issues\" rel=\"nofollow noreferrer\">outstanding</a> <a href=\"https://github.com/haskell/cabal/issues/\" rel=\"nofollow noreferrer\">issues</a> that you are unlikely to get any traction. You will have to be <em>very</em> convincing -- convincing enough to overturn more than 20 years of experience that says the current versioning scheme is basically workable. Realistically, if you want this to happen you'll probably have to maintain a fork of these tools yourself, and provide an alternative place to host packages using this scheme.</p>\n\n<blockquote>\n  <p>Why is there any parsing at all? How does it help with building a package?</p>\n</blockquote>\n\n<p>Packages specify dependencies, and for each dependency, specify what version ranges they work with. The build tools then use a constraint solver to choose a coherent set of package/version pairs to satisfy all the (transitive) dependencies. To do this, they must at a minimum be able to check whether a given version is in a given range -- which requires parsing the version number at least a little bit.</p>\n\n<blockquote>\n  <p>Does cabal or stack automatically increment build numbers on some event? If yes, where could I read more about this?</p>\n</blockquote>\n\n<p>There is nothing automatic. But you should take a look at the <a href=\"https://pvp.haskell.org/\" rel=\"nofollow noreferrer\">Package Version Policy</a>, which serves as a social contract between package maintainers. It lets one package maintainer say, \"I am using <code>bytestring</code> version <code>0.10.0.1</code> and it seems to work. I'm being careful about qualifying all my <code>bytestring</code> imports; therefore I can specify a range like <code>&gt;=0.10 &amp;&amp; &lt;0.11</code> and be sure that things will just work, while giving the <code>bytestring</code> maintainer the ability to push security and efficiency updates to my users.\" without having to pore through the full documentation of <code>bytestring</code> and hope its maintainer had written about what his version numbers mean.</p>\n\n<blockquote>\n  <p>How could I influence the way version numbering incrementation gets implemented in cabal and stack?</p>\n</blockquote>\n\n<p>As with your previous question about changing the way the community does things, I think modifications to the Package Versioning Policy are going to be quite difficult, especially changes as radical as you seem to be proposing here. The more radical the change, the more carefully motivated it will have to be to gain traction.</p>\n\n<p>I honestly don't know what a reasonable place to take such motivation and discussion would be; perhaps the haskell-cafe mailing list or similar.</p>\n"}], "owner": {"reputation": 5242, "user_id": 50962, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e39b7acdae85aedee02487bed17ff5f6?s=128&d=identicon&r=PG", "display_name": "altern", "link": "https://stackoverflow.com/users/50962/altern"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 120, "favorite_count": 0, "accepted_answer_id": 45202454, "answer_count": 2, "score": 0, "last_activity_date": 1500723603, "creation_date": 1500492766, "last_edit_date": 1500723603, "question_id": 45199512, "link": "https://stackoverflow.com/questions/45199512/how-do-i-disable-version-parsing-in-cabal-or-stack", "title": "How do I disable version parsing in cabal or stack?", "body": "<p>I am using <a href=\"https://www.dropbox.com/s/66ucaf2auolq38u/branches%20naming%20.jpg?dl=0\" rel=\"nofollow noreferrer\">alternative version numbering approach</a> for my projects. I have encountered strange behavior by <code>cabal</code> and <code>stack</code> that does not allow me to fully enjoy benefits of this approach. Both <code>cabal</code> and <code>stack</code> enforce version to be of format <code>Int</code>.<code>Int</code>.<code>Int</code>, which does not cover the case of another version format I use for branches (<code>0.x.x</code>, <code>1.x.x</code>, <code>1.0.x</code>, etc). </p>\n\n<p>If I have line <code>version: 0.x.x</code> in my <code>.cabal</code> file, I am getting <code>Parse of field 'version' failed.</code> error when running <code>cabal build</code> or <code>Unable to parse cabal file {PROJECT_NAME}.cabal: NoParse \"version\" 5</code> when running <code>stack init</code>.</p>\n\n<p>Is there a way to disable version parsing on <code>cabal</code> and <code>stack</code> commands? Is there a flag for it? Or do I have to request this kind of change (adding flags, disabling version parsing) from the developers of <code>cabal</code> and <code>stack</code>? </p>\n\n<p>Why is there any parsing at all? How does it help with building a package? Does <code>cabal</code> or <code>stack</code> automatically increment build numbers on some event? If yes, where could I read more about this? How could I influence the way version numbering incrementation gets implemented in <code>cabal</code> and <code>stack</code>? I want developers of haskell packages take into account the possibility of alternative version numbering approaches.</p>\n\n<p>PS. For all interested folks, I want to quickly summarize <strong>the idea behind \"weird\" version numbers</strong>, such as <code>0.x.x</code>, <code>1.x.x</code>, <code>1.0.x</code>. I use the version numbers with <code>x</code>'s to describe streamlines of development that allow code changes while such version numbers as <code>1.0.0</code>, <code>1.1.0</code>, <code>2.35.46</code> are used to describe frozen states of development (to be precise, they are used for <em>released</em> versions of software). Note that such version numbers as <code>0.x.0</code>, <code>1.x.15</code>, <code>2.x.23</code> are also possible (used for <em>snapshots/builds</em> of software) and they mean that codebase has been inherited from branches with version numbers <code>0.x.x</code>, <code>1.x.x</code> and <code>2.x.x</code> correspondingly. </p>\n\n<p>Why do I need such version numbers as <code>0.x.x</code>, <code>1.x.x</code> and <code>2.x.x</code> at all? In brief, different number of <code>x</code>'s mean branches of different types. For example, version number pattern <code>N.x.x</code> is used for <em>support</em> branches, while pattern <code>N.M.x</code> is used for <em>release</em> branches. Idea behind <em>support</em> branches is that they get created due to incompatibility of the corresponding codebases. <em>Release</em> branches get created due to feature freeze in corresponding codebase. For example, branches <code>1.0.x</code>, <code>1.1.x</code>, <code>1.2.x</code>, ... get created as a result of feature freezes (or <em>releases</em>) in branch <code>1.x.x</code>.</p>\n\n<p>I know this is all confusing, but I worked hard to establish this version numbering approach and I continue working on awareness about the inconsistencies of version numbering through my presentations and other projects. This all makes sense once you think more about the <a href=\"https://www.slideshare.net/altern/agile-software-configuration-management-10042528\" rel=\"nofollow noreferrer\">pitfalls of semver approach</a> (you can find detailed slideshare presentation on the matter following the link). But I do not want to defend it for now. For the time being, I just want <code>cabal</code> and <code>stack</code> to stop enforcing their, as I perceive them, <em>unjustified</em> rules to my project. Hope you can help me with that.</p>\n"}, {"tags": ["haskell", "maybe"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 2, "creation_date": 1500490350, "post_id": 45198745, "comment_id": 77364706, "body": "<code>y</code> is <code>t</code> and <code>tail xs</code> is <code>[t]</code>. You can\u2019t have an expression that might be of type <code>Maybe t</code> or might be of type <code>Maybe [t]</code> depending on runtime conditions. One option to fix that would be to define a <code>data Foo a = None | One a | Lots [a]</code>, but that\u2019s kind of just a list."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1500490413, "post_id": 45198745, "comment_id": 77364743, "body": "Read up on how Haskell&#39;s polymorphism works. If the result of a function is something with <code>a</code> this does <i>not</i> mean the function can return a value of whichever type it likes \u2013 that would be quite useless, because how is the caller supposed to actually use the result if they don&#39;t even know the type? \u2014 Instead, a signature with <code>-&gt; F a</code> means that <i>the caller may choose what type the result should be</i>."}, {"owner": {"reputation": 97, "user_id": 8212844, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/236833266ffeedd6f562a9f5e4f2fae4?s=128&d=identicon&r=PG", "display_name": "IPiiro", "link": "https://stackoverflow.com/users/8212844/ipiiro"}, "edited": false, "score": 0, "creation_date": 1500490426, "post_id": 45198745, "comment_id": 77364755, "body": "In the <code>Foo...</code> - case i would replace <code>Maybe a</code> with it ?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 2, "creation_date": 1500490517, "post_id": 45198745, "comment_id": 77364820, "body": "It is possible, but you need to choose one type for the result. The simplest option here would be to always return <code>[Int]</code> \u2013 which can after all contain just a single element \u2013 or you can be more explicit and return <code>Either Int [Int]</code>."}, {"owner": {"reputation": 97, "user_id": 8212844, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/236833266ffeedd6f562a9f5e4f2fae4?s=128&d=identicon&r=PG", "display_name": "IPiiro", "link": "https://stackoverflow.com/users/8212844/ipiiro"}, "edited": false, "score": 0, "creation_date": 1500490670, "post_id": 45198745, "comment_id": 77364920, "body": "Oh ok I guess I understand.. you&#39;re right I should read more about Haskell&#39;s polymorphism"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1500491266, "post_id": 45198745, "comment_id": 77365274, "body": "@leftaroundabout Indeed. This error - confusing existential and universal quantification - is starting to appear quite often here. We might need a reference question so that we can close the others as duplicates."}], "answers": [{"comments": [{"owner": {"reputation": 97, "user_id": 8212844, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/236833266ffeedd6f562a9f5e4f2fae4?s=128&d=identicon&r=PG", "display_name": "IPiiro", "link": "https://stackoverflow.com/users/8212844/ipiiro"}, "edited": false, "score": 1, "creation_date": 1500490917, "post_id": 45198932, "comment_id": 77365075, "body": "It really looks better the way you wrote it, but I&#39;m learning haskell for 3-4 months yet and consider myself a bloody beginner so I just wanted to train the usage of <code>case</code> and <code>Maybe</code>. But thanks I will keep that in mind next time"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 97, "user_id": 8212844, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/236833266ffeedd6f562a9f5e4f2fae4?s=128&d=identicon&r=PG", "display_name": "IPiiro", "link": "https://stackoverflow.com/users/8212844/ipiiro"}, "edited": false, "score": 1, "creation_date": 1500490989, "post_id": 45198932, "comment_id": 77365112, "body": "@IPiiro: well I&#39;m not saying you should use these :). It only looks - at least to me - more readable. But feel free to experiment :)."}, {"owner": {"reputation": 97, "user_id": 8212844, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/236833266ffeedd6f562a9f5e4f2fae4?s=128&d=identicon&r=PG", "display_name": "IPiiro", "link": "https://stackoverflow.com/users/8212844/ipiiro"}, "edited": false, "score": 0, "creation_date": 1500492610, "post_id": 45198932, "comment_id": 77366035, "body": "Btw where exactly is the difference between using <code>funct = \\y xs -&gt; case xs of...</code> and <code>funct y xs = case xs of...</code> ? It isn&#39;t just in terms of readability, or ?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 97, "user_id": 8212844, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/236833266ffeedd6f562a9f5e4f2fae4?s=128&d=identicon&r=PG", "display_name": "IPiiro", "link": "https://stackoverflow.com/users/8212844/ipiiro"}, "edited": false, "score": 1, "creation_date": 1500492712, "post_id": 45198932, "comment_id": 77366095, "body": "<code>\\y xs -&gt;</code> is a lambda expression. So here you say that <code>funct</code> is a lambda expression. But it is actually equivalent. By using such variables in the head however, we can define multiple clauses each with specific patterns (like the empty list)."}, {"owner": {"reputation": 97, "user_id": 8212844, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/236833266ffeedd6f562a9f5e4f2fae4?s=128&d=identicon&r=PG", "display_name": "IPiiro", "link": "https://stackoverflow.com/users/8212844/ipiiro"}, "edited": false, "score": 1, "creation_date": 1500492957, "post_id": 45198932, "comment_id": 77366264, "body": "So in that <code>case</code> (sorry for that bad joke) it doesn&#39;t matter. Ok thank you"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 6, "last_activity_date": 1500490931, "last_edit_date": 1500490931, "creation_date": 1500490677, "answer_id": 45198932, "question_id": 45198745, "link": "https://stackoverflow.com/questions/45198745/how-i-can-set-the-signature-of-a-function-right/45198932#45198932", "title": "How I can set the signature of a function right?", "body": "<blockquote>\n  <p>set the return type of the function to <code>Maybe a</code> because in one case it should return an <code>Int</code> and in the other an <code>[Int]</code>.</p>\n</blockquote>\n\n<p>Haskell is <strong>statically typed</strong>. Meaning it can not - at runtime - have a different return type. It can only have one return type. <code>a</code> is not an <em>ad hoc</em> type (in the sense that it can be any type at runtime). It means that <code>a</code> will be determined - at compile time - based on the types of other parameters.</p>\n\n<p>For instance you can write: <code>foo :: a -&gt; a -&gt; a</code> to specify that if <code>foo</code> takes two <code>Int</code>s (again known at compile time), the result will be an <code>Int</code>.</p>\n\n<p>You can however use <code>Either a b</code> to say that you will <em>either</em> return a <code>Left a</code>, or a <code>Right b</code>. So you can rewrite it to:</p>\n\n<pre><code>funct :: Int -&gt; [Int] -&gt;  Maybe (Either Int [Int])\nfunct = \\y xs -&gt; case xs of\n            [] -&gt; Nothing\n            xs -&gt; if ((head xs) == y)\n                        then Just (Left y)\n                        else Just (Right (tail xs))\n</code></pre>\n\n<p>Your function however is quite verbose, you can make it more clear and compact as follows:</p>\n\n<pre><code>funct :: Int -&gt; [Int] -&gt;  Maybe (Either Int [Int])\nfunct _ [] = Nothing\nfunct y (h:t) | h == y = Just (Left y)\n              | otherwise = Just (Right t)\n</code></pre>\n\n<p>Furthermore we can generalize it to:</p>\n\n<pre><code>funct :: Eq a =&gt; a -&gt; [a] -&gt;  Maybe (Either a [a])\nfunct _ [] = Nothing\nfunct y (h:t) | h == y = Just (Left y)\n              | otherwise = Just (Right t)\n</code></pre>\n\n<p>Here <code>Eq</code> is a <em>typeclass</em> that specifies that there exists a function <code>(==) :: a -&gt; a -&gt; Bool</code> that we can use. Otherwise using <code>==</code> in the body of the function would not be possible.</p>\n\n<p>Furthermore we use <em>patterns</em> in the head of every clause. <code>[]</code> is a pattern that describes the <em>empty list</em>. <code>(h:t)</code> on the other hand is a pattern describing a list containing at least one element: the head <code>h</code>, followed by a (possibly empty tail <code>t</code>).</p>\n"}], "owner": {"reputation": 97, "user_id": 8212844, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/236833266ffeedd6f562a9f5e4f2fae4?s=128&d=identicon&r=PG", "display_name": "IPiiro", "link": "https://stackoverflow.com/users/8212844/ipiiro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 76, "favorite_count": 0, "accepted_answer_id": 45198932, "answer_count": 1, "score": 1, "last_activity_date": 1500498260, "creation_date": 1500490079, "last_edit_date": 1500498260, "question_id": 45198745, "link": "https://stackoverflow.com/questions/45198745/how-i-can-set-the-signature-of-a-function-right", "title": "How I can set the signature of a function right?", "body": "<p>I'm practicing some Haskell to understand the <code>\\</code>, <code>case.. of</code> and <code>Maybe</code> better.</p>\n\n<p>I've got this little function here which should return <code>Nothing</code> if the array is empty, <code>Just y</code> if y is equal to the head of the array xs and <code>Just (tail xs)</code> if y is not equal to the head of the array xs.</p>\n\n<p>I set the return type of the function to <code>Maybe a</code> because in one case it should return an <code>Int</code> and in the other an <code>[Int]</code>.</p>\n\n<pre><code>funct :: Int -&gt; [Int] -&gt;  Maybe a\nfunct = \\y xs -&gt; case xs of\n            [] -&gt; Nothing\n            xs -&gt; if ((head xs) == y)\n                        then Just y\n                        else Just (tail xs)\n</code></pre>\n\n<p>What am I missing? I am getting the error that it couldn't match type <code>a</code> with <code>[Int]</code>. Isn't the <code>a</code> in <code>Maybe a</code> generic or is it influenced by the fact that I \"used\" the <code>a</code> as an <code>Int</code> in the <code>Just y</code> part? </p>\n\n<p><strong>EDIT:</strong> Ok my suggestion was bs, I tested it with <code>Just (tail xs)</code> in the then and else part and I'm still getting the same error.</p>\n"}, {"tags": ["haskell", "types", "functional-programming", "type-inference", "lambda-calculus"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1500491046, "post_id": 45198649, "comment_id": 77365151, "body": "Please provide some context. A link to the document where you obtained the rule, etc. Right now it is unclear what gamma means."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1500492452, "post_id": 45198649, "comment_id": 77365942, "body": "@WillemVanOnsem I&#39;m willing to bet gamma is a substitution, so that \\gamma(\\sigma) = \\gamma(\\rho) means that there is a way to unify the type of <code>t</code> with the input type of <code>s</code>."}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 4, "last_activity_date": 1500494381, "last_edit_date": 1500494381, "creation_date": 1500493746, "answer_id": 45199782, "question_id": 45198649, "link": "https://stackoverflow.com/questions/45198649/how-do-i-find-out-the-type-of-a-haskell-function/45199782#45199782", "title": "How do I find out the type of a Haskell function?", "body": "<p>Just to quickly review, we know these facts:</p>\n\n<ol>\n<li>If <code>s :: sigma -&gt; tau</code><br>\nand <code>t :: rho</code><br>\nand <code>gamma(sigma) = gamma(rho)</code><br>\nthen <code>s t :: gamma(tau)</code>.</li>\n<li><code>f :: ([a] -&gt; b) -&gt; a -&gt; [b]</code></li>\n<li><code>g :: c -&gt; Int -&gt; c</code></li>\n</ol>\n\n<p>We'd like to learn the type of <code>f g</code>. It looks like rule (1) could tell us that if we chose <code>s</code>, <code>t</code>, <code>sigma</code>, <code>tau</code>, <code>rho</code>, and <code>gamma</code> appropriately. Let's take a few guesses about how we could set them appropriately and see where that leads us.</p>\n\n<ul>\n<li>Since the conclusion of (1) says <code>s t :: ...</code> and we want to know <code>f g :: ...</code>, we should probably choose <code>s = f</code> and <code>t = g</code>.</li>\n<li>Since the premise of (1) says <code>s :: sigma -&gt; tau</code> and we've chosen <code>s = f</code> and know <code>f :: ([a] -&gt; b) -&gt; a -&gt; [b]</code> from (2), we should probably choose <code>sigma = [a] -&gt; b</code> and <code>tau = a -&gt; [b]</code>.</li>\n<li>Since the premise of (1) says <code>t :: rho</code> and we've chosen <code>t = g</code> and know <code>g :: c -&gt; Int -&gt; c</code> from (3), we should probably choose <code>rho = c -&gt; Int -&gt; c</code>.</li>\n</ul>\n\n<p>Summarizing our choices, we have now transformed (1) to this form:</p>\n\n<p>If <code>f :: ([a] -&gt; b) -&gt; a -&gt; [b]</code><br>\nand <code>g :: c -&gt; Int -&gt; c</code><br>\nand <code>gamma([a] -&gt; b) = gamma(c -&gt; Int -&gt; c)</code><br>\nthen <code>f g :: gamma(a -&gt; [b])</code>.</p>\n\n<p>There's only one variable from (1) that we haven't yet chosen a value for, namely, <code>gamma</code>. The third premise constrains <code>gamma</code> a little bit, namely, it must satisfy:</p>\n\n<pre><code>gamma([a] -&gt; b) = gamma(c -&gt; Int -&gt; c)\n</code></pre>\n\n<p>Presumably there's an implicit assumption that it behaves like a substitution, that is, recursing over type structures and replacing type variables, so the previous equality assumption is equivalent to this one:</p>\n\n<pre><code>[gamma(a)] -&gt; gamma(b) = gamma(c) -&gt; Int -&gt; gamma(c)\n</code></pre>\n\n<p>For this equation to be true, we must have all of these things:</p>\n\n<pre><code>gamma(c) = [gamma(a)]\ngamma(b) = Int -&gt; gamma(c) = Int -&gt; [gamma(a)]\n</code></pre>\n\n<p>If we make an arbitrary choice for <code>gamma(a)</code>, these equations tell us the results of <code>gamma(b)</code> and <code>gamma(c)</code>; let's choose <code>gamma(a) = a</code>. Then:</p>\n\n<pre><code>gamma(a) = a\ngamma(b) = Int -&gt; [a]\ngamma(c) = [a]\n</code></pre>\n\n<p>Now we have satisfied the premises of (1), and so we learn its conclusion:</p>\n\n<pre><code>f g :: gamma(a -&gt; [b])\nf g :: gamma(a) -&gt; [gamma(b)]\nf g :: a -&gt; [Int -&gt; [a]]\n</code></pre>\n"}], "owner": {"reputation": 175, "user_id": 7137698, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/73a2bcd04ae13a5ea09112f4bbc6cd4c?s=128&d=identicon&r=PG&f=1", "display_name": "Anil ", "link": "https://stackoverflow.com/users/7137698/anil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 115, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1500506756, "creation_date": 1500489784, "last_edit_date": 1500506756, "question_id": 45198649, "link": "https://stackoverflow.com/questions/45198649/how-do-i-find-out-the-type-of-a-haskell-function", "title": "How do I find out the type of a Haskell function?", "body": "<p>Currently I am preparing for my exams and this is something about Haskell which I never really understood. </p>\n\n<p>The type rule is the following</p>\n\n<p><a href=\"https://i.stack.imgur.com/qNcwC.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/qNcwC.png\" alt=\" \"></a></p>\n\n<p>\"und\" means \"and\" in German.</p>\n\n<p>So the given functions are</p>\n\n<pre><code>f :: ([a] -&gt; b) -&gt; a -&gt; [b]\ng :: c -&gt; Int -&gt; c\n</code></pre>\n\n<p>And now I have to determine the type <code>(f g)</code> by using the type rule above. Can someone explain me how to proceed at this point?</p>\n"}, {"tags": ["multithreading", "haskell", "graphics", "thread-safety", "glut"], "comments": [{"owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "edited": false, "score": 1, "creation_date": 1500500735, "post_id": 45197922, "comment_id": 77370345, "body": "Gui stuff has to be done in the main thread in MacOS. Look up <code>forkOS</code> to see how to run things on a specific OS thread. I don&#39;t have a Mac but there is probably some documentation online regarding running things on the main thread in Haskell"}, {"owner": {"reputation": 4452, "user_id": 562583, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/7d7c259d7212f8278d89e6bc45a9b39c?s=128&d=identicon&r=PG", "display_name": "Turion", "link": "https://stackoverflow.com/users/562583/turion"}, "reply_to_user": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "edited": false, "score": 0, "creation_date": 1597955385, "post_id": 45197922, "comment_id": 112309480, "body": "@DanRobertson there is no forking involved here."}, {"owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "reply_to_user": {"reputation": 4452, "user_id": 562583, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/7d7c259d7212f8278d89e6bc45a9b39c?s=128&d=identicon&r=PG", "display_name": "Turion", "link": "https://stackoverflow.com/users/562583/turion"}, "edited": false, "score": 0, "creation_date": 1597955576, "post_id": 45197922, "comment_id": 112309555, "body": "@Turion indeed, <code>forkOS</code> does not use <code>fork(2)</code>"}, {"owner": {"reputation": 4452, "user_id": 562583, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/7d7c259d7212f8278d89e6bc45a9b39c?s=128&d=identicon&r=PG", "display_name": "Turion", "link": "https://stackoverflow.com/users/562583/turion"}, "reply_to_user": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "edited": false, "score": 0, "creation_date": 1598009242, "post_id": 45197922, "comment_id": 112325308, "body": "@DanRobertson, sorry, I was imprecise. I meant that in the example OP posted there is no forking involved. Gloss does not fork, it blocks on the main thread."}, {"owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "reply_to_user": {"reputation": 4452, "user_id": 562583, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/7d7c259d7212f8278d89e6bc45a9b39c?s=128&d=identicon&r=PG", "display_name": "Turion", "link": "https://stackoverflow.com/users/562583/turion"}, "edited": false, "score": 0, "creation_date": 1598009371, "post_id": 45197922, "comment_id": 112325372, "body": "@Turion a process forking is different from using multiple threads. But if your claim is that gloss runs on the main thread, how do you square that with the error message above?"}, {"owner": {"reputation": 4452, "user_id": 562583, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/7d7c259d7212f8278d89e6bc45a9b39c?s=128&d=identicon&r=PG", "display_name": "Turion", "link": "https://stackoverflow.com/users/562583/turion"}, "reply_to_user": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "edited": false, "score": 0, "creation_date": 1598019578, "post_id": 45197922, "comment_id": 112330271, "body": "@DanRobertson well, that&#39;s basically what this question is about."}], "owner": {"reputation": 917, "user_id": 1667423, "user_type": "registered", "accept_rate": 36, "profile_image": "https://www.gravatar.com/avatar/3ff1fb6d7b142bca9bb38ec7abd66184?s=128&d=identicon&r=PG", "display_name": "user76284", "link": "https://stackoverflow.com/users/1667423/user76284"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 239, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1500487401, "creation_date": 1500487401, "question_id": 45197922, "link": "https://stackoverflow.com/questions/45197922/glut-fatal-error-when-using-haskell-graphics-gloss", "title": "GLUT Fatal Error when using Haskell Graphics.Gloss", "body": "<p>I am following <strong><a href=\"http://andrew.gibiansky.com/blog/haskell/haskell-gloss/#_basic_drawing\" rel=\"nofollow noreferrer\">this tutorial</a></strong> and have created a <code>demo.hs</code> file with the following:</p>\n\n<pre><code>import Graphics.Gloss\n\nwindow :: Display\nwindow = InWindow \"Nice Window\" (200, 200) (10, 10)\n\nbackground :: Color\nbackground = white\n\ndrawing :: Picture\ndrawing = circle 80\n\nmain :: IO ()\nmain = display window background drawing\n</code></pre>\n\n<p>However, when I execute <code>runhaskell demo.hs</code> in my terminal, I get the following error message:</p>\n\n<pre><code>GLUT Fatal Error: internal error: NSInternalInconsistencyException, reason: nextEventMatchingMask should only be called from the Main Thread!\n</code></pre>\n\n<p>What does this error mean, and how can I fix it? I am using macOS Sierra version 10.12.5.</p>\n"}, {"tags": ["haskell", "types", "io", "list-comprehension", "monads"], "comments": [{"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1500478635, "post_id": 45194657, "comment_id": 77357753, "body": "Is that your actual indentation? After you&#39;ve solved that problem, I suggest you to head over to <a href=\"https://codereview.stackexchange.com\">Code Review</a>."}, {"owner": {"reputation": 480, "user_id": 8326972, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/2686a66637446afd24dc51e04dea7bd6?s=128&d=identicon&r=PG&f=1", "display_name": "Hobbamok", "link": "https://stackoverflow.com/users/8326972/hobbamok"}, "reply_to_user": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1500480743, "post_id": 45194657, "comment_id": 77359114, "body": "@Zeta no its not but ghci keeps complaining about Tabs"}], "answers": [{"tags": [], "owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "is_accepted": false, "score": 2, "last_activity_date": 1500478773, "creation_date": 1500478773, "answer_id": 45195228, "question_id": 45194657, "link": "https://stackoverflow.com/questions/45194657/how-do-i-run-through-a-list-with-an-io-operation/45195228#45195228", "title": "How do I run through a list with an IO operation", "body": "<p>Use <code>mapM_ singleWord  (lines content)</code>. For the sake of simplicity, think of <code>mapM_</code> as.</p>\n\n<pre><code>mapM_ :: (a -&gt; IO ()) -&gt; [a] -&gt; IO ()\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 754, "user_id": 2140910, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CtvpI.jpg?s=128&g=1", "display_name": "Bjartur Thorlacius", "link": "https://stackoverflow.com/users/2140910/bjartur-thorlacius"}, "is_accepted": true, "score": 5, "last_activity_date": 1507309948, "last_edit_date": 1507309948, "creation_date": 1500479550, "answer_id": 45195473, "question_id": 45194657, "link": "https://stackoverflow.com/questions/45194657/how-do-i-run-through-a-list-with-an-io-operation/45195473#45195473", "title": "How do I run through a list with an IO operation", "body": "<p>You're looking for a function called <code>mapM_</code>.</p>\n\n<pre><code>main :: IO ()\nmain = do {\n  content &lt;- readFile \"palindrom.txt\";\n  mapM_ singleWord (lines content);\n};\n\n\npalindrome :: [Char] -&gt; Bool\npalindrome a = (a == reverse a)\n\nsingleWord :: [Char] -&gt; IO()\nsingleWord a = do {\n  let {\n    adverb = (if palindrome a then \" \" else \" not \");\n  };\n  putStrLn  (a ++ \" is\" ++ adverb ++ \"a palindrome.\");\n};\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 3, "last_activity_date": 1500481089, "last_edit_date": 1500481089, "creation_date": 1500480765, "answer_id": 45195863, "question_id": 45194657, "link": "https://stackoverflow.com/questions/45194657/how-do-i-run-through-a-list-with-an-io-operation/45195863#45195863", "title": "How do I run through a list with an IO operation", "body": "<p>That should've been </p>\n\n<pre><code>walkthrough [] = return ()                    -- this is the final action\nwalkthrough x  = do { singleWord (head x)     -- here you missed the parens \n                    ; walkthrough (tail x) }\n</code></pre>\n\n<p>or better yet,</p>\n\n<pre><code>walkthrough []     = return () \nwalkthrough (x:xs) = do { singleWord x        -- can't make that mistake now!\n                        ; walkthrough xs}\n</code></pre>\n\n<p>and call it as <code>walkthrough (lines content)</code> in your main <code>do</code> block.</p>\n\n<p>As others have pointed out, <code>walkthrough</code> is the same as <code>mapM_ singleWord</code>.</p>\n\n<p>You could also write it with a list comprehension,</p>\n\n<pre><code>walkthrough xs = sequence_ [ singleWord x | x &lt;- xs]\n</code></pre>\n\n<p><code>sequence_ :: Monad m =&gt; [m a] -&gt; m ()</code> turns a list of actions into a sequence of actions discarding their results and producing the <code>()</code> in the end: <code>sequence_ = foldr (&gt;&gt;) (return ())</code>. And <code>sequence_ (map f xs)</code> === <code>mapM_ f xs</code>, so it all ties up in the end.</p>\n"}], "owner": {"reputation": 480, "user_id": 8326972, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/2686a66637446afd24dc51e04dea7bd6?s=128&d=identicon&r=PG&f=1", "display_name": "Hobbamok", "link": "https://stackoverflow.com/users/8326972/hobbamok"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 498, "favorite_count": 0, "accepted_answer_id": 45195473, "answer_count": 3, "score": 2, "last_activity_date": 1507309948, "creation_date": 1500477227, "last_edit_date": 1500506178, "question_id": 45194657, "link": "https://stackoverflow.com/questions/45194657/how-do-i-run-through-a-list-with-an-io-operation", "title": "How do I run through a list with an IO operation", "body": "<p>So I'm writing a program that checks for every line of a .txt file whether it is a palindrome or not,</p>\n\n<pre><code>import System.IO\n\nmain :: IO()\nmain = do {\ncontent &lt;- readFile \"palindrom.txt\";\nprint content;\nprint (lines content);\nsingleWord (head (lines content));\nreturn ();\n}\n\npalindrom :: [Char] -&gt; Bool\npalindrom a = a == reverse a\n\nsingleWord :: [Char] -&gt; IO()\nsingleWord a = do { \nprint (length a);\nprint (show (palindrom a));\n}\n</code></pre>\n\n<p>But instead of <code>singleWord (head (lines content))</code> I need to run the <code>singleWord</code> through the entire list.</p>\n\n<p>The problem is that with <code>map</code> or normal list comprehension I always get a ton of varying errors all to do with <code>lines content</code> (which should be an array of Strings or IO Strings) apparently always being the type I don't want (I've tried messing around with type declarations on that forever, but it keeps being the wrong type, or the right one but in an extra array-layer or whatever).</p>\n\n<p>My last attempt is to walk through the array with recursion, with this little extra code:</p>\n\n<pre><code>walkthrough [] = []\nwalkthrough x = do { singleWord head x; walkthrough (tail x) }\n</code></pre>\n\n<p>which I can't typecast correctly no matter what.</p>\n\n<p>It's supposed to replace the <code>singleWord (head (lines content))</code> in <code>main</code>, and if I try anything with typeclassing, like </p>\n\n<pre><code>walkthrough :: [[Char]] -&gt; [[Char]]\nwalkthrough [] = [\"Hi\"]\nwalkthrough x = do { singleWord head x; walkthrough (tail x) }\n</code></pre>\n\n<p>I get </p>\n\n<pre><code>Couldn't match type `IO' with `[]'\n      Expected type: [()]\n        Actual type: IO ()\n</code></pre>\n\n<p>or some other stuff that won't fit together.</p>\n"}, {"tags": ["haskell", "tilde-expansion"], "comments": [{"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 1, "creation_date": 1500471910, "post_id": 45192230, "comment_id": 77352204, "body": "Your standard Linux distribution lists the accounts and the corresponding home folders in <code>&#47;etc&#47;passwd</code>."}], "answers": [{"tags": [], "owner": {"reputation": 1780, "user_id": 4168972, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fc92e82d2eb21eb030d4c133c70ff554?s=128&d=identicon&r=PG&f=1", "display_name": "David Fletcher", "link": "https://stackoverflow.com/users/4168972/david-fletcher"}, "is_accepted": true, "score": 4, "last_activity_date": 1500472978, "creation_date": 1500472978, "answer_id": 45192957, "question_id": 45192230, "link": "https://stackoverflow.com/questions/45192230/haskell-get-a-specific-users-home-directory-path/45192957#45192957", "title": "Haskell get a specific user&#39;s home directory path", "body": "<p>It looks like this is available in the <a href=\"http://hackage.haskell.org/package/unix-2.7.2.1\" rel=\"nofollow noreferrer\">unix</a> package using <a href=\"http://hackage.haskell.org/package/unix-2.7.2.1/docs/System-Posix-User.html#v:getUserEntryForName\" rel=\"nofollow noreferrer\">getUserEntryForName</a> and then the <code>homeDirectory</code> field of <code>UserEntry</code>.</p>\n\n<pre><code>import System.Posix.User\n\nmain :: IO ()\nmain = do entry &lt;- getUserEntryForName \"djf\"\n          putStrLn (homeDirectory entry)\n</code></pre>\n"}], "owner": {"reputation": 3350, "user_id": 6112457, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/ZRj0Z.jpg?s=128&g=1", "display_name": "Zoey Hewll", "link": "https://stackoverflow.com/users/6112457/zoey-hewll"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 537, "favorite_count": 0, "accepted_answer_id": 45192957, "answer_count": 1, "score": 3, "last_activity_date": 1575751299, "creation_date": 1500471253, "last_edit_date": 1575751299, "question_id": 45192230, "link": "https://stackoverflow.com/questions/45192230/haskell-get-a-specific-users-home-directory-path", "title": "Haskell get a specific user&#39;s home directory path", "body": "<p>I want to make a function to expand names of the form <code>~user</code> with that user's home directory (usually <code>/home/user/</code>), including <code>~root</code>, which is typically <code>/root/</code>. I know of the <code>getHomeDirectory</code> method, to get the current user's home, but I don't know of any function to determine the home directory of a given user.</p>\n\n<h2>So far</h2>\n\n<p>I have the following function, which replaces a leading <code>~</code> in any file path with the user's home directory</p>\n\n<pre><code>-- join path with '/', except at root\n-- opposite of breakPath\nrejoinPath :: [FilePath] -&gt; FilePath\nrejoinPath []   = \"\"\nrejoinPath (p:ps)\n    | p == \"/\"  =  p ++ go ps\n    | otherwise =  go (p:ps)\n    where\n        go :: [FilePath] -&gt; FilePath\n        go []     = \"\"\n        go [p]    = p\n        go (p:ps) = p ++ \"/\" ++ go ps\n\n-- split path on '/', erasing separator except at root\n-- opposite of rejoinPath\nbreakPath :: FilePath -&gt; [FilePath]\nbreakPath []    = []\nbreakPath (c:cs)\n    | c == '/'  = \"/\" : go \"\" cs\n    | otherwise = go [c] cs\n    where\n        go :: FilePath -&gt; FilePath -&gt; [FilePath]\n        go z []         = [z]\n        go z (c:cs)\n            | c == '/'  = z : go \"\" cs\n            | otherwise = go (z ++ [c]) cs\n\nexpandHome :: FilePath -&gt; IO FilePath\nexpandHome p = rejoinPath &lt;$&gt; (go $ breakPath p)\n    where\n        go []           = pure []\n        go (p:ps)\n            | p == \"~\"  = do \n                            home &lt;- getHomeDirectory\n                            pure $ home : ps\n            | otherwise = pure $ p : ps\n</code></pre>\n\n<p>My understanding is that the <code>getHomeDirectory</code> reads from the <code>HOME</code> environment variable, and that the other home directories would be considerably harder to procure, but not impossible or prohibitively difficult I hope.</p>\n\n<h2>Note</h2>\n\n<p>I'm only interested in linux systems at the moment; I understand Windows and Mac have entirely different styles.</p>\n"}, {"tags": ["haskell", "coroutine", "conduit", "haskell-pipes", "free-monad"], "comments": [{"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 2, "creation_date": 1500500102, "post_id": 45192066, "comment_id": 77370049, "body": "I think the reason the Monad.Reader article and the streaming libraries don&#39;t use <code>FreeT</code> is the same: it doesn&#39;t earn you anything. In the case of the article, I assume the author felt the code was clearer and more self-contained as it appears in the article. In the case of the libraries, why incur a dependency on <code>free</code> (and, transitively, a big chunk of the Kmett Platform) when you can get the job done without it? IOW: yes, <code>FreeT</code> does support a class of coroutine types but that doesn&#39;t mean a given coroutine <i>must</i> be implemented using <code>FreeT</code>; boring engineering concerns take precedence"}, {"owner": {"reputation": 3128, "user_id": 3040129, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/TcwLC.png?s=128&g=1", "display_name": "illabout", "link": "https://stackoverflow.com/users/3040129/illabout"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1500610940, "post_id": 45192066, "comment_id": 77423715, "body": "Thanks @BenjaminHodgson.  I think your comment does a good job of answering my questions 1 and 3.  I&#39;m still wondering about my question 2.  Is there some sort of deeper relationship between coroutines and free monads?"}, {"owner": {"reputation": 3128, "user_id": 3040129, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/TcwLC.png?s=128&g=1", "display_name": "illabout", "link": "https://stackoverflow.com/users/3040129/illabout"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1500691256, "post_id": 45192066, "comment_id": 77465050, "body": "For question 3, I found an interested comment on reddit by @gabriel-gonzalez (the author of <code>pipes</code>): <a href=\"https://www.reddit.com/r/haskell/comments/23m4bs/i_added_a_coroutine_example_to_the_wiki_did_i/cgyfxux/\" rel=\"nofollow noreferrer\">reddit.com/r/haskell/comments/23m4bs/&hellip;</a> He says that <code>pipes</code> is meant to be relatively simple and easy to read.  Along with library usage concerns, that is part of the reason why <code>pipes</code> is not using the codensity transformation.  I imagine this could also be part of the reason why it is not based on <code>FreeT</code>.  It would be more difficult to understand with no(?) real benefit."}, {"owner": {"reputation": 3128, "user_id": 3040129, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/TcwLC.png?s=128&g=1", "display_name": "illabout", "link": "https://stackoverflow.com/users/3040129/illabout"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1527492427, "post_id": 45192066, "comment_id": 88132731, "body": "The <code>FreeT</code> construction is actually used by the <a href=\"http://hackage.haskell.org/package/streaming\" rel=\"nofollow noreferrer\"><code>streaming</code></a> library.  A <a href=\"http://hackage.haskell.org/package/streaming-0.2.1.0/docs/src/Streaming-Internal.html#Stream\" rel=\"nofollow noreferrer\">comment</a> on the <code>streaming</code> library&#39;s <code>Stream</code> type says that it is equivalent to <code>FreeT</code>."}], "answers": [{"tags": [], "owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "is_accepted": true, "score": 8, "last_activity_date": 1500658738, "creation_date": 1500658738, "answer_id": 45243654, "question_id": 45192066, "link": "https://stackoverflow.com/questions/45192066/what-is-the-relationship-between-haskells-freet-and-coroutine-type/45243654#45243654", "title": "what is the relationship between Haskell&#39;s FreeT and Coroutine type", "body": "<p>To answer your second question, let's first simplify the problem by looking at <code>Free</code>. <code>Free f a</code> allows you to construct <code>f</code>-shaped ASTs of <code>a</code>-values for later reduction (aka, interpretation). When comparing the monad transformers in the article with unlifted free constructions, we can simply choose <code>Identity</code> for <code>m</code>, as is the usual practice for constructing base monads from their transformers: <code>Free f = FreeT Identity f</code>.</p>\n\n<p>The Monad Reader article first presents a lifted Trampoline monad transformer, so let's start by looking at the unlifted version, with <code>Identity</code> elided:</p>\n\n<pre><code>data Trampoline a = Return a | Bounce (Trampoline a)\n</code></pre>\n\n<p>If we compare this to <code>Free</code></p>\n\n<pre><code>data Free f r = Pure r | Free (f (Free f r))\n</code></pre>\n\n<p>and squint a bit, we can see that all we really need to do is \"remove\" the <code>f</code>-structure, just as we previously \"removed\" the <code>m</code>-structure. So, we have <code>Trampoline = Free Identity</code>, again because <code>Identity</code> has no structure. That, in turn, means that this trampoline is a <code>FreeT Identity Identity</code>: a sort of degenerate coroutine with trivial shape and no way to use effects to determine whether to bounce or return. So that's the difference between this trampoline and the trampoline monad transformer: the transformer allows the bounces to be interleaved with <code>m</code>-actions.</p>\n\n<p>With a bit of work, we can also see that generators and consumers are free monads for specific choices of <code>f</code>, respectively <code>((,) a)</code> and <code>((-&gt;) a)</code>. Their free monad transformer versions similarly allow them to interleave <code>m</code>-actions (e.g., a generator can ask for user input before yielding). <code>Coroutine</code> generalizes both <code>f</code>, the AST shape (fixed to <code>f ~ Identity</code> for Trampoline) and the type of effects which can be interleaved (fixed to no effects, or <code>m ~ Identity</code>) for <code>Free</code>. This is exactly <code>FreeT m f</code>.</p>\n\n<p>Intuitively, if <code>Free f</code> is the monad for pure construction of <code>f</code>-shaped ASTs then <code>FreeT m f</code> is the monad for constructing <code>f</code>-shaped ASTs interleaved with effects supplied by <code>m</code>. If you squint a bit, this is exactly what coroutines are: a full generalization that parameterizes a reified computation on both the shape of the constructed AST and the type of effects used to construct it.</p>\n"}], "owner": {"reputation": 3128, "user_id": 3040129, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/TcwLC.png?s=128&g=1", "display_name": "illabout", "link": "https://stackoverflow.com/users/3040129/illabout"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 495, "favorite_count": 2, "accepted_answer_id": 45243654, "answer_count": 1, "score": 7, "last_activity_date": 1500658738, "creation_date": 1500470843, "question_id": 45192066, "link": "https://stackoverflow.com/questions/45192066/what-is-the-relationship-between-haskells-freet-and-coroutine-type", "title": "what is the relationship between Haskell&#39;s FreeT and Coroutine type", "body": "<p>In the \"Coroutine Pipelines\" article in <a href=\"https://themonadreader.files.wordpress.com/2011/10/issue19.pdf\" rel=\"noreferrer\">Monad.Reader Issue 19</a>, the author defines a generic <code>Coroutine</code> type:</p>\n\n<pre><code>newtype Coroutine f m a = Coroutine\n  { resume :: m (Either (f (Coroutine f m a)) a)\n  }\n</code></pre>\n\n<p>I noticed that this type is very similar to the <a href=\"https://hackage.haskell.org/package/free-4.12.4/docs/Control-Monad-Trans-Free.html#t:FreeT\" rel=\"noreferrer\"><code>FreeT</code></a> type from the <a href=\"https://hackage.haskell.org/package/free\" rel=\"noreferrer\"><code>free</code></a> package:</p>\n\n<pre><code>data FreeF f a b = Pure a | Free (f b)\n\nnewtype FreeT f m a = FreeT\n  { runFreeT :: m (FreeF f a (FreeT f m a))\n  }\n</code></pre>\n\n<p>It seems that <code>FreeT</code> and <code>Coroutine</code> are isomorphic.  Here are the functions mapping from one to the other:</p>\n\n<pre><code>freeTToCoroutine\n  :: forall f m a. (Functor f, Functor m) =&gt; FreeT f m a -&gt; Coroutine f m a\nfreeTToCoroutine (FreeT action) = Coroutine $ fmap f action\n  where\n    f :: FreeF f a (FreeT f m a) -&gt; Either (f (Coroutine f m a)) a\n    f (Pure a) = Right a\n    f (Free inner) = Left $ fmap freeTToCoroutine inner\n\ncoroutineToFreeT\n  :: forall f m a. (Functor f, Functor m) =&gt; Coroutine f m a -&gt; FreeT f m a\ncoroutineToFreeT (Coroutine action) = FreeT $ fmap f action\n  where\n    f :: Either (f (Coroutine f m a)) a -&gt; FreeF f a (FreeT f m a)\n    f (Right a) = Pure a\n    f (Left inner) = Free $ fmap coroutineToFreeT inner\n</code></pre>\n\n<p>I have the following questions:</p>\n\n<ol>\n<li>What is the relationship between the <code>FreeT</code> and <code>Coroutine</code> types?  Why didn't the author of \"Coroutine Pipelines\" use the <code>FreeT</code> type instead of creating the <code>Coroutine</code> type?</li>\n<li><strong>Is there some sort of deeper relationship between free monads and coroutines?</strong>  It doesn't seem like a coincidence that the types are isomorphic.</li>\n<li><p>Why aren't popular streaming libraries in Haskell based around <code>FreeT</code>?</p>\n\n<p>The core datatype in <a href=\"https://hackage.haskell.org/package/pipes\" rel=\"noreferrer\"><code>pipes</code></a> is <a href=\"https://hackage.haskell.org/package/pipes-4.3.4/docs/Pipes.html#t:Proxy\" rel=\"noreferrer\"><code>Proxy</code></a>:</p>\n\n<pre><code>data Proxy a' a b' b m r\n  = Request a' (a  -&gt; Proxy a' a b' b m r )\n  | Respond b  (b' -&gt; Proxy a' a b' b m r )\n  | M          (m    (Proxy a' a b' b m r))\n  | Pure    r\n</code></pre>\n\n<p>The core datatype in <a href=\"https://hackage.haskell.org/package/conduit-1.2.11\" rel=\"noreferrer\"><code>conduit</code></a> is <a href=\"https://hackage.haskell.org/package/conduit-1.2.11/docs/Data-Conduit-Internal.html#t:Pipe\" rel=\"noreferrer\"><code>Pipe</code></a>:</p>\n\n<pre><code>data Pipe l i o u m r\n  = HaveOutput (Pipe l i o u m r) (m ()) o\n  | NeedInput (i -&gt; Pipe l i o u m r) (u -&gt; Pipe l i o u m r)\n  | Done r\n  | PipeM (m (Pipe l i o u m r))\n  | Leftover (Pipe l i o u m r) l\n</code></pre>\n\n<p>I imagine it would be possible to write the <code>Proxy</code> or <code>Pipe</code> datatypes based around <code>FreeT</code>, so I wonder why it is not done?  Is it for performance reasons?</p>\n\n<p>The only hint of <code>FreeT</code> I've seen in the popular streaming libraries is <a href=\"https://hackage.haskell.org/package/pipes-group-1.0.6/docs/Pipes-Group.html\" rel=\"noreferrer\">pipes-group</a>, which uses <code>FreeT</code> to group items in streams.</p></li>\n</ol>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1500459801, "post_id": 45187652, "comment_id": 77342615, "body": "Why don&#39;t you add type signatures to <code>testOK</code> and <code>testKO</code>?"}, {"owner": {"reputation": 7792, "user_id": 242189, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/48a18a00706b9c7206ef4092b6e68a41?s=128&d=identicon&r=PG", "display_name": "nicolas", "link": "https://stackoverflow.com/users/242189/nicolas"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1500462835, "post_id": 45187652, "comment_id": 77344717, "body": "not sure how that would help, at this level every internal type variable is gone : the type is just  <code>Integral w =&gt; w -&gt; w -&gt; w -&gt; w</code>"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1500462986, "post_id": 45187652, "comment_id": 77344822, "body": "First of all it would <i>help us to understand</i> what you&#39;re doing."}, {"owner": {"reputation": 7792, "user_id": 242189, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/48a18a00706b9c7206ef4092b6e68a41?s=128&d=identicon&r=PG", "display_name": "nicolas", "link": "https://stackoverflow.com/users/242189/nicolas"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1500470657, "post_id": 45187652, "comment_id": 77351121, "body": "I see. but that&#39;s why I sprinkled the code with type signatures where it matters.  it&#39;s a standard exemple from 2009 by oleg, called implicit configurations. nothing fancy but it does uses polymorphism and type variables to existentially quantify at type level"}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 1, "last_activity_date": 1500473701, "creation_date": 1500473701, "answer_id": 45193257, "question_id": 45187652, "link": "https://stackoverflow.com/questions/45187652/forcing-type-variable-names-in-haskell/45193257#45193257", "title": "forcing type variable names in haskell", "body": "<p>Maybe this is close to what you are looking for.</p>\n\n<pre><code>testKO :: forall w. Integral w =&gt; w -&gt; w -&gt; w -&gt; w\ntestKO m a' b' = let\n   a :: forall s. M s w\n   a = M a'\n   in withModulus m  (\\ m' \u2192 let\n      b = M b'\n      in unM $ add m' (mul m' a a) (mul m' b b))\n</code></pre>\n\n<p>The issue is: </p>\n\n<ul>\n<li><code>a</code> will not get a polytype unless we ask for it explicitly</li>\n<li>we need <code>a</code> to have a polytype, or <code>withModulus</code> will not be able to choose <code>s</code> to its linking</li>\n<li>view patterns like <code>(M -&gt; a)</code> do not allow, AFAICS, to specify a type annotation</li>\n</ul>\n"}], "owner": {"reputation": 7792, "user_id": 242189, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/48a18a00706b9c7206ef4092b6e68a41?s=128&d=identicon&r=PG", "display_name": "nicolas", "link": "https://stackoverflow.com/users/242189/nicolas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 69, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1500473701, "creation_date": 1500459605, "last_edit_date": 1500470782, "question_id": 45187652, "link": "https://stackoverflow.com/questions/45187652/forcing-type-variable-names-in-haskell", "title": "forcing type variable names in haskell", "body": "<p>Say I have a phantom type</p>\n\n<pre><code>newtype Modulus s a = Modulus a deriving (Eq, Show)\n</code></pre>\n\n<p>And an applier forcing polymorphism</p>\n\n<pre><code>withModulus \u2237 a \u2192 (\u2200 s. Modulus s a \u2192 w ) \u2192 w\nwithModulus a k = k (Modulus a)\n</code></pre>\n\n<p>in which I make use of the type variable <code>s</code> introduced, in other types,  forcing them to share the index <code>s</code></p>\n\n<pre><code>newtype M s a = M a deriving (Eq, Show)\n</code></pre>\n\n<p>Plus some primitives, <em>at the same type index</em> for both types <code>Modulus</code> and <code>M</code></p>\n\n<pre><code>add :: Integral a \u21d2 Modulus s a \u2192 M s a \u2192 M s a \u2192 M s a\nadd (Modulus m) (M a) (M b) = M (mod (a + b) m)\nmul :: Integral a \u21d2 Modulus s a \u2192 M s a \u2192 M s a \u2192 M s a\nmul (Modulus m) (M a) (M b) = M (mod (a * b) m)\n</code></pre>\n\n<p>Now this fonction would work </p>\n\n<pre><code>testOK m a (b::w) = withModulus m\n                    (\\m \u2192 let a' = (M a :: \u2200 sa. M sa w) ; b' = M b -- free indexes introduced\n                          in unM $ add m (mul m a' a') (mul m b' b'))\n</code></pre>\n\n<p>whereas if some type variable have to escape their scope to unify, it fails </p>\n\n<pre><code>testKO m (M -&gt; a)  -- sa introduced\n         (b') = withModulus m\n                (\\(m :: Modulus sm w) -- sm introduced\n                  \u2192 let b = M b' in unM $ add m (mul m a a) (mul m b b))\n</code></pre>\n\n<p>(to unify sa == sm, <code>sm</code> would have to escape its scope)</p>\n\n<pre><code>\u2022 Couldn't match type \u2018s0\u2019 with \u2018s\u2019\n    because type variable \u2018s\u2019 would escape its scope\n  This (rigid, skolem) type variable is bound by\n    a type expected by the context:\n      Modulus s w -&gt; w\n    at /Users/nrolland/Sync/clones/haskGist80/.stack-work/intero/intero88093-Bi.hs:(37,17)-(39,72)\n  Expected type: M s w\n    Actual type: M s0 w\n</code></pre>\n\n<p>The error message reports this error using the name <code>s</code> from the definition, not the name <code>sm</code> supplied.  It might be minor here but I imagine it can get hard to read in more complicated context.</p>\n\n<p>Is there a way to force the names used ?</p>\n\n<p>complete code :</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE ExistentialQuantification #-}\n{-# LANGUAGE GADTs #-}\n{-# LANGUAGE RankNTypes #-}\n{-# LANGUAGE ViewPatterns #-}\n{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE UnicodeSyntax #-}\n\n\nmodule Configuration where\n--http://okmij.org/ftp/Haskell/tr-15-04.pdf\n\nnewtype Modulus s a = Modulus a deriving (Eq, Show)\nnewtype M s a = M a deriving (Eq, Show)\nadd :: Integral a \u21d2 Modulus s a \u2192 M s a \u2192 M s a \u2192 M s a\nadd (Modulus m) (M a) (M b) = M (mod (a + b) m)\nmul :: Integral a \u21d2 Modulus s a \u2192 M s a \u2192 M s a \u2192 M s a\nmul (Modulus m) (M a) (M b) = M (mod (a * b) m)\n\nunM (M a) = a\n\ndata AnyModulus a = \u2200 s. AnyModulus (Modulus s a)\nmakeModulus :: a \u2192 AnyModulus a\nmakeModulus a = AnyModulus (Modulus a)\n\nwithModulus \u2237 a \u2192 (\u2200 s. Modulus s a \u2192 w ) \u2192 w\nwithModulus a k = k (Modulus a)\n\nIntegral w =&gt; w -&gt; w -&gt; w -&gt; w\ntestOK m a (b::w) = withModulus m\n                    (\\m \u2192 let a' = (M a :: \u2200 sa. M sa w) ; b' = M b -- free indexes introduced\n                          in unM $ add m (mul m a' a') (mul m b' b'))\n\n\nIntegral w =&gt; w -&gt; w -&gt; w -&gt; w\ntestKO m (M -&gt; a)  -- sa introduced\n         (b') = withModulus m\n                (\\(m :: Modulus sm w) -- sm introduced\n                  \u2192 let b = M b' in unM $ add m (mul m a a) (mul m b b))\n</code></pre>\n"}, {"tags": ["haskell", "fold"], "comments": [{"owner": {"reputation": 21445, "user_id": 812818, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/bffad8ee5a559e7b747a839a1ed35416?s=128&d=identicon&r=PG", "display_name": "Daniel Lyons", "link": "https://stackoverflow.com/users/812818/daniel-lyons"}, "edited": false, "score": 3, "creation_date": 1500448257, "post_id": 45183279, "comment_id": 77334550, "body": "Haskell doesn&#39;t require you to supply all the arguments at once. If you only supply the first two, you are <i>partially applying</i> the function, and the result is another function that wants the last two. This is a pervasive feature of Haskell, not limited to <code>foldr</code>."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 3, "creation_date": 1500448280, "post_id": 45183279, "comment_id": 77334565, "body": "Try asking GHCI about the type of <code>foldr (.|.) zeroBits</code> too: since it&#39;s apparently a valid expression it must have some type, right? What do you think that type means? How did it get that type?"}, {"owner": {"reputation": 97, "user_id": 8212844, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/236833266ffeedd6f562a9f5e4f2fae4?s=128&d=identicon&r=PG", "display_name": "IPiiro", "link": "https://stackoverflow.com/users/8212844/ipiiro"}, "edited": false, "score": 0, "creation_date": 1500448521, "post_id": 45183279, "comment_id": 77334701, "body": "Oh I didn&#39;t knew that. Sounds like a cool feature! Thanks I got it !"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1500455010, "post_id": 45183279, "comment_id": 77339146, "body": "Try googling for &quot;partial application&quot; and &quot;currying&quot;. In Haskell, we pretend that there are multiple-argument functions, but actually every function takes exactly one argument, only -- it can however return another function which takes another argument, creating the illusion that two arguments are passed to the original function."}, {"owner": {"reputation": 97, "user_id": 8212844, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/236833266ffeedd6f562a9f5e4f2fae4?s=128&d=identicon&r=PG", "display_name": "IPiiro", "link": "https://stackoverflow.com/users/8212844/ipiiro"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1500455124, "post_id": 45183279, "comment_id": 77339236, "body": "@chi Will do it later on. Good explanation btw"}], "answers": [{"tags": [], "owner": {"reputation": 240688, "user_id": 14955, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/5DblQ.png?s=128&g=1", "display_name": "Thilo", "link": "https://stackoverflow.com/users/14955/thilo"}, "is_accepted": true, "score": 1, "last_activity_date": 1500449224, "last_edit_date": 1500449224, "creation_date": 1500448725, "answer_id": 45183497, "question_id": 45183279, "link": "https://stackoverflow.com/questions/45183279/foldr-applied-to-just-one-argument/45183497#45183497", "title": "Foldr applied to just one argument", "body": "<p><code>foldr</code> with a \"missing\" argument returns a function that takes a single argument (the one that was missing).</p>\n\n<p>You can then proceed to <code>map</code> that function over your <code>subsequences xs</code> (meaning that each of these subsequences is passed to your specialized foldr function as the \"missing\" argument).</p>\n\n<p>This is a very common and useful pattern that allows you to create specialized function by fixing a subset of parameters to a more general function.</p>\n\n<hr>\n\n<p>In your example, the \"specialized function\" remains anonymous. If that becomes too hard to read (or the function is useful in many places), you could give it a name.</p>\n\n<pre><code>--  create a new function that takes the first ten list elements \ntop10 = take 10       -- call take with a \"missing parameter\"\n\n-- as opposed to\nten = take 10 myList  -- call take with all parameters to get a list\n</code></pre>\n\n<hr>\n\n<p>It may help (or confuse) to think of Haskell functions as only taking a single parameter and returning a function that takes the next parameter (which in turn returns a function that takes the third parameter or a plain result if that was the last one). An expression like <code>take 1 list</code> can then be read as <code>(take 1) list</code>:  Call <code>take 1</code> to obtain a function, then call that function on the <code>list</code> to get the final result.</p>\n"}], "owner": {"reputation": 97, "user_id": 8212844, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/236833266ffeedd6f562a9f5e4f2fae4?s=128&d=identicon&r=PG", "display_name": "IPiiro", "link": "https://stackoverflow.com/users/8212844/ipiiro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 448, "favorite_count": 0, "accepted_answer_id": 45183497, "answer_count": 1, "score": 0, "last_activity_date": 1500449224, "creation_date": 1500448128, "question_id": 45183279, "link": "https://stackoverflow.com/questions/45183279/foldr-applied-to-just-one-argument", "title": "Foldr applied to just one argument", "body": "<p>So I've got the function that will return <code>True</code> if the number n is the result of applying bitwise or to any subsequence of xs :</p>\n\n<p><code>checkBits xs n = not $ null $ filter (==n) $ map (foldr (.|.) zeroBits) (subsequences xs)</code></p>\n\n<p>Now the thing I don't get is that the <code>foldr</code> is given <code>(.|.)</code> and <code>zeroBits</code>, but didn't I need another argument for <code>foldr</code>.\nLike I understand the function of <code>foldr</code>, you apply it to a function, which is in that case <code>(.|.)</code>, to a \"starting value\", which I guess is <code>zeroBits</code>, but what about the <code>t a</code>, which is mentioned in: </p>\n\n<p><code>Prelude&gt;:t foldr\nfoldr :: Foldable t =&gt; (a -&gt; b -&gt; b) -&gt; b -&gt; t a -&gt; b</code></p>\n\n<p>Is there anything I'm missing? The code above by the way works like it should.</p>\n"}, {"tags": ["haskell", "recursion"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1500445778, "post_id": 45181538, "comment_id": 77332975, "body": "Well, you&#39;ll simply have to pass along the original list!"}, {"owner": {"reputation": 1278, "user_id": 1374078, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/a96abe3865e9d233197150b1ae83743a?s=128&d=identicon&r=PG", "display_name": "phoxd", "link": "https://stackoverflow.com/users/1374078/phoxd"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1500447194, "post_id": 45181538, "comment_id": 77333881, "body": "I am new to Haskell. Could you explain what do you mean?"}, {"owner": {"reputation": 1545, "user_id": 2670439, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/wFcPA.jpg?s=128&g=1", "display_name": "SwiftsNamesake", "link": "https://stackoverflow.com/users/2670439/swiftsnamesake"}, "edited": false, "score": 0, "creation_date": 1500449691, "post_id": 45181538, "comment_id": 77335557, "body": "You want to subtract the average of the <i>original list</i> from each value in the original list? If so, all you need is <code>map (subtract $ average xs) xs</code>."}, {"owner": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "reply_to_user": {"reputation": 1545, "user_id": 2670439, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/wFcPA.jpg?s=128&g=1", "display_name": "SwiftsNamesake", "link": "https://stackoverflow.com/users/2670439/swiftsnamesake"}, "edited": false, "score": 1, "creation_date": 1500450167, "post_id": 45181538, "comment_id": 77335876, "body": "@SwiftsNamesake: Why not make an answer from your comment?"}], "answers": [{"comments": [{"owner": {"reputation": 7323, "user_id": 343957, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/FAVPm.jpg?s=128&g=1", "display_name": "mathk", "link": "https://stackoverflow.com/users/343957/mathk"}, "edited": false, "score": 0, "creation_date": 1500460827, "post_id": 45184128, "comment_id": 77343285, "body": "Are even more dry way of doing it : <code>subtract . average &gt;&gt;= map</code>.  To be used only if you understand <code>Monad ((-&gt;) r)</code>"}, {"owner": {"reputation": 1545, "user_id": 2670439, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/wFcPA.jpg?s=128&g=1", "display_name": "SwiftsNamesake", "link": "https://stackoverflow.com/users/2670439/swiftsnamesake"}, "reply_to_user": {"reputation": 7323, "user_id": 343957, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/FAVPm.jpg?s=128&g=1", "display_name": "mathk", "link": "https://stackoverflow.com/users/343957/mathk"}, "edited": false, "score": 0, "creation_date": 1500461886, "post_id": 45184128, "comment_id": 77344053, "body": "Shorter, but hardly any clearer. This isn&#39;t code golf."}, {"owner": {"reputation": 7323, "user_id": 343957, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/FAVPm.jpg?s=128&g=1", "display_name": "mathk", "link": "https://stackoverflow.com/users/343957/mathk"}, "edited": false, "score": 0, "creation_date": 1500468418, "post_id": 45184128, "comment_id": 77349125, "body": "I do not claim that this is better, reason why I haven&#39;t put it as a proper answer. This is an alternative if you do not like to name arguments."}, {"owner": {"reputation": 1545, "user_id": 2670439, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/wFcPA.jpg?s=128&g=1", "display_name": "SwiftsNamesake", "link": "https://stackoverflow.com/users/2670439/swiftsnamesake"}, "reply_to_user": {"reputation": 7323, "user_id": 343957, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/FAVPm.jpg?s=128&g=1", "display_name": "mathk", "link": "https://stackoverflow.com/users/343957/mathk"}, "edited": false, "score": 0, "creation_date": 1500468660, "post_id": 45184128, "comment_id": 77349350, "body": "@mathk Fair enough."}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "reply_to_user": {"reputation": 7323, "user_id": 343957, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/FAVPm.jpg?s=128&g=1", "display_name": "mathk", "link": "https://stackoverflow.com/users/343957/mathk"}, "edited": false, "score": 0, "creation_date": 1500469817, "post_id": 45184128, "comment_id": 77350366, "body": "@mathk: For this pattern of <code>\\ x -&gt; f (g x) x</code> in point-free code, I tend to prefer <code>&lt;*&gt;</code>, e.g., <code>ffor &lt;*&gt; subtract . average</code> (\u201cfor each element, subtract the average\u201d) where <code>ffor = flip fmap</code>. Here it\u2019s not really worthwhile, though."}], "tags": [], "owner": {"reputation": 1545, "user_id": 2670439, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/wFcPA.jpg?s=128&g=1", "display_name": "SwiftsNamesake", "link": "https://stackoverflow.com/users/2670439/swiftsnamesake"}, "is_accepted": false, "score": 6, "last_activity_date": 1500450448, "creation_date": 1500450448, "answer_id": 45184128, "question_id": 45181538, "link": "https://stackoverflow.com/questions/45181538/keep-variable-constant-during-recursion-in-haskell/45184128#45184128", "title": "Keep variable constant during recursion in Haskell", "body": "<p>Do you want to subtract the average of the original list from each value in the original list? If so, all you need is <code>map (subtract $ average xs) xs</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 1278, "user_id": 1374078, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/a96abe3865e9d233197150b1ae83743a?s=128&d=identicon&r=PG", "display_name": "phoxd", "link": "https://stackoverflow.com/users/1374078/phoxd"}, "edited": false, "score": 1, "creation_date": 1500499914, "post_id": 45192054, "comment_id": 77369963, "body": "I liked your detailed answer. Thanks!"}], "tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": true, "score": 3, "last_activity_date": 1500470790, "creation_date": 1500470790, "answer_id": 45192054, "question_id": 45181538, "link": "https://stackoverflow.com/questions/45181538/keep-variable-constant-during-recursion-in-haskell/45192054#45192054", "title": "Keep variable constant during recursion in Haskell", "body": "<p>In real code I would go with something like <code>map (subtract (ave' xs)) xs</code> as @SwiftsNamesake answered, or <code>[x - m | let m = ave' xs, x &lt;- xs]</code> using list comprehensions.</p>\n\n<p>However, if you want to write this out by hand to understand it better, then the approach would be to calculate the average once, then call a helper function that does the recursion. For example:</p>\n\n<pre><code>std_series xs = go xs\n  where\n    m = ave' xs\n    go [] = []\n    go (y:ys) = y - m : go ys\n</code></pre>\n\n<p>This is also related to a useful technique called the <em>worker\u2013wrapper transform</em>, where you have an outer \u201cwrapper\u201d function which sets up a closure containing some fixed parameters, and an inner \u201cworker\u201d function that handles the recursion. For instance, since this is basically <code>map</code> but manually inlined, you can look at doing the same transformation for an implementation of <code>map</code>:</p>\n\n<pre><code>map f [] = []\nmap f (x:xs) = f x : map f xs\n</code></pre>\n\n<p>Here, we pass <code>f</code> to each recursive call of <code>map</code>, but we don\u2019t need to do that because it\u2019s fixed, so we can add a helper function that only operates on the list, keeping <code>f</code> in its closure:</p>\n\n<pre><code>map f = go\n  where\n    go [] = []\n    go (x:xs) = f x : go xs\n</code></pre>\n\n<p>If you want to write type signatures for these local functions, sometimes you\u2019ll need to enable the <code>ScopedTypeVariables</code> extension:</p>\n\n<pre><code>std_series :: forall a. (Fractional a) =&gt; [a] -&gt; [a]\nstd_series xs = go xs\n  where\n\n    m :: a\n    m = ave' xs\n\n    go :: [a] -&gt; [a]\n    go [] = []\n    go (y:ys) = y - m : go ys\n</code></pre>\n\n<p>Here, <code>forall a.</code> defines the scope of <code>a</code> so that you can use it in the signatures of <code>m</code> and <code>go</code>. If you omitted it, Haskell would treat the <code>a</code> in the inner type signatures as <em>different</em> type variables than the outer <code>a</code> (which happens to have the same name), so it would give you an error like:</p>\n\n<pre><code>Couldn't match type \u2018a\u2019 with \u2018a1\u2019\n  \u2018a\u2019 is a rigid type variable bound by\n      the type signature for std_series \u2237 Fractional a \u21d2 [a] \u2192 [a]\n  \u2018a1\u2019 is a rigid type variable bound by\n       the type signature for m \u2237 a1\n</code></pre>\n"}], "owner": {"reputation": 1278, "user_id": 1374078, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/a96abe3865e9d233197150b1ae83743a?s=128&d=identicon&r=PG", "display_name": "phoxd", "link": "https://stackoverflow.com/users/1374078/phoxd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1034, "favorite_count": 0, "accepted_answer_id": 45192054, "answer_count": 2, "score": 1, "last_activity_date": 1500470790, "creation_date": 1500441523, "question_id": 45181538, "link": "https://stackoverflow.com/questions/45181538/keep-variable-constant-during-recursion-in-haskell", "title": "Keep variable constant during recursion in Haskell", "body": "<p>I am trying to subtract the average of the list from each instance of the list. But the average changes with each recursion. How to make it so that the average stays static? Here's what I tried:</p>\n\n<pre><code>ave' :: (Fractional a, Real b) =&gt; [b] -&gt; a\nave' xs = realToFrac (sum' xs) / (fromIntegral $ length xs)\n\nstd_series :: (Floating a, Real a) =&gt; [a] -&gt; [a]\nstd_series [] = []\nstd_series (x:xs) = x - ave' (x:xs) : std_series xs\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 148712, "user_id": 19750, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/13b41b2620da0b1e630715e0c91a0b03?s=128&d=identicon&r=PG", "display_name": "Josh Lee", "link": "https://stackoverflow.com/users/19750/josh-lee"}, "edited": false, "score": 10, "creation_date": 1500434271, "post_id": 45180179, "comment_id": 77329003, "body": "<a href=\"https://en.wikipedia.org/wiki/0%5E0\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/0%5E0</a> gives a variety of reasons for it to be 0 or 1 in various contexts both mathematical and computational."}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 1, "creation_date": 1500434394, "post_id": 45180179, "comment_id": 77329035, "body": "As others have said, there are several mathematical reasons for choosing either 0 or 1 (<a href=\"https://math.stackexchange.com/a/11155\">explanation from mathSE</a>). Beyond that, <a href=\"https://hackage.haskell.org/package/base-4.9.1.0/docs/src/GHC.Real.html#%5E\" rel=\"nofollow noreferrer\">this</a> is the source code for <code>^</code>."}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 1, "creation_date": 1500508116, "post_id": 45180179, "comment_id": 77372657, "body": "There is a pleasant interpretation of <code>0^0</code> in the algebra of types, much like the one in set theory: <code>0^0</code> can also be written <code>Void -&gt; Void</code> and it has one inhabitant, the empty function <code>id :: Void -&gt; Void</code>. The categorical interpretation of <code>0^0</code> is also that it must have one inhabitant: in the category sets and functions, every object has an identity morphism, including the empty set."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1500578114, "post_id": 45180179, "comment_id": 77413005, "body": "It turns out to be a lot more convenient for number theory, aside from anything else."}, {"owner": {"reputation": 9601, "user_id": 1937197, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/cg7w6.jpg?s=128&g=1", "display_name": "bobcat", "link": "https://stackoverflow.com/users/1937197/bobcat"}, "edited": false, "score": 1, "creation_date": 1500622761, "post_id": 45180179, "comment_id": 77429141, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/19955968/why-is-math-pow0-0-1\">Why is Math.pow(0, 0) === 1?</a>"}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user707650"}, "edited": false, "score": 7, "creation_date": 1500433444, "post_id": 45180233, "comment_id": 77328808, "body": "The counter argument to that is that 0 to any power is 0."}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 3, "creation_date": 1500434420, "post_id": 45180233, "comment_id": 77329045, "body": "0 is not positive. It is non-negative. See <a href=\"https://math.stackexchange.com/a/11155\">this</a> for an excellent analysis."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1500449143, "post_id": 45180233, "comment_id": 77335138, "body": "Alec is right, however I somewhat agree with this answer: since in the discrete case (set/type exponentiation) 0\u2070 = 1 is clearly the sensible choice, whereas analysis simply can&#39;t say anything about it via limits because the function is discontinuous in the vicinity of (0,0) anyway, there&#39;s no good reason to not always adapt the 0^0 = 1 convention, as indeed IEEE754 has also done for \u201creal\u201d numbers."}], "tags": [], "owner": {"reputation": 17, "user_id": 8328803, "user_type": "unregistered", "profile_image": "https://www.gravatar.com/avatar/88e09472da49c2bbda6345c7326941dc?s=128&d=identicon&r=PG", "display_name": "boost", "link": "https://stackoverflow.com/users/8328803/boost"}, "is_accepted": false, "score": 0, "last_activity_date": 1500433293, "creation_date": 1500433293, "answer_id": 45180233, "question_id": 45180179, "link": "https://stackoverflow.com/questions/45180179/why-in-haskell-00-1/45180233#45180233", "title": "Why in Haskell 0^0 == 1?", "body": "<p>This is simply a law of mathematics. Any positive number raised to the 0 power is equal to 1. There should be no error</p>\n"}, {"tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": true, "score": 9, "last_activity_date": 1500446257, "last_edit_date": 1500446257, "creation_date": 1500435844, "answer_id": 45180600, "question_id": 45180179, "link": "https://stackoverflow.com/questions/45180179/why-in-haskell-00-1/45180600#45180600", "title": "Why in Haskell 0^0 == 1?", "body": "<p>It makes a bit of sense when you look at the signatures.</p>\n\n<pre><code>(^) :: (Num a, Integral b) =&gt; a -&gt; b -&gt; a\n</code></pre>\n\n<p>This one is designed to work for nonnegative integer exponents. It's likely implemented recursively, so it behaves like repeated multiplication. Thus, it makes sense that \"anything to the zero power is one\" is the rule that takes precedent, since we're really talking about repeated multiplication.</p>\n\n<pre><code>(^^) :: (Fractional a, Integral b) =&gt; a -&gt; b -&gt; a\n</code></pre>\n\n<p>This one is a lot like the previous one, except that it works on negative exponents too, since its base is fractional. Still, it behaves like repeated multiplication or repeated division (if the exponent is positive or negative, respectively), so again, it makes sense that repeating either of those operations zero times should result in <code>1</code>, the multiplicative identity.</p>\n\n<pre><code>(**) :: Floating a =&gt; a -&gt; a -&gt; a\n</code></pre>\n\n<p>In Haskell, the floating point types generally conform to the IEEE standard, and IEEE specifically defines <code>pow(0.0, 0.0)</code> as <code>1.0</code>. So Haskell, I imagine, is simply conforming to a standard so that it behaves consistently with other languages in this case.</p>\n"}, {"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1500465000, "post_id": 45189616, "comment_id": 77346320, "body": "This is an interesting remark, but without reference seems very speculative. I rather doubt that this was the primary motivation for that particular choice."}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1500465194, "post_id": 45189616, "comment_id": 77346470, "body": "@leftaroundabout Sure, I don&#39;t want to say this was primary motivation :) Moreover, I think it wasn&#39;t. But I still find it beautiful how different models consistent with each other."}], "tags": [], "owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "is_accepted": false, "score": 0, "last_activity_date": 1500464821, "creation_date": 1500464821, "answer_id": 45189616, "question_id": 45180179, "link": "https://stackoverflow.com/questions/45180179/why-in-haskell-00-1/45189616#45189616", "title": "Why in Haskell 0^0 == 1?", "body": "<p>Haskell is functional programming language. Functional languages use <em>\u03bb-calculus</em> in their basis. Number literals are encoded using Church encoding in \u03bb-calculus. So if you encode <code>0^0</code> by Church and then normalize \u03bb-term using \u03b2-reductions you will get <code>1</code> like this:</p>\n\n<pre><code>0^0 = (\u03bbn.\u03bbm.\u03bbs.\u03bbz.m n s z) (\u03bbs.\u03bbz.z) (\u03bbs.\u03bbz.z) = \u03bbs.\u03bbz.s z = 1\n</code></pre>\n\n<p>I think this should explain why Haskell decided to follow chosen model.</p>\n"}, {"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1500582508, "post_id": 45222888, "comment_id": 77415482, "body": "As already commented elsewhere... Yes, <i>it does make sense</i> to define it this way. However, Mathematicians generally do <b>not</b> do this, because there is another conflicting and (very-)arguably just as plausible definition of 0\u2070 = 0. (It is only plausible at all in the continuous case, i.e. it would actually be conceivable to have <code>0^0 = 1</code> but <code>0**0 = 0</code>... fortunately IEEE754 does not demand anything like that.)"}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1500587137, "post_id": 45222888, "comment_id": 77417704, "body": "I\u2019ve always seen 0\u2070 defined as 1 (Donald E. Knuth argued for this at length, and gives that definition in <i>The Art of Computer Programming</i>, for example), with a minority of mathematicians arguing that it should be unspecified. The situations in which it would make sense not to define it (such as a pseudo-ring which has a <b>0</b> but not a <b>1</b>) are rarely adjacent to computer programming. Wikipedia claims that Cauchy was in the undefined camp in 1821."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1500590864, "post_id": 45222888, "comment_id": 77419002, "body": "A pseudo-ring with no 1? Very exotic. No, what I mean is just the issue of <code>^ : \u211d&#215;\u211d \u2192 \u2102</code> being discontinuous at <code>(0,0)</code> (which, to non-discrete mathematicians, already reads a bit like: <i>we should better always keep clear of that spot</i>), but being continuous along certain paths, each with a completely different limit. \u2014 Once again: <i>I agree</i>, this shouldn&#39;t matter to us seeing as, if we just leave analysis/topology aside, 0\u2070 = 1 is already perfectly evident. My point was just that this sentiment is not so widespread outside of computer science, as I, being a physicist, regularly experience."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1500593909, "post_id": 45222888, "comment_id": 77419863, "body": "Those are valid points. Computer scientists use discrete math, as you know, except when we\u2019re finding a numeric approximation. In that case, the most efficient implementation is going to use the FPU instruction, which will follow the IEEE definition that pow(0.0, 0.0) = 1.0. So, there are contexts where we should remember that 0\u2070 = 1 is arbitrary, but the implementation in Haskell will be simpler if we follow the convention. Besides, the designers were academic computer scientists."}], "tags": [], "owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "is_accepted": false, "score": 2, "last_activity_date": 1500595228, "last_edit_date": 1500595228, "creation_date": 1500576290, "answer_id": 45222888, "question_id": 45180179, "link": "https://stackoverflow.com/questions/45180179/why-in-haskell-00-1/45222888#45222888", "title": "Why in Haskell 0^0 == 1?", "body": "<p>Haskell does it that way because mathematics defines it that way.  Math does it that way because 0\u2070 = 1\u00b70\u2070, which is 1 multiplied by something else zero times, which is 1 <em>not multiplied by anything</em>.  Mathematicians figure it makes more sense to stick to the rule that anything to the zeroth power is 1 (the nullary product) than the rule that zero to any power is zero.</p>\n\n<p>This makes a lot of sense when you try to define exponents in terms of multiplications and divisions. For example, if you were trying to define <code>^</code> in Haskell, you might come up with:</p>\n\n<pre><code>(^) a b = product $ replicate b a\n</code></pre>\n\n<p>This is equivalent to:</p>\n\n<pre><code>(^) a b = foldr (*) 1 (replicate b a)\n</code></pre>\n\n<p>A list containing zero numbers is empty.  The product of an empty list is 1, or else a lot of things would break, like <code>product (xs++[])</code> not being equal to <code>(product xs) * (product [])</code>.</p>\n\n<p>Or if you wrote the simplest possible recursive solution:</p>\n\n<pre><code>(^) _ 0 = 1\n(^) a b = a*(a^(b-1))\n</code></pre>\n\n<p>You would then need a special case in addition to the base and recursive cases to define 0\u2070 as anthing other than 1.</p>\n\n<h3>PS</h3>\n\n<p>As @leftroundabout points out, my answer assumes we\u2019re using discrete math. Computer scientists almost always are, and Haskell was designed by academic computer scientists.</p>\n\n<p>If we are working with continuous functions on a computer, we\u2019re necessarily doing numeric approximations.  In that case, the most efficient implementation will be the one that uses the FPU of the machine we\u2019re running on.  In 2017, that will follow the IEEE standard, which says that pow( 0.0, 0.0 ) = 1.0.</p>\n\n<p>It\u2019s just slightly simpler to write and prove statements about an exponent function that follows the convention.</p>\n"}], "owner": {"reputation": 89, "user_id": 6901918, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e5e3f88b053413cffa8bbfe93dae62cf?s=128&d=identicon&r=PG&f=1", "display_name": "Santi Dandois", "link": "https://stackoverflow.com/users/6901918/santi-dandois"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 415, "favorite_count": 0, "accepted_answer_id": 45180600, "answer_count": 4, "score": 2, "last_activity_date": 1500660338, "creation_date": 1500432970, "last_edit_date": 1500660338, "question_id": 45180179, "link": "https://stackoverflow.com/questions/45180179/why-in-haskell-00-1", "title": "Why in Haskell 0^0 == 1?", "body": "<p>Why in Haskell 0^0 == 1 ? Why not 0^0 == 0? Or maybe should raise some error...</p>\n\n<pre><code>*Main&gt; 0^0\n1\n*Main&gt; 0**0\n1.0\n</code></pre>\n\n<p>Thanks on advance</p>\n\n<blockquote>\n  <p>GHCi, version 7.10.3</p>\n</blockquote>\n"}, {"tags": ["haskell", "ghc"], "comments": [{"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1500479970, "post_id": 45178189, "comment_id": 77358643, "body": "Possibly related to <a href=\"https://ghc.haskell.org/trac/ghc/ticket/13873\" rel=\"nofollow noreferrer\">ghc.haskell.org/trac/ghc/ticket/13873</a> . It might be worth commenting there if you think your issue is related."}], "owner": {"reputation": 1067, "user_id": 534551, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/f51cdd159b6d9cce420ffea02d445fde?s=128&d=identicon&r=PG", "display_name": "Gregory", "link": "https://stackoverflow.com/users/534551/gregory"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 96, "favorite_count": 2, "answer_count": 0, "score": 10, "last_activity_date": 1500417184, "creation_date": 1500417184, "question_id": 45178189, "link": "https://stackoverflow.com/questions/45178189/ghc-prefer-one-specialization-over-another", "title": "GHC Prefer one specialization over another", "body": "<p>I have a Haskell typeclass function that looks like the following:</p>\n\n<pre><code>class Foo m where\n   foo :: Num a =&gt; m a -&gt; a\n</code></pre>\n\n<p>I want to generate two specializations of <code>foo</code>, one for anytime that <code>m ~ X Int</code> and the other when <code>m ~ X Int, a ~ Int</code>. I wrote the following code for this:</p>\n\n<pre><code>instance Foo (X a) where\n   {-# SPECIALIZE instance Foo (X Int) #-}\n   foo = ...\n   {-# SPECIALIZE foo :: X Int Int -&gt; Int #-}\n</code></pre>\n\n<p>From what I can tell, in the file that contains this code I am getting both specializations. However, in the module that is using <code>Foo</code> it seems to always point to the <em>less generic</em> specialization, i.e. <code>foo :: Num a =&gt; X Int a -&gt; a</code> even when <code>a ~ Int</code>.</p>\n\n<p>Is there a way to tell GHC to prefer the most specialized version of <code>foo</code> rather than the partially specialized version?</p>\n\n<p>Thanks.</p>\n"}, {"tags": ["haskell", "functor"], "answers": [{"tags": [], "owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "is_accepted": true, "score": 1, "last_activity_date": 1500418789, "creation_date": 1500418789, "answer_id": 45178428, "question_id": 45178068, "link": "https://stackoverflow.com/questions/45178068/fmap-over-variable-argument-function/45178428#45178428", "title": "fmap over variable argument function", "body": "<p>I think non-template solutions are not possible without additional class constraints. There is a simple and presumably efficient implementation with overlapping instances:</p>\n\n<pre><code>class VarArg a b c d where\n  mapVarArg :: (a -&gt; b) -&gt; c -&gt; d\n\ninstance (a ~ c, b ~ d) =&gt; VarArg a b c d where\n  mapVarArg = id\n\ninstance {-# overlapping #-} (VarArg a b c2 d2, c1 ~ d1) =&gt;\n  VarArg a b (c1 -&gt; c2) (d1 -&gt; d2) where\n  mapVarArg f g = mapVarArg f . g\n</code></pre>\n\n<p>If you replace <code>overlapping</code> with <code>incoherent</code>, it also generally works with polymorphic/constrained functions as arguments:</p>\n\n<pre><code>&gt; mapVarArg (+100) (+) 0 0\n100\n</code></pre>\n\n<p>However, with the <code>incoherent</code> instance, partially applied <code>mapVarArg</code>-s tend to have unusable inferred types.</p>\n\n<pre><code>&gt; let foo = mapVarArg (+100) (+)\n&gt; :t foo\nfoo :: (Num (a -&gt; a -&gt; a), Num a) =&gt; a -&gt; a -&gt; a\n</code></pre>\n"}], "owner": {"reputation": 629, "user_id": 1972140, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e158b90fcb9e9c31beb3d76c6d215a9a?s=128&d=identicon&r=PG", "display_name": "P&#233;ter Divi&#225;nszky", "link": "https://stackoverflow.com/users/1972140/p%c3%a9ter-divi%c3%a1nszky"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 96, "favorite_count": 0, "accepted_answer_id": 45178428, "answer_count": 1, "score": 1, "last_activity_date": 1500418789, "creation_date": 1500416441, "last_edit_date": 1500417435, "question_id": 45178068, "link": "https://stackoverflow.com/questions/45178068/fmap-over-variable-argument-function", "title": "fmap over variable argument function", "body": "<p>I would like to define <code>fmap</code> on variable argument functions:</p>\n\n<pre><code>type family VarArg (args :: [*]) e where\n  VarArg '[] e = e\n  VarArg (a ': as) e = a -&gt; VarArg as e\n\nmapVarArg :: forall args e e'\n           . (e -&gt; e') -&gt; VarArg args e -&gt; VarArg args e'\nmapVarArg f = _\n</code></pre>\n\n<p>This is the closest solution I have found:</p>\n\n<pre><code>mapVarArg :: forall args e e' . VarArgIso args\n          =&gt; (e -&gt; e') -&gt; VarArg args e -&gt; VarArg args e'\nmapVarArg f = (^. Lens.from varArgIso) . fmap f . (^. varArgIso @args)\n\ndata VarArgD (args :: [*]) e where\n  DNil  :: e -&gt; VarArgD '[] e\n  DCons :: (a -&gt; VarArgD as e) -&gt; VarArgD (a ': as) e\n\nclass VarArgIso (args :: [*]) where\n  varArgIso :: Iso' (VarArg args e) (VarArgD args e)\n\ninstance VarArgIso '[] where\n  varArgIso = iso DNil (\\(DNil x) -&gt; x)\n\ninstance VarArgIso as =&gt; VarArgIso (a ': as) where\n  varArgIso = iso (\\f -&gt; DCons ((^. varArgIso) . f)) (\\(DCons f) -&gt; ((^. Lens.from varArgIso) . f))\n\ninstance Functor (VarArgD args) where\n  fmap f (DNil a)  = DNil (f a)\n  fmap f (DCons g) = DCons (fmap f . g)\n</code></pre>\n\n<p>Is there a simpler solution, or any solution without an additional <code>VarArgIso</code> constraint?</p>\n"}, {"tags": ["sql", "haskell"], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1500416827, "post_id": 45178120, "comment_id": 77324752, "body": "(Note: untested. I just referred to the docs, I didn&#39;t install the package and actually check that this works.)"}, {"owner": {"reputation": 653, "user_id": 1589512, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/99c377c5d122f33e6d79298fce14a627?s=128&d=identicon&r=PG", "display_name": "mandark", "link": "https://stackoverflow.com/users/1589512/mandark"}, "edited": false, "score": 0, "creation_date": 1500417402, "post_id": 45178120, "comment_id": 77324921, "body": "After seeing your response, I realized that I could&#39;ve used <code>mappend</code> as the source also shows it. The operator can also be used if <code>Data.Monoid</code> is imported. Also, your comment about overloaded strings is correct. I should&#39;ve clarified that in the question but your answer explains what I wanted to find out. Thanks a lot!"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 653, "user_id": 1589512, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/99c377c5d122f33e6d79298fce14a627?s=128&d=identicon&r=PG", "display_name": "mandark", "link": "https://stackoverflow.com/users/1589512/mandark"}, "edited": false, "score": 0, "creation_date": 1500418789, "post_id": 45178120, "comment_id": 77325314, "body": "@mandark Yes, <code>mappend</code> and <code>(&lt;&gt;)</code> are synonyms, given the right imports."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 5, "last_activity_date": 1500417066, "last_edit_date": 1500417066, "creation_date": 1500416734, "answer_id": 45178120, "question_id": 45178062, "link": "https://stackoverflow.com/questions/45178062/how-to-restrict-the-caller-of-the-function-from-passing-concatenated-strings-in/45178120#45178120", "title": "How to restrict the caller of the function from passing concatenated strings in Haskell?", "body": "<p>Actually, it does allow concatenated strings as queries. You just need to use a concatenation operator that operates on queries:</p>\n\n<pre><code>myQuery :: Query\nmyQuery = \"SELECT id, name FROM users LIMIT 1\" &lt;&gt; \"\"\n</code></pre>\n\n<p>The <code>(++)</code> operator is specific to lists, whereas <code>(&lt;&gt;)</code> works with any <code>Monoid</code> (and <code>Query</code> is an instance of <code>Monoid</code> but is not a list type).</p>\n\n<p>And to answer your other question: a <code>String</code> can never be used as a <code>Query</code>. I suspect the belief that it can came from the <code>OverloadedStrings</code> extension, which lets you write string <em>literals</em> and have them be interpreted as types other than <code>String</code> by implicitly applying <code>fromString</code> to them. So, e.g.</p>\n\n<pre><code>foo = \"foo\"\n</code></pre>\n\n<p>would actually be short for <code>foo = fromString \"foo\"</code>. So imagine working without the extension, and you can see the difference between these two:</p>\n\n<pre><code>foo1 = fromString \"bar\" ++ fromString \"baz\"\nfoo2 = fromString (\"bar\" ++ \"baz\")\n</code></pre>\n\n<p>The former corresponds to what you wrote; the latter corresponds to what you meant.</p>\n"}], "owner": {"reputation": 653, "user_id": 1589512, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/99c377c5d122f33e6d79298fce14a627?s=128&d=identicon&r=PG", "display_name": "mandark", "link": "https://stackoverflow.com/users/1589512/mandark"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 52, "favorite_count": 0, "accepted_answer_id": 45178120, "answer_count": 1, "score": 1, "last_activity_date": 1500549125, "creation_date": 1500416396, "last_edit_date": 1500549125, "question_id": 45178062, "link": "https://stackoverflow.com/questions/45178062/how-to-restrict-the-caller-of-the-function-from-passing-concatenated-strings-in", "title": "How to restrict the caller of the function from passing concatenated strings in Haskell?", "body": "<p>I am checking out a haskell client library for mysql called <a href=\"https://hackage.haskell.org/package/mysql-simple\" rel=\"nofollow noreferrer\">mysql-simple</a> by Bryan O'Sullivan. The library doesn't allow the user to use concatenated strings as queries.</p>\n\n<p>The following works fine: </p>\n\n<pre><code>myQuery :: Query\nmyQuery = \"SELECT id, name FROM users LIMIT 1\"\n</code></pre>\n\n<p>However, this fails:</p>\n\n<pre><code>myQuery :: Query\nmyQuery = \"SELECT id, name FROM users LIMIT 1\" ++ \"\"\n</code></pre>\n\n<p>This is the error that I get when running the following example:</p>\n\n<pre><code>do\n  rows &lt;- (query_ connection myQuery) :: IO [( Int , String)]\n...\n\n\n\u2022 Couldn't match expected type \u2018Query\u2019 with actual type \u2018[Char]\u2019\n\u2022 In the expression: \"SELECT id, name FROM users LIMIT 1\" ++ \"\"\n  In an equation for \u2018myQuery\u2019:\n      myQuery = \"SELECT id, name FROM users LIMIT 1\" ++ \"\"\n</code></pre>\n\n<p>My question is <strong>what makes this restriction possible?</strong></p>\n\n<p>I can see from the <a href=\"https://github.com/paul-rouse/mysql-simple/blob/master/Database/MySQL/Simple/Types.hs#L40\" rel=\"nofollow noreferrer\">source code</a> that this is intentional, but I am unable to understand the basic concept behind it. Is is because the <code>Query</code> type is not an instance of a typeclass that <code>String</code> is? Also, even if I concatenate the string, shouldn't the type checker infer that the resultant string can be used as a <code>Query</code>?</p>\n\n<p>Thanks in advance.</p>\n"}, {"tags": ["string", "list", "haskell", "list-comprehension"], "answers": [{"comments": [{"owner": {"reputation": 45741, "user_id": 744178, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a3193139ea494c45e63752504f5ff1f2?s=128&d=identicon&r=PG", "display_name": "jwodder", "link": "https://stackoverflow.com/users/744178/jwodder"}, "edited": false, "score": 0, "creation_date": 1500413873, "post_id": 45177530, "comment_id": 77323618, "body": "Or <code>[ x | x &lt;- string, x `elem` [&#39;A&#39;..&#39;Z&#39;]]</code> (probably what the OP was trying to write in the first place)"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 45741, "user_id": 744178, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a3193139ea494c45e63752504f5ff1f2?s=128&d=identicon&r=PG", "display_name": "jwodder", "link": "https://stackoverflow.com/users/744178/jwodder"}, "edited": false, "score": 0, "creation_date": 1500413920, "post_id": 45177530, "comment_id": 77323643, "body": "@jwodder: I was thinking exactly the same :)"}, {"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 0, "creation_date": 1500415984, "post_id": 45177530, "comment_id": 77324466, "body": "Are we sure that GHC wouldn&#39;t optimize <code>elem x [&#39;A&#39;..&#39;Z&#39;]</code> to <code>x &gt;= &#39;A&#39;, x &lt;= &#39;Z&#39;</code>..?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1500416425, "post_id": 45177530, "comment_id": 77324618, "body": "Well for floating points that law does not hold. For instance <code>elem 0.5 [0..9]</code> is <code>False</code> whereas <code>0.5 &gt;= 0 &amp;&amp; 0.5 &lt;= 9</code> holds. Furthermore some benchmarks suggest it does not."}, {"owner": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "reply_to_user": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 0, "creation_date": 1500416497, "post_id": 45177530, "comment_id": 77324643, "body": "@Redu you can check by ddump-simpl both versions and comparing them"}, {"owner": {"reputation": 480, "user_id": 8326972, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/2686a66637446afd24dc51e04dea7bd6?s=128&d=identicon&r=PG&f=1", "display_name": "Hobbamok", "link": "https://stackoverflow.com/users/8326972/hobbamok"}, "reply_to_user": {"reputation": 45741, "user_id": 744178, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a3193139ea494c45e63752504f5ff1f2?s=128&d=identicon&r=PG", "display_name": "jwodder", "link": "https://stackoverflow.com/users/744178/jwodder"}, "edited": false, "score": 0, "creation_date": 1500466699, "post_id": 45177530, "comment_id": 77347692, "body": "@jwodder yeah, the whole thing was just forgetting that elem isnt infix by default."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 6, "last_activity_date": 1500414206, "last_edit_date": 1500414206, "creation_date": 1500413832, "answer_id": 45177530, "question_id": 45177487, "link": "https://stackoverflow.com/questions/45177487/how-to-use-list-comprehension-as-a-condition-in-a-list-comprehension/45177530#45177530", "title": "How to use list comprehension as a condition in a list comprehension?", "body": "<p>The problem is <strong>not with the list comprehension</strong> itself. The problem is that <code>x elem ['A'..'Z']</code> does not make much sense.</p>\n\n<p><strong><a href=\"http://hackage.haskell.org/package/base-4.9.1.0/docs/Prelude.html#v:elem\" rel=\"nofollow noreferrer\"><code>elem :: Eq a =&gt; a -&gt; [a] -&gt; Bool</code></a> is a function</strong> that takes as input an element and a list and checks if the element belongs to the list.</p>\n\n<p>So you should write it like:</p>\n\n<pre><code>capsOnly = [ x | x &lt;- string, elem x ['A'..'Z']]\n</code></pre>\n\n<p>Or alternatively use backtics (to use <em>infix</em> notation):</p>\n\n<pre><code>capsOnly = [ x | x &lt;- string, x `elem` ['A'..'Z']]\n</code></pre>\n\n<p>This however is <em>not</em> very efficient: it requires <em>O(n)</em> to check membership. Since we check a range, it is more efficient to do bound checks, like:</p>\n\n<pre><code>capsOnly = [ x | x &lt;- string, x &gt;= 'A', x &lt;= 'Z']\n</code></pre>\n\n<p>This requires two comparisons that run in <em>O(1)</em> making it faster.</p>\n\n<p>What we do here is filtering. Usually it is better (more descriptive and declarative) to use <a href=\"http://hackage.haskell.org/package/base-4.9.1.0/docs/Prelude.html#v:filter\" rel=\"nofollow noreferrer\"><strong><code>filter :: (a -&gt; Bool) -&gt; [a] -&gt; [a]</code></strong></a> for this with <a href=\"http://hackage.haskell.org/package/base-4.9.1.0/docs/Data-Char.html#v:isAsciiUpper\" rel=\"nofollow noreferrer\"><code>isAsciiUpper :: Char -&gt; Bool</code></a> as predicate:</p>\n\n<pre><code>import Data.Char(isAsciiUpper)\n\ncapsOnly = filter isAsciiUpper string\n</code></pre>\n"}], "owner": {"reputation": 480, "user_id": 8326972, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/2686a66637446afd24dc51e04dea7bd6?s=128&d=identicon&r=PG&f=1", "display_name": "Hobbamok", "link": "https://stackoverflow.com/users/8326972/hobbamok"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 581, "favorite_count": 0, "accepted_answer_id": 45177530, "answer_count": 1, "score": 1, "last_activity_date": 1500457300, "creation_date": 1500413641, "last_edit_date": 1500457300, "question_id": 45177487, "link": "https://stackoverflow.com/questions/45177487/how-to-use-list-comprehension-as-a-condition-in-a-list-comprehension", "title": "How to use list comprehension as a condition in a list comprehension?", "body": "<p>I want to get only the capital letters from a string, and had the idea to see if each letter in the string is contained in a list of all capital letters:</p>\n\n<pre><code>capsOnly = [ x| x&lt;- string, (x elem ['A'..'Z'])]\n</code></pre>\n\n<p>the problem is that apparently Haskell does not recognize that the part behind the comma is supposed to be a condition for x, and gives me this:</p>\n\n<pre><code>* Couldn't match expected type `(a0 -&gt; t0 a0 -&gt; Bool)\n                                -&gt; [Char] -&gt; Bool'\n              with actual type `Char'\n* The function `x' is applied to two arguments,\n  but its type `Char' has none\n  In the expression: (x elem ['A' .. 'Z'])\n  In a stmt of a list comprehension: (x elem ['A' .. 'Z'])\n</code></pre>\n\n<p>So how do I define what is the Argument and what is the List where x comes from?\nOr is that not possible?</p>\n\n<p>I know that you can also do it like:</p>\n\n<pre><code>onlyCaps = [ x| x&lt;- string, x &lt; 'a']\n</code></pre>\n\n<p>but I really want to know if my first approach is possible, and how to write it if it is</p>\n"}, {"tags": ["haskell", "readfile", "ghci"], "answers": [{"comments": [{"owner": {"reputation": 49, "user_id": 5514480, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-bVPT0WDjKas/AAAAAAAAAAI/AAAAAAAAAIg/Jf_7zhPxmnQ/photo.jpg?sz=128", "display_name": "Luqman Malik", "link": "https://stackoverflow.com/users/5514480/luqman-malik"}, "edited": false, "score": 0, "creation_date": 1500413894, "post_id": 45177498, "comment_id": 77323630, "body": "Perfect! Thanks @goteguru"}, {"owner": {"reputation": 49, "user_id": 5514480, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-bVPT0WDjKas/AAAAAAAAAAI/AAAAAAAAAIg/Jf_7zhPxmnQ/photo.jpg?sz=128", "display_name": "Luqman Malik", "link": "https://stackoverflow.com/users/5514480/luqman-malik"}, "edited": false, "score": 0, "creation_date": 1500415345, "post_id": 45177498, "comment_id": 77324234, "body": "To complete the procedure, I would like to then apply -sort- and -mapM_ putStrLn- to stack the words alphabetically. Outside the IO monad I can seamlessly compose or nest these functions to accomplish this \u2013 any idea if this can be written inside the IO monad?"}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 49, "user_id": 5514480, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-bVPT0WDjKas/AAAAAAAAAAI/AAAAAAAAAIg/Jf_7zhPxmnQ/photo.jpg?sz=128", "display_name": "Luqman Malik", "link": "https://stackoverflow.com/users/5514480/luqman-malik"}, "edited": false, "score": 1, "creation_date": 1500426249, "post_id": 45177498, "comment_id": 77327205, "body": "@LuqmanMalik <code>fmap (mapM_ putStrLn . sort . words) $ readFile &quot;filename.txt&quot;</code>. The <code>fmap</code> raises a function that works on ordinary data into one that works on data wrapped inside a monad. You could also bind with <code>readFile &quot;filename.txt&quot; &gt;&gt;= (mapM_ putStrLn . sort . words)</code> or use <code>do</code> notation."}, {"owner": {"reputation": 49, "user_id": 5514480, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-bVPT0WDjKas/AAAAAAAAAAI/AAAAAAAAAIg/Jf_7zhPxmnQ/photo.jpg?sz=128", "display_name": "Luqman Malik", "link": "https://stackoverflow.com/users/5514480/luqman-malik"}, "reply_to_user": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 0, "creation_date": 1500428701, "post_id": 45177498, "comment_id": 77327806, "body": "@Davislor thanks for your notes \u2013 I had just returned to terminal and made some progress with <code>fmap sort $ fmap words $ readFile &quot;wordlist.txt&quot;</code>. Now, your first line only jumped to prompt on next line without printing anything to screen, but the second one worked like a charm..."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "reply_to_user": {"reputation": 49, "user_id": 5514480, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-bVPT0WDjKas/AAAAAAAAAAI/AAAAAAAAAIg/Jf_7zhPxmnQ/photo.jpg?sz=128", "display_name": "Luqman Malik", "link": "https://stackoverflow.com/users/5514480/luqman-malik"}, "edited": false, "score": 1, "creation_date": 1500434982, "post_id": 45177498, "comment_id": 77329193, "body": "@LuqmanMalik That\u2019s because I goofed on the first one. Applying <code>mapM_ putStrLn</code> inside <code>fmap</code> gets you an <code>IO</code> object wrapped inside another <code>IO</code> object. You need to bind the input operation to the output operation instead. That works on the data inside and gives you another <code>IO</code> object as the result. Sorry."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 1, "creation_date": 1500439631, "post_id": 45177498, "comment_id": 77330393, "body": "One other thing that works, and might be clearer, is to <code>fmap (map putStrLn)</code> to get a list of <code>IO</code> objects that depends on an earlier <code>IO</code> operation, then  bind with <code>&gt;&gt;= sequence_</code> to execute them."}, {"owner": {"reputation": 382, "user_id": 2726855, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/846041e713129fc0ad740c66553871fc?s=128&d=identicon&r=PG", "display_name": "goteguru", "link": "https://stackoverflow.com/users/2726855/goteguru"}, "reply_to_user": {"reputation": 49, "user_id": 5514480, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-bVPT0WDjKas/AAAAAAAAAAI/AAAAAAAAAIg/Jf_7zhPxmnQ/photo.jpg?sz=128", "display_name": "Luqman Malik", "link": "https://stackoverflow.com/users/5514480/luqman-malik"}, "edited": false, "score": 1, "creation_date": 1500449465, "post_id": 45177498, "comment_id": 77335391, "body": "@LuqmanMalik If you want to chain your functions like that you might be interested in import Control.Applicative which gives you &lt;$&gt;.  <code>sort &lt;$&gt; words &lt;$&gt; readFile &quot;filename.txt&quot;</code> might be clearer. (IO is also instance of Applicative not just Monad)"}], "tags": [], "owner": {"reputation": 382, "user_id": 2726855, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/846041e713129fc0ad740c66553871fc?s=128&d=identicon&r=PG", "display_name": "goteguru", "link": "https://stackoverflow.com/users/2726855/goteguru"}, "is_accepted": false, "score": 2, "last_activity_date": 1500486958, "last_edit_date": 1500486958, "creation_date": 1500413706, "answer_id": 45177498, "question_id": 45177350, "link": "https://stackoverflow.com/questions/45177350/how-do-i-pipe-the-output-string-produced-by-readfile-filename-txt-to-haskells/45177498#45177498", "title": "How do I pipe the output string produced by readFile &quot;filename.txt&quot; to Haskell&#39;s words function as an argument?", "body": "<p>You can execute your pure function (words) \"inside\" the IO monad returned by readFile. </p>\n\n<pre><code>readFile :: FilePath -&gt; IO String\n</code></pre>\n\n<p>and</p>\n\n<pre><code>words :: String -&gt; [String]\n</code></pre>\n\n<p>so you can simply do</p>\n\n<pre><code>fmap words $ readFile \"filename.txt\" \n</code></pre>\n\n<p>which has the type IO [String]. If you do this in ghci (which is itself \"inside\" of an IO monad) you will get the word list displayed. </p>\n\n<p>EDIT:</p>\n\n<p>If you want to apply multiple transformations you may want to cleanly separate the pure part (based on @Davislor's solution from comments):</p>\n\n<pre><code>readFile \"filename.txt\" &gt;&gt;= (return . sort . words) &gt;&gt;= mapM_ putStrLn\n</code></pre>\n\n<p>The <code>return</code> here just lift to IO, you could simply replace <code>return</code> with <code>mapM_ putStrLn</code> instead (sorter, but less clean distinction). </p>\n\n<p>Another solutions may be applicative style:</p>\n\n<pre><code>sort &lt;$&gt; words &lt;$&gt; readFile \"filename.txt\"  &gt;&gt;= mapM_ putStrLn\n</code></pre>\n\n<p>or using do notation (imperative style):</p>\n\n<pre><code>do ; f &lt;- readFile  \"filename.txt\"; let out = sort (words f) in  mapM_ putStrLn out\n</code></pre>\n\n<p>(which is ugly because I used <code>;</code> instead of newline) or simply (less imperatively :) :</p>\n\n<pre><code>do ; f &lt;- readFile \"filename.txt\";  mapM_ putStrLn $ sort $ words f\n</code></pre>\n"}], "owner": {"reputation": 49, "user_id": 5514480, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-bVPT0WDjKas/AAAAAAAAAAI/AAAAAAAAAIg/Jf_7zhPxmnQ/photo.jpg?sz=128", "display_name": "Luqman Malik", "link": "https://stackoverflow.com/users/5514480/luqman-malik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 205, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1500486958, "creation_date": 1500413016, "question_id": 45177350, "link": "https://stackoverflow.com/questions/45177350/how-do-i-pipe-the-output-string-produced-by-readfile-filename-txt-to-haskells", "title": "How do I pipe the output string produced by readFile &quot;filename.txt&quot; to Haskell&#39;s words function as an argument?", "body": "<p>from the <code>ghci&gt;</code> prompt, I would like to <strong>readFile</strong> \"filename.text\" and pass the produced string as an argument to the <strong>words</strong> function to convert sentences to wordlists.</p>\n\n<p>Thanks</p>\n"}, {"tags": ["haskell", "list-comprehension"], "comments": [{"owner": {"reputation": 35578, "user_id": 3000206, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/BK1fo.jpg?s=128&g=1", "display_name": "Carcigenicate", "link": "https://stackoverflow.com/users/3000206/carcigenicate"}, "edited": false, "score": 0, "creation_date": 1500408534, "post_id": 45176056, "comment_id": 77320785, "body": "This should all be explained in any tutorial on list comprehensions. Have you looked one up?"}, {"owner": {"reputation": 35578, "user_id": 3000206, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/BK1fo.jpg?s=128&g=1", "display_name": "Carcigenicate", "link": "https://stackoverflow.com/users/3000206/carcigenicate"}, "edited": false, "score": 0, "creation_date": 1500408611, "post_id": 45176056, "comment_id": 77320824, "body": "And as for why the exact syntax is used, like a lot of other aspects of Haskell, it&#39;s borrowed from math. I think it&#39;s pulled from set theory where <code>o \u2208 A</code> means that <code>o</code> is a member of the set <code>A</code>. Haskell is using an arrow in place of <code>\u2208</code>."}], "answers": [{"comments": [{"owner": {"reputation": 480, "user_id": 8326972, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/2686a66637446afd24dc51e04dea7bd6?s=128&d=identicon&r=PG&f=1", "display_name": "Hobbamok", "link": "https://stackoverflow.com/users/8326972/hobbamok"}, "edited": false, "score": 0, "creation_date": 1500410717, "post_id": 45176192, "comment_id": 77322021, "body": "Thanks, that went right into my cheat sheet. For any other people seeking an example on the condition, here is a function returning the odd numbers from a list: oddList = [x  |x &lt;- numberList  , (mod x 2 ==1) ]  Where (mod x 2 ==1) is the condition"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 3, "last_activity_date": 1500413766, "last_edit_date": 1500413766, "creation_date": 1500408689, "answer_id": 45176192, "question_id": 45176056, "link": "https://stackoverflow.com/questions/45176056/how-does-listx2-x-2-x-numberlist-work/45176192#45176192", "title": "How does listx2 = [x * 2 | x&lt;- numberList] work?", "body": "<p>List comprehensions use their own special syntax, which is</p>\n\n<pre><code>[ e | q1, q2, ..., qn ]\n</code></pre>\n\n<p>The <code>|</code> is not an \"or\", it's part of the syntax, just as <code>[</code> and <code>]</code>.</p>\n\n<p>Each <code>qi</code> can be of the following forms.</p>\n\n<ul>\n<li><code>x &lt;- list</code> chooses <code>x</code> from the <code>list</code></li>\n<li><code>condition</code> is a boolean expression, which discards the <code>x</code>s chosen before if the <code>condition</code> is false</li>\n<li><code>let y = expression</code> defines variable <code>y</code> accordingly</li>\n</ul>\n\n<p>Finally, <code>e</code> is an expression which can involve all the variables defined in the <code>qi</code>, and which forms the elements in the resulting list.</p>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 2, "last_activity_date": 1500408764, "creation_date": 1500408764, "answer_id": 45176208, "question_id": 45176056, "link": "https://stackoverflow.com/questions/45176056/how-does-listx2-x-2-x-numberlist-work/45176208#45176208", "title": "How does listx2 = [x * 2 | x&lt;- numberList] work?", "body": "<p>What you see is <em>syntactical sugar</em>. So Haskell does <em>not</em> interpret the pipe (<code>|</code>) as a guard, etc. It sees the list comprehension as a whole.</p>\n\n<p>This however does <em>not</em> mean that the <code>&lt;-</code> are picked at random. Actually list comprehension maps nicely on the <em>list monad</em>. What you see is syntactical sugar for:</p>\n\n<pre><code>listx2 = do\n    x &lt;- numberList\n    return x*2\n</code></pre>\n\n<p>Now a list type <code>[]</code> is actually a monad. It means that we have written:</p>\n\n<pre><code>listx2 = numberList &gt;&gt;= \\x -&gt; return (x*2)\n</code></pre>\n\n<p>Or even shorter:</p>\n\n<pre><code>listx2 = numberList &gt;&gt;= return . (*2)\n</code></pre>\n\n<p>Now the list monad is defined as:</p>\n\n<pre><code>instance Monad [] where\n    return x = [x]\n    xs &gt;&gt;= k = concat $ fmap k xs\n</code></pre>\n\n<p>So this means that it is equivalent to:</p>\n\n<pre><code>listx2 = numberList &gt;&gt;= return . (*2)\nlistx2 = concat (fmap (return . (*2)) numberList)\nlistx2 = concat (fmap (\\x -&gt; [2*x]) numberList)\n</code></pre>\n\n<p>Now for a list <code>fmap</code> is equal to <code>map</code>, so:</p>\n\n<pre><code>listx2 = concat $ map (\\x -&gt; [2*x]) numberList\nlistx2 = concatMap (\\x -&gt; [2*x]) numberList\n</code></pre>\n\n<p>so that means that for every element <code>x</code> in the <code>numberList</code> we will generate a singleton list <code>[2*x]</code> and concatenate all these singleton lists into the result.</p>\n"}], "owner": {"reputation": 480, "user_id": 8326972, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/2686a66637446afd24dc51e04dea7bd6?s=128&d=identicon&r=PG&f=1", "display_name": "Hobbamok", "link": "https://stackoverflow.com/users/8326972/hobbamok"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 50, "favorite_count": 0, "accepted_answer_id": 45176192, "answer_count": 2, "score": 1, "last_activity_date": 1500413766, "creation_date": 1500408200, "last_edit_date": 1500408826, "question_id": 45176056, "link": "https://stackoverflow.com/questions/45176056/how-does-listx2-x-2-x-numberlist-work", "title": "How does listx2 = [x * 2 | x&lt;- numberList] work?", "body": "<p>So  I m watching a very basic Tutorial, and I m at list comprehension where this comes up:</p>\n\n<pre><code>listx2 = [x * 2 | x&lt;- numberList]\n</code></pre>\n\n<p>with numberList being a list of numbers</p>\n\n<p>So this takes every number in the list and duplicates it, so <code>numberList = [1,2]</code> results in <code>[2,4]</code>.</p>\n\n<p>But HOW does the whole Syntax come together?</p>\n\n<p>I know that x * 2 is the doubleing, but the rest just doesn't make sense to me.</p>\n\n<p><code>|</code> is the \"or\" Symbol as far as I know,and what does it do there?</p>\n\n<p><code>x &lt;- numberList</code> gives <code>x</code> a number from the list, but why does it take just a number? and why so nicely one after the other? There is no recursion or anything that tells it to do one element at a time...</p>\n\n<p>I learn stuff by understanding it, so is that even possible here or do I just have to accept this as \"thats how it goes\" and memorize the pattern?</p>\n"}, {"tags": ["haskell", "binary-operators"], "comments": [{"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 1, "creation_date": 1500407915, "post_id": 45175832, "comment_id": 77320452, "body": "In Haskell a binary function is a function which doesn&#39;t deal with functors, aplicative functors, monadic values etc as arguments or returned values. In another words just simple functions are binary functions."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "reply_to_user": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 0, "creation_date": 1500421053, "post_id": 45175832, "comment_id": 77325938, "body": "@Redu That&#39;s not what a <a href=\"https://en.wikipedia.org/wiki/Binary_function\" rel=\"nofollow noreferrer\">binary function</a> is. I&#39;m not sure I know of a term for what you&#39;re describing, actually (&quot;first-order function&quot; <i>almost</i> comes close &quot;in spirit,&quot; but they can involve functors, etc)."}], "answers": [{"comments": [{"owner": {"reputation": 97, "user_id": 8212844, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/236833266ffeedd6f562a9f5e4f2fae4?s=128&d=identicon&r=PG", "display_name": "IPiiro", "link": "https://stackoverflow.com/users/8212844/ipiiro"}, "edited": false, "score": 0, "creation_date": 1500407725, "post_id": 45175879, "comment_id": 77320338, "body": "Oh so that <i>binary</i> stands for the operator is taking  <i>two</i>  elements.. well that should be obvious to me. Thanks"}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 3, "creation_date": 1500408114, "post_id": 45175879, "comment_id": 77320571, "body": "I don&#39;t think the term usually implies that both operands are from the same set. Like, I&#39;d imagine most people consider division to be a binary operator even though it&#39;s type is <code>R * R \\ {0} -&gt; R</code>, not <code>R * R -&gt; R</code>. And in the specific context of the <code>fold</code> functions, &quot;binary operator&quot; definitely does not imply that the operand types must be the same, as that is not the case."}, {"owner": {"reputation": 97, "user_id": 8212844, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/236833266ffeedd6f562a9f5e4f2fae4?s=128&d=identicon&r=PG", "display_name": "IPiiro", "link": "https://stackoverflow.com/users/8212844/ipiiro"}, "edited": false, "score": 0, "creation_date": 1500408226, "post_id": 45175879, "comment_id": 77320624, "body": "Yes you are right but the word <i>binary</i> is kind of a hint for that."}, {"owner": {"reputation": 704, "user_id": 939572, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2aadfb25285dc4e9a3caf81e2277d77b?s=128&d=identicon&r=PG", "display_name": "GarethR", "link": "https://stackoverflow.com/users/939572/garethr"}, "reply_to_user": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 0, "creation_date": 1500412569, "post_id": 45175879, "comment_id": 77322993, "body": "@sepp2k surely the division operator is partial with type <code>R * R -&gt; R</code>?"}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1500413850, "post_id": 45175879, "comment_id": 77323605, "body": "<code>(:)</code> is an obvious example of a binary operator whose two arguments are not of the same type."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "reply_to_user": {"reputation": 704, "user_id": 939572, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2aadfb25285dc4e9a3caf81e2277d77b?s=128&d=identicon&r=PG", "display_name": "GarethR", "link": "https://stackoverflow.com/users/939572/garethr"}, "edited": false, "score": 0, "creation_date": 1500421173, "post_id": 45175879, "comment_id": 77325966, "body": "@GarethR I think sepp2k is saying that it <i>is</i> partial if you try to give it the type <code>R * R -&gt; R</code>, but it is total if you take its type as <code>R * (R \\ {0}) -&gt; R</code> (and using that example because <code>R</code> and <code>R \\ {0}</code> are not the same)."}, {"owner": {"reputation": 704, "user_id": 939572, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2aadfb25285dc4e9a3caf81e2277d77b?s=128&d=identicon&r=PG", "display_name": "GarethR", "link": "https://stackoverflow.com/users/939572/garethr"}, "reply_to_user": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1500664620, "post_id": 45175879, "comment_id": 77456422, "body": "@DavidYoung I&#39;m not disagreeing with the main point that division would be an operator even if its two arguments had different types."}, {"owner": {"reputation": 704, "user_id": 939572, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2aadfb25285dc4e9a3caf81e2277d77b?s=128&d=identicon&r=PG", "display_name": "GarethR", "link": "https://stackoverflow.com/users/939572/garethr"}, "reply_to_user": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1500664986, "post_id": 45175879, "comment_id": 77456599, "body": "@DavidYoung I&#39;m merely saying <code>R * R \\ {0} -&gt; R</code> isn&#39;t the conventional type of the division operator. After all, if division wasn&#39;t a partial function, physicists wouldn&#39;t have problems with singularities in black holes... but it is and they do."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 3, "last_activity_date": 1500408213, "last_edit_date": 1500408213, "creation_date": 1500407551, "answer_id": 45175879, "question_id": 45175832, "link": "https://stackoverflow.com/questions/45175832/what-are-binary-operators-in-haskell/45175879#45175879", "title": "What are binary operators in haskell", "body": "<p>Usually mathematicians define a <em>binary operator</em> is a function that takes two arguments. In some papers it is a requirement that the arguments and the result are defined over the same set.</p>\n\n<p>The fact that the function <code>?</code> takes two arguments results in the fact that mathematicians frequently use infix notation (like <code>x ? y</code>). For instance <code>(+)</code>, <code>(*)</code>, etc. are clearly binary operators.</p>\n"}], "owner": {"reputation": 97, "user_id": 8212844, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/236833266ffeedd6f562a9f5e4f2fae4?s=128&d=identicon&r=PG", "display_name": "IPiiro", "link": "https://stackoverflow.com/users/8212844/ipiiro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1589, "favorite_count": 0, "accepted_answer_id": 45175879, "answer_count": 1, "score": 2, "last_activity_date": 1500408213, "creation_date": 1500407422, "question_id": 45175832, "link": "https://stackoverflow.com/questions/45175832/what-are-binary-operators-in-haskell", "title": "What are binary operators in haskell", "body": "<p>So I wanted to understand the functions <code>foldl</code> and <code>foldr</code> in <a href=\"https://www.haskell.org/hoogle/?hoogle=foldl\" rel=\"nofollow noreferrer\">Hoogle</a>\nthey say that these functions apply to binary operators. But I don't get what these <em>binary operators</em> are. I know that <code>(+)</code> and <code>(-)</code> are binary operators but what defines them ?</p>\n"}, {"tags": ["haskell", "gadt", "data-kinds"], "comments": [{"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1500403305, "post_id": 45173587, "comment_id": 77317576, "body": "You&#39;ll have to be more specific about what you mean by &quot;constraints on the construction of edges&quot;. The usual way of modelling graphs is to write down the set of nodes (eg <code>data Node = N1 | N2 | N3</code> for a graph of order 3, or <code>Fin n</code> for a graph of order <code>n</code> - types are sets, remember) and then write down the set of edges connecting those nodes (<code>data Edge from to where { E1 :: Edge N1 N2; E2 :: Edge N3 N2 }</code>). You can abstract over graphs by abstracting over the <code>Node</code> and <code>Edge</code> types (<code>data Graph n (e :: n -&gt; n -&gt; *) = Graph</code>). Then use a <code>class</code> to turn a <code>Graph</code> into an <code>AG.Graph</code>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1500404511, "post_id": 45173587, "comment_id": 77318356, "body": "What&#39;s causing the issue is that you can&#39;t promote GADT constructors with constraints other than equality constraints."}, {"owner": {"reputation": 410, "user_id": 2805751, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/22fc46808863bebbaf410616ea630332?s=128&d=identicon&r=PG&f=1", "display_name": "user2805751", "link": "https://stackoverflow.com/users/2805751/user2805751"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1500410265, "post_id": 45173587, "comment_id": 77321805, "body": "@dfeuer Sorry, import is added.  It&#39;s from the algebraic-graphs package.  I believe this should be sufficient to compile now (it&#39;s a simplification of the actual use case)."}, {"owner": {"reputation": 410, "user_id": 2805751, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/22fc46808863bebbaf410616ea630332?s=128&d=identicon&r=PG&f=1", "display_name": "user2805751", "link": "https://stackoverflow.com/users/2805751/user2805751"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1500410333, "post_id": 45173587, "comment_id": 77321833, "body": "@dfeuer Ah, I didn&#39;t know that."}, {"owner": {"reputation": 410, "user_id": 2805751, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/22fc46808863bebbaf410616ea630332?s=128&d=identicon&r=PG&f=1", "display_name": "user2805751", "link": "https://stackoverflow.com/users/2805751/user2805751"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1500410593, "post_id": 45173587, "comment_id": 77321964, "body": "@BenjaminHodgson The order of the graph is not set; I&#39;m looking to be able to define extensible nodes from the deep embedding represented by the GADT, which is an encoding derived from <a href=\"https://github.com/snowleopard/alga-paper\" rel=\"nofollow noreferrer\">github.com/snowleopard/alga-paper</a>"}, {"owner": {"reputation": 410, "user_id": 2805751, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/22fc46808863bebbaf410616ea630332?s=128&d=identicon&r=PG&f=1", "display_name": "user2805751", "link": "https://stackoverflow.com/users/2805751/user2805751"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1500411695, "post_id": 45173587, "comment_id": 77322532, "body": "@dfeuer Yes, you were right, <code>Nat</code> and <code>Symbol</code> are defined in <code>singletons</code> and <code>*</code> is being obfuscated by something but ghc is happy enough with the one from <code>Data.Kind</code>."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1500411986, "post_id": 45173587, "comment_id": 77322683, "body": "I&#39;m familiar with the Algebraic Graphs pearl. What do you mean by &quot;extensible nodes&quot;? Why are you trying to do this at the type level in the first place?"}, {"owner": {"reputation": 410, "user_id": 2805751, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/22fc46808863bebbaf410616ea630332?s=128&d=identicon&r=PG&f=1", "display_name": "user2805751", "link": "https://stackoverflow.com/users/2805751/user2805751"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1500412436, "post_id": 45173587, "comment_id": 77322929, "body": "@BenjaminHodgson The constraints on the <code>Edge</code> typeclass involve dependently typed shenanigans in order to make sure that two nodes can be joined in a compatible calculation.  By &quot;extensible&quot; I mean the way one would desire a finite <code>AST</code> to be extensible:  I want to be able to define new operations between nodes without knowledge of the whole <code>AST</code>."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1500413080, "post_id": 45173587, "comment_id": 77323275, "body": "It&#39;s going to be very difficult for us to help you with your design without concrete requirements. Could you give some examples, in code, of how you expect to use your system? Your use of terminology like &quot;operations between nodes&quot; is confusing without a clear example."}, {"owner": {"reputation": 410, "user_id": 2805751, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/22fc46808863bebbaf410616ea630332?s=128&d=identicon&r=PG&f=1", "display_name": "user2805751", "link": "https://stackoverflow.com/users/2805751/user2805751"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1500416741, "post_id": 45173587, "comment_id": 77324718, "body": "@BenjaminHodgson I&#39;ve added what I hope is some clarification.  Let me know if I can be more clear."}], "owner": {"reputation": 410, "user_id": 2805751, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/22fc46808863bebbaf410616ea630332?s=128&d=identicon&r=PG&f=1", "display_name": "user2805751", "link": "https://stackoverflow.com/users/2805751/user2805751"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 163, "favorite_count": 2, "answer_count": 0, "score": 0, "last_activity_date": 1500431600, "creation_date": 1500399321, "last_edit_date": 1500431600, "question_id": 45173587, "link": "https://stackoverflow.com/questions/45173587/type-level-graphs-via-gadts-and-datakinds", "title": "Type-level graphs via GADTs and DataKinds", "body": "<p>I'm trying to encode a type-level graph with some constraints on the construction of edges (via a typeclass) but I'm running into an \"Illegal constraint in type\" error when I try to alias a constructed graph.  What's causing this issue?  If it's unworkable, is there another way to encode the graph structure such that it can be built by type and folded over to yield a value-level representation of the graph?</p>\n\n<p>Edit:  Desiderata</p>\n\n<p>I would like to be able to constrain the construction of a graph subject to the <code>input</code> and <code>output</code> nodes of any two operations.  </p>\n\n<p>For the sake of clarity, let's take the well-known case of length-indexed vectors.  </p>\n\n<p>An <code>operation</code> would take an <code>input</code> of some shape and potentially change it's length to the the length of <code>output</code>. An edge between two <code>operations</code> would need to ensure that the output of the first was compatible -- for some instance-defined notion of compatability -- with the input of the second. (Below, these constraints are omitted; the application requires dependently typed verification of the constraints and calculation of the types at compile.) </p>\n\n<p>In order to define a new operation, <code>S</code>, that can be used with the existing operation(s) <code>T</code> (et al.), one should only need to add the data type <code>S</code>, the implementation of <code>S _</code>  and the necessary constraints  for the function of <code>S</code> as an instance of the <code>Edge</code> typeclass.</p>\n\n<pre><code>--Pragmas are needed additionally for the project in which this snippet is included\n{-# LANGUAGE TypeInType, DataKinds, PolyKinds, ScopedTypeVariables,\n  FlexibleInstances, FlexibleContexts, GADTs, TypeFamilies,\n  RankNTypes, LambdaCase, TypeOperators, TemplateHaskell,\n  ConstraintKinds, PolyKinds, NoImplicitPrelude,\n  UndecidableInstances, MultiParamTypeClasses, GADTSyntax,\n  AllowAmbiguousTypes, InstanceSigs, DeriveFunctor,\n  FunctionalDependencies #-}\n\n-- Algebra.Graph is from the algebraic-graphs package\nimport qualified Algebra.Graph as AG\nimport Data.Singletons\nimport Data.Singletons.Prelude\nimport Data.Singletons.TypeLits\nimport Data.Kind\n\n\ndata T (ln::Nat) c = T c\n\nclass Edge operation n o \n\ninstance \n  -- This would be something like: (LengthIsValidPrime x ~ True, y ~ DependentlyTypedCalculationForOpabc x) =&gt; \n  Edge (T l c) x y\n\ndata Flow :: * -&gt; * where\n        Empty :: Flow (a)\n        Vertex :: (Edge a n o) =&gt; a -&gt; Flow (a)\n        Connect ::\n            (Edge a x y, Edge a y z, Edge a x z) =&gt;\n            Flow (a) -&gt; Flow (a) -&gt; Flow (a)\n        Overlay ::\n            (Edge a x y, Edge a y z, Edge a x z) =&gt;\n            Flow (a) -&gt; Flow (a) -&gt; Flow (a)\n\n\n\ntype Test c = Connect (Vertex (T 24 c )) (Vertex (T 3 c))\n--which fails with\n\n--error:\n--    \u2022 Illegal constraint in a type: Edge a0 x0 z0\n--    \u2022 In the type \u2018Connect (Vertex (T  24 c)) (Vertex (T 3 c))\u2019\n--      In the type declaration for \u2018Test\u2019\n\n-- We want to be able to define a graph like so: \ntype InputNode c = Vertex (T 100 c )\ntype ForkNode c = Vertex (T 10 c )\ntype NodeB c = Vertex (T 1  c )\ntype NodeC c = Vertex (T 1  c )\ntype PathA c = Connect (InputNode c) (ForkNode c)\ntype PathAB c = Connect (PathA c) (NodeB c)\ntype PathAC c = Connect (PathA c) (NodeC c)\ntype Output c = Vertex (T 2 c )\ntype Subgraph c = Overlay (Connect (PathAC c) (Output c)) (Connect (PathAB c) (Output c))\n\n-- and eventually the trascription from the type-level graph to a value graph defined by Algebra.Graph\n--foldFlow :: Flow a -&gt; AG.Graph (Flow a)\n--foldFlow Empty         = AG.empty\n--foldFlow vt@(Vertex x) = AG.vertex vt\n--foldFlow (Overlay x y) = AG.overlay  (foldFlow x) (foldFlow y)\n--foldFlow (Connect x y) = AG.connect  (foldFlow x) (foldFlow y)\n--runGraph :: Subgraph c\n--runGraph = ...create a term-level Subgraph c so we can fold over it.\n</code></pre>\n\n<p><a href=\"https://gist.github.com/o1lo01ol1o/020b372608183f4ba4e591078a514c7e\" rel=\"nofollow noreferrer\">gist here</a> </p>\n"}, {"tags": ["haskell", "stdout", "stdin"], "answers": [{"tags": [], "owner": {"reputation": 28488, "user_id": 402884, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/35583fe46c2cde92467710cc7ceff266?s=128&d=identicon&r=PG", "display_name": "Chris Martin", "link": "https://stackoverflow.com/users/402884/chris-martin"}, "is_accepted": true, "score": 1, "last_activity_date": 1500487612, "creation_date": 1500487612, "answer_id": 45197987, "question_id": 45172777, "link": "https://stackoverflow.com/questions/45172777/run-processes-concurrently-with-stdin-stdout/45197987#45197987", "title": "Run processes concurrently with stdin, stdout", "body": "<pre><code>import Control.Concurrent.Async\nimport System.IO\nimport System.Process\n</code></pre>\n\n<p>The code on the website you linked uses <a href=\"https://www.stackage.org/haddock/lts-8.23/process-1.4.3.0/System-Process.html#v:runCommand\" rel=\"nofollow noreferrer\"><code>runCommand</code></a>; the equivalent that gives you access to the streams is <a href=\"https://www.stackage.org/haddock/lts-8.23/process-1.4.3.0/System-Process.html#v:runInteractiveCommand\" rel=\"nofollow noreferrer\"><code>runInteractiveCommand</code></a>. You can then use <a href=\"https://www.stackage.org/haddock/lts-8.23/base-4.9.1.0/System-IO.html#v:hGetContents\" rel=\"nofollow noreferrer\"><code>hGetContents</code></a> to read from the stream.</p>\n\n<pre><code>-- | Run @echo 10@ and tests whether the output is what we expect.\ntestOne :: IO Bool\ntestOne =\n  runInteractiveCommand \"echo 10\" &gt;&gt;= \\(_stdin, stdout, _stderr, _proc) -&gt;\n  hGetContents stdout &gt;&gt;= \\out -&gt;\n  return (out == \"10\\n\")\n</code></pre>\n\n<p>Then we can use <a href=\"https://hackage.haskell.org/package/async-2.1.1.1/docs/Control-Concurrent-Async.html#v:replicateConcurrently\" rel=\"nofollow noreferrer\"><code>replicateConcurrently</code></a> from the <code>async</code> package to run it 100 times concurrently, and <code>fmap (all id)</code> over the result to take the boolean <em>and</em> of all the results.</p>\n\n<pre><code>-- | Run 'testOne' 100 times concurrently, return whether all tests succeeded.\ntestMany :: IO Bool\ntestMany =\n  all id &lt;$&gt; replicateConcurrently 100 testOne\n</code></pre>\n"}], "owner": {"reputation": 1415, "user_id": 474491, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/ba21053d650c48ca674e577b38a976aa?s=128&d=identicon&r=PG", "display_name": "Pierre Carbonnelle", "link": "https://stackoverflow.com/users/474491/pierre-carbonnelle"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 285, "favorite_count": 0, "accepted_answer_id": 45197987, "answer_count": 1, "score": 0, "last_activity_date": 1500487612, "creation_date": 1500396512, "question_id": 45172777, "link": "https://stackoverflow.com/questions/45172777/run-processes-concurrently-with-stdin-stdout", "title": "Run processes concurrently with stdin, stdout", "body": "<p>How can I expand \"<a href=\"https://wiki.haskell.org/Running_processes_concurrently\" rel=\"nofollow noreferrer\">Running processes concurrently</a>\" to include stdin and stdout ?</p>\n\n<p>For example, let's say that my (Windows) command outputs 10 on stdout, and I want to check that the output of all processes are correct :</p>\n\n<pre><code>let cmds = replicate 100 \"echo 10\"\n</code></pre>\n\n<p>How should I write the Haskell program ?</p>\n"}, {"tags": ["haskell", "ghci"], "comments": [{"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1500394954, "post_id": 45172155, "comment_id": 77312599, "body": "Did you install the package? <code>stack install lens</code>."}, {"owner": {"reputation": 7792, "user_id": 242189, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/48a18a00706b9c7206ef4092b6e68a41?s=128&d=identicon&r=PG", "display_name": "nicolas", "link": "https://stackoverflow.com/users/242189/nicolas"}, "reply_to_user": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1500399556, "post_id": 45172155, "comment_id": 77315382, "body": "that works. thank you. you can put this as an answer... is there a way to &quot;install&quot; all of lts 8.23 automatically ??"}], "answers": [{"comments": [{"owner": {"reputation": 7792, "user_id": 242189, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/48a18a00706b9c7206ef4092b6e68a41?s=128&d=identicon&r=PG", "display_name": "nicolas", "link": "https://stackoverflow.com/users/242189/nicolas"}, "edited": false, "score": 0, "creation_date": 1500439253, "post_id": 45174134, "comment_id": 77330261, "body": "I guess what could be done is index the available package by namespace and inspect which are needed for the current file/project. Then as a first step, automatically download/install the packages"}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "reply_to_user": {"reputation": 7792, "user_id": 242189, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/48a18a00706b9c7206ef4092b6e68a41?s=128&d=identicon&r=PG", "display_name": "nicolas", "link": "https://stackoverflow.com/users/242189/nicolas"}, "edited": false, "score": 0, "creation_date": 1500442029, "post_id": 45174134, "comment_id": 77331253, "body": "Why not just create a cabal file?"}, {"owner": {"reputation": 7792, "user_id": 242189, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/48a18a00706b9c7206ef4092b6e68a41?s=128&d=identicon&r=PG", "display_name": "nicolas", "link": "https://stackoverflow.com/users/242189/nicolas"}, "edited": false, "score": 0, "creation_date": 1500448236, "post_id": 45174134, "comment_id": 77334541, "body": "I actually did that. it said it can not find the &quot;target&quot;. (after a few sntax snafu) ... in the end, i just want to run a script, and all my dependencies are specified. ideally, that should work directly. its nice to have more advanced options but I really like when simple things work in 30 seconds. if i do haskell everyday, i dont think twice about those things. if i do math for a few month and go back to it, i inevitably get confused."}], "tags": [], "owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "is_accepted": true, "score": 1, "last_activity_date": 1500401243, "creation_date": 1500401243, "answer_id": 45174134, "question_id": 45172155, "link": "https://stackoverflow.com/questions/45172155/ghci-stack-and-package-available/45174134#45174134", "title": "ghci / stack and package available", "body": "<p>Packages have to be installed (downloaded and compiled) before they can be used:</p>\n\n<pre><code>stack install lens\n</code></pre>\n\n<p>If you are working with a Cabalized project (which can be a good idea even for small things), stack will install dependencies listed in your cabal file so you don't have to install them manually.</p>\n\n<p>In response to your comment: I suppose it would technically be possible to download and install all of (some version of) stackage, but this doesn't seem desirable. It would take an awfully long time and has little benefit over installing packages at need. Besides, I don't know of an automated way to do it. I know some interesting work has been done on \"offline hackage\" storage but it isn't ready for use.</p>\n"}], "owner": {"reputation": 7792, "user_id": 242189, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/48a18a00706b9c7206ef4092b6e68a41?s=128&d=identicon&r=PG", "display_name": "nicolas", "link": "https://stackoverflow.com/users/242189/nicolas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 200, "favorite_count": 0, "accepted_answer_id": 45174134, "answer_count": 1, "score": 2, "last_activity_date": 1500440202, "creation_date": 1500394361, "last_edit_date": 1500440202, "question_id": 45172155, "link": "https://stackoverflow.com/questions/45172155/ghci-stack-and-package-available", "title": "ghci / stack and package available", "body": "<p>I use intero with some file with no project, and my global (or local stack.yaml) is:</p>\n\n<pre><code> ~/.stack/global\n$ cat stack.yaml\nflags: {}\npackages: []\nextra-deps: []\n\nresolver: lts-8.21\n</code></pre>\n\n<p>If I <code>stack exec -- ghci</code> and <code>:l Intero.hs</code> where <code>Intero.hs</code> contains:</p>\n\n<pre><code>$ cat Intero.hs\nmodule Intero where\n\nimport           Control.Lens.Lens\n</code></pre>\n\n<p>I get:</p>\n\n<pre><code>$ stack exec -- ghci\nGHCi, version 8.0.2: http://www.haskell.org/ghc/  :? for help\nLoaded GHCi configuration from /Users/nrolland/.emacs.d/.ghci\nPrelude\n\u03bb&gt; :l Intero.hs\n[1 of 1] Compiling Intero           ( Intero.hs, interpreted )\n\nIntero.hs:3:1: error:\n    Failed to load interface for \u2018Control.Lens.Lens\u2019\n    Use -v to see a list of the files searched for.\nFailed, modules loaded: none.\n</code></pre>\n\n<p>I relaunched with -v:</p>\n\n<pre><code>$ stack exec -- ghci -v\nGHCi, version 8.0.2: http://www.haskell.org/ghc/  :? for help\nGlasgow Haskell Compiler, Version 8.0.2, stage 2 booted by GHC version 7.10.3\nUsing binary package database: /Users/nrolland/.stack/programs/x86_64-osx/ghc-8.0.2/lib/ghc-8.0.2/package.conf.d/package.cache\nUsing binary package database: /Users/nrolland/.stack/snapshots/x86_64-osx/lts-8.23/8.0.2/pkgdb/package.cache\nUsing binary package database: /Users/nrolland/Sync/clones/haskGist80/.stack-work/install/x86_64-osx/lts-8.23/8.0.2/pkgdb/package.cache\nloading package database /Users/nrolland/.stack/programs/x86_64-osx/ghc-8.0.2/lib/ghc-8.0.2/package.conf.d\nloading package database /Users/nrolland/.stack/snapshots/x86_64-osx/lts-8.23/8.0.2/pkgdb\nloading package database /Users/nrolland/Sync/clones/haskGist80/.stack-work/install/x86_64-osx/lts-8.23/8.0.2/pkgdb\nwired-in package ghc-prim mapped to ghc-prim-0.5.0.0\n</code></pre>\n\n<p>and when loading the <code>Intero.hs</code>, I get </p>\n\n<pre><code>Intero.hs:3:1: error:\n    Failed to load interface for \u2018Control.Lens.Lens\u2019\n    Locations searched:\n      Control/Lens/Lens.hs\n      Control/Lens/Lens.lhs\n      Control/Lens/Lens.hsig\n      Control/Lens/Lens.lhsig\nUpsweep partially successful.\n*** Deleting temp files:\nDeleting:\nFailed, modules loaded: none.\nloading package database /Users/nrolland/.stack/programs/x86_64-osx/ghc-8.0.2/lib/ghc-8.0.2/package.conf.d\nloading package database /Users/nrolland/.stack/snapshots/x86_64-osx/lts-8.23/8.0.2/pkgdb\nloading package database /Users/nrolland/Sync/clones/haskGist80/.stack-work/install/x86_64-osx/lts-8.23/8.0.2/pkgdb\nwired-in package ghc-prim mapped to ghc-prim-0.5.0.0\nwired-in package integer-gmp mapped to integer-gmp-1.0.0.1\nwired-in package base mapped to base-4.9.1.0\nwired-in package rts mapped to rts-1.0\nwired-in package template-haskell mapped to template-haskell-2.11.1.0\nwired-in package ghc mapped to ghc-8.0.2\nwired-in package dph-seq not found.\nwired-in package dph-par not found.\n</code></pre>\n\n<p>But lens is part of <a href=\"https://www.stackage.org/lts-8.23/package/lens-4.15.1\" rel=\"nofollow noreferrer\">lts-8.23</a>, although when I look it up in <code>ghc-pkg</code> I don't see it</p>\n\n<pre><code>$ stack exec -- ghc-pkg list\n/Users/nrolland/.stack/programs/x86_64-osx/ghc-8.0.2/lib/ghc-8.0.2/package.conf.d\n    Cabal-1.24.2.0\n    array-0.5.1.1\n    base-4.9.1.0\n    binary-0.8.3.0\n    bytestring-0.10.8.1\n    containers-0.5.7.1\n    deepseq-1.4.2.0\n    directory-1.3.0.0\n    filepath-1.4.1.1\n    ghc-8.0.2\n    ghc-boot-8.0.2\n    ghc-boot-th-8.0.2\n    ghc-prim-0.5.0.0\n    ghci-8.0.2\n    haskeline-0.7.3.0\n    hoopl-3.10.2.1\n    hpc-0.6.0.3\n    integer-gmp-1.0.0.1\n    pretty-1.1.3.3\n    process-1.4.3.0\n    rts-1.0\n    template-haskell-2.11.1.0\n    terminfo-0.4.0.2\n    time-1.6.0.1\n    transformers-0.5.2.0\n    unix-2.7.2.1\n    xhtml-3000.2.1\n/Users/nrolland/.stack/snapshots/x86_64-osx/lts-8.23/8.0.2/pkgdb\n    (no packages)\n/Users/nrolland/Sync/clones/haskGist80/.stack-work/install/x86_64-osx/lts-8.23/8.0.2/pkgdb\n    (no packages)\n</code></pre>\n\n<p>How can I easily load up modules without creating a full blown project ?\nIt might be easy but I am very confused about how this whole thing works..</p>\n"}, {"tags": ["haskell", "equality", "generic-programming"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1500393852, "post_id": 45171822, "comment_id": 77311928, "body": "Is the <code>ignoredField</code> known at compile time? Or only at runtime?"}, {"owner": {"reputation": 974, "user_id": 3829232, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3d2de116df80bc024b799e84dcdbc97?s=128&d=identicon&r=PG", "display_name": "soupi", "link": "https://stackoverflow.com/users/3829232/soupi"}, "edited": false, "score": 4, "creation_date": 1500393863, "post_id": 45171822, "comment_id": 77311939, "body": "Copy the value from one to the other and then compare: <code>a { foo = foo b } == b</code>"}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1500396289, "post_id": 45171822, "comment_id": 77313432, "body": "@WillemVanOnsem <code>ignoredField</code> is known at compile time."}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "reply_to_user": {"reputation": 974, "user_id": 3829232, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3d2de116df80bc024b799e84dcdbc97?s=128&d=identicon&r=PG", "display_name": "soupi", "link": "https://stackoverflow.com/users/3829232/soupi"}, "edited": false, "score": 0, "creation_date": 1500396440, "post_id": 45171822, "comment_id": 77313544, "body": "@soupi Amazing! Now I feel stupid :( Should be ashamed of such silly questions. At the same time I really like there&#39;s such easy and elegant solution! Can accept as the answer if you post it."}], "answers": [{"comments": [{"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 0, "creation_date": 1500397333, "post_id": 45172812, "comment_id": 77314086, "body": "Thanks for your answer! Unfortunately, I can&#39;t split that field. Because I&#39;m working with the data type from library as I mentioned in the question, it&#39;s not my own :( Though I agree with you that such design would be better in some sense."}], "tags": [], "owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "is_accepted": false, "score": 2, "last_activity_date": 1500396983, "last_edit_date": 1500396983, "creation_date": 1500396674, "answer_id": 45172812, "question_id": 45171822, "link": "https://stackoverflow.com/questions/45171822/easiest-way-to-compare-values-of-big-data-type-ignoring-one-field-or-without-tha/45172812#45172812", "title": "Easiest way to compare values of big data type ignoring one field or without that field", "body": "<p>Maybe the best approach would be to just split that field out of your type.  Instead of</p>\n\n<pre><code>data MyData = C1 IgnoredType T1 T2\n            | C2 IgnoredType T2 T3\n            | C3 IgnoredType T4\n</code></pre>\n\n<p>you could do this:</p>\n\n<pre><code>data MySimpleData = C1 T1 T2\n                  | C2 T2 T3\n                  | C3 T4\n    deriving Eq\n\ndata WithIgnored a = WI IgnoredType a\ninstance Eq a =&gt; Eq (WithIgnored a) where\n    WI _ x == WI _ y = x == y\ntype MyData = WithIgnored MySimpleData\n</code></pre>\n\n<p>Or less flexibly:</p>\n\n<pre><code>data MyData = MD IgnoredType MySimpleData\ninstance Eq MyData where\n    MD _ x == MD _ y = x == y\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1500397860, "post_id": 45173152, "comment_id": 77314413, "body": "Well, perhaps the <i>next</i> best is @soupi&#39;s, but this one is pretty good too. :)"}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 0, "creation_date": 1500398095, "post_id": 45173152, "comment_id": 77314537, "body": "I don&#39;t want to write <code>myDataComparables</code> function because data type has dozens of constructors. And I can&#39;t use tuples, because those constructors have fields with different types. Though I can convert to <code>[String]</code> as I mentioned in the question. Yes, I really like @soupi&#39;s answer :)"}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "reply_to_user": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 0, "creation_date": 1500398129, "post_id": 45173152, "comment_id": 77314565, "body": "Another answer bites the dust. :)"}], "tags": [], "owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "is_accepted": false, "score": 2, "last_activity_date": 1500397795, "creation_date": 1500397795, "answer_id": 45173152, "question_id": 45171822, "link": "https://stackoverflow.com/questions/45171822/easiest-way-to-compare-values-of-big-data-type-ignoring-one-field-or-without-tha/45173152#45173152", "title": "Easiest way to compare values of big data type ignoring one field or without that field", "body": "<p>If you can't split out the item you want to avoid comparing then the next best solution is to project the rest of the data into a structure that has a convenient <code>Eq</code> instance, like a tuple:</p>\n\n<pre><code>import Data.Function (on)\n\nmyDataComparables (MyData a b c d) = (b,c,d)\n\ninstance Eq MyData where\n  (==) = (==) `on` myDataComparables\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 0, "creation_date": 1500464450, "post_id": 45173664, "comment_id": 77345860, "body": "Thanks again! Also I want to note that this approach also extends on any number of fields."}], "tags": [], "owner": {"reputation": 974, "user_id": 3829232, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3d2de116df80bc024b799e84dcdbc97?s=128&d=identicon&r=PG", "display_name": "soupi", "link": "https://stackoverflow.com/users/3829232/soupi"}, "is_accepted": true, "score": 2, "last_activity_date": 1500399642, "creation_date": 1500399642, "answer_id": 45173664, "question_id": 45171822, "link": "https://stackoverflow.com/questions/45171822/easiest-way-to-compare-values-of-big-data-type-ignoring-one-field-or-without-tha/45173664#45173664", "title": "Easiest way to compare values of big data type ignoring one field or without that field", "body": "<p>per your request:</p>\n\n<p>Copy the value from one to the other and then compare:</p>\n\n<p><code>a { foo = foo b } == b</code></p>\n"}], "owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 149, "favorite_count": 1, "accepted_answer_id": 45173664, "answer_count": 3, "score": 2, "last_activity_date": 1500399642, "creation_date": 1500393430, "question_id": 45171822, "link": "https://stackoverflow.com/questions/45171822/easiest-way-to-compare-values-of-big-data-type-ignoring-one-field-or-without-tha", "title": "Easiest way to compare values of big data type ignoring one field or without that field", "body": "<p>I'm working with data type from library which has a lot of constructors and each constructor has several fields. Every constructor is defined using <em>Record Syntax</em>. And every constructor has field with the same name. I want to check equality of values of this data type but without this one field. I'm just not interested in it. What is the easiest and cleanest way to do? Perfectly, I would be extremely happy if something like this exist:</p>\n\n<pre><code>equalsWithout ignoredField value1 value2\n</code></pre>\n\n<p>The easiest way I can imagine is to translate this data type to <code>[String]</code> using <code>Show</code> and compare result lists. But I would like to avoid this because it require to write a lot of boilerplate code because data type has a lot of constructors... Maybe there's cleaner way to achieve this.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 21417, "user_id": 925978, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/06e4467a5bd1538a92cefb20db07897a?s=128&d=identicon&r=PG&f=1", "display_name": "crockeea", "link": "https://stackoverflow.com/users/925978/crockeea"}, "edited": false, "score": 0, "creation_date": 1500384036, "post_id": 45166115, "comment_id": 77303885, "body": "<code>do</code> blocks expect expressions, but you&#39;ve given it a list of declarations, which are only allowed at the top level."}, {"owner": {"reputation": 31, "user_id": 8277073, "user_type": "registered", "profile_image": "https://graph.facebook.com/1396669157091196/picture?type=large", "display_name": "Pedro Garcia Herradon", "link": "https://stackoverflow.com/users/8277073/pedro-garcia-herradon"}, "reply_to_user": {"reputation": 21417, "user_id": 925978, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/06e4467a5bd1538a92cefb20db07897a?s=128&d=identicon&r=PG&f=1", "display_name": "crockeea", "link": "https://stackoverflow.com/users/925978/crockeea"}, "edited": false, "score": 0, "creation_date": 1500387430, "post_id": 45166115, "comment_id": 77306761, "body": "I get the idea but what do you mean about top level? It has to be called from main function?"}, {"owner": {"reputation": 21417, "user_id": 925978, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/06e4467a5bd1538a92cefb20db07897a?s=128&d=identicon&r=PG&f=1", "display_name": "crockeea", "link": "https://stackoverflow.com/users/925978/crockeea"}, "edited": false, "score": 0, "creation_date": 1500388082, "post_id": 45166115, "comment_id": 77307321, "body": "<code>callGenerators</code> is a top level declaration and definition. Other declarations you may recognize include <code>type Foo = Int</code> and <code>class Bar a where</code>. You can find the full grammar <a href=\"https://www.haskell.org/onlinereport/syntax-iso.html#sect9.5\" rel=\"nofollow noreferrer\">here</a>."}], "owner": {"reputation": 31, "user_id": 8277073, "user_type": "registered", "profile_image": "https://graph.facebook.com/1396669157091196/picture?type=large", "display_name": "Pedro Garcia Herradon", "link": "https://stackoverflow.com/users/8277073/pedro-garcia-herradon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 127, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1500378996, "creation_date": 1500378996, "question_id": 45166115, "link": "https://stackoverflow.com/questions/45166115/issue-while-executing-a-template-haskell-splice-to-generate-a-new-class-instance", "title": "Issue while executing a template haskell splice to generate a new class instance", "body": "<p>Well the point is that I have defined a function that given a list of Strings it returns a list of Dec inside the Q monad. The signature is this.</p>\n\n<pre><code>gen_allv_str_list :: [String] -&gt; Q [Dec]\n</code></pre>\n\n<p>And when I get to execute it inside a splice a get an error as If I couldn\u00b4t execute Q[Dec] inside an splice.</p>\n\n<p>This is the place where the splice gets executed</p>\n\n<pre><code>callGenerators :: Q Bool \ncallGenerators = do \n                    $(gen_allv_str_list (notDefTypes uutTypesStr))\n                    $(gen_arb_str_list (notDefTypes uutTypesStr))\n                    return True\n</code></pre>\n\n<p>And the error I get:</p>\n\n<pre><code>    Couldn't match type `[Dec]' with `Exp'\n    Expected type: ExpQ\n      Actual type: Q [Dec]\n    In the expression: gen_allv_str_list (notDefTypes uutTypesStr)\n    In the splice: $(gen_allv_str_list (notDefTypes uutTypesStr))\n</code></pre>\n\n<p>I need the instances that are created by executing that code to be used in different functions. I would be very grateful if you can give me some clue with this problem.</p>\n"}, {"tags": ["haskell", "licensing", "haskell-stack"], "comments": [{"owner": {"reputation": 1545, "user_id": 2670439, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/wFcPA.jpg?s=128&g=1", "display_name": "SwiftsNamesake", "link": "https://stackoverflow.com/users/2670439/swiftsnamesake"}, "edited": false, "score": 0, "creation_date": 1500450405, "post_id": 45163696, "comment_id": 77336048, "body": "Have a look at this: <a href=\"https://stackoverflow.com/questions/10523935/cabal-conditionally-override-a-flag-default-value\" title=\"cabal conditionally override a flag default value\">stackoverflow.com/questions/10523935/&hellip;</a>"}, {"owner": {"reputation": 4593, "user_id": 2289983, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LG4hj.jpg?s=128&g=1", "display_name": "Damian Nadales", "link": "https://stackoverflow.com/users/2289983/damian-nadales"}, "reply_to_user": {"reputation": 1545, "user_id": 2670439, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/wFcPA.jpg?s=128&g=1", "display_name": "SwiftsNamesake", "link": "https://stackoverflow.com/users/2670439/swiftsnamesake"}, "edited": false, "score": 0, "creation_date": 1500456224, "post_id": 45163696, "comment_id": 77340012, "body": "I saw that one as well. I wonder whether it is possible to specify in cabal that I need to depend on the <code>integer-simple</code> variant of <code>text</code> (like I&#39;m doing in stack above)."}, {"owner": {"reputation": 1545, "user_id": 2670439, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/wFcPA.jpg?s=128&g=1", "display_name": "SwiftsNamesake", "link": "https://stackoverflow.com/users/2670439/swiftsnamesake"}, "edited": false, "score": 0, "creation_date": 1500457828, "post_id": 45163696, "comment_id": 77341213, "body": "I assume you&#39;ve considered a custom <code>Setup.hs</code>, but would prefer a simpler approach?"}, {"owner": {"reputation": 1545, "user_id": 2670439, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/wFcPA.jpg?s=128&g=1", "display_name": "SwiftsNamesake", "link": "https://stackoverflow.com/users/2670439/swiftsnamesake"}, "edited": false, "score": 0, "creation_date": 1500460439, "post_id": 45163696, "comment_id": 77343054, "body": "Seems like the capabilities you want are divided between <code>.cabal</code> and <code>.yaml</code>. I&#39;ve run into this issue a few times and it&#39;s really annoying."}, {"owner": {"reputation": 1545, "user_id": 2670439, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/wFcPA.jpg?s=128&g=1", "display_name": "SwiftsNamesake", "link": "https://stackoverflow.com/users/2670439/swiftsnamesake"}, "edited": false, "score": 0, "creation_date": 1500460446, "post_id": 45163696, "comment_id": 77343059, "body": "I also found this: <a href=\"https://github.com/commercialhaskell/stack/issues/2048\" rel=\"nofollow noreferrer\">github.com/commercialhaskell/stack/issues/2048</a>"}, {"owner": {"reputation": 4593, "user_id": 2289983, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LG4hj.jpg?s=128&g=1", "display_name": "Damian Nadales", "link": "https://stackoverflow.com/users/2289983/damian-nadales"}, "reply_to_user": {"reputation": 1545, "user_id": 2670439, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/wFcPA.jpg?s=128&g=1", "display_name": "SwiftsNamesake", "link": "https://stackoverflow.com/users/2670439/swiftsnamesake"}, "edited": false, "score": 0, "creation_date": 1500465183, "post_id": 45163696, "comment_id": 77346459, "body": "I haven&#39;t considered a custom setup, so that could be an option."}, {"owner": {"reputation": 1545, "user_id": 2670439, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/wFcPA.jpg?s=128&g=1", "display_name": "SwiftsNamesake", "link": "https://stackoverflow.com/users/2670439/swiftsnamesake"}, "edited": false, "score": 0, "creation_date": 1500714524, "post_id": 45163696, "comment_id": 77469724, "body": "TLDR: It doesn&#39;t seem to be possible at present, because <code>.cabal</code> doesn&#39;t allow passing on flags to packages (although you <i>can</i> do so via the command line) and <code>.yaml</code> doesn&#39;t allow conditionals at present. I&#39;ll write up an answer so we can wrap this one up. I <i>think</i> I&#39;ve done my due diligence."}], "answers": [{"tags": [], "owner": {"reputation": 1545, "user_id": 2670439, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/wFcPA.jpg?s=128&g=1", "display_name": "SwiftsNamesake", "link": "https://stackoverflow.com/users/2670439/swiftsnamesake"}, "is_accepted": false, "score": 0, "last_activity_date": 1500715244, "creation_date": 1500715244, "answer_id": 45252841, "question_id": 45163696, "link": "https://stackoverflow.com/questions/45163696/conditional-selection-of-integer-simple-in-stack/45252841#45252841", "title": "Conditional selection of integer simple in Stack", "body": "<p><strong>TLDR</strong>: Use a custom <code>Setup.hs</code>.</p>\n\n<p>It doesn't seem to be possible at present, because <code>.cabal</code> doesn't allow passing on flags to packages (although you can do so via the command line) and <code>.yaml</code> doesn't allow conditionals at present<sup>1</sup>.</p>\n\n<hr>\n\n<p><strong>1.</strong> I find the stack and cabal documentation kind of obtuse and disorganised. Add to that the fact that the API seems to change rather often, and it becomes rather easy to see how one might overlook some feature that might solve your problem. Keep an eye open.</p>\n"}], "owner": {"reputation": 4593, "user_id": 2289983, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LG4hj.jpg?s=128&g=1", "display_name": "Damian Nadales", "link": "https://stackoverflow.com/users/2289983/damian-nadales"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 153, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1500715244, "creation_date": 1500372590, "question_id": 45163696, "link": "https://stackoverflow.com/questions/45163696/conditional-selection-of-integer-simple-in-stack", "title": "Conditional selection of integer simple in Stack", "body": "<p>Due to licensing constraints, we need to use the <code>integer-simple</code> variant of GHC when compiling in Windows platforms. Currently this is specified in our <a href=\"https://github.com/TorXakis/TorXakis/blob/develop/stack.yaml\" rel=\"nofollow noreferrer\"><code>stack.yaml</code></a> file:</p>\n\n<pre><code>ghc-variant: integersimple\n# ...\nextra-deps:\n- text-1.2.2.1\n# Override default flag values for local packages and extra-deps\nflags: \n  text: \n    integer-simple: true\n</code></pre>\n\n<p>However, this won't work on Linux.</p>\n\n<p>It'd be nice a way to conditionally include the code above depending on the host architecture. Is there a way of doing this using stack, and if not, how would you go about solving this problem?</p>\n\n<p>The only alternative I can think about right now is having two stack files, but I'd like to avoid that.</p>\n"}, {"tags": ["haskell", "monad-transformers", "state-monad"], "comments": [{"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 0, "creation_date": 1500373798, "post_id": 45163246, "comment_id": 77296186, "body": "Could you please specify desired output of the program? What you want to observe after running <code>main</code> function?"}, {"owner": {"reputation": 159, "user_id": 8237830, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ee8cfbfaf68eb21e3587f7741f1e837b?s=128&d=identicon&r=PG&f=1", "display_name": "4xx", "link": "https://stackoverflow.com/users/8237830/4xx"}, "reply_to_user": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 0, "creation_date": 1500374132, "post_id": 45163246, "comment_id": 77296434, "body": "@Shersh Thanks for the hint. I just did it."}], "answers": [{"comments": [{"owner": {"reputation": 159, "user_id": 8237830, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ee8cfbfaf68eb21e3587f7741f1e837b?s=128&d=identicon&r=PG&f=1", "display_name": "4xx", "link": "https://stackoverflow.com/users/8237830/4xx"}, "edited": false, "score": 0, "creation_date": 1500384042, "post_id": 45165731, "comment_id": 77303891, "body": "Thank you very much for the precise answer! Did you mean &quot;Lenses&quot; by &quot;design pattern&quot;?"}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "reply_to_user": {"reputation": 159, "user_id": 8237830, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ee8cfbfaf68eb21e3587f7741f1e837b?s=128&d=identicon&r=PG&f=1", "display_name": "4xx", "link": "https://stackoverflow.com/users/8237830/4xx"}, "edited": false, "score": 0, "creation_date": 1500384714, "post_id": 45165731, "comment_id": 77304457, "body": "@4xx &#171;Lenses&#187; is a library but it brought part of that pattern. I mean, that type of <code>change</code> function should be <code>change :: (MonadState s m, HasVar1 s) =&gt; m ()</code>."}, {"owner": {"reputation": 159, "user_id": 8237830, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ee8cfbfaf68eb21e3587f7741f1e837b?s=128&d=identicon&r=PG&f=1", "display_name": "4xx", "link": "https://stackoverflow.com/users/8237830/4xx"}, "edited": false, "score": 0, "creation_date": 1500388514, "post_id": 45165731, "comment_id": 77307672, "body": "can you please refer me to some source explaining why &quot;change&quot; should be written that way?"}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "reply_to_user": {"reputation": 159, "user_id": 8237830, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ee8cfbfaf68eb21e3587f7741f1e837b?s=128&d=identicon&r=PG&f=1", "display_name": "4xx", "link": "https://stackoverflow.com/users/8237830/4xx"}, "edited": false, "score": 1, "creation_date": 1500390853, "post_id": 45165731, "comment_id": 77309674, "body": "@4xx This video is really nice and clear: <a href=\"https://www.youtube.com/watch?v=GZPup5Iuaqw\" rel=\"nofollow noreferrer\">youtube.com/watch?v=GZPup5Iuaqw</a>"}], "tags": [], "owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "is_accepted": true, "score": 2, "last_activity_date": 1500378773, "last_edit_date": 1500378773, "creation_date": 1500377889, "answer_id": 45165731, "question_id": 45163246, "link": "https://stackoverflow.com/questions/45163246/haskell-monad-transformers-and-global-state/45165731#45165731", "title": "Haskell: Monad transformers and global state", "body": "<p>Let's try to solve your problem step-by-step starting from easier and small parts. It's important skill in programming and FP teaches you that skill in nice way. Also, working with <code>State</code> monad and especially with several effects in monad-transformers helps you to reason about effects and understand things better.</p>\n\n<ol>\n<li><p>You want to update <code>var1</code> inside your immutable data type. This can be done only by creating new object. So let's write such function:</p>\n\n<pre><code>plusFour :: Vars -&gt; Vars\nplusFour (Vars v1 v2) = Vars (v1 + 4) v2\n</code></pre>\n\n<p>There exist ways in Haskell to write this function much shorter though less understandable, but we don't care about those things now.</p></li>\n<li><p>Now you want to use this function inside <code>State</code> monad to update immutable state and by this simulate mutability. What can be told about this function only by looking at its type signature: <code>change :: StateT Vars IO a</code>? We can say that this function have several effects: it has access to <code>Vars</code> state and it can do arbitrary <code>IO</code> actions. Also this function returns value of type <code>a</code>. Hmm, this last one is strange. What is <code>a</code>? What this function should return? In imperative programming this function will have type <code>void</code> or <code>Unit</code>. It just <em>do</em> things, it doesn't return everything. Only updates context. So it's result type should be <code>()</code>. It can be different. For example we might want to return new <code>Vars</code> after change. But this is generally bad approach in programming. It makes this function more complex.</p></li>\n<li><p>After we understood what type function should have (try to always start with defining types) we can implement it. We want to change our state. There're functions that operates with stateful parts of our context. Basically, you interested in this one:</p>\n\n<p><a href=\"http://hackage.haskell.org/package/transformers-0.5.4.0/docs/Control-Monad-Trans-State-Lazy.html#v:modify\" rel=\"nofollow noreferrer\"><code>modify :: Monad m =&gt; (s -&gt; s) -&gt; StateT s m ()</code></a></p>\n\n<p><code>modify</code> function takes function which updates state. After you run this function you can observe that state is modified according to passed function. Now <code>change</code> can be written like this:</p>\n\n<pre><code>change :: StateT Vars IO ()\nchange = modify plusFour\n</code></pre>\n\n<p>You can implement <code>modify</code> (and thus <code>change</code> using only <code>put</code> and <code>get</code> functions which is nice exercise for beginner).</p></li>\n<li><p>Let's now call <code>change</code> function from some other function. What does calling mean in this case? It means that you execute monadic action <code>change</code>. This action changes your context, you don't care about it's result because it's <code>()</code>. But if you run <code>get</code> function (which binds whole state to variable) after <code>change</code> you can observe new change. If you want to print only changed component, like <code>var1</code> you can use <code>gets</code> function. And, again, what type should <code>sample</code> have? What should it return? If on the caller side you're interested only in resulting state, then, again, it should be <code>()</code> like this:</p>\n\n<pre><code>sample :: StateT Vars IO ()\nsample = do\n    change\n    v1 &lt;- gets var1\n    liftIO $ print v1\n    change\n    v1' &lt;- gets var1 \n    liftIO $ print v1'  -- this should be v1 + 4\n</code></pre></li>\n</ol>\n\n<p>This should add you some understanding of what is happening. Monad transformers require some time to get used to them though it's a powerful tool (not perfect but extremely useful).</p>\n\n<p>As as a side note I want to add that these function can be written much nicer using common Haskell design patterns. But you don't need to care about those right now, just try to understand what's going on here.</p>\n"}], "owner": {"reputation": 159, "user_id": 8237830, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ee8cfbfaf68eb21e3587f7741f1e837b?s=128&d=identicon&r=PG&f=1", "display_name": "4xx", "link": "https://stackoverflow.com/users/8237830/4xx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 297, "favorite_count": 1, "accepted_answer_id": 45165731, "answer_count": 1, "score": 3, "last_activity_date": 1500378773, "creation_date": 1500371517, "last_edit_date": 1500374110, "question_id": 45163246, "link": "https://stackoverflow.com/questions/45163246/haskell-monad-transformers-and-global-state", "title": "Haskell: Monad transformers and global state", "body": "<p>I'm trying to learn Haskell. I'm trying to write a programm that contains a \"global state\": <code>Vars</code>. I want to change a component of the state (e.g. <code>var1</code>) each time I call a function. The change can be a simple function on the components (e.g. +4). Also, it prints out the component changed. Here is what I've done so far (but I'm stuck). Edit: after running the code I want to see the recent version of the global state.</p>\n\n<pre><code>import Control.Monad.State\nimport Control.Monad.IO.Class (liftIO)\n\ndata Vars = Vars {\n var1 :: Int,\n var2 :: Float\n} deriving (Show)\n\nsample :: StateT Vars IO a\nsample = do \n        a &lt;- change\n        liftIO $ print a\n        -- I want to call change again and apply more change to the state\n\n\nchange  :: StateT Vars IO a\nchange  = do\n        dd &lt;- get\n         -- I don't know what to do next!\n\nmain = do \n  runStateT sample (Vars 20 3)\n  evalStateT sample (Vars 20 3)\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1500369372, "post_id": 45162420, "comment_id": 77293071, "body": "That&#39;s what a monad is all about."}, {"owner": {"reputation": 693, "user_id": 243779, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/c232452237112c7bd82b0afea0acd3db?s=128&d=identicon&r=PG", "display_name": "KarlsFriend", "link": "https://stackoverflow.com/users/243779/karlsfriend"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1500369495, "post_id": 45162420, "comment_id": 77293159, "body": "I should add: Without monad. That&#39;s just a good way to pass the state around."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 3, "creation_date": 1500370275, "post_id": 45162420, "comment_id": 77293699, "body": "You might like Chris Okasaki&#39;s Purely Functional Data Structures. I believe he has an implementation in there of a lazy and potentially infinite set with good asymptotics. In short: keep a list of sets of exponentially increasing size."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 2, "creation_date": 1500377970, "post_id": 45162420, "comment_id": 77299211, "body": "Excellent question, this would actually be extremely useful and seems one of the cases where Haskell has a hard time getting on par with C++ or Java."}], "answers": [{"comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1500393447, "post_id": 45162687, "comment_id": 77311645, "body": "there is no state there. it&#39;s an XY problem. the input is <i>ordered</i>, non-decreasing (otherwise OP&#39;s <code>contains</code> is simply incorrect)."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1500397244, "post_id": 45162687, "comment_id": 77314026, "body": "@WillNess I think there are really two entangled questions here. One is &quot;How do I implement an infinite set?&quot; and the other is &quot;How do I hide the fact that my operations are stateful?&quot;. My read is that the former was just intended to be a background example to use to discuss the latter, so I answered the latter. But see also my comment above, which discusses the former a bit as well (and foreshadows both the other answers)."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1500399706, "post_id": 45162687, "comment_id": 77315470, "body": "ah, yes; haven&#39;t noticed it before (past its few starting words). indeed. but it&#39;s a well known and simple trick. my reading of the Q is literal: have infinite, ordered (apparently, non-decreasing) list with good asymptotics lookup (achieved in Java by dynamically growing internally maintained set, apparently -- and since the internal object is otherwise unobservable, indeed <i>&quot;functional&quot;</i> as per OP, viz. <i>no state</i> -- so, achievable in Haskell, with laziness as usual). <i>Infinite set</i> absent the requirement of orderedness makes no sense though, because what was missing can suddenly appear!"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1500400126, "post_id": 45162687, "comment_id": 77315735, "body": "(achievable in Haskell-without-Monads that is, again as per OP&#39;s request)."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 2, "creation_date": 1500400332, "post_id": 45162687, "comment_id": 77315849, "body": "the interesting part, thus, is this: having something maintained internally in an imperative setting, well-behaving and non-observable otherwise (so, <i>&quot;encapsulated&quot;</i>), is it always representable in &quot;simple&quot; (non-monadic) Haskell? Can it always be treated as &quot;functional&quot; / &quot;pure&quot; ? I think, yes."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1500408536, "post_id": 45162687, "comment_id": 77320786, "body": "@WillNess I agree it is likely possible to transform any such hidden-mutable code to pure Haskell, but I wonder whether it&#39;s always possible with <i>at most logarithmic overhead</i>."}, {"owner": {"reputation": 693, "user_id": 243779, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/c232452237112c7bd82b0afea0acd3db?s=128&d=identicon&r=PG", "display_name": "KarlsFriend", "link": "https://stackoverflow.com/users/243779/karlsfriend"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1500469378, "post_id": 45162687, "comment_id": 77350012, "body": "@leftaroundabout That&#39;s what I was wondering. I released a hackage module <a href=\"https://hackage.haskell.org/package/lazyset\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/lazyset</a> that uses the trick with the trees that grow to the right (which has been proposed in some of the other answers). But I am left wondering if that is the best way to do it. It fetches more elements than necessary from the list, which is supoptimal."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 693, "user_id": 243779, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/c232452237112c7bd82b0afea0acd3db?s=128&d=identicon&r=PG", "display_name": "KarlsFriend", "link": "https://stackoverflow.com/users/243779/karlsfriend"}, "edited": false, "score": 0, "creation_date": 1500910889, "post_id": 45162687, "comment_id": 77531779, "body": "@KarlsFriend well, see my answer \u2013 a Trie only needs to fetch the elements that are actually used. Of course my answer will still consume <i>the entire list</i> if the element is <i>not</i> found (as it has to, in order to proove the element isn&#39;t there in a possibly-decreasing list), but it&#39;s easy to include an abort condition if you know the list is sorted."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1500911085, "post_id": 45162687, "comment_id": 77531901, "body": "BTW: nice that you&#39;ve made this into a package, but please don&#39;t export <a href=\"https://hackage.haskell.org/package/lazyset-0.1.0.0/docs/Data-Set-Lazy.html#v:fromList\" rel=\"nofollow noreferrer\"><code>fromList</code></a> like that \u2013 it&#39;s easy to think this should work with non-ascending lists too."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 4, "last_activity_date": 1500370011, "creation_date": 1500370011, "answer_id": 45162687, "question_id": 45162420, "link": "https://stackoverflow.com/questions/45162420/hide-state-in-haskell-lazyset/45162687#45162687", "title": "Hide State in Haskell - Lazyset", "body": "<p>Nope. If your function is stateful, Haskell <em>forces</em> you to declare it in the type. There are many ways, including <code>State</code>, <code>ST</code>, and <code>IO</code>, but you must use one of them.</p>\n\n<p>Although it may seem restrictive at first, I think this is ultimately a good thing. It makes it much easier to trust library code when you know the types aren't lying.</p>\n"}, {"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1500378069, "post_id": 45165317, "comment_id": 77299283, "body": "I don&#39;t think this adresses the question, because you need the entire input to even construct the ordered list."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1500390611, "post_id": 45165317, "comment_id": 77309503, "body": "@leftaroundabout my understanding of the question and the code in it is that the input comes in already sorted - &quot;ordered&quot;, as the OP says. Also the code seems to operate under that assumption. because without that assumption <code>contains</code> is just incorrect."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1500407889, "post_id": 45165317, "comment_id": 77320437, "body": "True; I didn&#39;t properly read the question. That makes the whole topic a lot less interesting, though..."}], "tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 1, "last_activity_date": 1500393071, "last_edit_date": 1500393071, "creation_date": 1500376747, "answer_id": 45165317, "question_id": 45162420, "link": "https://stackoverflow.com/questions/45162420/hide-state-in-haskell-lazyset/45165317#45165317", "title": "Hide State in Haskell - Lazyset", "body": "<p>Looks like an XY problem. Put your source through</p>\n\n<pre><code>import Data.List ( unfoldr )\nimport Control.Arrow ( (***) )\nimport qualified Data.List.Ordered as O\n\n  (\\ chunks -&gt; [ (head chunk, to_balanced_tree nlevels chunk) \n                 | (nlevels, chunk) &lt;- chunks] )\n  . unfoldr (\\ (xs,n) -&gt; case xs of [] -&gt; Nothing;\n        _ -&gt; Just ( (,) n *** flip (,) (n+1) $ splitAt (2^n-1) xs)\n  . flip (,) 2\n  . O.nub\n</code></pre>\n\n<p>and do the lookups in its result &ndash; the lazy list of trees, each tree deeper than the previous one so containing roughly twice as much elements, which should make the lookup logarithmic overall. </p>\n\n<p>Each thus constructed tree comes bundled with its minimum (leftmost) element. Constructing the balanced tree (of the form <code>data Tree a = Leaf | Node (Tree a) a (Tree a)</code>) from an increasing list of its intended elements and the given depth (known in advance) is pretty standard. </p>\n\n<p>A lookup on this list will only force as much of a source as is needed (well, more or less) to determine the membership, because of Haskell's laziness.</p>\n\n<p>Since your source is already ordered (non-decreasing), <code>O.nub</code> spends <em>O(1)</em> time on each input element, removing all duplicates and leaving just one unique element in its wake. You <em>did</em> say your source is <em>ordered</em>, and from the code for your <code>contains</code> it should be non-decreasing, otherwise that code is simply incorrect.</p>\n\n<p><code>Data.List.Ordered</code> comes from the <code>data-ordlist</code> package.</p>\n"}, {"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1500381475, "post_id": 45166625, "comment_id": 77301861, "body": "Please test this. I would be especially interested in how it compares performance-wise to your Java solution."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1500396874, "post_id": 45166625, "comment_id": 77313802, "body": "yes, creating the lazy sequence of geometrically growing substructures is precisely the idea of my answer. also, what is <code>Int</code> in <code>[(Int, a)]</code>? Where does it come from? The source is <code>[a]</code>, is it not? Similarly the lookup is supposed to be for <code>a</code>, not for <code>Int</code>. It&#39;s a <i>membership</i> test."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1500407828, "post_id": 45166625, "comment_id": 77320399, "body": "Well, a membership test <a href=\"https://existentialtype.wordpress.com/2011/03/15/boolean-blindness/\" rel=\"nofollow noreferrer\">isn&#39;t that useful</a>, so I added an associated-value type <code>a</code>. The <code>Int</code> corresponds to the <code>T</code> in the question; it would be possible to extend this to a whole lot of other types (&#224; la <a href=\"http://hackage.haskell.org/package/MemoTrie-0.6.8/docs/Data-MemoTrie.html#t:HasTrie\" rel=\"nofollow noreferrer\"><code>HasTrie</code></a>), but an <code>Ord</code> instance is not sufficient."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1500443884, "post_id": 45166625, "comment_id": 77332058, "body": "I basically read it as asking for an efficient <code>membr 77737 [3,10,..]</code> kind of thing."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 1, "last_activity_date": 1500407995, "last_edit_date": 1500407995, "creation_date": 1500380375, "answer_id": 45166625, "question_id": 45162420, "link": "https://stackoverflow.com/questions/45162420/hide-state-in-haskell-lazyset/45166625#45166625", "title": "Hide State in Haskell - Lazyset", "body": "<p><em>This answer assumes the input list comes <strong>not</strong> already sorted. If you know it is in ascending order, then the problem is actually quite easy, as explained by Will Ness.</em></p>\n\n<hr>\n\n<p>You can do this with a memo-trie. Basically the trick is to replace the mutable-<em>structure</em> set type with a <em>static structure</em>, which can then simply exploit Haskell's native lazyness. The important thing about the static structure is to have a sequence of ever-larger subtries.</p>\n\n<pre><code>import Data.List (partition)\n\ndata PTrie a = SPTrie a :\u2227\u2227: PTrie a\ndata SPTrie a = NIT | Leaf a | SPTrie a :\u2227: SPTrie a\n\nfromList :: [(Int, a)] -&gt; PTrie a\nfromList = go 0 1\n where go i\u2080 nC l = chunk :\u2227\u2227: go (i\u2080+nC) (nC*2) rest\n        where (chunkSrc, rest) = partition ((&lt;i\u2080+nC) . fst) l\n              chunk = goS i\u2080 nC chunkSrc\n       goS _ _ [] = NIT\n       goS _ 1 ((_,k):_) = Leaf k\n       goS i\u2080 nC l = goS i\u2080 nC' lChunk :\u2227: goS (i\u2080+nC') nC' rChunk\n        where nC' = nC`quot`2\n              (lChunk, rChunk) = partition ((&lt;i\u2080+nC') . fst) l\n\nllookup :: Int -&gt; PTrie a -&gt; Maybe a\nllookup = go 1\n where go nC i (chunk :\u2227\u2227: rest)\n        | i &lt; nC     = goS nC i chunk\n        | otherwise  = go (nC*2) (i-nC) rest\n       goS _ _ NIT = Nothing\n       goS _ _ (Leaf a) = Just a\n       goS nC i (lChunk:\u2227:rChunk)\n        | i&lt;nC'      = goS nC' i lChunk\n        | otherwise  = goS nC' (i-nC') rChunk\n        where nC' = nC`quot`2\n</code></pre>\n"}], "owner": {"reputation": 693, "user_id": 243779, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/c232452237112c7bd82b0afea0acd3db?s=128&d=identicon&r=PG", "display_name": "KarlsFriend", "link": "https://stackoverflow.com/users/243779/karlsfriend"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 0, "accepted_answer_id": 45162687, "answer_count": 3, "score": 4, "last_activity_date": 1500407995, "creation_date": 1500369302, "question_id": 45162420, "link": "https://stackoverflow.com/questions/45162420/hide-state-in-haskell-lazyset", "title": "Hide State in Haskell - Lazyset", "body": "<p>I'm trying to build a datastructure in Haskell that allows efficient lookup in an ordered, infinite list. </p>\n\n<p>If this was Java, I'd do something like this: </p>\n\n<pre><code>class LazySet&lt;T&gt; {\n\n    private Iterator&lt;T&gt; source;\n    private NavigableSet&lt;T&gt; set;\n\n    public LazySet(Iterator&lt;T&gt; source){\n         this.source = source;\n         this.set = new TreeSet&lt;T&gt;() ;               \n    }\n\n    public boolean contains(T elem){\n        // Fetch items from the source into the set until the element(or one greater than it)\n        // has been found\n        while (this.set.ceiling(elem) == null){\n                if (this.source.hasNext()){\n                    this.set.add(this.source.next());\n                }else{\n                    return false;\n                }\n        }\n        return this.set.contains(elem);\n    }    \n}\n</code></pre>\n\n<p>Now while this class clearly has state, that state is purely for optimization and does not affect the user of the class. So It can be used in a functional manner. </p>\n\n<p>The Haskell equivalent of this class would be stateful. </p>\n\n<p>Probably something like this: </p>\n\n<pre><code>type LazySet a = (Set a, [a])\n\nmember :: Ord a =&gt; LazySet a -&gt; a -&gt; (Bool, LazySet a)\n</code></pre>\n\n<p>And that would force the user to explicitly pass the LazySet around, which makes it much harder to use. </p>\n\n<p>Is there a way to tell haskell: Yes this thing has state, but treat it as if it didn't?</p>\n"}, {"tags": ["function", "haskell", "functional-programming", "happy"], "answers": [{"comments": [{"owner": {"reputation": 4593, "user_id": 2289983, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LG4hj.jpg?s=128&g=1", "display_name": "Damian Nadales", "link": "https://stackoverflow.com/users/2289983/damian-nadales"}, "edited": false, "score": 0, "creation_date": 1500392452, "post_id": 45164590, "comment_id": 77310950, "body": "In your monadic parser you don&#39;t use attribute grammars as far as I can see. Do you know whether in Happy you can mix monadic parsers and attribute grammars?"}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "reply_to_user": {"reputation": 4593, "user_id": 2289983, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LG4hj.jpg?s=128&g=1", "display_name": "Damian Nadales", "link": "https://stackoverflow.com/users/2289983/damian-nadales"}, "edited": false, "score": 1, "creation_date": 1500392863, "post_id": 45164590, "comment_id": 77311249, "body": "@DamianNadales seems like it&#39;s possible. Only some syntactic difference in conditional rules: <a href=\"https://www.haskell.org/happy/doc/html/sec-AtrributeGrammarsInHappy.html\" rel=\"nofollow noreferrer\">haskell.org/happy/doc/html/sec-AtrributeGrammarsInHappy.html</a> I can&#39;t imagine reason why it shouldn&#39;t be possible to mix monadic parsers and attributes."}, {"owner": {"reputation": 4593, "user_id": 2289983, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LG4hj.jpg?s=128&g=1", "display_name": "Damian Nadales", "link": "https://stackoverflow.com/users/2289983/damian-nadales"}, "edited": false, "score": 0, "creation_date": 1500397133, "post_id": 45164590, "comment_id": 77313963, "body": "I asked because the use of monadic parser requires  a special syntax <code>{%...} </code> and I don&#39;t know whether this can be done."}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "reply_to_user": {"reputation": 4593, "user_id": 2289983, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LG4hj.jpg?s=128&g=1", "display_name": "Damian Nadales", "link": "https://stackoverflow.com/users/2289983/damian-nadales"}, "edited": false, "score": 0, "creation_date": 1500397622, "post_id": 45164590, "comment_id": 77314259, "body": "@DamianNadales I guess it&#39;s not a problem. Inside <code>{%...}</code> you can write any monadic actions within your monad. I didn&#39;t use attributes, I don&#39;t have much experience with them. But seems like it&#39;s possible. Just try to experiment. And if you stuck with some small example then you can ask specific question about those two."}, {"owner": {"reputation": 4593, "user_id": 2289983, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/LG4hj.jpg?s=128&g=1", "display_name": "Damian Nadales", "link": "https://stackoverflow.com/users/2289983/damian-nadales"}, "edited": false, "score": 1, "creation_date": 1500475191, "post_id": 45164590, "comment_id": 77354960, "body": "I&#39;ve tried mixing attribute grammars and monadic parsers and I failed so far. I guess there is a reason why the Haskell parser does not use attribute grammars: <a href=\"https://github.com/ghc/ghc/blob/master/compiler/parser/Parser.y\" rel=\"nofollow noreferrer\">github.com/ghc/ghc/blob/master/compiler/parser/Parser.y</a>"}], "tags": [], "owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "is_accepted": false, "score": 2, "last_activity_date": 1500374815, "creation_date": 1500374815, "answer_id": 45164590, "question_id": 45161365, "link": "https://stackoverflow.com/questions/45161365/how-to-pass-a-function-as-argument-to-a-generated-happy-parser/45164590#45164590", "title": "How to pass a function as argument to a generated Happy parser?", "body": "<p><code>happy</code> allows you to work over Monad. It can consume <code>lexer</code> functions with one of the next two signatures:</p>\n\n<ol>\n<li><code>[Token] -&gt; a</code></li>\n<li><code>Monad m =&gt; (Token -&gt; m a) -&gt; m a</code></li>\n</ol>\n\n<p>First option is context-free and second is context-aware. If you need to pass extra arguments to <code>lexer</code> function you can do one of two things:</p>\n\n<ol>\n<li><p>Partially apply <code>lexer</code> to you function in <code>.y</code> file like this:</p>\n\n<p><code>%lexer { lexer fixedFunction }</code></p>\n\n<p>And your <code>lexer</code> function will have type <code>T -&gt; [Token] -&gt; a</code> where <code>T</code> is type of <code>fixedFunction</code>.</p></li>\n<li><p>Pass function inside some context, like <code>Reader</code> monad. I used <code>State</code> monad to track token positions. You can see my examples here: <a href=\"https://github.com/ChShersh/rogue-lang/blob/d8c44123d870fcf3472ce03c18473950378bc169/src/Rogue/Parser/ParserMonad.hs#L30\" rel=\"nofollow noreferrer\">my monad</a> and <a href=\"https://github.com/ChShersh/rogue-lang/blob/d8c44123d870fcf3472ce03c18473950378bc169/src/Rogue/Parser/Lexer.hs#L22\" rel=\"nofollow noreferrer\">my lexer</a>.</p></li>\n</ol>\n\n<p>With any solution you can add extra arguments and some extra context to your <code>lexer</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 0, "creation_date": 1500475937, "post_id": 45183563, "comment_id": 77355596, "body": "Okay, now I understand you problem better. Yes, AST for <code>happy</code> needs <code>Show</code> instance. You can just add fake <code>Show</code> instances for all types of your functions and be happy with it. But probably it will be much simpler to just use <i>parser combinators</i> instead of <i>parser generators</i>."}], "tags": [], "owner": {"reputation": 51, "user_id": 3737651, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/c249acf38009110ae5222ae3a1700242?s=128&d=identicon&r=PG&f=1", "display_name": "Pierre van de Laar", "link": "https://stackoverflow.com/users/3737651/pierre-van-de-laar"}, "is_accepted": false, "score": 0, "last_activity_date": 1500466032, "last_edit_date": 1500466032, "creation_date": 1500448915, "answer_id": 45183563, "question_id": 45161365, "link": "https://stackoverflow.com/questions/45161365/how-to-pass-a-function-as-argument-to-a-generated-happy-parser/45183563#45183563", "title": "How to pass a function as argument to a generated Happy parser?", "body": "<p>This example is based on the standard happy example (\nsee e.g. <a href=\"https://www.haskell.org/happy/doc/html/sec-using.html\" rel=\"nofollow noreferrer\">https://www.haskell.org/happy/doc/html/sec-using.html</a>)\nThis example uses no monads and no attributes.</p>\n\n<p>The Expression parser needs a function to \"standardize\" the variable names.\nFor example, make them case insensitive or, like in old programming languages, consider only the first 8 characters.</p>\n\n<p>The parser is:</p>\n\n<pre><code>{\nmodule Calc\n( calc\n, lexer\n)\nwhere\nimport Data.Char\n}\n%name calc\n%tokentype { Token }\n%error { parseError }\n\n%token \n      let             { TokenLet }\n      in              { TokenIn }\n      int             { TokenInt $$ }\n      var             { TokenVar $$ }\n      '='             { TokenEq }\n      '+'             { TokenPlus }\n      '-'             { TokenMinus }\n      '*'             { TokenTimes }\n      '/'             { TokenDiv }\n      '('             { TokenOB }\n      ')'             { TokenCB }\n\n%%\n\nExp   :: { (String -&gt; String) -&gt; Exp } \n      : let var '=' Exp in Exp  { \\p -&gt; Let (p $2) ($4 p) ($6 p) }\n      | Exp1                    { \\p -&gt; Exp1 ($1 p) }\n\nExp1  :: { (String -&gt; String) -&gt; Exp1 } \n      : Exp1 '+' Term           { \\p -&gt; Plus ($1 p) ($3 p) }\n      | Exp1 '-' Term           { \\p -&gt; Minus ($1 p) ($3 p) }\n      | Term                    { \\p -&gt; Term ($1 p) }\n\nTerm  :: { (String -&gt; String) -&gt; Term } \n      : Term '*' Factor         { \\p -&gt; Times ($1 p) ($3 p) }\n      | Term '/' Factor         { \\p -&gt; Div ($1 p) ($3 p) }\n      | Factor                  { \\p -&gt; Factor ($1 p) }\n\nFactor:: { (String -&gt; String) -&gt; Factor }\n      : int                     { \\p -&gt; Int $1 }\n      | var                     { \\p -&gt; Var (p $1) }\n      | '(' Exp ')'             { \\p -&gt; Brack ($2 p) }\n\n{\nparseError :: [Token] -&gt; a\nparseError _ = error \"Parse error\"\n\ndata Exp  \n      = Let String Exp Exp\n      | Exp1 Exp1\n      deriving Show\n\ndata Exp1 \n      = Plus Exp1 Term \n      | Minus Exp1 Term \n      | Term Term\n      deriving Show\n\ndata Term \n      = Times Term Factor \n      | Div Term Factor \n      | Factor Factor\n      deriving Show\n\ndata Factor \n      = Int Int \n      | Var String \n      | Brack Exp\n      deriving Show\n\ndata Token\n      = TokenLet\n      | TokenIn\n      | TokenInt Int\n      | TokenVar String\n      | TokenEq\n      | TokenPlus\n      | TokenMinus\n      | TokenTimes\n      | TokenDiv\n      | TokenOB\n      | TokenCB\n deriving Show\n\n\nlexer :: String -&gt; [Token]\nlexer [] = []\nlexer (c:cs) \n      | isSpace c = lexer cs\n      | isAlpha c = lexVar (c:cs)\n      | isDigit c = lexNum (c:cs)\nlexer ('=':cs) = TokenEq : lexer cs\nlexer ('+':cs) = TokenPlus : lexer cs\nlexer ('-':cs) = TokenMinus : lexer cs\nlexer ('*':cs) = TokenTimes : lexer cs\nlexer ('/':cs) = TokenDiv : lexer cs\nlexer ('(':cs) = TokenOB : lexer cs\nlexer (')':cs) = TokenCB : lexer cs\n\nlexNum cs = TokenInt (read num) : lexer rest\n      where (num,rest) = span isDigit cs\n\nlexVar cs =\n   case span isAlpha cs of\n      (\"let\",rest) -&gt; TokenLet : lexer rest\n      (\"in\",rest)  -&gt; TokenIn : lexer rest\n      (var,rest)   -&gt; TokenVar var : lexer rest\n\n}\n</code></pre>\n\n<p>and the Main using the parser is</p>\n\n<pre><code>module Main\n\nwhere \nimport Data.Char\nimport Calc\n\ncaseSensitive :: String -&gt; String\ncaseSensitive = id\n\ncaseInsensitive :: String -&gt; String\ncaseInsensitive = map toUpper\n\nfirstEight :: String -&gt; String\nfirstEight = take 8\n\nmain :: IO ()\nmain = getContents &gt;&gt;= (\\a -&gt; print (calc (lexer a) caseInsensitive) )\n</code></pre>\n\n<p>Using the expression parser with the caseInsensitive function and the input</p>\n\n<pre><code>let aap = 7 in Aap + AAP\n</code></pre>\n\n<p>result in the output</p>\n\n<pre><code>Let \"AAP\" (Exp1 (Term (Factor (Int 7)))) (Exp1 (Plus (Term (Factor (Var \"AAP\"))) (Factor (Var \"AAP\"))))\n</code></pre>\n\n<p>This answers my own question partly: I would like to pass the function around using attributes and not explicitly as in this example...</p>\n"}], "owner": {"reputation": 51, "user_id": 3737651, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/c249acf38009110ae5222ae3a1700242?s=128&d=identicon&r=PG&f=1", "display_name": "Pierre van de Laar", "link": "https://stackoverflow.com/users/3737651/pierre-van-de-laar"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 364, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1500466032, "creation_date": 1500366516, "question_id": 45161365, "link": "https://stackoverflow.com/questions/45161365/how-to-pass-a-function-as-argument-to-a-generated-happy-parser", "title": "How to pass a function as argument to a generated Happy parser?", "body": "<p>Happy generates a parser with signature :: <code>[Token] -&gt; a</code></p>\n\n<p>I would like to generate a parameterized parser, i.e., a function that needs a function as argument to deliver a parser.\nSo I would like the signature :: <code>(x-&gt;y) -&gt; [Token] -&gt; a</code>.\nYet, I can also work with the signature :: <code>[Token] -&gt; (x-&gt;y) -&gt; a</code>.</p>\n\n<p>When the function is fixed, I can solve it \nby importing and assigning the function.</p>\n\n<pre><code>import Functions (fixedFunction)\n\nRoot : Production Rule\n       { $$.argument = fixedFunction\n       }\n</code></pre>\n\n<p>When the argument is an instance of Show, I can solve it as follows</p>\n\n<pre><code>Alex:\n   data Token = ...\n              |  Carg            ArgType\nHappy:\n    %token \n        ...\n        Argument { Carg $$ }\n\n    Root : Argument Production Rule\n           {  $$.argument = $1\n           }\n</code></pre>\n\n<p>See e.g. my project TorXakis for more details, in particular the folder <a href=\"https://github.com/TorXakis/TorXakis/tree/develop/sys/front/src\" rel=\"nofollow noreferrer\">https://github.com/TorXakis/TorXakis/tree/develop/sys/front/src</a></p>\n\n<p>However, I am unable to pass a variable argument that is a function since a function does not derive from Show!\nSince Haskell is a functional language, I have the strong suspicion that I am missing something trivial, yet I don't see it...\nCan anybody please provide an example of passing a function to a happy-generated parser?\nThanks in advance!</p>\n\n<p>Pierre</p>\n"}, {"tags": ["haskell", "comonad", "fixpoint-combinators"], "comments": [{"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1500366552, "post_id": 45158934, "comment_id": 77291064, "body": "I just watched the <a href=\"https://www.youtube.com/watch?v=F7F-BzOB670\" rel=\"nofollow noreferrer\">referenced video for <code>kfix</code></a> from the  <a href=\"https://hackage.haskell.org/package/comonad-5.0.1/docs/Control-Comonad.html\" rel=\"nofollow noreferrer\"><code>Control.Comonad</code> documentation</a>. Thanks for introducing me to this."}, {"owner": {"reputation": 1835, "user_id": 3907685, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/4a9d7cdfc525e689e6baefb7d2158fb0?s=128&d=identicon&r=PG", "display_name": "Chris Penner", "link": "https://stackoverflow.com/users/3907685/chris-penner"}, "reply_to_user": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1500385104, "post_id": 45158934, "comment_id": 77304802, "body": "That video is what spawned my curiosity! I have yet to try his spreadsheet lib,  but that&#39;ll be next!"}], "answers": [{"comments": [{"owner": {"reputation": 1835, "user_id": 3907685, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/4a9d7cdfc525e689e6baefb7d2158fb0?s=128&d=identicon&r=PG", "display_name": "Chris Penner", "link": "https://stackoverflow.com/users/3907685/chris-penner"}, "edited": false, "score": 0, "creation_date": 1500426313, "post_id": 45161341, "comment_id": 77327217, "body": "This is great! Thanks for the link to that article, very useful! I applied your changes to duplicate and I can now do some simple kfix attempts now; I&#39;m still a little confused about some things though; for instance I&#39;m not getting my expected output for this example: <a href=\"https://gist.github.com/ChrisPenner/a8e7a72f4765aaa9941a58b70fd57ec3\" rel=\"nofollow noreferrer\">gist.github.com/ChrisPenner/a8e7a72f4765aaa9941a58b70fd57ec3</a>"}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "reply_to_user": {"reputation": 1835, "user_id": 3907685, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/4a9d7cdfc525e689e6baefb7d2158fb0?s=128&d=identicon&r=PG", "display_name": "Chris Penner", "link": "https://stackoverflow.com/users/3907685/chris-penner"}, "edited": false, "score": 0, "creation_date": 1500427844, "post_id": 45161341, "comment_id": 77327597, "body": "I don&#39;t think <code>moveLeft</code> and <code>moveRight</code> are lazy enough (or can be lazy enough) for <code>Tape [a] a [a]</code>. <code>moveLeft</code> has to look inside the left side before deciding what it&#39;s doing to compute the left, middle, or right values. My intuition says that any reference that needs to inspect the structure to decide the structure isn&#39;t going to work if it&#39;s used as part of <code>duplicate</code> or <code>&lt;@&gt;</code>. A <a href=\"https://gist.github.com/Cedev/c9f3769eb7bab6eea6c323925cae8215\" rel=\"nofollow noreferrer\"><code>Tape (Stream a) a (Stream a)</code> works</a>."}, {"owner": {"reputation": 1835, "user_id": 3907685, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/4a9d7cdfc525e689e6baefb7d2158fb0?s=128&d=identicon&r=PG", "display_name": "Chris Penner", "link": "https://stackoverflow.com/users/3907685/chris-penner"}, "edited": false, "score": 0, "creation_date": 1500429807, "post_id": 45161341, "comment_id": 77328050, "body": "That&#39;s makes sense, as for the example I posted, it doesn&#39;t use moveLeft or moveRight, and every execution depends only on what&#39;s to the left, so I&#39;d figure the leftmost cell should execute and flow through to the others?"}, {"owner": {"reputation": 1835, "user_id": 3907685, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/4a9d7cdfc525e689e6baefb7d2158fb0?s=128&d=identicon&r=PG", "display_name": "Chris Penner", "link": "https://stackoverflow.com/users/3907685/chris-penner"}, "edited": false, "score": 0, "creation_date": 1500430837, "post_id": 45161341, "comment_id": 77328269, "body": "Full disclosure, the end goal is to use kfix to compute a 2D Vector using results of computing the neighbours of each cell. In theory each cell has exactly one neighbour as a dependency, so the computation should terminate. Hopefully Vectors are lazy enough? I&#39;m making vector a comonad by pairing it with an index, and I restrict all vectors to be the same dimensions"}, {"owner": {"reputation": 1835, "user_id": 3907685, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/4a9d7cdfc525e689e6baefb7d2158fb0?s=128&d=identicon&r=PG", "display_name": "Chris Penner", "link": "https://stackoverflow.com/users/3907685/chris-penner"}, "edited": false, "score": 0, "creation_date": 1500431020, "post_id": 45161341, "comment_id": 77328312, "body": "Maybe I&#39;ll end up using this lib: <a href=\"https://github.com/kwf/ComonadSheet/blob/master/README.md\" rel=\"nofollow noreferrer\">github.com/kwf/ComonadSheet/blob/master/README.md</a> but I&#39;d like to give it a try on my own first!"}, {"owner": {"reputation": 1835, "user_id": 3907685, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/4a9d7cdfc525e689e6baefb7d2158fb0?s=128&d=identicon&r=PG", "display_name": "Chris Penner", "link": "https://stackoverflow.com/users/3907685/chris-penner"}, "edited": false, "score": 0, "creation_date": 1500437489, "post_id": 45161341, "comment_id": 77329716, "body": "Looks like that lib is completely BitRot at this point, guess I&#39;m on my own."}], "tags": [], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "is_accepted": true, "score": 4, "last_activity_date": 1500366442, "creation_date": 1500366442, "answer_id": 45161341, "question_id": 45158934, "link": "https://stackoverflow.com/questions/45158934/using-comonad-fix-combinators/45161341#45161341", "title": "Using Comonad Fix Combinators", "body": "<p>The <code>ComonadApply</code> and <code>Comonad</code> instances for <code>Tape</code> are insufficiently lazy to be used with <code>kfix</code>.</p>\n\n<p><code>duplicate</code> for <code>Tape</code> requires that you prove the tape exists before it can conclude that the result is a <code>Tape</code></p>\n\n<pre><code>instance Comonad Tape where\n  extract (Tape _ a _) = a\n  duplicate w@(Tape l _ r) = Tape lefts w rights\n--             ^             ^\n-- matches a Tape            |               \n-- before determining that the result is a Tape\n</code></pre>\n\n<p><code>&lt;@&gt;</code> checks that both arguments are tapes before it can conclude that the result is a <code>Tape</code></p>\n\n<pre><code>instance ComonadApply Tape where\n  Tape l f r &lt;@&gt; Tape l' a r' = Tape (zipWith ($) l l') (f a) (zipWith ($) r r')\n-- ^             ^              ^\n-- matches two Tapes            |\n-- before detrmining that the result is a Tape\n</code></pre>\n\n<p>Combined there's no way for <code>kfix (Tape _ _ _)</code> to ever produce <code>Tape</code></p>\n\n<pre><code>kfix w            = fix $ \\u -&gt; w            &lt;@&gt; duplicate u\nkfix (Tape _ _ _) = fix $ \\u -&gt; (Tape _ _ _) &lt;@&gt; duplicate u\nkfix (Tape _ _ _) = fix $ \\u -&gt; (Tape _ _ _) &lt;@&gt; case u of (Tape _ _ _) -&gt; ...\n--                         ^                                |\n--                         ----------- &lt;&lt;loop&gt;&gt; -------------\n</code></pre>\n\n<p>You can fix this by making <code>duplicate</code>, <code>&lt;@&gt;</code>, or both more productive by using <a href=\"https://www.haskell.org/tutorial/patterns.html\" rel=\"nofollow noreferrer\">irrefutable patterns</a>. A pattern <code>~(Tape l a r)</code> matches even if the <code>Tape</code> constructor hasn't been produced yet. Here's how you'd use it to make <code>duplicate</code> productive</p>\n\n<pre><code>instance Comonad Tape where\n  extract (Tape _ a _) = a\n  duplicate w@(~(Tape l _ r)) = Tape lefts w rights\n    where\n      lefts = zipWith const (tail $ iterate moveLeft w) l\n      rights = zipWith const (tail $ iterate moveRight w) r\n</code></pre>\n\n<p>Irrefutable pattern matches are equivalent to using functions to extract values. For <code>duplicate</code> it's equivalent to writing</p>\n\n<pre><code>left  (Tape l _ _) = l\nright (Tape _ _ r) = r\n\ninstance Comonad Tape where\n  extract (Tape _ a _) = a\n  duplicate w = Tape lefts w rights\n    where\n      l = left w\n      r = right w\n      ...\n</code></pre>\n"}], "owner": {"reputation": 1835, "user_id": 3907685, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/4a9d7cdfc525e689e6baefb7d2158fb0?s=128&d=identicon&r=PG", "display_name": "Chris Penner", "link": "https://stackoverflow.com/users/3907685/chris-penner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 232, "favorite_count": 0, "accepted_answer_id": 45161341, "answer_count": 1, "score": 3, "last_activity_date": 1562457262, "creation_date": 1500358790, "last_edit_date": 1562457262, "question_id": 45158934, "link": "https://stackoverflow.com/questions/45158934/using-comonad-fix-combinators", "title": "Using Comonad Fix Combinators", "body": "<p>So I've been experimenting with fixed points lately and have finally struggled\nthrough regular fixed points enough to discover some uses; now I'm moving onto\ncomonadic fixed points and I'm afraid I've gotten stuck;</p>\n\n<p>Here's a few examples of what I've tried and what has/hasn't worked:</p>\n\n<pre><code>{-# language DeriveFunctor #-}\n{-# language FlexibleInstances #-}\nmodule WFix where\n\nimport Control.Comonad\nimport Control.Comonad.Cofree\nimport Control.Monad.Fix\n</code></pre>\n\n<p>So I started with loeb's theorem as a list; each element of the list is a function\nwhich takes the end result to compute its answer; this lets me do 'spreadsheet'\ncalculations where values can depend on other values.</p>\n\n<pre><code>spreadSheetFix :: [Int]\nspreadSheetFix = fix $ \\result -&gt; [length result, (result !! 0) * 10, (result !! 1) + 1, sum (take 3 result)]\n</code></pre>\n\n<p>Okay, so I have basic fix working, time to move on to the comonad types!\nHere's a few simple comonads to use for examples:</p>\n\n<pre><code>  data Stream a = S a (Stream a)\n    deriving (Eq, Show, Functor)\n\n  next :: Stream a -&gt; Stream a\n  next (S _ s) = s\n\n  instance Comonad Stream where\n    extract (S a _) = a\n    duplicate s@(S _ r) = S s (duplicate r)\n\n  instance ComonadApply Stream where\n    (S f fs) &lt;@&gt; (S a as) = S (f a) (fs &lt;@&gt; as)\n\n  data Tape a = Tape [a] a [a]\n    deriving (Show, Eq, Functor)\n\n  moveLeft, moveRight :: Tape a -&gt; Tape a\n  moveLeft w@(Tape [] _ _) = w\n  moveLeft (Tape (l:ls) a rs) = Tape ls l (a:rs)\n\n  moveRight w@(Tape _ _ []) = w\n  moveRight (Tape ls a (r:rs)) = Tape (a:ls) r rs\n\n  instance Comonad Tape where\n    extract (Tape _ a _) = a\n    duplicate w@(Tape l _ r) = Tape lefts w rights\n      where\n        lefts = zipWith const (tail $ iterate moveLeft w) l\n        rights = zipWith const (tail $ iterate moveRight w) r\n\n  instance ComonadApply Tape where\n    Tape l f r &lt;@&gt; Tape l' a r' = Tape (zipWith ($) l l') (f a) (zipWith ($) r r')\n</code></pre>\n\n<p>Okay so the following combinators come from <a href=\"https://hackage.haskell.org/package/comonad-5.0.1/docs/Control-Comonad.html\" rel=\"nofollow noreferrer\">Control.Comonad</a>;</p>\n\n<pre><code>wfix :: Comonad w =&gt; w (w a -&gt; a) -&gt; a\nwfix w = extract w (extend wfix w)\n\ncfix :: Comonad w =&gt; (w a -&gt; a) -&gt; w a\ncfix f = fix (extend f)\n\nkfix :: ComonadApply w =&gt; w (w a -&gt; a) -&gt; w a\nkfix w = fix $ \\u -&gt; w &lt;@&gt; duplicate u\n</code></pre>\n\n<p>I started with trying out wfix:</p>\n\n<pre><code>streamWFix :: Int\nstreamWFix = wfix st\n  where\n    incNext = succ . extract . next\n    st = (S incNext (S incNext (S (const 0) st)))\n\n&gt; streamWFix\n-- 2\n</code></pre>\n\n<p>This one seems to work by calling the first <code>w a -&gt; a</code> on w until reaching\na resolution <code>const 0</code> in this case; that makes sense. We can also do this\nwith a Tape:</p>\n\n<pre><code>selfReferentialWFix :: Int\nselfReferentialWFix = wfix $ Tape [const 10] ((+5) . extract . moveLeft) []\n-- selfReferentialWFix == 15\n</code></pre>\n\n<p>K, I think I get that one, but the next ones I'm kind of stuck,\nI don't seem to have an intuition for what cfix is supposed to do.\nEven the simplest possible thing I could think of spins forever \nwhen I evaluate it; even trying to extract the first element of the stream\nusing getOne fails.</p>\n\n<pre><code>getOne :: Stream a -&gt; a\ngetOne (S a _) = a\n\nsimpleCFix :: Stream Int\nsimpleCFix = cfix go\n  where\n    go _ = 0\n</code></pre>\n\n<p>Similarly with kfix; even simple tries don't seem to terminate.\nMy understanding of kfix was that the function in each 'slot' gets\npassed a copy of the evaluated comonad focused on that spot; is that the case?</p>\n\n<p>I tried using 'getOne' on this:</p>\n\n<pre><code>streamKFix :: Stream Int\nstreamKFix = kfix st\n  where\n    go _ = 0\n    st = S go st\n</code></pre>\n\n<p>Here's a finite attempt using Tape which also fails to run:</p>\n\n<pre><code>tapeKFix :: Tape Int\ntapeKFix = kfix $ Tape [] (const 0) []\n</code></pre>\n\n<p>So; down to my question, could someone please offer some runnable (non-trivial)\nexamples of using cfix and kfix, and explain how they work? I plan to use kfix to eventually do a \"Conway's\ngame of life\" style experiment, am I correct in thinking that kfix would be useful\nin working with neighbourhoods around a given cell? </p>\n\n<p>Feel free to ask\nany clarifying questions and help me expand my knowledge and intuition of fix!</p>\n\n<p>Thanks! </p>\n"}, {"tags": ["sql", "ruby-on-rails", "haskell", "delayed-job"], "comments": [{"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 1, "creation_date": 1500352117, "post_id": 45157231, "comment_id": 77283588, "body": "You&#39;re asking about SQL but you tagged your question with two irrelevant tags and not with SQL."}, {"owner": {"reputation": 2692, "user_id": 448858, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/c225e2d1fd51a59a99e735963041243d?s=128&d=identicon&r=PG", "display_name": "Chris", "link": "https://stackoverflow.com/users/448858/chris"}, "edited": false, "score": 0, "creation_date": 1500352167, "post_id": 45157231, "comment_id": 77283602, "body": "Let me know how the Haskell goes as well ;)"}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "reply_to_user": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1500373467, "post_id": 45157231, "comment_id": 77295938, "body": "@ReinHenrichs thanks for pointing that out :)"}], "answers": [{"tags": [], "owner": {"reputation": 2692, "user_id": 448858, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/c225e2d1fd51a59a99e735963041243d?s=128&d=identicon&r=PG", "display_name": "Chris", "link": "https://stackoverflow.com/users/448858/chris"}, "is_accepted": false, "score": 1, "last_activity_date": 1500352115, "creation_date": 1500352115, "answer_id": 45157523, "question_id": 45157231, "link": "https://stackoverflow.com/questions/45157231/trying-to-understand-the-delayed-job-polling-query/45157523#45157523", "title": "Trying to understand the delayed job polling query", "body": "<p>The statement is probably fine. The context of the whole statement is to <em>take the lock</em> on the highest-priority job by setting its <code>locked_at</code>/<code>locked_by</code> fields.</p>\n\n<p>The where condition is saying something like: \"if <code>run_at</code> is sooner than now (it's due) AND, it's either not locked or it was locked more than four hours ago... <em>alternatively</em> that's all overridden if it was me that locked it, and of course, if it hasn't failed THEN lock it.\" So if I'm reading it correctly it looks kinda like it's running things that are ready to run but with a timeout so that things can't be locked-out forever.</p>\n\n<p>To your second question, <code>AND</code> has a higher precedence than <code>OR</code>:</p>\n\n<pre><code>SELECT 'yes' WHERE false AND false OR true;   -- 'yes', 1 row\nSELECT 'yes' WHERE (false AND false) OR true; -- 'yes', 1 row\nSELECT 'yes' WHERE false AND (false OR true); -- 0 rows\n</code></pre>\n\n<p>The first two statements <em>mean</em> the same thing, the third one is different.</p>\n\n<p>The second point may just be a rough sort of ownership system? If the current process is the one that locked something, it should be able to override that lock.</p>\n"}], "owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 98, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1500373452, "creation_date": 1500350218, "last_edit_date": 1500373452, "question_id": 45157231, "link": "https://stackoverflow.com/questions/45157231/trying-to-understand-the-delayed-job-polling-query", "title": "Trying to understand the delayed job polling query", "body": "<p>I'm trying to port Delayed Job to Haskell and am unable to understand the <code>WHERE</code> clause in the query that DJ fires to poll the next job:</p>\n\n<pre><code>UPDATE \"delayed_jobs\"\nSET locked_at = '2017-07-18 03:33:51.729884',\n    locked_by = 'delayed_job.0 host:myhostname pid:21995'\nWHERE id IN (\n  SELECT id FROM \"delayed_jobs\"\n  WHERE\n  (\n      (\n        run_at &lt;= '2017-07-18 03:33:51.729457'\n        AND (locked_at IS NULL OR locked_at &lt; '2017-07-17 23:33:51.729488')\n        OR locked_by = 'delayed_job.0 host:myhostname pid:21995'\n      )\n      AND failed_at IS NULL\n  ) ORDER BY priority ASC, run_at ASC LIMIT 1 FOR UPDATE) RETURNING *\n</code></pre>\n\n<p>The structure of the <code>WHERE</code> clause is the following:</p>\n\n<pre><code>(run_at_condition AND locked_at_condition OR locked_by_condition) \nAND failed_at_condition\n</code></pre>\n\n<ul>\n<li>Is there a set of inner parentheses missing in <code>run_at_condition AND locked_at_condition OR locked_by_condition</code>? In what precedence are the AND/OR clauses evaluated?</li>\n<li>What is the purpose of the <code>locked_by_condition</code> where it <em>seems</em> to be picking up jobs that have already been locked by the current DJ process?!</li>\n</ul>\n"}, {"tags": ["haskell", "higher-order-functions"], "answers": [{"comments": [{"owner": {"reputation": 73, "user_id": 2913687, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/61d8f7a79624abbd9cbdc0c3f3619e54?s=128&d=identicon&r=PG&f=1", "display_name": "patronus", "link": "https://stackoverflow.com/users/2913687/patronus"}, "edited": false, "score": 0, "creation_date": 1500349021, "post_id": 45156999, "comment_id": 77282746, "body": "Ah I see it now. So how was the type of &#39;f&#39; evaluated to be of type a-&gt;a. How did the interpreter deduce it&#39;s type? I have not defined &#39;f&#39; anywhere."}, {"owner": {"reputation": 73, "user_id": 2913687, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/61d8f7a79624abbd9cbdc0c3f3619e54?s=128&d=identicon&r=PG&f=1", "display_name": "patronus", "link": "https://stackoverflow.com/users/2913687/patronus"}, "edited": false, "score": 1, "creation_date": 1500349396, "post_id": 45156999, "comment_id": 77282838, "body": "Someone seem to have asked a similar question here: <a href=\"https://stackoverflow.com/questions/42243902/haskell-function-type-clarification?rq=1\" title=\"haskell function type clarification\">stackoverflow.com/questions/42243902/&hellip;</a>"}], "tags": [], "owner": {"reputation": 3633, "user_id": 675154, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/23da6806cab4830b5d1b15ef2a410541?s=128&d=identicon&r=PG", "display_name": "delta", "link": "https://stackoverflow.com/users/675154/delta"}, "is_accepted": true, "score": 4, "last_activity_date": 1500348632, "creation_date": 1500348632, "answer_id": 45156999, "question_id": 45156938, "link": "https://stackoverflow.com/questions/45156938/haskell-type-not-clear/45156999#45156999", "title": "Haskell type not clear", "body": "<pre><code>twice    f            x  =   f (f x)\ntwice :: (a -&gt; a) -&gt;  a  -&gt;  a\n</code></pre>\n\n<p>it is like this.</p>\n\n<p><code>f</code> is of type <code>a -&gt; a</code>, x is of type <code>a</code>, <code>f (f x)</code> is of type <code>a</code>.</p>\n\n<p>You should pass <code>f</code> as <code>a -&gt; a</code> function, such as <code>* 2</code></p>\n"}, {"tags": [], "owner": {"reputation": 64, "user_id": 6086598, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/O3B3W.jpg?s=128&g=1", "display_name": "Guillaume Ongenae", "link": "https://stackoverflow.com/users/6086598/guillaume-ongenae"}, "is_accepted": false, "score": 1, "last_activity_date": 1500349394, "creation_date": 1500349394, "answer_id": 45157099, "question_id": 45156938, "link": "https://stackoverflow.com/questions/45156938/haskell-type-not-clear/45157099#45157099", "title": "Haskell type not clear", "body": "<p>Yes, it's correct.</p>\n\n<p><code>f</code> has a type of <code>a -&gt; a</code></p>\n\n<p>It takes <code>x</code> which has a type of <code>a</code> and should be able to use his output again, so the output should be the same type as the input.</p>\n\n<p>And <code>twice</code> has the same output type as a call from <code>f</code>, so <code>a</code>.</p>\n\n<p>Which gives us this:</p>\n\n<pre><code>twice :: (a -&gt; a) -&gt; a -&gt; a\ntwice     f          x =  f (f x)\n</code></pre>\n"}], "owner": {"reputation": 73, "user_id": 2913687, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/61d8f7a79624abbd9cbdc0c3f3619e54?s=128&d=identicon&r=PG&f=1", "display_name": "patronus", "link": "https://stackoverflow.com/users/2913687/patronus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 0, "accepted_answer_id": 45156999, "answer_count": 2, "score": 1, "last_activity_date": 1500349691, "creation_date": 1500348218, "last_edit_date": 1500349691, "question_id": 45156938, "link": "https://stackoverflow.com/questions/45156938/haskell-type-not-clear", "title": "Haskell type not clear", "body": "<p>One of the exercises I am trying has defined a function as follows:</p>\n\n<pre><code>twice f x = f (f x)\n</code></pre>\n\n<p>When I print the type of twice I see:</p>\n\n<pre><code>Main&gt; :t twice\ntwice :: (a -&gt; a) -&gt; a -&gt; a\n</code></pre>\n\n<p>Not sure I understand the output here. So <code>twice</code> takes an input of type function (which is of type <code>a -&gt; a</code>). Is this correct? If so then how was the <code>f</code> evaluated to be of type function (<code>a -&gt; a</code>)? And then what is the return type of <code>twice</code> here? </p>\n"}, {"tags": ["haskell", "state", "applicative"], "comments": [{"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 2, "creation_date": 1500334683, "post_id": 45154169, "comment_id": 77279410, "body": "This question seems like a ripe opportunity to <a href=\"https://xkcd.com/356/\" rel=\"nofollow noreferrer\">nerd snipe</a>. Here&#39;s a puzzling (but valid!) definition of <code>&gt;&gt;=</code> for a <code>State</code>-like monad for you to think about: <code>State f &gt;&gt;= g = State $ \\s -&gt; let { (u, x) = f t; (t, y) = runState (g x) s } in (u, y)</code>. Observe how <code>x</code>, <code>y</code> go from top to bottom but <code>s</code>, <code>t</code>, <code>u</code> go from bottom to top. Still makes my brain hurt :)"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 1, "creation_date": 1500344028, "post_id": 45154169, "comment_id": 77281563, "body": "If you haven&#39;t seen it, <a href=\"https://lukepalmer.wordpress.com/2008/08/10/mindfuck-the-reverse-state-monad/\" rel=\"nofollow noreferrer\">you might like this</a>"}, {"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1500344214, "post_id": 45154169, "comment_id": 77281609, "body": "@BenjaminHodgson That&#39;s oddly beautiful"}, {"owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 1, "creation_date": 1500344541, "post_id": 45154169, "comment_id": 77281680, "body": "@BenjaminHodgson: <a href=\"https://hackage.haskell.org/package/tardis\" rel=\"nofollow noreferrer\">Why not both?</a>"}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 4, "last_activity_date": 1500328421, "creation_date": 1500328421, "answer_id": 45154252, "question_id": 45154169, "link": "https://stackoverflow.com/questions/45154169/applicative-instance-for-state-order-of-data-flow/45154252#45154252", "title": "Applicative instance for State - order of data flow", "body": "<p>Both are reasonable. Note that you can get either of them from the other one:</p>\n\n<pre><code>x &lt;*2&gt; y = flip ($) &lt;$&gt; y &lt;*1&gt; x\n</code></pre>\n\n<p>It is a library convention, though, that the \"effects\" are performed left-to-right. Hence, the first version looks more familiar.</p>\n"}, {"comments": [{"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "edited": false, "score": 3, "creation_date": 1500338627, "post_id": 45154274, "comment_id": 77280331, "body": "I don\u2019t think this is completely true, assuming a <code>Monad</code> instance is given for <code>State</code>. The <a href=\"https://hackage.haskell.org/package/base-4.9.1.0/docs/Control-Applicative.html#t:Applicative\" rel=\"nofollow noreferrer\"><code>Applicative</code> laws state</a> that if <code>f</code> is also a <code>Monad</code>, it should satisfy <code>(&lt;*&gt;) = ap</code>, which the first definition would violate, assuming the usual <code>Monad</code> instance."}], "tags": [], "owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "is_accepted": true, "score": 4, "last_activity_date": 1500328582, "creation_date": 1500328582, "answer_id": 45154274, "question_id": 45154169, "link": "https://stackoverflow.com/questions/45154169/applicative-instance-for-state-order-of-data-flow/45154274#45154274", "title": "Applicative instance for State - order of data flow", "body": "<p>I believe both are correct because they don't violate any Applicative laws as far as I can see. However, the first is what is actually used. I think this is because of convention: it is expected that the effects of <code>&lt;*&gt;</code>'s left-hand arguments apply first, before its right-hand argument. Compare with <code>IO</code>, for example, where</p>\n\n<pre><code>(,) &lt;$&gt; readLn &lt;*&gt; getLine :: IO (Int, String)\n</code></pre>\n\n<p>prompts for an Int first, and then reads a String. It's nice to have State behave in a similar way.</p>\n"}, {"comments": [{"owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "edited": false, "score": 0, "creation_date": 1500329384, "post_id": 45154296, "comment_id": 77277919, "body": "Thanks for tip! I will try not to overuse this notation then."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "reply_to_user": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "edited": false, "score": 2, "creation_date": 1500331618, "post_id": 45154296, "comment_id": 77278627, "body": "@Ikciwor There&#39;s nothing wrong with using this notation in general. The advice is to not use it <i>here</i> because it&#39;s sorta backwards dependency-wise: Monad is a more powerful feature built on top of Applicative, and so using monadic notation to define <code>&lt;*&gt;</code> is sorta like a circular dependency. Of course in practice you can define them in either order if you know both will exist, but when you&#39;re trying to understand how they work it&#39;s better to build them up in order from least to most powerful."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 2, "creation_date": 1500331874, "post_id": 45154296, "comment_id": 77278695, "body": "Exactly, that&#39;s what I mean&#39;t \u2013 monad is strictly more special than applicative. This isn&#39;t really that critical here because the <code>do</code> actually uses a completely different monad from the one you&#39;re defining (function/reader monad), but then again that is a monad instance that gives you very little that couldn&#39;t be written just as well or better with explicit lambdas etc., so I do avoid that specific monad quite generally."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 6, "last_activity_date": 1500328649, "creation_date": 1500328649, "answer_id": 45154296, "question_id": 45154169, "link": "https://stackoverflow.com/questions/45154169/applicative-instance-for-state-order-of-data-flow/45154296#45154296", "title": "Applicative instance for State - order of data flow", "body": "<p>First off, I'd recommend not using (monadic!) <code>do</code> syntax for defining an applicative instance like that, because it rather obscures what's happening. Here's your definitions using only standard functional syntax:</p>\n\n<pre><code>State f &lt;*&gt; State s = State $ \\q\n     -&gt; let (fa, fs) = f q\n            (sa, ss) = s fs\n        in (fa sa, ss)\n</code></pre>\n\n<p>and</p>\n\n<pre><code>State f &lt;*&gt; State s = State $ \\q\n     -&gt; let (fa, fs) = f ss\n            (sa, ss) = s q\n        in (fa sa, fs)\n</code></pre>\n\n<p>This also makes it clearer that there's not really any intrinsic evaluation order in an applicative instance (unlike a monad instance).</p>\n"}], "owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 568, "favorite_count": 1, "accepted_answer_id": 45154274, "answer_count": 3, "score": 5, "last_activity_date": 1500328649, "creation_date": 1500328012, "question_id": 45154169, "link": "https://stackoverflow.com/questions/45154169/applicative-instance-for-state-order-of-data-flow", "title": "Applicative instance for State - order of data flow", "body": "<p>I am trying to implement Applicative instance for such a type:</p>\n\n<pre><code>newtype State s a = State {runState :: s -&gt; (a, s)}\n</code></pre>\n\n<p>I have some different ideas for (&lt;*>) function. \nOne way to implement it that comes to my mind is</p>\n\n<pre><code>(&lt;*&gt;) :: State s (a -&gt; b) -&gt; State s a -&gt; State s b\nState f &lt;*&gt; State s = State $ do\n    (fa, fs) &lt;- f\n    let (sa, ss) = s fs\n    return (fa sa, ss)\n</code></pre>\n\n<p>Or</p>\n\n<pre><code>(&lt;*&gt;) :: State s (a -&gt; b) -&gt; State s a -&gt; State s b\nState f &lt;*&gt; State s = State $ do\n    (sa, ss) &lt;- s\n    let (fa, fs) = f ss\n    return (fa sa, fs)\n</code></pre>\n\n<p>Which one (or does even any of them) is correct and why?</p>\n\n<p>They both typecheck and differ only by \"state\" transformations order. I cannot find any good reason to prefer one over another...</p>\n"}, {"tags": ["haskell", "ghc", "type-families"], "comments": [{"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 6, "creation_date": 1500320737, "post_id": 45151861, "comment_id": 77273837, "body": "It might be more useful if you can include a bit of the code you were playing around with (an example that worked, and one that segfaulted). I&#39;m curious at least"}, {"owner": {"reputation": 3975, "user_id": 1031627, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/yamFN.jpg?s=128&g=1", "display_name": "Luka Horvat", "link": "https://stackoverflow.com/users/1031627/luka-horvat"}, "reply_to_user": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1500365947, "post_id": 45151861, "comment_id": 77290686, "body": "@jberryman I&#39;d love to, unfortunately, my minimal test case works, while the same implementation inside of a large project segfaults... I&#39;m asking this question because I&#39;m a bit tired digging through thousands of lines of core because of this very problem :D"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1500395892, "post_id": 45151861, "comment_id": 77313154, "body": "Even the minimal test case could be useful. <code>Data.Reflection</code> turns off a few GHC optimizations; have you tried doing that?"}, {"owner": {"reputation": 3975, "user_id": 1031627, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/yamFN.jpg?s=128&g=1", "display_name": "Luka Horvat", "link": "https://stackoverflow.com/users/1031627/luka-horvat"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1500463646, "post_id": 45151861, "comment_id": 77345302, "body": "@dfeuer I&#39;ve added an example. Turning off the optimizations from Data.Reflection didn&#39;t fix my large project."}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "edited": false, "score": 1, "creation_date": 1500508068, "post_id": 45151861, "comment_id": 77372635, "body": "The constraints you&#39;ve shown here just boil down to <code>~</code> constraints, which wouldn&#39;t have a need to actually have a dictionary passed at runtime. So it would make sense that a <code>c =&gt; a</code> would have the same runtime representation as an <code>a</code>, and your <code>unsafeCoerce</code> would be relatively safe. But if the constraint is a <i>class</i> constraint there could be methods, and I would <i>not</i> expect <code>c =&gt; a</code> to have the same representation as <code>a</code>. Could that be the difference between your working and failing example? Even if the class has no methods, I wonder if class constraints are just different from <code>~</code> ones."}, {"owner": {"reputation": 3975, "user_id": 1031627, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/yamFN.jpg?s=128&g=1", "display_name": "Luka Horvat", "link": "https://stackoverflow.com/users/1031627/luka-horvat"}, "reply_to_user": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "edited": false, "score": 0, "creation_date": 1500539920, "post_id": 45151861, "comment_id": 77385124, "body": "@Ben The failing example is much too big to post here, but notice also that my code above demonstrates that <code>c =&gt; a</code> in fact is not the same as <code>a</code> because I do have to pass in a dummy parameter (<code>()</code> in this case). It seems the function still requires a dictionary, it just doesn&#39;t seem to use it."}], "owner": {"reputation": 3975, "user_id": 1031627, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/yamFN.jpg?s=128&g=1", "display_name": "Luka Horvat", "link": "https://stackoverflow.com/users/1031627/luka-horvat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 115, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1500463568, "creation_date": 1500318481, "last_edit_date": 1500463568, "question_id": 45151861, "link": "https://stackoverflow.com/questions/45151861/what-is-the-runtime-representation-of-constraint-kinded-type-families", "title": "What is the runtime representation of constraint-kinded type families?", "body": "<p>If I have a type family (closed or open, I'm interested in both)</p>\n\n<pre><code>type family F a :: Constraint\n</code></pre>\n\n<p>and a function with <code>F a</code> as a constraint, what does that function look like at runtime? What does the dictionary look like?</p>\n\n<p>Motivation:\nI'm trying to use the trick from <code>reflection</code> to discard an unneeded constraint from one of my functions and in some cases it works, in others I get a segfault so I'm looking for a more principled approach instead of my trial and error.</p>\n\n<p>Edit:</p>\n\n<p>Here's a code sample that does work</p>\n\n<pre><code>import Data.Kind\nimport Unsafe.Coerce\n\ntype family Elem (x :: k) (xs :: [k]) :: Bool where\n    Elem x '[] = 'False\n    Elem x (x ': xs) = 'True\n    Elem x (y ': xs) = Elem x xs\n\ntype family IsSubset xs ys :: Constraint where\n    IsSubset '[] ys = ()\n    IsSubset (x ': xs) ys = (IsTrue (Elem x ys), IsSubset xs ys)\n\ntype IsTrue b = b ~ 'True\n\ndata Tagged l a = Tagged a deriving Show\n\ng :: (Num a, IsSubset l1 l2) =&gt; Tagged l1 a -&gt; Tagged l2 a -&gt; Tagged l2 a\ng (Tagged x) (Tagged y) = Tagged (x + y)\n\nnewtype Magic c a = Magic (c =&gt; a)\n\ndiscard :: forall c a. (c =&gt; a) -&gt; a\ndiscard a = unsafeCoerce (Magic @c @a a) ()\n\nf :: forall k l1 a. (Num a) =&gt; Tagged (l1 :: [k]) a -&gt; Tagged l1 a -&gt; Tagged l1 a\nf = discard @(IsSubset l1 l1) g\n</code></pre>\n\n<p>and to test it:</p>\n\n<pre><code>&gt; f (Tagged 1) (Tagged 2)\nTagged 3\n</code></pre>\n"}, {"tags": ["haskell", "version-numbering"], "comments": [{"owner": {"reputation": 1958, "user_id": 3217013, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/8fe4c19ed2edcb4fe6e661a5faed0205?s=128&d=identicon&r=PG&f=1", "display_name": "Emil", "link": "https://stackoverflow.com/users/3217013/emil"}, "edited": false, "score": 0, "creation_date": 1500315757, "post_id": 45150987, "comment_id": 77271305, "body": "You did this recursively which means you can potentially have version numbers like 1.0.0.0.0.0.0.0.0.0.0"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1500315826, "post_id": 45150987, "comment_id": 77271339, "body": "Isn&#39;t it weird that you can have version numbers like <code>x.2</code>?"}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1500316062, "post_id": 45150987, "comment_id": 77271464, "body": "@WillemVanOnsem It&#39;s a little weird, but on the other hand there are projects where that has meaning. For example, perhaps there is a policy that odd-numbered minor versions are bugfix releases, and even are content patches."}, {"owner": {"reputation": 5242, "user_id": 50962, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e39b7acdae85aedee02487bed17ff5f6?s=128&d=identicon&r=PG", "display_name": "altern", "link": "https://stackoverflow.com/users/50962/altern"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1500316253, "post_id": 45150987, "comment_id": 77271542, "body": "@WillemVanOnsem: I expect such version as <code>x.2</code> and <code>x.x.2</code> (which are supposed to be equal <code>x.2 == x.x.2 = True</code>, <code>x.2 == 2 = True</code>) to represent revisions as, for example, in SVN."}, {"owner": {"reputation": 5242, "user_id": 50962, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e39b7acdae85aedee02487bed17ff5f6?s=128&d=identicon&r=PG", "display_name": "altern", "link": "https://stackoverflow.com/users/50962/altern"}, "reply_to_user": {"reputation": 1958, "user_id": 3217013, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/8fe4c19ed2edcb4fe6e661a5faed0205?s=128&d=identicon&r=PG&f=1", "display_name": "Emil", "link": "https://stackoverflow.com/users/3217013/emil"}, "edited": false, "score": 0, "creation_date": 1500316393, "post_id": 45150987, "comment_id": 77271621, "body": "@user3217013: I don&#39;t expect number of dimensions to go higher than 4 (<code>1.0.0.0</code>) for real world applications, but certainly, such scenarios as <code>1.0.0.0.0.0.0.0.0.0.0</code> are possible"}, {"owner": {"reputation": 1958, "user_id": 3217013, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/8fe4c19ed2edcb4fe6e661a5faed0205?s=128&d=identicon&r=PG&f=1", "display_name": "Emil", "link": "https://stackoverflow.com/users/3217013/emil"}, "edited": false, "score": 5, "creation_date": 1500316680, "post_id": 45150987, "comment_id": 77271770, "body": "@altern are you sure <code>data VersionNumber = VN [Maybe Int]</code> doesn&#39;t make more sense here? Then you can just <code>map maybeToString</code> and join with a period."}, {"owner": {"reputation": 5242, "user_id": 50962, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e39b7acdae85aedee02487bed17ff5f6?s=128&d=identicon&r=PG", "display_name": "altern", "link": "https://stackoverflow.com/users/50962/altern"}, "reply_to_user": {"reputation": 1958, "user_id": 3217013, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/8fe4c19ed2edcb4fe6e661a5faed0205?s=128&d=identicon&r=PG&f=1", "display_name": "Emil", "link": "https://stackoverflow.com/users/3217013/emil"}, "edited": false, "score": 0, "creation_date": 1500317153, "post_id": 45150987, "comment_id": 77272013, "body": "@user3217013: I am trying to simulate alternative version numbering approach visualized here: <a href=\"https://www.dropbox.com/s/66ucaf2auolq38u/branches%20naming%20.jpg?dl=0\" rel=\"nofollow noreferrer\">dropbox.com/s/66ucaf2auolq38u/branches%20naming%20.jpg?dl=0</a>"}, {"owner": {"reputation": 4565, "user_id": 1134885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c428466054762cf7d4b5fb5f4396fa2?s=128&d=identicon&r=PG", "display_name": "NovaDenizen", "link": "https://stackoverflow.com/users/1134885/novadenizen"}, "edited": false, "score": 0, "creation_date": 1500397613, "post_id": 45150987, "comment_id": 77314255, "body": "It seems like you really are talking about an &quot;is-subset-of&quot; operation rather than equality.  <code>Eq</code> is a bad fit.  Also, the justification for your right and left biasing (instead of something Foldable based) is very obscure."}], "answers": [{"comments": [{"owner": {"reputation": 5242, "user_id": 50962, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e39b7acdae85aedee02487bed17ff5f6?s=128&d=identicon&r=PG", "display_name": "altern", "link": "https://stackoverflow.com/users/50962/altern"}, "edited": false, "score": 0, "creation_date": 1500321351, "post_id": 45151674, "comment_id": 77274135, "body": "Thanks for your detailed answer! Please check out my edited question as I have added the link to the visual representation I am trying to represent in Haskell. Also I explained why I need LTR and RTL versions. Hopefully you will find that helpful. BTW, you probably meant <code>VNL Nothing (VNR (VC Nothing) (Just 1))</code> in your &#39;to be&#39; question. The answer to that would be version <code>x.x.1</code>, which is a legitimate construct in my version numbering approach."}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "reply_to_user": {"reputation": 5242, "user_id": 50962, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e39b7acdae85aedee02487bed17ff5f6?s=128&d=identicon&r=PG", "display_name": "altern", "link": "https://stackoverflow.com/users/50962/altern"}, "edited": false, "score": 0, "creation_date": 1500325128, "post_id": 45151674, "comment_id": 77276159, "body": "Why wouldn&#39;t <code>x.x.1</code> be <code>VNL Nothing (VNL Nothing (VC (Just 1)))</code>? I don&#39;t understand mixing <code>VNL</code> with <code>VNR</code>."}], "tags": [], "owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "is_accepted": true, "score": 2, "last_activity_date": 1500319139, "last_edit_date": 1500319139, "creation_date": 1500317806, "answer_id": 45151674, "question_id": 45150987, "link": "https://stackoverflow.com/questions/45150987/haskell-data-structure-to-simulate-alternative-version-numbering-approach/45151674#45151674", "title": "Haskell data structure to simulate alternative version numbering approach", "body": "<p>For representing version numbers defined as a sequence of integers separated by periods, one can simply use a list of integers rather than implementing their own list type:</p>\n\n<pre><code>newtype LTRVersion = MkLTRVersion { unLTRVersion :: [Int] }\n  deriving (Show, Eq, Ord)\n\nversionToString = intercalate \".\" . map show . unLTRVersion\n</code></pre>\n\n<p>This allows arbitrary versions of the form \"x.y.z\" for any number of version \"chunks\". The correct ordering relation is derivable, which is convenient.</p>\n\n<p>(NB: One might think that natural numbers would be a more precise representation but Haskell will happily allow you to generate a runtime failure by trying to subtract a larger number from a smaller number, so YMMV. <code>Int</code> is also available in the prelude while natural numbers are not.)</p>\n\n<p>To implement the right-to-left versioning scheme, one can either use a snoc list or reverse the list for comparison purposes (using <code>comparing</code> from <code>Data.Ord</code>) :</p>\n\n<pre><code>newtype RTLVersion = MkRTLVersion { unRTLVersion :: [Int] }\n\ninstance Ord RTLVersion where\n  compare = comparing (reverse . unRTLVersion)\n</code></pre>\n\n<p>However, both only allow for integral version numbers. More arbitrary is:</p>\n\n<pre><code>newtype Version = MkVersion [Either Int String]\n  deriving (Show, Eq)\n</code></pre>\n\n<p>with</p>\n\n<pre><code>instance Ord Version\n</code></pre>\n\n<p>and</p>\n\n<pre><code>versionToString :: Version -&gt; String\n</code></pre>\n\n<p>left as exercises for the reader.</p>\n\n<p>Another generalization for version numbers with missing \"chunks\" can represent each chunk as possibly existing:</p>\n\n<pre><code>newtype MayVersion = MkMayVersion [Maybe Int]\n</code></pre>\n\n<p>I'm not sure what the semantics of showing, equating, or comparing such versions would be so I won't guess at an implementation.</p>\n\n<p>It might also be useful to replace <code>Maybe Int</code> with an equivalent type that uses names that are meaningful in the problem domain:</p>\n\n<pre><code>data Chunk = Imaginary | Known Int\n\nnewtype MayVersion = MkMayVersion [Chunk]\n</code></pre>\n\n<p>It may also be possible to derive <code>Eq</code> and <code>Ord</code> on <code>MayVersion</code> by implementing them for <code>Chunk</code>.</p>\n\n<p>For extremely arbitrary notions of versioning (e.g., ones which can involve \"@\" or other separators other than \".\") the <a href=\"http://hackage.haskell.org/package/versions-3.1.1/docs/Data-Versions.html\" rel=\"nofollow noreferrer\">versions</a> package provides a type of version amusingly called a <code>Complex Mess</code> which may suffice. It would only support \"imaginary\" version chunks in an ad hoc way, though.</p>\n\n<p>I should also mention that combining LTR and RTL cons cells into the same list structure seems incorrect by construction, so I didn't consider it. What is the meaning of</p>\n\n<pre><code>VNL Nothing (VNR Nothing (VC (Just 1))\n</code></pre>\n\n<p>to be? A version that goes both RTL and LTR just seems to be invalid to me. If you want to have one data structure for both, you can combine</p>\n\n<pre><code>data Version\n  = LTR LTRVersion\n  | RTL RTLVersion\n</code></pre>\n\n<p>which ensures that both version types are correct by construction (well, infinite version numbers are not prevented, but other than that). However, it's not clear to me how a LTR version and an RTL version should be compared with each other so I'm not sure whether this is actually desired.</p>\n"}], "owner": {"reputation": 5242, "user_id": 50962, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e39b7acdae85aedee02487bed17ff5f6?s=128&d=identicon&r=PG", "display_name": "altern", "link": "https://stackoverflow.com/users/50962/altern"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "accepted_answer_id": 45151674, "answer_count": 1, "score": 0, "last_activity_date": 1500493789, "creation_date": 1500315271, "last_edit_date": 1500493789, "question_id": 45150987, "link": "https://stackoverflow.com/questions/45150987/haskell-data-structure-to-simulate-alternative-version-numbering-approach", "title": "Haskell data structure to simulate alternative version numbering approach", "body": "<p>I am trying to simulate <a href=\"https://www.dropbox.com/s/66ucaf2auolq38u/branches%20naming%20.jpg?dl=0\" rel=\"nofollow noreferrer\">version numbering in more generic terms</a> in Haskell. I am looking for a Haskell data structure that would represent the structure that I have defined myself (<code>VersionNumberWithMaybe</code>). </p>\n\n<pre><code>data VersionCompoundWithMaybe = Maybe Int -- Just n: 0, 1, 2, 3 ...\n                                          -- Nothing: x\nmaybeToString :: Maybe Int -&gt; String\nmaybeToString (Just n) = (show n)\nmaybeToString Nothing = \"x\"\n\ndata VersionNumberWithMaybe = VC (Maybe Int)             -- VersionCompound: x, 0, 1, 2, 3 ...\n                | VNL (Maybe Int) VersionNumberWithMaybe -- VersionNumberLeft: x.x, x.0, x.1, x.2, ... , 1.0, 1.1, 1.2, ... 1.x.x, 2.x.x, 3.x.x, ...\n                | VNR VersionNumberWithMaybe (Maybe Int) -- VersionNumberRight: the same as above, only underlying structure is different for simple parsing pursposes: x.x, x.0, x.1, x.2, ... , 1.0, 1.1, 1.2, ... 1.x.x, 2.x.x, 3.x.x, ...\n                deriving (Show)\n\nversionNumberWithMaybeToString :: VersionNumberWithMaybe -&gt; String\nversionNumberWithMaybeToString (VNL vc vn) = (maybeToString vc) ++ \".\" ++ (versionNumberWithMaybeToString vn)\nversionNumberWithMaybeToString (VNR vn vc) = (versionNumberWithMaybeToString vn) ++ \".\" ++ (maybeToString vc)\nversionNumberWithMaybeToString (VC vc) = (maybeToString vc)\n</code></pre>\n\n<p>Is there a similar standard library implementation that would allow for parsing strings into this data structure and converting between right and left representations? I would appreciate any comments/ideas on that. Thanks in advance!</p>\n\n<p>PS. I need <code>VNL</code> and <code>VNR</code> options so that I could compare version numbers in a following manner: <code>x.x.3</code> == <code>x.3</code> == <code>3</code>. I assume only <code>VNR</code> version will work for that purpose: </p>\n\n<pre><code>instance Eq VersionNumberWithMaybe where\n    (VC vc1) == (VC vc2) = (vc1 == vc2)\n    ( VNL vc1 vn1 ) == ( VNL vc2 vn2 ) = (vc1 == vc2 &amp;&amp; vn1 == vn2)\n    ( VNR vn1 vc1 ) == ( VNR vn2 vc2 ) = (vc1 == vc2 &amp;&amp; vn1 == vn2)\n\n    ( VNL _ (VC vc1) ) == ( VC vc2 ) = vc1 == vc2 \n    ( VC vc1 ) == ( VNL _ (VC vc2)) = vc1 == vc2\n\n    ( VNR _ vc1 ) == (VC vc2) = vc1 == vc2\n    ( VC vc1 ) == (VNR _ vc2) = vc1 == vc2\n</code></pre>\n\n<p>Given this definition of <code>Eq</code>, following comparisons will work fine as intended:</p>\n\n<pre><code>VNR (VNR ( VC Nothing ) Nothing) (Just 3) == VNR (VC Nothing) (Just 3) -- x.x.3 == x.3 -&gt; True\nVNR (VC Nothing) (Just 3) == VC (Just 3) -- x.3 == 3 -&gt; True\n</code></pre>\n\n<p>While with <code>VNL</code> it won't work as intended as it will allow such comparisons as <code>3.x.x == 3.x -&gt; True</code> to take place</p>\n\n<p>PS2. Thanks all for your comments. I am starting to rethink whether I really need both <code>VNR</code> and <code>VNL</code> (and not just, for example, <code>VNL</code>) to achieve what I want. I am evaluating which approach is better to leave only one and avoid this whole conversion_between_representations headache. </p>\n"}, {"tags": ["http", "haskell", "networking", "https", "handshake"], "comments": [{"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 1, "creation_date": 1500314649, "post_id": 45150022, "comment_id": 77270742, "body": "Were you able to connect with <code>curl</code> or similar? A broken handshake usually indicates that the other server is down or the configuration is broken."}, {"owner": {"reputation": 14449, "user_id": 105678, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/859da59b3e4097fa659aabb55412de10?s=128&d=identicon&r=PG", "display_name": "Sean Clark Hess", "link": "https://stackoverflow.com/users/105678/sean-clark-hess"}, "reply_to_user": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1500328950, "post_id": 45150022, "comment_id": 77277732, "body": "@Zeta yes, postman works every time. In fact, the production code works most of the time, it&#39;s just every once in a while that we get this error. I can&#39;t imagine what it could be except their server is going down."}, {"owner": {"reputation": 14449, "user_id": 105678, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/859da59b3e4097fa659aabb55412de10?s=128&d=identicon&r=PG", "display_name": "Sean Clark Hess", "link": "https://stackoverflow.com/users/105678/sean-clark-hess"}, "reply_to_user": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1501697218, "post_id": 45150022, "comment_id": 77896904, "body": "I never figured this out. We just added some code to retry the request on connection failures."}], "owner": {"reputation": 14449, "user_id": 105678, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/859da59b3e4097fa659aabb55412de10?s=128&d=identicon&r=PG", "display_name": "Sean Clark Hess", "link": "https://stackoverflow.com/users/105678/sean-clark-hess"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 100, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1500311563, "creation_date": 1500311563, "question_id": 45150022, "link": "https://stackoverflow.com/questions/45150022/what-does-this-https-handshake-error-mean-and-how-can-i-fix-it", "title": "What does this HTTPS handshake error mean and how can I fix it?", "body": "<p>We have a system that connects to several different APIs operated by different vendors. It uses similar code to connect to all of them, but with two of the APIs (out of 8) we get intermittent HTTPs errors. We never have any problems with the others. We use the same library (<code>Wreq</code>) for all of them. </p>\n\n<p>We've contacted them and they can't see a problem on their side. Also none of their other clients have had any issues. </p>\n\n<p>So, we need to figure out what is going on. What does this error mean?</p>\n\n<pre><code>HttpExceptionRequest Request {\n  host = \"secure.clarityservices.com\"\n  port = 443\n  secure = True\n  requestHeaders = [(\"Content-Type\",\"text/xml\"),(\"Accept\",\"text/xml\")]\n  path = \"/inquiries\"\n  queryString = \"\"\n  method = \"POST\"\n  proxy = Nothing\n  rawBody = False\n  redirectCount = 10\n  responseTimeout = ResponseTimeoutDefault\n  requestVersion = HTTP/1.1\n}\n(InternalException (HandshakeFailed (Error_Packet_unexpected \"Alert [(AlertLevel_Fatal,HandshakeFailure)]\" \" expected: change cipher\")))\n</code></pre>\n\n<p>The system is written in Haskell, and uses Wreq to connect to the APIs, both the ones with issues and the ones without. </p>\n"}, {"tags": ["haskell", "infinite", "fold", "foldable"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1500293150, "post_id": 45143843, "comment_id": 77256306, "body": "Why do you use <code>forall</code> here?"}, {"owner": {"reputation": 51, "user_id": 5031129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ebc8958cd7106edd52dae59dc4c1bc1?s=128&d=identicon&r=PG&f=1", "display_name": "Steven Feng", "link": "https://stackoverflow.com/users/5031129/steven-feng"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1500293422, "post_id": 45143843, "comment_id": 77256505, "body": "Otherwise <code>step</code>&#39;s explicit type signature won&#39;t compile. I enabled <code>ScopedTypeVariable</code> language extension :)"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1500293681, "post_id": 45143843, "comment_id": 77256675, "body": "<code>safeIndex [1..] 3</code> outputs <code>Just 4</code>. However it will not work for infinite snoc lists, but it doesn&#39;t make sense for those to &quot;index from the right&quot; in the first place."}, {"owner": {"reputation": 51, "user_id": 5031129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ebc8958cd7106edd52dae59dc4c1bc1?s=128&d=identicon&r=PG&f=1", "display_name": "Steven Feng", "link": "https://stackoverflow.com/users/5031129/steven-feng"}, "edited": false, "score": 0, "creation_date": 1500294458, "post_id": 45143843, "comment_id": 77257218, "body": "Ah, thanks! Actually I&#39;ve made some silly errors...."}], "answers": [{"comments": [{"owner": {"reputation": 51, "user_id": 5031129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ebc8958cd7106edd52dae59dc4c1bc1?s=128&d=identicon&r=PG&f=1", "display_name": "Steven Feng", "link": "https://stackoverflow.com/users/5031129/steven-feng"}, "edited": false, "score": 0, "creation_date": 1500295438, "post_id": 45144344, "comment_id": 77257907, "body": "Thanks! It&#39;s a handy library, although it doesn&#39;t work for infinite lists."}, {"owner": {"reputation": 1336, "user_id": 794944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b885541101d504bbd39901d5d7fc1766?s=128&d=identicon&r=PG", "display_name": "Jack Henahan", "link": "https://stackoverflow.com/users/794944/jack-henahan"}, "reply_to_user": {"reputation": 51, "user_id": 5031129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ebc8958cd7106edd52dae59dc4c1bc1?s=128&d=identicon&r=PG&f=1", "display_name": "Steven Feng", "link": "https://stackoverflow.com/users/5031129/steven-feng"}, "edited": false, "score": 0, "creation_date": 1500296124, "post_id": 45144344, "comment_id": 77258416, "body": "Oh, my, you&#39;re right. I completely glazed over the bit about infinite lists. I&#39;ll edit in an uglier idea."}], "tags": [], "owner": {"reputation": 1336, "user_id": 794944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b885541101d504bbd39901d5d7fc1766?s=128&d=identicon&r=PG", "display_name": "Jack Henahan", "link": "https://stackoverflow.com/users/794944/jack-henahan"}, "is_accepted": false, "score": 1, "last_activity_date": 1500296833, "last_edit_date": 1500296833, "creation_date": 1500294589, "answer_id": 45144344, "question_id": 45143843, "link": "https://stackoverflow.com/questions/45143843/how-to-find-the-kth-element-of-an-infinite-foldable-structure-in-haskell/45144344#45144344", "title": "How to find the kth element of an &#39;infinite&#39; Foldable structure in Haskell?", "body": "<p>If you don't mind taking on a dependency, the <a href=\"https://hackage.haskell.org/package/foldl-1.3.0\" rel=\"nofollow noreferrer\"><code>foldl</code> library</a> from Gabriel Gonzalez provides <code>index</code> and <code>genericIndex</code> folds which suit your purpose.</p>\n\n<p>For example, you could write</p>\n\n<pre><code>safeIndex :: (Foldable f, Integral a) =&gt; a -&gt; f b -&gt; Maybe b\nsafeIndex = fold . genericIndex\n</code></pre>\n\n<p>Besides that, the code you posted seems to do what you intend.</p>\n\n<p>EDIT: I spaced the \"infinite lists\" bit.</p>\n\n<p>This will work for infinite lists, but I don't know that there's a sensible way to define it for all <code>Foldable</code>s.</p>\n\n<pre><code>safeIndex' :: Int -&gt; [a] -&gt; Maybe a\nsafeIndex' n = listToMaybe . foldr (.) id (replicate n (drop 1))\n</code></pre>\n\n<p>EDIT 2:</p>\n\n<p>Scratch that, what you've got in the original post ought to work for any <code>Foldable</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 51, "user_id": 5031129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ebc8958cd7106edd52dae59dc4c1bc1?s=128&d=identicon&r=PG&f=1", "display_name": "Steven Feng", "link": "https://stackoverflow.com/users/5031129/steven-feng"}, "is_accepted": true, "score": 1, "last_activity_date": 1500295233, "creation_date": 1500295233, "answer_id": 45144579, "question_id": 45143843, "link": "https://stackoverflow.com/questions/45143843/how-to-find-the-kth-element-of-an-infinite-foldable-structure-in-haskell/45144579#45144579", "title": "How to find the kth element of an &#39;infinite&#39; Foldable structure in Haskell?", "body": "<p>Actually the definition in the question description already works for infinite built-in list. It was some other mistakes that make me thought it couldn't ;) (See the comments.)</p>\n"}], "owner": {"reputation": 51, "user_id": 5031129, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ebc8958cd7106edd52dae59dc4c1bc1?s=128&d=identicon&r=PG&f=1", "display_name": "Steven Feng", "link": "https://stackoverflow.com/users/5031129/steven-feng"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 120, "favorite_count": 0, "closed_date": 1500308928, "accepted_answer_id": 45144579, "answer_count": 2, "score": 0, "last_activity_date": 1500296833, "creation_date": 1500293047, "last_edit_date": 1500294957, "question_id": 45143843, "link": "https://stackoverflow.com/questions/45143843/how-to-find-the-kth-element-of-an-infinite-foldable-structure-in-haskell", "closed_reason": "Not suitable for this site", "title": "How to find the kth element of an &#39;infinite&#39; Foldable structure in Haskell?", "body": "<p>I'd like to define a function, <code>safeIndex</code> that works on <code>Foldable</code> types</p>\n\n<pre><code>safeIndex :: (Foldable t, Integral i) =&gt; t a -&gt; i -&gt; Maybe a\nsafeIndex = foldr step (const Nothing)\n  where\n    step :: Integral i =&gt; a -&gt; (i -&gt; Maybe a) -&gt; i -&gt; Maybe a\n    step x f i = if i == 0\n               then Just x\n               else f (i - 1)\n</code></pre>\n\n<p>But it doesn't work for infinite lists. For <code>foldr</code> to stop in the middle, I think we have to determine whether it should stop only with the first argument of <code>step</code>, which seems impossible.</p>\n\n<p>Is it possible to fix the function so that it works on infinite structures? If not, what typeclasses should we restrict <code>t</code> to?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 1545, "user_id": 2670439, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/wFcPA.jpg?s=128&g=1", "display_name": "SwiftsNamesake", "link": "https://stackoverflow.com/users/2670439/swiftsnamesake"}, "edited": false, "score": 0, "creation_date": 1500291408, "post_id": 45140207, "comment_id": 77255036, "body": "What library are you using."}, {"owner": {"reputation": 234, "user_id": 6475907, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh3.googleusercontent.com/-xQd4dCvGOmg/AAAAAAAAAAI/AAAAAAAAABo/WuJS4WB_RNg/photo.jpg?sz=128", "display_name": "WellTyped", "link": "https://stackoverflow.com/users/6475907/welltyped"}, "reply_to_user": {"reputation": 1545, "user_id": 2670439, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/wFcPA.jpg?s=128&g=1", "display_name": "SwiftsNamesake", "link": "https://stackoverflow.com/users/2670439/swiftsnamesake"}, "edited": false, "score": 0, "creation_date": 1500291883, "post_id": 45140207, "comment_id": 77255383, "body": "Persistent.sqlite"}, {"owner": {"reputation": 754, "user_id": 2140910, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CtvpI.jpg?s=128&g=1", "display_name": "Bjartur Thorlacius", "link": "https://stackoverflow.com/users/2140910/bjartur-thorlacius"}, "edited": false, "score": 1, "creation_date": 1500304660, "post_id": 45140207, "comment_id": 77264927, "body": "What do you mean by a databaes key? A column that serves as a primary key?"}, {"owner": {"reputation": 234, "user_id": 6475907, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh3.googleusercontent.com/-xQd4dCvGOmg/AAAAAAAAAAI/AAAAAAAAABo/WuJS4WB_RNg/photo.jpg?sz=128", "display_name": "WellTyped", "link": "https://stackoverflow.com/users/6475907/welltyped"}, "reply_to_user": {"reputation": 754, "user_id": 2140910, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CtvpI.jpg?s=128&g=1", "display_name": "Bjartur Thorlacius", "link": "https://stackoverflow.com/users/2140910/bjartur-thorlacius"}, "edited": false, "score": 0, "creation_date": 1500308191, "post_id": 45140207, "comment_id": 77267197, "body": "@BjarturThorlacius Yes, primary key."}], "answers": [{"comments": [{"owner": {"reputation": 234, "user_id": 6475907, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh3.googleusercontent.com/-xQd4dCvGOmg/AAAAAAAAAAI/AAAAAAAAABo/WuJS4WB_RNg/photo.jpg?sz=128", "display_name": "WellTyped", "link": "https://stackoverflow.com/users/6475907/welltyped"}, "edited": false, "score": 0, "creation_date": 1500318849, "post_id": 45149284, "comment_id": 77272864, "body": "So simple! Thanks!"}], "tags": [], "owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "is_accepted": true, "score": 3, "last_activity_date": 1500308985, "creation_date": 1500308985, "answer_id": 45149284, "question_id": 45140207, "link": "https://stackoverflow.com/questions/45140207/haskell-persistent-database-primary-key/45149284#45149284", "title": "Haskell Persistent Database Primary Key", "body": "<p>A code demonstrating such an idea:</p>\n\n<pre><code>#!/usr/bin/env stack\n{- stack\n     --resolver lts-7.14\n     --install-ghc\n     runghc\n     --package persistent\n     --package persistent-template\n     --package persistent-sqlite\n-}\n\n{-# LANGUAGE EmptyDataDecls #-}\n{-# LANGUAGE FlexibleContexts #-}\n{-# LANGUAGE GADTs #-}\n{-# LANGUAGE GeneralizedNewtypeDeriving #-}\n{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE QuasiQuotes #-}\n{-# LANGUAGE TemplateHaskell #-}\n{-# LANGUAGE TypeFamilies #-}\n\nimport Database.Persist\nimport Database.Persist.Sqlite\nimport Database.Persist.TH\n\nshare\n  [mkPersist sqlSettings, mkMigrate \"migrateAll\"]\n  [persistLowerCase|\nBlogpost\n    topic String\n    hash String\n    Primary hash\n    deriving Show \n|]\n\nmain :: IO ()\nmain = mockMigration migrateAll\n</code></pre>\n\n<p>Note that above code will produce this output:</p>\n\n<pre><code>CREATE TABLE \"blogpost\"(\"topic\" VARCHAR NOT NULL,\"hash\" VARCHAR NOT NULL, PRIMARY KEY (\"hash\"))\n</code></pre>\n\n<p>You can see how the primary key of the <code>blogpost</code> table is <code>hash</code></p>\n"}], "owner": {"reputation": 234, "user_id": 6475907, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh3.googleusercontent.com/-xQd4dCvGOmg/AAAAAAAAAAI/AAAAAAAAABo/WuJS4WB_RNg/photo.jpg?sz=128", "display_name": "WellTyped", "link": "https://stackoverflow.com/users/6475907/welltyped"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 414, "favorite_count": 0, "accepted_answer_id": 45149284, "answer_count": 1, "score": 3, "last_activity_date": 1500308985, "creation_date": 1500282843, "last_edit_date": 1500308218, "question_id": 45140207, "link": "https://stackoverflow.com/questions/45140207/haskell-persistent-database-primary-key", "title": "Haskell Persistent Database Primary Key", "body": "<p>When using the following code, I don't want to use the default database key. Intead, I plan to generate a hashcode from a piece of information and use it as a key. How should I use such a key?</p>\n\n<pre><code>share [mkPersist sqlSettings, mkMigrate \"migrateAll\"] [persistLowerCase|\nPerson\n    name String\n    age Int Maybe\n    deriving Show\nBlogPost\n    title String\n    authorId PersonId\n    deriving Show\n|]\n</code></pre>\n"}, {"tags": ["python", "haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 5, "creation_date": 1500273706, "post_id": 45137492, "comment_id": 77244174, "body": "<code>map</code> returns a generator, whereas <code>fmap</code> returns lazily the <b>same datastructure</b>."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 1, "creation_date": 1500276175, "post_id": 45137492, "comment_id": 77245508, "body": "Specifically, imagine a binary tree of integers, <code>t</code>. In haskell, you can write <code>fmap show t</code> and receive a binary tree of strings as a result, having the same structure as the input tree. Python&#39;s <code>map</code> does not understand how to descend into a tree structure."}], "answers": [{"tags": [], "owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "is_accepted": false, "score": 3, "last_activity_date": 1500275381, "creation_date": 1500275381, "answer_id": 45137982, "question_id": 45137492, "link": "https://stackoverflow.com/questions/45137492/what-is-the-difference-between-map-of-python-and-fmap-of-haskell/45137982#45137982", "title": "What is the difference between map of Python and fmap of Haskell?", "body": "<p>Python <code>map</code> has one behaviour that Haskell does not:</p>\n\n<pre><code>map(lambda x,y: x+y, range(10), range(10))\n[0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\n</code></pre>\n\n<p>What it does its iterate over the pairs of n iterables unpacking the values from them and passing them as arguments to the function.\nActually Haskell <code>map</code> can't do that due to its type signature \n<code>fmap :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b</code></p>\n\n<p>That python <code>map</code> usage is similar to Haskell <code>zipWith</code>:</p>\n\n<pre><code>Prelude&gt; zipWith (\\x y -&gt; x+y) [1..10] [1..10]\n[2,4,6,8,10,12,14,16,18,20]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1404, "user_id": 5559663, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sQiE2.gif?s=128&g=1", "display_name": "baxbaxwalanuksiwe", "link": "https://stackoverflow.com/users/5559663/baxbaxwalanuksiwe"}, "edited": false, "score": 0, "creation_date": 1500282883, "post_id": 45138551, "comment_id": 77249267, "body": "<code>Set</code> cannot have a <code>Functor</code> instance but it can have a <a href=\"http://hackage.haskell.org/package/rmonad-0.8/docs/Control-RMonad.html#t:RFunctor\" rel=\"nofollow noreferrer\"><code>RFunctor</code></a> instance."}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "edited": false, "score": 0, "creation_date": 1500295347, "post_id": 45138551, "comment_id": 77257835, "body": "Excellent answer! The only thing I might change is that Python&#39;s map isn&#39;t only for mapping over list-like things, in that you <i>could</i> make things with non-list structure iterable (like trees, or even the dict example you give). But mapping over such a container loses any extra structure and returns only a linear sequence of mapped items."}, {"owner": {"user_type": "does_not_exist", "display_name": "user6445533"}, "edited": false, "score": 1, "creation_date": 1500296645, "post_id": 45138551, "comment_id": 77258792, "body": "&quot;<i>From another perspective, however, it\u2019s fair to say that Python\u2019s <code>map</code> is more powerful than Haskell\u2019s <code>fmap</code></i>&quot;. I&#39;m having a hard time finding this perspective."}], "tags": [], "owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "is_accepted": false, "score": 13, "last_activity_date": 1500277302, "creation_date": 1500277302, "answer_id": 45138551, "question_id": 45137492, "link": "https://stackoverflow.com/questions/45137492/what-is-the-difference-between-map-of-python-and-fmap-of-haskell/45138551#45138551", "title": "What is the difference between map of Python and fmap of Haskell?", "body": "<p>They\u2019re pretty different.</p>\n\n<p>The two functions do very similar things on list-like things, but that\u2019s really where the similarities end. It would probably be more useful to compare Haskell\u2019s <code>map</code> with Python\u2019s <code>map</code>, but <code>fmap</code> is both far more general and rather different in meaning.</p>\n\n<hr>\n\n<p>In Haskell, <code>fmap</code> is a sort of \u201clifting\u201d or \u201cpiercing\u201d operation. It takes a function from <code>a -&gt; b</code> and \u201clifts\u201d it to a function from <code>f a -&gt; f b</code>. A list-like container is a sort of thing that can be \u201cpierced\u201d, but so many more things than lists are functors!</p>\n\n<p>Mapping over a <code>Maybe a</code> is extremely useful and common, though one might argue that <code>Maybe</code> is just like a list of zero or one elements. However, consider the fact that <em>functions</em> are functors in Haskell. You can <code>fmap</code> over a function and receive a new function, but functions are obviously not iterables. Similarly, parsers in parser combinator libraries like parsec are functors, and you can produce new parsers by <code>fmap</code>ping over them to apply a function to their result.</p>\n\n<p>All sorts of things are functors, many of which have little to do with containers that hold values. All monads are functors, including things like <code>Writer</code>, <code>State</code>, and <code>Cont</code>, which are effectful computations, not list-like things. Other things are functors, too, like <code>Const</code>, which can be combined with <code>Lift</code> to form an applicative functor that monoidally collects errors.</p>\n\n<p>The specifics of what each of these things are and do is outside the scope of this question, but the point is that the Haskell notion of a functor is far more general than an \u201citerable thing\u201d, and it\u2019s generally used in a different way from Python\u2019s <code>map</code>.</p>\n\n<hr>\n\n<p>From another perspective, however, it\u2019s fair to say that Python\u2019s <code>map</code> is more powerful than Haskell\u2019s <code>fmap</code>. There is a cost to generality, and that\u2019s a need to be simple. Being specific gives you the option to do more things! This, plus Python\u2019s other differences from Haskell (like dynamic typing and variadic functions), makes it possible for Python\u2019s <code>map</code> to do things that Haskell\u2019s <code>fmap</code> cannot.</p>\n\n<p>As <a href=\"https://stackoverflow.com/users/1695172/daniel-sanchez\">Daniel Sanchez</a> points out, Python\u2019s <code>map</code> is variadic, so it acts like <code>zipWith</code> in Haskell when provided multiple iterables:</p>\n\n<pre><code>&gt;&gt;&gt; map(lambda x,y: x+y, range(10), range(10))\n[0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\n</code></pre>\n\n<p>There\u2019s a bit more, though. Python\u2019s <code>map</code> can also operate over different sorts of things. In Haskell, the generality of the <code>Functor</code> class is useful mostly because it makes it possible to write functions that operate on any <code>Functor</code>, and that means all <code>Functor</code>s need to act in more or less the same way. The element(s) \u201cinside\u201d a <code>f a</code>, if you want to use the container analogy, <em>must</em> be of type <code>a</code>.</p>\n\n<p>Consider what this means for something like a hash map or dictionary. In Haskell, <code>Functor</code>s must have kind <code>* -&gt; *</code>, so <code>Map</code> can only be a <code>Functor</code> if partially applied. Therefore, <code>Map k</code> has a <code>Functor</code> instance, so <code>fmap</code> only operates over the <em>values</em> of a <code>Map</code>.</p>\n\n<p>In Python, this is not nearly so rigidly enforced by the consequences of the type system, so dictionaries actually function as sequences of their <em>keys</em> when iterated over:</p>\n\n<pre><code>&gt;&gt;&gt; map(None, {'foo': 1, 'bar': 2})\n['foo', 'bar']\n</code></pre>\n\n<p>Oh, and that example also demonstrates another Python oddity\u2014mapping <code>None</code> over something acts like mapping the identity function, but mapping it over multiple things acts like Haskell\u2019s <code>zip</code> and produces tuples:</p>\n\n<pre><code>&gt;&gt;&gt; map(None, [1, 2, 3], [4, 5, 6])\n[(1, 4), (2, 5), (3, 6)]\n</code></pre>\n\n<p>Finally, note that Haskell\u2019s <code>fmap</code> cannot map over sets! Why is this? Well, the rigid type system requires that <code>fmap</code> work for <em>any</em> values, but <code>Set</code>s must be composed of values of a type with an <code>Ord</code> instance. Python does not need to jump through any such hoops, so it can map over sets just fine:</p>\n\n<pre><code>&gt;&gt;&gt; map(None, {1, 2, 3})\n[1, 2, 3]\n</code></pre>\n\n<hr>\n\n<p>Python and Haskell are very different languages. A lot of these differences are simply artifacts of the language differences, not necessarily differences in what the functions are designed to do.</p>\n\n<p>Still, the core difference is simple to summarize: Python\u2019s <code>map</code> is for mapping over list-like things, but Haskell\u2019s <code>fmap</code> is for lifting a function to operate on an arbitrary data structure. Those two things are quite distinct even once you look past language differences, so don\u2019t assume they\u2019re the same just because that have the same sort of shape on the surface.</p>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 1, "last_activity_date": 1500294573, "creation_date": 1500294573, "answer_id": 45144342, "question_id": 45137492, "link": "https://stackoverflow.com/questions/45137492/what-is-the-difference-between-map-of-python-and-fmap-of-haskell/45144342#45144342", "title": "What is the difference between map of Python and fmap of Haskell?", "body": "<p>Haskell has <em>both</em>; <code>fmap</code> is a generalization of <code>map</code> that can work with any <code>Functor</code>, not just lists.</p>\n\n<pre><code>map :: (a -&gt; b) -&gt; [a] -&gt; [b]\nmap f [] = []\nmap f (x:xs) = f x : map f xs\n</code></pre>\n\n<p>Looking at <code>fmap</code>, you can see the similarity immediately; we just replace list with an arbitrary functor <code>f</code>.</p>\n\n<pre><code>class Functor f where\n    fmap :: (a -&gt; b) -&gt; f a -&gt; f b\n</code></pre>\n\n<p>The instance for lists is trivial, as you might expect; we just use the <code>map</code> function we've already defined.</p>\n\n<pre><code>instance Functor [] where\n    fmap = map\n</code></pre>\n\n<p>But <code>fmap</code> can be defined similarly for types similar to, but different than, lists.</p>\n\n<pre><code>instance Functor Maybe where\n    -- Here, f is a variable representing the function to map, not the\n    -- Functor type\n    fmap f Nothing = Nothing   -- Nothing instead of an empty list\n    fmap f (Just x) = Just (f x)  -- Just x is like a singleton list\n</code></pre>\n\n<p>Even for more complicated types, like trees, <code>fmap</code> still effectively just applies a function to each element of the container, preserving the structure of the container just as it did for lists and <code>Maybe</code>. The empty tree is exactly like an empty list or <code>Nothing</code>; other trees are like lists, except instead of recursively mapping over the tail of the list, you recursively map over <em>both</em> subtrees.</p>\n\n<pre><code>data BinaryTree a = Empty | Node a (BinaryTree a) (BinaryTree a)\n\ninstance Functor BinaryTree where\n    fmap f Empty = Empty\n    fmap f (Node a l r) = Node (f a) (fmap f l) (fmap f r)\n</code></pre>\n"}], "owner": {"reputation": 229, "user_id": 6130072, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/01049fe6bbb7e9dc61f30864db556622?s=128&d=identicon&r=PG&f=1", "display_name": "Programmer", "link": "https://stackoverflow.com/users/6130072/programmer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1302, "favorite_count": 1, "answer_count": 3, "score": 5, "last_activity_date": 1500294573, "creation_date": 1500273611, "question_id": 45137492, "link": "https://stackoverflow.com/questions/45137492/what-is-the-difference-between-map-of-python-and-fmap-of-haskell", "title": "What is the difference between map of Python and fmap of Haskell?", "body": "<p>I know that they are both different languages, but then aren't they both essentially the same? fmap applies a function over a Functor, whereas map of Python applies a function over an iterable. So if there is any difference between the two, can you provide an example of something we can do with map of Python but not fmap of Haskell (or vice versa)?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "edited": false, "score": 10, "creation_date": 1500268971, "post_id": 45136398, "comment_id": 77242169, "body": "You might find <a href=\"https://stackoverflow.com/q/17002119/465378\">this question on the I/O model Haskell used prior to the introduction of monadic I/O</a> interesting."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1500315273, "post_id": 45136398, "comment_id": 77271068, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/q/2488646/1048572\">Why are side-effects modeled as monads in Haskell?</a>"}, {"owner": {"reputation": 45534, "user_id": 106104, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/c88b9310b92a937108ec4336c2832f92?s=128&d=identicon&r=PG", "display_name": "user253751", "link": "https://stackoverflow.com/users/106104/user253751"}, "edited": false, "score": 0, "creation_date": 1500338964, "post_id": 45136398, "comment_id": 77280405, "body": "You certainly <i>can</i> FFI into libc without IO. The outcome <i>will</i> be unexpected or nondeterministic. &quot;Why not do it the simple way?&quot; is because the <i>entire point</i> of Haskell is that you can&#39;t do it the simple way - if you allow side effects the simple way, then Haskell is just another imperative language with different syntax (similar to C or Python)."}, {"owner": {"reputation": 243, "user_id": 13679816, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7b02acae66c6a347786eb93e8cbead85?s=128&d=identicon&r=PG", "display_name": "atravers", "link": "https://stackoverflow.com/users/13679816/atravers"}, "edited": false, "score": 0, "creation_date": 1609170593, "post_id": 45136398, "comment_id": 115766283, "body": "About that &quot;simple way&quot;: read <a href=\"https://stackoverflow.com/q/9449239/13679816\">stackoverflow.com/q/9449239/13679816</a> - while a different &quot;way&quot; is involved, the &quot;result&quot; would be the same..."}], "answers": [{"comments": [{"owner": {"reputation": 866, "user_id": 1608468, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ae275ae74371f0f24d369948a12ac197?s=128&d=identicon&r=PG", "display_name": "tomsmeding", "link": "https://stackoverflow.com/users/1608468/tomsmeding"}, "edited": false, "score": 0, "creation_date": 1500294619, "post_id": 45136674, "comment_id": 77257314, "body": "I highly doubt this is actually special cased by the runtime, aside from performance details. What c_rand produces here is not an actual CUInt contained in some sort of wrapper, it is a description to the runtime of what to do (in this case, to call that C function and get the result). I&#39;d wager GHC still executes that function only once, but the difference is that that execution doesn&#39;t give the result yet. (If I&#39;m incorrect, please tell me!)"}, {"owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "reply_to_user": {"reputation": 866, "user_id": 1608468, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ae275ae74371f0f24d369948a12ac197?s=128&d=identicon&r=PG", "display_name": "tomsmeding", "link": "https://stackoverflow.com/users/1608468/tomsmeding"}, "edited": false, "score": 1, "creation_date": 1500312783, "post_id": 45136674, "comment_id": 77269707, "body": "@tomsmeding, outside of the IO monad the compiler is free to call c_rand once and reuse the result or to call it for each invocation, so the result is implementation-dependent. If c_rand were pure, and hence returned the same result every time, this would not make any difference to the results, but because it is impure the optimisation makes a difference."}, {"owner": {"reputation": 866, "user_id": 1608468, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ae275ae74371f0f24d369948a12ac197?s=128&d=identicon&r=PG", "display_name": "tomsmeding", "link": "https://stackoverflow.com/users/1608468/tomsmeding"}, "reply_to_user": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "edited": false, "score": 0, "creation_date": 1500323051, "post_id": 45136674, "comment_id": 77275066, "body": "@Paul Ah, that&#39;s apparently a specific of the FFI specification that I didn&#39;t know of. Thanks!"}, {"owner": {"reputation": 45534, "user_id": 106104, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/c88b9310b92a937108ec4336c2832f92?s=128&d=identicon&r=PG", "display_name": "user253751", "link": "https://stackoverflow.com/users/106104/user253751"}, "reply_to_user": {"reputation": 866, "user_id": 1608468, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ae275ae74371f0f24d369948a12ac197?s=128&d=identicon&r=PG", "display_name": "tomsmeding", "link": "https://stackoverflow.com/users/1608468/tomsmeding"}, "edited": false, "score": 0, "creation_date": 1501122675, "post_id": 45136674, "comment_id": 77642515, "body": "@tomsmeding Sure, but then the resulting action gets executed twice, which causes the C function to get called twice, which is what matters."}], "tags": [], "owner": {"reputation": 23111, "user_id": 1319998, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/9f600f4583bec89109ce8c0c098951ae?s=128&d=identicon&r=PG", "display_name": "Michal Charemza", "link": "https://stackoverflow.com/users/1319998/michal-charemza"}, "is_accepted": false, "score": 25, "last_activity_date": 1500270597, "last_edit_date": 1500270597, "creation_date": 1500270074, "answer_id": 45136674, "question_id": 45136398, "link": "https://stackoverflow.com/questions/45136398/is-the-monadic-io-construct-in-haskell-just-a-convention/45136674#45136674", "title": "Is the monadic IO construct in Haskell just a convention?", "body": "<blockquote>\n  <p>Could you just FFI into libc.so instead to do IO and skip the IO Monad thing?</p>\n</blockquote>\n\n<p>Taking from <a href=\"https://en.wikibooks.org/wiki/Haskell/FFI#Impure_C_Functions\" rel=\"noreferrer\">https://en.wikibooks.org/wiki/Haskell/FFI#Impure_C_Functions</a>, if you declare an FFI function as pure (so, with no reference to IO), then</p>\n\n<blockquote>\n  <p>GHC sees no point in calculating twice the result of a pure function</p>\n</blockquote>\n\n<p>which means the the result of the function call is effectively cached. For example, a program where a foreign impure pseudo-random number generator is declared to return a <code>CUInt</code></p>\n\n<pre><code>{-# LANGUAGE ForeignFunctionInterface #-}\n\nimport Foreign\nimport Foreign.C.Types\n\nforeign import ccall unsafe \"stdlib.h rand\"\n  c_rand :: CUInt\n\nmain = putStrLn (show c_rand) &gt;&gt; putStrLn (show c_rand)\n</code></pre>\n\n<p>returns the same thing every call, at least on my compiler/system:</p>\n\n<pre><code>16807\n16807\n</code></pre>\n\n<p>If we change the declaration to return a <code>IO CUInt</code></p>\n\n<pre><code>{-# LANGUAGE ForeignFunctionInterface #-}\n\nimport Foreign\nimport Foreign.C.Types\n\nforeign import ccall unsafe \"stdlib.h rand\"\n  c_rand :: IO CUInt\n\nmain = c_rand &gt;&gt;= putStrLn . show &gt;&gt; c_rand &gt;&gt;= putStrLn . show\n</code></pre>\n\n<p>then this results in (probably) a different number returned each call, since the compiler knows it's impure: </p>\n\n<pre><code>16807\n282475249\n</code></pre>\n\n<p>So you're back to having to use IO for the calls to the standard libraries anyway.</p>\n"}, {"comments": [{"owner": {"reputation": 2934, "user_id": 367316, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09837eb8a4cfaac44c1e08b43f72091?s=128&d=identicon&r=PG", "display_name": "Konrad Eisele", "link": "https://stackoverflow.com/users/367316/konrad-eisele"}, "edited": false, "score": 0, "creation_date": 1500280868, "post_id": 45136731, "comment_id": 77248025, "body": "Ok I (think I) understand: The important part is the &gt;&gt;= operator that forms a chain of lambda bindings that are then not optimized out and need to be called sequentially. Some things I wonder however: If instead of just &quot;main&quot; being the function that is forced to be evaluated, all function that lead to external sideeffect calls would be marked and forced to evaluate then monadic IO would be not needed?  (except for the ordering part, but you could define the order to be the source order in an imaginary Haskell)."}, {"owner": {"reputation": 2934, "user_id": 367316, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09837eb8a4cfaac44c1e08b43f72091?s=128&d=identicon&r=PG", "display_name": "Konrad Eisele", "link": "https://stackoverflow.com/users/367316/konrad-eisele"}, "edited": false, "score": 0, "creation_date": 1500281073, "post_id": 45136731, "comment_id": 77248127, "body": "Another thing that is unclear to me is the meaning of &quot;pure&quot;: if it means there are no sideeffects, well, they are there."}, {"owner": {"reputation": 113, "user_id": 1257066, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d4401806a41c0a9c8f8f1d41432f7e31?s=128&d=identicon&r=PG", "display_name": "Alphonse23", "link": "https://stackoverflow.com/users/1257066/alphonse23"}, "edited": false, "score": 0, "creation_date": 1500286960, "post_id": 45136731, "comment_id": 77252082, "body": "Hey Alexis, Great explanation, I never quite understood how Haskell&#39;s purity is dependent on it&#39;s laziness, that makes a lot of sense. Though, when I try running the examples you supplied in your answer I run into a lot of compiler errors:  &lt;!-- language: haskell --&gt;      $ runhaskell helloworld.hs      helloworld.hs:2:1: error:         \u2022 Couldn&#39;t match expected type \u2018IO t0\u2019 with actual type \u2018()\u2019         \u2022 In the expression: main           When checking the type of the IO action \u2018main\u2019  amongst other errors."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1500287624, "post_id": 45136731, "comment_id": 77252506, "body": "I have to (slightly) disagree with the association monadic IO &lt;-&gt; laziness. Theoretically, a lazy language could be impure and allow side effects. There&#39;s nothing inherently &quot;wrong&quot; in that, or at least it is as wrong as an eager impure language. The main issue, though, is that - as you nicely show - the evaluation order becomes very important. Even if we fix it in the semantics (sacrificing many optimizations), it is hard for humans to predict the order of the side effects. Hence, the language becomes practically unusable. This is probably what you mean with &quot;effectively necessary&quot;, I guess."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1500287783, "post_id": 45136731, "comment_id": 77252611, "body": "Further, I think you should add a note clarifying that in an eager language, monadic IO would make a lot of sense too. While side effects in an eager impure world are more human-understandable, a pure eager language could still choose to use monadic IO to maintain purity."}, {"owner": {"reputation": 866, "user_id": 1608468, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ae275ae74371f0f24d369948a12ac197?s=128&d=identicon&r=PG", "display_name": "tomsmeding", "link": "https://stackoverflow.com/users/1608468/tomsmeding"}, "reply_to_user": {"reputation": 2934, "user_id": 367316, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09837eb8a4cfaac44c1e08b43f72091?s=128&d=identicon&r=PG", "display_name": "Konrad Eisele", "link": "https://stackoverflow.com/users/367316/konrad-eisele"}, "edited": false, "score": 1, "creation_date": 1500294246, "post_id": 45136731, "comment_id": 77257054, "body": "@Konrad The side effects are, in a sense, not apparent from the code. You can see a value in the IO monad just as a pure value, and indeed, if a function produces such a value, you evaluate thay value, but then don&#39;t throw it into main, the side effects are not executed. You can see main as returning a sequence of actions for the runtime to execute, which it wil then do. Main is still totally pure. \u2014 also, you may want to look at the Writer monad, which does essentially the same thing, but that one even <i>looks</i> pure."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1500302789, "post_id": 45136731, "comment_id": 77263531, "body": "Splitting hairs a little: monadic IO is not a consequence of purity, in that there are other pure languages which feature a different approach to IO. Clean notably uses a linear type, not a monad, to make sure functions which perform IO do so in a definite order. One can argue over whether monadic IO is the best design but it&#39;s not the only one."}, {"owner": {"reputation": 2934, "user_id": 367316, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09837eb8a4cfaac44c1e08b43f72091?s=128&d=identicon&r=PG", "display_name": "Konrad Eisele", "link": "https://stackoverflow.com/users/367316/konrad-eisele"}, "reply_to_user": {"reputation": 866, "user_id": 1608468, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ae275ae74371f0f24d369948a12ac197?s=128&d=identicon&r=PG", "display_name": "tomsmeding", "link": "https://stackoverflow.com/users/1608468/tomsmeding"}, "edited": false, "score": 0, "creation_date": 1500308760, "post_id": 45136731, "comment_id": 77267549, "body": "@tomsmeding I can understand that if only output and simple input that doesnt change the control path or is not used for calcuation is involved. However if you have input and then decide according to that input, my understanding is that you cannot defer this to an external engine as a seqeuence of actions, unless you calculate both control paths concurrently or if the input is used for a calculation, calcuate all possible outcomes in advance or by passing a language to the external engine. I&#39;m not a functional expert though."}, {"owner": {"reputation": 2934, "user_id": 367316, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09837eb8a4cfaac44c1e08b43f72091?s=128&d=identicon&r=PG", "display_name": "Konrad Eisele", "link": "https://stackoverflow.com/users/367316/konrad-eisele"}, "edited": false, "score": 0, "creation_date": 1500308944, "post_id": 45136731, "comment_id": 77267655, "body": "append: If you take putStrLn   (maybe bad example though because it is output) and travel downto ghc-8.0.2/libraries/base/GHC/IO/Handle/Text.hs (hPutcBuffered) you maybe can say: Haskell is perfectly &quot;pure&quot; up until line 496 is reached. After that all functions that are in the call path get tainted."}, {"owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "reply_to_user": {"reputation": 113, "user_id": 1257066, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/d4401806a41c0a9c8f8f1d41432f7e31?s=128&d=identicon&r=PG", "display_name": "Alphonse23", "link": "https://stackoverflow.com/users/1257066/alphonse23"}, "edited": false, "score": 1, "creation_date": 1500312615, "post_id": 45136731, "comment_id": 77269639, "body": "@Alphonse23, The examples are not valid Haskell, they are demonstrations of an imaginary dialect of Haskell where IO was not monadic."}, {"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1500314497, "post_id": 45136731, "comment_id": 77270665, "body": "@chi I added some clarifications regarding both of your points. And yes, I would say that the <i>whole point</i> of this answer, or at least most of it, is to demonstrate why impurity in a lazy language would be hard to reason about."}, {"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 1, "creation_date": 1500314549, "post_id": 45136731, "comment_id": 77270690, "body": "@BenjaminHodgson Yes, the other answer I linked towards the end (which I wrote!) mentions that, but I edited this answer to note it explicitly."}, {"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "reply_to_user": {"reputation": 2934, "user_id": 367316, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09837eb8a4cfaac44c1e08b43f72091?s=128&d=identicon&r=PG", "display_name": "Konrad Eisele", "link": "https://stackoverflow.com/users/367316/konrad-eisele"}, "edited": false, "score": 1, "creation_date": 1500314771, "post_id": 45136731, "comment_id": 77270806, "body": "@KonradEisele It depends on how you look at things. For example, consider <a href=\"https://stackoverflow.com/a/41994672/465378\">this answer, which describes how <code>IO</code> actions are really completely pure to evaluate</a>, which hints at the notion that, from a certain point of view, Haskell <b>really is</b> pure, even including <code>IO</code>! The trick is that an <code>IO</code> action is a description of a side-effectful computation to execute, which the GHC runtime interprets. Of course, another interpretation is that <code>IO</code> is a side-effectful, imperative, embedded DSL. Sometimes it\u2019s useful to consider both interpretations."}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "reply_to_user": {"reputation": 2934, "user_id": 367316, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09837eb8a4cfaac44c1e08b43f72091?s=128&d=identicon&r=PG", "display_name": "Konrad Eisele", "link": "https://stackoverflow.com/users/367316/konrad-eisele"}, "edited": false, "score": 0, "creation_date": 1500346969, "post_id": 45136731, "comment_id": 77282253, "body": "@KonradEisele Re: &quot;If instead of just &quot;main&quot; being the function that is forced to be evaluated, all function that lead to external sideeffect calls would be marked and forced to evaluate then monadic IO would be not needed?&quot;  Okay, so instead of <code>getLine</code> returning a different <i>type</i> than <code>String</code>, it just returns <code>String</code> but has an extra &quot;marker&quot; indicating that it&#39;s not pure. We&#39;ll need that you can&#39;t call impure functions from normal ones. Now lets imagine the marker is spelled <code>IO</code>... I don&#39;t have space in a comment to get into it in full, but it works out exactly the same in the end."}], "tags": [], "owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "is_accepted": true, "score": 69, "last_activity_date": 1500859044, "last_edit_date": 1500859044, "creation_date": 1500270346, "answer_id": 45136731, "question_id": 45136398, "link": "https://stackoverflow.com/questions/45136398/is-the-monadic-io-construct-in-haskell-just-a-convention/45136731#45136731", "title": "Is the monadic IO construct in Haskell just a convention?", "body": "<p>Yes, monadic I/O is a consequence of Haskell being lazy. Specifically, though, monadic I/O is a consequence of Haskell being <em>pure</em>, which is effectively necessary for a lazy language to be predictable.<sup>\u2020</sup></p>\n\n<p>This is easy to illustrate with an example. Imagine for a moment that Haskell were <em>not</em> pure, but it was still lazy. Instead of <code>putStrLn</code> having the type <code>String -&gt; IO ()</code>, it would simply have the type <code>String -&gt; ()</code>, and it would print a string to stdout as a side-effect. The trouble with this is that this would only happen when <code>putStrLn</code> is actually called, and in a lazy language, functions are only called when their results are needed.</p>\n\n<p>Here\u2019s the trouble: <code>putStrLn</code> produces <code>()</code>. Looking at a value of type <code>()</code> is useless, because <a href=\"https://stackoverflow.com/a/33115522/465378\"><code>()</code> means \u201cboring\u201d</a>. That means that this program would do what you expect:</p>\n\n<pre><code>main :: ()\nmain =\n  case putStr \"Hello, \" of\n    () -&gt; putStrLn \" world!\"\n\n-- prints \u201cHello, world!\\n\u201d\n</code></pre>\n\n<p>But I think you can agree that programming style is pretty odd. The <code>case ... of</code> is necessary, however, because it forces the evaluation of the call to <code>putStr</code> by matching against <code>()</code>. If you tweak the program slightly:</p>\n\n<pre><code>main :: ()\nmain =\n  case putStr \"Hello, \" of\n    _ -&gt; putStrLn \" world!\"\n</code></pre>\n\n<p>\u2026now it only prints <code>world!\\n</code>, and the first call isn\u2019t evaluated at all.</p>\n\n<p>This actually gets even worse, though, because it becomes even <em>harder</em> to predict as soon as you start trying to do any actual programming. Consider this program:</p>\n\n<pre><code>printAndAdd :: String -&gt; Integer -&gt; Integer -&gt; Integer\nprintAndAdd msg x y = putStrLn msg `seq` (x + y)\n\nmain :: ()\nmain =\n  let x = printAndAdd \"first\" 1 2\n      y = printAndAdd \"second\" 3 4\n  in (y + x) `seq` ()\n</code></pre>\n\n<p>Does this program print out <code>first\\nsecond\\n</code> or <code>second\\nfirst\\n</code>? Without knowing the order in which <code>(+)</code> evaluates its arguments, <em>we don\u2019t know</em>. And in Haskell, evaluation order isn\u2019t even always well-defined, so it\u2019s entirely possible that the order in which the two effects are executed is actually completely impossible to determine!</p>\n\n<p>This problem doesn\u2019t arise in strict languages with a well-defined evaluation order, but in a lazy language like Haskell, we need some additional structure to ensure side-effects are (a) actually evaluated and (b) executed in the correct order. Monads happen to be an interface that elegantly provide the necessary structure to enforce that order.</p>\n\n<p>Why is that? And how is that even possible? Well, <a href=\"https://stackoverflow.com/a/41311433/465378\">the monadic interface provides a notion of data dependency in the signature for <code>&gt;&gt;=</code></a>, which enforces a well-defined evaluation order. Haskell\u2019s implementation of <code>IO</code> is \u201cmagic\u201d, in the sense that it\u2019s implemented in the runtime, but the choice of the monadic interface is far from arbitrary. It seems to be a fairly good way to encode the notion of sequential actions in a pure language, and it makes it possible for Haskell to be lazy and referentially transparent without sacrificing predictable sequencing of effects.</p>\n\n<p>It\u2019s worth noting that monads are not the <em>only</em> way to encode side-effects in a pure way\u2014in fact, historically, <a href=\"https://stackoverflow.com/a/17004448/465378\">they\u2019re not even the only way <em>Haskell</em> handled side-effects</a>. Don\u2019t be misled into thinking that monads are only for I/O (they\u2019re not), only useful in a lazy language (they\u2019re plenty useful to maintain purity even in a strict language), only useful in a pure language (many things are useful monads that aren\u2019t just for enforcing purity), or that you needs monads to do I/O (you don\u2019t). They do seem to have worked out pretty well in Haskell for those purposes, though.</p>\n\n<hr>\n\n<p><sup>\u2020 Regarding this, Simon Peyton Jones once noted that <a href=\"https://stackoverflow.com/a/14264586/465378\">\u201cLaziness keeps you honest\u201d with respect to purity</a>.</sup></p>\n"}, {"comments": [{"owner": {"reputation": 2934, "user_id": 367316, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09837eb8a4cfaac44c1e08b43f72091?s=128&d=identicon&r=PG", "display_name": "Konrad Eisele", "link": "https://stackoverflow.com/users/367316/konrad-eisele"}, "edited": false, "score": 0, "creation_date": 1500309620, "post_id": 45141523, "comment_id": 77268033, "body": "Interesting answer, adds a different angle to Alexis answer. If I could I would flag both as answers. Denotational Semantics  is something I will need a while to understand."}], "tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": false, "score": 12, "last_activity_date": 1500319501, "last_edit_date": 1500319501, "creation_date": 1500286495, "answer_id": 45141523, "question_id": 45136398, "link": "https://stackoverflow.com/questions/45136398/is-the-monadic-io-construct-in-haskell-just-a-convention/45141523#45141523", "title": "Is the monadic IO construct in Haskell just a convention?", "body": "<p>Let's say using FFI we defined a function</p>\n\n<pre><code>c_write :: String -&gt; ()\n</code></pre>\n\n<p>which lies about its purity, in that whenever its result is forced it prints the string.  So that we don't run into the caching problems in Michal's answer, we can define these functions to take an extra <code>()</code> argument. </p>\n\n<pre><code>c_write :: String -&gt; () -&gt; ()\nc_rand :: () -&gt; CUInt\n</code></pre>\n\n<p>On an implementation level this will work as long as CSE is not too aggressive (which it is not in GHC because that can lead to unexpected memory leaks, it turns out).  Now that we have things defined this way, there are many awkward usage questions that Alexis points out&mdash;<em>but</em> we can solve them using a monad:</p>\n\n<pre><code>newtype IO a = IO { runIO :: () -&gt; a }\n\ninstance Monad IO where\n    return = IO . const\n    m &gt;&gt;= f = IO $ \\() -&gt; let x = runIO m () in x `seq` f x\n\nrand :: IO CUInt\nrand = IO c_rand\n</code></pre>\n\n<p>Basically, we just stuff all of Alexis's awkward usage questions into a monad, and as long as we use the monadic interface, everything stays predictable.  In this sense <code>IO</code> is just a convention&mdash;because we can implement it in Haskell there is nothing fundamental about it.</p>\n\n<p>That's from the operational vantage point.</p>\n\n<p>On the other hand, Haskell's semantics in the report are specified using <a href=\"https://en.wikibooks.org/wiki/Haskell/Denotational_semantics\" rel=\"noreferrer\"><em>denotational semantics</em></a> alone.  And, in my opinion, the fact that Haskell has a precise denotational semantics is one of the most beautiful and useful qualities of the language, allowing me a precise framework to think about abstractions and thus manage complexity with precision.  And while the usual abstract <code>IO</code> monad has no accepted denotational semantics (<a href=\"http://conal.net/blog/posts/the-c-language-is-purely-functional\" rel=\"noreferrer\">to the lament of some of us</a>), it is at least conceivable that we could create a denotational model for it, thus preserving some of the benefits of Haskell's denotational model.  However, the form of I/O we have just given is <em>completely incompatible</em> with Haskell's denotational semantics.</p>\n\n<p>Simply put, there are only supposed to be two distinguishable values (modulo fatal error messages) of type <code>()</code>:  <code>()</code> and &perp;.  If we treat FFI as the fundamentals of I/O and use the <code>IO</code> monad only \"as a convention\", then we effectively add a jillion values to <em>every</em> type&mdash;to continue having a denotational semantics, every value must be adjoined with the possibility of performing I/O prior to its evaluation, and with the extra complexity this introduces, we essentially lose all our ability to consider any two distinct programs equivalent except in the most trivial cases&mdash;that is, we lose our ability to refactor.</p>\n\n<p>Of course, because of <code>unsafePerformIO</code> this is already technically the case, and advanced Haskell programmers do need to think about the operational semantics as well.  But most of the time, including when working with I/O, we can forget about all that and refactor with confidence, precisely because we have learned that when we use <code>unsafePerformIO</code>, we must be <em>very</em> careful to ensure it plays nicely, that it still affords us as much denotational reasoning as possible.  If a function has <code>unsafePerformIO</code>, I automatically give it 5 or 10 times more attention than regular functions, because I need to understand the valid patterns of use (usually the type signature tells me everything I need to know), I need to think about caching and race conditions, I need to think about how deep I need to force its results, etc.  It's awful[1]. The same care would be necessary of FFI I/O.</p>\n\n<p>In conclusion: yes it's a convention, but if you don't follow it then we can't have nice things.</p>\n\n<p>[1] Well actually I think it's pretty fun, but it's surely not practical to think about all those complexities all the time.  </p>\n"}, {"tags": [], "owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "is_accepted": false, "score": 4, "last_activity_date": 1500321006, "creation_date": 1500321006, "answer_id": 45152509, "question_id": 45136398, "link": "https://stackoverflow.com/questions/45136398/is-the-monadic-io-construct-in-haskell-just-a-convention/45152509#45152509", "title": "Is the monadic IO construct in Haskell just a convention?", "body": "<p>That depends on what the meaning of \"is\" is\u2014or at least what the meaning of \"convention\" is.</p>\n\n<p>If a \"convention\" means \"the way things are usually done\" or \"an agreement among parties covering a particular matter\" then it is easy to give a boring answer: yes, the <code>IO</code> monad is a convention. It is the way the designers of the language agreed to handle IO operations and the way that users of the language usually perform IO operations.</p>\n\n<p>If we are allowed to choose a more interesting definition of \"convention\" then we can get a more interesting answer. If a \"convention\" is a discipline imposed on a language by its users in order to achieve a particular goal without assistance from the language itself, then the answer is no: the <code>IO</code> monad is the <strong>opposite</strong> of a convention. It is a discipline enforced <strong>by the language</strong> that assists its users in constructing and reasoning about programs.</p>\n\n<p>The purpose of the <code>IO</code> type is to create a clear distinction between the types of \"pure\" values and the types of values which require execution by the runtime system to generate a meaningful result. The Haskell type system enforces this strict separation, preventing a user from (say) creating a value of type <code>Int</code> which launches the proverbial missiles. This is not a convention in the second sense: its entire goal is to move the discipline required to perform side effects in a safe and consistent way <em>from</em> the user and <em>onto</em> the language and its compiler.</p>\n\n<blockquote>\n  <p>Could you just FFI into libc.so instead to do IO and skip the IO Monad thing?</p>\n</blockquote>\n\n<p>It is, of course, possible to do IO without an IO monad: see almost every other extant programming language.</p>\n\n<blockquote>\n  <p>Would it work anyway or is the outcome undeterministic because of Haskell evaluating lazy or something else, like that the GHC is pattern matching for IO Monad and then handling it in a special way or something else. </p>\n</blockquote>\n\n<p>There is no such thing as a free lunch. If Haskell allowed any value to require execution involving IO then it would have to lose other things that we value. The most important of these is probably <em>referential transparency</em>: if <code>myInt</code> could sometimes be <code>1</code> and sometimes be <code>5</code> depending on external factors then we would lose most of our ability to reason about our programs in a rigorous way (known as <em>equational reasoning</em>).</p>\n\n<p>Laziness was mentioned in other answers, but the issue with laziness would specifically be that <strong>sharing</strong> would no longer be safe. If <code>x</code> in <code>let x = someExpensiveComputationOf y in x * x</code> was not referentially transparent, GHC would not be able to share the work and would have to compute it twice.</p>\n\n<blockquote>\n  <p>What is the real reason?</p>\n</blockquote>\n\n<p>Without the strict separation of effectful values from non-effectful values provided by <code>IO</code> and enforced by the compiler, Haskell would effectively cease to be Haskell. There are plenty of languages that don't enforce this discipline. It would be nice to have at least one around that does.</p>\n\n<blockquote>\n  <p>In the end you end you endup in a sideeffect. So why not do it the simple way?</p>\n</blockquote>\n\n<p>Yes, in the end your program is represented by a value called <code>main</code> with an IO type. But the question isn't where you end up, it's where you <strong>start</strong>: If you start by being able to differentiate between effectful and non-effectful values in a rigorous way then you gain a lot of advantages when constructing that program.</p>\n"}], "owner": {"reputation": 2934, "user_id": 367316, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09837eb8a4cfaac44c1e08b43f72091?s=128&d=identicon&r=PG", "display_name": "Konrad Eisele", "link": "https://stackoverflow.com/users/367316/konrad-eisele"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3554, "favorite_count": 13, "accepted_answer_id": 45136731, "answer_count": 4, "score": 39, "last_activity_date": 1500859044, "creation_date": 1500268536, "last_edit_date": 1500696265, "question_id": 45136398, "link": "https://stackoverflow.com/questions/45136398/is-the-monadic-io-construct-in-haskell-just-a-convention", "title": "Is the monadic IO construct in Haskell just a convention?", "body": "<p>Is the monadic IO construct in Haskell just a convention or is there is a implementation reason for it?  </p>\n\n<p>Could you not just FFI into libc.so instead to do your IO, and skip the IO Monad pieceg? </p>\n\n<p>Would it work anyway, or is the outcome undeterministic because of Haskell evaluating lazy or something else, like that the GHC is pattern matching for IO Monad and then handling it in a special way or something else.</p>\n\n<p>What is the real reason? In the end you end up in a side effect. So why not do it the simple way?</p>\n"}, {"tags": ["haskell", "dynamic"], "answers": [{"comments": [{"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1500258990, "post_id": 45135161, "comment_id": 77239754, "body": "How would you write go to handle cases with no solution?"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "reply_to_user": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1500259349, "post_id": 45135161, "comment_id": 77239831, "body": "If there may be no solution, then I would change the signature of <code>check</code> to output <code>Maybe (Int, Int)</code> to reflect that. When <code>go</code> finds a solution, <code>Just (x, i)</code>; when there is no solution <code>go _ [] = Nothing</code>."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 1, "last_activity_date": 1500258484, "creation_date": 1500258484, "answer_id": 45135161, "question_id": 45134724, "link": "https://stackoverflow.com/questions/45134724/haskell-find-to-2-numbers-from-list-that-add-up-to-target-sum/45135161#45135161", "title": "Haskell: find to 2 numbers from list that add up to target sum", "body": "<p>It looks okay. The fact that <code>go</code> is partial is a bit disturbing, but the problem statement does say that a solution is supposed to exist.</p>\n\n<p><code>IntMap</code> should be preferred when the keys are <code>Int</code>. Then <code>Map</code> for other keys that are small in size. <code>HashMap</code>\u00a0for larger keys (like <code>String</code>).</p>\n\n<p>An immutable <code>Vector</code> would not be right because updating it is too expensive. It is possible to solve the problem with a mutable <code>MVector</code>, because the values of the input are quite small (<code>&lt;= 2000</code>), but that would be more awkward than your current solution in Haskell.</p>\n"}, {"comments": [{"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1500288858, "post_id": 45139873, "comment_id": 77253260, "body": "the numbers in the lists are not all distinct. Does this still work?"}, {"owner": {"reputation": 5755, "user_id": 394253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/985ef765f821b00d3b41ac5ca8aef6a0?s=128&d=identicon&r=PG", "display_name": "Ed&#39;ka", "link": "https://stackoverflow.com/users/394253/edka"}, "reply_to_user": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "edited": false, "score": 0, "creation_date": 1500289893, "post_id": 45139873, "comment_id": 77253950, "body": "@matthias Now it does, I believe. See UPDATE2"}], "tags": [], "owner": {"reputation": 5755, "user_id": 394253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/985ef765f821b00d3b41ac5ca8aef6a0?s=128&d=identicon&r=PG", "display_name": "Ed&#39;ka", "link": "https://stackoverflow.com/users/394253/edka"}, "is_accepted": false, "score": 1, "last_activity_date": 1500289780, "last_edit_date": 1500289780, "creation_date": 1500281921, "answer_id": 45139873, "question_id": 45134724, "link": "https://stackoverflow.com/questions/45134724/haskell-find-to-2-numbers-from-list-that-add-up-to-target-sum/45139873#45139873", "title": "Haskell: find to 2 numbers from list that add up to target sum", "body": "<p>Another approach which does not need map (though still asymptotically equivalent to the OP's version) is to traverse sorted list from both ends moving left or right \"pointer\" depending on the current sum:</p>\n\n<pre><code>import Data.List (sort)\n\ncheck t xs =\n  let sxs = sort xs\n  in go sxs (reverse sxs)\n  where\n    go ls@(l:ls') rs@(r:rs') | l &lt; r = \n      case compare (l + r) t of\n        LT -&gt; go ls' rs\n        EQ -&gt; Just (l,r)\n        GT -&gt; go ls rs'\n    go _ _ = Nothing\n</code></pre>\n\n<p>For simplicity assuming that the numbers in list are all distinct.</p>\n\n<p>UPDATE: Missed the fact that we are after indexes, not values.</p>\n\n<p>UPDATE2: And handle non-distinct case:</p>\n\n<pre><code>check t xs =\n  let sxs = sort $ zip xs [1..]\n  in go sxs (reverse sxs)\n  where\n    go ls@((l,li):ls') rs@((r,ri):rs') | li /= ri = \n      case compare (l + r) t of\n        LT -&gt; go ls' rs\n        EQ -&gt; Just (li,ri)\n        GT -&gt; go ls rs'\n    go _ _ = Nothing\n</code></pre>\n\n<p>Or we can just find all of them:</p>\n\n<pre><code>checkAll t xs =\n  let sxs = sort $ zip xs [1..]\n  in go sxs (reverse sxs) []\n  where\n    go ls@((l,li):ls') rs@((r,ri):rs') ms | li /= ri = \n      case compare (l + r) t of\n        LT -&gt; go ls' rs ms\n        EQ -&gt; go ls' rs ((li,ri):ms)\n        GT -&gt; go ls rs' ms\n    go _ _ ms = ms\n</code></pre>\n"}], "owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 790, "favorite_count": 0, "accepted_answer_id": 45135161, "answer_count": 2, "score": 1, "last_activity_date": 1500289780, "creation_date": 1500253806, "last_edit_date": 1500255512, "question_id": 45134724, "link": "https://stackoverflow.com/questions/45134724/haskell-find-to-2-numbers-from-list-that-add-up-to-target-sum", "title": "Haskell: find to 2 numbers from list that add up to target sum", "body": "<p>My aim: given a list of numbers, find the indices of the first pair of numbers that add up to a target number. This is part of the problem given in an old google-code-jam challenge. <a href=\"https://code.google.com/codejam/contest/351101/dashboard#s=p0\" rel=\"nofollow noreferrer\">https://code.google.com/codejam/contest/351101/dashboard#s=p0</a></p>\n\n<pre><code>\u03bb: check 14 [2,4,6,8,10]\n(3,4)\n</code></pre>\n\n<p>NB indexed from 1</p>\n\n<p>My solution is to create a map then iterate over the list of numbers; on each iteration, check if complement (ie target - current value) exists in the map. If it does I return the current index and index of complement from map. If it does not exist, recurse with current index inserted into map and rest of item list.</p>\n\n<p>1st attempt:</p>\n\n<pre><code>import qualified Data.HashMap as M\n\ncheck :: Int -&gt; [Int] -&gt; (Int, Int)\ncheck target items = go M.empty (zip [1..] items)\n  where\n    go m ((i,v):vs) = case M.lookup (target - v) m of\n      Just x  -&gt; (x,i)\n      Nothing -&gt; go (M.insert v i m) vs\n</code></pre>\n\n<ol>\n<li><p>Is this a correct implementation of my algorithm? It works on my test cases, but I feel that it is not correct Haskell way to write it.  </p></li>\n<li><p>Is HashMap the correct data structure to use? or would something like Vector be better?</p></li>\n</ol>\n\n<p>Also, is this actually a good algorithm for the problem?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1500264510, "post_id": 45133494, "comment_id": 77240894, "body": "I voted to close as &quot;unclear&quot; since it does not &quot;enter C code&quot;.  Haskell is compiled to machine code and does not &quot;enter C&quot;.  There are intermediate languages and the GHC RTS is itself written in C but this does not mean your Haskell primitives ever &quot;enter C&quot;."}, {"owner": {"reputation": 2934, "user_id": 367316, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09837eb8a4cfaac44c1e08b43f72091?s=128&d=identicon&r=PG", "display_name": "Konrad Eisele", "link": "https://stackoverflow.com/users/367316/konrad-eisele"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1500266199, "post_id": 45133494, "comment_id": 77241314, "body": "I disagree: When you compile the main = putStrLn with ghc you can open it with gdb and set a breakpoint at &quot;write&quot; which is in my case symbol  write@GLIBC_2.2.5 defined in libpthread-2.24.so (however I guess implemented in inline assembly in glibc). There is also a FFI mechanism in Haskell, where you end up in C."}, {"owner": {"reputation": 2934, "user_id": 367316, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09837eb8a4cfaac44c1e08b43f72091?s=128&d=identicon&r=PG", "display_name": "Konrad Eisele", "link": "https://stackoverflow.com/users/367316/konrad-eisele"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1500266407, "post_id": 45133494, "comment_id": 77241373, "body": "The real reason I want to know this is because I wonder weather the Monad construct in Haskell is just a convention or weather there is a implementation reason for it: Could you just FFI into libc instead to do IO and skip the Monad? Would it work anyway or is the outcome undeterministic because of Haskell evaluating lazy or something else, like that the GHC is pattern matching for Monad and then handling it in a special way..."}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1500266735, "post_id": 45133494, "comment_id": 77241470, "body": "XY problem. If you want to know something about monadic IO, why not ask a question you want answered? Reading the source of <code>putStrLn</code> or even seeing it executed line by line won&#39;t really help with that question."}, {"owner": {"reputation": 2934, "user_id": 367316, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09837eb8a4cfaac44c1e08b43f72091?s=128&d=identicon&r=PG", "display_name": "Konrad Eisele", "link": "https://stackoverflow.com/users/367316/konrad-eisele"}, "edited": false, "score": 0, "creation_date": 1500268253, "post_id": 45133494, "comment_id": 77241932, "body": "It is hard to state a question that covers the whole subject. For me it would be helpful if someone could answer how the lower implementation details work. I can also ask the question again from another angle..."}, {"owner": {"reputation": 2934, "user_id": 367316, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09837eb8a4cfaac44c1e08b43f72091?s=128&d=identicon&r=PG", "display_name": "Konrad Eisele", "link": "https://stackoverflow.com/users/367316/konrad-eisele"}, "edited": false, "score": 2, "creation_date": 1500268574, "post_id": 45133494, "comment_id": 77242035, "body": "I rephrased it from the more general angle: <a href=\"https://stackoverflow.com/questions/45136398/is-the-monadic-io-construct-in-haskell-just-a-convention\" title=\"is the monadic io construct in haskell just a convention\">stackoverflow.com/questions/45136398/&hellip;</a> However I&#39;m still interested in the implementaion details."}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1500298982, "post_id": 45133494, "comment_id": 77260556, "body": "@KonradEisele Related question: <a href=\"https://stackoverflow.com/questions/34492110/haskell-primputchar-definition\" title=\"haskell primputchar definition\">stackoverflow.com/questions/34492110/&hellip;</a>"}, {"owner": {"reputation": 2934, "user_id": 367316, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09837eb8a4cfaac44c1e08b43f72091?s=128&d=identicon&r=PG", "display_name": "Konrad Eisele", "link": "https://stackoverflow.com/users/367316/konrad-eisele"}, "edited": false, "score": 0, "creation_date": 1500310029, "post_id": 45133494, "comment_id": 77268259, "body": "@danidaz That is the answer I was looking for."}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1500310619, "post_id": 45133494, "comment_id": 77268576, "body": "@KonradEisele and here I wondered why I got a random upvote :D."}, {"owner": {"reputation": 2934, "user_id": 367316, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09837eb8a4cfaac44c1e08b43f72091?s=128&d=identicon&r=PG", "display_name": "Konrad Eisele", "link": "https://stackoverflow.com/users/367316/konrad-eisele"}, "reply_to_user": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1500312054, "post_id": 45133494, "comment_id": 77269340, "body": "@Zeta your answer in the other thread was pretty much what I was interested in. Dont know how to close this thread, I just leave it like it is."}], "owner": {"reputation": 2934, "user_id": 367316, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/f09837eb8a4cfaac44c1e08b43f72091?s=128&d=identicon&r=PG", "display_name": "Konrad Eisele", "link": "https://stackoverflow.com/users/367316/konrad-eisele"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 110, "favorite_count": 1, "closed_date": 1500313119, "answer_count": 0, "score": 4, "last_activity_date": 1500265684, "creation_date": 1500240854, "last_edit_date": 1500265684, "question_id": 45133494, "link": "https://stackoverflow.com/questions/45133494/path-taken-by-haskells-putstrln-to-reach-write-syscall", "closed_reason": "Duplicate", "title": "Path taken by Haskell&#39;s putStrLn to reach write() syscall", "body": "<p>For a simple Haskell program like</p>\n\n<pre><code>main = putStrLn \"Hello\"\n</code></pre>\n\n<p>I would like to know where it <strong><em>exits</em></strong> the functional world of Haskell\nand <strong><em>enters C</em></strong>. If I try to set a breakpoint in ghci at putStrLn I get an error:</p>\n\n<pre><code>ghci&gt; :break putStrLn \ncannot set breakpoint on putStrLn: module System.IO is not interpreted\n</code></pre>\n\n<p>Is there some other way from inside ghci to set a breakpoint in the internal IO functions (maybe some special option or by compiling ghci in a special way ?). I would like to follow putStrLn into libraries/Base/System/IO.hs (putStrLn) or further up in libraries/Base/GHC/IO/Handle/Text.hs (hPutStrLn) to see where it enters C code. </p>\n\n<p><em>Or maybe someone can sketch which paths is taken until the write() syscall is reached</em>?  </p>\n"}, {"tags": ["haskell", "monads", "state-monad"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1500231747, "post_id": 45131961, "comment_id": 77233846, "body": "I can&#39;t understand what is the source of your confusion. <code>gets</code> takes the state and applies a user-provided projection function. <code>modify</code> alters the state with a user-provided function mapping the old state to the new one. What is the problem here? You should edit your question and make it clearer."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1500233256, "post_id": 45131961, "comment_id": 77234324, "body": "If you are going to quote from external sources, please actually quote them. For the 2nd source, the word &quot;apply&quot; doesn&#39;t even appear on the page. What does that page actually <i>say</i> that causes you confusion? (as opposed to stating what you&#39;ve understood from it that causes you confusion). <code>modify</code> changes the state, <code>gets</code> retrieves it. If you want to change the state, you can use <code>modify</code>. If you want to retrieve it, you can use <code>gets</code>."}], "answers": [{"comments": [{"owner": {"reputation": 159, "user_id": 8237830, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ee8cfbfaf68eb21e3587f7741f1e837b?s=128&d=identicon&r=PG&f=1", "display_name": "4xx", "link": "https://stackoverflow.com/users/8237830/4xx"}, "edited": false, "score": 0, "creation_date": 1500238347, "post_id": 45132909, "comment_id": 77235694, "body": "thanks for the answer. I modified the question. I&#39;m after a simple example that allows a series of functions to modify a global state. Something, in principle,  like the 3rd example on the following,  that example does not change the state using some functions: <a href=\"https://wiki.haskell.org/Simple_StateT_use\" rel=\"nofollow noreferrer\">wiki.haskell.org/Simple_StateT_use</a>"}], "tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": true, "score": 1, "last_activity_date": 1500236022, "creation_date": 1500236022, "answer_id": 45132909, "question_id": 45131961, "link": "https://stackoverflow.com/questions/45131961/haskell-monad-state-gets-and-modify/45132909#45132909", "title": "Haskell Monad State: gets and modify", "body": "<p>You never quoted from the second citation so I'll ignore it in this answer. If you clarify that part of the question then I'll try to answer it.</p>\n\n<p>Your cited source one says:</p>\n\n<pre><code>gets :: MonadState s m =&gt; (s -&gt; a) -&gt; m a Source #\nGets specific component of the state, using a projection function supplied.\n</code></pre>\n\n<p>and</p>\n\n<pre><code>modify :: MonadState s m =&gt; (s -&gt; s) -&gt; m () Source #\nMonadic state transformer.\nMaps an old state to a new state inside a state monad.\n</code></pre>\n\n<p>So for <code>gets</code> you can supply a function <code>s -&gt; a</code> and it will return the <code>a</code> after applying that function  to the current state.  For <code>modify</code> you supply a function <code>s -&gt; s</code> and the new state is the result of your function applied to the old state.</p>\n"}], "owner": {"reputation": 159, "user_id": 8237830, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ee8cfbfaf68eb21e3587f7741f1e837b?s=128&d=identicon&r=PG&f=1", "display_name": "4xx", "link": "https://stackoverflow.com/users/8237830/4xx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1025, "favorite_count": 0, "closed_date": 1500243011, "accepted_answer_id": 45132909, "answer_count": 1, "score": 0, "last_activity_date": 1500236593, "creation_date": 1500229199, "last_edit_date": 1500236593, "question_id": 45131961, "link": "https://stackoverflow.com/questions/45131961/haskell-monad-state-gets-and-modify", "closed_reason": "Needs details or clarity", "title": "Haskell Monad State: gets and modify", "body": "<p>I'm confused with the definitions of  gets and modify in monad state.</p>\n\n<hr>\n\n<p><a href=\"https://hackage.haskell.org/package/mtl-2.2.1/docs/Control-Monad-State-Lazy.html\" rel=\"nofollow noreferrer\">Somewhere</a> says:</p>\n\n<p>gets:  \"Gets specific component of the state, using a projection function supplied\". </p>\n\n<p>modify: Maps an old state to a new state inside a state monad. The old state is thrown away.</p>\n\n<p>That means we can use modify to directly assign a value to a component of state, like <a href=\"https://wiki.haskell.org/Simple_StateT_use\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<hr>\n\n<p>But <a href=\"https://wiki.haskell.org/State_Monad\" rel=\"nofollow noreferrer\">somewhere</a> else says we can supply a function to state and result using modify and gets.  </p>\n\n<hr>\n\n<p>It seems both works, but it's not clear to me which one works where!</p>\n"}, {"tags": ["haskell", "function-composition"], "answers": [{"tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 6, "last_activity_date": 1500229448, "last_edit_date": 1500229448, "creation_date": 1500223056, "answer_id": 45130946, "question_id": 45130634, "link": "https://stackoverflow.com/questions/45130634/writing-length-foldr-with-function-composition/45130946#45130946", "title": "Writing length foldr with function composition", "body": "<p>Note that <code>(\\_ -&gt; e) = const e</code>, and here <code>e = (\\y -&gt; y + 1) = (+1)</code>. Therefore,</p>\n\n<pre><code>foldr (const (+1)) 0\n</code></pre>\n"}], "owner": {"reputation": 4639, "user_id": 3986708, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/g0JCF.jpg?s=128&g=1", "display_name": "hgiesel", "link": "https://stackoverflow.com/users/3986708/hgiesel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 106, "favorite_count": 0, "accepted_answer_id": 45130946, "answer_count": 1, "score": 0, "last_activity_date": 1500229448, "creation_date": 1500221036, "question_id": 45130634, "link": "https://stackoverflow.com/questions/45130634/writing-length-foldr-with-function-composition", "title": "Writing length foldr with function composition", "body": "<p>I would like to rewrite</p>\n\n<pre><code>foldr (\\_ y = y + 1) 0\n</code></pre>\n\n<p>using <code>flip</code>, <code>const</code> and <code>(+1)</code> and function composition.</p>\n\n<p>I've gotten this far:</p>\n\n<pre><code>foldr (\\x -&gt; ((+1) . (flip const x)) 0\n</code></pre>\n\n<p>But I can't seem to ditch this lambda. Is there any way to do so?</p>\n"}, {"tags": ["haskell", "types", "ghc", "ambiguous-types"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 10, "creation_date": 1500209631, "post_id": 45128492, "comment_id": 77227198, "body": "An ambiguous type is one which has a type variable in its context which is not mentioned in the body (that to the right of <code>=&gt;</code>) of the type. So <code>RealFloat a =&gt; ..</code> is ambiguous when <code>..</code> doesn&#39;t mention <code>a</code>. Ambiguous types are generally a programmer error, and before TypeApplications they were entirely useless, so you need an extension to allow them. For the last two questions: it doesn&#39;t make the typechecker &#39;unsafe&#39; in any way; and your alternative is to write <code>RealFloat a =&gt; Proxy a -&gt; Bool</code>, where <a href=\"https://hackage.haskell.org/package/base-4.9.1.0/docs/Data-Proxy.html\" rel=\"nofollow noreferrer\">Proxy</a> is here."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 3, "creation_date": 1500212264, "post_id": 45128492, "comment_id": 77227946, "body": "As an alternative, you can use <code>RealFloat a =&gt; Tagged a Bool</code>, where <code>Tagged</code> comes from the <code>tagged</code> package, which can be more efficient than the proxy way under some circumstances."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 6, "creation_date": 1500224100, "post_id": 45128492, "comment_id": 77231482, "body": "<code>AllowAmbiguousTypes</code>, in my eyes, is harmless. In many lambda calculi, types are always passed explicitly (e.g. <code>map @a @b f xs</code>). In plain Haskell, types are inferred -- implying that we do not have to pass them (good), and we can not pass them even if we want (bad). Because of that, types with tyvars which can not be inferred from the types of the arguments or the return value must be forbidden. Hence we have to use proxies/tagged only to make them inferrable, adding clutter. However, now GHC allow explicit type applications, so we no longer have to do that."}, {"owner": {"reputation": 21417, "user_id": 925978, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/06e4467a5bd1538a92cefb20db07897a?s=128&d=identicon&r=PG&f=1", "display_name": "crockeea", "link": "https://stackoverflow.com/users/925978/crockeea"}, "edited": false, "score": 0, "creation_date": 1500231939, "post_id": 45128492, "comment_id": 77233912, "body": "Also see <a href=\"https://stackoverflow.com/questions/23684947/when-is-xallowambiguoustypes-appropriate\">this question</a>."}], "answers": [{"comments": [{"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 0, "creation_date": 1502713574, "post_id": 45664950, "comment_id": 78306338, "body": "<code>since a occurs nowhere else in the type of g</code> \u2190 not only in type, but also doesn&#39;t occur in body. If you use <code>a</code> variable in body of function then you don&#39;t need <code>-XAllowAmbiguousTypes</code>."}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "reply_to_user": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 0, "creation_date": 1502721640, "post_id": 45664950, "comment_id": 78311678, "body": "@Shersh What do you have in mind? If you use the type variable in the body of the function (presumably with <code>ScopedTypeVariables</code> enabled) you don&#39;t pass into the type checker any more way to resolve what <code>a</code> should be at call sites..."}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 0, "creation_date": 1502730573, "post_id": 45664950, "comment_id": 78316788, "body": "Sorry. Somehow I&#39;m wrong. When I tested code from this slide last year with ghc 8.0.1 it worked. But now it doesn&#39;t work without <code>-XAllowAmbiguousTypes</code>: <a href=\"http://slides.com/fp-ctd/lecture-15#/17\" rel=\"nofollow noreferrer\">slides.com/fp-ctd/lecture-15#/17</a> :("}, {"owner": {"reputation": 957, "user_id": 5771245, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d4ff1986f900f764881c1862b5300a6d?s=128&d=identicon&r=PG&f=1", "display_name": "haskellHQ", "link": "https://stackoverflow.com/users/5771245/haskellhq"}, "edited": false, "score": 0, "creation_date": 1503054981, "post_id": 45664950, "comment_id": 78467740, "body": "Thank you. Almost perfect answer. However, can you elaborate a bit on why, without <code>AllowAmbiguousTypes</code>, <code>((undefined :: forall a. RealFloat a =&gt; Bool) :: forall a0. RealFloat a0 =&gt; Bool)</code> fails to typecheck, but for example <code>((undefined :: forall a. RealFloat a =&gt; a -&gt; Bool) :: forall a0. RealFloat a0 =&gt; a0 -&gt; Bool)</code> would successfully typecheck?"}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "reply_to_user": {"reputation": 957, "user_id": 5771245, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d4ff1986f900f764881c1862b5300a6d?s=128&d=identicon&r=PG&f=1", "display_name": "haskellHQ", "link": "https://stackoverflow.com/users/5771245/haskellhq"}, "edited": false, "score": 1, "creation_date": 1503074318, "post_id": 45664950, "comment_id": 78480625, "body": "@haskellHQ <code>((undefined :: forall a. RealFloat a =&gt; Bool) :: forall a0. RealFloat a0 =&gt; Bool)</code> fails to type check because GHC has no way of unifying the two type variables (<code>a</code> and <code>a0</code>). In the case of <code>forall a0. RealFloat a =&gt; a -&gt; Bool</code> and <code>forall a0. RealFloat a0 =&gt; a0 -&gt; Bool</code>, GHC realizes <code>a ~ a0</code> based on comparing the two first parameters."}, {"owner": {"reputation": 957, "user_id": 5771245, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d4ff1986f900f764881c1862b5300a6d?s=128&d=identicon&r=PG&f=1", "display_name": "haskellHQ", "link": "https://stackoverflow.com/users/5771245/haskellhq"}, "edited": false, "score": 0, "creation_date": 1503080133, "post_id": 45664950, "comment_id": 78483573, "body": "This explains everything. Thank you!"}], "tags": [], "owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "is_accepted": true, "score": 20, "last_activity_date": 1502659090, "last_edit_date": 1502659090, "creation_date": 1502658701, "answer_id": 45664950, "question_id": 45128492, "link": "https://stackoverflow.com/questions/45128492/what-is-allowambiguoustypes-and-why-is-it-needed-in-this-forall-example/45664950#45664950", "title": "What is AllowAmbiguousTypes and why is it needed in this &quot;forall&quot; example?", "body": "<blockquote>\n  <p>What exactly is <code>AllowAmbiguousTypes</code>?</p>\n</blockquote>\n\n<p>From the <a href=\"https://downloads.haskell.org/~ghc/8.2.1/docs/html/users_guide/glasgow_exts.html#ambiguous-types-and-the-ambiguity-check\" rel=\"noreferrer\">latest GHC docs</a>, \"a type <code>ty</code> is ambiguous if and only if <code>((undefined :: ty) :: ty)</code> would fail to typecheck\". The extension <code>AllowAmbiguousTypes</code> just disables this check - it won't allow ill-typed programs through.</p>\n\n<blockquote>\n  <p>Why is it needed to make this particular code work?</p>\n</blockquote>\n\n<p>In order to check that <code>RealFloat a</code> is satisfied whenever <code>g</code> is used, GHC needs to know what <code>a</code> is. You have not way (in vanilla Haskell<sup>1</sup>) of telling GHC what <code>a</code> should be since <code>a</code> occurs nowhere else in the type of <code>g</code>. No amount of annotations will let you use <code>g</code> without getting an ambiguous type variable error.</p>\n\n<p>However, if you don't <em>use</em> <code>g</code> anywhere, you can still get your code to compile by turning on <code>AllowAmbiguousTypes</code>.</p>\n\n<blockquote>\n  <p>I fear that adding <code>AllowAmbiguousTypes</code> is giving me more than I really want in this particular code. It sounds scary. It sounds like it will make Haskell's type system less safe, perhaps in other areas that have nothing to do with this particular code. Are these fears unfounded?</p>\n</blockquote>\n\n<p>Yes they are: the ambiguity check lets you catch definitions which cannot (in vanilla Haskell, which doesn't have <code>TypeApplications</code><sup>1</sup>) be used without resulting in an ambiguous type variable error. Disabling this check just means you will see the ambiguous type variable messages when you use the expression (or function) instead of at its definition site.</p>\n\n<blockquote>\n  <p>Are there any alternatives? In this case, it seems like Haskell is inserting a <code>a0</code> type variable that I never asked for. Is there no extension to tell Haskell not to create these extraneous type variables - and only use those that I explicitly told it to add with my own explicit <code>forall a</code>?</p>\n</blockquote>\n\n<p>The <code>a0</code> is coming from the ambiguity check I mentioned at the beginning of this answer. GHC just uses the name <code>a0</code> to make it clear it is different from <code>a</code>. The ambiguity check basically just tries to typecheck</p>\n\n<pre><code>((undefined :: forall a. RealFloat a =&gt; Bool) :: forall a0. RealFloat a0 =&gt; Bool)\n</code></pre>\n\n<p><code>AllowAmbiguousTypes</code> removes this check. I don't think there is an extension that disables ambiguity checks only on type signatures with explicit <code>forall</code>s (although this might be neat and useful!).</p>\n\n<blockquote>\n  <p>Would you say that <code>AllowAmbiguousTypes</code> is a misnomer? Would it have been better named as <code>AllowUnusedTypeVariables</code>?</p>\n</blockquote>\n\n<p>Naming things is hard. :)</p>\n\n<p>The current name references the type of errors you get without the extension enabled, so it isn't a bad name. I guess this is a matter of opinion. (A lot of people also wish <code>Monad</code> was called something like <code>FlatMapAble</code>.)</p>\n\n<hr>\n\n<p><sup>1</sup> Prior to <code>TypeApplications</code> (which is a relatively new extension from GHC 8.0), there really was no way of using expressions that triggered the ambiguity check without getting an ambiguous type variable error, so <code>AllowAmbiguousTypes</code> was a lot less useful.</p>\n"}], "owner": {"reputation": 957, "user_id": 5771245, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d4ff1986f900f764881c1862b5300a6d?s=128&d=identicon&r=PG&f=1", "display_name": "haskellHQ", "link": "https://stackoverflow.com/users/5771245/haskellhq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2773, "favorite_count": 3, "accepted_answer_id": 45664950, "answer_count": 1, "score": 15, "last_activity_date": 1602239361, "creation_date": 1500207457, "last_edit_date": 1602239361, "question_id": 45128492, "link": "https://stackoverflow.com/questions/45128492/what-is-allowambiguoustypes-and-why-is-it-needed-in-this-forall-example", "title": "What is AllowAmbiguousTypes and why is it needed in this &quot;forall&quot; example?", "body": "<p>The code</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables, TypeApplications #-}\n\n-- I know this particular example is silly.\n-- But that's not the point here.\ng :: forall a . RealFloat a =&gt; Bool\ng = True\n\nmain :: IO ()\nmain = print (g @Double)\n</code></pre>\n\n<p>fails to compile on GHC 8.0 with the error</p>\n\n<pre><code>\u2022 Could not deduce (RealFloat a0)\n      from the context: RealFloat a\n        bound by the type signature for:\n                   g :: RealFloat a =&gt; Bool\n        at app/Main.hs:3:6-35\n      The type variable \u2018a0\u2019 is ambiguous\n    \u2022 In the ambiguity check for \u2018g\u2019\n      To defer the ambiguity check to use sites, enable AllowAmbiguousTypes\n      In the type signature:\n        g :: forall a. RealFloat a =&gt; Bool\n</code></pre>\n\n<p>So adding <code>AllowAmbiguousTypes</code> will make the code compile.</p>\n\n<p>Here are my questions:</p>\n\n<ul>\n<li>What exactly is <code>AllowAmbiguousTypes</code>?</li>\n<li>Why is it needed to make this particular code work?</li>\n<li>I fear that adding <code>AllowAmbiguousTypes</code> is giving me more than I really want in this particular code. It sounds scary. It sounds like it will make Haskell's type system less safe, perhaps in other areas that have nothing to do with this particular code. Are these fears unfounded?</li>\n<li>Are there any alternatives? In this case, it seems like Haskell is inserting a <code>a0</code> type variable that I never asked for. Is there no extension to tell Haskell not to create these extraneous type variables - and only use those that I explicitly told it to add with my own explicit <code>forall a</code>?</li>\n<li>Added one question because of <a href=\"https://stackoverflow.com/users/2407038/user2407038\">user2407038</a>'s comment: Would you say that <code>AllowAmbiguousTypes</code> is a misnomer? Would it have been better named as <code>AllowUnusedTypeVariables</code>?</li>\n</ul>\n"}, {"tags": ["haskell", "haskell-stack"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 19, "creation_date": 1500200030, "post_id": 45126985, "comment_id": 77224643, "body": "<code>stack exec ghc-pkg -- list</code> outside of a project directory."}], "answers": [{"tags": [], "owner": {"reputation": 391, "user_id": 10758252, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/0aaDF.jpg?s=128&g=1", "display_name": "J&#246;rg Br&#252;ggmann", "link": "https://stackoverflow.com/users/10758252/j%c3%b6rg-br%c3%bcggmann"}, "is_accepted": false, "score": 2, "last_activity_date": 1611587332, "last_edit_date": 1611587332, "creation_date": 1611586991, "answer_id": 65887270, "question_id": 45126985, "link": "https://stackoverflow.com/questions/45126985/how-to-list-the-global-packages-installed-by-stack/65887270#65887270", "title": "How to list the global packages installed by `stack`?", "body": "<p>Just to make visible, that there is already an answer from user2407038...</p>\n<h2>Command</h2>\n<p>The following command lists all packages, including the installed ones</p>\n<pre><code>stack exec ghc-pkg -- list\n</code></pre>\n<h2>Output</h2>\n<p>Created the following output for ghc 8.8.4 (private output is kept private):</p>\n<pre><code>C:\\Users\\Joerg\\AppData\\Local\\Programs\\stack\\x86_64-windows\\ghc-8.8.4\\lib\\package.conf.dCabal-3.0.1.0\n    Win32-2.6.1.0\n    array-0.5.4.0\n    base-4.13.0.0\n    binary-0.8.7.0\n    bytestring-0.10.10.1\n    containers-0.6.2.1\n    deepseq-1.4.4.0\n    directory-1.3.6.0\n    filepath-1.4.2.1\n    (ghc-8.8.4)\n    ghc-boot-8.8.4\n    ghc-boot-th-8.8.4\n    ghc-compact-0.1.0.0\n    ghc-heap-8.8.4\n    ghc-prim-0.5.3\n    ghci-8.8.4\n    haskeline-0.7.5.0\n    hpc-0.6.0.3\n    integer-gmp-1.0.2.0\n    libiserv-8.8.4\n    mtl-2.2.2\n    parsec-3.1.14.0\n    pretty-1.1.3.6\n    process-1.6.9.0\n    rts-1.0\n    stm-2.5.0.0\n    template-haskell-2.15.0.0\n    text-1.2.4.0\n    time-1.9.3\n    transformers-0.5.6.2\n    xhtml-3000.2.2.1\n\nC:\\sr\\snapshots\\...\n    ...\nC:\\...\\...\\.stack-work\\install\\...\\pkgdb\n    ...\n</code></pre>\n<h2>Source</h2>\n<p><a href=\"https://docs.haskellstack.org/en/stable/GUIDE/#different-databases\" rel=\"nofollow noreferrer\">https://docs.haskellstack.org/en/stable/GUIDE/#different-databases</a></p>\n"}], "owner": {"reputation": 2862, "user_id": 2613769, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/200dde59bd0be1e302c0d89ed34f5081?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/2613769/ben"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3189, "favorite_count": 4, "answer_count": 1, "score": 14, "last_activity_date": 1611587332, "creation_date": 1500196836, "question_id": 45126985, "link": "https://stackoverflow.com/questions/45126985/how-to-list-the-global-packages-installed-by-stack", "title": "How to list the global packages installed by `stack`?", "body": "<p>I want to check if some package is installed globally by <code>stack</code>. How to do that?</p>\n"}, {"tags": ["haskell", "syntax", "notation"], "answers": [{"tags": [], "owner": {"reputation": 20862, "user_id": 376113, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/d3a5bd12fe6d876527a3cf4ac0de5fc6?s=128&d=identicon&r=PG", "display_name": "mb14", "link": "https://stackoverflow.com/users/376113/mb14"}, "is_accepted": true, "score": 9, "last_activity_date": 1500213903, "last_edit_date": 1500213903, "creation_date": 1500189063, "answer_id": 45126018, "question_id": 45125904, "link": "https://stackoverflow.com/questions/45125904/syntax-of-where-block/45126018#45126018", "title": "Syntax of where block", "body": "<p>It  is the syntax to declare a function. It is the equivalent to</p>\n\n<pre><code> where g = \\a b c -&gt; (a,c)\n</code></pre>\n\n<p><code>g</code> is a function which takes 3 arguments and returns a tuple</p>\n"}, {"tags": [], "owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "is_accepted": false, "score": 2, "last_activity_date": 1500193038, "creation_date": 1500193038, "answer_id": 45126474, "question_id": 45125904, "link": "https://stackoverflow.com/questions/45125904/syntax-of-where-block/45126474#45126474", "title": "Syntax of where block", "body": "<blockquote>\n  <p>How is <code>g a b c</code> syntactically valid?</p>\n</blockquote>\n\n<p>It's valid for the same reason same definition on the top-level of the module would be valid. The difference between definitions in <code>where</code> and top level is just that you have variables bound in function's head (e.g. <code>x</code> in your last example) in scope and can use them on the right side, but this doesn't mean you <em>have</em> to use them.</p>\n"}], "owner": {"reputation": 53, "user_id": 3105565, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f06b9237fcd210145f87d9db855c3e25?s=128&d=identicon&r=PG&f=1", "display_name": "schmauss", "link": "https://stackoverflow.com/users/3105565/schmauss"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 118, "favorite_count": 0, "accepted_answer_id": 45126018, "answer_count": 2, "score": 2, "last_activity_date": 1500213903, "creation_date": 1500188043, "last_edit_date": 1500200201, "question_id": 45125904, "link": "https://stackoverflow.com/questions/45125904/syntax-of-where-block", "title": "Syntax of where block", "body": "<p>I'm reading Programming in Haskell by Graham Hutton and it gives the following code in Chapter 13:</p>\n\n<pre><code>import Control.Applicative\nimport Data.Char\n\n{- some code omitted -}\n\nnewtype Parser a = P (String -&gt; [(a, String)])\n\nitem :: Parser Char\nitem = P (\\ input -&gt; case input of\n                     []   -&gt; []\n                     x:xs -&gt; [(x,xs)])\n\nthree :: Parser (Char,Char)\nthree = pure g &lt;*&gt; item &lt;*&gt; item &lt;*&gt; item\n        where g a b c = (a,c)\n</code></pre>\n\n<p>I'm having a hard time understanding the last line</p>\n\n<pre><code>where g a b c = (a,c)\n</code></pre>\n\n<p>I understand that this line exists because three has type Parser(Char, Char) but what does g a b c represent? How is g a b c syntactically valid? I'm used to seeing where in cases like</p>\n\n<pre><code>f :: s -&gt; (a,s)\nf x = y\n   where y = ... x ...\n</code></pre>\n\n<p>where each symbol x and y appear before the where declaration.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 35578, "user_id": 3000206, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/BK1fo.jpg?s=128&g=1", "display_name": "Carcigenicate", "link": "https://stackoverflow.com/users/3000206/carcigenicate"}, "edited": false, "score": 0, "creation_date": 1500142054, "post_id": 45121260, "comment_id": 77213369, "body": "The type signature appears to be correct, unless it&#39;s expecting only the n-th term to be returned. In that case it should just return an <code>a</code>, not a <code>[a] </code>. And note for the actual problem itself though, you&#39;ll need to ask a specific question regarding it. It&#39;s inappropriate to just post your homework and ask for general help. What <i>specifically</i> do you need help with?"}, {"owner": {"reputation": 1404, "user_id": 5559663, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sQiE2.gif?s=128&g=1", "display_name": "baxbaxwalanuksiwe", "link": "https://stackoverflow.com/users/5559663/baxbaxwalanuksiwe"}, "edited": false, "score": 0, "creation_date": 1500142477, "post_id": 45121260, "comment_id": 77213509, "body": "Short answer: <code>gen f x n = take n (iterate f x)</code> but you are maybe trying to write the function yourself instead of using builtin functions too much."}, {"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 0, "creation_date": 1500143561, "post_id": 45121260, "comment_id": 77213814, "body": "<code>gen f x = x : gen f (f x)</code>"}], "answers": [{"comments": [{"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 1, "creation_date": 1500143288, "post_id": 45121433, "comment_id": 77213753, "body": "My guess is they&#39;re expected to implement <code>iterate</code> themselves. Otherwise they could just do <code>gen = iterate</code> (since the homework doesn&#39;t actually specify <code>n</code> is a parameter)."}], "tags": [], "owner": {"reputation": 3946, "user_id": 1261166, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/vL1Ud.jpg?s=128&g=1", "display_name": "Viktor Mellgren", "link": "https://stackoverflow.com/users/1261166/viktor-mellgren"}, "is_accepted": false, "score": 1, "last_activity_date": 1500145413, "last_edit_date": 1500145413, "creation_date": 1500143099, "answer_id": 45121433, "question_id": 45121260, "link": "https://stackoverflow.com/questions/45121260/haskell-how-to-make-a-list-of-results/45121433#45121433", "title": "Haskell how to make a list of results", "body": "<p>I think <code>iterate</code> would suffice, it has the signature <code>iterate :: (a -&gt; a) -&gt; a -&gt; [a]</code>:</p>\n\n<p>For example <code>iterate (*2) 1</code> gives you an infinite list of powers of 2 <code>[1,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768,65536,131072,262144,524288, ...]</code></p>\n\n<p>or you could do something like:</p>\n\n<p><code>gen f x =  x : gen f (f x)</code></p>\n"}, {"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1500144085, "post_id": 45121555, "comment_id": 77213940, "body": "Good! The <code>take (n-1)</code> is superfluous though (and highly performance-diminishing, because it&#39;s applied over an over, at every single step); the recursive call only yields a list of length <code>n-1</code> anyway. <i>Anyway</i> as Viktor Mellgren said it might not be necessary to limit the list length in any way at all \u2013 you can just generate an infinite lazy list, like <a href=\"http://hackage.haskell.org/package/base-4.9.1.0/docs/Data-List.html#v:iterate\" rel=\"nofollow noreferrer\"><code>iterate</code></a> does, and then pick/prine elements as needed."}], "tags": [], "owner": {"reputation": 17, "user_id": 2478642, "user_type": "registered", "accept_rate": 20, "profile_image": "https://www.gravatar.com/avatar/3eded30d2c94920cba8162522f738001?s=128&d=identicon&r=PG", "display_name": "Maksim Kerbel", "link": "https://stackoverflow.com/users/2478642/maksim-kerbel"}, "is_accepted": false, "score": 0, "last_activity_date": 1500143934, "creation_date": 1500143934, "answer_id": 45121555, "question_id": 45121260, "link": "https://stackoverflow.com/questions/45121260/haskell-how-to-make-a-list-of-results/45121555#45121555", "title": "Haskell how to make a list of results", "body": "<p>i tried to use your advices\nso i got this </p>\n\n<pre><code>gen :: (a-&gt;a)-&gt;a-&gt;Int-&gt;[a]\ngen f x 0 = [x]\ngen f x n = x  : take (n-1) ( gen f (f x) (n-1))\n</code></pre>\n"}], "owner": {"reputation": 17, "user_id": 2478642, "user_type": "registered", "accept_rate": 20, "profile_image": "https://www.gravatar.com/avatar/3eded30d2c94920cba8162522f738001?s=128&d=identicon&r=PG", "display_name": "Maksim Kerbel", "link": "https://stackoverflow.com/users/2478642/maksim-kerbel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 458, "favorite_count": 0, "answer_count": 2, "score": -2, "last_activity_date": 1500149493, "creation_date": 1500141881, "last_edit_date": 1500149493, "question_id": 45121260, "link": "https://stackoverflow.com/questions/45121260/haskell-how-to-make-a-list-of-results", "title": "Haskell how to make a list of results", "body": "<p>i am trying to solve my homework, but have no Idea how. pls help me</p>\n\n<blockquote>\n  <p>Write a method which generates the following list from a function f\n  and a starting value x: [x, f ^ 1 (x), f ^ 2 (x), f ^ 3(x)...] f^n(x) \n  is the n-time application of f to x.</p>\n</blockquote>\n\n<p>is the type of function right?</p>\n\n<pre><code>gen :: (a-&gt;a)-&gt;a-&gt;Int-&gt;[a]\ngen f x 0 = [x]\n</code></pre>\n"}, {"tags": ["macos", "haskell", "ghci"], "comments": [{"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 0, "creation_date": 1500132637, "post_id": 45119639, "comment_id": 77210505, "body": "The project&#39;s <code>.ghci</code> <i>should</i> override the global one. Could you give an example of configurations that don&#39;t act how you expect?"}, {"owner": {"reputation": 185, "user_id": 7147804, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/c838f7fe5963d449ead5757805900b41?s=128&d=identicon&r=PG&f=1", "display_name": "user7147804", "link": "https://stackoverflow.com/users/7147804/user7147804"}, "reply_to_user": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 1, "creation_date": 1500134023, "post_id": 45119639, "comment_id": 77210927, "body": "the :set prompt in Project/.ghci doesn&#39;t override the :set prompt in ~/.ghci"}], "answers": [{"comments": [{"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1500171119, "post_id": 45120332, "comment_id": 77219246, "body": "From the link, this information might be useful: &quot;Additionally, any files specified with <code>-ghci-script</code> flags will be read after the standard files, allowing the use of custom .ghci files.&quot;"}], "tags": [], "owner": {"reputation": 1336, "user_id": 794944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b885541101d504bbd39901d5d7fc1766?s=128&d=identicon&r=PG", "display_name": "Jack Henahan", "link": "https://stackoverflow.com/users/794944/jack-henahan"}, "is_accepted": false, "score": 2, "last_activity_date": 1500135693, "creation_date": 1500135693, "answer_id": 45120332, "question_id": 45119639, "link": "https://stackoverflow.com/questions/45119639/multiple-ghci-files/45120332#45120332", "title": "Multiple .ghci Files", "body": "<p>Unfortunately, this isn't how <code>ghci</code> works according to <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/ghci.html#the-ghci-and-haskeline-files\" rel=\"nofollow noreferrer\">the docs</a>. It loads all <code>.ghci</code> files in order, starting with the one in the current directory, which is why your prompt is taking on the value in your root <code>.ghci</code> rather than the one in the project.</p>\n\n<p>You may have a better experience removing the <code>.ghci</code> files and using <code>cabal new-build</code> and <code>cabal new-repl</code>, assuming your project is Cabalized. This doesn't give you an option to set the prompt, but if that's an important element then you could always retain the <code>.ghci</code> at the project level and remove the global one. You'll still be able to specify available modules and extensions, though.</p>\n"}], "owner": {"reputation": 185, "user_id": 7147804, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/c838f7fe5963d449ead5757805900b41?s=128&d=identicon&r=PG&f=1", "display_name": "user7147804", "link": "https://stackoverflow.com/users/7147804/user7147804"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1500135693, "creation_date": 1500131205, "question_id": 45119639, "link": "https://stackoverflow.com/questions/45119639/multiple-ghci-files", "title": "Multiple .ghci Files", "body": "<p>I have a .ghci file with configurations for a Haskell project in the directory Project. When I run ghci from the Mac terminal in the directory Project, ghci loads both the project's Project/.ghci file and the home directory ~/.ghci file. Is there a method to prevent the ~./ghci configurations from being loaded or have the Project/.ghci overwrite the ~./ghci configurations?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1500115599, "post_id": 45117288, "comment_id": 77205743, "body": "You better use tuples."}, {"owner": {"reputation": 1231, "user_id": 6026051, "user_type": "registered", "accept_rate": 71, "profile_image": "https://lh4.googleusercontent.com/-dO8H_7VApJo/AAAAAAAAAAI/AAAAAAAAFCw/Of-7HvES4dE/photo.jpg?sz=128", "display_name": "danish sodhi", "link": "https://stackoverflow.com/users/6026051/danish-sodhi"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1500115649, "post_id": 45117288, "comment_id": 77205756, "body": "Actually I need to do this for unit testing that returns a list with two elements."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 4, "creation_date": 1500117099, "post_id": 45117288, "comment_id": 77206173, "body": "Since you are doing it for unit testing, you should also test it is indeed a list of two elements. E.g. something like <code>case mylist of [x,y] -&gt; actualTest x y ; _ -&gt; testFailed</code>"}, {"owner": {"reputation": 277, "user_id": 6063947, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/cba0e3566e2aaa7a3b475d46728b6c56?s=128&d=identicon&r=PG", "display_name": "iamwhoiam", "link": "https://stackoverflow.com/users/6063947/iamwhoiam"}, "edited": false, "score": 0, "creation_date": 1500127820, "post_id": 45117288, "comment_id": 77209098, "body": "How about not using pattern matching and using something like <code>returnedList = myList</code> and then asserting that <code>returnedList</code> has length two? If the individual elements need to be accessed, they can be done using <code>returnedList !! 0</code> or <code>returnedList !! 1</code>"}], "answers": [{"tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": false, "score": 2, "last_activity_date": 1500127689, "creation_date": 1500127689, "answer_id": 45119102, "question_id": 45117288, "link": "https://stackoverflow.com/questions/45117288/pattern-matching-in-haskell-for-lists/45119102#45119102", "title": "Pattern matching in haskell for lists", "body": "<p>When teaching people to unit test in ML-based languages, I often get the question on how to verify a monadic value. Is that what's you're trying to do here?</p>\n\n<p>The question is often a variation on:</p>\n\n<p><em>How do I get the value out of the monad?</em></p>\n\n<p>My answer is typically:</p>\n\n<p><em>You don't. You step into the monad.</em></p>\n\n<p>Are you trying to do something like this?</p>\n\n<pre><code>assertEquals \"Apple\" firstelement\nassertEquals \"Mango\" secondelement\n</code></pre>\n\n<p>Here, I'm assuming that you have some sort of <code>assertEquals</code> function...</p>\n\n<p>If so, it helps to realise that Haskell lists are <code>Eq</code> when elements are <code>Eq</code>, so instead, you could just write something like this:</p>\n\n<pre><code>assertEquals [\"Apple\", \"Mango\"] mylist\n</code></pre>\n\n<p>If that doesn't work for you, you could introduce a little helper function like this:</p>\n\n<pre><code>tryPair :: [a] -&gt; Maybe (a, a)\ntryPair [x, y] = Just (x, y)\ntryPair _      = Nothing\n</code></pre>\n\n<p>This would enable you to first do this:</p>\n\n<pre><code>m = tryPair mylist\n</code></pre>\n\n<p><code>Maybe a</code> is also <code>Eq</code> if <code>a</code> is <code>Eq</code>, so you could write your assertion like this:</p>\n\n<pre><code>assertEquals (Just (\"Apple\", \"Mango\")) m\n</code></pre>\n\n<p>If this <em>still</em> doesn't work for you, perhaps you could write a test utility function like this:</p>\n\n<pre><code>assertJust :: Maybe a -&gt; (a -&gt; ()) -&gt; ()\nassertJust (Just x) f = f x\nassertJust Nothing _ = assertFail \"Boo! Nothing!\"\n</code></pre>\n\n<p>This would enable you to write something like this:</p>\n\n<pre><code>assertJust (tryPair mylist) $ \\(x, y) -&gt; assertEquals \"Apple\" x\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1336, "user_id": 794944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b885541101d504bbd39901d5d7fc1766?s=128&d=identicon&r=PG", "display_name": "Jack Henahan", "link": "https://stackoverflow.com/users/794944/jack-henahan"}, "is_accepted": false, "score": 0, "last_activity_date": 1500136792, "last_edit_date": 1500136792, "creation_date": 1500136374, "answer_id": 45120457, "question_id": 45117288, "link": "https://stackoverflow.com/questions/45117288/pattern-matching-in-haskell-for-lists/45120457#45120457", "title": "Pattern matching in haskell for lists", "body": "<p>You can write this as</p>\n\n<pre><code>mylist = [\"Apple\", \"Mango\"]\nfirstelement : secondelement : _ = mylist\n</code></pre>\n\n<p>to get the exact thing that you want, though the other approaches suggested here are probably better, conceptually. Note that this will only work with lists of at least 2 elements.</p>\n"}], "owner": {"reputation": 1231, "user_id": 6026051, "user_type": "registered", "accept_rate": 71, "profile_image": "https://lh4.googleusercontent.com/-dO8H_7VApJo/AAAAAAAAAAI/AAAAAAAAFCw/Of-7HvES4dE/photo.jpg?sz=128", "display_name": "danish sodhi", "link": "https://stackoverflow.com/users/6026051/danish-sodhi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 361, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1500136792, "creation_date": 1500115512, "last_edit_date": 1500117388, "question_id": 45117288, "link": "https://stackoverflow.com/questions/45117288/pattern-matching-in-haskell-for-lists", "title": "Pattern matching in haskell for lists", "body": "<p>[Noob question]\nI have a list in haskell with only two elements : </p>\n\n<pre><code>mylist = [\"Apple\", \"Mango\"]\n</code></pre>\n\n<p>When I try to do pattern matching like this</p>\n\n<pre><code>[firstelemet ,secondelement] = mylist;\n</code></pre>\n\n<p>I get this kind of warning. </p>\n\n<blockquote>\n  <p>warning: [-Wincomplete-uni-patterns]\n      Pattern match(es) are non-exhaustive\n      In a pattern binding:\n          Patterns not matched:\n              []\n              [<em>]\n              (</em>:<em>:</em>:_)</p>\n</blockquote>\n\n<p>Any suggestions on how this can be done in a better way. Actually I need to do this for unit testing that returns a list with two elements.</p>\n"}, {"tags": ["haskell", "monad-transformers"], "comments": [{"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 0, "creation_date": 1500112166, "post_id": 45116544, "comment_id": 77204731, "body": "They definitely get executed, it&#39;s just that they&#39;re designed to be a no-op. If you don&#39;t want that functionality, don&#39;t use that function."}, {"owner": {"reputation": 1747, "user_id": 343761, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/cf716ff342bad8a3aa8178ab9b39366d?s=128&d=identicon&r=PG", "display_name": "homam", "link": "https://stackoverflow.com/users/343761/homam"}, "reply_to_user": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 0, "creation_date": 1500127737, "post_id": 45116544, "comment_id": 77209075, "body": "I don&#39;t understand it, from my point of view nothing gets evaluated after <code>throwE</code>, for example this <code>throwMT &quot;Some Error&quot; &gt;&gt;= undefined</code> does not result in a runtime error."}, {"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 1, "creation_date": 1500129413, "post_id": 45116544, "comment_id": 77209542, "body": "The bind will be evaluated, but the function parameter is ignored if there&#39;s been an exception. That&#39;s part of the definition of <code>ExceptT</code>. You could call it dead code, but that behavior is kind of the point of the monad."}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 3, "last_activity_date": 1500139693, "creation_date": 1500139693, "answer_id": 45120933, "question_id": 45116544, "link": "https://stackoverflow.com/questions/45116544/exceptt-dead-code-detection/45120933#45120933", "title": "ExceptT Dead Code Detection", "body": "<ol>\n<li>It is true.</li>\n<li>I know of no dead-code elimination tools available today for Haskell.</li>\n</ol>\n"}, {"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 3, "last_activity_date": 1500146204, "creation_date": 1500146204, "answer_id": 45121908, "question_id": 45116544, "link": "https://stackoverflow.com/questions/45116544/exceptt-dead-code-detection/45121908#45121908", "title": "ExceptT Dead Code Detection", "body": "<p>Let's ignore the <code>MyTrans</code> newtype noise, and just look at</p>\n\n<pre><code>throwE x &gt;&gt;= f :: ExceptT e IO a\n</code></pre>\n\n<p>Digging into <code>Control.Monad.Trans.Except</code>, we see</p>\n\n<pre><code>newtype ExceptT e m a =\n  ExceptT {runExceptT :: m (Either e a)}\n\nthrowE :: Monad m =&gt; e -&gt; ExceptT e m a\nthrowE e = ExceptT (pure (Left e))\n\ninstance Monad m =&gt; Monad (ExceptT e m) where\n  m &gt;&gt;= f = ExceptT $ do\n    res &lt;- runExceptT m\n    case res of\n      Left e -&gt; pure (Left e)\n      Right r -&gt; runExceptT (f r)\n</code></pre>\n\n<p>Inlining these (something GHC likes to do), we see that <code>throwE e &gt;&gt;= f</code> is</p>\n\n<pre><code>ExceptT $ do\n  res &lt;- pure (Left e)\n  case res of\n    Left e -&gt; pure (Left e)\n    Right r -&gt; runExceptT (f r)\n</code></pre>\n\n<p>Given just this for an arbitrary monad, GHC wouldn't get any further, because it doesn't know that <code>m</code> is a law-abiding monad and doesn't look for \"free theorems\" that could potentially help.</p>\n\n<p>However, this isn't an arbitrary monad! It's <code>IO</code>!</p>\n\n<pre><code>newtype IO a =\n  IO (State# RealWorld\n            -&gt; (# State# RealWorld, a #))\nunIO :: IO a -&gt; State# RealWorld\n            -&gt; (# State# RealWorld, a #)\nunIO (IO f) = f\n\ninstance Monad IO where\n  return a = IO $ \\s -&gt; (# s, a #)\n  IO m &gt;&gt;= f = IO $ \\s -&gt;\n    case m s of\n      (# s', a #) -&gt; unIO (f a) s'\n</code></pre>\n\n<p>The left identity law can be \"proved\" for <code>IO</code> by optimization.</p>\n\n<pre><code>return a &gt;&gt;= g\n= inlining\nIO $ \\s -&gt;\n  case (\\t -&gt; (# t, a #)) s of\n    (# s', r #) -&gt; unIO (g r) s'\n= beta reduction\nIO $ \\s -&gt;\n  case (# s, a #) of\n    (# s', r #) -&gt; unIO (g r) s'\n= case of known constructor\nIO $ \\s -&gt; unIO (g a) s\n= (assuming g has arity at least two, which it will here)\ng a\n</code></pre>\n\n<p>Applying this information, <code>throwE e &gt;&gt;= f</code> becomes</p>\n\n<pre><code>ExceptT $\n  (\\res -&gt; case res of\n    Left e -&gt; pure (Left e)\n    Right r -&gt; runExceptT (f r)) (Left e)\n</code></pre>\n\n<p>Beta reducing and applying case of known constructor yields</p>\n\n<pre><code>ExceptT $ pure (Left e)\n</code></pre>\n\n<p>The dead code has been completely eliminated.</p>\n"}], "owner": {"reputation": 1747, "user_id": 343761, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/cf716ff342bad8a3aa8178ab9b39366d?s=128&d=identicon&r=PG", "display_name": "homam", "link": "https://stackoverflow.com/users/343761/homam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1500146204, "creation_date": 1500110149, "question_id": 45116544, "link": "https://stackoverflow.com/questions/45116544/exceptt-dead-code-detection", "title": "ExceptT Dead Code Detection", "body": "<p>In a <code>ExceptT</code> Monad transformer stack, bind expressions after <code>throwE</code> will not get executed.</p>\n\n<ol>\n<li>Is it true? </li>\n<li>If so how can I configure the compiler or my tooling to detect dead code like this example?</li>\n</ol>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE\n    GeneralizedNewtypeDeriving\n#-}\n\nimport Control.Monad.Except (MonadError (..), MonadIO, liftIO)\nimport Control.Monad.Trans.Except (ExceptT, runExceptT, throwE)\n\nnewtype MyTrans e a = MyTrans { unMyTrans :: ExceptT e IO a  } \n  deriving (Functor, Applicative, Monad, MonadIO, MonadError e)\n\nthrowMT :: e -&gt; MyTrans e a\nthrowMT = MyTrans . throwE\n\nrunMyTrans :: MyTrans e a -&gt; IO (Either e a)\nrunMyTrans = runExceptT . unMyTrans\n\ncomp = do\n  liftIO $ putStrLn \"Starting Computation\"\n  throwMT \"Some Error\"\n  -- dead code from this line\n  liftIO $ putStrLn \"Ending Computation\"\n  return ()\n\n\nmain = print =&lt;&lt; runMyTrans comp\n</code></pre>\n"}, {"tags": ["haskell", "deriving"], "comments": [{"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 3, "creation_date": 1500077792, "post_id": 45113205, "comment_id": 77197900, "body": "<code>deriving</code> clauses are in fact magic. Without TH, I&#39;m afraid there&#39;s not really a way to do what you want to do."}, {"owner": {"reputation": 1404, "user_id": 5559663, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sQiE2.gif?s=128&g=1", "display_name": "baxbaxwalanuksiwe", "link": "https://stackoverflow.com/users/5559663/baxbaxwalanuksiwe"}, "edited": false, "score": 2, "creation_date": 1500130381, "post_id": 45113205, "comment_id": 77209843, "body": "Consider making a RFC in <a href=\"https://github.com/haskell/rfcs\" rel=\"nofollow noreferrer\">github.com/haskell/rfcs</a>"}], "answers": [{"comments": [{"owner": {"reputation": 18055, "user_id": 936310, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/302ec54987694b9746abf8e2e0ad8caf?s=128&d=identicon&r=PG&f=1", "display_name": "alias", "link": "https://stackoverflow.com/users/936310/alias"}, "edited": false, "score": 0, "creation_date": 1500135768, "post_id": 45119501, "comment_id": 77211454, "body": "Can you sketch the TH solution?"}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "reply_to_user": {"reputation": 18055, "user_id": 936310, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/302ec54987694b9746abf8e2e0ad8caf?s=128&d=identicon&r=PG&f=1", "display_name": "alias", "link": "https://stackoverflow.com/users/936310/alias"}, "edited": false, "score": 0, "creation_date": 1500289729, "post_id": 45119501, "comment_id": 77253837, "body": "@LeventErkok I wrote little sketch of TH solution. Now you can see why it&#39;s less trivial :)"}, {"owner": {"reputation": 18055, "user_id": 936310, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/302ec54987694b9746abf8e2e0ad8caf?s=128&d=identicon&r=PG&f=1", "display_name": "alias", "link": "https://stackoverflow.com/users/936310/alias"}, "edited": false, "score": 0, "creation_date": 1500353828, "post_id": 45119501, "comment_id": 77284109, "body": "Thanks for the most helpful write-up. This worked like a charm for my use case! Much appreciated."}], "tags": [], "owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "is_accepted": true, "score": 8, "last_activity_date": 1505998512, "last_edit_date": 1505998512, "creation_date": 1500130353, "answer_id": 45119501, "question_id": 45113205, "link": "https://stackoverflow.com/questions/45113205/is-there-a-way-to-shorten-this-deriving-clause/45119501#45119501", "title": "Is there a way to shorten this deriving clause?", "body": "<p>There's <em>bad and easy</em> way to do it and <em>good but hard</em> way. As <a href=\"https://stackoverflow.com/users/2288659/silvio-mayolo\">Silvio Mayolo</a> said you can use <code>TemplateHaskell</code> to write such function. This way is hard and rather complex way. The easier way is to use C-preprocessor like this:</p>\n\n<pre><code>{-# LANGUAGE CPP #-}\n\n#define MY_OWN_CLASS (Eq, Ord, Show, Read, Data, SymWord, HasKind, SMTValue)\n\ndata X = A | B | C\n     deriving MY_OWN_CLASS\n</code></pre>\n\n<p><strong>UPDATE (17.07.2016):</strong> ideas &amp; sketch of TH solution</p>\n\n<p>Before introducing sketch of solution I will illustrate why this is harder to do with TH. <code>deriving</code>-clause is not some independent clause, it's a part of <code>data</code> declaration so you can't encode only part inside <code>deriving</code> unfortunately. The general approach of writing any TH code is to use <code>runQ</code> command on brackets to see what you should write in the end. Like this:</p>\n\n<pre><code>ghci&gt; :set -XTemplateHaskell\nghci&gt; :set -XQuasiQuotes \nghci&gt; import Language.Haskell.TH\nghci&gt; runQ [d|data A = B deriving (Eq, Show)|]\n[ DataD\n    []\n    A_0\n    []\n    Nothing\n    [ NormalC B_1 [] ]\n    [ ConT GHC.Classes.Eq , ConT GHC.Show.Show ]\n]\n</code></pre>\n\n<p>Now you see that type classes for <code>deriving</code> are specified as last argument of <code>DataD</code> \u2014 data declaration \u2014 constructor. The workaround for your problem is to use <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#stand-alone-deriving-declarations\" rel=\"nofollow noreferrer\"><code>-XStadandaloneDeriving</code> extension</a>. It's like <code>deriving</code> but much powerful though also much verbose. Again, to see, what exactly you want to generate, just use <code>runQ</code>:</p>\n\n<pre><code>ghci&gt; data D = T\nghci&gt; :set -XStandaloneDeriving \nghci&gt; runQ [d| deriving instance Show D |]\n[ StandaloneDerivD [] (AppT (ConT GHC.Show.Show) (ConT Ghci5.D)) ]\n</code></pre>\n\n<p>You can use <code>StandaloneDerivD</code> and other constructors directly or just use <code>[d|...|]</code>-brackets though they have more magic but they give you list of <code>Dec</code> (declarations). If you want to generate several declarations then you should write you function like this:</p>\n\n<pre><code>{-# LANGUAGE TemplateHaskell    #-}\n{-# LANGUAGE QuasiQuotes        #-}\n{-# LANGUAGE StandaloneDeriving #-}\n\nmodule Deriving where\n\nimport Language.Haskell.TH\n\nboilerplateAnnigilator :: Name -&gt; Q [Dec]\nboilerplateAnnigilator typeName = do\n    let typeCon = conT typeName\n    [d|deriving instance Show $(typeCon)\n       deriving instance Eq   $(typeCon)\n       deriving instance Ord  $(typeCon)\n      |]\n</code></pre>\n\n<p>Brief tutorial <a href=\"https://github.com/leonidas/codeblog/blob/master/2011/2011-12-27-template-haskell.md\" rel=\"nofollow noreferrer\">can be found here</a>.</p>\n\n<p>And then you can use it in another file (this is TH limitation called <em>staged restriction</em>: you should define <em>macro</em> in one file but you can't use it in the same file) like this:</p>\n\n<pre><code>{-# LANGUAGE StandaloneDeriving #-}\n{-# LANGUAGE TemplateHaskell    #-}\n\nimport Deriving\n\ndata X = A | B | C\n\nboilerplateAnnigilator ''X\n</code></pre>\n\n<p>You should put other type classes you want inside <code>boilerplateAnnigilator</code> function. But this approach only works for non-parametrized class. If you have <code>data MyData a = ...</code> then <em>standalone deriving</em> should look like:</p>\n\n<pre><code>deriving instance Eq a =&gt; MyData a\n</code></pre>\n\n<p>And if you want your TH macro work for parametrized classes as well, then you basically should implement whole logic of GHC compiler by deducing whether type have type variables or not and generate instances depending on that. But this is much harder. I think that the best solution is to just make ticket in GHC compiler and let authors implement such feature called <em>deriving aliases</em> :)</p>\n"}], "owner": {"reputation": 18055, "user_id": 936310, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/302ec54987694b9746abf8e2e0ad8caf?s=128&d=identicon&r=PG&f=1", "display_name": "alias", "link": "https://stackoverflow.com/users/936310/alias"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 410, "favorite_count": 2, "accepted_answer_id": 45119501, "answer_count": 1, "score": 8, "last_activity_date": 1505998512, "creation_date": 1500077676, "last_edit_date": 1500142978, "question_id": 45113205, "link": "https://stackoverflow.com/questions/45113205/is-there-a-way-to-shorten-this-deriving-clause", "title": "Is there a way to shorten this deriving clause?", "body": "<p>Is there a way to write the following:</p>\n\n<pre><code> {-# LANGUAGE DeriveDataTypeable #-}\n {-# LANGUAGE DeriveAnyClass     #-}\n\n data X = A | B | C\n     deriving (Eq, Ord, Show, Read, Data, SymWord, HasKind, SMTValue)\n</code></pre>\n\n<p>So that the <code>deriving</code> clause can be shortened somehow, to something like the following:</p>\n\n<pre><code> data X = A | B | C deriving MyOwnClass\n</code></pre>\n\n<p>I'd like to avoid TH if at all possible, and I'm happy to create a new class that has all those derived classes as its super-class as necessary (as in <code>MyOwnClass</code> above), but that doesn't really work with the <code>deriving</code> mechanism. With constraint kinds extension, I found that you can write this:</p>\n\n<pre><code>type MyOwnClass a = (Eq a, Ord a, Show a, Read a, Data a, SymWord a, HasKind a, SMTValue a)\n</code></pre>\n\n<p>Unfortunately, I cannot put that in the <code>deriving</code> clause. Is there some magic to make this happen?</p>\n\n<p><strong>EDIT</strong> From the comments, it appears TH might be the only viable choice here. (The CPP macro is really not OK!) If that's the case, the sketch of a TH solution will be nice to see. </p>\n"}, {"tags": ["postgresql", "haskell", "docker"], "answers": [{"tags": [], "owner": {"reputation": 36635, "user_id": 2449905, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/zBnOo.jpg?s=128&g=1", "display_name": "Dan Lowe", "link": "https://stackoverflow.com/users/2449905/dan-lowe"}, "is_accepted": false, "score": 2, "last_activity_date": 1500071027, "creation_date": 1500071027, "answer_id": 45112396, "question_id": 45112096, "link": "https://stackoverflow.com/questions/45112096/cant-build-haskell-postgres-project-using-docker-on-os-x/45112396#45112396", "title": "Can&#39;t build Haskell/Postgres project using Docker on OS X", "body": "<blockquote>\n  <p>Is the server running on host \"localhost\" (127.0.0.1) and accepting<br>\n  TCP/IP connections on port 5432?</p>\n</blockquote>\n\n<p>This is telling you that on localhost, within your container, there is no postgres running.</p>\n\n<p>Each container has its own localhost address. They are separate from localhost in other containers, and separate from the localhost address on the main system where Docker is running.</p>\n"}], "owner": {"reputation": 41, "user_id": 7027214, "user_type": "registered", "profile_image": "https://graph.facebook.com/586893134796393/picture?type=large", "display_name": "Danya Rogozin", "link": "https://stackoverflow.com/users/7027214/danya-rogozin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1500071027, "creation_date": 1500069121, "question_id": 45112096, "link": "https://stackoverflow.com/questions/45112096/cant-build-haskell-postgres-project-using-docker-on-os-x", "title": "Can&#39;t build Haskell/Postgres project using Docker on OS X", "body": "<p>I'm trying to build and run Haskell project with Docker. Project contains PSQL-databases. \nWhen I write run-command <code>docker run project_name /usr/local/bin/project_name</code>, so I get:</p>\n\n<pre><code>    $ docker run carma-bundle /usr/local/bin/carma\nno port specified, defaulting to port 8000\ncarma:\nInitializer threw an exception...\nlibpq: failed (could not connect to server: Connection refused\n    Is the server running on host \"localhost\" (127.0.0.1) and accepting\n    TCP/IP connections on port 5432?\ncould not connect to server: Cannot assign requested address\n    Is the server running on host \"localhost\" (::1) and accepting\n    TCP/IP connections on port 5432?\n)\n\n...but before it died it generated the following output:\nInitializing app @ /\nInitializing heist @ /heist\n...loaded 0 templates from /srv/snaplets/heist\n...adding 1 templates from resources/static/tpl with route prefix //\nInitializing CookieSession @ /session\nInitializing postgresql-simple @ /db\nInitializing postgresql-auth @ /auth\n...setting up filesystem\n</code></pre>\n\n<p>Additional info:</p>\n\n<pre><code>$ docker --version\nDocker version 17.06.0-ce, build 02c1d87\n\n$ psql --version\npsql (PostgreSQL) 9.3.16\n\n$ stack --numeric-version\n1.4.0\n</code></pre>\n"}, {"tags": ["haskell", "io"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1500060974, "post_id": 45110216, "comment_id": 77192390, "body": "<code>sendData</code> takes a <code>[Double]</code>, but you have a collection of <code>[Double]</code>s, one for each file. How do you want to square away this mismatch?"}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1500061169, "post_id": 45110334, "comment_id": 77192476, "body": "(This answer glosses over the mismatch between <code>sendData :: ... -&gt; [Double] -&gt; ...</code> and <code>doubless :: [[Double]]</code>. I will fix it up if john answers my comment to this effect on their question.)"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 2, "last_activity_date": 1500060467, "creation_date": 1500060467, "answer_id": 45110334, "question_id": 45110216, "link": "https://stackoverflow.com/questions/45110216/trouble-with-haskell-io/45110334#45110334", "title": "Trouble with haskell IO", "body": "<p>Just as you did with <code>openFile</code> (which also does IO), you can use <code>mapM</code>:</p>\n\n<pre><code>main = do\n    args &lt;- getArgs\n    handleList &lt;- mapM (\\x -&gt; openFile x ReadMode) args\n    doubless &lt;- mapM getDoubles handleList\n    sendData stdout doubless\n</code></pre>\n\n<p>You may also like <code>readFile</code>, as in:</p>\n\n<pre><code>parse :: String -&gt; [Double]\nparse = map read . lines\n\nmain = do\n    args &lt;- getArgs\n    doubless &lt;- mapM readFile args\n    mapM (print . parse) doubless\n</code></pre>\n"}], "owner": {"reputation": 11, "user_id": 7401489, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/32a0cc31c34879987ec24b6e095e82e0?s=128&d=identicon&r=PG&f=1", "display_name": "john", "link": "https://stackoverflow.com/users/7401489/john"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 97, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1500060467, "creation_date": 1500059970, "question_id": 45110216, "link": "https://stackoverflow.com/questions/45110216/trouble-with-haskell-io", "title": "Trouble with haskell IO", "body": "<p>I am having difficulty understanding exactly how haskell processes input and output. As an example, here I am trying to take command line arguments of a list of data files, and put the contents of these files into a list of lists of doubles. After some research, my best implementation is:</p>\n\n<pre><code>{- Read Doubles from input, sent them to a list -}\ngetDoubles :: Handle -&gt; IO [Double]\ngetDoubles handle = do\n        done &lt;- hIsEOF handle\n        if done then return []\n        else do\n                first &lt;- hGetLine handle\n                rest &lt;- getDoubles handle\n                return (read first : rest)\n\n{- Send the data to the handle -}\nsendData :: Handle -&gt; [Double] -&gt; IO()\nsendData handle (x:[]) = hPrint handle x\nsendData handle (x:xs) = do\n        hPrint handle x\n        sendData handle xs\n\n\nmain = do\n        args &lt;- getArgs \n        handleList &lt;- mapM (\\x -&gt; openFile x ReadMode) args\n        sendData stdout  (fmap getDoubles handleList)\n</code></pre>\n\n<p>But this is giving me an error because getDoubles returns type IO [Double], not just [Double].\nWhat can I do to map my getDoubles function over my list of file handles?</p>\n"}, {"tags": ["haskell", "math"], "comments": [{"owner": {"reputation": 19091, "user_id": 6246044, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/YMZMd.jpg?s=128&g=1", "display_name": "Rory Daulton", "link": "https://stackoverflow.com/users/6246044/rory-daulton"}, "edited": false, "score": 0, "creation_date": 1500055138, "post_id": 45108774, "comment_id": 77189534, "body": "When I do your calculations in Python, using the built-in <code>math.sqrt()</code> function, I also get the answer <code>1.0</code>. However, when I use my own <code>isqrt()</code> function that returns the exact integer part of the square root for all nonnegative integers, I get the answer <code>8</code>.  It seems there are too many significant digits in the parameter for Haskell&#39;s <code>sqrt</code> function to handle exactly--it must use the 8-byte floating point type for <code>sqrt</code>, just as Python does. Find an exact sqrt function, perhaps named isqrt, for Haskell that handles arbitrary size integers."}, {"owner": {"reputation": 16233, "user_id": 4253229, "user_type": "registered", "accept_rate": 83, "profile_image": "https://lh4.googleusercontent.com/-e2FAQvlj5CQ/AAAAAAAAAAI/AAAAAAAAAqM/TlSnekirgNE/photo.jpg?sz=128", "display_name": "Eugene Sh.", "link": "https://stackoverflow.com/users/4253229/eugene-sh"}, "edited": false, "score": 0, "creation_date": 1500055316, "post_id": 45108774, "comment_id": 77189640, "body": "Yep. Looks like floating point imprecision"}, {"owner": {"reputation": 19091, "user_id": 6246044, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/YMZMd.jpg?s=128&g=1", "display_name": "Rory Daulton", "link": "https://stackoverflow.com/users/6246044/rory-daulton"}, "edited": false, "score": 0, "creation_date": 1500055401, "post_id": 45108774, "comment_id": 77189695, "body": "Note that <code>8</code> is <i>not</i> the exact answer for your question, unless you want <code>sqrt</code> to return only the integer part of the square root (as my <code>isqrt</code> does). The actual mathematical answer is slightly larger than <code>8</code>. However, Pythons&#39; extended precision package does return <code>8.0000000000</code>."}, {"owner": {"reputation": 24610, "user_id": 270986, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c49652c88a43a35bbf0095abfdae3515?s=128&d=identicon&r=PG", "display_name": "Mark Dickinson", "link": "https://stackoverflow.com/users/270986/mark-dickinson"}, "edited": false, "score": 2, "creation_date": 1500057252, "post_id": 45108774, "comment_id": 77190619, "body": "In this particular case, you&#39;d do better to rewrite the expression so that it&#39;s not so numerically fragile. You have something of the form <code>sqrt(a*a + b) - a</code>, which is the same as <code>b &#47; (sqrt(a*a + b) + a)</code>. The latter expression is less prone to numerical error (assuming positive <code>a</code> and <code>b</code>)."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 24610, "user_id": 270986, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c49652c88a43a35bbf0095abfdae3515?s=128&d=identicon&r=PG", "display_name": "Mark Dickinson", "link": "https://stackoverflow.com/users/270986/mark-dickinson"}, "edited": false, "score": 0, "creation_date": 1500059671, "post_id": 45108774, "comment_id": 77191790, "body": "@MarkDickinson, why don&#39;t you make that an answer?"}, {"owner": {"reputation": 24610, "user_id": 270986, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c49652c88a43a35bbf0095abfdae3515?s=128&d=identicon&r=PG", "display_name": "Mark Dickinson", "link": "https://stackoverflow.com/users/270986/mark-dickinson"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1500061908, "post_id": 45108774, "comment_id": 77192802, "body": "@dfeuer: Good question. Done."}], "answers": [{"comments": [{"owner": {"reputation": 4147, "user_id": 6654077, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/afa3deaf30afffe58c663f22106e4fe9?s=128&d=identicon&r=PG&f=1", "display_name": "Fabien", "link": "https://stackoverflow.com/users/6654077/fabien"}, "edited": false, "score": 0, "creation_date": 1500055294, "post_id": 45108948, "comment_id": 77189625, "body": "Please provide a code example of what means &quot;more parentheses&quot;."}], "tags": [], "owner": {"reputation": 191, "user_id": 8309300, "user_type": "registered", "profile_image": "https://graph.facebook.com/1478928642166546/picture?type=large", "display_name": "Alex Braksator", "link": "https://stackoverflow.com/users/8309300/alex-braksator"}, "is_accepted": false, "score": -3, "last_activity_date": 1500054513, "creation_date": 1500054513, "answer_id": 45108948, "question_id": 45108774, "link": "https://stackoverflow.com/questions/45108774/haskell-big-number-calculations/45108948#45108948", "title": "Haskell big number calculations", "body": "<p>I put these numbers and formula in Rstudio and also got 1. Are you sure the answer is 8? Maybe add more parentheses to make sure you got your order of operation correct.</p>\n"}, {"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 7, "last_activity_date": 1500055672, "last_edit_date": 1500055672, "creation_date": 1500055346, "answer_id": 45109174, "question_id": 45108774, "link": "https://stackoverflow.com/questions/45108774/haskell-big-number-calculations/45109174#45109174", "title": "Haskell big number calculations", "body": "<p>I believe <code>8</code> is not a correct answer, either; the number you have given is not square:</p>\n\n<pre><code>Math.NumberTheory.Powers.Squares&gt; r  = 291381631919914084\nMath.NumberTheory.Powers.Squares&gt; t = 1165526527679656343\nMath.NumberTheory.Powers.Squares&gt; isSquare (4*r*r - 4*r + 1 + 8*t)\nFalse\n</code></pre>\n\n<p>However, you can get this answer if it's the one you want:</p>\n\n<pre><code>Math.NumberTheory.Powers.Squares&gt; integerSquareRoot (4*r*r - 4*r + 1 + 8*t) - 2*r + 1\n8\n</code></pre>\n\n<p>The <a href=\"http://hackage.haskell.org/package/arithmoi-0.5.0.1/docs/Math-NumberTheory-Powers-Squares.html\" rel=\"noreferrer\">arithmoi</a> package provides these functions.</p>\n\n<p>Or, you can get as many digits of the exact answer as you like:</p>\n\n<pre><code>Data.Number.CReal&gt; sqrt (4*r*r - 4*r + 1 + 8*t) - 2*r + 1 :: CReal\n8.0000000000000000068638506374681082902485\n</code></pre>\n\n<p>The <a href=\"http://hackage.haskell.org/package/numbers-3000.2.0.1/docs/Data-Number-CReal.html\" rel=\"noreferrer\">numbers</a> package provides this type.</p>\n"}, {"tags": [], "owner": {"reputation": 24610, "user_id": 270986, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c49652c88a43a35bbf0095abfdae3515?s=128&d=identicon&r=PG", "display_name": "Mark Dickinson", "link": "https://stackoverflow.com/users/270986/mark-dickinson"}, "is_accepted": true, "score": 10, "last_activity_date": 1500062955, "last_edit_date": 1500062955, "creation_date": 1500061777, "answer_id": 45110613, "question_id": 45108774, "link": "https://stackoverflow.com/questions/45108774/haskell-big-number-calculations/45110613#45110613", "title": "Haskell big number calculations", "body": "<p>The correct answer is indeed very close to <code>8.0</code>. You're running into numerical precision issues: the square root is being computed using IEEE 754 (\"double precision\") binary64 format, and its 53-bit precision isn't sufficient to give an accurate result here.</p>\n\n<p>In more detail: the true value of <code>sqrt(4 * r * r - 4 * r + 1 + 8 * t)</code> is, to 50 significant figures:</p>\n\n<pre><code>582763263839828175.00000000000000000686385063746811\n</code></pre>\n\n<p>The closest representable IEEE 754 binary64 value to that quantity is:</p>\n\n<pre><code>582763263839828224.0\n</code></pre>\n\n<p>... which is off by about 49.0 from the true value. Similarly, the value <code>2*r</code> loses precision when converted to floating-point.</p>\n\n<p>You might be tempted to fix this by increasing the precision, but as so often happens in numerical work, in this case it's better to rework the algorithm to avoid (or at least ameliorate) the numerical issues. The value you're computing is of the form <code>sqrt(a * a + b) - a</code> (with <code>a = 2 * r - 1</code> and <code>b = 8 * t</code>). That quantity can be rewritten in the form <code>b / (sqrt(a * a + b) + a)</code>, and (assuming that both <code>a</code> and <code>b</code> are positive), the latter expression will give a more accurate result.</p>\n\n<p>Here's a quick demonstration that the two expressions give the same result. </p>\n\n<pre><code>Prelude&gt; let a = 43\nPrelude&gt; let b = 7\nPrelude&gt; sqrt(a * a + b) - a\n8.131845707602992e-2\nPrelude&gt; b / (sqrt(a * a + b) + a)\n8.131845707603225e-2\n</code></pre>\n\n<p>We're using smaller values of <code>a</code> and <code>b</code>, so the numerical issues aren't so bad, but note that there's still a discrepancy in the last 4 digits. (The exact value here is <code>0.081318457076032250005683932322636450</code>, to 35 significant figures.)</p>\n\n<p>And using this form of the expression with your values:</p>\n\n<pre><code>Prelude&gt; let r = 291381631919914084\nPrelude&gt; let t = 1165526527679656343\nPrelude&gt; let a = 2*r - 1; b = 8*t in b / (sqrt(a*a+b) + a)\n8.0\n</code></pre>\n\n<p>As other answerers have pointed out, the answer isn't <em>exactly</em> <code>8.0</code>, but <code>8.0</code> <em>is</em> the closest IEEE 754 binary64 floating-point value to the true answer.</p>\n"}], "owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 384, "favorite_count": 0, "accepted_answer_id": 45110613, "answer_count": 3, "score": 2, "last_activity_date": 1500062955, "creation_date": 1500053726, "question_id": 45108774, "link": "https://stackoverflow.com/questions/45108774/haskell-big-number-calculations", "title": "Haskell big number calculations", "body": "<p>I am trying to do some calculations with big numbers</p>\n\n<pre><code>\u03bb: let r  = 291381631919914084\n\u03bb: let t = 1165526527679656343\n\u03bb: sqrt(4 * r * r - 4 * r + 1 + 8 * t) - 2 * r + 1\n1.0\n</code></pre>\n\n<p>the answer should be <code>8.0000...</code>\nIs there a package that I should be using for such calculations? or is there something I should be doing in prelude?</p>\n"}, {"tags": ["haskell", "conduit"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1500053262, "post_id": 45108633, "comment_id": 77188634, "body": "<code>ls</code> doesn\u2019t produce color output by default. Use <code>&quot;ls&quot; [&quot;--color=auto&quot;]</code> if your <code>ls</code> supports that."}, {"owner": {"reputation": 167, "user_id": 2704779, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ec53325d9eed7d8843e71949c9d87c00?s=128&d=identicon&r=PG", "display_name": "Sebastien Guimmara", "link": "https://stackoverflow.com/users/2704779/sebastien-guimmara"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1500053339, "post_id": 45108633, "comment_id": 77188667, "body": "Can&#39;t do that. I&#39;m implementing a shell and I don&#39;t choose what the user will type. However, type <code>ls</code> in <code>bash</code> and you&#39;ll see colors by default."}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 0, "creation_date": 1500053522, "post_id": 45108633, "comment_id": 77188761, "body": "@SebastienGuimmara Try typing <code>which ls</code>. It might be an alias set in one of bash&#39;s configuration files."}, {"owner": {"reputation": 167, "user_id": 2704779, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ec53325d9eed7d8843e71949c9d87c00?s=128&d=identicon&r=PG", "display_name": "Sebastien Guimmara", "link": "https://stackoverflow.com/users/2704779/sebastien-guimmara"}, "reply_to_user": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 0, "creation_date": 1500053607, "post_id": 45108633, "comment_id": 77188792, "body": "@sepp2k ha ! You were both right, my mistake !"}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 0, "creation_date": 1500053635, "post_id": 45108633, "comment_id": 77188810, "body": "To be clear: <code>ls</code> <i>does</i> detect stdin as a tty when run through <code>createProcess</code>. Otherwise it wouldn&#39;t work with <code>--color=auto</code> either (&quot;auto&quot; means &quot;use color in a tty and no color otherwise&quot;)."}, {"owner": {"reputation": 167, "user_id": 2704779, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ec53325d9eed7d8843e71949c9d87c00?s=128&d=identicon&r=PG", "display_name": "Sebastien Guimmara", "link": "https://stackoverflow.com/users/2704779/sebastien-guimmara"}, "edited": false, "score": 0, "creation_date": 1500053718, "post_id": 45108633, "comment_id": 77188864, "body": "Indeed, I had an aliased <code>ls</code> and I had no idea. My mistake."}, {"owner": {"reputation": 12194, "user_id": 4474419, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/04ce27f0ebe4713b51911cd8475c3b42?s=128&d=identicon&r=PG", "display_name": "Davislor", "link": "https://stackoverflow.com/users/4474419/davislor"}, "edited": false, "score": 0, "creation_date": 1500081347, "post_id": 45108633, "comment_id": 77198465, "body": "Although it is not the problem with piping to <code>ls</code>, many consoles support ANSI or <code>xterm</code> color codes, which you can output by inserting escape sequences."}], "answers": [{"tags": [], "owner": {"reputation": 167, "user_id": 2704779, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ec53325d9eed7d8843e71949c9d87c00?s=128&d=identicon&r=PG", "display_name": "Sebastien Guimmara", "link": "https://stackoverflow.com/users/2704779/sebastien-guimmara"}, "is_accepted": true, "score": 5, "last_activity_date": 1500053671, "creation_date": 1500053671, "answer_id": 45108758, "question_id": 45108633, "link": "https://stackoverflow.com/questions/45108633/how-to-preserve-color-when-writing-to-stdout/45108758#45108758", "title": "How to preserve color when writing to stdout", "body": "<p>The answer is Haskell is not at fault, I was confusing my own <code>ls</code>, which was aliased to <code>ls --color=tty</code>.</p>\n"}], "owner": {"reputation": 167, "user_id": 2704779, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/ec53325d9eed7d8843e71949c9d87c00?s=128&d=identicon&r=PG", "display_name": "Sebastien Guimmara", "link": "https://stackoverflow.com/users/2704779/sebastien-guimmara"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "accepted_answer_id": 45108758, "answer_count": 1, "score": 0, "last_activity_date": 1500053671, "creation_date": 1500053145, "last_edit_date": 1500053506, "question_id": 45108633, "link": "https://stackoverflow.com/questions/45108633/how-to-preserve-color-when-writing-to-stdout", "title": "How to preserve color when writing to stdout", "body": "<pre><code>#!/usr/bin/env stack\n{- stack --install-ghc --resolver lts-8.8 runghc\n-}\nimport System.IO\nimport System.Process\n\nmain = createProcess (proc \"ls\" [])\n</code></pre>\n\n<p>Although <code>stdout</code> is considered by Haskell as a tty, as <code>hIsTerminalDevice stdout</code> returns <code>True</code>, <code>ls</code> doesn't recognize it as so, and doesn't output colors.</p>\n\n<p>Is there a way to circumvent this or is it plainly impossible to get color output working in Haskell ?</p>\n\n<p>EDIT: to be clear, I don't want just <code>ls</code> to work, but the whole range of Unix tools that support color output when they identify <code>stdout</code> as a tty.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1500037463, "post_id": 45103698, "comment_id": 77178480, "body": "It is a <i>bang pattern</i>. It means that it is evaluated eagerly. So that when you assign it to a <code>Person</code> object. The expression tree is evaluated up to WHNF. See <a href=\"https://downloads.haskell.org/~ghc/7.8.4/docs/html/users_guide/bang-patterns.html\" rel=\"nofollow noreferrer\">here</a> for more information."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1500039107, "post_id": 45103698, "comment_id": 77179607, "body": "That code is really weird. It smells of cargo cult strictness, which a small portion of Haskell users have a real problem with. I&#39;m willing to bet no benchmarking nor semantic analysis went into deciding what fields of that record to make strict."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 5, "creation_date": 1500044035, "post_id": 45103698, "comment_id": 77183112, "body": "@WillemVanOnsem, it&#39;s a bang all right, but not a bang pattern. Bang patterns are a GHC extension for using <code>!</code> in <i>patterns</i> to force things. This is actually standard Report Haskell for making a data constructor strict in a certain argument."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 3, "creation_date": 1500044310, "post_id": 45103698, "comment_id": 77183316, "body": "These are described in <a href=\"https://www.haskell.org/onlinereport/decls.html\" rel=\"nofollow noreferrer\">Haskell 98</a> section 4.2.1 under the heading &quot;Strictness Flags&quot;."}, {"owner": {"reputation": 20980, "user_id": 241990, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/265f1d52e6e484c9abe60b4da20fb8ee?s=128&d=identicon&r=PG", "display_name": "Shaun the Sheep", "link": "https://stackoverflow.com/users/241990/shaun-the-sheep"}, "edited": false, "score": 1, "creation_date": 1500044938, "post_id": 45103698, "comment_id": 77183774, "body": "<a href=\"https://stackoverflow.com/a/21281404/241990\">This answer</a> has some useful guidelines on when to use them. It is also possible to enable them by default for data structures using the<a href=\"https://ghc.haskell.org/trac/ghc/wiki/StrictPragma\" rel=\"nofollow noreferrer\"><code>StrictData</code> language extension</a>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 2, "creation_date": 1500045003, "post_id": 45103698, "comment_id": 77183825, "body": "@Carl, I think there&#39;s likely sense to the bangs on the text fields, but not so much sense to the lack of bangs on the other fields. Bangs on text fields <i>may</i> avoid retention of <code>String</code>s converted to <code>Text</code> somewhere. Since the other fields seem unlikely to be bottom, and also unlikely to be expensive to calculate, they should probably be strict too."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1500051527, "post_id": 45103698, "comment_id": 77187617, "body": "Similar question: <a href=\"https://stackoverflow.com/q/8576795/2751851\"><i>Advantages of strict fields in data types</i></a>"}, {"owner": {"reputation": 64805, "user_id": 286871, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/xNBpr.png?s=128&g=1", "display_name": "Tikhon Jelvis", "link": "https://stackoverflow.com/users/286871/tikhon-jelvis"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1500069029, "post_id": 45103698, "comment_id": 77195860, "body": "@dfeuer: Could you put your comment as an answer to this question? Thanks!"}, {"owner": {"reputation": 1979, "user_id": 2789312, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/4OgOz.png?s=128&g=1", "display_name": "palik", "link": "https://stackoverflow.com/users/2789312/palik"}, "edited": false, "score": 0, "creation_date": 1505800673, "post_id": 45103698, "comment_id": 79548025, "body": "<a href=\"https://www.fpcomplete.com/blog/2017/09/all-about-strictness\" rel=\"nofollow noreferrer\">All About Strictness</a> is an excellent article with regard to the topic"}], "owner": {"reputation": 1979, "user_id": 2789312, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/4OgOz.png?s=128&g=1", "display_name": "palik", "link": "https://stackoverflow.com/users/2789312/palik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 227, "favorite_count": 0, "closed_date": 1500091202, "answer_count": 0, "score": 3, "last_activity_date": 1500052913, "creation_date": 1500037259, "question_id": 45103698, "link": "https://stackoverflow.com/questions/45103698/what-does-mean-in-record-definition-before-field-type", "closed_reason": "Duplicate", "title": "What does ! mean in record definition before field type?", "body": "<p>Unfortunately I couldn't find any information to the question.</p>\n\n<pre><code>data Person =\n  Person { firstName  :: !Text\n         , lastName   :: !Text\n         , age        :: Int\n         , likesPizza :: Bool\n           } deriving Show\n</code></pre>\n\n<p>The code snippet is token from article <a href=\"https://www.schoolofhaskell.com/school/starting-with-haskell/libraries-and-frameworks/text-manipulation/json#step-1--define-your-type--collect-your-data\" rel=\"nofollow noreferrer\">Parsing JSON with Aeson</a>. </p>\n\n<p>Aside the question in the title, is there a rule when <code>!</code> should be used?\nIn the example above <code>!</code> is used only for <code>firstName</code> and <code>lastName</code>.</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 337, "user_id": 7804993, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/12abcdce92eb5eaec0c7a4c2ee002060?s=128&d=identicon&r=PG&f=1", "display_name": "Sequinex", "link": "https://stackoverflow.com/users/7804993/sequinex"}, "edited": false, "score": 0, "creation_date": 1500031991, "post_id": 45101644, "comment_id": 77174826, "body": "Thank you for the answer!  But I dont quite what does the line <code>vocal = flip elem vocals</code> do?"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 4, "last_activity_date": 1500032692, "last_edit_date": 1500032692, "creation_date": 1500030977, "answer_id": 45101644, "question_id": 45101433, "link": "https://stackoverflow.com/questions/45101433/haskell-expected-type-char-actual-type-char/45101644#45101644", "title": "Haskell: Expected type: [Char] Actual type: [[Char]]", "body": "<p>The problem is that <code>vocal</code> has type:</p>\n\n<pre><code>vocal :: <b>String</b> -&gt; Bool</code></pre>\n\n<p>This is because <code>vocals</code> is a <strong>list of <code>String</code>s</strong>, and thus <code>elem</code> will here check if a string is in the list of strings.</p>\n\n<p>and therefore Haskell derives that since you call <code>vocal (head input)</code>, <code>input</code> itself should be a list of <code>String</code>s.</p>\n\n<p>We can easily alter this into:</p>\n\n<pre><code>vocals = ['a', 'e', 'i', 'o', 'u', 'y']</code></pre>\n\n<p>Or shorter:</p>\n\n<pre><code>vocals = \"aeiouy\"</code></pre>\n\n<p>That being said, your code is quite chaotic. We can rewrite it into:</p>\n\n<pre><code>vocals :: [Char]\nvocals = \"aeiouy\"\n\nvocal :: Char -&gt; Bool\nvocal = flip elem vocals                   -- pointfree function\n\nmagi :: Char -&gt; String\nmagi konsonant = konsonant : 'o' : [konsonant]\n\nrovarsprak :: String -&gt; String\nrovarsprak \"\" = \"\"                         -- use patterns\nrovarsprak (h:t)                           -- use patterns to unpack\n    | vocal h = h : rovarsprak t           -- == True is not necessary\n    | otherwise = magi h ++ rovarsprak t   -- use otherwise\n</code></pre>\n\n<p>The line <code>vocal = flip elem vocals</code> works as follows: <code>flip</code> takes as input a function <code>f</code> that takes two arguments <code>x</code> and <code>y</code>. It then turns it into a function that takes two arguments <code>y</code> and <code>x</code> (so the arguments are flipped).</p>\n\n<p>What we want is to call <code>elem o vocals</code>. This is equivalent to <code>flip elem vocals o</code>. Now by using <em>eta</em>-reduction, we can omit the <code>o</code> (both in the head and the body of the clause).</p>\n"}], "owner": {"reputation": 337, "user_id": 7804993, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/12abcdce92eb5eaec0c7a4c2ee002060?s=128&d=identicon&r=PG&f=1", "display_name": "Sequinex", "link": "https://stackoverflow.com/users/7804993/sequinex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 564, "favorite_count": 0, "accepted_answer_id": 45101644, "answer_count": 1, "score": 0, "last_activity_date": 1500032692, "creation_date": 1500030320, "question_id": 45101433, "link": "https://stackoverflow.com/questions/45101433/haskell-expected-type-char-actual-type-char", "title": "Haskell: Expected type: [Char] Actual type: [[Char]]", "body": "<p>I recently started learning Haskell and in my program I am getting the following error: </p>\n\n<pre><code>    Couldn't match type \u2018[Char]\u2019 with \u2018Char\u2019\nExpected type: [Char]\n  Actual type: [[Char]]\nIn the first argument of \u2018head\u2019, namely \u2018input\u2019\nIn the first argument of \u2018magi\u2019, namely \u2018(head input)\u2019\n</code></pre>\n\n<p>My code looks like this:</p>\n\n<pre><code>vocals = [\"a\", \"e\", \"i\", \"o\", \"u\",\"y\"]\nvocal o\n  | elem o vocals == True = True --return true if the letter is a vowel\n  | elem o vocals == False = False --else false\n\nmagi konsonant = [konsonant] ++ \"o\" ++ [konsonant]\n\nrovarsprak input\n  |length input == 0 = \"\"\n  |length input &gt; 0 &amp;&amp; vocal (head input) == False = magi (head input) ++ rovarsprak (tail input)\n  |length input &gt; 0 &amp;&amp; vocal (head input) == True = head input : rovarsprak (tail input)\n</code></pre>\n\n<p>As I understand, I am getting the error because of my input to the head function is [[char]] instead of [char], but I don't understand why the input to head is a [[char]].\nThanks!</p>\n"}, {"tags": ["haskell", "typed-holes"], "comments": [{"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "reply_to_user": {"reputation": 5397, "user_id": 2193020, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/aa10d01a3d48851073bd61877a56b5a7?s=128&d=identicon&r=PG", "display_name": "hnefatl", "link": "https://stackoverflow.com/users/2193020/hnefatl"}, "edited": false, "score": 0, "creation_date": 1500028555, "post_id": 45100020, "comment_id": 77172839, "body": "@hnefatl I think, person with golden badge in Haskell category knows about <code>:type</code> command... :) But question is about fast ways of finding correct number of arguments for some function. As it seems for me, open <code>ghci</code>, load module with <code>foo</code> function, then print <code>:t foo</code> might be much slower when just try to add underscores and see results in running <code>ghcid</code> daemon."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 9, "creation_date": 1500031558, "post_id": 45100020, "comment_id": 77174543, "body": "Perhaps a quick way to get the type of <code>foo</code> could be writing <code>_ foo</code> and look at the hole type. Although probably some IDE-like help would be better."}, {"owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1500035007, "post_id": 45100020, "comment_id": 77176745, "body": "I agree with @chi that you probably want to use an IDE feature to do this. Type <code>foo</code> and hover over it to see it&#39;s type. I guess this still requires you to think hard about the type of foo and the type of the result you want if, for example, you would partially apply <code>foo</code>. If you type <code>_</code> instead of <code>foo</code> then under which circumstances does ghci suggest the type of <code>foo</code> as relevant?"}], "answers": [{"tags": [], "owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "is_accepted": false, "score": 1, "last_activity_date": 1500133570, "creation_date": 1500133570, "answer_id": 45120010, "question_id": 45100020, "link": "https://stackoverflow.com/questions/45100020/what-is-a-quick-way-to-determine-how-many-typed-holes-to-give-to-a-function/45120010#45120010", "title": "What is a quick way to determine how many typed holes to give to a function?", "body": "<p>As @chi suggests, the best thing I've found is \"apply the hole to the function\". I don't know if this answers the question, but hopefully it is at least somewhat helpful.</p>\n\n<p>I'm guessing that by \"functions can always be just partially applied\" you mean you can have such a function:</p>\n\n<pre><code>foldr :: Foldable t =&gt; (a -&gt; b -&gt; b) -&gt; b -&gt; t a -&gt; b\nfoldr = undefined\n</code></pre>\n\n<p>for which you can't tell just from the type how many arguments it should take in order to typecheck at any particular type. The best that the typechecker can do here is to tell you the minimum number of arguments it will accept:</p>\n\n<pre><code>bar :: String -&gt; String\nbar = _1 foldr\n\n* Found hole:\n    _1 :: ((a0 -&gt; b0 -&gt; b0) -&gt; b0 -&gt; t0 a0 -&gt; b0) -&gt; String -&gt; String\n  Where: `t0' is an ambiguous type variable\n         `b0' is an ambiguous type variable\n         `a0' is an ambiguous type variable\n* In the expression: _\n  In the expression: _ foldr\n  In an equation for `bar': bar = _ foldr\n\n* Ambiguous type variable `t0' arising from a use of `foldr'\n  prevents the constraint `(Foldable t0)' from being solved.\n  Probable fix: use a type annotation to specify what `t0' should be.\n  These potential instances exist:\n    instance Foldable (Either a) -- Defined in `Data.Foldable'\n    instance Foldable Maybe -- Defined in `Data.Foldable'\n    instance Foldable ((,) a) -- Defined in `Data.Foldable'\n    ...plus one other\n    ...plus 22 instances involving out-of-scope types\n    (use -fprint-potential-instances to see them all)\n</code></pre>\n\n<p>Aside: the second error isn't particularly helpful here, as <code>t0</code> could really be any of those types. But if you find yourself in such a situation often, then <code>-fprint-potential-instances</code> may actually be useful.</p>\n\n<p>You can now do a little bit of typechecking in your head:</p>\n\n<pre><code>((a0 -&gt; b0 -&gt; b0) -&gt;  b0  -&gt; t0 a0  -&gt; b0     ) -&gt; \n  &lt;_1&gt;               &lt;_2&gt;    String -&gt; String\n</code></pre>\n\n<p>for the types to match, you must supply at least two holes. You may need more, but that will depend on the instantiation of <code>b0</code>. Substituting in these holes, you get a pretty easy problem</p>\n\n<pre><code>bar :: String -&gt; String\nbar = foldr _1 _2\n\n* Found hole: _1 :: Char -&gt; String -&gt; String\n\n* Found hole: _2 :: String\n</code></pre>\n\n<hr>\n\n<p>You may even encounter a (in my opinion, silly) function like</p>\n\n<pre><code>class C a where foo :: a\ninstance C String where\ninstance C a =&gt; C (Int -&gt; a) where\n</code></pre>\n\n<p>in which case you can do the same thing, and the typechecker helpfully notifies you of all the possible instances:</p>\n\n<pre><code>bar :: String -&gt; String\nbar = _ foo\n\ntest0.hs:6:7: warning: [-Wtyped-holes]\n    * Found hole: _ :: t0 -&gt; String -&gt; String\n      Where: `t0' is an ambiguous type variable\n    * In the expression: _\n      In the expression: _ foo\n      In an equation for `bar': bar = _ foo\n    * Relevant bindings include\n        bar :: String -&gt; String (bound at test0.hs:6:1)\n\ntest0.hs:6:9: warning: [-Wdeferred-type-errors]\n    * Ambiguous type variable `t0' arising from a use of `foo'\n      prevents the constraint `(C t0)' from being solved.\n      Probable fix: use a type annotation to specify what `t0' should be.\n      These potential instances exist:\n        instance C a =&gt; C (Int -&gt; a) -- Defined at test0.hs:3:10\n        instance C String -- Defined at test0.hs:2:10\n    * In the first argument of `_', namely `foo'\n      In the expression: _ foo\n      In an equation for `bar': bar = _ foo\n</code></pre>\n\n<p>Here you really have to guess. In this (admittedly contrived) example, I would probably guess you want one argument, because <code>bar</code> takes one argument.</p>\n\n<pre><code>bar :: String -&gt; String\nbar = foo . _\n\ntest0.hs:6:7: warning: [-Wdeferred-type-errors]\n    * Ambiguous type variable `b0' arising from a use of `foo'\n      prevents the constraint `(C (b0 -&gt; String))' from being solved.\n        (maybe you haven't applied a function to enough arguments?)\n      Probable fix: use a type annotation to specify what `b0' should be.\n      These potential instance exist:\n        instance C a =&gt; C (Int -&gt; a) -- Defined at test0.hs:3:10\n\ntest0.hs:6:13: warning: [-Wtyped-holes]\n    * Found hole: _ :: String -&gt; b0\n      Where: `b0' is an ambiguous type variable\n</code></pre>\n\n<p>Now it tells you there is one potential instance, and so you can guess that the type of that hole really should be <code>String -&gt; Int</code>.</p>\n"}], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 145, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1500133570, "creation_date": 1500026196, "last_edit_date": 1500030272, "question_id": 45100020, "link": "https://stackoverflow.com/questions/45100020/what-is-a-quick-way-to-determine-how-many-typed-holes-to-give-to-a-function", "title": "What is a quick way to determine how many typed holes to give to a function?", "body": "<p><a href=\"https://wiki.haskell.org/GHC/Typed_holes\" rel=\"nofollow noreferrer\">Typed holes</a> offer a great way of finding out how to implement something: if you know what function to use, say <code>foo</code>, you can just write out something like <code>foo _ _ _</code> and let the compiler tell you what types it expects for each argument. This makes it largely unnecessary to look up any documentation.</p>\n\n<p>However, it only works properly if you actually write out the correct <em>number</em> of underscores. At the moment, I usually determine this by some trial-and-error, but it's not always obvious what hints to look out for, because in Haskell functions can always be just partially applied.</p>\n\n<p>What is a good way to find out this number as quickly as possible?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 6, "creation_date": 1500031144, "post_id": 45093146, "comment_id": 77174306, "body": "Related: I believe that <code>-Wincomplete-patterns</code> should be turned on by default in GHC. Actually, I have the stronger opinion that incomplete patterns should be an error, so that if partiality is actually wanted the programmer has to be explicit about it and write <code>_ -&gt; undefined</code> or something similar."}], "answers": [{"comments": [{"owner": {"reputation": 5774, "user_id": 105137, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/253329f6f7506a5299db1cb608d8defd?s=128&d=identicon&r=PG", "display_name": "kostmo", "link": "https://stackoverflow.com/users/105137/kostmo"}, "edited": false, "score": 0, "creation_date": 1500017594, "post_id": 45093627, "comment_id": 77166420, "body": "Aside from the absence of <code>null</code> in Haskell, are there any other language features that make partial functions easier to avoid? I&#39;m thinking about sum types or pattern matching, but have not yet articulated a reason."}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "reply_to_user": {"reputation": 5774, "user_id": 105137, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/253329f6f7506a5299db1cb608d8defd?s=128&d=identicon&r=PG", "display_name": "kostmo", "link": "https://stackoverflow.com/users/105137/kostmo"}, "edited": false, "score": 4, "creation_date": 1500028708, "post_id": 45093627, "comment_id": 77172923, "body": "@kostmo Mostly <code>-Wall</code> helps you to avoid such errors. With ADT&#39;s and pattern matching compiler can tell you whether you covered all cases or not."}], "tags": [], "owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "is_accepted": true, "score": 8, "last_activity_date": 1501024590, "last_edit_date": 1501024590, "creation_date": 1499998939, "answer_id": 45093627, "question_id": 45093146, "link": "https://stackoverflow.com/questions/45093146/is-avoiding-partial-functions-any-easier-in-haskell-than-other-languages/45093627#45093627", "title": "Is avoiding partial functions any easier in Haskell than other languages?", "body": "<blockquote>\n  <p>Is this because partial functions are a more frequent risk in Haskell than other languages (c.f. this question), or is it that avoiding them in other languages is impractical to the point of little consideration?</p>\n</blockquote>\n\n<p>Certainly the latter. The most commonly used languages all have some notion of the <code>null</code> value as an inhabitant of every type, the practical effect being that every value is akin to haskell's <code>Maybe a</code>.</p>\n\n<p>You can argue that in haskell we have the same issue: bottoms can hide anywhere, e.g.</p>\n\n<pre><code>uhoh :: String\nuhoh = error \"oops\"\n</code></pre>\n\n<p>But this isn't really the case. In haskell all bottom are morally equivalent and <a href=\"http://www.cse.chalmers.se/~nad/publications/danielsson-et-al-popl2006.html\" rel=\"nofollow noreferrer\">we can reason about code as if they didn't exist</a>. If we could catch exceptions in pure code, this would no longer be the case. Here's an <a href=\"https://stackoverflow.com/questions/12335245/why-is-catching-an-exception-non-pure-but-throwing-an-exception-is-pure\">interesting discussion</a>.</p>\n\n<p>And just a subjective addendum, I think intermediate haskell developers tend to be aware of whether a function is partial, and to complain loudly when they are surprised to find they were wrong. At the same time a fair portion of the <code>Prelude</code> contains partial functions, such as <code>tail</code> and <code>/</code> and these haven't changed in spite of much attention and many alternative preludes, which I think is evidence that the language and standard lib probably struck a pretty decent balance.</p>\n\n<p><strong>EDIT</strong> I agree that Alexey Romanov's answer is an important part of the picture as well.</p>\n"}, {"comments": [{"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1500025494, "post_id": 45096723, "comment_id": 77170947, "body": "Also, since catching an exception tells you something about the state of execution, you can only really do that in the &#39;IO&#39; monad. That limits the usefulness of a lot of exception handling in other languages."}], "tags": [], "owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "is_accepted": false, "score": 8, "last_activity_date": 1500025582, "last_edit_date": 1500025582, "creation_date": 1500015824, "answer_id": 45096723, "question_id": 45093146, "link": "https://stackoverflow.com/questions/45093146/is-avoiding-partial-functions-any-easier-in-haskell-than-other-languages/45096723#45096723", "title": "Is avoiding partial functions any easier in Haskell than other languages?", "body": "<p>One reason why partial functions are significantly worse in Haskell compared to other languages is the lack of stack traces by default. When you call e.g. <code>head</code> on an empty list, you only get <code>Prelude.head: empty list</code>. Good luck figuring out which call of <code>head</code> is the problem or where the empty list came from! Of course, it may not even be in your code, but in some library you are using.</p>\n\n<p>To get a stack trace, you need to either compile with profiling enabled or to make it available explicitly: see <a href=\"https://hackage.haskell.org/package/base-4.9.1.0/docs/GHC-Stack.html\" rel=\"nofollow noreferrer\">https://hackage.haskell.org/package/base-4.9.1.0/docs/GHC-Stack.html</a> and <a href=\"https://wiki.haskell.org/Debugging\" rel=\"nofollow noreferrer\">https://wiki.haskell.org/Debugging</a>. And both of these options appeared in relatively recent GHC versions (and work on improving them is ongoing).</p>\n"}], "owner": {"reputation": 5774, "user_id": 105137, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/253329f6f7506a5299db1cb608d8defd?s=128&d=identicon&r=PG", "display_name": "kostmo", "link": "https://stackoverflow.com/users/105137/kostmo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 221, "favorite_count": 0, "accepted_answer_id": 45093627, "answer_count": 2, "score": 4, "last_activity_date": 1501024590, "creation_date": 1499995242, "question_id": 45093146, "link": "https://stackoverflow.com/questions/45093146/is-avoiding-partial-functions-any-easier-in-haskell-than-other-languages", "title": "Is avoiding partial functions any easier in Haskell than other languages?", "body": "<p>We're urged to <a href=\"https://wiki.haskell.org/Partial_functions\" rel=\"nofollow noreferrer\">avoid partial functions</a> with seemingly more emphasis in Haskell than other languages.</p>\n\n<p>Is this because partial functions are a more frequent risk in Haskell than other languages (c.f. <a href=\"https://stackoverflow.com/questions/21097051/kinds-of-bugs-that-are-more-likely-prone-in-haskell-programs-than-in-other-langu\">this question</a>), or is it that avoiding them in other languages is impractical to the point of little consideration?</p>\n"}, {"tags": ["haskell", "haskell-turtle"], "answers": [{"tags": [], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "is_accepted": true, "score": 3, "last_activity_date": 1499997279, "creation_date": 1499997279, "answer_id": 45093397, "question_id": 45092258, "link": "https://stackoverflow.com/questions/45092258/how-to-print-paths-using-haskell-turtle-library/45093397#45093397", "title": "How to print paths using Haskell Turtle library?", "body": "<p>You don't lift <code>&gt;&gt;=</code> from <code>IO</code> into <code>Shell</code>. <code>Shell</code> already has a <code>Monad</code> instance that comes with its own <code>&gt;&gt;=</code> function. Instead you either lift <code>IO</code> actions into <code>Shell</code> with <code>liftIO</code> or run the shell with <a href=\"https://hackage.haskell.org/package/turtle-1.3.6/docs/Turtle-Shell.html#v:fold\" rel=\"nofollow noreferrer\"><code>fold</code></a> or <code>foldM</code>. Use <code>sh</code> to run the <code>Shell</code> when you don't care about the results.</p>\n\n<p>I believe your example can be simplified to</p>\n\n<pre><code>main = sh $ do\n  homedir &lt;- home\n  filepath &lt;- lstree $ homedir &lt;/&gt; \"projects\"\n  case (toText filepath) of\n    Right path -&gt; liftIO $ T.putStrLn x\n    Left approx -&gt; return () -- This shouldn't happen\n</code></pre>\n\n<p>As for the difficulty with getting a string back from a <code>FilePath</code>, I don't think that can be blamed on the Turtle author. I think it can be simplified to </p>\n\n<pre><code>stringPath :: FilePath -&gt; String\nstringPath filepath =\n  case (toText filePath) of              -- try to use the human readable version\n     Right path -&gt; T.unpack path \n     Left _     -&gt; encodeString filePath -- fall back on the machine readable one\n</code></pre>\n\n<p>Combined this would simplify the example to</p>\n\n<pre><code>main = sh $ do\n  homedir &lt;- home\n  filepath &lt;- lstree $ homedir &lt;/&gt; \"projects\"\n  liftIO $ putStrLn (stringPath filepath)\n</code></pre>\n\n<p>or</p>\n\n<pre><code>main = view $ do\n  homedir &lt;- home\n  filepath &lt;- lstree $ homedir &lt;/&gt; \"projects\"\n  return $ stringPath filepath\n</code></pre>\n"}], "owner": {"reputation": 4471, "user_id": 3858142, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/4c27dead2edf0b6dc28833a694c42ba1?s=128&d=identicon&r=PG&f=1", "display_name": "sevo", "link": "https://stackoverflow.com/users/3858142/sevo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 121, "favorite_count": 0, "accepted_answer_id": 45093397, "answer_count": 1, "score": 0, "last_activity_date": 1499997279, "creation_date": 1499987420, "question_id": 45092258, "link": "https://stackoverflow.com/questions/45092258/how-to-print-paths-using-haskell-turtle-library", "title": "How to print paths using Haskell Turtle library?", "body": "<p>To learn a bit about <code>Turtle</code>, I thought it would be nice to modify example from the tutorial. I chose to remove the reduntant \"FilePath\" from each line of the output thinking it would be a simple exercise.</p>\n\n<p>And yet, despite author's efforts into making his library easy to use I nearly failed to use it to solve this simple problem.</p>\n\n<p>I tried everyting I saw that looked like it would allow me to somehow lift <code>&gt;&gt;=</code> from <code>IO</code> into <code>Shell</code>: <code>MonadIO</code>, <code>FoldM</code>, <code>liftIO</code>, <code>_foldIO</code> with no success. I grew frustrated and only through reading <code>Turtle</code> source code I was able to find something that seems to work (\"no obvious defects\" comes to mind).</p>\n\n<p>Why is this so hard? How does one logically arrive a solution using API of this library?</p>\n\n<pre><code>#!/usr/bin/env stack\n-- stack --resolver lts-8.17 --install-ghc runghc --package turtle --package lens\n{-# LANGUAGE OverloadedStrings #-}\nimport Turtle\nimport Control.Lens\nimport Control.Foldl as Foldl\nimport Filesystem.Path.CurrentOS\nimport Data.Text.IO as T\nimport Data.Text as T\n\nmain = do\n  homedir &lt;- home\n  let paths = lstree $ homedir &lt;/&gt; \"projects\"\n  let t = fmap (Control.Lens.view _Right . toText) paths\n  customView t\n\ncustomView s = sh (do\n  x &lt;- s\n  liftIO $ T.putStrLn x)\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 4, "creation_date": 1499975426, "post_id": 45089655, "comment_id": 77152002, "body": "This problem has been studied quite a lot.  See <a href=\"http://squing.blogspot.com/2008/11/beautiful-folding.html\" rel=\"nofollow noreferrer\">this</a> and <a href=\"https://hackage.haskell.org/package/folds\" rel=\"nofollow noreferrer\">this</a> (and the links in the package description)"}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 3, "creation_date": 1499976073, "post_id": 45089655, "comment_id": 77152318, "body": "I like Gabriel&#39;s version of beautiful folds more: <a href=\"https://www.youtube.com/watch?v=6a5Ti0r8Q2s\" rel=\"nofollow noreferrer\">video</a> and <a href=\"https://hackage.haskell.org/package/foldl\" rel=\"nofollow noreferrer\">library</a>. The video is really clear and understandable. Not sure about Kmett&#39;s libraries... Also didn&#39;t find good tutorials about <code>folds</code> :("}, {"owner": {"reputation": 891, "user_id": 99978, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/784837d98d18ff99681f612a62dddbcc?s=128&d=identicon&r=PG", "display_name": "j.p.", "link": "https://stackoverflow.com/users/99978/j-p"}, "edited": false, "score": 1, "creation_date": 1500013109, "post_id": 45089655, "comment_id": 77164034, "body": "Take a look at <a href=\"https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance#Covariance\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/&hellip;</a> for a numerically stable online algorithm for calculating the covariance (use online_covariance)."}, {"owner": {"reputation": 316, "user_id": 4434502, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3395069ce0def88602f7c925a84ceec?s=128&d=identicon&r=PG&f=1", "display_name": "user54038", "link": "https://stackoverflow.com/users/4434502/user54038"}, "edited": false, "score": 0, "creation_date": 1500328986, "post_id": 45089655, "comment_id": 77277749, "body": "I followed the squing blog post linked by @liqui to <a href=\"https://gist.github.com/user54038/d77e9daa3a2310e51e3fe866263273b7\" rel=\"nofollow noreferrer\">attempt a solution</a>. The input is a tab-delimited matrix, we calculate the covariance matrix of the columns. The output is correct, but the memory usage is not constant. Maybe because I had to define a combinator allFolds, which combines all the folds in a list. I think I\u2019m missing a required bang somewhere. It&#39;s very cool that you can write in this style but I need to learn to get the memory usage right. I&#39;ll be checking out the libraries linked by luqui and Shersh."}, {"owner": {"reputation": 316, "user_id": 4434502, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3395069ce0def88602f7c925a84ceec?s=128&d=identicon&r=PG&f=1", "display_name": "user54038", "link": "https://stackoverflow.com/users/4434502/user54038"}, "edited": false, "score": 0, "creation_date": 1500330021, "post_id": 45089655, "comment_id": 77278122, "body": "Link to my code was broken, <a href=\"https://gist.github.com/user54038/c20c85de4171705d860827339ef9d042\" rel=\"nofollow noreferrer\">here&#39;s the correct one</a>"}, {"owner": {"reputation": 891, "user_id": 99978, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/784837d98d18ff99681f612a62dddbcc?s=128&d=identicon&r=PG", "display_name": "j.p.", "link": "https://stackoverflow.com/users/99978/j-p"}, "edited": false, "score": 0, "creation_date": 1500364211, "post_id": 45089655, "comment_id": 77289470, "body": "Are you more interested in learning haskell or in calculating a covariance matrix efficiently?"}, {"owner": {"reputation": 316, "user_id": 4434502, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3395069ce0def88602f7c925a84ceec?s=128&d=identicon&r=PG&f=1", "display_name": "user54038", "link": "https://stackoverflow.com/users/4434502/user54038"}, "edited": false, "score": 0, "creation_date": 1500389786, "post_id": 45089655, "comment_id": 77308808, "body": "I&#39;m interested in learning to use Haskell to write tasks such as this one in a particular style, as specified in my question. Efficiency was one of the two goals in my bullet list. Thanks for the Wikipedia link, and that&#39;s probably the algorithm I&#39;m actually going to use for now, but I&#39;m still looking for an efficient solution that partitions the tasks into small, meaningful functions."}, {"owner": {"reputation": 316, "user_id": 4434502, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3395069ce0def88602f7c925a84ceec?s=128&d=identicon&r=PG&f=1", "display_name": "user54038", "link": "https://stackoverflow.com/users/4434502/user54038"}, "reply_to_user": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 0, "creation_date": 1500415280, "post_id": 45089655, "comment_id": 77324205, "body": "OK, I&#39;ve <a href=\"https://gist.github.com/user54038/81ed43ee489594ce9097fbe649b51f54\" rel=\"nofollow noreferrer\">reimplemented with Gabriel&#39;s library</a>, which was linked by @Shersh. It&#39;s pretty readable, broken down the way I wanted, and running in constant memory. I suspect the &quot;allFolds&quot; combinator I wrote is reinventing some wheel or another, and I&#39;d like to learn to do it with stuff built-in to the library. But I&#39;m very happy with this, and consider this question to be answered in the comments."}], "answers": [{"comments": [{"owner": {"reputation": 316, "user_id": 4434502, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3395069ce0def88602f7c925a84ceec?s=128&d=identicon&r=PG&f=1", "display_name": "user54038", "link": "https://stackoverflow.com/users/4434502/user54038"}, "edited": false, "score": 1, "creation_date": 1500475191, "post_id": 45092402, "comment_id": 77354959, "body": "Inspired by this I tried testing my solution, and found that I got 1MB total memory in use on the same example, using <a href=\"https://gist.github.com/user54038/44f0c28bd03a01b8c6fafc6ec6c5a29a\" rel=\"nofollow noreferrer\">my own application of the foldl library</a>. The key is to define a covariance Fold, which can be done in terms of the mean Fold (I used Gabriel&#39;s builtin L.mean rather than redefining it). Then you fold once with the covariance Fold, rather than using the mean Fold multiple times."}, {"owner": {"reputation": 1336, "user_id": 794944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b885541101d504bbd39901d5d7fc1766?s=128&d=identicon&r=PG", "display_name": "Jack Henahan", "link": "https://stackoverflow.com/users/794944/jack-henahan"}, "reply_to_user": {"reputation": 316, "user_id": 4434502, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3395069ce0def88602f7c925a84ceec?s=128&d=identicon&r=PG&f=1", "display_name": "user54038", "link": "https://stackoverflow.com/users/4434502/user54038"}, "edited": false, "score": 0, "creation_date": 1500478342, "post_id": 45092402, "comment_id": 77357545, "body": "Wow, that&#39;s fantastic. Great solution."}], "tags": [], "owner": {"reputation": 1336, "user_id": 794944, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b885541101d504bbd39901d5d7fc1766?s=128&d=identicon&r=PG", "display_name": "Jack Henahan", "link": "https://stackoverflow.com/users/794944/jack-henahan"}, "is_accepted": false, "score": 5, "last_activity_date": 1500046717, "last_edit_date": 1500046717, "creation_date": 1499988512, "answer_id": 45092402, "question_id": 45089655, "link": "https://stackoverflow.com/questions/45089655/break-haskell-function-down-into-subtasks-without-additional-list-traversals/45092402#45092402", "title": "Break Haskell function down into subtasks without additional list traversals", "body": "<p>So, I did some digging around, and I came up with the following.</p>\n\n<p>EDIT: <a href=\"https://gist.github.com/jhenahan/e90db4bcca6fcdb832522671a6c53399\" rel=\"nofollow noreferrer\">Gist</a> for people who'd prefer that to the SO formatting.</p>\n\n<p>First, a few implementations of mean</p>\n\n<pre><code>module Means where\n\nimport Data.List\nimport Control.Applicative\n\nmean :: (Fractional a1, Real a, Foldable t) =&gt; t a -&gt; a1\nmean xs = realToFrac (sum xs) / realToFrac (length xs)\n\nmean' :: (Foldable f, Fractional a) =&gt; f a -&gt; a\nmean' = liftA2 (/) sum (fromIntegral . length)\n\ndata Pair = Pair {-# UNPACK #-}!Int {-# UNPACK #-}!Double \n\nmean'' :: [Double] -&gt; Double\nmean'' xs = s / fromIntegral n\n  where\n    Pair n s = foldl' k (Pair 0 0) xs\n    k (Pair n s) x = Pair (n+1) (s+x)\n</code></pre>\n\n<p>The last one uses an explicit strict pair constructor. IIRC, <code>(,)</code> is lazy, so this should give us better performance characteristics.</p>\n\n<pre><code>module Covariance where\n\nimport Means\n\ncovariance :: (Fractional a, Real a1) =&gt; [a1] -&gt; [a1] -&gt; a\ncovariance xs ys = mean (zipWith (*) xs ys) - mean xs * mean ys\n\ncovariance' :: Fractional a =&gt; [a] -&gt; [a] -&gt; a\ncovariance' xs ys = mean' (zipWith (*) xs ys) - mean' xs * mean' ys\n\ncovariance'' :: [Double] -&gt; [Double] -&gt; Double\ncovariance'' xs ys = mean'' (zipWith (*) xs ys) - mean'' xs * mean'' ys\n\ncovariance''' :: [Double] -&gt; [Double] -&gt; Double\ncovariance''' xs ys =\n    let mx = mean'' xs\n        my = mean'' ys\n    in\n    sum (zipWith (\\x y -&gt; (x - mx) * (y - my)) xs ys) / fromIntegral (length xs)\n</code></pre>\n\n<p>I tried a few versions of your <code>cov</code> using each of the different mean options, then one uglier \"performance\" version.</p>\n\n<p>I threw together a simple <code>Main</code> with some hardcoded lists for testing.</p>\n\n<pre><code>module Main where\n\nimport Means\nimport Covariance\n\nv1 = [1000000..2000000]\n\nv2 = [2000000..3000000]\n\nmain :: IO ()\nmain = do\n  -- let cov = covariance v1 v2\n  -- let cov = covariance' v1 v2\n  -- let cov = covariance'' v1 v2\n  let cov = covariance''' v1 v2\n  print cov\n</code></pre>\n\n<p>Compiling with <code>-rtsopts</code> and running with <code>+RTS -s</code>, I got the following allocation information.</p>\n\n<p><code>covariance</code>:</p>\n\n<pre><code>8.33335e10\n     531,816,984 bytes allocated in the heap\n     890,566,720 bytes copied during GC\n     148,609,912 bytes maximum residency (11 sample(s))\n      15,649,528 bytes maximum slop\n             374 MB total memory in use (0 MB lost due to fragmentation)\n\n                                     Tot time (elapsed)  Avg pause  Max pause\n  Gen  0       981 colls,     0 par    0.385s   0.389s     0.0004s    0.0012s\n  Gen  1        11 colls,     0 par    0.445s   0.584s     0.0531s    0.2084s\n\n  INIT    time    0.000s  (  0.002s elapsed)\n  MUT     time    0.194s  (  0.168s elapsed)\n  GC      time    0.830s  (  0.973s elapsed)\n  EXIT    time    0.001s  (  0.029s elapsed)\nmodule Main where\n  Total   time    1.027s  (  1.172s elapsed)\n\n  %GC     time      80.9%  (83.0% elapsed)\n\n  Alloc rate    2,741,140,975 bytes per MUT second\n\n  Productivity  19.1% of total user, 16.8% of total elapsed\n</code></pre>\n\n<p><code>covariance'</code>:</p>\n\n<pre><code>8.333350000320508e10\n     723,822,456 bytes allocated in the heap\n     891,626,240 bytes copied during GC\n     185,629,664 bytes maximum residency (11 sample(s))\n       3,693,296 bytes maximum slop\n             435 MB total memory in use (0 MB lost due to fragmentation)\n\n                                     Tot time (elapsed)  Avg pause  Max pause\n  Gen  0      1372 colls,     0 par    0.388s   0.392s     0.0003s    0.0010s\n  Gen  1        11 colls,     0 par    0.388s   0.551s     0.0501s    0.1961s\n\n  INIT    time    0.000s  (  0.002s elapsed)\n  MUT     time    0.227s  (  0.202s elapsed)\n  GC      time    0.777s  (  0.943s elapsed)\n  EXIT    time    0.001s  (  0.029s elapsed)\n  Total   time    1.006s  (  1.176s elapsed)\n\n  %GC     time      77.2%  (80.2% elapsed)\n\n  Alloc rate    3,195,430,190 bytes per MUT second\n\n  Productivity  22.8% of total user, 19.6% of total elapsed\n</code></pre>\n\n<p><code>covariance''</code>:</p>\n\n<pre><code>8.333350000320508e10\n     456,108,392 bytes allocated in the heap\n     394,432,096 bytes copied during GC\n      79,295,648 bytes maximum residency (15 sample(s))\n      21,161,776 bytes maximum slop\n             201 MB total memory in use (0 MB lost due to fragmentation)\n\n                                     Tot time (elapsed)  Avg pause  Max pause\n  Gen  0       861 colls,     0 par    0.085s   0.089s     0.0001s    0.0005s\n  Gen  1        15 colls,     0 par    0.196s   0.274s     0.0182s    0.0681s\n\n  INIT    time    0.000s  (  0.002s elapsed)\n  MUT     time    0.124s  (  0.106s elapsed)\n  GC      time    0.282s  (  0.362s elapsed)\n  EXIT    time    0.001s  (  0.021s elapsed)\n  Total   time    0.408s  (  0.491s elapsed)\n\n  %GC     time      69.1%  (73.7% elapsed)\n\n  Alloc rate    3,681,440,521 bytes per MUT second\n\n  Productivity  30.9% of total user, 25.9% of total elapsed\n</code></pre>\n\n<p><code>covariance'''</code>:</p>\n\n<pre><code>8.333349999886264e10\n     336,108,336 bytes allocated in the heap\n     202,943,312 bytes copied during GC\n      47,493,864 bytes maximum residency (10 sample(s))\n      13,578,520 bytes maximum slop\n             115 MB total memory in use (0 MB lost due to fragmentation)\n\n                                     Tot time (elapsed)  Avg pause  Max pause\n  Gen  0       633 colls,     0 par    0.053s   0.055s     0.0001s    0.0002s\n  Gen  1        10 colls,     0 par    0.089s   0.131s     0.0131s    0.0472s\n\n  INIT    time    0.000s  (  0.002s elapsed)\n  MUT     time    0.095s  (  0.086s elapsed)\n  GC      time    0.142s  (  0.186s elapsed)\n  EXIT    time    0.001s  (  0.011s elapsed)\n  Total   time    0.240s  (  0.286s elapsed)\n\n  %GC     time      59.2%  (65.1% elapsed)\n\n  Alloc rate    3,522,631,228 bytes per MUT second\n\n  Productivity  40.8% of total user, 34.1% of total elapsed\n</code></pre>\n\n<p>As you can see, a lot of the allocation is dependent on the mean we go with. We get the biggest boost by using <code>mean''</code> with the strict pair constructor, even with the naive <code>zipWith</code> implementation.</p>\n\n<p>I'm working on wiring up the implementations with <a href=\"https://hackage.haskell.org/package/weigh\" rel=\"nofollow noreferrer\"><code>weigh</code></a>, so I may have some more data in a bit.</p>\n\n<p>Beyond tuning the component functions, I don't know of a much more performant way of dealing with <code>covmat</code>, but the strict pair constructor at least should improve your space characteristics regardless of what else you do.</p>\n\n<p>EDIT: <code>weigh</code> results</p>\n\n<pre><code>Case                                  Allocated    GCs\nnaive mean                          723,716,168  1,382\napplicative mean                    723,714,736  1,382\noptimized mean, naive zipWith       456,000,688    875\noptimized mean, hand-tuned zipWith  336,000,672    642\n</code></pre>\n\n<p>Second EDIT:</p>\n\n<p>I grabbed Gabriel's awesome <code>foldl</code> to see what sort of performance we can get without having to hand-tune mean with the explicit strict pair.</p>\n\n<pre><code>import qualified Control.Foldl as L\n\nmean''' :: [Double] -&gt; Double\nmean''' = L.fold (liftA2 (/) L.sum L.genericLength)\n\ncovariance'''' :: [Double] -&gt; [Double] -&gt; Double\ncovariance'''' xs ys = mean''' (zipWith (*) xs ys) - mean''' xs * mean''' ys\n\ncovariance''''' :: [Double] -&gt; [Double] -&gt; Double\ncovariance''''' xs ys = let mx = mean''' xs\n                            my = mean''' ys\n                        in\n                        mean''' (zipWith (\\x y -&gt; (x - mx) * (y - my)) xs ys)\n</code></pre>\n\n<p>Allocation results:</p>\n\n<p><code>covariance''''</code>:</p>\n\n<pre><code>8.333350000320508e10\n     336,108,272 bytes allocated in the heap\n     222,635,752 bytes copied during GC\n      61,198,528 bytes maximum residency (10 sample(s))\n      13,627,544 bytes maximum slop\n             140 MB total memory in use (0 MB lost due to fragmentation)\n\n                                     Tot time (elapsed)  Avg pause  Max pause\n  Gen  0       633 colls,     0 par    0.052s   0.054s     0.0001s    0.0003s\n  Gen  1        10 colls,     0 par    0.105s   0.155s     0.0155s    0.0592s\n\n  INIT    time    0.000s  (  0.002s elapsed)\n  MUT     time    0.110s  (  0.099s elapsed)\n  GC      time    0.156s  (  0.209s elapsed)\n  EXIT    time    0.001s  (  0.014s elapsed)\n  Total   time    0.269s  (  0.323s elapsed)\n\n  %GC     time      58.1%  (64.5% elapsed)\n\n  Alloc rate    3,054,641,122 bytes per MUT second\n\n  Productivity  41.8% of total user, 34.9% of total elapsed\n</code></pre>\n\n<p><code>covariance'''''</code>:</p>\n\n<pre><code>8.333349999886264e10\n     336,108,232 bytes allocated in the heap\n     202,942,400 bytes copied during GC\n      47,493,816 bytes maximum residency (10 sample(s))\n      13,578,568 bytes maximum slop\n             115 MB total memory in use (0 MB lost due to fragmentation)\n\n                                     Tot time (elapsed)  Avg pause  Max pause\n  Gen  0       633 colls,     0 par    0.057s   0.059s     0.0001s    0.0003s\n  Gen  1        10 colls,     0 par    0.086s   0.126s     0.0126s    0.0426s\n\n  INIT    time    0.000s  (  0.002s elapsed)\n  MUT     time    0.096s  (  0.087s elapsed)\n  GC      time    0.143s  (  0.184s elapsed)\n  EXIT    time    0.001s  (  0.011s elapsed)\n  Total   time    0.241s  (  0.285s elapsed)\n\n  %GC     time      59.2%  (64.7% elapsed)\n\n  Alloc rate    3,504,449,342 bytes per MUT second\n\n  Productivity  40.8% of total user, 34.5% of total elapsed\n</code></pre>\n\n<p>And <code>weigh</code> results:</p>\n\n<pre><code>foldl mean                          336,000,568    642\nfoldl mean, tuned zipWith           336,000,568    642\n</code></pre>\n\n<p>In summary, it looks like the <code>foldl</code> implementation is your best bet. It's extremely clear about what it's doing, and pulls some really fancy tricks to stream inputs efficiently, meeting or exceeding the result of our hand-tuning. You could probably eke some extra juice out of all this using another data structure, but this is pretty good performance for the humble list. :D</p>\n\n<p>Third edit:</p>\n\n<p>I've never used Edward's <code>folds</code> before, so I may be doing something very stupid, but I also tried out an implementation using those.</p>\n\n<pre><code>import qualified Data.Fold as F\n\nsumL :: Num a =&gt; F.L a a\nsumL = F.L id (+) 0\n\nlengthL :: Num b =&gt; F.L a b\nlengthL = F.L id (const . (+1)) 0\n\nmean'''' :: [Double] -&gt; Double\nmean'''' = flip F.run (liftA2 (/) sumL lengthL)\n\ncovariance'''''' :: [Double] -&gt; [Double] -&gt; Double\ncovariance'''''' xs ys = mean'''' (zipWith (*) xs ys) - mean'''' xs * mean'''' ys\n\ncovariance''''''' :: [Double] -&gt; [Double] -&gt; Double\ncovariance''''''' xs ys = let mx = mean'''' xs\n                              my = mean'''' ys\n                        in\n                        mean'''' (zipWith (\\x y -&gt; (x - mx) * (y - my)) xs ys)\n</code></pre>\n\n<p>Allocation results:</p>\n\n<p><code>covariance''''''</code>:</p>\n\n<pre><code>8.333350000320508e10\n     456,108,488 bytes allocated in the heap\n     394,432,096 bytes copied during GC\n      79,295,648 bytes maximum residency (15 sample(s))\n      21,161,776 bytes maximum slop\n             201 MB total memory in use (0 MB lost due to fragmentation)\n\n                                     Tot time (elapsed)  Avg pause  Max pause\n  Gen  0       861 colls,     0 par    0.089s   0.092s     0.0001s    0.0003s\n  Gen  1        15 colls,     0 par    0.198s   0.276s     0.0184s    0.0720s\n\n  INIT    time    0.000s  (  0.002s elapsed)\n  MUT     time    0.135s  (  0.119s elapsed)\n  GC      time    0.287s  (  0.367s elapsed)\n  EXIT    time    0.001s  (  0.019s elapsed)\n  Total   time    0.425s  (  0.506s elapsed)\n\n  %GC     time      67.6%  (72.5% elapsed)\n\n  Alloc rate    3,388,218,993 bytes per MUT second\n\n  Productivity  32.3% of total user, 27.1% of total elapsed\n</code></pre>\n\n<p><code>covariance'''''''</code>:</p>\n\n<pre><code>8.333349999886264e10\n     456,108,552 bytes allocated in the heap\n     291,275,200 bytes copied during GC\n      62,670,040 bytes maximum residency (11 sample(s))\n      15,029,432 bytes maximum slop\n             172 MB total memory in use (0 MB lost due to fragmentation)\n\n                                     Tot time (elapsed)  Avg pause  Max pause\n  Gen  0       862 colls,     0 par    0.068s   0.070s     0.0001s    0.0003s\n  Gen  1        11 colls,     0 par    0.149s   0.210s     0.0191s    0.0570s\n\n  INIT    time    0.000s  (  0.002s elapsed)\n  MUT     time    0.118s  (  0.104s elapsed)\n  GC      time    0.217s  (  0.280s elapsed)\n  EXIT    time    0.001s  (  0.016s elapsed)\n  Total   time    0.337s  (  0.403s elapsed)\n\n  %GC     time      64.3%  (69.6% elapsed)\n\n  Alloc rate    3,870,870,585 bytes per MUT second\n\n  Productivity  35.7% of total user, 29.9% of total elapsed\n</code></pre>\n\n<p>And <code>weigh</code> results:</p>\n\n<pre><code>folds mean                          456,000,784    875\nfolds mean, tuned zipWith           456,000,888    871\n</code></pre>\n\n<p>Another EDIT: I also tried the <code>folds</code> option using <code>L'</code> rather than <code>L</code>, but the results were the same.</p>\n"}], "owner": {"reputation": 316, "user_id": 4434502, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3395069ce0def88602f7c925a84ceec?s=128&d=identicon&r=PG&f=1", "display_name": "user54038", "link": "https://stackoverflow.com/users/4434502/user54038"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 208, "favorite_count": 0, "answer_count": 1, "score": 11, "last_activity_date": 1500046717, "creation_date": 1499974881, "last_edit_date": 1499975371, "question_id": 45089655, "link": "https://stackoverflow.com/questions/45089655/break-haskell-function-down-into-subtasks-without-additional-list-traversals", "title": "Break Haskell function down into subtasks without additional list traversals", "body": "<p>So, I\u2019m having a lot of trouble writing a program to make a covariance matrix from several large integer vectors, stored in separate files. I started by writing</p>\n\n<pre><code>mean xs = realToFrac (sum xs) / realToFrac (length xs)\ncov xs ys = mean (zipWith (*) xs ys) - mean xs * mean ys\ncovmat vectors = [cov xs ys | ys &lt;- vectors, xs &lt;- vectors]\n</code></pre>\n\n<p>which worked for small input, but you can see how inefficient even just \u201cmean\u201d is. It keeps all the xs in memory when doing the sum, because they're going to be used by \"length\". That\u2019s fixable, as so:</p>\n\n<pre><code>mean xs = realToFrac thisSum / realToFrac thisLength\n    where (thisSum, thisLength) = foldl' (\\(s,l) y-&gt; (s+y,l+1)) (0,0) xs\n</code></pre>\n\n<p>but then I run into the same problem with \u201ccov\u201d. When I rewrote \"cov\" in this style, it didn't end up using my \"mean\" function. And I still have one level to go up when I write the \"covmat\" function, which will become extremely complicated.</p>\n\n<p>So, I have two goals, which seem to be in conflict:</p>\n\n<ul>\n<li><p>Traverse each list once, without keeping it in memory</p></li>\n<li><p>Break down \"covmat\" into simpler, meaningful functions, specifically \"cov\" and \"mean\"</p></li>\n</ul>\n\n<p>I don't see any way to unify these two goals with what I know of Haskell. But conceptually it seems simple: all of these functions need to \"listen\" to the values of the same few lists as they come in. Is there any way in Haskell to organize it like this? If this requires a different data structure or an additional library, I'm open to that.</p>\n"}, {"tags": ["haskell", "fold", "monoids"], "comments": [{"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 2, "creation_date": 1499973787, "post_id": 45088559, "comment_id": 77151151, "body": "FWIW I think using foldMap makes it clearer what your intent is, and makes it harder to screw up. foldl is sufficiently flexible that you could make a mistake in your folding function, and it obscures your intent to just map-then-aggregate: other humans have to read your fold function carefully to realize it&#39;s just doing what foldMap does."}, {"owner": {"reputation": 1698, "user_id": 4050510, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/f3123195051caa2f71674df0798284b0?s=128&d=identicon&r=PG", "display_name": "LudvigH", "link": "https://stackoverflow.com/users/4050510/ludvigh"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1499973935, "post_id": 45088559, "comment_id": 77151223, "body": "@amalloy it is an important reason. I think I&#39;ll go with that to begin with, and switch to a strict fold later if needed."}], "owner": {"reputation": 1698, "user_id": 4050510, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/f3123195051caa2f71674df0798284b0?s=128&d=identicon&r=PG", "display_name": "LudvigH", "link": "https://stackoverflow.com/users/4050510/ludvigh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 48, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1499973827, "creation_date": 1499970886, "question_id": 45088559, "link": "https://stackoverflow.com/questions/45088559/performance-or-other-similar-reasons-to-use-foldmap-instead-of-its-variants", "title": "Performance or other similar reasons to use foldMap instead of its variants?", "body": "<p>I have a list of some ~10.000 observations in a custom data type <code>observations :: [Obs]</code> that I want to aggregate into a statistics object <code>:: Stat</code> . A fold seemed like a sensible choice. I find myself with two options. </p>\n\n<p>(1) Define a function <code>accumulate :: Stat -&gt; Obs -&gt; Stat</code> that I then left fold (strictly). <code>foldl' accumulate acc0 observations</code></p>\n\n<p>But my statistics object only contain accumulators such as Count and Sum, so there should be a monoidal structure. That gives me one more option</p>\n\n<p>(2) define a <code>convert :: Obs -&gt; Stat</code> and use foldMap from Data.Foldable like<code>foldMap convert observations</code>.</p>\n\n<p><strong>my question</strong>\nWhat reasons are there for going the monoidal way? Performance? Maintainability? Other?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1499967678, "post_id": 45084724, "comment_id": 77147592, "body": "You changed the first type declaration from <code>Double -&gt;</code> to <code>Double =&gt;</code> when you changed the second from <code>(Double a) -&gt;</code> to <code>(Double a) =&gt;</code>. This can&#39;t possibly be correct so I have taken the liberty of editing it back to <code>Double -&gt;</code>."}, {"owner": {"reputation": 827, "user_id": 1276388, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/4ae985df9e533570f5ac2ea9bfc25dfd?s=128&d=identicon&r=PG", "display_name": "\u0397\u03bb\u03b5\u03ba\u03c4\u03c1\u03bf\u03bb\u03cc\u03b3\u03bf\u03c2 \u039c\u03b7\u03c7\u03b1\u03bd\u03b9\u03ba\u03cc\u03c2", "link": "https://stackoverflow.com/users/1276388/%ce%97%ce%bb%ce%b5%ce%ba%cf%84%cf%81%ce%bf%ce%bb%cf%8c%ce%b3%ce%bf%cf%82-%ce%9c%ce%b7%cf%87%ce%b1%ce%bd%ce%b9%ce%ba%cf%8c%cf%82"}, "edited": false, "score": 0, "creation_date": 1500210169, "post_id": 45084724, "comment_id": 77227330, "body": "<code>Double</code> is &quot;constant&quot; type constructor. It takes no argument. You can check it with <code>:k Double</code> in <code>ghci</code>."}], "answers": [{"comments": [{"owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 3, "creation_date": 1499959118, "post_id": 45084814, "comment_id": 77142166, "body": "I guess Skalla could write <code>haversine :: (a ~ Double) =&gt; a -&gt; a -&gt; a -&gt; a -&gt; a</code> to constrain <code>a</code> to be <code>Double</code>, but that&#39;d be highly non-idiomatic."}], "tags": [], "owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "is_accepted": false, "score": 4, "last_activity_date": 1499958923, "creation_date": 1499958923, "answer_id": 45084814, "question_id": 45084724, "link": "https://stackoverflow.com/questions/45084724/haskell-different-in-function-declarations/45084814#45084814", "title": "Haskell: Different in function declarations", "body": "<p>In Haskell, a <em>type</em> and a <em>class</em> are two different things.</p>\n\n<p>There is a <em>type</em> named <code>Double</code>.</p>\n\n<p>There is no <em>class</em> named <code>Double</code>.</p>\n\n<p>Also, a class constraint must be followed by <code>=&gt;</code>, not <code>-&gt;</code>.</p>\n\n<p>You can constrain a variable by a <em>class</em> such as <code>Eq</code>, <code>Show</code>, etc. If you want it to be a specific <em>type</em>... well, just write that type instead of a variable.</p>\n"}, {"comments": [{"owner": {"reputation": 5, "user_id": 8207180, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/90227cdd9bf6ae2179fbc433a6af8b91?s=128&d=identicon&r=PG&f=1", "display_name": "Skalla", "link": "https://stackoverflow.com/users/8207180/skalla"}, "edited": false, "score": 0, "creation_date": 1499959091, "post_id": 45084858, "comment_id": 77142135, "body": "Why isn&#39;t Double a valid constraint? Isn&#39;t Double an instance of Floating?"}, {"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "edited": false, "score": 2, "creation_date": 1499959525, "post_id": 45084858, "comment_id": 77142463, "body": "Constraints constrain a <i>type</i> to a <i>class</i>. <code>Double</code> isn&#39;t a class."}, {"owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 0, "creation_date": 1499960104, "post_id": 45084858, "comment_id": 77142871, "body": "Like MathematicalOrchid says, <code>Double</code> is a type, not a constraint.  In Haskell, just as types live in a different world than values, constraints live in a different world than types. To be technical, they have a different <i>kind</i>.  A simple data type like <code>Double</code> has kind <code>*</code>. Types of kind <code>*</code> are the only types that have values. <code>Maybe</code> has kind <code>* -&gt; *</code>. It maps a type of kind <code>*</code> (like <code>Double</code>) to a new type of kind <code>*</code> (like <code>Maybe Double</code>).  <code>Floating</code> is a typeclass and has kind <code>* -&gt; Constraint</code>. It maps a type of kind <code>*</code> to a constraint."}], "tags": [], "owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "is_accepted": true, "score": 4, "last_activity_date": 1499959024, "creation_date": 1499959024, "answer_id": 45084858, "question_id": 45084724, "link": "https://stackoverflow.com/questions/45084724/haskell-different-in-function-declarations/45084858#45084858", "title": "Haskell: Different in function declarations", "body": "<p>1) <code>Double a</code> isn't a valid constraint. You're looking for <code>Floating a</code></p>\n\n<p>2) Constraints are given on the left hand side of a <code>=&gt;</code>, unlike function arguments which are on the left hand side of a <code>-&gt;</code>.</p>\n\n<p>So to compile, your code should be</p>\n\n<pre><code>haversine :: Floating a =&gt; a -&gt; a -&gt; a -&gt; a -&gt; a\nhaversine lat1 lon1 lat2 lon2 = let dlon = (toRad lon2) - (toRad lon1)\n                                    dlat = (toRad lat2) - (toRad lat1)\n                                    a = sin(dlat/2)^2 + cos(lat1)*cos(lat2)*sin(dlon/2)^2\n                                    c = 2 * asin(sqrt(a))\n                                in c*r\n</code></pre>\n\n<p>Assuming you have globally defined </p>\n\n<pre><code>r :: Floating a =&gt; a\ntoRad :: Floating a =&gt; a -&gt; a\n</code></pre>\n"}], "owner": {"reputation": 5, "user_id": 8207180, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/90227cdd9bf6ae2179fbc433a6af8b91?s=128&d=identicon&r=PG&f=1", "display_name": "Skalla", "link": "https://stackoverflow.com/users/8207180/skalla"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "accepted_answer_id": 45084858, "answer_count": 2, "score": 0, "last_activity_date": 1499967634, "creation_date": 1499958689, "last_edit_date": 1499967634, "question_id": 45084724, "link": "https://stackoverflow.com/questions/45084724/haskell-different-in-function-declarations", "title": "Haskell: Different in function declarations", "body": "<p>I am writing the haversine formula in haskell. \nIn one version of my function, the definition and declarations are as follows:</p>\n\n<pre><code>haversine :: Double -&gt; Double -&gt; Double -&gt; Double -&gt; Double\nhaversine lat1 lon1 lat2 lon2 = let dlon = (toRad lon2) - (toRad lon1)\n                                    dlat = (toRad lat2) - (toRad lat1)\n                                    a = sin(dlat/2)^2 + cos(lat1)*cos(lat2)*sin(dlon/2)^2\n                                    c = 2 * asin(sqrt(a))\n                                in c*r\n</code></pre>\n\n<p>This function compiles fine. When I change the declaration to:</p>\n\n<pre><code>haversine :: (Double a) =&gt; a -&gt; a -&gt; a -&gt; a -&gt; a\n</code></pre>\n\n<p>I get the following error: </p>\n\n<pre><code>\u2022 Expecting one fewer argument to \u2018Double\u2019\n  Expected kind \u2018* -&gt; *\u2019, but \u2018Double\u2019 has kind \u2018*\u2019\n\u2022 In the type signature:\n    haversine :: (Double a) -&gt; a -&gt; a -&gt; a -&gt; a -&gt; a\n</code></pre>\n\n<p>To my knowledge, by writing (Double a), I am subjecting the rest of the parameters labeled 'a' to the Double type class constraint. Why does the latter declaration result in this error?</p>\n"}, {"tags": ["haskell", "monads", "monad-transformers"], "answers": [{"comments": [{"owner": {"reputation": 159, "user_id": 8237830, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ee8cfbfaf68eb21e3587f7741f1e837b?s=128&d=identicon&r=PG&f=1", "display_name": "4xx", "link": "https://stackoverflow.com/users/8237830/4xx"}, "edited": false, "score": 0, "creation_date": 1499957202, "post_id": 45082821, "comment_id": 77140576, "body": "Thanks for the answer! Could you please tell me why you used =&lt;&lt; in the last two lines?"}, {"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "reply_to_user": {"reputation": 159, "user_id": 8237830, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ee8cfbfaf68eb21e3587f7741f1e837b?s=128&d=identicon&r=PG&f=1", "display_name": "4xx", "link": "https://stackoverflow.com/users/8237830/4xx"}, "edited": false, "score": 4, "creation_date": 1499957351, "post_id": 45082821, "comment_id": 77140704, "body": "<a href=\"http://hackage.haskell.org/package/transformers-0.5.4.0/docs/Control-Monad-Trans-State-Lazy.html#v:execStateT\" rel=\"nofollow noreferrer\"><code>execStateT</code></a> and <a href=\"http://hackage.haskell.org/package/transformers-0.5.4.0/docs/Control-Monad-Trans-State-Lazy.html#v:evalStateT\" rel=\"nofollow noreferrer\"><code>evalStateT</code></a> both return an <code>IO String</code> here, and you probably want to print the <code>String</code> inside them. <a href=\"http://hackage.haskell.org/package/base-4.9.1.0/docs/Prelude.html#v:-61--60--60-\" rel=\"nofollow noreferrer\"><code>=&lt;&lt;</code></a> calls a function on the left using the inner value of the monad on the right."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 159, "user_id": 8237830, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ee8cfbfaf68eb21e3587f7741f1e837b?s=128&d=identicon&r=PG&f=1", "display_name": "4xx", "link": "https://stackoverflow.com/users/8237830/4xx"}, "edited": false, "score": 0, "creation_date": 1499963828, "post_id": 45082821, "comment_id": 77145342, "body": "@4xx This equivalent version might be more familiar to you: <code>main = do x &lt;- execStateT gt &quot;W..&quot; ; print x ; y &lt;- evalStateT gt &quot;W..&quot; ; print y</code>"}, {"owner": {"reputation": 159, "user_id": 8237830, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ee8cfbfaf68eb21e3587f7741f1e837b?s=128&d=identicon&r=PG&f=1", "display_name": "4xx", "link": "https://stackoverflow.com/users/8237830/4xx"}, "edited": false, "score": 0, "creation_date": 1500376204, "post_id": 45082821, "comment_id": 77297924, "body": "Is your answer for the standard monads, like IO, State, etc or it&#39;s generic. I wondered if we can have a function (or monad) that performs series of arbitrary functions (computations) sequentially on an input?"}], "tags": [], "owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "is_accepted": true, "score": 8, "last_activity_date": 1499955264, "last_edit_date": 1499955264, "creation_date": 1499954156, "answer_id": 45082821, "question_id": 45082178, "link": "https://stackoverflow.com/questions/45082178/monad-vs-monad-transformers/45082821#45082821", "title": "Monad vs Monad transformers", "body": "<p>Monad transformers <em>are</em> the mechanisms for putting different functions in a monad.</p>\n\n<p>A monad only knows how to combine computations that are within the abilities of that monad. You can't do I/O in a <code>State</code> monad, but you can in a <code>StateT s IO a</code> monad. However, you will need to use <a href=\"https://hackage.haskell.org/package/transformers-0.4.2.0/docs/Control-Monad-IO-Class.html\" rel=\"noreferrer\"><code>liftIO</code></a> on the computations that do I/O.</p>\n\n<pre><code>import Control.Monad.Trans.State\nimport Control.Monad.IO.Class (liftIO)\n\ngt :: StateT String IO String\ngt = do\n   name &lt;- get\n   liftIO $ putStrLn \"HI\"\n   put \"T\"\n   return (\"hh...\" ++ name ++ \"...!\")\n\n\nmain = do\n  print =&lt;&lt; execStateT gt \"W..\"\n  print =&lt;&lt; evalStateT gt \"W..\"\n</code></pre>\n"}], "owner": {"reputation": 159, "user_id": 8237830, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/ee8cfbfaf68eb21e3587f7741f1e837b?s=128&d=identicon&r=PG&f=1", "display_name": "4xx", "link": "https://stackoverflow.com/users/8237830/4xx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 203, "favorite_count": 0, "accepted_answer_id": 45082821, "answer_count": 1, "score": 4, "last_activity_date": 1499965803, "creation_date": 1499952736, "last_edit_date": 1499965803, "question_id": 45082178, "link": "https://stackoverflow.com/questions/45082178/monad-vs-monad-transformers", "title": "Monad vs Monad transformers", "body": "<p>\"Monads allow the programmer to build up computations using sequential building blocks\" therefore it allows us to combine some computations. If this is the case, then why the following code can not be run? </p>\n\n<pre><code>import Control.Monad.Trans.State\n\ngt :: State String String\ngt = do\n   name &lt;- get\n   putStrLn \"HI\" -- Here is the source of problem!\n   put \"T\"\n   return (\"hh...\" ++ name ++ \"...!\")\n\n\nmain= do\n  print $ execState gt \"W..\"\n  print $ evalState gt \"W..\"\n</code></pre>\n\n<ul>\n<li><p>Why cannot we put different functions in a monad (like the above example)?</p></li>\n<li><p>Why do we need an additional layer, i.e. transformers to combine the monads? </p></li>\n</ul>\n"}, {"tags": ["haskell", "ghc"], "comments": [{"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1499952721, "post_id": 45081817, "comment_id": 77136950, "body": "Curious why you want your tree to live in unmanaged memory? For C interop?"}, {"owner": {"reputation": 3032, "user_id": 1405768, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/WnFhY.jpg?s=128&g=1", "display_name": "Andrew Thaddeus Martin", "link": "https://stackoverflow.com/users/1405768/andrew-thaddeus-martin"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1499954260, "post_id": 45081817, "comment_id": 77138175, "body": "@BenjaminHodgson The garbage collector is slow when you have a lot of mutable references. In some experiments I&#39;ve done with building B-trees in haskell that are around a gigabyte, the ones living in unmanaged memory can be built about 50 times faster. C interop is not something I need."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1499954440, "post_id": 45081817, "comment_id": 77138341, "body": "Would <a href=\"https://hackage.haskell.org/package/compact-0.1.0.1/docs/Data-Compact.html\" rel=\"nofollow noreferrer\">compact regions</a> (new GHC 8.2 feature) be of any use to you? I&#39;m guessing not because it sounds like you need to mutate parts of your structure"}, {"owner": {"reputation": 3032, "user_id": 1405768, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/WnFhY.jpg?s=128&g=1", "display_name": "Andrew Thaddeus Martin", "link": "https://stackoverflow.com/users/1405768/andrew-thaddeus-martin"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 1, "creation_date": 1499962143, "post_id": 45081817, "comment_id": 77144357, "body": "@BenjaminHodgson Sort of. I need to store mutable arrays as part of the data structure, so compact regions are not appropriate. Although, you can actually cheat, I did go through a giant experiment and create <a href=\"https://github.com/andrewthad/btree/tree/e9f1525978c125e1e93bff6c1aac45f88e41a2ed\" rel=\"nofollow noreferrer\">mutable b trees</a> on the compact heap, but it&#39;s a hack. Also, even with this approach, you&#39;re never allowed to delete anything from the b-tree. That&#39;s why I&#39;m turning to plain old <code>Ptr</code> for now."}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 1, "creation_date": 1499962293, "post_id": 45081817, "comment_id": 77144449, "body": "Most garbage collectors don\u2019t guarantee that finalizers will run. Language runtimes typically make a \u201cbest effort\u201d, but will bail out under various conditions, e.g., if a finalizer throws an exception, finalization takes too long on shutdown, or the process crashes outside managed code."}, {"owner": {"reputation": 3032, "user_id": 1405768, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/WnFhY.jpg?s=128&g=1", "display_name": "Andrew Thaddeus Martin", "link": "https://stackoverflow.com/users/1405768/andrew-thaddeus-martin"}, "reply_to_user": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 0, "creation_date": 1499964766, "post_id": 45081817, "comment_id": 77145884, "body": "@JonPurdy I don&#39;t mind those issues too much. My finalizer would just be freeing memory, so any issues related with terminating the process are non-concerns. The exception issue is the only real problem, as Yuras mentions in his ticket with GHC, because it allow some third-party library to make your code behave non-deterministically."}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 2, "creation_date": 1499966947, "post_id": 45081817, "comment_id": 77147160, "body": "@AndrewThaddeusMartin: Finalizers are non-deterministic almost by design\u2014they expose implementation details of the GC. You can use them <i>in addition to</i> (not <i>instead of</i>) deterministic resource management strategies (like <code>bracket</code>) to help reduce the impact of incorrect code on the rest of the application. If you rely on them, your code might work fine for your use case\u2014you just need to be aware that heavy load or faulty libraries can break your assumptions."}, {"owner": {"reputation": 3032, "user_id": 1405768, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/WnFhY.jpg?s=128&g=1", "display_name": "Andrew Thaddeus Martin", "link": "https://stackoverflow.com/users/1405768/andrew-thaddeus-martin"}, "reply_to_user": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 0, "creation_date": 1499968464, "post_id": 45081817, "comment_id": 77148071, "body": "@JonPurdy I have not previously heard the claim that heavy load can break assumptions about finalizers. What exactly does this mean? If there is too much GC pressure, do finalizers just get dropped off the queue?"}, {"owner": {"reputation": 3032, "user_id": 1405768, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/WnFhY.jpg?s=128&g=1", "display_name": "Andrew Thaddeus Martin", "link": "https://stackoverflow.com/users/1405768/andrew-thaddeus-martin"}, "reply_to_user": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 3, "creation_date": 1499970737, "post_id": 45081817, "comment_id": 77149385, "body": "@JonPurdy I spent some time reading more about finalizers (from the Java world since there&#39;s very little written on GHC&#39;s finalizers). I&#39;m now convinced that they&#39;re not a good thing to rely on. Fortunately, bracketing will work fine in my situation, so I&#39;ll use that instead. Thanks!"}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 2, "creation_date": 1499970859, "post_id": 45081817, "comment_id": 77149461, "body": "@AndrewThaddeusMartin: No, they won\u2019t be dropped, but for example, if you rely on finalizers to reclaim a resource (memory, file descriptors), then because finalizers may run late or never run, those resources can be exhausted more quickly under load than they would be if you reclaimed them more eagerly."}], "answers": [{"comments": [{"owner": {"reputation": 3032, "user_id": 1405768, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/WnFhY.jpg?s=128&g=1", "display_name": "Andrew Thaddeus Martin", "link": "https://stackoverflow.com/users/1405768/andrew-thaddeus-martin"}, "edited": false, "score": 0, "creation_date": 1499956706, "post_id": 45083064, "comment_id": 77140174, "body": "Thanks. That explains the original statement from the blog post. That&#39;s a huge bummer that exceptions can mess up other finalizers that just happened to get queued together, but I agree with Simon&#39;s assessment finalizers really shouldn&#39;t throw exceptions."}, {"owner": {"reputation": 13626, "user_id": 492865, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c69a2080e68c8606961a18aba3a08ec?s=128&d=identicon&r=PG", "display_name": "Yuras", "link": "https://stackoverflow.com/users/492865/yuras"}, "reply_to_user": {"reputation": 3032, "user_id": 1405768, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/WnFhY.jpg?s=128&g=1", "display_name": "Andrew Thaddeus Martin", "link": "https://stackoverflow.com/users/1405768/andrew-thaddeus-martin"}, "edited": false, "score": 0, "creation_date": 1499956988, "post_id": 45083064, "comment_id": 77140389, "body": "Yes, I agree with Simon too. The problem is that even if you write your finalizer correctly, some other finalizer from unrelated library may break it."}, {"owner": {"reputation": 3032, "user_id": 1405768, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/WnFhY.jpg?s=128&g=1", "display_name": "Andrew Thaddeus Martin", "link": "https://stackoverflow.com/users/1405768/andrew-thaddeus-martin"}, "edited": false, "score": 0, "creation_date": 1499957284, "post_id": 45083064, "comment_id": 77140648, "body": "I guess I&#39;ll just have to hope that there are no exceptions in finalizers in any of my deps, and then just wait to see if a space leak happens. Not my preference, but I suspect that such finalizers are rare in commonly-used libraries."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "reply_to_user": {"reputation": 3032, "user_id": 1405768, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/WnFhY.jpg?s=128&g=1", "display_name": "Andrew Thaddeus Martin", "link": "https://stackoverflow.com/users/1405768/andrew-thaddeus-martin"}, "edited": false, "score": 0, "creation_date": 1500021371, "post_id": 45083064, "comment_id": 77168476, "body": "@AndrewThaddeusMartin Well, in the first place custom finalizers are rare in commonly used libraries."}], "tags": [], "owner": {"reputation": 13626, "user_id": 492865, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c69a2080e68c8606961a18aba3a08ec?s=128&d=identicon&r=PG", "display_name": "Yuras", "link": "https://stackoverflow.com/users/492865/yuras"}, "is_accepted": true, "score": 2, "last_activity_date": 1500107591, "last_edit_date": 1500107591, "creation_date": 1499954782, "answer_id": 45083064, "question_id": 45081817, "link": "https://stackoverflow.com/questions/45081817/weak-reference-finalizer-guaranteed-to-run/45083064#45083064", "title": "Weak Reference Finalizer Guaranteed to Run", "body": "<p>\"Haskell finalizers are not guaranteed to run\" means that GC may not be performed (e.g. on program exit). But if GC is performed, then finalizers are executed.</p>\n\n<p><strong>Edit:</strong> For future readers: the statement above is not exactly correct. RTS spawns a separate thread to execute finalizers after GC. So the program may exit after GC is performed, but finalizers are not yet executed, see <a href=\"https://github.com/ghc/ghc/pull/51#discussion_r127534137\" rel=\"nofollow noreferrer\">this comment</a>.</p>\n\n<p>That is true in theory anyway. In practice finalizer <a href=\"https://ghc.haskell.org/trac/ghc/ticket/13167\" rel=\"nofollow noreferrer\">may not be executed</a>, e.g. when RTS tries to execute a number of finalizers in a row, and one of then throws an exception. So I'd not use finalizers unless it is unavoidable.</p>\n"}], "owner": {"reputation": 3032, "user_id": 1405768, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/WnFhY.jpg?s=128&g=1", "display_name": "Andrew Thaddeus Martin", "link": "https://stackoverflow.com/users/1405768/andrew-thaddeus-martin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 208, "favorite_count": 0, "accepted_answer_id": 45083064, "answer_count": 1, "score": 4, "last_activity_date": 1500107591, "creation_date": 1499951916, "question_id": 45081817, "link": "https://stackoverflow.com/questions/45081817/weak-reference-finalizer-guaranteed-to-run", "title": "Weak Reference Finalizer Guaranteed to Run", "body": "<p>In <a href=\"http://blog.ezyang.com/2014/05/the-cost-of-weak-pointers-and-finalizers-in-ghc/\" rel=\"nofollow noreferrer\">The cost of weak pointers and finalizers in GHC</a>, Edward Yang writes (emphasis added):</p>\n\n<blockquote>\n  <p>A weak pointer can also optionally be associated with a finalizer, which is run when the object is garbage collected. <strong>Haskell finalizers are not guaranteed to run.</strong></p>\n</blockquote>\n\n<p>I cannot find any documentation that corroborates this claim. The docs in <a href=\"http://hackage.haskell.org/package/base-4.9.1.0/docs/System-Mem-Weak.html\" rel=\"nofollow noreferrer\"><code>System.Mem.Weak</code></a> are not explicit about this. What I need to know is, given some primitive that has identity (<code>MutVar#</code>, <code>MutableArray#</code>, <code>Array#</code>, etc.), if I attach a finalizer to it, will it reliably be called when the value gets GCed?</p>\n\n<p>The reason is that I'm considering doing something like this:</p>\n\n<pre><code>data OffHeapTree = OffHeapTree\n  { ref :: IORef ()\n  , nodeCount :: Int\n  , nodeArray :: Ptr Node\n  }\n\ndata Node = Node\n  { childrenArray :: Ptr Node\n  , childrenCount :: Int\n  , value :: Int\n  }\n</code></pre>\n\n<p>I want to make sure that I free the array (and everything the array points to) when an <code>OffHeapTree</code> goes out of scope. Otherwise, it would leak memory. So, can this be reliably accomplished with <code>mkWeakIORef</code> or not?</p>\n"}, {"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 4, "creation_date": 1499946492, "post_id": 45078775, "comment_id": 77131688, "body": "I demonstrated it in a couple of StackOverflow answers, e.g. <a href=\"https://stackoverflow.com/a/44238966/745903\">stackoverflow.com/a/44238966/745903</a>"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1499947680, "post_id": 45078775, "comment_id": 77132538, "body": "When you have a rough idea about what the code should look like, but you are unsure about what to write in some spot, you can simply write a hole <code>_</code> as a placeholder. Then, GHC will tell you what type that hole must have to make everything type check. Usually, you replace the hole with more code, possibly having more holes inside so to explore more, until you can write the full code without holes."}, {"owner": {"reputation": 83, "user_id": 4325709, "user_type": "registered", "profile_image": "https://graph.facebook.com/100004846143898/picture?type=large", "display_name": "Severi J&#228;&#228;skel&#228;inen", "link": "https://stackoverflow.com/users/4325709/severi-j%c3%a4%c3%a4skel%c3%a4inen"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1499948229, "post_id": 45078775, "comment_id": 77132942, "body": "@leftaroundabout That&#39;s a really good and clear example. Thank you!"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1499950338, "post_id": 45078775, "comment_id": 77134853, "body": "You can also name the holes, which is useful if there are several. <code>_thishole</code>, <code>_thathole</code>"}, {"owner": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "edited": false, "score": 1, "creation_date": 1499952727, "post_id": 45078775, "comment_id": 77136955, "body": "I also use type holes combination with <code>ScopedTypeVariables</code> to find out what type a certain expression has, e.g. <code>thing :: _ &lt;- fmap . traverse .... somethingverycomplicated</code>"}, {"owner": {"reputation": 83, "user_id": 4325709, "user_type": "registered", "profile_image": "https://graph.facebook.com/100004846143898/picture?type=large", "display_name": "Severi J&#228;&#228;skel&#228;inen", "link": "https://stackoverflow.com/users/4325709/severi-j%c3%a4%c3%a4skel%c3%a4inen"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1499966520, "post_id": 45078775, "comment_id": 77146910, "body": "@dfeuer That is good to know!"}, {"owner": {"reputation": 83, "user_id": 4325709, "user_type": "registered", "profile_image": "https://graph.facebook.com/100004846143898/picture?type=large", "display_name": "Severi J&#228;&#228;skel&#228;inen", "link": "https://stackoverflow.com/users/4325709/severi-j%c3%a4%c3%a4skel%c3%a4inen"}, "reply_to_user": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "edited": false, "score": 0, "creation_date": 1499966631, "post_id": 45078775, "comment_id": 77146983, "body": "@epsilonhalbe Nice tip!"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "edited": false, "score": 0, "creation_date": 1499967276, "post_id": 45078775, "comment_id": 77147339, "body": "@epsilonhalbe, almost every time I start writing a Haskell module without <code>ScopedTypeVariables</code> I end up adding it at some point. I&#39;ve trained myself to just start with it enabled."}, {"owner": {"reputation": 754, "user_id": 2140910, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CtvpI.jpg?s=128&g=1", "display_name": "Bjartur Thorlacius", "link": "https://stackoverflow.com/users/2140910/bjartur-thorlacius"}, "edited": false, "score": 0, "creation_date": 1500030611, "post_id": 45078775, "comment_id": 77174011, "body": "@severij, please do accept the response that best answers your question. :)"}, {"owner": {"reputation": 83, "user_id": 4325709, "user_type": "registered", "profile_image": "https://graph.facebook.com/100004846143898/picture?type=large", "display_name": "Severi J&#228;&#228;skel&#228;inen", "link": "https://stackoverflow.com/users/4325709/severi-j%c3%a4%c3%a4skel%c3%a4inen"}, "reply_to_user": {"reputation": 754, "user_id": 2140910, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CtvpI.jpg?s=128&g=1", "display_name": "Bjartur Thorlacius", "link": "https://stackoverflow.com/users/2140910/bjartur-thorlacius"}, "edited": false, "score": 0, "creation_date": 1500038926, "post_id": 45078775, "comment_id": 77179480, "body": "@BjarturThorlacius I understood the method finally by reading the Stack Overflow answer leftaroundabout provided, but since your answer is the only one, I&#39;m accepting it."}], "answers": [{"tags": [], "owner": {"reputation": 754, "user_id": 2140910, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CtvpI.jpg?s=128&g=1", "display_name": "Bjartur Thorlacius", "link": "https://stackoverflow.com/users/2140910/bjartur-thorlacius"}, "is_accepted": true, "score": 2, "last_activity_date": 1499955836, "creation_date": 1499955836, "answer_id": 45083507, "question_id": 45078775, "link": "https://stackoverflow.com/questions/45078775/what-is-the-typed-hole-exploration-development-style/45083507#45083507", "title": "What is the typed hole exploration development style?", "body": "<p>Almost anywhere on the right hand side of an assignment in Haskell, you can write an underscore (optionally followed by other characters) instead of a value (constant or function). Instead of compiling, GHC will then tell you which type of value you might want to replace the underscore with, and list which identifiers in scope are of that type.</p>\n\n<p>Matth\u00edas P\u00e1ll Gissurarson is expanding the list of hints from GHC to include compound expressions.</p>\n"}], "owner": {"reputation": 83, "user_id": 4325709, "user_type": "registered", "profile_image": "https://graph.facebook.com/100004846143898/picture?type=large", "display_name": "Severi J&#228;&#228;skel&#228;inen", "link": "https://stackoverflow.com/users/4325709/severi-j%c3%a4%c3%a4skel%c3%a4inen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 178, "favorite_count": 0, "accepted_answer_id": 45083507, "answer_count": 1, "score": 3, "last_activity_date": 1499955836, "creation_date": 1499943871, "question_id": 45078775, "link": "https://stackoverflow.com/questions/45078775/what-is-the-typed-hole-exploration-development-style", "title": "What is the typed hole exploration development style?", "body": "<p>While doing the CIS194 (Spring of 2013) homework 10, I got stuck with <code>Applicative</code> instance of a <code>Parser</code> type. I seek help from Google, an I came across with this <a href=\"https://www.reddit.com/r/haskellquestions/comments/3kgoxf/cis_194_hw_10/\" rel=\"nofollow noreferrer\" title=\"Reddit post\">Reddit post</a>. The user ephrion gave an answer, which was also an example of typed hole exploration method, which I didn't quite understand. In the comments section of his answer he also said this:</p>\n\n<blockquote>\n  <p>It's extremely useful and one of the things that makes Haskell development so nice.</p>\n</blockquote>\n\n<p>So question is, what this method  is exactly, and are there some explicit order of steps in this method?</p>\n\n<p>I still consider myself as a beginner when it comes to Haskell, and by googling about the subject I didn't find a very clear explanation how this kind of development style could be used. </p>\n"}, {"tags": ["haskell", "ghc", "type-families", "type-level-computation"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1499942663, "post_id": 45078056, "comment_id": 77129017, "body": "Note that the above is not a runtime error, but a compile time error when compiling the <code>test3</code> call. &quot;When checking the inferred type&quot; means compile time. I don&#39;t know, however, why the source file compiles. Perhaps you need to &quot;use&quot; <code>test3</code> instead of only defining it?"}, {"owner": {"reputation": 1496, "user_id": 7350814, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bd7e1bdad619c54ab51e05ff9cfaa199?s=128&d=identicon&r=PG&f=1", "display_name": "Jogger", "link": "https://stackoverflow.com/users/7350814/jogger"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1499943530, "post_id": 45078056, "comment_id": 77129561, "body": "@Chi: Yes, Adding a new function <code>test4 = test3</code> gives an error when reloading the file into GHCi. Thanks!"}], "answers": [{"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 3, "last_activity_date": 1499944649, "creation_date": 1499944649, "answer_id": 45079062, "question_id": 45078056, "link": "https://stackoverflow.com/questions/45078056/how-to-get-with-ghc-typelits-typeerror-a-type-error-at-compile-time-and-not-at-r/45079062#45079062", "title": "How to get with GHC.TypeLits.TypeError a type error at compile time and not at run-time?", "body": "<p>The reason this doesn't cause an error when compiling your module is lazyness. It's basically the same reason that <code>print (if True then 1 else error \"Mearg\")</code> doesn't cause any problems: because the <code>else</code> branch is never actually <em>used</em>, there is (provably!) no way the error-raising expression could influence the result. If you will, the error only happens in an alternative universe.</p>\n\n<p>Likewise, you never make any use of the type information that <code>test3</code> could (well, not-!) supply. I.e. you never evaluate the <code>Lookup \"baz\" TList</code> result, not at compile-time nor at runtime. So there is no error!</p>\n\n<p>In any real program using such a type family, you <em>would</em> however be interested in concrete type information, and do things like</p>\n\n<pre><code>show0 :: (Show q, Num q) =&gt; q -&gt; String\nshow0 q = show $ 0`asTypeOf`q\n\nmain :: IO ()\nmain = putStrLn $ show0 test3\n</code></pre>\n\n<p>And that does cause a compile-time error (twice in fact, for some reason):</p>\n\n<pre><code>sagemuej@sagemuej-X302LA:~$ ghc /tmp/wtmpf-file2798.hs \n[1 of 1] Compiling Main             ( /tmp/wtmpf-file2798.hs, /tmp/wtmpf-file2798.o )\n\n/tmp/wtmpf-file2798.hs:35:19: error:\n    \u2022 Key not found: baz\n    \u2022 In the second argument of \u2018($)\u2019, namely \u2018show0 test3\u2019\n      In the expression: putStrLn $ show0 test3\n      In an equation for \u2018main\u2019: main = putStrLn $ show0 test3\n   |\n35 | main = putStrLn $ show0 test3\n   |                   ^^^^^^^^^^^\n\n/tmp/wtmpf-file2798.hs:35:19: error:\n    \u2022 Key not found: baz\n    \u2022 In the second argument of \u2018($)\u2019, namely \u2018show0 test3\u2019\n      In the expression: putStrLn $ show0 test3\n      In an equation for \u2018main\u2019: main = putStrLn $ show0 test3\n   |\n35 | main = putStrLn $ show0 test3\n   |                   ^^^^^^^^^^^\n</code></pre>\n"}], "owner": {"reputation": 1496, "user_id": 7350814, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/bd7e1bdad619c54ab51e05ff9cfaa199?s=128&d=identicon&r=PG&f=1", "display_name": "Jogger", "link": "https://stackoverflow.com/users/7350814/jogger"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 0, "accepted_answer_id": 45079062, "answer_count": 1, "score": 3, "last_activity_date": 1499944649, "creation_date": 1499941885, "question_id": 45078056, "link": "https://stackoverflow.com/questions/45078056/how-to-get-with-ghc-typelits-typeerror-a-type-error-at-compile-time-and-not-at-r", "title": "How to get with GHC.TypeLits.TypeError a type error at compile time and not at run-time?", "body": "<p>Till now, I assumed, that GHC executes a type level function (type-family) at compile time. Therefore an error message triggered by the TypeError type-family should be issued at compile-time. </p>\n\n<p>In the following example, I get the type error at run time.</p>\n\n<pre><code>{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE PolyKinds #-}\n{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE UndecidableInstances #-}\nimport GHC.TypeLits\n\ntype family If c t e where\n    If 'True  t e = t\n    If 'False t e = e\n\ntype family EqSymbol (a :: Symbol) (b :: Symbol) where\n    EqSymbol a a = 'True\n    EqSymbol a b = 'False\n\ntype family Lookup (x :: Symbol) (l :: [(Symbol,t)]) :: t where\n    Lookup k '[]             = TypeError (Text \"Key not found: \"  :&lt;&gt;: Text k)\n    Lookup k  ('(x,a) ': ls) = If (EqSymbol k x)  a  (Lookup k ls)\n\ntype TList =  '[ '(\"foo\", Int), '(\"bar\", String)]\n\ntest1 :: Lookup \"foo\" TList\ntest1 = undefined\n\ntest2 :: Lookup \"bar\" TList\ntest2 = undefined\n\ntest3 :: Lookup \"baz\" TList\ntest3 = undefined\n</code></pre>\n\n<p>For the function <code>test3</code> the evaluation of the type-level function <code>Lookup</code> should give a type error, because <em>baz</em> is not a key in <code>TList</code>.</p>\n\n<p>GHCi loads the code without a type-error:</p>\n\n<pre><code>GHCi, version 8.0.2: http://www.haskell.org/ghc/  :? for help\nPrelude&gt; :l SO.hs\n[1 of 1] Compiling Main             ( SO.hs, interpreted )\nOk, modules loaded: Main.\n</code></pre>\n\n<p>Querying the types of the functions <code>test1</code>, <code>test2</code> gives the exepected results:</p>\n\n<pre><code>*Main&gt; :t test1\ntest1 :: Int\n*Main&gt; :t test2\ntest2 :: [Char]\n</code></pre>\n\n<p>Querying the type of the function test3 gives a type error and the TypeError function is only executed when I try to <strong>evaluate</strong> the <code>test3</code> function:</p>\n\n<pre><code>*Main&gt; :t test3\ntest3 :: (TypeError ...)\n*Main&gt; test3\n\n&lt;interactive&gt;:5:1: error:\n    \u2022 Key not found: baz\n    \u2022 When checking the inferred type\n        it :: (TypeError ...)\n</code></pre>\n\n<p>What do I have to do, to get a compile-time error?</p>\n"}, {"tags": ["mongodb", "haskell"], "comments": [{"owner": {"reputation": 45534, "user_id": 106104, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/c88b9310b92a937108ec4336c2832f92?s=128&d=identicon&r=PG", "display_name": "user253751", "link": "https://stackoverflow.com/users/106104/user253751"}, "edited": false, "score": 0, "creation_date": 1499931895, "post_id": 45074397, "comment_id": 77121316, "body": "How would you find it out if it said <code>[lklkjaaaaaa &quot;author&quot; &quot;Mike&quot;]</code>? Probably by grepping for <code>lklkjaaaaaa</code>. So grep for <code>(=:)</code> or <code>=:</code>"}, {"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "edited": false, "score": 7, "creation_date": 1499932101, "post_id": 45074397, "comment_id": 77121443, "body": "You\u2019re right\u2014you can\u2019t google that, but <a href=\"http://hoogle.haskell.org/?hoogle=%3D%3A\" rel=\"nofollow noreferrer\">you sure can Hoogle it</a>. It looks like your <code>=:</code> is <a href=\"https://hackage.haskell.org/package/bson-0.3.2.3/docs/Data-Bson.html#v:-61-:\" rel=\"nofollow noreferrer\">the one from the bson package</a>."}, {"owner": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "edited": false, "score": 2, "creation_date": 1499932130, "post_id": 45074397, "comment_id": 77121460, "body": "you can always try hoogle either <a href=\"https://www.haskell.org/hoogle/\" rel=\"nofollow noreferrer\">on haskell.org</a> or <a href=\"https://www.stackage.org/\" rel=\"nofollow noreferrer\">on stackage</a> - the first one searches in all of hackage and runs hoogle 4 (if i recall correctly) the latter searches the restricted package repository stackage but runs hoogle 5"}, {"owner": {"reputation": 27685, "user_id": 610979, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/ku5ga.png?s=128&g=1", "display_name": "Frank Schmitt", "link": "https://stackoverflow.com/users/610979/frank-schmitt"}, "reply_to_user": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "edited": false, "score": 5, "creation_date": 1499932407, "post_id": 45074397, "comment_id": 77121646, "body": "@epsilonhalbe From a newbie perspective, it&#39;s incredibly confusing that <a href=\"http://www.haskell.org/hoogle\" rel=\"nofollow noreferrer\">haskell.org/hoogle</a> seems to be completely different from <a href=\"http://hoogle.haskell.org\" rel=\"nofollow noreferrer\">hoogle.haskell.org</a> (the former doesn&#39;t find <code>=:</code>, whereas the latter does)"}, {"owner": {"reputation": 974, "user_id": 3829232, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d3d2de116df80bc024b799e84dcdbc97?s=128&d=identicon&r=PG", "display_name": "soupi", "link": "https://stackoverflow.com/users/3829232/soupi"}, "edited": false, "score": 1, "creation_date": 1499932919, "post_id": 45074397, "comment_id": 77121988, "body": "To make this complete, you can use hoogle, the stackage hoogle, <a href=\"http://hayoo.fh-wedel.de/\" rel=\"nofollow noreferrer\">hayoo</a>, or <a href=\"https://gist.github.com/chrisdone/78c1c1c052a853697cf3b902de086172\" rel=\"nofollow noreferrer\">roll your own</a>."}, {"owner": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "reply_to_user": {"reputation": 27685, "user_id": 610979, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/ku5ga.png?s=128&g=1", "display_name": "Frank Schmitt", "link": "https://stackoverflow.com/users/610979/frank-schmitt"}, "edited": false, "score": 0, "creation_date": 1499936989, "post_id": 45074397, "comment_id": 77124821, "body": "@FrankSchmitt yes it is confusing, sadly but there are different repositories (hackage/stackage) and not all of them are running the same version of hoogle i tend to use both as well as a local installation of hoogle (when I don&#39;t have internet connection)"}, {"owner": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "edited": false, "score": 1, "creation_date": 1499939247, "post_id": 45074397, "comment_id": 77126482, "body": "but not nearly as confusing as finding the &quot;right&quot; packaging/testing/whatnot-utiltiy in javascript-land"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 27685, "user_id": 610979, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/ku5ga.png?s=128&g=1", "display_name": "Frank Schmitt", "link": "https://stackoverflow.com/users/610979/frank-schmitt"}, "edited": false, "score": 0, "creation_date": 1499946788, "post_id": 45074397, "comment_id": 77131884, "body": "@FrankSchmitt looks like <code>hoogle.haskell.org</code> isn&#39;t stable yet. Once it is, I reckon <code>haskell.org&#47;hoogle</code> will just redirect to it."}], "owner": {"reputation": 7435, "user_id": 4617597, "user_type": "registered", "accept_rate": 60, "profile_image": "https://i.stack.imgur.com/b1Sdw.png?s=128&g=1", "display_name": "Marcelo Lazaroni", "link": "https://stackoverflow.com/users/4617597/marcelo-lazaroni"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 115, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1499931783, "creation_date": 1499931783, "question_id": 45074397, "link": "https://stackoverflow.com/questions/45074397/how-do-i-find-out-the-meaning-of-a-symbol-in-haskell", "title": "How do I find out the meaning of a symbol in Haskell?", "body": "<p>I'm using the <code>mongoDB</code> extension and at some point I saw this</p>\n\n<pre><code>[\"author\" =: \"Mike\"] \n</code></pre>\n\n<p>I want to know what <code>=:</code> does. How do I find it out? There is no way to google that.</p>\n\n<p>I tried importing the module into <code>ghci</code> and doing <code>:t (=:)</code>, but the <code>=:</code> function is not exposed by mongoDB, it is just used by it, so I'm still getting <code>variable not in scope</code>.</p>\n\n<p>How do I find out the meaning and signature of functions without helpful names like this one?</p>\n"}, {"tags": ["haskell", "type-families"], "answers": [{"comments": [{"owner": {"reputation": 1199, "user_id": 1744344, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/1e64cde3a7667b8b2ee69af9a7aea5aa?s=128&d=identicon&r=PG", "display_name": "helq", "link": "https://stackoverflow.com/users/1744344/helq"}, "edited": false, "score": 0, "creation_date": 1499983423, "post_id": 45074073, "comment_id": 77155857, "body": "Ok, the type of <code>somefunction &quot;&quot;</code> may be ambiguous and we can tell GHC which type exaclty we mean with an annotation for <code>&#39;&quot;&quot;</code>, but isn&#39;t it possible to annotate <code>somefunction &quot;&quot;</code> telling it which type we mean?, something like <code>(t ~ Text, AType t ~ Int, IsString t, AClass t) =&gt; AType t</code>. (it&#39;s interesting that not even <code>(IsString t, AClass t) =&gt; AType t</code> works, and the typechecker tells me that <code>AType t</code> is different of <code>AType t</code>, ???)"}, {"owner": {"reputation": 1199, "user_id": 1744344, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/1e64cde3a7667b8b2ee69af9a7aea5aa?s=128&d=identicon&r=PG", "display_name": "helq", "link": "https://stackoverflow.com/users/1744344/helq"}, "edited": false, "score": 0, "creation_date": 1499983544, "post_id": 45074073, "comment_id": 77155905, "body": "Also, where can I find the meaning of injective in this context? I suppose it has to come from type theory somewhere, but I don&#39;t know where to search. Could you recomend me some books or papers to look for? thanks"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 1199, "user_id": 1744344, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/1e64cde3a7667b8b2ee69af9a7aea5aa?s=128&d=identicon&r=PG", "display_name": "helq", "link": "https://stackoverflow.com/users/1744344/helq"}, "edited": false, "score": 1, "creation_date": 1499984373, "post_id": 45074073, "comment_id": 77156190, "body": "@helq No, you can&#39;t simply annotate the full expression. It&#39;s like <code>show (read &quot;1&quot;)</code> where you compose <code>String -&gt; a</code> and <code>a -&gt; String</code>, and you need to know what is <code>a</code>. Injective is the same as math: when <code>F x = F y</code> implies <code>x=y</code>, then <code>F</code> is injective. Many functions (including type families) are not, since they can map different arguments to the same result."}, {"owner": {"reputation": 1199, "user_id": 1744344, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/1e64cde3a7667b8b2ee69af9a7aea5aa?s=128&d=identicon&r=PG", "display_name": "helq", "link": "https://stackoverflow.com/users/1744344/helq"}, "edited": false, "score": 0, "creation_date": 1499988382, "post_id": 45074073, "comment_id": 77157420, "body": "thanks, I understand now. It&#39;s a little confusing because when I ask GHC for the type of <code>somefunction &quot;&quot;</code> I get <code>(IsString t, AClass t) =&gt; AType t</code> but then GHC fails to typecheck with wathever type I tell it, and I wasn&#39;t expecting <code>AType</code> to be a function, well gotta learn more. One last question, is it possible to tell GHC that a type function is injective?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 1199, "user_id": 1744344, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/1e64cde3a7667b8b2ee69af9a7aea5aa?s=128&d=identicon&r=PG", "display_name": "helq", "link": "https://stackoverflow.com/users/1744344/helq"}, "edited": false, "score": 0, "creation_date": 1499988983, "post_id": 45074073, "comment_id": 77157581, "body": "@helq Yes, GHC allows to mark a function as injective, but it <i>still</i> won&#39;t help here since GHC will not infer the right constraint -- even if it arguably should. IMO, the current implementation of injective type families is in a sad state: injectivity is checked, some previously ambiguous types become allowed, but the injectivity is not exploited beyond that :-("}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 1, "last_activity_date": 1499930832, "creation_date": 1499930832, "answer_id": 45074073, "question_id": 45069784, "link": "https://stackoverflow.com/questions/45069784/cannot-match-type-of-expression-using-typefamilies/45074073#45074073", "title": "Cannot match type of expression using TypeFamilies", "body": "<p>Suppose we added</p>\n\n<pre><code>instance AClass String where\n  type AType String = Int\n  somefunction = const 10\n</code></pre>\n\n<p>then what would <code>somefunction \"\" :: Int</code> evaluate to?</p>\n\n<p>One could say that <code>\"\"</code> is a <code>String</code>, hence <code>const 10 \"\" =&gt; 10</code>.\nBut it could also be that <code>\"\"</code> is a <code>Text</code>, hence <code>const 4 \"\" =&gt; 4</code>.</p>\n\n<p>So, our code is ambiguous, and GHC rightly rejects it. The ambiguity rises from <code>AType String ~ AType Text ~ Int</code>: because of this, it is impossible to solve a type equation like <code>AType t ~ Int</code> since it has multiple solutions.</p>\n\n<p>GHC is complaining about this injectivity issue in its error:</p>\n\n<pre><code>NB: \u2018AType\u2019 is a type function, and may not be injective\n</code></pre>\n\n<p>One can fix this by providing the intended <code>t</code> to GHC. The easiest way is using an annotation</p>\n\n<pre><code>somefunction (\"\"::String)\nsomefunction (\"\"::Text)\n</code></pre>\n\n<p>A more complex way would be to allow ambiguous types, as suggested by GHC, and then turning on <code>TypeApplications</code> as well. We can now write</p>\n\n<pre><code>somefunction @ String \"\"\nsomefunction @ Text \"\"\n</code></pre>\n\n<p>(but it seems more complex).</p>\n"}], "owner": {"reputation": 1199, "user_id": 1744344, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/1e64cde3a7667b8b2ee69af9a7aea5aa?s=128&d=identicon&r=PG", "display_name": "helq", "link": "https://stackoverflow.com/users/1744344/helq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 61, "favorite_count": 0, "accepted_answer_id": 45074073, "answer_count": 1, "score": 0, "last_activity_date": 1499930832, "creation_date": 1499907543, "question_id": 45069784, "link": "https://stackoverflow.com/questions/45069784/cannot-match-type-of-expression-using-typefamilies", "title": "Cannot match type of expression using TypeFamilies", "body": "<p>I'm trying to understand how does the extension <code>TypeFamilies</code> work, but I got bummered when the type system wasn't able to infer the correct type, for an example I considered simple:</p>\n\n<pre><code>{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE FlexibleContexts #-}\n{-# LANGUAGE OverloadedStrings #-}\n\nimport Data.Text\nimport Data.String\n\nclass AClass t where\n  type family AType t :: *\n  somefunction :: t -&gt; AType t\n\ninstance AClass Text where\n  type AType Text = Int\n  somefunction = const 4\n\ninstance AClass Int where\n  type AType Int = Integer\n  somefunction = const 3\n</code></pre>\n\n<p>So, I'm asking to associate each instance of <code>AClass</code> with an instance of <code>AType</code> (or that's what I think I'm asking Haskell to enforce).</p>\n\n<p>Everything seems alright when loading the code into GHCi:</p>\n\n<pre><code>$ ghci -X{OverloadedStrings,GADTs} test.hs\nGHCi, version 8.0.2: http://www.haskell.org/ghc/  :? for help\n[1 of 1] Compiling Main             ( test.hs, interpreted )\nOk, modules loaded: Main.\n*Main&gt;\n</code></pre>\n\n<p>The type of <code>somefunction</code> is what I declared in the code and some calls to the function get me what I expected:</p>\n\n<pre><code>*Main&gt; :t somefunction\nsomefunction :: AClass t =&gt; t -&gt; AType t\n*Main&gt; :t somefunction :: Text -&gt; Int\nsomefunction :: Text -&gt; Int :: Text -&gt; Int\n*Main&gt; (somefunction :: Text -&gt; Int) \"\"\n4\n*Main&gt; :t somefunction (\"\"::Text)\nsomefunction (\"\"::Text) :: Int\n*Main&gt; somefunction (\"\"::Text)\n4\n</code></pre>\n\n<p>But when I try to typecheck the type definition that appears for <code>somefunction \"\"</code> (<code>(IsString t, AClass t) =&gt; AType t</code>) I get an ugly error from the type checker, even when I'm just copying the type I got from the typechecker!</p>\n\n<pre><code>*Main&gt; :t somefunction \"\"\nsomefunction \"\" :: (IsString t, AClass t) =&gt; AType t\n*Main&gt; :t somefunction \"\" :: (IsString t, AClass t) =&gt; AType t\n\n&lt;interactive&gt;:1:20: error:\n    \u2022 Couldn't match expected type \u2018AType t\u2019\n                  with actual type \u2018AType t0\u2019\n      NB: \u2018AType\u2019 is a type function, and may not be injective\n      The type variable \u2018t0\u2019 is ambiguous\n    \u2022 In the ambiguity check for an expression type signature\n      To defer the ambiguity check to use sites, enable AllowAmbiguousTypes\n      In an expression type signature: (IsString t, AClass t) =&gt; AType t\n      In the expression:\n          somefunction \"\" :: (IsString t, AClass t) =&gt; AType t\n</code></pre>\n\n<p>And no matter what I do, I can't (or don't know) how to force a type that the typechecker could verify and be happy about:</p>\n\n<pre><code>*Main&gt; :t somefunction \"\" :: (t ~ Text, IsString t, AClass t) =&gt; AType t\n\n&lt;interactive&gt;:1:1: error:\n    \u2022 Couldn't match type \u2018AType t0\u2019 with \u2018Int\u2019\n      Expected type: AType t\n        Actual type: AType t0\n      The type variable \u2018t0\u2019 is ambiguous\n    \u2022 In the expression:\n          somefunction \"\" :: (t ~ Text, IsString t, AClass t) =&gt; AType t\n*Main&gt; :t somefunction \"\" :: (t ~ Text, IsString t, AClass t, AType t ~ Int) =&gt; AType t\n\n&lt;interactive&gt;:1:1: error:\n    \u2022 Couldn't match type \u2018AType t0\u2019 with \u2018Int\u2019\n      Expected type: AType t\n        Actual type: AType t0\n      The type variable \u2018t0\u2019 is ambiguous\n    \u2022 In the expression:\n          somefunction \"\" ::\n            (t ~ Text, IsString t, AClass t, AType t ~ Int) =&gt; AType t\n*Main&gt; somefunction \"\"\n\n&lt;interactive&gt;:10:1: error:\n    \u2022 Couldn't match expected type \u2018AType t\u2019\n                  with actual type \u2018AType t0\u2019\n      NB: \u2018AType\u2019 is a type function, and may not be injective\n      The type variable \u2018t0\u2019 is ambiguous\n    \u2022 In the ambiguity check for the inferred type for \u2018it\u2019\n      To defer the ambiguity check to use sites, enable AllowAmbiguousTypes\n      When checking the inferred type\n        it :: forall t. (IsString t, AClass t) =&gt; AType t\n</code></pre>\n\n<p>So, my questions are, why is the typechecker failing? (has it something to do with something related to completeness by part of the haskell's typechecker?) and how could I fix it, how could I force a type like <code>:: Int</code> or <code>:: (t ~ Int, AClass t, AType t ~ Integer) =&gt; AType t</code> to typecheck?</p>\n"}, {"tags": ["haskell", "yesod"], "answers": [{"tags": [], "owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "is_accepted": true, "score": 3, "last_activity_date": 1499914886, "creation_date": 1499914886, "answer_id": 45070721, "question_id": 45069605, "link": "https://stackoverflow.com/questions/45069605/yesod-database-persistent-record-access/45070721#45070721", "title": "Yesod database persistent record access", "body": "<p>This will work:</p>\n\n<pre><code>let vVal = userSettingSource $ entityVal v\n</code></pre>\n"}], "owner": {"reputation": 234, "user_id": 6475907, "user_type": "registered", "accept_rate": 100, "profile_image": "https://lh3.googleusercontent.com/-xQd4dCvGOmg/AAAAAAAAAAI/AAAAAAAAABo/WuJS4WB_RNg/photo.jpg?sz=128", "display_name": "WellTyped", "link": "https://stackoverflow.com/users/6475907/welltyped"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 39, "favorite_count": 0, "accepted_answer_id": 45070721, "answer_count": 1, "score": 2, "last_activity_date": 1499914886, "creation_date": 1499905721, "question_id": 45069605, "link": "https://stackoverflow.com/questions/45069605/yesod-database-persistent-record-access", "title": "Yesod database persistent record access", "body": "<p>Below is in the <code>models</code> file</p>\n\n<pre><code>UserSetting\n    source ArticleSourceId\n    minimumShouldMatch Int \n    articleLength Int\n    userId UserId\n    deriving Show\n</code></pre>\n\n<p>In my handler, I found that I couldn't use for example <code>source</code> on the Entity Value <code>vVal</code>.</p>\n\n<pre><code>   (v:_) &lt;- selectList [UserSettingUserId ==. asUd] [LimitTo 1]\n   let vVal = source $ entityVal v\n   let vId = entityKey v\n</code></pre>\n\n<p>Error message is <code>Variable not in scope: source :: UserSetting -&gt; Integer</code></p>\n"}]