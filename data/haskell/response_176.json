[{"tags": ["haskell"], "comments": [{"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 1, "creation_date": 1527120316, "post_id": 50499042, "comment_id": 88010981, "body": "The <code>State</code> monad in conjunction with <code>when</code> sounds like it should work."}], "answers": [{"comments": [{"owner": {"reputation": 1199, "user_id": 1744344, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/1e64cde3a7667b8b2ee69af9a7aea5aa?s=128&d=identicon&r=PG", "display_name": "helq", "link": "https://stackoverflow.com/users/1744344/helq"}, "edited": false, "score": 0, "creation_date": 1527134582, "post_id": 50500459, "comment_id": 88014077, "body": "Thanks. I actually wrote the piece of code above as an example of a longer function. I didn&#39;t want to copy the function here because it&#39;s kinda long, but what gives, I&#39;m gonna update the question."}], "tags": [], "owner": {"reputation": 8556, "user_id": 4892417, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NaBTj.jpg?s=128&g=1", "display_name": "oisdk", "link": "https://stackoverflow.com/users/4892417/oisdk"}, "is_accepted": false, "score": 2, "last_activity_date": 1527132348, "creation_date": 1527132348, "answer_id": 50500459, "question_id": 50499042, "link": "https://stackoverflow.com/questions/50499042/how-to-chain-a-sequence-of-optional-operations-to-be-performed-onto-a-variable/50500459#50500459", "title": "How to chain a sequence of optional operations to be performed onto a &quot;variable&quot;?", "body": "<p>Yes, you can use monads to write cleaner-looking code which modifies state:</p>\n\n<pre><code>sequentialOps :: Int -&gt; (Int, Seq.Seq (Either Bool Int))\nsequentialOps init = run (traverse_ manySteps [0..init])\n  where\n    manySteps time = when (even time) $ do\n      val &lt;- get\n      let someNum = 2*val-9\n      when (someNum &gt; 10 || someNum &lt; 12) $ do\n        put (-someNum `div` 3)\n        log (Left True)\n      when (someNum `mod` 3 == 0) $ do\n        gets Right &gt;&gt;= log\n        put (-(someNum `mod` 970))\n      num2 &lt;- get\n      when (someNum == 0) $ do\n        log (Left False)\n        put time\n      modify pred\n      log (Right (num2-1))\n    log = tell . Seq.singleton\n    run = runWriter . flip execStateT init\n</code></pre>\n\n<p>However, in general, a lot of algorithms which might <em>seem</em> \"inherently procedural\" aren't in practice. In this case, for instance: you're repeatedly appending to a sequence. Could you perhaps use an unfold instead?</p>\n\n<p>There's also several superfluous conditions in the code, <code>someNum &gt; 10 || someNum &lt; 12</code> is always true, for instance. Also, I don't think <code>log (Left False)</code> is ever called. Using those points, you can simplify a little:</p>\n\n<pre><code>sequentialOps :: Int -&gt; (Int, Seq.Seq (Maybe Int))\nsequentialOps init = run (replicateM_ (1 + init `div` 2) manySteps)\n  where\n    manySteps = do\n      val &lt;- get\n      let someNum = 2*val-9\n      put (-someNum `div` 3)\n      log Nothing\n      when (someNum `mod` 3 == 0) $ do\n        gets Just &gt;&gt;= log\n        put (-(someNum `mod` 970))\n      modify pred\n      gets Just &gt;&gt;= log\n    log = tell . Seq.singleton\n    run = runWriter . flip execStateT init\n</code></pre>\n\n<p>What is it exactly you're trying to do with this code? If I had an idea of that I could easier show you how to translate it into a functional style.</p>\n"}], "owner": {"reputation": 1199, "user_id": 1744344, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/1e64cde3a7667b8b2ee69af9a7aea5aa?s=128&d=identicon&r=PG", "display_name": "helq", "link": "https://stackoverflow.com/users/1744344/helq"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 92, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1527135661, "creation_date": 1527119755, "last_edit_date": 1527135661, "question_id": 50499042, "link": "https://stackoverflow.com/questions/50499042/how-to-chain-a-sequence-of-optional-operations-to-be-performed-onto-a-variable", "title": "How to chain a sequence of optional operations to be performed onto a &quot;variable&quot;?", "body": "<p>Is there some pattern to reduce repeated and consistent use of <code>if</code>s?</p>\n\n<p>Let me explain. Some algorithms are inherently procedural and rely on modifying the state of a variable/object/array through time. Doing that in Haskell isn't that difficult, we just declare a different variable for each step. The problem is that sometimes we only want to change the state of a variable when that variable meets a condition, which often requires a lot of <code>if</code>s or <code>case</code>s.</p>\n\n<p>So, for example, consider the following rather ugly piece of code:</p>\n\n<pre><code>import           Data.List                              (foldl')\nimport qualified Data.Sequence as Seq\nimport           Data.Sequence                          ((|&gt;))\n\nsequencialOps :: Int -&gt; (Int, Seq.Seq (Either Bool Int))\nsequencialOps init = foldl' manySteps (init, Seq.empty) [0..init]\n  where\n    manySteps (val, valseq) time = if time `mod` 2 == 0\n                                     then intermediateSteps (2*val-9)\n                                     else (val, valseq)\n      where\n        intermediateSteps someNum = (newnum3-1, numseq3 |&gt; Right (newnum2-1))\n          where\n            (newnum1, numseq1) = if someNum &gt; 10 || someNum &lt; 12\n                                    then (-someNum `div` 3, valseq |&gt; Left True)\n                                    else (someNum, valseq)\n            (newnum2, numseq2) = if someNum `mod` 3 == 0\n                                    then (-(someNum `mod` 970), numseq1 |&gt; Right newnum1)\n                                    else (newnum1, numseq1)\n            (newnum3, numseq3) = if someNum == 0\n                                    then (time, numseq2 |&gt; Left False)\n                                    else (newnum2, numseq2)\n\nmain = print $ sequencialOps 6\n</code></pre>\n\n<p>I'm running the same procedure <code>manySteps</code> many times. <code>manySteps</code> modifies the value I pass it (<code>val</code>) only sometimes (under specific conditions).</p>\n\n<p>So, it's there some custom monad or clever way to write the code above so it doesn't overuse <code>if</code>s (or <code>case</code>s)?</p>\n\n<p>I was thinking that maybe the solution is to use the <code>State</code> monad, but I'm not sure if this is the best solution.</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>The dummy program above is just an example of a little longer code. What I'm actually trying to write is a small implementation of the Gauss-Jordan algorithm.</p>\n\n<p>Here goes my implementation (using safe, hmatrix and containers):</p>\n\n<pre><code>import           Data.List                              (foldl')\nimport qualified Data.Sequence as Seq\nimport           Data.Sequence                          ((|&gt;))\nimport           Data.Maybe                             (fromJust)\nimport           Data.Foldable                          (toList)\nimport           Safe.Exact as SP\n\nimport           Data.Semigroup                         ((&lt;&gt;))\n\nimport           Numeric.LinearAlgebra.Data hiding (toList, (|&gt;))\n\nmain = do\n  let matrix = (2 &gt;&lt; 3) [1,2,3,4,5,6] :: Matrix Double\n  print matrix\n  print $ gaussJordan matrix\n  pure ()\n\ndata GJOperations =\n    MutiplyRowBy Int Double       -- ^ Row and Value to multiply\n  | ExchangeRows Int Int          -- ^ Row 1 and Row 2\n  | AddMulRowToRow Double Int Int -- ^ Value to multipy to Row 1 to add to Row 2\n  deriving (Show)\n\nexchangeRows :: Int -&gt; Int -&gt; Matrix Double -&gt; Maybe (Matrix Double)\nexchangeRows i j mat = fromRows &lt;$&gt; newRows\n  where asRows = toRows mat\n        (i',j') = if i&lt;j then (i,j) else (j,i)\n        newRows = do\n          (rws1, rest1) &lt;- SP.splitAtExactMay i' asRows\n          (rowI, rest2) &lt;- SP.splitAtExactMay 1 rest1\n          (rws2, rest3) &lt;- SP.splitAtExactMay (j'-i'-1) rest2\n          (rowJ, rws3)  &lt;- SP.splitAtExactMay 1 rest3\n          pure $ rws1 &lt;&gt; rowJ &lt;&gt; rws2 &lt;&gt; rowI &lt;&gt; rws3\n\nmultiplyRowby :: Double -&gt; Int -&gt; Matrix Double -&gt; Maybe (Matrix Double)\nmultiplyRowby val i mat = fromRows &lt;$&gt; newRows\n  where asRows = toRows mat\n        cols = size (head asRows)\n        newRows = do\n          (rws1, rest1)  &lt;- SP.splitAtExactMay i asRows\n          ([rowI], rws2) &lt;- SP.splitAtExactMay 1 rest1\n          pure $ rws1 &lt;&gt; [konst val cols * rowI] &lt;&gt; rws2\n\naddMulRowToRow :: Double -&gt; Int -&gt; Int -&gt; Matrix Double -&gt; Maybe (Matrix Double)\naddMulRowToRow val i j mat = fromRows &lt;$&gt; newRows\n  where asRows = toRows mat\n        (i',j') = if i&lt;j then (i,j) else (j,i)\n        cols = size (head asRows)\n        newRows = do\n          (rws1, rest1)   &lt;- SP.splitAtExactMay i' asRows\n          ([rowI], rest2) &lt;- SP.splitAtExactMay 1 rest1\n          (rws2, rest3)   &lt;- SP.splitAtExactMay (j'-i'-1) rest2\n          ([rowJ], rws3)  &lt;- SP.splitAtExactMay 1 rest3\n          pure $ if i &lt; j\n                    then rws1 &lt;&gt; [rowI] &lt;&gt; rws2 &lt;&gt; [rowJ + konst val cols * rowI] &lt;&gt; rws3\n                    else rws1 &lt;&gt; [rowI + konst val cols * rowJ] &lt;&gt; rws2 &lt;&gt; [rowJ] &lt;&gt; rws3\n\ngaussJordan :: Matrix Double -&gt; (Matrix Double, [GJOperations])\ngaussJordan mat = (\\(a,_,o)-&gt;(a, toList o)) $ foldl' simplifyCol (mat, 0, Seq.empty) [0..cols-1]\n  where\n    (rows, cols) = size mat\n\n    simplifyCol nochange@(mat', row, gjops) col = case newrow of\n                                           Just nrow -&gt; calculateSteps nrow\n                                           Nothing   -&gt; nochange\n      where\n        newrow = findRow row\n        findRow i\n          | i == rows = Nothing\n          | colcontent ! i /= 0 = Just i\n          | otherwise = findRow (i+1)\n        colcontent = toColumns mat' !! col\n\n        calculateSteps nrow = (newmat2, row+1, newgjops2)\n          where\n            valCurrentRow = colcontent ! nrow\n\n            -- Assuming I get always a Just, I think I always get it but it is nonetheless awful\n            createUnwrap f = fromJust . f\n\n            nextvalues = if valCurrentRow == 1\n                            then (mat', gjops)\n                            else (createUnwrap (multiplyRowby (1/valCurrentRow) nrow) mat', gjops |&gt; MutiplyRowBy nrow (1/valCurrentRow))\n\n            (newmat, newgjops) = foldl' calculateRowStep nextvalues [r | r&lt;-[0..rows-1], r/=nrow]\n\n            (newmat2, newgjops2) = if row == nrow\n                                      then (newmat, newgjops)\n                                      else (createUnwrap (exchangeRows row nrow) newmat, newgjops |&gt; ExchangeRows row nrow)\n\n            calculateRowStep orig@(mat'', gjops') r =\n              let valOtherRow = colcontent ! r\n                  change = (- valOtherRow)\n                  newmat' = createUnwrap (addMulRowToRow change nrow r) mat''\n               in if valOtherRow == 0.0\n                     then orig\n                     else (newmat', gjops' |&gt; AddMulRowToRow change nrow r)\n</code></pre>\n\n<p>The code works, but it's kinda hard to understand, way too many levels of scoping and many <code>if</code>s and <code>case</code>s. T_T</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 3372, "user_id": 2325702, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/11bd86061e8fcade1299dbfc80b16493?s=128&d=identicon&r=PG", "display_name": "dmg", "link": "https://stackoverflow.com/users/2325702/dmg"}, "edited": false, "score": 0, "creation_date": 1527120506, "post_id": 50498973, "comment_id": 88011024, "body": "Thank you. i also appreciate the depth of the answer, including how to test it."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 3, "last_activity_date": 1527119154, "creation_date": 1527119154, "answer_id": 50498973, "question_id": 50498900, "link": "https://stackoverflow.com/questions/50498900/lazyness-does-words-read-within-interact-all-the-input-or-only-what-is-neede/50498973#50498973", "title": "lazyness, does words read (within interact) all the input, or only what is needed?", "body": "<p>Just the first word:</p>\n\n<pre><code>% yes | ghc -e 'interact (head . words)'\ny\n%\n</code></pre>\n\n<p>But beware: this relies a feature called \"lazy IO\" that is only kind of related to the technique of laziness in pure code. Pure functions are lazy by default and you must work hard to make them strict; IO is \"strict IO\" by default and you must work hard to make it lazy IO. A handful of library functions (notably <code>interact</code>, <code>(h)getContents</code>, and <code>readFile</code>) have gone to this effort.</p>\n\n<p><a href=\"https://stackoverflow.com/q/6668716/791604\">It also has some problems with composability.</a></p>\n"}, {"tags": [], "owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "is_accepted": false, "score": 3, "last_activity_date": 1527576117, "last_edit_date": 1527576117, "creation_date": 1527575711, "answer_id": 50577768, "question_id": 50498900, "link": "https://stackoverflow.com/questions/50498900/lazyness-does-words-read-within-interact-all-the-input-or-only-what-is-neede/50577768#50577768", "title": "lazyness, does words read (within interact) all the input, or only what is needed?", "body": "<p>Conceptually, it reads only what it needs. But it probably uses a buffer to do so:</p>\n\n<pre><code>$ yes | strace -feread,write ghc -e 'interact (head . words)'\n...\n[pid 61274] read(0, \"y\\ny\\ny\\ny\\ny\\ny\\ny\\ny\\ny\\ny\\ny\\ny\\ny\\ny\\ny\\ny\\n\"..., 8096) = 8096\n[pid 61272] write(1, \"y\", 1y)            = 1\n[pid 61272] --- SIGVTALRM {si_signo=SIGVTALRM, si_code=SI_TIMER, si_timerid=0, si_overrun=0, si_value={int=0, ptr=0}} ---\n[pid 61272] write(5, \"\\376\", 1)         = 1\n[pid 61273] read(4, \"\\376\", 1)          = 1\n[pid 61273] +++ exited with 0 +++\n[pid 61274] +++ exited with 0 +++\n[pid 61276] +++ exited with 0 +++\n+++ exited with 0 +++\n</code></pre>\n\n<p>This shows (on a Linux system) that the program split itself into multiple threads, one of them read 8KiB of data from stdin, then another output the first word. The main reason is that repeatedly reading small amounts is quite inefficient. Asynchronous sources like terminals and sockets may produce smaller amounts of data, though:</p>\n\n<pre><code>$ strace -f -e trace=read,write -e signal= ghc -e 'interact (head . words)'\n...\nhello program\nProcess 61594 attached\n[pid 61592] read(0, \"hello program\\n\", 8096) = 14\n[pid 61590] write(1, \"hello\", 5hello)        = 5\n</code></pre>\n\n<p>In this case, the terminal layer completed the read at the first newline, even though the buffer was still 8KiB large. As this was enough data for the first word to be identified, no further reads were needed. </p>\n"}], "owner": {"reputation": 3372, "user_id": 2325702, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/11bd86061e8fcade1299dbfc80b16493?s=128&d=identicon&r=PG", "display_name": "dmg", "link": "https://stackoverflow.com/users/2325702/dmg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 64, "favorite_count": 0, "accepted_answer_id": 50498973, "answer_count": 2, "score": 0, "last_activity_date": 1527576117, "creation_date": 1527118621, "last_edit_date": 1527121205, "question_id": 50498900, "link": "https://stackoverflow.com/questions/50498900/lazyness-does-words-read-within-interact-all-the-input-or-only-what-is-neede", "title": "lazyness, does words read (within interact) all the input, or only what is needed?", "body": "<p>I am starting to learn Haskell, and I am trying to understand\nhow much work do the functions do (specially with respect to \nthe laziness concept). Please see the following program:</p>\n\n<pre><code>main::IO()\nmain = interact ( head . words)\n</code></pre>\n\n<p>Will this program read all the input or only the first word in input?</p>\n"}, {"tags": ["haskell", "haskell-lens", "template-haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1527106334, "post_id": 50495768, "comment_id": 88006176, "body": "Is there a reason why you want to do this with template Haskell instead of defining it yourself. You here attach a rather specific meaning to it, and as a result I do not think this is automated."}, {"owner": {"reputation": 1655, "user_id": 604955, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/dee8e0c8c4b36334c2379c62b3e12054?s=128&d=identicon&r=PG", "display_name": "Charles Durham", "link": "https://stackoverflow.com/users/604955/charles-durham"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1527108941, "post_id": 50495768, "comment_id": 88007498, "body": "@WillemVanOnsem Yeah, I have a bunch of different config types with lots of values that hold others with lots of values, so for a given carrier config, i&#39;d have to hand code every instance for every field of every datatype it holds."}, {"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 0, "creation_date": 1527109090, "post_id": 50495768, "comment_id": 88007570, "body": "Why not just compose the lens&#39; that are auto generated?"}, {"owner": {"reputation": 1655, "user_id": 604955, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/dee8e0c8c4b36334c2379c62b3e12054?s=128&d=identicon&r=PG", "display_name": "Charles Durham", "link": "https://stackoverflow.com/users/604955/charles-durham"}, "reply_to_user": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 0, "creation_date": 1527109730, "post_id": 50495768, "comment_id": 88007881, "body": "@jkeuhlen the whole reason I want this is so I can have the type system infer all the &quot;HasX&quot; fields it relies on in the signature. Which is much preferred to every function being <code>f :: Config -&gt; ...</code>, when I can have <code>f :: HasX c, HasY c =&gt; c -&gt; ...</code> So it&#39;s still obvious what values each function relies on. If I compose the lenses inside the function, it loses this generality of structure."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 2, "creation_date": 1527117266, "post_id": 50495768, "comment_id": 88010246, "body": "@CharlesDurham Then what&#39;s supposed to happen in a case like <code>data Dog = Dog { _x :: Int }</code>, <code>data Hamster = Hamster { _x :: Int }</code>, <code>data Petshop = Petshop { _dog :: Dog, _hamster :: Hamster} </code>? Is Petshop supposed to have a <code>HasX</code> instance? If so, what would the implementation be?"}, {"owner": {"reputation": 1655, "user_id": 604955, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/dee8e0c8c4b36334c2379c62b3e12054?s=128&d=identicon&r=PG", "display_name": "Charles Durham", "link": "https://stackoverflow.com/users/604955/charles-durham"}, "reply_to_user": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1527119211, "post_id": 50495768, "comment_id": 88010749, "body": "@Cubic Good example, but I&#39;d imagine there could be a separate name field in a function like deriveBy &#39;&#39;Petshop &#39;&#39;Hamster"}], "answers": [{"comments": [{"owner": {"reputation": 1655, "user_id": 604955, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/dee8e0c8c4b36334c2379c62b3e12054?s=128&d=identicon&r=PG", "display_name": "Charles Durham", "link": "https://stackoverflow.com/users/604955/charles-durham"}, "edited": false, "score": 0, "creation_date": 1527179889, "post_id": 50507032, "comment_id": 88040954, "body": "Yeah, that was Cubic&#39;s argument in the comment below my question, though I am surprised there isn&#39;t a TH function that says &quot;derive all of dog1&#39;s instances as if they belong to TwoDogs&quot;"}, {"owner": {"reputation": 1655, "user_id": 604955, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/dee8e0c8c4b36334c2379c62b3e12054?s=128&d=identicon&r=PG", "display_name": "Charles Durham", "link": "https://stackoverflow.com/users/604955/charles-durham"}, "edited": false, "score": 0, "creation_date": 1527180240, "post_id": 50507032, "comment_id": 88041140, "body": "(accidentally hit enter instead of shift-enter) makeFields is just so damn convenient, especially for the case when you have 43 constants in a config lol, might just put the whole tree structure linearly in one datatype."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "reply_to_user": {"reputation": 1655, "user_id": 604955, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/dee8e0c8c4b36334c2379c62b3e12054?s=128&d=identicon&r=PG", "display_name": "Charles Durham", "link": "https://stackoverflow.com/users/604955/charles-durham"}, "edited": false, "score": 0, "creation_date": 1527182199, "post_id": 50507032, "comment_id": 88042165, "body": "@CharlesDurham It&#39;s not really that surprising, considering it has obvious semantics and performance problems and is really not at all useful for most people."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "reply_to_user": {"reputation": 1655, "user_id": 604955, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/dee8e0c8c4b36334c2379c62b3e12054?s=128&d=identicon&r=PG", "display_name": "Charles Durham", "link": "https://stackoverflow.com/users/604955/charles-durham"}, "edited": false, "score": 0, "creation_date": 1527182348, "post_id": 50507032, "comment_id": 88042244, "body": "@CharlesDurham If you feel like it&#39;s a missing feature you can write your own TH helper :)"}, {"owner": {"reputation": 1655, "user_id": 604955, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/dee8e0c8c4b36334c2379c62b3e12054?s=128&d=identicon&r=PG", "display_name": "Charles Durham", "link": "https://stackoverflow.com/users/604955/charles-durham"}, "reply_to_user": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1527186591, "post_id": 50507032, "comment_id": 88044389, "body": "@Cubic I disagree that it would have performance issues, especially if you get exactly the amount of instances that you wish to have and would write anyway. Also, I would bet that something like this would be very useful to most people, especially with how many applications pass an environment around and lose the type level info of what each function is actually pulling from the environment (think ReaderMonad). You could also block accidental access to fields that shouldn&#39;t be read for the implementation of one function. env -&gt; x functions are not descriptive at all."}], "tags": [], "owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "is_accepted": false, "score": 1, "last_activity_date": 1527157789, "creation_date": 1527157789, "answer_id": 50507032, "question_id": 50495768, "link": "https://stackoverflow.com/questions/50495768/lens-package-th-deriving-instances-for-datatype-holding-derived-datatype/50507032#50507032", "title": "Lens package: TH Deriving instances for datatype holding derived datatype", "body": "<p>There are at least two good reasons <code>makeFields</code> doesn't generate <code>Has</code> instances for transitively included fields.</p>\n\n<ol>\n<li>In a big structure consisting of many datatypes, it would be slow (O(n^2)) to generate <code>Has</code> instances for every field which is included somewhere in the structure transitively.</li>\n<li><p>There is not always an obvious choice of which <code>x</code> to choose. Consider</p>\n\n<pre><code>data TwoDogs = { _dog1 :: Dog, _dog2 :: Dog }\n</code></pre>\n\n<p>Which <code>Dog</code>'s <code>_x</code> should <code>TwoDogs</code>'s <code>HasX</code> lens access? It's a <code>Lens</code>, not a <code>Traversal</code>, so you have to pick one. It's not reasonable to expect an automated tool to make that decision for you.</p></li>\n</ol>\n\n<p>Fortunately lenses are very easy to compose. If you want your type to have a <code>HasX</code> instance which identifies a particular <code>_x</code> somewhere nested in the structure (according to some domain-specific rule) you can just write one.</p>\n\n<pre><code>instance HasX Cat Int where x = dog.x\n</code></pre>\n"}], "owner": {"reputation": 1655, "user_id": 604955, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/dee8e0c8c4b36334c2379c62b3e12054?s=128&d=identicon&r=PG", "display_name": "Charles Durham", "link": "https://stackoverflow.com/users/604955/charles-durham"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 76, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1527157789, "creation_date": 1527102434, "question_id": 50495768, "link": "https://stackoverflow.com/questions/50495768/lens-package-th-deriving-instances-for-datatype-holding-derived-datatype", "title": "Lens package: TH Deriving instances for datatype holding derived datatype", "body": "<p>I have the following:\n</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>data Dog =\n  Dog\n  { _x :: Int\n  }\nmakeFieldsNoPrefix ''Dog\n\ndata Cat =\n  Cat\n  { _dog :: Dog\n  }\nmakeFieldsNoPrefix ''Cat\n</code></pre>\n\n<p>This gives me a <code>HasX</code> and a <code>HasDog</code> class along with instances <code>instance HasDog Cat Dog</code> and <code>instance HasX Dog Int</code></p>\n\n<p>But i'd also like to generate <code>instance HasX Cat Int</code>, is this TH functionality available somewhere?</p>\n"}, {"tags": ["haskell", "opengl"], "answers": [{"comments": [{"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1527101595, "post_id": 50495391, "comment_id": 88003825, "body": "Maybe. I have seen this function but so far I have not understood how one uses it."}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1527102155, "post_id": 50495391, "comment_id": 88004097, "body": "I&#39;ve found some examples but for <code>4x4</code> matrices. I will try."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1527104690, "post_id": 50495391, "comment_id": 88005390, "body": "Honest question: for somebody who is familiar with OpenGL, is the documentation in that module sufficient? e.g. would you know what <code>ortho</code> does and what order to put its arguments in without source diving? (Perhaps the connection to &quot;section 2.11 of the OpenGL 2.1 specs&quot; is so clear that the specs clarify what this does...??)"}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1527106786, "post_id": 50495391, "comment_id": 88006405, "body": "@DanielWagner I would have never understood OpenGL without tutos and examples. The documentation is rather meager."}], "tags": [], "owner": {"reputation": 149903, "user_id": 14637, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/1904e7096278a10f1dfb3fdc0ceb53cc?s=128&d=identicon&r=PG", "display_name": "Thomas", "link": "https://stackoverflow.com/users/14637/thomas"}, "is_accepted": false, "score": 0, "last_activity_date": 1527101057, "creation_date": 1527101057, "answer_id": 50495391, "question_id": 50495182, "link": "https://stackoverflow.com/questions/50495182/apply-a-transformation-with-haskell-opengl/50495391#50495391", "title": "Apply a transformation with Haskell OpenGL", "body": "<p>My Haskell is rusty and I've never used it with OpenGL before, but maybe you are looking for <a href=\"https://hackage.haskell.org/package/OpenGL-3.0.2.1/docs/Graphics-Rendering-OpenGL-GL-CoordTrans.html#v:multMatrix\" rel=\"nofollow noreferrer\"><code>multMatrix</code></a>?</p>\n"}, {"tags": [], "owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "is_accepted": true, "score": 1, "last_activity_date": 1527275493, "last_edit_date": 1527275493, "creation_date": 1527106696, "answer_id": 50496812, "question_id": 50495182, "link": "https://stackoverflow.com/questions/50495182/apply-a-transformation-with-haskell-opengl/50496812#50496812", "title": "Apply a transformation with Haskell OpenGL", "body": "<p>Yes, this is <code>multMatrix</code>. I've followed <a href=\"https://mail.haskell.org/pipermail/hopengl/2005-October/000655.html\" rel=\"nofollow noreferrer\">this example</a>. If your matrix is </p>\n\n<pre><code>a b c \nd e f \ng h i\n</code></pre>\n\n<p>then do something like</p>\n\n<pre><code>  ......\n  preservingMatrix $ do\n    myTransformation\n    materialDiffuse Front $= green\n    renderObject Solid $ Teapot 5\n  swapBuffers\n  where\n    myTransformation = do\n      m &lt;- (newMatrix RowMajor [ a, b, c, 0\n                               , d, e, f, 0\n                               , g, h, i, 0\n                               , 0, 0, 0, 1]) :: IO (GLmatrix GLfloat)\n      multMatrix m\n</code></pre>\n\n<p>If you want to add a translation, do</p>\n\n<pre><code>  m &lt;- (newMatrix RowMajor [ a, b, c, x\n                           , d, e, f, y\n                           , g, h, i, z\n                           , 0, 0, 0, 1]) :: IO (GLmatrix GLfloat)\n</code></pre>\n\n<p>where <code>(x,y,z)</code>is the translation vector.</p>\n\n<p><a href=\"https://i.stack.imgur.com/PokJY.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/PokJY.png\" alt=\"teapot\"></a></p>\n"}], "owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 114, "favorite_count": 0, "accepted_answer_id": 50496812, "answer_count": 2, "score": 2, "last_activity_date": 1527275493, "creation_date": 1527100294, "question_id": 50495182, "link": "https://stackoverflow.com/questions/50495182/apply-a-transformation-with-haskell-opengl", "title": "Apply a transformation with Haskell OpenGL", "body": "<p>With Haskell OpenGL, it is possible to apply a transformation to an object like this:</p>\n\n<pre><code>  preservingMatrix $ do\n    translate myvector\n    renderObject Solid $ Sphere' 0.2 50 50\n</code></pre>\n\n<p>The transformations <code>translate</code>, <code>rotate</code>, and <code>scale</code> are available. I would like to apply the transformation corresponding to an orthonormal <code>3x3</code> matrix <code>M</code> which is not a rotation. Is it possible and how ? </p>\n\n<p>Of course, as a desperate solution I could decompose <code>M</code> into translations and rotations (this is possible if I correctly remember my maths courses).</p>\n"}, {"tags": ["haskell", "typeclass"], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 5, "last_activity_date": 1527101325, "creation_date": 1527101325, "answer_id": 50495456, "question_id": 50494361, "link": "https://stackoverflow.com/questions/50494361/using-different-minimal-complete-definitions-for-different-datatype-constructors/50495456#50495456", "title": "Using different minimal complete definitions for different datatype constructors", "body": "<p>Here is one way:</p>\n\n<pre><code>applyDef trans = fill trans . singleton\nfillDef trans = foldr union empty . map (apply trans)\n\nclass Transforming t where\n  apply :: (Ord a) =&gt; t a -&gt; a -&gt; Set a\n  apply = applyDef\n  fill  :: (Ord a) =&gt; t a -&gt; Set a -&gt; Set a\n  fill = fillDef\n\ninstance Transforming Transform where\n  fill (SingletonTrans f) = map f\n  fill trans = fillDef trans\n  apply (GenericTrans f) = f\n  apply trans = applyDef trans\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "edited": false, "score": 0, "creation_date": 1527116511, "post_id": 50495847, "comment_id": 88010053, "body": "Thanks for the answer.  And thanks for introducing me to both <code>Data.Functor.Sum</code>, and <code>PatternSynonyms</code>, both are really interesting.  I ended up using this solution so I am marking this as accepted. Lastly I just thought I would point out that you are missing an <code>s</code> in <code>Tranforming g</code>."}], "tags": [], "owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "is_accepted": true, "score": 5, "last_activity_date": 1527117371, "last_edit_date": 1527117371, "creation_date": 1527102691, "answer_id": 50495847, "question_id": 50494361, "link": "https://stackoverflow.com/questions/50494361/using-different-minimal-complete-definitions-for-different-datatype-constructors/50495847#50495847", "title": "Using different minimal complete definitions for different datatype constructors", "body": "<p>Another way, using <code>Data.Functor.Sum</code></p>\n\n<pre><code>newtype SingletonTrans' a = SingletonTrans' (a -&gt; a)\ninstance Transforming SingletonTrans' where\n  fill (SingletonTrans' f) = map f\n\nnewtype GenericTrans' a = GenericTrans' (a -&gt; Set a)\ninstance Transforming GenericTrans' where\n  apply (GenericTrans' g) = g\n\ninstance (Transforming f, Transforming g) =&gt; Transforming (Sum f g) where\n  fill (InL f) = fill f\n  fill (InR g) = fill g\n  apply (InL f) = apply f\n  apply (InR g) = apply g\n\ntype SimpleTransform = Sum SingletonTrans' GenericTrans'\n</code></pre>\n\n<p>You can even use <code>PatternSynonyms</code> to make <code>SimpleTransform</code> act just like the original definition:</p>\n\n<pre><code>pattern SingletonTrans :: (a -&gt; a) -&gt; SimpleTransform a\npattern SingletonTrans f = InL (SingletonTrans' f)\n\npattern GenericTrans :: (a -&gt; Set a) -&gt; SimpleTransform a\npattern GenericTrans g = InR (GenericTrans' g)\n</code></pre>\n"}], "owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 115, "favorite_count": 0, "accepted_answer_id": 50495847, "answer_count": 2, "score": 3, "last_activity_date": 1527117371, "creation_date": 1527096965, "question_id": 50494361, "link": "https://stackoverflow.com/questions/50494361/using-different-minimal-complete-definitions-for-different-datatype-constructors", "title": "Using different minimal complete definitions for different datatype constructors", "body": "<p>I have a typeclass <code>Transforming</code>, with two complete definitions <code>apply</code> and <code>fill</code>.  Here it is:</p>\n\n<pre><code>import Data.Set (Set, foldr, union, empty, map, singleton)\nimport Prelude hiding (foldr, map)\n\nclass Transforming t where\n  apply :: (Ord a) =&gt; t a -&gt; a -&gt; Set a\n  apply trans = fill trans . singleton\n  fill  :: (Ord a) =&gt; t a -&gt; Set a -&gt; Set a\n  fill trans = foldr union empty . map (apply trans)\n</code></pre>\n\n<p><em>(The exact specifics are more or less unimportant to the question, but I thought I would include them)</em></p>\n\n<p>Now the way I have it set up to infer member functions is nice, but often naive. So if I am making an instance of <code>Transforming</code> I may want to implement either <code>apply</code> or <code>fill</code> depending on what is most efficient, and let Haskell handle the other. (Or in rare cases implement both)  And this is fine that is kind of the point of having a typeclass.  However at this point I would like to make a new datatype as follows</p>\n\n<pre><code>data SimpleTransform a = SingletonTrans (a -&gt; a) | GenericTrans (a -&gt; Set a)\n</code></pre>\n\n<p>Now when making this <code>SimpleTransform</code> an instance of <code>Transforming</code> I want to implement <code>fill</code> for instances constructed with <code>SingletonTrans</code> and implement <code>apply</code> for instances constructed with <code>GenericTrans</code>.  I would like to write something like this:</p>\n\n<pre><code>instance Transforming Transform where\n  fill (SingletonTrans f) = map f\n  apply (GenericTrans f) = f\n</code></pre>\n\n<p>However this doesn't work. Since <code>Transform</code> is a single datatype I need to completely define one of the two minimal definitions rather than partially define both.  Now there are ways around this problem.  The simplest is to just fully define both instances, however this is a super simple example and as the number of complete definitions in my typeclass grows and the number of constructors grows this begins to require repeating lots of code. </p>\n\n<p>Is there a way I could use different complete definitions for different constructors of the same datatype?  Is there some way I ought to restructure my code in order to make this unnecessary? </p>\n"}, {"tags": ["haskell", "dependent-type", "type-families"], "answers": [{"tags": [], "owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "is_accepted": true, "score": 14, "last_activity_date": 1527118125, "last_edit_date": 1527118125, "creation_date": 1527098075, "answer_id": 50494615, "question_id": 50494228, "link": "https://stackoverflow.com/questions/50494228/type-family-as-argument-to-type-synonym/50494615#50494615", "title": "Type Family as Argument to Type Synonym", "body": "<p>You can't pass type families (or type synonyms) around unsaturated, but you can pass around a token which represents that type family. Then when it's time to apply the type family to an argument, you can look up the token you were given.</p>\n\n<pre><code>type family Apply (token :: *) (n :: Nat) :: Nat\n\ndata G token n a where\n    G :: a -&gt; G token n a -&gt; G token (Apply token n) a\n</code></pre>\n\n<p>Now you can define tokens and how to apply them.</p>\n\n<pre><code>data SToken\ntype instance Apply SToken n = S n\n\ndata IdToken\ntype instance Apply IdToken n = n\n</code></pre>\n\n<p>And your synonyms:</p>\n\n<pre><code>type G' = G SToken\ntype GId = G IdToken\n</code></pre>\n\n<p>This trick - passing around representations of functions, rather than functions themselves - is called <em>defunctionalisation</em> and was <a href=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.110.5892&amp;rep=rep1&amp;type=pdf\" rel=\"noreferrer\">originally developed in the 70s</a> as an implementation technique for higher-order functional programming languages. (That paper's a terrific read, by the way.)</p>\n\n<p>I don't know if this is the only way to do what you want, but it's more or less how <code>singletons</code> does it. More info <a href=\"https://typesandkinds.wordpress.com/2013/04/01/defunctionalization-for-the-win/\" rel=\"noreferrer\">on the <code>singletons</code> author's blog</a>.</p>\n"}], "owner": {"reputation": 249, "user_id": 4376453, "user_type": "registered", "accept_rate": 25, "profile_image": "https://lh4.googleusercontent.com/-LvhFFca8O_8/AAAAAAAAAAI/AAAAAAAAAFo/11B5JshO4o4/photo.jpg?sz=128", "display_name": "Eliza Brandt", "link": "https://stackoverflow.com/users/4376453/eliza-brandt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 296, "favorite_count": 3, "accepted_answer_id": 50494615, "answer_count": 1, "score": 10, "last_activity_date": 1527118125, "creation_date": 1527096522, "question_id": 50494228, "link": "https://stackoverflow.com/questions/50494228/type-family-as-argument-to-type-synonym", "title": "Type Family as Argument to Type Synonym", "body": "<p>I have a data type that looks like </p>\n\n<pre><code>data G f n a where \n  G :: a -&gt; G f n a -&gt; G f (f n) a \n</code></pre>\n\n<p>It's a container indexed by naturals, which takes a function that determines how to proceed inductively.  </p>\n\n<p>I can define a type synonym easily like </p>\n\n<pre><code>type G' n a = G S n a\n</code></pre>\n\n<p>But I'd like to be able to use the identity function. </p>\n\n<p>I tried using Data.Functor.Identity, but even when redefined with PolyKinds, I can't get a type-level function on Naturals (<code>:k Identity =&gt; Nat -&gt; Nat</code>), so I turned to type families, defining</p>\n\n<pre><code>type family Id a where \n  Id a = a \n</code></pre>\n\n<p>which, cool, it compiles. Unfortunately, I supply <code>type G'' n a = G Id n a</code> and I get the error message of </p>\n\n<pre><code>The type family \u2018Id\u2019 should have 1 argument, but has been given none\nIn the type synonym declaration for \u2018G''\u2019\n</code></pre>\n\n<p>So is there a way I can use a type family in a type synonym? That seems like the ideal end state. </p>\n\n<p>(The extensions I'm currently using are \n<code>{-# LANGUAGE GADTs, TypeFamilies, DataKinds, TypeInType, PolyKinds #-}</code>)</p>\n"}, {"tags": ["haskell", "polymorphism", "functor"], "answers": [{"comments": [{"owner": {"reputation": 153, "user_id": 8856277, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1daf7208dc137bdb2eb880ea0f306d8?s=128&d=identicon&r=PG&f=1", "display_name": "user8856277", "link": "https://stackoverflow.com/users/8856277/user8856277"}, "edited": false, "score": 0, "creation_date": 1527090352, "post_id": 50491804, "comment_id": 87997986, "body": "That is really helpful, but minor change blows it up (infinite type error):            <code>instance Functor Structure where  fmap f (Structure as b c) = Structure (f as) b c</code> How I can fix that ?"}, {"owner": {"reputation": 14781, "user_id": 630160, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/4445f21326af525a8ad19af7e3ae41a8?s=128&d=identicon&r=PG", "display_name": "epsilonhalbe", "link": "https://stackoverflow.com/users/630160/epsilonhalbe"}, "edited": false, "score": 0, "creation_date": 1527091654, "post_id": 50491804, "comment_id": 87998782, "body": "That minor change is fixed by using the code @willemvanonsem wrote. you try to apply a function that takes a list element to the whole list."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 153, "user_id": 8856277, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1daf7208dc137bdb2eb880ea0f306d8?s=128&d=identicon&r=PG&f=1", "display_name": "user8856277", "link": "https://stackoverflow.com/users/8856277/user8856277"}, "edited": false, "score": 0, "creation_date": 1527091756, "post_id": 50491804, "comment_id": 87998841, "body": "@user8856277: if you want to call the <code>f</code> on the second argument, then you should redefine your <code>data</code> type as <code>data Structure a = Structure a Bool Int</code>. It gives you in that case more freedom to decide what the second parameter should be."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1527168986, "post_id": 50491804, "comment_id": 88033807, "body": "Picking a nit: a type constructor of kind <code>* -&gt; *</code> is not a higher kinded type, it&#39;s just a parameterised type. <code>Functor :: (* -&gt; *) -&gt; Constraint</code> is a higher-kinded type because it has arrows on the left. (I know that you understand this already but a reader may not.)"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 7, "last_activity_date": 1527169074, "last_edit_date": 1527169074, "creation_date": 1527088008, "answer_id": 50491804, "question_id": 50491498, "link": "https://stackoverflow.com/questions/50491498/haskell-fmap-over-custom-data-type/50491804#50491804", "title": "Haskell fmap over custom data type", "body": "<p>You can only declare a <code>Functor</code> instance over a <em>parameterized type</em> (<code>* -&gt; *</code> to be precise): a type that still needs an extra (and exactly one) type parameter.</p>\n\n<p>So first we will need to introduce a type parameter. Even if you never plan to use something else than <code>Int</code>s, we can easily abstract that away with:</p>\n\n<pre><code>data Structure <b>a</b> = Structure [<b>a</b>] Bool Int</code></pre>\n\n<p>We can for example declare the <code>StructureA</code> as a <em>type synomym</em>:</p>\n\n<pre><code>type StructureA = Structure Int</code></pre>\n\n<p>Now we can make it a <code>Functor</code> instance, by writing:</p>\n\n<pre><code>instance Functor <b>Structure</b> where\n    fmap f (Structure as b c) = ...</code></pre>\n\n<p>Note that we here did <em>not</em> write <code>(Structure a)</code>, but <code>Structure</code>, since - like we already said - <code>fmap</code> has the freedom to change the type over which the collection works: the <code>f</code> function can have for example type <code>Int -&gt; Char</code> to convert a <code>Structure Int</code> to a <code>Structure Char</code>.</p>\n\n<p>Now we still need to implement <code>fmap</code>. <code>fmap</code> has type <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:fmap\" rel=\"nofollow noreferrer\"><strong><code>fmap :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b</code></strong></a> so that means it takes a function, and in this case a <code>Structure a</code>, and constructs a <code>Structure b</code>. Based on your question (and the design decisions we have made), the only part we can map is the first parameter, so we construct a new <code>Structure</code>, where the second parameter is the result of an <code>fmap f</code>, but then over the second parameter, so:</p>\n\n<pre><code>instance Functor Structure where\n    fmap f (Structure as b c) = <b>Structure (fmap f as) b c</b></code></pre>\n"}, {"tags": [], "owner": {"reputation": 21, "user_id": 6936216, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bhBZX.jpg?s=128&g=1", "display_name": "dpaetzel", "link": "https://stackoverflow.com/users/6936216/dpaetzel"}, "is_accepted": false, "score": 2, "last_activity_date": 1527088125, "creation_date": 1527088125, "answer_id": 50491838, "question_id": 50491498, "link": "https://stackoverflow.com/questions/50491498/haskell-fmap-over-custom-data-type/50491838#50491838", "title": "Haskell fmap over custom data type", "body": "<p>A type constructor can only be a functor if it has exactly one parameter. The type constructor <code>StructureA</code> has no type parameter at all and can thus not be a functor.</p>\n"}], "owner": {"reputation": 153, "user_id": 8856277, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f1daf7208dc137bdb2eb880ea0f306d8?s=128&d=identicon&r=PG&f=1", "display_name": "user8856277", "link": "https://stackoverflow.com/users/8856277/user8856277"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 464, "favorite_count": 0, "accepted_answer_id": 50491804, "answer_count": 2, "score": 3, "last_activity_date": 1527169074, "creation_date": 1527087188, "last_edit_date": 1527087578, "question_id": 50491498, "link": "https://stackoverflow.com/questions/50491498/haskell-fmap-over-custom-data-type", "title": "Haskell fmap over custom data type", "body": "<p>In my project I have a few data types that look like this</p>\n\n<pre><code>data StructureA = StructureA [Int] Bool Int\ndata StructureB = StructureB [String] String\n</code></pre>\n\n<p>My goal is to map functions over arrays contained inside instances of such datatypes</p>\n\n<pre><code>inst = StructureA [1,1,1] True 0\nfmap (+1) inst -- [2,2,2]\n</code></pre>\n\n<p>My initial solution solution looks like this</p>\n\n<pre><code>instance Functor StructureA where\n    fmap (StructureA arr _ _) = fmap arr\n</code></pre>\n\n<p>However, I get kind mismatch error.</p>\n\n<p>Question is how I can declare a function that can be polymorphically applied over such data structures?</p>\n"}, {"tags": ["haskell", "gtk3", "frp"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1527086106, "post_id": 50490280, "comment_id": 87995078, "body": "Great question. I suspect you&#39;re going to have to wrap each callback in a handler, as I believe callbacks get run in fresh Haskell threads (though still on the same OS thread as <code>main</code>, assuming <code>Gtk.main</code> itself is). Can you check whether that works for you? (I know it sucks...)"}, {"owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1527088604, "post_id": 50490280, "comment_id": 87996834, "body": "@DanielWagner Its actually worse than that: almost all my callbacks do nothing more than fire off a Reactive Banana event. Quite what happens next in terms of call stacks and exception handling I&#39;m not sure."}], "answers": [{"comments": [{"owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "edited": false, "score": 0, "creation_date": 1527519261, "post_id": 50565865, "comment_id": 88147845, "body": "Thanks for the explanation. I will try the wrapper you suggest."}], "tags": [], "owner": {"reputation": 13626, "user_id": 492865, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c69a2080e68c8606961a18aba3a08ec?s=128&d=identicon&r=PG", "display_name": "Yuras", "link": "https://stackoverflow.com/users/492865/yuras"}, "is_accepted": true, "score": 3, "last_activity_date": 1527508515, "creation_date": 1527508515, "answer_id": 50565865, "question_id": 50490280, "link": "https://stackoverflow.com/questions/50490280/catching-haskell-exceptions-with-gi-gtk-and-reactive-banana/50565865#50565865", "title": "Catching Haskell exceptions with gi-gtk and Reactive Banana", "body": "<p>There is similar question <a href=\"https://stackoverflow.com/questions/29727644/how-to-catch-a-haskell-exception-that-is-thrown-in-a-haskell-callback-function-c\">here</a> (though it is not specific to <code>gi-gtk</code>, so is a bit more general)t. Also I'd recommend <a href=\"http://neilmitchell.blogspot.com.by/2017/11/haskell-exceptions-and-ffi-wrappers.html\" rel=\"nofollow noreferrer\">this</a> post.</p>\n\n<p>Basically, haskell exceptions can't pass haskell/C border. Simply because C doesn't know anything about haskell exceptions.</p>\n\n<p>In your case, <code>Gtk.main</code> runs <code>gtk</code> event loop, which is implemented in C, and callbacks are implemented in haskell. When callback throws haskell exception, it has to go through <code>gtk</code> event loop in order to reach <code>executeProgram</code> function. But it is impossible for the reason stated above.</p>\n\n<p>I'm afraid, the solution is to catch all exceptions inside each callback. In your case, you probably can write a wrapper over <code>on</code> function from <code>gi-gtk</code>, which will catch all exceptions and show the bug dialog.</p>\n"}], "owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 162, "favorite_count": 0, "accepted_answer_id": 50565865, "answer_count": 1, "score": 9, "last_activity_date": 1527508515, "creation_date": 1527083788, "question_id": 50490280, "link": "https://stackoverflow.com/questions/50490280/catching-haskell-exceptions-with-gi-gtk-and-reactive-banana", "title": "Catching Haskell exceptions with gi-gtk and Reactive Banana", "body": "<p>My application is bug-free, of course, but just in case it contains any bottom values I want to put in a generic exception catcher which will at least pop up a message box to tell the user what kind of bug to report. Because I'm using <a href=\"https://hackage.haskell.org/package/gi-gtk\" rel=\"noreferrer\">gi-gtk</a> I figured that any exceptions after initialisation will happen from inside the <code>Gtk.main</code> function, so the end of my <code>main</code> function looks   looks something like this:</p>\n\n<pre><code>let executeProgram =\n     catch Gtk.main $ \\e -&gt; do\n           reportThisBugDialog $ show (e :: SomeException)\n           -- Code here to try to recover to a known good state\n           executeProgram\nexecuteProgram\n</code></pre>\n\n<p>I'm also using <a href=\"https://hackage.haskell.org/package/reactive-banana\" rel=\"noreferrer\">Reactive Banana</a> in case that is relevant, but this is outside the FRP code.</p>\n\n<p>However this doesn't capture any exceptions. I put <code>error \"Test Exception\"</code> in the handler for \"Help About\", and my program just exited with a message printed to the console (which my users will not see of course).</p>\n\n<p>How do I catch exceptions that occur inside my code when it is reacting to GTK signals?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1527082687, "post_id": 50489871, "comment_id": 87992650, "body": "Well a <code>let</code> statement is typically scoped locally. You can not &quot;reassign&quot; (well in fact you can never assign to begin with) a variable. So this will not work."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1527083657, "post_id": 50489871, "comment_id": 87993325, "body": "You are trying to use <code>let x=...</code> as an assignment in imperative programming, but Haskell is not imperative, and has no assignment. <code>let</code> can define <i>local variables</i>, which disappear when the scope closes. Your code, if it were Java, roughly reads as <code>if (...) { int d1 = ...; } else { int d2 = ...; } loop(d1,d2);</code> and will trigger an undefined variable error."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1527084111, "post_id": 50489871, "comment_id": 87993657, "body": "The following question is intended to be Socratic and enlightening; I hope you will read and ponder it with that motivation in mind. What type do you believe <code>d1</code> should have on the line <code>putStr &quot;Player2 choose deck\\n&quot;;</code>, the type of <code>&quot;deck1&quot;</code> or the type of <code>deck1</code>? Why?"}, {"owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "edited": false, "score": 0, "creation_date": 1527084740, "post_id": 50489871, "comment_id": 87994071, "body": "Haskell uses indentation to indicate block structure; normally the only time you use curly brackets and semicolons is when you want to stuff everything on the same line for some reason, or in <code>data</code> declarations. Try taking out your curly brackets and semicolons."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "edited": false, "score": 0, "creation_date": 1527085151, "post_id": 50489871, "comment_id": 87994335, "body": "@PaulJohnson But the braces and semicolons are correct in this post... the problem lies elsewhere."}, {"owner": {"reputation": 15, "user_id": 9796177, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/373c7c1290c0055cb96843dfb7131096?s=128&d=identicon&r=PG&f=1", "display_name": "jack", "link": "https://stackoverflow.com/users/9796177/jack"}, "edited": false, "score": 0, "creation_date": 1527093042, "post_id": 50489871, "comment_id": 87999544, "body": "A deck should have type [(String,Int,Int)] and deck1 is a specific deck with this type."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1527117691, "post_id": 50489871, "comment_id": 88010353, "body": "@jack Sure. But I asked about <code>d1</code>, not <code>deck1</code>."}, {"owner": {"reputation": 15, "user_id": 9796177, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/373c7c1290c0055cb96843dfb7131096?s=128&d=identicon&r=PG&f=1", "display_name": "jack", "link": "https://stackoverflow.com/users/9796177/jack"}, "edited": false, "score": 0, "creation_date": 1527149975, "post_id": 50489871, "comment_id": 88020855, "body": "Well the type would be a <code>String</code> and so looking back through the code it doesn&#39;t make sense to say <code>let {d1 = deck1}</code> as they&#39;re different types, but having changed this to <code>let {d1&#39; = deck1}</code> it still doesn&#39;t work, which I&#39;m guessing is because of my misunderstanding of how the <code>let</code> works."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1527242596, "post_id": 50489871, "comment_id": 88064807, "body": "@jack And if you write <code>let {d1&#39; = deck1}</code> in one branch, but don&#39;t define it in the other, what do you expect to happen when the other branch is taken and then you access <code>d1&#39;</code> afterwards?"}, {"owner": {"reputation": 15, "user_id": 9796177, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/373c7c1290c0055cb96843dfb7131096?s=128&d=identicon&r=PG&f=1", "display_name": "jack", "link": "https://stackoverflow.com/users/9796177/jack"}, "edited": false, "score": 0, "creation_date": 1527250870, "post_id": 50489871, "comment_id": 88069759, "body": "Yes I see your point, I think this was just a bad way to implement what I wanted. I&#39;ve changed it that so that in the case where the string is <code>deck1</code> then it starts the next case analyses and if that is also <code>deck1</code> then it does the loop with those decks. This works for now but would become very complicated if more decks were added to the system."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1527251721, "post_id": 50489871, "comment_id": 88070321, "body": "@jack Great, I&#39;m glad you got something working! Now that it&#39;s working, you can think about how to make it better. You might enjoy my writing on <a href=\"https://stackoverflow.com/q/33005903/791604\">How do I deal with many levels of indentation?</a>; or you may enjoy looking at <a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/System-Exit.html#v:die\" rel=\"nofollow noreferrer\"><code>die</code></a> and pondering its return type for some time."}, {"owner": {"reputation": 15, "user_id": 9796177, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/373c7c1290c0055cb96843dfb7131096?s=128&d=identicon&r=PG&f=1", "display_name": "jack", "link": "https://stackoverflow.com/users/9796177/jack"}, "edited": false, "score": 0, "creation_date": 1527260293, "post_id": 50489871, "comment_id": 88075962, "body": "Thanks for the help, I&#39;ll check it out!"}], "answers": [{"comments": [{"owner": {"reputation": 15, "user_id": 9796177, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/373c7c1290c0055cb96843dfb7131096?s=128&d=identicon&r=PG&f=1", "display_name": "jack", "link": "https://stackoverflow.com/users/9796177/jack"}, "edited": false, "score": 0, "creation_date": 1527104062, "post_id": 50495889, "comment_id": 88005078, "body": "So the idea is that there are multiple decks available, however I have only created one so just for testing purposes both <code>d1</code> and <code>d2</code> are both supposed to be <code>deck1</code>. <code>deck1</code> is stored in a desperate file and has type <code>[(String,Int,Int)]</code>. What I wanted to achieve was that before the game starts, that is before the loop, the players are asked which deck they would like to use and then the game starts with those chosen decks."}], "tags": [], "owner": {"reputation": 1159, "user_id": 3953988, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/803352198cc6f048e409a07eefa19d7b?s=128&d=identicon&r=PG", "display_name": "Rahul Manne", "link": "https://stackoverflow.com/users/3953988/rahul-manne"}, "is_accepted": false, "score": 0, "last_activity_date": 1527102857, "creation_date": 1527102857, "answer_id": 50495889, "question_id": 50489871, "link": "https://stackoverflow.com/questions/50489871/parse-error-on-input-with-case-analysis/50495889#50495889", "title": "&#39;parse error on input&#39; with case analysis", "body": "<p>Haskell's <code>let</code> acts differently in a <code>do</code> block than it does outside the <code>do</code> block. The statement, <code>let {d2 = deck 1};</code> is malformed, because the syntax is <code>let in</code>. To fix this, you can wrap it in a <code>do</code> (eg: <code>do let {d2 = deck1};</code>), which should resolve the parse error, but THIS IS NOT WHAT YOU WANT.</p>\n\n<p>There are so many things wrong with the code in the OP that I'm not sure where exactly to start, but here are a few pointers:</p>\n\n<ul>\n<li><p>what is deck1/2?</p></li>\n<li><p>what is the type of d1/2? Initially, it's a string because you're filling it with <code>getLine</code>, but then you're assigning it to <code>deck1</code>, which is presumably not a string.</p></li>\n<li><p><code>let</code> outside <code>do</code> notation must follow <code>let BINDING in VALUE</code>. <code>let BINDING</code> is not a value and does not make any sense on its own. Moreover, <code>let BINDING in VALUE</code> applies the BINDING only in the VALUE. <code>do</code>'s <code>let</code> is special in that it applies the BINDING to all of the lines following it, but that BINDING is not overwritten. (eg: <code>do { let x = \"\"; putStrLn x }</code> is really just syntactic sugar for <code>pure \"\" &gt;&gt;= \\x -&gt; putStrLn x</code> (or maybe <code>return \"\" &gt;&gt;= \\x -&gt; putStrLn x</code>, or maybe <code>(\\x -&gt; putStrLn x) \"\"</code>).</p></li>\n</ul>\n\n<p>Try avoiding do notation entirely, I think you're getting confused because do notation allows Haskell to look imperative, like Java, but Haskell is NOT Java. You should start with more pure code and then later explore Monads (and IO) after that. Only then can you really understand <code>do</code>.</p>\n"}], "owner": {"reputation": 15, "user_id": 9796177, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/373c7c1290c0055cb96843dfb7131096?s=128&d=identicon&r=PG&f=1", "display_name": "jack", "link": "https://stackoverflow.com/users/9796177/jack"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 249, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1527102857, "creation_date": 1527082560, "question_id": 50489871, "link": "https://stackoverflow.com/questions/50489871/parse-error-on-input-with-case-analysis", "title": "&#39;parse error on input&#39; with case analysis", "body": "<p>I have the following main function which is supposed to ask two players for their decks, which are chosen from a library of decks in another file, and then run a loop with these inputs.</p>\n\n<pre><code>main :: IO()\nmain = do {\n         putStr \"Player1 choose deck\\n\";\n         d1 &lt;- getLine; \n         case d1 of \n                {\n                 \"deck1\" -&gt; let {d1 = deck1};\n                 _       -&gt; putStr \"error\"\n                };\n         putStr \"Player2 choose deck\\n\";\n         d2 &lt;- getLine; \n         case d2 of \n                {\n               \"deck1\" -&gt; let {d2 = deck1};\n               _       -&gt; putStr \"error\"\n              };\n       loop d1 d2\n      }\n</code></pre>\n\n<p>The code gets parse errors on the semicolons for the lines: </p>\n\n<pre><code> \"deck1\" -&gt; let {d1 = deck1};\n \"deck1\" -&gt; let {d2 = deck1};\n</code></pre>\n\n<p>I've been staring at this for ages and I'm sure it's something simple but would appreciate a fresh pair of eyes to see what's wrong. :) </p>\n"}, {"tags": ["haskell", "command-line-arguments"], "answers": [{"comments": [{"owner": {"reputation": 68, "user_id": 5046713, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ead9ee3a32d80a9f9e3cc9c7772888c?s=128&d=identicon&r=PG&f=1", "display_name": "Bill", "link": "https://stackoverflow.com/users/5046713/bill"}, "edited": false, "score": 0, "creation_date": 1527078164, "post_id": 50487907, "comment_id": 87989365, "body": "Dank u wel! Is there a reference for this? (Searching for &quot;haskell pure&quot; is impractical at best)"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 68, "user_id": 5046713, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ead9ee3a32d80a9f9e3cc9c7772888c?s=128&d=identicon&r=PG&f=1", "display_name": "Bill", "link": "https://stackoverflow.com/users/5046713/bill"}, "edited": false, "score": 0, "creation_date": 1527078277, "post_id": 50487907, "comment_id": 87989441, "body": "@Bill: well the <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Control-Applicative.html#v:pure\" rel=\"nofollow noreferrer\"><code>pure</code></a> function is a bit cryptic. An <code>IO</code> is a <code>Applicative</code> type, and so you can wrap elements in an <code>IO</code> object with <code>pure</code> (but you can use <code>pure</code> to wrap elements in a <code>Maybe</code>, <code>[]</code>, etc. as well)."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 68, "user_id": 5046713, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ead9ee3a32d80a9f9e3cc9c7772888c?s=128&d=identicon&r=PG&f=1", "display_name": "Bill", "link": "https://stackoverflow.com/users/5046713/bill"}, "edited": false, "score": 0, "creation_date": 1527078468, "post_id": 50487907, "comment_id": 87989575, "body": "For example for the <code>Maybe</code> type, if you use <code>pure 14 :: Maybe Int</code>, you get a <code>Just 14</code>. For a list you get a singleton list (<code>pure 25 :: [Int]</code> is <code>[25]</code>). And for an <code>IO</code> you basically get a &quot;no-operation&quot; that has as output the parameter of the <code>pure</code> function."}, {"owner": {"reputation": 68, "user_id": 5046713, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ead9ee3a32d80a9f9e3cc9c7772888c?s=128&d=identicon&r=PG&f=1", "display_name": "Bill", "link": "https://stackoverflow.com/users/5046713/bill"}, "edited": false, "score": 0, "creation_date": 1527079113, "post_id": 50487907, "comment_id": 87990073, "body": "I will research this further (I spent way too many hours trying to figure out a work-around). Thanks again."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "reply_to_user": {"reputation": 68, "user_id": 5046713, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ead9ee3a32d80a9f9e3cc9c7772888c?s=128&d=identicon&r=PG&f=1", "display_name": "Bill", "link": "https://stackoverflow.com/users/5046713/bill"}, "edited": false, "score": 0, "creation_date": 1527079870, "post_id": 50487907, "comment_id": 87990620, "body": "@BIll If you need to again in the future, a good way to search for Haskell functions is through <a href=\"https://www.haskell.org/hoogle/\" rel=\"nofollow noreferrer\">hoogle</a> or <a href=\"https://hayoo.fh-wedel.de/\" rel=\"nofollow noreferrer\">hayoo</a>. You can search by type or name."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 68, "user_id": 5046713, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ead9ee3a32d80a9f9e3cc9c7772888c?s=128&d=identicon&r=PG&f=1", "display_name": "Bill", "link": "https://stackoverflow.com/users/5046713/bill"}, "edited": false, "score": 1, "creation_date": 1527084593, "post_id": 50487907, "comment_id": 87993975, "body": "@Bill If you&#39;d like to make progress without being required to do a lot of research, I recommend <a href=\"http://blog.sigfpe.com/2007/11/io-monad-for-people-who-simply-dont.html\" rel=\"nofollow noreferrer\">The IO Monad for People who Simply Don&#39;t Care</a>. If you&#39;d like to do a lot of research and acquire a deep understanding before you proceed, I recommend <a href=\"http://blog.sigfpe.com/2006/08/you-could-have-invented-monads-and.html\" rel=\"nofollow noreferrer\">You Could Have Invented Monads! (And Maybe You Already Have.)</a>."}, {"owner": {"reputation": 68, "user_id": 5046713, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ead9ee3a32d80a9f9e3cc9c7772888c?s=128&d=identicon&r=PG&f=1", "display_name": "Bill", "link": "https://stackoverflow.com/users/5046713/bill"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1527087311, "post_id": 50487907, "comment_id": 87995963, "body": "@AJFarmar, @DanielWagner -- excellent suggestions, but <code>pure</code> was the missing link I needed. Trying to solve the problem without <code>pure</code> is a bit much for new-to-Haskell types (though I learned a lot creating dozens of ways it doesn&#39;t work!)."}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 1, "creation_date": 1527098716, "post_id": 50487907, "comment_id": 88002353, "body": "Is there a particular reason to use <code>pure</code> over <code>return</code> in this context? I guess it&#39;s less confusing for people coming from languages where <code>return</code> means something else. But from what I&#39;ve seen, <code>return</code> is historically more often used here, specifically in tutorials/books/etc, so I figure that&#39;s what people are more likely to recognize. I guess <code>pure</code> is better in general, since it&#39;s more ... well, general, but that&#39;s not as much of a factor if you know you&#39;re in IO from the get-go."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 0, "creation_date": 1527098943, "post_id": 50487907, "comment_id": 88002445, "body": "@DarthFennec: well there is probably already a batch of thousand of questions with people that find <code>return</code> confusing: most of the time they see it as a &quot;keyword&quot;, not a function, and keyword that &quot;returns&quot; content from the top level of a function and terminates execution. I think naming the function <code>return</code> was probably a mistake. Not that much because <code>return</code> does not per se describes what it does, but more because nearly all imperative languages attached the same meaning to it. To avoid the confusion a lot of people here advice against <code>return</code>, and use <code>pure</code> instead."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 2, "last_activity_date": 1527076844, "creation_date": 1527076844, "answer_id": 50487907, "question_id": 50487784, "link": "https://stackoverflow.com/questions/50487784/using-getargs-or-user-input/50487907#50487907", "title": "Using getArgs or user input", "body": "<p>Let us analyze the type of <code>file</code>:</p>\n\n<pre><code>let file = if null args\n    then do putStr \"File: \" ; getLine\n    else head args\n</code></pre>\n\n<p>Here the  <code>if</code>-<code>then</code>-<code>else</code> statement has as condition <code>null args</code>, which is indeed a <code>Bool</code>, so we are safe. But the the <code>then</code> part has as type <code>IO String</code>. So Haskell reasons that <code>args</code> should be an <code>[IO String]</code>, but it is not: it is a list of <code>String</code>s, so <code>[String]</code>.</p>\n\n<p>Later another problem pops up: you use <code>file</code> as a <code>String</code>, but it is not: it is still an <code>IO String</code>.</p>\n\n<p>There are a few ways to fix it. Probably the minimal change is to use <code>pure</code> to wrap the <code>head args</code> back into an <code>IO</code>, and use replace the <code>let</code> clause with a <code>&lt;-</code> statement:</p>\n\n<pre><code>import System.Environment\n\nmain = do\n    args <b>&lt;-</b> getArgs\n    file <b>&lt;-</b> if null args\n        then do putStr \"File: \" ; getLine\n        else <b>pure (</b>head args<b>)</b>\n    putStr \"processing \"\n    putStrLn file\n    writeFile file \"some very nice text\"</code></pre>\n"}], "owner": {"reputation": 68, "user_id": 5046713, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ead9ee3a32d80a9f9e3cc9c7772888c?s=128&d=identicon&r=PG&f=1", "display_name": "Bill", "link": "https://stackoverflow.com/users/5046713/bill"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 723, "favorite_count": 0, "accepted_answer_id": 50487907, "answer_count": 1, "score": 3, "last_activity_date": 1527078244, "creation_date": 1527076518, "last_edit_date": 1527078244, "question_id": 50487784, "link": "https://stackoverflow.com/questions/50487784/using-getargs-or-user-input", "title": "Using getArgs or user input", "body": "<p>New to Haskell and wrestling with a problem. I know <em>why</em> my code doesn't work, but I cannot figure out the solution.</p>\n\n<p>The intention is for the user to provide a file name either via argument or, if none provided, prompt the user to enter the data. A message with the file name is printed to the screen and the file is processed.</p>\n\n<pre><code>import System.Environment\nmain = do\n    args &lt;- getArgs\n    let file = if null args\n        then do putStr \"File: \" ; getLine\n        else head args\n    putStr \"processing\"\n    putStrLn file\n    writeFile file \"some very nice text\"\n</code></pre>\n\n<p>The code is wrong, of course, but demonstrates the logic I've been wrestling with. Neither <em>Happy Learn Haskell</em> nor <em>Learn you Haskell</em> could put me over the hump. The closest thread I could find was <a href=\"https://stackoverflow.com/questions/9216940/get-input-and-pass-variable-from-an-if-statement-with-haskell/9217189#9217189\">this one</a>. Many thanks for assistance.</p>\n"}, {"tags": ["haskell", "types", "peano-numbers"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 1, "creation_date": 1527069962, "post_id": 50483305, "comment_id": 87983900, "body": "Maybe consider using type families rather than classes, as this will circumvent the need for constraints."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1527081931, "post_id": 50483305, "comment_id": 87992043, "body": "There is no way to write <code>b+d</code> unless you switch to type families. Type families are much more natural for these things than multi parameter type classes with functional dependencies."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1527083562, "post_id": 50483305, "comment_id": 87993260, "body": "I guess you would add a new class like <code>class PlusAssociates a b d where associate :: Dict (Plus a b c, Plus c d e) -&gt; exists f. Dict (Plus b d f, Plus a f e)</code> (use your favorite encoding of existentials); a suitable, complete collection of instances would amount to a proof that addition associates. (The compiler definitely won&#39;t derive such proofs for you.)"}], "owner": {"reputation": 8049, "user_id": 2718064, "user_type": "registered", "accept_rate": 63, "profile_image": "https://i.stack.imgur.com/jEp0E.jpg?s=128&g=1", "display_name": "marcosh", "link": "https://stackoverflow.com/users/2718064/marcosh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 157, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1527063713, "creation_date": 1527063713, "question_id": 50483305, "link": "https://stackoverflow.com/questions/50483305/addition-on-peano-numbers-at-type-level", "title": "Addition on Peano numbers at type level", "body": "<p>I have defined types for the Peano numbers</p>\n\n<pre><code>class Plus (n :: T) (m :: T) (r :: T) | r n -&gt; m\ninstance Plus 'Zero m m\ninstance Plus n m r =&gt; Plus ('Succ n) m ('Succ r)\n</code></pre>\n\n<p>Now I find myself having two constraints <code>Plus a b c</code> and <code>Plus c d e</code>.</p>\n\n<p>How can I define an addition operation on my class such that the compiler is able to derive <code>Plus a (b + d) e</code>?</p>\n"}, {"tags": ["c", "haskell", "garbage-collection", "ffi", "bytestring"], "comments": [{"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1527058529, "post_id": 50481610, "comment_id": 87976405, "body": "You can force the <code>ByteString</code> to not be GC&#39;ed via <code>touchForeignPtr</code>. That doesn&#39;t solve all of your problems, but it sure helps the examples you gave. You&#39;ll have to tiptoe around laziness though..."}, {"owner": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "reply_to_user": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1527058800, "post_id": 50481610, "comment_id": 87976555, "body": "touchForeignPtr: &quot;This function ensures that the foreign object in question is alive at the given place in the sequence of IO actions.&quot; That&#39;s neat."}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1527061388, "post_id": 50481610, "comment_id": 87978109, "body": "Regarding wanting to avoid <code>IO</code> in favour of another monad, you could go to <code>ST</code>. Depending on what you are doing <code>unsafeIOToST :: IO a -&gt; ST s a</code> might be useful for lifting an FFI imported <code>IO</code> action to <code>ST</code>."}, {"owner": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "reply_to_user": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1527232141, "post_id": 50481610, "comment_id": 88058696, "body": "<code>unsafeIOToST</code> is a nice mechanism. One drawback I noticed is that <code>liftIO</code> is not avaliable in <code>ST</code>. In <code>ST</code> that makes sense, but since my <code>ST</code> ist just <code>IO</code> in disguise, <code>liftIO</code> ought to be available. I guess it&#39;s possible to make my own <code>myLiftIO</code>, which is actually just <code>unsafeIOToST</code>, I think."}], "owner": {"reputation": 1750, "user_id": 3929481, "user_type": "registered", "accept_rate": 12, "profile_image": "https://i.stack.imgur.com/3ZrH1.jpg?s=128&g=1", "display_name": "mcmayer", "link": "https://stackoverflow.com/users/3929481/mcmayer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 348, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1527060484, "creation_date": 1527058217, "last_edit_date": 1527060484, "question_id": 50481610, "link": "https://stackoverflow.com/questions/50481610/haskell-ffi-correct-way-to-pass-in-and-return-bytestrings", "title": "Haskell FFI: Correct way to pass in and return ByteStrings", "body": "<p><strong>Setup</strong></p>\n\n<p>Suppose you have a typical C API where some struct is allocated, then initialised (memory allocated, handles created, etc.), then worked upon (transformed, queried, etc.) using various functions, and finally freed again. I.e. the standard C-style OO framework where the struct is the 'object' and the functions are the 'member functions'.</p>\n\n<p>More specifically, let the API work on bytestrings. For example, this could be a compression library.</p>\n\n<p>In Haskell, <code>Data.ByteString.ByteString</code>, at the lowest level, is just \"pinned memory in the GC heap\" (allocated with <a href=\"http://hackage.haskell.org/package/bytestring-0.10.8.2/docs/src/Data.ByteString.Internal.html#mallocByteString\" rel=\"nofollow noreferrer\"><code>mallocPlainForeignPtrBytes</code></a>), the pointer to which is the first argument to the <code>ByteString</code> constructor <a href=\"http://hackage.haskell.org/package/bytestring-0.10.8.2/docs/src/Data.ByteString.Internal.html#PS\" rel=\"nofollow noreferrer\"><code>PS</code></a>. The underlying memory of the <code>ByteString</code> can be obtained with <a href=\"http://hackage.haskell.org/package/bytestring-0.9/docs/Data-ByteString-Internal.html#v%3AtoForeignPtr\" rel=\"nofollow noreferrer\"><code>Data.ByteString.Internal.toForeignPtr</code></a>. So far so good.</p>\n\n<p><strong>Passing down <code>ByteString</code></strong></p>\n\n<p>It is convenient to let Haskell manage the <code>ByteString</code> on which the C API operates. In C we might have a struct and a init function like this:</p>\n\n<pre><code>   typedef struct { \n       uint8_t* buf; \n       size_t buflen; \n   } API_t;\n\n   void API_init_as_writer(API_t* p, uint8_t* buf, size_t buflen);\n</code></pre>\n\n<p><code>buf</code> and <code>buflen</code> hold the Haskell <code>ByteString</code>. This object becomes a 'writer'. The Haskell binding would look like this:</p>\n\n<pre><code>   data API  -- empty decl (needs EmptyDataDecls extension)\n\n   foreign import ccall unsafe \"API.h API_init_as_writer\"\n       init :: Ptr API -&gt; Ptr Word8 -&gt; Int -&gt; IO ()\n</code></pre>\n\n<p>where the <code>Ptr Word8</code> is obtained with <a href=\"http://hackage.haskell.org/package/bytestring-0.9/docs/Data-ByteString-Internal.html#v:toForeignPtr\" rel=\"nofollow noreferrer\"><code>toForeignPtr</code></a> and <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Foreign-ForeignPtr.html#v:withForeignPtr\" rel=\"nofollow noreferrer\"><code>withForeignPtr</code></a>.</p>\n\n<p><strong>Returning (passing up) a <code>ByteString</code></strong></p>\n\n<p>Similarly, we can let the object (struct) become a 'reader' and create the <code>ByteString</code> as described above, using <code>mallocPlainForeignPtrBytes</code> and <code>PS</code>.</p>\n\n<p><strong>Garbage collection gets in the way!</strong></p>\n\n<p>The trouble with this is that the garbage collector does not know that the <code>ByteStrings</code> are being used (via the struct that holds the pointer to the memory on the GC heap) after the API_init_* functions have been called. In the case of the 'writer':</p>\n\n<pre><code>    writer &lt;- initWriter 1024     -- inits with buflen of 1024 via mallocPlainForeignPtrBytes\n    writeSomething writer\n    writeSomethingElse writer\n    ...\n    bs &lt;- getByteString writer    -- construct ByteString with PS\n    writeFile \"Some.file\" bs\n</code></pre>\n\n<p>and in the case of the 'reader':</p>\n\n<pre><code>    bs &lt;- ByteString.readFile(\"Some.file\")\n    reader &lt;- initReader bs\n    info1 &lt;- readSomething reader\n    info2 &lt;- readSomethingElse reader\n</code></pre>\n\n<p>All this happens in the IO monad.</p>\n\n<p>Clearly, this doesn't work. The <code>ByteString</code> may get garbage collected after <code>initWriter</code> or <code>initReader</code>, and the <code>writeSomething</code> or <code>readSomething</code> functions will continue using the garbage collected memory.</p>\n\n<p>And, notwithstanding any GC issues, just like the <code>ByteString</code> has been \"unsafe'd\" out of the IO monad, these API <code>ByteString</code> ops shouldn't be in the IO monad, either, because there isn't really any IO or interaction with <code>RealWorld</code> happening.</p>\n\n<p>So the question is: <strong>How is this structured correctly in Haskell?</strong></p>\n\n<p><a href=\"https://stackoverflow.com/questions/32197977/how-to-create-two-bytestrings-calling-this-external-library-api/32198466#32198466\">This</a> SO question leads to the hint of using <code>IORef</code>, which is not very nice.</p>\n\n<p>My hunch is that this needs to be made functional. The sequential nature of these OO-type APIs (alloc, init, operate, operate, ..., free) necessitate the introduction of a monad other than the IO monad, I guess. But I don't quite see how to set this up correctly. When I look at database bindings I only see the IO monad. For example, the <a href=\"https://hackage.haskell.org/package/BerkeleyDB-0.8.7/docs/Database-Berkeley-Db.html#v:db_get\" rel=\"nofollow noreferrer\"><code>db_get</code></a> function of the <a href=\"https://hackage.haskell.org/package/BerkeleyDB-0.8.7/docs/Database-Berkeley-Db.html\" rel=\"nofollow noreferrer\">BerkeleyDB binding</a> returns a <code>IO (Maybe ByteString)</code> - the GC problem doesn't arise because the <code>ByteString</code> is the result of the query. I'm a bit puzzled right now. I guess I'm hitting the friction point between OO and FP. Or maybe I'm looking at this completely in the wrong way.</p>\n\n<p><strong>Update 1</strong></p>\n\n<p>As @Alec points out, the GC problems can be alleviated (solved?) by using the <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Foreign-ForeignPtr.html#v:touchForeignPtr\" rel=\"nofollow noreferrer\"><code>touchForeignPtr</code></a>. I still have a strong inclination to take this out of the IO monad, though, towards a cleaner interface.</p>\n"}, {"tags": ["haskell", "cabal"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1527091394, "post_id": 50479521, "comment_id": 87998655, "body": "I suspect it doesn&#39;t do <i>anything</i> smart at all. &quot;Should be found in absolute paths&quot; likely means it&#39;s on you, the cabal-file writer, to put the correct absolute path in the list. ...but this is conjecture based on a slightly different reading of the text than yours, not based on any expertise I have in cabal, so I relegate it to a comment rather than an answer..."}, {"owner": {"reputation": 28488, "user_id": 402884, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/35583fe46c2cde92467710cc7ceff266?s=128&d=identicon&r=PG", "display_name": "Chris Martin", "link": "https://stackoverflow.com/users/402884/chris-martin"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1527129066, "post_id": 50479521, "comment_id": 88012813, "body": "@DanielWagner Are you saying it means that the entries in the <code>includes</code> list should themselves <i>be</i> absolute paths?"}, {"owner": {"reputation": 37486, "user_id": 371753, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/znFEK.jpg?s=128&g=1", "display_name": "sclv", "link": "https://stackoverflow.com/users/371753/sclv"}, "edited": false, "score": 1, "creation_date": 1527140571, "post_id": 50479521, "comment_id": 88015812, "body": "Translated, I think it means that the files should be given either as absolute paths or as paths relative to the top of the source tree or as paths relative to an include-dir."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1527156171, "post_id": 50479521, "comment_id": 88024907, "body": "@ChrisMartin Yes, that is how I read it."}, {"owner": {"reputation": 37486, "user_id": 371753, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/znFEK.jpg?s=128&g=1", "display_name": "sclv", "link": "https://stackoverflow.com/users/371753/sclv"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1529904922, "post_id": 50479521, "comment_id": 89026137, "body": "@DanielWagner I think you should submit your comment as an answer"}], "owner": {"reputation": 28488, "user_id": 402884, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/35583fe46c2cde92467710cc7ceff266?s=128&d=identicon&r=PG", "display_name": "Chris Martin", "link": "https://stackoverflow.com/users/402884/chris-martin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 99, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1527086193, "creation_date": 1527047432, "last_edit_date": 1592644375, "question_id": 50479521, "link": "https://stackoverflow.com/questions/50479521/where-does-cabal-search-for-files-listed-in-includes", "title": "Where does Cabal search for files listed in &quot;includes: ...&quot;?", "body": "<p>The <a href=\"https://www.haskell.org/cabal/users-guide/developing-packages.html#pkg-field-includes\" rel=\"nofollow noreferrer\">Cabal documentation</a> has this to say on the <code>includes</code> attribute:</p>\n<blockquote>\n<p><strong>includes</strong>: <em>filename list</em></p>\n<p>A list of header files to be included in any compilations via C. This field applies to both header files that are already installed on the system and to those coming with the package to be installed. The former files should be found in absolute paths, while the latter files should be found in paths relative to the top of the source tree or relative to one of the directories listed in <code>include-dirs</code>.</p>\n<p>These files typically contain function prototypes for foreign imports used by the package.</p>\n</blockquote>\n<p>I find the statement &quot;The former files should be found in absolute paths&quot; to be unhelpfully vague; how do I find out specifically <em>which</em> absolute paths Cabal will look in, so that I can ensure that I am putting necessary files in a place where they can &quot;be found&quot;?</p>\n"}, {"tags": ["algorithm", "haskell", "data-structures", "profiling", "disjoint-sets"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1527029004, "post_id": 50477398, "comment_id": 87968406, "body": "Your <code>getElemTree</code> takes linear time. Typically the whole idea is that one can check if the two trees are the same in the <i>depth</i> of the tree."}, {"owner": {"reputation": 6426, "user_id": 3946931, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/a45b621c0a6b96ea0996dfd51867c541?s=128&d=identicon&r=PG&f=1", "display_name": "therewillbecode", "link": "https://stackoverflow.com/users/3946931/therewillbecode"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1527029157, "post_id": 50477398, "comment_id": 87968459, "body": "Right but if we add linear time operations they dont really affect performance right?"}, {"owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 0, "creation_date": 1527033322, "post_id": 50477398, "comment_id": 87969528, "body": "checking for tree equality in <code>unWeightedUnion</code> is unnecessarily expensive - if you found the indexes of the trees containing <code>a</code> and <code>b</code>, then all you&#39;d need to do is an integer comparison."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1527037725, "post_id": 50477398, "comment_id": 87970444, "body": "Isn&#39;t this one of the problems not known to have an equivalent-complexity solution in a pure/lazy environment?"}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 3, "creation_date": 1527056612, "post_id": 50477398, "comment_id": 87975377, "body": "@Carl Last I heard (admittedly a few years ago now), it&#39;s unknown whether or not there is a lazy purely functional solution that has complexity as good as the (fast) imperative solution. It believe it was proven that there is no such solution in a strict purely functional environment, but laziness adds just enough (&quot;hidden&quot;) mutation that it might be possible (but, as far as I know, no one is sure at the moment). There&#39;s a brief reference to this <a href=\"https://www.schoolofhaskell.com/school/to-infinity-and-beyond/older-but-still-interesting/deamortized-st\" rel=\"nofollow noreferrer\">here</a> (from 2013)."}], "owner": {"reputation": 6426, "user_id": 3946931, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/a45b621c0a6b96ea0996dfd51867c541?s=128&d=identicon&r=PG&f=1", "display_name": "therewillbecode", "link": "https://stackoverflow.com/users/3946931/therewillbecode"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 247, "favorite_count": 1, "answer_count": 0, "score": 0, "last_activity_date": 1527029039, "creation_date": 1527028743, "last_edit_date": 1527029039, "question_id": 50477398, "link": "https://stackoverflow.com/questions/50477398/naive-functional-implementation-of-union-find-disjoint-set-has-poor-performance", "title": "Naive Functional Implementation of Union Find Disjoint Set has Poor Performance", "body": "<p>The following implemention of UFDS has poor performance.  Can someone enlighten me as to why this might be? Here is the profiling report: </p>\n\n<pre><code>    total time  =        0.10 secs   (98 ticks @ 1000 us, 1 processor)\n    total alloc =  78,869,168 bytes  (excludes profiling overheads)\n\nCOST CENTRE        MODULE    SRC                                        %time %alloc\n\nx.\\                Main      src/merging_communities.hs:67:54-71         37.8    0.0\nfoldMap            Main      src/merging_communities.hs:(31,3)-(32,55)   22.4    0.0\nx                  Main      src/merging_communities.hs:(65,1)-(68,79)   20.4   83.2\ngetElemTree        Main      src/merging_communities.hs:40:1-43          19.4    0.0\nmain.initialForest Main      src/merging_communities.hs:103:7-51          0.0   16.2\n</code></pre>\n\n<p><em>main.hs</em></p>\n\n<pre><code>   module Main where\n\nimport Control.Monad\nimport Control.Monad.State.Lazy\nimport Data.Foldable\nimport Data.Functor\nimport Data.List\nimport Data.Maybe\nimport Data.Monoid\nimport Prelude\nimport System.IO\nimport Text.Pretty.Simple\n\n--import Text.Pretty.Simple (pPrint)\n--The Union-Find algorithm and Disjoint Sets (UFDS) data structureare used which is able to efficiently (i.e. in nearly constant time) determine which set an item belongs to, \n--test if two items belong to the same set, and union two disjoint sets into one when needed. \n--It can be used to find connected components in an undirected graph, and can hence be used as part of Kruskal's algorithm for the Minimum Spanning Tree (MST) problem.\ndata Tree a =\n  Node a\n       [Tree a]\n  deriving (Show)\n\ninstance (Eq a) =&gt; Eq (Tree a) where\n  (Node a forestA) == (Node b forestB) = a == b &amp;&amp; forestA == forestB\n\ninstance Functor Tree where\n  fmap f (Node a []) = Node (f a) []\n  fmap f (Node a forest) = Node (f a) (fmap (fmap f) forest)\n\ninstance Foldable Tree where\n  foldMap f (Node a []) = f a\n  foldMap f (Node a xs) = f a &lt;&gt; foldMap (foldMap f) xs\n\n-- each disjoint set has a representative element which is used to uniquely identify the set. We can use a tree to represent a disjoint set where\n-- the representative element is the root node of the tree\nmakeSet :: a -&gt; Tree a\nmakeSet a = Node a []\n\ngetElemTree :: Eq a =&gt; a -&gt; [Tree a] -&gt; Maybe (Tree a)\ngetElemTree a forest = find (elem a) forest\n\nsize :: Tree a -&gt; Int\nsize (Node a []) = 1\nsize (Node a forest) = 1 + (sum $ fmap size forest)\n\ndepth :: Tree a -&gt; Int\ndepth (Node a []) = 1\ndepth (Node a forest) = 1 + (maximum $ fmap ((+ 1) . depth) forest)\n\nflatten :: Tree a -&gt; [a]\nflatten (Node a forest) = [a] ++ (foldMap flatten forest)\n\n-- set the parent of one of the roots to the other tree's root - which one we choose is based on our weighting\nunWeightedUnion :: Eq a =&gt; a -&gt; a -&gt; [Tree a] -&gt; [Tree a]\nunWeightedUnion a b forest\n  | isNothing treeA || treeA == treeB = forest\n  | otherwise =\n    let tA@(Node rootA forestA) = fromJust $ treeA\n        tB@(Node rootB forestB) = fromJust $ treeB\n     in changeRoot tA tB forest\n  where\n    treeA = getElemTree a forest\n    treeB = getElemTree b forest\n\nchangeRoot tA@(Node rootA forestA) tB@(Node rootB forestB) forest =\n  if (size tA &lt;= size tB)\n    then (Node rootA (tB : forestA)) : filter (\\t -&gt; t /= tB &amp;&amp; t /= tA) forest\n    else (Node rootB (tA : forestB)) : filter (\\t -&gt; t /= tB &amp;&amp; t /= tA) forest\n\n-- union by rank is a weighting which keeps our trees as shallow as possible When we weight by rank or tree depth we make the shallower tree root the child of the deeper tree's root\ngetRoot :: Tree a -&gt; a -- get the root node\ngetRoot (Node a _) = a\n\n-- return the name of the set containing the node x ie the root node of the set containing node x\n-- use path compression - if parent is not the root then set the parent of the node to the root\ndata Query\n  = M Int\n      Int\n  | Q Int\n  deriving (Show, Read)\n\nexecuteQuery :: [Query] -&gt; Int -&gt; StateT [Tree Int] IO Query\nexecuteQuery [] _ = return $ M 1 1\nexecuteQuery qs pop = do\n  forest &lt;- get\n  case head qs of\n    (M a b) -&gt; do\n      let newForest = unWeightedUnion a b forest\n      put newForest\n      executeQuery (tail qs) pop\n    (Q a) -&gt; do\n      liftIO $ print $ size $ fromJust $ getElemTree a forest\n      executeQuery (tail qs) pop\n\nmain = do\n  contents &lt;- readFile \"queries.txt\"\n  print $ lines contents\n  let population = head $ words contents\n  let queries = map read $ tail $ lines contents :: [Query]\n  let population = read $ head $ words contents :: Int\n  let initialForest = map makeSet [1 .. population]\n  execStateT (executeQuery queries population) initialForest\n</code></pre>\n\n<p><em>queries.txt</em></p>\n\n<pre><code>100000 200000\nM 68770 97917\nM 65906 74478\nM 78744 21384\nM 36186 31560\nQ 43063\nM 12923 73331\nM 91542 54702\nM 62459 96133\nM 13196 56121\nM 1648 86052\nM 99517 97247\nM 59768 66017\nQ 48274\nQ 96430\nM 44341 70873\nQ 74989\nQ 71357\nM 72482 16677\nQ 8219\n</code></pre>\n"}, {"tags": ["haskell", "ghci"], "comments": [{"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 6, "creation_date": 1527027998, "post_id": 50477204, "comment_id": 87968126, "body": "The <code>foldTree</code> function expects 3 parameters, but you&#39;re passing only 2 (as suggested in the error message)."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1527059572, "post_id": 50477204, "comment_id": 87976975, "body": "Add a <code>path</code> argument to your call."}], "answers": [{"tags": [], "owner": {"reputation": 8857, "user_id": 3414900, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/KlvbC.jpg?s=128&g=1", "display_name": "bartop", "link": "https://stackoverflow.com/users/3414900/bartop"}, "is_accepted": true, "score": 2, "last_activity_date": 1527067260, "creation_date": 1527067260, "answer_id": 50484525, "question_id": 50477204, "link": "https://stackoverflow.com/questions/50477204/no-instance-for-show-filepath-io-filepath-arising-from-a-use-of-print/50484525#50484525", "title": "No instance for (Show (FilePath -&gt; IO [FilePath])) arising from a use of \u2018print\u2019", "body": "<p>As simple as possible - signature of Your function <code>foldTree</code> is:</p>\n\n<pre><code>foldTree :: Iterator a -&gt; a -&gt; FilePath -&gt; IO a\n</code></pre>\n\n<p>You are supplying it with two arguments, one of type <code>Iterator [FilePath]</code> and second of type <code>FilePath</code>. Due to default partial application such call returns function with signature:</p>\n\n<pre><code>FilePath -&gt; IO [FilePath]\n</code></pre>\n\n<p>GHCI wants to display the result of Your call but it cannot, as this type has no defined instance of typeclass <code>Show</code>. And so, it gives You an error telling exactly this.</p>\n"}], "owner": {"reputation": 1601, "user_id": 259517, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/GtRrC.jpg?s=128&g=1", "display_name": "Tae", "link": "https://stackoverflow.com/users/259517/tae"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 186, "favorite_count": 0, "accepted_answer_id": 50484525, "answer_count": 1, "score": 0, "last_activity_date": 1527067260, "creation_date": 1527027463, "question_id": 50477204, "link": "https://stackoverflow.com/questions/50477204/no-instance-for-show-filepath-io-filepath-arising-from-a-use-of-print", "title": "No instance for (Show (FilePath -&gt; IO [FilePath])) arising from a use of \u2018print\u2019", "body": "<p>I am trying to fix and run every example on the Real World Haskell book and learn something in the process and I got stuck at <a href=\"http://book.realworldhaskell.org/read/io-case-study-a-library-for-searching-the-filesystem.html\" rel=\"nofollow noreferrer\">chapter 9</a>. By reading the comments I got the following code to compile:</p>\n\n<p><code>FoldDir.hs</code>:</p>\n\n<pre><code>import ControlledVisit\nimport Data.Char (toLower)\nimport Data.Time.Clock (UTCTime(..))\nimport System.Directory (Permissions(..))\nimport System.FilePath ((&lt;/&gt;), takeExtension, takeFileName)\n\ndata Iterate seed\n  = Done { unwrap :: seed }\n  | Skip { unwrap :: seed }\n  | Continue { unwrap :: seed }\n    deriving (Show)\n\ntype Iterator seed = seed -&gt; Info -&gt; Iterate seed\n\nfoldTree :: Iterator a -&gt; a -&gt; FilePath -&gt; IO a\nfoldTree iter initSeed path = do\n  endSeed &lt;- fold initSeed path\n  return (unwrap endSeed)\n  where\n    fold seed subpath = getUsefulContents subpath &gt;&gt;= walk seed\n    walk seed (name : names) = do\n      let path' = path &lt;/&gt; name\n      info &lt;- getInfo path'\n      case iter seed info of\n        done @ (Done _) -&gt; return done\n        Skip seed'      -&gt; walk seed' names\n        Continue seed'\n          | isDirectory info -&gt; do\n            next &lt;- fold seed' path'\n            case next of\n              done @ (Done _) -&gt; return done\n              seed''           -&gt; walk (unwrap seed'') names\n          | otherwise         -&gt; walk seed' names\n    walk seed _ = return (Continue seed)\n\natMostThreePictures :: Iterator [FilePath]\natMostThreePictures paths info\n  | length paths == 3\n    = Done paths\n  | isDirectory info &amp;&amp; takeFileName path == \".svn\"\n    = Skip paths\n  | extension `elem` [\".jpg\", \".png\"]\n    = Continue (path : paths)\n  | otherwise\n    = Continue paths\n  where\n    extension = map toLower (takeExtension path)\n    path = infoPath info\n\ncountDirectories count info =\n  Continue (if isDirectory info then count + 1 else count)\n</code></pre>\n\n<p><code>ControlledVisit.hs</code>:</p>\n\n<pre><code>module ControlledVisit where\n\nimport Control.Monad (forM, liftM)\nimport Data.Time.Clock (UTCTime(..))\nimport System.FilePath ((&lt;/&gt;))\nimport System.Directory\n  ( Permissions(..)\n  , getModificationTime\n  , getPermissions\n  , getDirectoryContents\n  )\nimport Control.Exception\n  ( bracket\n  , handle\n  , SomeException(..)\n  )\nimport System.IO\n  ( IOMode(..)\n  , hClose\n  , hFileSize\n  , openFile\n  )\n\ndata Info = Info\n  { infoPath :: FilePath\n  , infoPerms :: Maybe Permissions\n  , infoSize :: Maybe Integer\n  , infoModTime :: Maybe UTCTime\n  } deriving (Eq, Ord, Show)\n\ngetInfo :: FilePath -&gt; IO Info\ngetInfo path = do\n  perms &lt;- maybeIO (getPermissions path)\n  size &lt;- maybeIO (bracket (openFile path ReadMode) hClose hFileSize)\n  modified &lt;- maybeIO (getModificationTime path)\n  return (Info path perms size modified)\n\ntraverseDirs :: ([Info] -&gt; [Info]) -&gt; FilePath -&gt; IO [Info]\ntraverseDirs order path = do\n  names &lt;- getUsefulContents path\n  contents &lt;- mapM getInfo (path : map (path &lt;/&gt;) names)\n  liftM concat $ forM (order contents) $ \\ info -&gt; do\n    if isDirectory info &amp;&amp; infoPath info /= path\n      then traverseDirs order (infoPath info)\n      else return [info]\n\ngetUsefulContents :: FilePath -&gt; IO [String]\ngetUsefulContents path = do\n  names &lt;- getDirectoryContents path\n  return (filter (`notElem` [\".\", \"..\"]) names)\n\nisDirectory :: Info -&gt; Bool\nisDirectory = maybe False searchable . infoPerms\n\nmaybeIO :: IO a -&gt; IO (Maybe a)\nmaybeIO act = handle (\\ (SomeException _) -&gt; return Nothing) (Just `liftM` act)\n\ntraverseVerbose order path = do\n  names &lt;- getDirectoryContents path\n  let usefulNames = filter (`notElem` [\".\", \"..\"]) names\n  contents &lt;- mapM getEntryName (\"\" : usefulNames)\n  recursiveContents &lt;- mapM recurse (order contents)\n  return (concat recursiveContents)\n  where\n    getEntryName name = getInfo (path &lt;/&gt; name)\n    isDirectory info = case infoPerms info of\n      Nothing -&gt; False\n      Just perms -&gt; searchable perms\n    recurse info = do\n      if isDirectory info &amp;&amp; infoPath info /= path\n        then traverseVerbose order (infoPath info)\n        else return [info]\n</code></pre>\n\n<p>But when I try to run it in GHCi <a href=\"http://book.realworldhaskell.org/read/io-case-study-a-library-for-searching-the-filesystem.html#x_fQ\" rel=\"nofollow noreferrer\">as explained in the book</a> it fails with a weird error that as far as I understand is about GHCi itself:</p>\n\n<pre><code>Prelude&gt; :l FoldDir.hs\n[1 of 2] Compiling ControlledVisit  ( ControlledVisit.hs, interpreted )\n[2 of 2] Compiling Main             ( FoldDir.hs, interpreted )\nOk, two modules loaded.\n*Main&gt; foldTree atMostThreePictures []\n\n&lt;interactive&gt;:2:1: error:\n    \u2022 No instance for (Show (FilePath -&gt; IO [FilePath]))\n        arising from a use of \u2018print\u2019\n        (maybe you haven't applied a function to enough arguments?)\n    \u2022 In a stmt of an interactive GHCi command: print it\n</code></pre>\n\n<p>I think I understand the <code>No instance for (Show (FilePath -&gt; IO [FilePath]))</code> part but I am clueless about the <code>print it</code>. I know <code>it</code> is a special variable in GHCi that stores the evaluation result of the last expression and I guess the code is trying to print a function or a monad, but I don't get where it is happening.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1527009391, "post_id": 50473205, "comment_id": 87960015, "body": "Well that is fundamentally impossible. Since Haskell is a pure functional programming, and IO are also values. The only way to solve this is returning a &quot;no operation&quot; so to speak."}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 0, "creation_date": 1527009482, "post_id": 50473205, "comment_id": 87960056, "body": "<code>if r == &quot;father&quot; then print(f) else return ()</code> is what I would do. You HAVE to put something after <code>else</code>, but in this case <code>return ()</code> is a no-op."}], "answers": [{"comments": [{"owner": {"reputation": 191, "user_id": 6460833, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh5.googleusercontent.com/-S2b5NcKoNXs/AAAAAAAAAAI/AAAAAAAADM8/zSMN7qz8n2w/photo.jpg?sz=128", "display_name": "Swapnil Sharma", "link": "https://stackoverflow.com/users/6460833/swapnil-sharma"}, "edited": false, "score": 0, "creation_date": 1527009584, "post_id": 50473262, "comment_id": 87960102, "body": "Thanks. Do I  make <code>father</code> iterate over all the elements in list <code>relations</code>?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 191, "user_id": 6460833, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh5.googleusercontent.com/-S2b5NcKoNXs/AAAAAAAAAAI/AAAAAAAADM8/zSMN7qz8n2w/photo.jpg?sz=128", "display_name": "Swapnil Sharma", "link": "https://stackoverflow.com/users/6460833/swapnil-sharma"}, "edited": false, "score": 4, "creation_date": 1527009635, "post_id": 50473262, "comment_id": 87960124, "body": "@SwapnilSharma If, after some attempts of your own, you still have trouble with that, some details about what you tried and where it went wrong would make a fine additional question. But it is a <i>separate</i> question from this one."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1527009901, "post_id": 50473262, "comment_id": 87960239, "body": "Technically, one could write the partial function <code>father ((r, c, f):xs) = case r of &quot;father&quot; -&gt; print f</code>, since the <code>case</code> expression doesn&#39;t need to be exhaustive like the <code>if</code> expression does. (Which is not to day one <i>should</i> do this :) )"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 23, "last_activity_date": 1527009679, "last_edit_date": 1527009679, "creation_date": 1527009486, "answer_id": 50473262, "question_id": 50473205, "link": "https://stackoverflow.com/questions/50473205/how-do-i-use-if-then-else-statement-with-no-else-condition-in-haskell/50473262#50473262", "title": "How do I use if-then-else statement with no else condition in Haskell?", "body": "<p>Too bad, all <code>if</code>s come with <code>else</code>s. But that's okay, there's a distinguished do-nothing <code>IO</code> action.</p>\n\n<pre><code>father ((r, c, f):xs) = if r == \"father\" then print f else return ()\n</code></pre>\n\n<p>There are many other ways to skin this cat. One is pattern matching.</p>\n\n<pre><code>father ((\"father\", c, f):xs) = print f\nfather ((r, c, f):xs) = return ()\n</code></pre>\n\n<p>Another that is specific to monadic actions is to use <code>when</code>.</p>\n\n<pre><code>father ((r, c, f):xs) = when (r == \"father\") (print f)\n</code></pre>\n\n<p>Of course, that's just hiding the <code>else</code>, which is again <code>return ()</code>:</p>\n\n<pre><code>when p act = if p then act else pure () -- okay, it's actually pure, not return\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 6, "last_activity_date": 1527009899, "creation_date": 1527009899, "answer_id": 50473375, "question_id": 50473205, "link": "https://stackoverflow.com/questions/50473205/how-do-i-use-if-then-else-statement-with-no-else-condition-in-haskell/50473375#50473375", "title": "How do I use if-then-else statement with no else condition in Haskell?", "body": "<p>Every <code>if</code> must have an <code>else</code>.</p>\n\n<pre><code>father ((r, c, f):xs) =\n  if r == \"father\"\n    then print f\n    else _what\n</code></pre>\n\n<p>If you try to compile that, you'll be informed that there's a hole</p>\n\n<pre><code>_what :: IO ()\n</code></pre>\n\n<p>So you need to manufacture something of that type. Fortunately, that's easy:</p>\n\n<pre><code>father ((r, c, f):xs) =\n  if r == \"father\"\n    then print f\n    else pure ()\n</code></pre>\n\n<p><code>pure x</code> does nothing and returns <code>x</code>.</p>\n\n<p>Since what you're trying to do is quite common, there are two functions specifically designed for the task:</p>\n\n<pre><code>when :: Applicative f =&gt; Bool -&gt; f () -&gt; f ()\nwhen b m = if b then m else pure ()\n\nunless :: Applicative f =&gt; Bool -&gt; f () -&gt; f ()\nunless = when . not\n</code></pre>\n\n<p>You can find both of these functions in <code>Control.Monad</code>.</p>\n\n<pre><code>father ((r, c, f):xs) =\n  when (r == \"father\") $ print f\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 11, "last_activity_date": 1527010508, "creation_date": 1527010508, "answer_id": 50473527, "question_id": 50473205, "link": "https://stackoverflow.com/questions/50473205/how-do-i-use-if-then-else-statement-with-no-else-condition-in-haskell/50473527#50473527", "title": "How do I use if-then-else statement with no else condition in Haskell?", "body": "<p>The idiomatic Haskell way to solve such issues is to avoid mixing computation and I/O, when possible.</p>\n\n<p>In this case, instead of \"printing the names of all fathers\", you can first \"compute the names of all fathers\" (no I/O here) and then \"print the computed names\" (I/O here)</p>\n\n<pre><code>relations = \n   [ (\"father\", \"arushi\", \"anandan\")\n   , (\"mother\", \"arushi\", \"abigale\")\n   , (\"father\", \"anandan\", \"ayuta\")\n   , (\"mother\", \"anandan\", \"akanksha\")\n   ]\n\n-- compute only the fathers\nfathers = [ f | (\"father\", _, f) &lt;- relations ]\n\n-- print them\nmain :: IO ()\nmain = mapM_ putStrLn fathers\n</code></pre>\n\n<p>No <code>if</code> needed, since <code>mapM_</code> iterates over the list for us, and all the list entries have to be printed.</p>\n"}, {"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1527011683, "post_id": 50473593, "comment_id": 87961129, "body": "<code>main</code> above has a list type, instead of an IO type (+1, since that&#39;s easy to correct)"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1527012028, "post_id": 50473593, "comment_id": 87961298, "body": "Oh, right. I knew that you could easily change <code>[IO ()]</code> to <code>IO [()]</code>, and I knew that <code>main</code> just had to have <i>some</i> <code>IO</code> type, not necessarily <code>IO ()</code>, but then didn&#39;t quite connect those two facts correctly."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1527014478, "post_id": 50473593, "comment_id": 87962444, "body": "When you don&#39;t care about the resulting list, <code>sequence_</code> is marginally more efficient than <code>sequence</code>. And when, as here, you are actually doing <code>sequence . map</code> or <code>sequence_ . map</code>, there is <code>mapM</code> or <code>mapM_</code> for combining the two steps."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1527016292, "post_id": 50473593, "comment_id": 87963347, "body": "Indeed. Any idea why <code>traverse_</code> is not in the Prelude when <code>traverse&#47;MapM</code> and <code>mapM_</code> are?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1527019957, "post_id": 50473593, "comment_id": 87965006, "body": "I guess that&#39;s because <code>traverse_ &#47; for_</code> only require <code>Foldable</code> instead of <code>Applicative</code>, so they ended up in distinct modules, and only one of these got then merged in <code>Prelude</code>. I&#39;m also bothered by having to import another module for the <code>_</code> variant."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 6, "last_activity_date": 1527012139, "last_edit_date": 1527012139, "creation_date": 1527010812, "answer_id": 50473593, "question_id": 50473205, "link": "https://stackoverflow.com/questions/50473205/how-do-i-use-if-then-else-statement-with-no-else-condition-in-haskell/50473593#50473593", "title": "How do I use if-then-else statement with no else condition in Haskell?", "body": "<p>You can write a function that <em>always</em> writes the name, but then ensure it only gets called on values containing <code>father</code>.</p>\n\n<pre><code>relations :: [(String,String,String)]\nrelations = [(\"father\", \"arushi\", \"anandan\")\n            ,(\"mother\", \"arushi\", \"abigale\")\n            ,(\"father\", \"anandan\", \"ayuta\")\n            ,(\"mother\", \"anandan\", \"akanksha\")\n            ]\n\nprintName :: (String,String,String) -&gt; IO ()\nprintName (_, _, name) = print name\n\nprintFathers :: [(String,String,String)] -&gt; [IO ()]\nprintFathers = fmap printName . filter (\\(f, _, _) -&gt; f == \"father\")\n\nmain = sequence (printFathers relations)\n</code></pre>\n\n<p>The definition of <code>filter</code> hides the logic of skipping certain elements of the list. The argument to <code>filter</code> always returns either <code>True</code> or <code>False</code>, but the result of <code>filter</code> only contains those elements for which you want to call <code>print</code>.</p>\n\n<p>(<code>sequence</code>, here, just turns the list of <code>IO</code> values into the single <code>IO</code> value that <code>main</code> must be by \"swapping\" <code>IO</code> and <code>[]</code>. You could incorporate this into <code>printName</code> by defining it as <code>sequence . fmap printName . ...</code>, and replace <code>sequence . fmap foo</code> with <code>traverse foo</code>.)</p>\n\n<hr>\n\n<p>Note that <code>if foo then bar else baz</code> is syntactic sugar for a complete <code>case</code> expression</p>\n\n<pre><code>case foo of\n  True -&gt; foo\n  False -&gt; baz\n</code></pre>\n\n<p>However, a <code>case</code> expression doesn't have to handle every possible value of the <code>foo</code> argument. You <em>could</em> write</p>\n\n<pre><code>father ((r, c, f):xs) = (case r of \"father\" -&gt; print f) : father xs\n</code></pre>\n\n<p>It would be instructive, though, to see what happens when <code>r</code> <em>doesn't</em> match <code>\"father\"</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 136, "user_id": 1553834, "user_type": "registered", "accept_rate": 17, "profile_image": "https://i.stack.imgur.com/Rk6Gb.jpg?s=128&g=1", "display_name": "urbanslug", "link": "https://stackoverflow.com/users/1553834/urbanslug"}, "is_accepted": false, "score": 1, "last_activity_date": 1545286455, "last_edit_date": 1545286455, "creation_date": 1527074728, "answer_id": 50487190, "question_id": 50473205, "link": "https://stackoverflow.com/questions/50473205/how-do-i-use-if-then-else-statement-with-no-else-condition-in-haskell/50487190#50487190", "title": "How do I use if-then-else statement with no else condition in Haskell?", "body": "<p>I feel the need to explain <strong>why</strong> an if must have an else in Haskell.</p>\n\n<p>Haskell is an implementation of typed lambda calculus and in lambda calculus we have <strong>expressions</strong> and <strong>values</strong> nothing else.\nIn it we evaluate/reduce expressions to values or into expressions that can't be reduced any further.</p>\n\n<p>Now in typed lambda calculus we add types and abstractions but we still to evaluate down to values and expressions one of these expressions being <code>if predicate then value else value</code>.\nThis <code>if</code> expression must reduce to a value therefore both branches of the if expression must reduce to values of the same type.\nIf we had an \"if predicate then value\" it means we would have a branch that doesn't reduce to a value.</p>\n\n<blockquote>\n  <p>you can use <em>run</em>, <em>reduce</em> and <em>evaluate</em> interchangeably in the context of this answer.</p>\n</blockquote>\n\n<p>When we run Haskell code we are reducing lambda terms into values or expressions that can't be reduced any further.\nThe compiler exists to help us write valid lambda terms.</p>\n\n<p>Going by lambda calculus we see that the if statement must, when evaluated, reduce to a value (or be capable of doing so) and because Haskell is implemented typed lambda calculus an if expression in Haskell without an else wouldn't have the possibility of evaluating down to a value <em>all the time</em>.</p>\n\n<p>TL;DR</p>\n\n<p>The \"if ... then ... else\" statement should when evaluated reduce to a <strong>value</strong>.\nAs long as both branches of the if statement evaluates to the same type it evaluates correctly.</p>\n\n<p>If any branch doesn't evaluate to a value or are going to evaluate to values of different types that is not a valid lambda term and the code will not typecheck.</p>\n"}], "owner": {"reputation": 191, "user_id": 6460833, "user_type": "registered", "accept_rate": 67, "profile_image": "https://lh5.googleusercontent.com/-S2b5NcKoNXs/AAAAAAAAAAI/AAAAAAAADM8/zSMN7qz8n2w/photo.jpg?sz=128", "display_name": "Swapnil Sharma", "link": "https://stackoverflow.com/users/6460833/swapnil-sharma"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4294, "favorite_count": 0, "answer_count": 5, "score": 8, "last_activity_date": 1545286455, "creation_date": 1527009261, "question_id": 50473205, "link": "https://stackoverflow.com/questions/50473205/how-do-i-use-if-then-else-statement-with-no-else-condition-in-haskell", "title": "How do I use if-then-else statement with no else condition in Haskell?", "body": "<p>I have a list of relations and I wish to print the names of all fathers. Since there's no <code>else</code> condition, the following code doesn't work:</p>\n\n<pre><code>relations = [(\"father\", \"arushi\", \"anandan\"), (\"mother\", \"arushi\", \"abigale\"), (\"father\", \"anandan\", \"ayuta\"), (\"mother\", \"anandan\", \"akanksha\")]\n\nfather ((r, c, f):xs) = if r == \"father\" then print(f)\n\nmain = do\n    father (relations)\n</code></pre>\n\n<p>I do not wish to put any statement after <code>else</code>.</p>\n"}, {"tags": ["haskell", "recursion-schemes"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1527009118, "post_id": 50473134, "comment_id": 87959895, "body": "So your expressions always have one variable?"}, {"owner": {"reputation": 4970, "user_id": 1726797, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a76b9e0b9a393201d9897082bf70bf07?s=128&d=identicon&r=PG", "display_name": "nnnmmm", "link": "https://stackoverflow.com/users/1726797/nnnmmm"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1527009206, "post_id": 50473134, "comment_id": 87959927, "body": "At most one, yes, if I understand your question correctly."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1527013536, "post_id": 50473971, "comment_id": 87961968, "body": "Yep. I came to the same conclusion, but then wasted time trying to find a way (within <code>recursion-schemes</code>) to get rid of the <code>In</code>s on the RHS. If there&#39;s a way, I couldn&#39;t find it."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1527013607, "post_id": 50473971, "comment_id": 87962003, "body": "I think you reverse the pair compared to <code>recursion-schemes</code>, which might not be the best thing. I also think it might be better to pattern match on the pairs explicitly, with <code>x</code> and <code>dx</code> in whatever order."}, {"owner": {"reputation": 4970, "user_id": 1726797, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a76b9e0b9a393201d9897082bf70bf07?s=128&d=identicon&r=PG", "display_name": "nnnmmm", "link": "https://stackoverflow.com/users/1726797/nnnmmm"}, "edited": false, "score": 0, "creation_date": 1527013671, "post_id": 50473971, "comment_id": 87962035, "body": "I think this still has a bug, it returns 3*(1+x&#178;-3x)&#178;*(1+x&#178;-3x) for input (1+x&#178;-3x)&#179; -- edit: Nevermind, I was using the <code>para</code> from the linked series which has its arguments reversed."}], "tags": [], "owner": {"reputation": 34861, "user_id": 110081, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/cSvwm.jpg?s=128&g=1", "display_name": "Roman Cheplyaka", "link": "https://stackoverflow.com/users/110081/roman-cheplyaka"}, "is_accepted": true, "score": 5, "last_activity_date": 1527013977, "last_edit_date": 1527013977, "creation_date": 1527012455, "answer_id": 50473971, "question_id": 50473134, "link": "https://stackoverflow.com/questions/50473134/recursion-scheme-for-symbolic-differentiation/50473971#50473971", "title": "Recursion scheme for symbolic differentiation", "body": "<p>Look at the differentiation rule for product:</p>\n\n<pre><code>(u v)' = u' v + v' u\n</code></pre>\n\n<p>What do you need to know to differentiate a product? You need to know the derivatives of the subterms (<code>u'</code>, <code>v'</code>), as well as their values (<code>u</code>, <code>v</code>).</p>\n\n<p>This is exactly what a <em>paramorphism</em> gives you.</p>\n\n<pre><code>para\n  :: Functor f\n  =&gt; (f (b, Term f) -&gt; b)\n  -&gt; Term f -&gt; b\npara g (In a) = g $ (para g &amp;&amp;&amp; id) &lt;$&gt; a\n\nderivePara :: Term Expr -&gt; Term Expr\nderivePara = para $ In . \\case\n  Var -&gt; Const 1\n  Const _ -&gt; Const 0\n  Plus x y -&gt; Plus (fst x) (fst y)\n  Mul x y -&gt; Plus\n    (In $ Mul (fst x) (snd y))\n    (In $ Mul (snd x) (fst y))\n  Pow x c -&gt; Mul\n    (In (Const c))\n    (In (Mul\n      (In (Pow (snd x) (c-1)))\n      (fst x)))\n</code></pre>\n\n<p>Inside the paramorphism, <code>fst</code> gives you access to the derivative of a subterm, while <code>snd</code> gives you the term itself.</p>\n\n<blockquote>\n  <p>As an extension to this question, is there a recursion scheme for differentiating and eliminating \"empty\" Exprs such as <code>Plus (Const 0)</code> x that arise as a result of differentiation -- in one pass over the data?</p>\n</blockquote>\n\n<p>Yes, it's still a paramorphism. The easiest way to see this is to have smart constructors such as</p>\n\n<pre><code>plus :: Term Expr -&gt; Term Expr -&gt; Expr (Term Expr)\nplus (In (Const 0)) (In x) = x\nplus (In x) (In (Const 0)) = x\nplus x y = Plus x y\n</code></pre>\n\n<p>and use them when defining the algebra. You could probably express this as some kind of para-cata fusion, too.</p>\n"}], "owner": {"reputation": 4970, "user_id": 1726797, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a76b9e0b9a393201d9897082bf70bf07?s=128&d=identicon&r=PG", "display_name": "nnnmmm", "link": "https://stackoverflow.com/users/1726797/nnnmmm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 297, "favorite_count": 0, "accepted_answer_id": 50473971, "answer_count": 1, "score": 2, "last_activity_date": 1527013977, "creation_date": 1527009030, "last_edit_date": 1527010677, "question_id": 50473134, "link": "https://stackoverflow.com/questions/50473134/recursion-scheme-for-symbolic-differentiation", "title": "Recursion scheme for symbolic differentiation", "body": "<p>Following terminology from <a href=\"http://blog.sumtypeofway.com/an-introduction-to-recursion-schemes/\" rel=\"nofollow noreferrer\">this excellent series</a>, let's represent an expression such as <code>(1 + x^2 - 3x)^3</code> by a <code>Term Expr</code>, where the data types are the following:</p>\n\n<pre><code>data Expr a =\n    Var\n  | Const Int\n  | Plus a a\n  | Mul a a\n  | Pow a Int\n  deriving (Functor, Show, Eq)\n\ndata Term f = In { out :: f (Term f) }\n</code></pre>\n\n<p>Is there a recursion scheme suitable for performing symbolic differentiation? I feel like it's almost a Futumorphism specialized to <code>Term Expr</code>, i.e. <code>futu deriveFutu</code> for an appropriate function <code>deriveFutu</code>:</p>\n\n<pre><code>data CoAttr f a  \n  = Automatic a\n  | Manual (f (CoAttr f a))\n\nfutu :: Functor f =&gt; (a -&gt; f (CoAttr f a)) -&gt; a -&gt; Term f  \nfutu f = In &lt;&lt;&lt; fmap worker &lt;&lt;&lt; f where  \n    worker (Automatic a) = futu f a\n    worker (Manual g) = In (fmap worker g)\n</code></pre>\n\n<p>This looks pretty good, except that the underscored variables are <code>Term</code>s instead of <code>CoAttr</code>s:</p>\n\n<pre><code>deriveFutu :: Term Expr -&gt; Expr (CoAttr Expr (Term Expr))\nderiveFutu (In (Var))      = (Const 1)\nderiveFutu (In (Const _))  = (Const 0)\nderiveFutu (In (Plus x y)) = (Plus (Automatic x) (Automatic y))\nderiveFutu (In (Mul x y))  = (Plus (Manual (Mul (Automatic x) (Manual _y)))\n                                   (Manual (Mul (Manual _x) (Automatic y)))\n                             )\nderiveFutu (In (Pow x c))  = (Mul (Manual (Const c)) (Manual (Mul (Manual (Pow _x (c-1))) (Automatic x))))\n</code></pre>\n\n<p>The version without recursion schemes looks like this:</p>\n\n<pre><code>derive :: Term Expr -&gt; Term Expr\nderive (In (Var))      = In (Const 1)\nderive (In (Const _))  = In (Const 0)\nderive (In (Plus x y)) = In (Plus (derive x) (derive y))\nderive (In (Mul x y))  = In (Plus (In (Mul (derive x) y)) (In (Mul x (derive y))))\nderive (In (Pow x c))  = In (Mul (In (Const c)) (In (Mul (In (Pow x (c-1))) (derive x))))\n</code></pre>\n\n<p>As an extension to this question, is there a recursion scheme for differentiating and eliminating \"empty\" <code>Expr</code>s such as <code>Plus (Const 0) x</code> that arise as a result of differentiation -- in one pass over the data?</p>\n"}, {"tags": ["list", "haskell", "benchmarking", "io-monad", "criterion"], "comments": [{"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 3, "creation_date": 1527007265, "post_id": 50472466, "comment_id": 87958945, "body": "Try giving each function an explicit type signature.  Its a great exercise that is both informative at this stage of learning and helps localize compilation messages throughout all stages of your Haskell learning/use."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1527007813, "post_id": 50472466, "comment_id": 87959241, "body": "During the benchmark, you will be repeatedly executing <code>printElements foo</code> for some <code>foo</code>. Do you want <code>foo</code> to be different in each execution?"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1527015826, "post_id": 50472466, "comment_id": 87963117, "body": "BTW with this benchmark you will largely be measuring how long it takes to print things, since generating random numbers and traversing a list take a negligible amount of time in comparison."}], "answers": [{"comments": [{"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 0, "creation_date": 1527030075, "post_id": 50472739, "comment_id": 87968705, "body": "And of course <code>randomList 10 &gt;&gt;= whnf printElements</code> can also be written <code>do { list &lt;- randomList 10; whnf printElements list }</code>, or <code>whnf printElements =&lt;&lt; randomList 10</code>, which makes it a bit clearer that bind is an <i>application</i> operator (apply impure function to impure argument) like <code>$</code> (pure function to pure argument) and <code>&lt;$&gt;</code> (pure function to impure argument)."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 5, "last_activity_date": 1527007891, "last_edit_date": 1527007891, "creation_date": 1527007539, "answer_id": 50472739, "question_id": 50472466, "link": "https://stackoverflow.com/questions/50472466/passing-a-randomly-generated-list-as-a-parameter-in-haskell/50472739#50472739", "title": "Passing a randomly generated list as a parameter in Haskell", "body": "<p>Put briefly, you need to <em>bind</em> your function to the <code>IO</code> value, instead of trying to <em>apply</em> it to the value wrapped inside the <code>IO</code> value.</p>\n\n<pre><code>-- instead of whnf printElements (randomList 10)\nrandomList 10 &gt;&gt;= whnf printElements\n</code></pre>\n\n<hr>\n\n<p><code>randomList</code> does not return a list of values; it returns an <code>IO</code> action that, when executed, can produce a list of values. Ignoring the various constraints induced by the implementation, the type is</p>\n\n<pre><code>randomList :: (...) =&gt; t1 -&gt; IO [t]  -- not t1 -&gt; [t]\n</code></pre>\n\n<p>As such, you can't directly work with the list of values that the <code>IO</code> action can produce; you need to use the monad instance to <em>bind</em> the value to an appropriate function. <code>whnf printElements</code> is one such function; it takes a list and returns an <code>IO</code> action.</p>\n\n<pre><code>whnf printElements :: Show a =&gt; [a] -&gt; IO ()\n</code></pre>\n\n<p>Instead of pulling the list out and passing it to <code>whnf printElements</code>, we \"push\" the function <em>into</em> an <code>IO</code> value using <code>&gt;&gt;=</code>. That operator's type, specialized to the <code>IO</code> monad, is</p>\n\n<pre><code>(&gt;&gt;=) :: IO a -&gt; (a -&gt; IO b) -&gt; IO b\n</code></pre>\n\n<p>In this case, the first <code>IO a</code> value is the <code>IO [t]</code> value returned by <code>randomList</code>. <code>whnf printElements</code> is the <code>a -&gt; IO b</code> function we bind to.\nThe result is a new <code>IO</code> value that take the first <code>IO</code> value, pulls out the wrapped value, applies the given function, and returns the result.</p>\n\n<p>In other words, the <code>IO</code> monad itself takes care of pulling apart the result from <code>randomList</code> and applying your function to it, rather than you doing it explicitly.</p>\n\n<hr>\n\n<p>(You might have noticed that I've said that <code>&gt;&gt;=</code> binds a value to a function and vice versa. It is perhaps more accurate to say that <code>&gt;&gt;=</code> binds them together into a single <code>IO</code> action.)</p>\n"}], "owner": {"reputation": 23, "user_id": 9618887, "user_type": "registered", "profile_image": "https://graph.facebook.com/10213768237054859/picture?type=large", "display_name": "Awsaf Rahman Protic", "link": "https://stackoverflow.com/users/9618887/awsaf-rahman-protic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1527007891, "creation_date": 1527006412, "question_id": 50472466, "link": "https://stackoverflow.com/questions/50472466/passing-a-randomly-generated-list-as-a-parameter-in-haskell", "title": "Passing a randomly generated list as a parameter in Haskell", "body": "<p>I am new to Haskell and really having trouble with the whole IO thing. </p>\n\n<p>I am trying to find out how long it takes to traverse a list in haskell. I wanted to generate a list of random numbers and pass it as a parameter to a function so that I can print each element of the list. I am using CRITERION package for the benchmark. Here is the code:</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\nimport System.Random\nimport Control.Exception\nimport Criterion.Main\n\nprintElements [] = return ()\nprintElements (x:xs) = do print(x)\n                          printElements xs\n\nrandomList 0 = return []\nrandomList n = do\n  x  &lt;- randomRIO (1,100)\n  xs &lt;- randomList (n-1)\n  return (x:xs)\n\n\nmain = defaultMain [\n  bgroup \"printElements\" [ bench \"[1,2,3]\"  $ whnf printElements (randomList 10)\n               , bench \"[4,5,6]\"  $ whnf printElements [4,5,6,4,2,5]\n               , bench \"[7,8,9]\"  $ whnf printElements [7,8,9,2,3,4]\n               , bench \"[10,11,12]\" $ whnf printElements [10,11, 12,4,5]\n               ]\n  ]\n</code></pre>\n\n<p>Error when I run the code: </p>\n\n<pre><code>listtraversal.hs:18:67:\n    Couldn't match expected type \u2018[a0]\u2019 with actual type \u2018IO [t0]\u2019\n    In the second argument of \u2018whnf\u2019, namely \u2018(randomList 10)\u2019\n    In the second argument of \u2018($)\u2019, namely\n      \u2018whnf printElements (randomList 10)\u2019\n</code></pre>\n"}, {"tags": ["haskell", "types", "nomenclature"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1526979890, "post_id": 50463764, "comment_id": 87940602, "body": "A data type constructor is <i>not</i> a type. It is a &quot;value&quot;, so one meta level lower than types."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1526980211, "post_id": 50463764, "comment_id": 87940808, "body": "The same with <code>class</code> and <code>instance</code>. I think it is a bit unfortunate that the nomenclature of Haskell is quite similar to that of most imperative programming languages, but actually has some very different meanings."}], "answers": [{"comments": [{"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 0, "creation_date": 1527042652, "post_id": 50464953, "comment_id": 87971571, "body": "In GHC Haskell with <code>ConstraintKinds</code>, typeclasses do introduce new types in a way, not for ordinary types (of kind <code>*</code>) but for constraints; <code>class Num a where { \u2026 }; class Functor f where { \u2026 }</code> creates the type constructors <code>Num :: * -&gt; Constraint</code> and <code>Functor :: (* -&gt; *) -&gt; Constraint</code>. Constraints are still types, they\u2019re just not inhabited by values."}], "tags": [], "owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "is_accepted": true, "score": 6, "last_activity_date": 1526983483, "creation_date": 1526983483, "answer_id": 50464953, "question_id": 50463764, "link": "https://stackoverflow.com/questions/50463764/relation-between-the-different-types-in-haskell/50464953#50464953", "title": "Relation Between the Different Types in Haskell", "body": "<p><code>data</code> and <code>newtype</code> introduce new types (or type constructors actually - <code>Maybe</code> isn't a type, but <code>Maybe a</code> is a type for any <code>a</code> that is a type).</p>\n\n<p>A <code>data</code> declaration introduces both a new type (what's left of the <code>=</code>) and a way to represent data of that type (what's right of the <code>=</code>).</p>\n\n<p>So for example, if you have a data declaration like this:</p>\n\n<pre><code>data SomeType = SomeConstructor\n</code></pre>\n\n<p>Then you have introduced a new type called <code>SomeType</code>, and a way to construct values of <code>SomeType</code>, namely the constructor <code>SomeConstructor</code> (which incidentally doesn't have any parameters, so is the the only value inhabiting this type).</p>\n\n<p>A typeclass doesn't do <em>either</em> of these things (and neither does an <code>instance</code>). A typeclass introduces a <em>constraint</em> and a bunch of polymorphic functions that should be available if that constraint is met. An <code>instance</code> is basically saying \"this type meets this constraint\" by providing an implementation for these functions. So a <code>class</code> isn't really introducing new types, it's just a way to provide ad-hoc polymorphism for existing types.</p>\n\n<p>For instance, the <code>Show</code> typeclass is roughly this:</p>\n\n<pre><code>class Show a where -- a is an instance of Show if\n   show :: a -&gt; String -- it has a function called show with this signature\n</code></pre>\n\n<p>(Note that the actual <code>Show</code> class in <code>Prelude</code> doesn't <em>quite</em> look like this)</p>\n\n<p><code>show</code> now has the type <code>Show a =&gt; a -&gt; String</code>, which you can read as</p>\n\n<blockquote>\n  <p>for all a, if they meet the constraint <code>Show</code> (or alternatively, if they are an instance of <code>Show</code>) this is a function that takes an <code>a</code> and returns a string</p>\n</blockquote>\n\n<p>An instance for this would look like this</p>\n\n<pre><code>instance Show SomeType where\n  show SomeConstructor = \"SomeConstructor\"\n</code></pre>\n\n<p>Which means</p>\n\n<blockquote>\n  <p><code>SomeType</code> satisfies the constraint <code>Show</code>, and I'll show you how by providing an implementation of <code>show</code></p>\n</blockquote>\n\n<p>That's roughly the gist of it. There are language extensions that allow somewhat more involved things to happen with type classes and instances, but you don't need to worry about that for now.</p>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 3, "last_activity_date": 1526999276, "creation_date": 1526999276, "answer_id": 50470228, "question_id": 50463764, "link": "https://stackoverflow.com/questions/50463764/relation-between-the-different-types-in-haskell/50470228#50470228", "title": "Relation Between the Different Types in Haskell", "body": "<p>You may have heard of <em>kinds</em>, which are the \"types of types\" in Haskell. A type is something with kind <code>*</code>, which represents things that can have values:</p>\n\n<pre><code>&gt; :kind Int\nInt :: *\n&gt; :kind Char\nChar :: *\n</code></pre>\n\n<p>Type constructors are things with kind <code>* -&gt; *</code>; a type constructor takes a type (something of kind <code>*</code>) and returns another type.</p>\n\n<pre><code>&gt; :kind Maybe\nMaybe :: * -&gt; *\n&gt; :kind []\n[] :: * -&gt; *\n</code></pre>\n\n<p>Applying a type constructor gives you a new thing of kind <code>*</code>:</p>\n\n<pre><code>&gt; :kind Maybe Int\nMaybe Int :: *\n&gt; :kind [] Float\n[] Float :: *\n</code></pre>\n\n<p>(The parser allow <code>[Foo]</code> as a special case for <code>[] Foo</code>.)</p>\n\n<p>There are other things that are kinds as well. One of them is <code>Constraint</code>, and you create a <code>Constraint</code> with a constraint constructor (otherwise known as a type class). Give a constraint constructor a type, and you get back a constraint.</p>\n\n<pre><code>&gt; :kind Show\nShow :: * -&gt; Constraint\n&gt; :kind Show Int\nShow Int :: Constraint\n&gt; :kind Show (Int -&gt; Char)\nShow (Int -&gt; Char) :: Constraint\n</code></pre>\n\n<p>(Note that the latter is properly kinded even though no instance for <code>Int -&gt; Char</code> is defined.)</p>\n\n<hr>\n\n<p>In this light, <code>=&gt;</code> looks something like an operator, rather than just special syntax. Its arguments are a \"list\" of constraints (albeit using universally quantified type variables instead of concrete types) and a type, and its return value is a \"constrained\" type (let's pretend there is a kind <code>ConstrainedType</code> in addition to <code>*</code>, <code>* -&gt; *</code>, and <code>Constraint</code>).</p>\n\n<pre><code>:t show\nshow :: Show a =&gt; a -&gt; String\n\n-- Taking extreme liberties with syntax\n-- :k (=&gt;)\n-- (=&gt;) :: [Constraint] -&gt; * -&gt; ConstrainedType\n-- A section?\n-- :k (Show a =&gt;)\n-- (Show a =&gt;) :: * -&gt; ConstrainedType\n-- :k (Showa =&gt; * -&gt; String)\n-- Show a =&gt; a -&gt; String :: ConstrainedType\n</code></pre>\n"}], "owner": {"reputation": 66677, "user_id": 169992, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/OeNfG.png?s=128&g=1", "display_name": "Lance Pollard", "link": "https://stackoverflow.com/users/169992/lance-pollard"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 208, "favorite_count": 0, "accepted_answer_id": 50464953, "answer_count": 2, "score": 2, "last_activity_date": 1526999276, "creation_date": 1526979834, "last_edit_date": 1526981514, "question_id": 50463764, "link": "https://stackoverflow.com/questions/50463764/relation-between-the-different-types-in-haskell", "title": "Relation Between the Different Types in Haskell", "body": "<p>From my understanding, there are 4 \"types\" in Haskell:</p>\n\n<ul>\n<li>Algebraic data type with <code>data</code></li>\n<li><del>Data type constructors (what's after the <code>=</code> in the <code>data</code> types; not types technically, I don't think)</del></li>\n<li>Type alias with <code>type</code></li>\n<li>Typeclasses with <code>class</code></li>\n<li>Type instances with <code>instance</code></li>\n</ul>\n\n<p>The questions are:</p>\n\n<ol>\n<li>If there are more kinds of types in Haskell. If so, what there relations are.</li>\n<li>What the difference is between a <code>data</code> type and a <code>class</code> typeclass. They seem similar, though obviously they have some different features. Same with (3).</li>\n<li>What the difference is between a <code>data</code> type and a <code>instance</code> typeclass instance.</li>\n</ol>\n\n<p>I am new to Haskell.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1526975330, "post_id": 50462250, "comment_id": 87937822, "body": "It is not complaining about the number of arguments of <code>plusTree</code>, but about the number of arguments of the <code>Node</code> constructor in your function. <code>Node</code> has three parameters, so you should handle nodes like <code>Node x lx lr</code>."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 2, "creation_date": 1526975338, "post_id": 50462250, "comment_id": 87937827, "body": "A <code>Node</code> is supposed to have two subtrees. One of them is missing in <code>(Node x xs)</code>, <code>(Node y ys)</code>, etc."}], "answers": [{"comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1527000071, "post_id": 50462504, "comment_id": 87954247, "body": "I could see <code>plusTree</code> being defined either way. Your suggestion works because <code>(+)</code> has an identity element, so you can pretend the <code>Null</code> tree is a tree of whatever shape you need, but filled with 0s. A more general function <code>mappendTree</code> could work for any tree based on a monoid. The most general case, though, probably needs to just ignore nodes in one tree when there is no corresponding node in the other."}], "tags": [], "owner": {"reputation": 60, "user_id": 9558665, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/12207c900feea196895fb476e2160bfd?s=128&d=identicon&r=PG&f=1", "display_name": "RecurringError", "link": "https://stackoverflow.com/users/9558665/recurringerror"}, "is_accepted": false, "score": 4, "last_activity_date": 1526975912, "last_edit_date": 1526975912, "creation_date": 1526975604, "answer_id": 50462504, "question_id": 50462250, "link": "https://stackoverflow.com/questions/50462250/is-there-a-way-to-solve-different-numbers-of-arguments-in-haskell/50462504#50462504", "title": "Is there a way to solve different numbers of arguments in Haskell?", "body": "<p>the compiler is telling you that you are applying node wrong in this line:</p>\n\n<pre><code>plusTree (Node x xs) (Node y ys) = Node (x+y) (plusTree xs ys) \n</code></pre>\n\n<p>because a node takes \"Int Tree Tree\" and you are trying to match it with \"x xs\"</p>\n\n<p>oh, and those 2 previous cases are the equivalant of 0+n right?\nso shouldn't they be n? </p>\n\n<p>changed code:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>    plusTree :: Tree -&gt; Tree -&gt; Tree\n    plusTree Null         ys     = ys\n    plusTree xs          Null    = xs\n    plusTree (Node x lxTree rxTree) (Node y lyTree ryTree)  = \n        Node (x+y) (plusTree lxTree lyTree) (plusTree rxTree lyTree)\n</code></pre>\n\n\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 6, "last_activity_date": 1526975621, "creation_date": 1526975621, "answer_id": 50462506, "question_id": 50462250, "link": "https://stackoverflow.com/questions/50462250/is-there-a-way-to-solve-different-numbers-of-arguments-in-haskell/50462506#50462506", "title": "Is there a way to solve different numbers of arguments in Haskell?", "body": "<p>The compiler does <em>not</em> complain about the number of parameters of the <code>plusTree</code> function. It complains about the fact that your <code>Node</code> constructor should have three parameters. Indeed:</p>\n\n<pre><code>data Tree = Null | <b>Node Int Tree Tree</b> deriving Show</code></pre>\n\n<p>Here you thus define a <code>Node</code> as a <em>data constructor</em> that has three parameters: an <code>Int</code>, and two <code>Tree</code>s. But in your function, you only write two of these:</p>\n\n<pre><code>plusTree <b>(Node x xs)</b> <b>(Node y ys)</b> = Node (x+y) (plusTree xs ys) </code></pre>\n\n<p>hence that is not a correct <code>Node</code> instance.</p>\n\n<p>I assume that this is some sort of <em>binary</em> tree where the second parameter is the <em>left</em> subtree, and the third parameter is the <em>right</em> subtree. In that case we need to perform double recursion:</p>\n\n<pre><code>plusTree :: Tree -&gt; Tree -&gt; Tree\nplusTree Null         ys     = Null\nplusTree xs          Null    = Null\nplusTree (Node x <b>lx rx</b>) (Node y <b>ly ry</b>) = Node (x+y) (plusTree <b>lx ly</b>) <b>(plusTree rx ry)</b></code></pre>\n\n<p>The first clauses define variables <code>xs</code> and <code>ys</code> that you do not use. In that case, one usually uses an underscore, such that if we turn on all warnings, the compiler will not complain about a variable not used:</p>\n\n<pre><code>plusTree :: Tree -&gt; Tree -&gt; Tree\nplusTree Null <b>_</b> = Null\nplusTree <b>_</b> Null = Null\nplusTree (Node x lx rx) (Node y ly ry) = Node (x+y) (plusTree lx ly) (plusTree rx ry)</code></pre>\n"}], "owner": {"reputation": 15, "user_id": 9819140, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "4320", "link": "https://stackoverflow.com/users/9819140/4320"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 773, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1526975952, "creation_date": 1526974696, "last_edit_date": 1526975952, "question_id": 50462250, "link": "https://stackoverflow.com/questions/50462250/is-there-a-way-to-solve-different-numbers-of-arguments-in-haskell", "title": "Is there a way to solve different numbers of arguments in Haskell?", "body": "<p>Hello I want to make definition of <code>plusTree</code>.</p>\n\n<p>Definition for this.</p>\n\n<p><img src=\"https://i.stack.imgur.com/9ZEaR.jpg\" alt=\"enter image description here\"></p>\n\n<pre><code>data Tree = Null | Node Int Tree Tree   deriving Show\n\n\nplusTree :: Tree -&gt; Tree -&gt; Tree\nplusTree Null         ys     = Null\nplusTree xs          Null    = Null\nplusTree (Node x xs) (Node y ys)  = Node (x+y) (plusTree xs ys) \n</code></pre>\n\n<p>And I create the above code. </p>\n\n<blockquote>\n  <p>Constructor `Node' should have 3 arguments, but has been given 2</p>\n  \n  <p>In the pattern: Node x xs</p>\n  \n  <p>In an equation for `plusTree': plusTree (Node x xs) (Node y ys) = Node\n  (x + y) (interactive:IHaskell544.plusTree xs ys)</p>\n</blockquote>\n\n<p>Also I got a above error. So I tried with various method. and i finally though it will be work when i add something in 4th argument. </p>\n\n<pre><code>plusTree :: Tree -&gt; Tree -&gt; Tree\nplusTree Null         ys     = Null\nplusTree xs          Null    = Null\nplusTree (Node x xs) (Node y ys)(Node z zs)  = Node (x+y+z) (plusTree xs ys zs)\n</code></pre>\n\n<p>Now i got a another error. and also i tried several method again. but can't fixed it.</p>\n\n<blockquote>\n  <p>'Equations for `plusTree' have different numbers of arguments'</p>\n  \n  <p>:2:1-35</p>\n  \n  <p>:4:1-79</p>\n</blockquote>\n\n<p>Can somebody give advice or solution to help me? now i'm blocked in the wall.</p>\n"}, {"tags": ["oop", "haskell", "functional-programming"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1526974370, "post_id": 50462095, "comment_id": 87937320, "body": "Well in a lot of programming languages <code>new</code> is only used to allocate objects on the heap, etc. It is thus some sort of &quot;malloc&quot;, if you allocate on the stack, then you typically do not use <code>new</code>."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1526974407, "post_id": 50462095, "comment_id": 87937337, "body": "Another vital difference is that it is an immutable object. So whether it is <code>myinstance</code>, or another value, does not matter, since you later can not alter the attributes of the element."}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 66677, "user_id": 169992, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/OeNfG.png?s=128&g=1", "display_name": "Lance Pollard", "link": "https://stackoverflow.com/users/169992/lance-pollard"}, "edited": false, "score": 1, "creation_date": 1527017265, "post_id": 50462283, "comment_id": 87963761, "body": "@LancePollard I agree with you that there are no expressions classified by the type <code>Maybe</code>, but not for the reason you say. <code>Maybe</code> is indeed a (type) constructor."}], "tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": true, "score": 6, "last_activity_date": 1526977337, "last_edit_date": 1592644375, "creation_date": 1526974838, "answer_id": 50462283, "question_id": 50462095, "link": "https://stackoverflow.com/questions/50462095/equivalent-of-creating-objects-in-haskell/50462283#50462283", "title": "Equivalent of creating objects in Haskell", "body": "<p>There is no such thing as <code>Maybe 10</code> in Haskell. There is <code>Maybe Int</code>, which is a <em>type</em>.</p>\n<p>We create a <em>value</em> of a certain type, <em>directly</em>, as</p>\n<pre><code>x :: Maybe Int\nx = Just 10\n</code></pre>\n<p>or</p>\n<pre><code>y :: Maybe Int\ny = Nothing\n</code></pre>\n<p>Simple and direct.</p>\n<hr />\n<p><em>edit:</em> <code>Maybe</code> is a <em>type constructor</em>. <code>Just</code> and <code>Nothing</code> are <em>data constructors</em>. By writing <code>Maybe Int</code> we &quot;create&quot; a type. There can't be a definition <code>z :: Maybe ; z = .....</code>.</p>\n<p>This is known as &quot;kind&quot;: the kind of <code>Maybe</code> is <code>* -&gt; *</code>, while e.g. <code>Int</code>'s is <code>*</code> and so is <code>Maybe Int</code>'s. Try <code>:k</code> at GHCi prompt to see this:</p>\n<pre><code>~&gt; :k Int\nInt :: *\n\n~&gt; :k Maybe\nMaybe :: * -&gt; *\n\n~&gt; :k Maybe Int\nMaybe Int :: *\n</code></pre>\n<p>Of course we don't actually create a new type when we write <code>&quot;Maybe Int</code>, it's just that <code>Maybe</code> by itself is not a type of things yet (types of &quot;things&quot; have kind <code>*</code>).</p>\n<p>The definition for <code>Maybe</code> is what creates the types <code>Maybe a</code>, for any <code>a</code> we might use. This is known as <em>parametric</em> polymorphism.</p>\n<p>So in Haskell, we don't have objects (in the OOP sense). We have values and types.</p>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 2, "last_activity_date": 1526974990, "creation_date": 1526974990, "answer_id": 50462338, "question_id": 50462095, "link": "https://stackoverflow.com/questions/50462095/equivalent-of-creating-objects-in-haskell/50462338#50462338", "title": "Equivalent of creating objects in Haskell", "body": "<blockquote>\n  <p>What kind of object x is above. If Maybe is a parameterized data type, then x is ~something~ type, not sure.</p>\n</blockquote>\n\n<p>You can not construct a <code>Maybe 10</code>, you can for example construct a <code>Just 10</code>. In case <code>10</code> is here an <code>Int</code> (well technically it can be <em>any</em> numerical type, but let us ignore that for now), then you constructed a <code>Maybe Int</code>.</p>\n\n<p>Note that <code>a</code> in <code>Maybe a</code>, is one <em>meta</em> level higher: it works with types. Hence <code>a</code> is a <em>type</em> parameter. It thus does not take as value <code>10</code>, but for example <code>Int</code>.</p>\n\n<p>What you <em>can</em> do however is define a <em>type alias</em> for <code>Maybe Int</code>, for example:</p>\n\n<pre><code><b>type</b> X = Maybe Int</code></pre>\n\n<p>Note that we here use <code>type</code> as a type alias, <em>not</em> <code>data</code> to construct a data type.</p>\n\n<p>Types (and type aliasses) always start with an upper case, so we can not define a type <code>x</code>, only a type <code>X</code>. A type has <em>no</em> default constructor (which is typically the case in OO programming languages).</p>\n\n<blockquote>\n  <p>How to create an instance of x.</p>\n</blockquote>\n\n<p>Haskell can derive the most generic type of an expression itself. We thus write an expression that has the type of <code>Maybe Int</code>, so for example</p>\n\n<pre><code>Just 10\n</code></pre>\n\n<p>In case the type would be too generic (here it will be <code>Num a =&gt; Maybe a</code>), we can give a hint to Haskell by using two consecutive colons (<code>::</code>), for eample:</p>\n\n<pre><code>Just 10 :: Maybe Int\n</code></pre>\n\n<p>or since we already introduced the type alias <code>X</code>:</p>\n\n<pre><code>Just 10 :: X\n</code></pre>\n\n<blockquote>\n  <p>What is the instance of x for Maybe, since we passed it 10. Wondering, if the instance value is 10 and has type Int.</p>\n</blockquote>\n\n<p>Welll as said before, types in Haskell have <em>no</em> default constructor. We here have two candidates: <code>Just n</code> with <code>n</code> an <code>Int</code> (in case we use type <code>X</code>), or <code>Nothing</code>. So we pick one of the two:</p>\n\n<pre><code>Just 10 :: X\nNothing :: X\n</code></pre>\n\n<p>Since you can not <em>change</em> the state of an object anymore after you constructed it (i.e. all objects in Haskell are immutable), that means that it would be strange that a default constructor sets some initial data, and then later methods would change that object.</p>\n\n<p>You can therefore see a <em>data constructor</em> (here <code>Just</code> and <code>Nothing</code>) as a labelled container that holds a group of parameters together in a container, and labels it with what constructor was used. So a graphical view of the objects would be:</p>\n\n<pre><code>+------+   +---------+\n| Just |   | Nothing |\n+------+   +---------+\n|   o  |\n+---|--+\n    |\n    v\n +----+\n | 10 |\n +----+\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 11096, "user_id": 2749717, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46af1ef54856d737d52b7667afd240ee?s=128&d=identicon&r=PG&f=1", "display_name": "bipll", "link": "https://stackoverflow.com/users/2749717/bipll"}, "is_accepted": false, "score": 2, "last_activity_date": 1526979950, "last_edit_date": 1526979950, "creation_date": 1526976356, "answer_id": 50462721, "question_id": 50462095, "link": "https://stackoverflow.com/questions/50462095/equivalent-of-creating-objects-in-haskell/50462721#50462721", "title": "Equivalent of creating objects in Haskell", "body": "<p>When you write an algebraic type definition as</p>\n\n<pre><code>data Maybe a = Nothing | Just a\n</code></pre>\n\n<p>the LHS is a type construction expression (it states that <code>Maybe</code> has kind <code>* -&gt; *</code>), and the RHS is a disjunction of alternatives each one being a <em>value constructor</em>, so for type <code>Maybe a</code>, <code>Just</code> is an unary constructor that creates an object of this type, and <code>Nothing</code> is the nullary one.</p>\n"}], "owner": {"reputation": 66677, "user_id": 169992, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/OeNfG.png?s=128&g=1", "display_name": "Lance Pollard", "link": "https://stackoverflow.com/users/169992/lance-pollard"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 590, "favorite_count": 0, "accepted_answer_id": 50462283, "answer_count": 3, "score": 5, "last_activity_date": 1531055421, "creation_date": 1526974132, "last_edit_date": 1531055421, "question_id": 50462095, "link": "https://stackoverflow.com/questions/50462095/equivalent-of-creating-objects-in-haskell", "title": "Equivalent of creating objects in Haskell", "body": "<p>I am trying to understand how the following are used:</p>\n\n<pre><code>data Maybe a = Nothing | Just a\ndata Either a b = Left a | Right b\n</code></pre>\n\n<p>From my understanding these are <em>parameterized algebraic data types</em>. Coming from an OO background, I would now like to create an instance of these objects. If I do something like:</p>\n\n<pre><code>x = Maybe 10\n</code></pre>\n\n<p>Is that now a subclass/sub-algebraic-data-type, or wondering what that object is called. I would assume it is a <em>type</em> of some sort. If so, then I am wondering how to create an <em>instance</em> of <code>x</code>. In OO land I would do:</p>\n\n<pre><code>myinstance = new x\n</code></pre>\n\n<p>This is where coming to Haskell gets me lost and I'm not sure where to search. A few questions to summarize:</p>\n\n<ol>\n<li>What kind of object <code>x</code> is above. If <code>Maybe</code> is a parameterized data type, then x is <em>~something~</em> type, not sure.</li>\n<li>How to create an instance of <code>x</code>.</li>\n<li>What is the instance of <code>x</code> for Maybe, since we passed it 10. Wondering, if the instance value is 10 and has type Int.</li>\n</ol>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user1781434"}, "edited": false, "score": 0, "creation_date": 1526973160, "post_id": 50461693, "comment_id": 87936659, "body": "I think it makes more sense to think of sum types as typed disjoint unions. Subclasses in e.g. OO languages on the other hand share data layout, whereas in Haskell, the data constructors can be completely disjoint."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 3, "creation_date": 1526974694, "post_id": 50461693, "comment_id": 87937492, "body": "<code>Bool</code> is a type, while <code>False</code> and <code>True</code> are values. A key difference lies in that."}], "answers": [{"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": true, "score": 1, "last_activity_date": 1526977878, "creation_date": 1526977878, "answer_id": 50463171, "question_id": 50461693, "link": "https://stackoverflow.com/questions/50461693/the-difference-between-algebraic-data-types-and-subclasses-in-data-bool-false/50463171#50463171", "title": "The difference between algebraic data types and subclasses in data Bool = False | True", "body": "<blockquote>\n  <p>It makes more sense to think of sum types as typed disjoint unions. Subclasses in  OO languages on the other hand share data layout, whereas in Haskell, the data constructors can be completely disjoint. \u2013 <a href=\"https://stackoverflow.com/users/1781434/tobias\">Tobias</a></p>\n</blockquote>\n\n\n\n<blockquote>\n  <p>Bool is a type, while False and True are values. A key difference lies in that. \u2013 <a href=\"https://stackoverflow.com/users/2751851/duplode\">duplode</a> </p>\n</blockquote>\n\n<p>To see it, try <code>:k</code> at GHCi propmt:</p>\n\n<pre><code>~&gt; :k Bool\nBool :: *\n\n~&gt; :k False\n***error***\n</code></pre>\n\n<p>This is because <code>Bool</code> is a type of things, and <code>False</code> (creates) a thing. It is a (nullary) data constructor, which happens to not require any arguments:</p>\n\n<pre><code>x :: Bool\nx = False\n</code></pre>\n\n<p>Things have types:</p>\n\n<pre><code>~&gt; :t False\nFalse :: Bool\n\n~&gt; :t x\nx :: Bool\n\n~&gt; :t Bool\n***error***\n</code></pre>\n"}], "owner": {"reputation": 66677, "user_id": 169992, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/OeNfG.png?s=128&g=1", "display_name": "Lance Pollard", "link": "https://stackoverflow.com/users/169992/lance-pollard"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 62, "favorite_count": 0, "accepted_answer_id": 50463171, "answer_count": 1, "score": 1, "last_activity_date": 1526977878, "creation_date": 1526972742, "question_id": 50461693, "link": "https://stackoverflow.com/questions/50461693/the-difference-between-algebraic-data-types-and-subclasses-in-data-bool-false", "title": "The difference between algebraic data types and subclasses in data Bool = False | True", "body": "<p>I am not really familiar with Haskell but am looking through some of it. I noticed <a href=\"https://github.com/jorendorff/talks/blob/master/algebraic-data-types/adts.md#example-bool\" rel=\"nofollow noreferrer\">this</a>:</p>\n\n<pre><code>data Bool = False | True\n</code></pre>\n\n<p>In an OO language this could be done sort of using subclasses:</p>\n\n<pre><code>class Bool\nclass False &lt; Bool\nclass True &lt; Bool\n</code></pre>\n\n<p>Wondering at a high level what the difference is between these two constructs. Wondering if a simple algebraic data type can be considered a class and its subclasses. If not, why not.</p>\n"}, {"tags": ["haskell", "ghc"], "comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 3, "creation_date": 1526970840, "post_id": 50460493, "comment_id": 87935487, "body": "I suspect it is often legacy leftover, since <a href=\"http://ghc.readthedocs.io/en/8.0.1/using-optimisation.html#ghc-flag--funbox-small-strict-fields\" rel=\"nofollow noreferrer\"><code>-funbox-small-strict-fields</code> is on by default since ghc 7.8</a>"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 3, "creation_date": 1526970922, "post_id": 50460493, "comment_id": 87935524, "body": "I have also been programming haskell for 12 years and seldom use such annotations, then again I have never dived into squeezing every last millisecond out of a piece of haskell code."}], "answers": [{"comments": [{"owner": {"reputation": 3794, "user_id": 137871, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/48469162d45686615c6bf0eb4304bf26?s=128&d=identicon&r=PG", "display_name": "insitu", "link": "https://stackoverflow.com/users/137871/insitu"}, "edited": false, "score": 0, "creation_date": 1526980373, "post_id": 50461447, "comment_id": 87940916, "body": "Do I understand correctly that <code>UNPACK</code> requires <code>!</code>? And this is only ever needed for performance reasons (in terms of memory consumption and/or GC overhead and/or CPU time spent boxing/unboxing)?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 3794, "user_id": 137871, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/48469162d45686615c6bf0eb4304bf26?s=128&d=identicon&r=PG", "display_name": "insitu", "link": "https://stackoverflow.com/users/137871/insitu"}, "edited": false, "score": 0, "creation_date": 1526997614, "post_id": 50461447, "comment_id": 87952552, "body": "@insitu, yes, only strict fields can be unpacked. Lazy ones need those extra heap objects to preserve semantics. And yes, <code>UNPACK</code> only affects performance. The  rule of thumb is that small things should be unpacked and large things shouldn&#39;t be, but it really depends on context."}, {"owner": {"reputation": 3794, "user_id": 137871, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/48469162d45686615c6bf0eb4304bf26?s=128&d=identicon&r=PG", "display_name": "insitu", "link": "https://stackoverflow.com/users/137871/insitu"}, "edited": false, "score": 0, "creation_date": 1527141707, "post_id": 50461447, "comment_id": 88016322, "body": "I guess my next question would be: Why is it common to make all fields of records strict? Thanks for the answer."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 3794, "user_id": 137871, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/48469162d45686615c6bf0eb4304bf26?s=128&d=identicon&r=PG", "display_name": "insitu", "link": "https://stackoverflow.com/users/137871/insitu"}, "edited": false, "score": 0, "creation_date": 1527144418, "post_id": 50461447, "comment_id": 88017670, "body": "@insitu, one reason is to allow unpacking. The other main one is to avoid space leaks and excess allocation. Laziness is usually either essential for performance or detrimental to it."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 9, "last_activity_date": 1527103603, "last_edit_date": 1527103603, "creation_date": 1526971731, "answer_id": 50461447, "question_id": 50460493, "link": "https://stackoverflow.com/questions/50460493/why-is-it-common-to-mark-record-fields-with-unpack-and-strictness/50461447#50461447", "title": "Why is it common to mark record fields with UNPACK and strictness?", "body": "<p>The pragma may be a bit ugly, but it avoids a lot <em>more</em> ugliness elsewhere. When performance is critical, programmers often need to choose a particular shape for a data constructor. Suppose I have</p>\n\n<pre><code>data Point = Point Int Int\ndata Segment = Segment Point Point\n</code></pre>\n\n<p>That makes good logical sense, but it has a bunch of extra indirection: one <code>Segment</code> consists of <em>seven</em> heap objects. If I'm working with a lot of segments, that's pretty bad.</p>\n\n<p>I could squash this flat by hand:</p>\n\n<pre><code>data Segment = Segment Int# Int# Int# Int#\n</code></pre>\n\n<p>but now I've lost the fact that the numbers represent points, and everything I do with a segment will have to involve rather inconvenient and weird unboxed operations.</p>\n\n<p>Fortunately, there's a better way:</p>\n\n<pre><code>-- The small strict Int fields will be unpacked by default\n-- with any reasonably recent GHC version.\ndata Point = Point !Int !Int\n\ndata Segment = Segment {-# UNPACK #-} !Point {-# UNPACK #-} !Point\n</code></pre>\n\n<p>This still gives me one heap object per segment, but I can use <code>Point</code>s and <code>Int</code>s and (generally) rely on the compiler unboxing everything nicely.</p>\n"}], "owner": {"reputation": 3794, "user_id": 137871, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/48469162d45686615c6bf0eb4304bf26?s=128&d=identicon&r=PG", "display_name": "insitu", "link": "https://stackoverflow.com/users/137871/insitu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 484, "favorite_count": 4, "accepted_answer_id": 50461447, "answer_count": 1, "score": 9, "last_activity_date": 1527103603, "creation_date": 1526967385, "last_edit_date": 1526971134, "question_id": 50460493, "link": "https://stackoverflow.com/questions/50460493/why-is-it-common-to-mark-record-fields-with-unpack-and-strictness", "title": "Why is it common to mark record fields with UNPACK and strictness?", "body": "<p>I noticed this pattern is very common in Haskell libraries:</p>\n\n<pre><code>data Foo = Foo { field :: {-# UNPACK #-} !Sometype } \n</code></pre>\n\n<p>e.g. <code>UNPACK</code>ing a field's type and making it strict.</p>\n\n<p>I understand what's the effect of the pragma and annotation but I don't understand why it is so pervasive: I have been programming in Haskell for 15 years and seldom used strictness annotation, and never <code>UNPACK</code> pragma.</p>\n\n<p>If this idiom is so useful, why not make it less \"ugly\"?</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 1, "creation_date": 1526971217, "post_id": 50460128, "comment_id": 87935659, "body": "TIL <code>((undefined :: Void) == undefined) = True</code>.  Weird."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1526971844, "post_id": 50460128, "comment_id": 87935968, "body": "@luqui, I agree it&#39;s weird. Edward Kmett likes it that way."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 2, "last_activity_date": 1526965466, "creation_date": 1526965466, "answer_id": 50460128, "question_id": 50460027, "link": "https://stackoverflow.com/questions/50460027/what-is-the-point-of-seq-in-absurd-function-definition-in-haskell/50460128#50460128", "title": "What is the point of seq in absurd function definition in Haskell", "body": "<p>That definition is real old, used only for backwards compatibility in the <code>void</code> package. The version in <code>base</code> is much simpler:</p>\n\n<pre><code>data Void\n\nabsurd :: Void -&gt; a\nabsurd x = case x of\n</code></pre>\n\n<p>That empty <code>case</code> is a relatively new feature. The version in <code>void</code> is compatible with older GHC versions, and tries to thread a weird needle of getting good error messages (by forcing the value) and letting GHC know that evaluation will fail (for dead code removal). It's not the most reliable thing. But really, it's probably not worth worrying too much about now.</p>\n"}, {"tags": [], "owner": {"reputation": 51262, "user_id": 208257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8d59503078761ba50620cbee4348882e?s=128&d=identicon&r=PG", "display_name": "Dan Burton", "link": "https://stackoverflow.com/users/208257/dan-burton"}, "is_accepted": false, "score": 3, "last_activity_date": 1526967027, "creation_date": 1526967027, "answer_id": 50460423, "question_id": 50460027, "link": "https://stackoverflow.com/questions/50460027/what-is-the-point-of-seq-in-absurd-function-definition-in-haskell/50460423#50460423", "title": "What is the point of seq in absurd function definition in Haskell", "body": "<p>It is impossible to actually construct a value of type Void. Therefore, any value you have that claims to be of type Void must be some sort of error. By seq'ing the value, the error is surfaced.</p>\n\n<p>For the original issue requesting this feature, see: <a href=\"https://github.com/ekmett/void/issues/2\" rel=\"nofollow noreferrer\">https://github.com/ekmett/void/issues/2</a></p>\n"}], "owner": {"reputation": 249, "user_id": 4643591, "user_type": "registered", "profile_image": "https://graph.facebook.com/10206103105435558/picture?type=large", "display_name": "Marius Catalin", "link": "https://stackoverflow.com/users/4643591/marius-catalin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 83, "favorite_count": 1, "answer_count": 2, "score": 4, "last_activity_date": 1526967027, "creation_date": 1526964808, "last_edit_date": 1526965142, "question_id": 50460027, "link": "https://stackoverflow.com/questions/50460027/what-is-the-point-of-seq-in-absurd-function-definition-in-haskell", "title": "What is the point of seq in absurd function definition in Haskell", "body": "<p>Function definition looks like this:</p>\n\n<pre><code>absurd :: Void -&gt; a\nabsurd a = a `seq` spin a where\n  spin (Void b) = spin b\n</code></pre>\n\n<p>It makes any difference?</p>\n"}, {"tags": ["haskell", "heap", "huffman-code"], "comments": [{"owner": {"reputation": 8857, "user_id": 3414900, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/KlvbC.jpg?s=128&g=1", "display_name": "bartop", "link": "https://stackoverflow.com/users/3414900/bartop"}, "edited": false, "score": 2, "creation_date": 1526981449, "post_id": 50457865, "comment_id": 87941669, "body": "In Huffman tree You will still need frequency of characters to properly group together the leafs. And I don&#39;t know why leaf would need to store a list of Chars. The data structure has to look differently."}, {"owner": {"reputation": 187, "user_id": 9446315, "user_type": "registered", "profile_image": "https://graph.facebook.com/582382402100368/picture?type=large", "display_name": "Aleksa Jovanovic", "link": "https://stackoverflow.com/users/9446315/aleksa-jovanovic"}, "reply_to_user": {"reputation": 8857, "user_id": 3414900, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/KlvbC.jpg?s=128&g=1", "display_name": "bartop", "link": "https://stackoverflow.com/users/3414900/bartop"}, "edited": false, "score": 0, "creation_date": 1526987854, "post_id": 50457865, "comment_id": 87945749, "body": "Give me an example bartop \ud83d\ude04"}], "answers": [{"comments": [{"owner": {"reputation": 187, "user_id": 9446315, "user_type": "registered", "profile_image": "https://graph.facebook.com/582382402100368/picture?type=large", "display_name": "Aleksa Jovanovic", "link": "https://stackoverflow.com/users/9446315/aleksa-jovanovic"}, "edited": false, "score": 0, "creation_date": 1527271460, "post_id": 50526737, "comment_id": 88081343, "body": "First of all, thank you for answering. I thought this is over, since i posted question 3 days ago.  All of the things you have said in the post i already know. I have implemented my min heap (that&#39;s how i learn, first i implement my functions and after i  use dose from some modules or whatever).  The thing is that i dont know how to make tree from leafs to the root.  1. Create a leaf node for each symbol and add it to the priority queue. And where should i store those leafs? In some list or what?  In c and python i have done this task successfully, but in haskell... Much more complica"}, {"owner": {"reputation": 187, "user_id": 9446315, "user_type": "registered", "profile_image": "https://graph.facebook.com/582382402100368/picture?type=large", "display_name": "Aleksa Jovanovic", "link": "https://stackoverflow.com/users/9446315/aleksa-jovanovic"}, "edited": false, "score": 0, "creation_date": 1527271725, "post_id": 50526737, "comment_id": 88081456, "body": "in c and python there is a simpler way to do this within recursion"}], "tags": [], "owner": {"reputation": 493, "user_id": 6889286, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/76d9b8a4d03d0de0a49eac62a5569c9e?s=128&d=identicon&r=PG&f=1", "display_name": "Kartik Sabharwal", "link": "https://stackoverflow.com/users/6889286/kartik-sabharwal"}, "is_accepted": true, "score": 1, "last_activity_date": 1527309258, "last_edit_date": 1527309258, "creation_date": 1527242996, "answer_id": 50526737, "question_id": 50457865, "link": "https://stackoverflow.com/questions/50457865/building-huffman-tree-using-min-heap-in-haskell/50526737#50526737", "title": "Building Huffman tree using min-heap in Haskell", "body": "<p>You need to make a Huffman Tree with a min heap, and you said \"I have no idea how to make Huffman Tree from min heap\". Let's figure out what you need to do before you start coding, especially in a language that you might not be familiar with.</p>\n\n<p>I suppose we should check the internet for a way to make a Huffman Tree. How about the Wikipedia page on Huffman Coding? (<a href=\"https://en.wikipedia.org/wiki/Huffman_coding\" rel=\"nofollow noreferrer\">https://en.wikipedia.org/wiki/Huffman_coding</a>)</p>\n\n<blockquote>\n  <p>The simplest construction algorithm uses a <em>priority queue</em> where the\n  node with lowest probability is given highest priority:</p>\n  \n  <ol>\n  <li>Create a leaf node for each symbol and add it to the priority queue.</li>\n  <li>While there is more than one node in the queue:\n  \n  <ul>\n  <li>Remove the two nodes of highest priority (lowest probability) from\n  the queue </li>\n  <li>Create a new internal node with these two nodes as\n  children and with probability equal to the sum of the two nodes'\n  probabilities. </li>\n  <li>Add the new node to the queue.</li>\n  </ul></li>\n  <li>The remaining node is the root node and the tree is complete.</li>\n  </ol>\n</blockquote>\n\n<p>You already have code in place to find the frequency of each symbol in a given string - that's your <code>frequencyOfCharacters</code> function.</p>\n\n<p>All you need now is a priority queue! You can definitely find a way to implement a priority queue using a min heap.</p>\n\n<p>I hope this helps you piece the logic together.</p>\n\n<p>If you want to deal with the problem step-by-step, why don't you start by trying to make a Huffman Tree using a working implementation of a priority queue (<a href=\"http://hackage.haskell.org/package/PSQueue\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/PSQueue</a>)?</p>\n\n<p>Once you're done with that, you can try to replace this readymade module with a small queue module of your own using a working implementation of a min heap (<a href=\"http://hackage.haskell.org/package/heap\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/heap</a>).</p>\n\n<p>Finally, you can write a barebones min heap module by yourself (you have a lot of the code already) and replace the external heap module with that.</p>\n\n<p><strong>Update:</strong> Some more concrete suggestions on how to build the tree. This requires a little setup, so please bear with me. Suppose you have a <code>Tree.hs</code> module that allows you to work with binary trees:</p>\n\n<pre><code>module Tree where\n\n-- Binary Tree\ndata Tree k v =\n    Empty\n  | Node (k, v) (Tree k v) (Tree k v)\n    deriving ( Show )\n\n-- takes a (key, value) pair and returns a binary tree\n-- containing one node with that pair\nsingleton :: (k, v) -&gt; Tree k v\nsingleton = undefined\n\n-- takes three things: a (key, value) pair, a binary tree t1\n-- and another binary tree t2\n-- then it constructs the tree\n--    (key, val)\n--   /         \\\n-- t1           t2\njoinWith :: (k, v) -&gt; Tree k v -&gt; Tree k v -&gt; Tree k v\njoinWith = undefined\n\n-- returns the value associated with the (key, value) pair\n-- stored in the root node of the binary tree\nvalue :: Tree k v -&gt; v\nvalue = undefined\n</code></pre>\n\n<p>and you also have a <code>Queue.hs</code> module which lets you work with priority queues (I'm assuming you have a working min-heap module)</p>\n\n<pre><code>module Queue where\n\nimport Heap\n\n-- a priority queue\ntype Queue k v = Heap k v\n\n-- returns an empty queue\nempty :: (Ord v)  =&gt; Queue k v\nempty = undefined\n\n-- adds a (key, value) pair to the queue and returns a\n-- new copy of the queue containing the inserted pair\nenqueue :: (Ord v) =&gt; (k, v) -&gt; Queue k v -&gt; Queue k v\nenqueue = undefined\n\n-- removes the lowest-value (key, value) pair from the queue\n-- and returns a tuple consisting of the removed pair\n-- and a copy of the queue with the pair removed\ndequeue :: (Ord v) =&gt; Queue k v -&gt; ((k, v), Queue k v)\ndequeue = undefined\n\n-- returns the number of elements in the queue\nsize :: (Ord v) =&gt; Queue k v -&gt; Int\nsize = undefined\n</code></pre>\n\n<p>Then this is how you might try to make a <code>Huffman.hs</code> module using the tools at your disposal.</p>\n\n<pre><code>module Huffman where\n\nimport Queue\nimport Tree\n\ntype HuffmanTree = Tree Char Int\n\n-- takes a list of (character, frequency) pairs and turns them into\n-- a Huffman Tree\nmakeHuffmanTree :: [(Char, Int)] -&gt; HuffmanTree\nmakeHuffmanTree pairs = let\n  nodeList = map (\\pair -&gt; (singleton pair, snd pair)) pairs\n  nodeQueue = foldr enqueue empty nodeList\n    in\n  reduceNodes nodeQueue\n\n-- takes pairs of nodes from the queue and combines them\n-- till only one node containing the full Huffman Tree is\n-- present in the queue\n-- then this last node is dequeued and returned\nreduceNodes :: Queue HuffmanTree Int -&gt; HuffmanTree\nreduceNodes q\n  | size q == 0 = error \"no nodes!\" \n  | size q == 1 = fst (fst (dequeue q))\n  | otherwise   = let\n      ((tree1, freq1), q') = dequeue q\n      ((tree2, freq2), q'') = dequeue q'\n      freqSum = freq1 + freq2\n      newTree = joinWith ('.', freqSum) tree1 tree2\n        in\n      reduceNodes (enqueue (newTree, freqSum) q'')\n</code></pre>\n\n<p>Since the types check out, I successfully compiled a stack project with these modules. When you think you have the Huffman Tree-building code you want, you can just fill in the <code>undefined</code> functions with what they're actually supposed to do and you're good!</p>\n"}], "owner": {"reputation": 187, "user_id": 9446315, "user_type": "registered", "profile_image": "https://graph.facebook.com/582382402100368/picture?type=large", "display_name": "Aleksa Jovanovic", "link": "https://stackoverflow.com/users/9446315/aleksa-jovanovic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 758, "favorite_count": 0, "accepted_answer_id": 50526737, "answer_count": 1, "score": 0, "last_activity_date": 1527309258, "creation_date": 1526945890, "question_id": 50457865, "link": "https://stackoverflow.com/questions/50457865/building-huffman-tree-using-min-heap-in-haskell", "title": "Building Huffman tree using min-heap in Haskell", "body": "<p>I am having a huge problem with this. I don't have any idea how to make Huffman tree since it is being built bottom-up (from the liefs to the root).</p>\n\n<p>I am new to Haskell and functional programming. I have seen there are other posts similar to mine, but they did not help me. </p>\n\n<p>This is my code</p>\n\n<pre><code>    import Data.Map\n\ntype Value = Int\ntype Key = [Char]\ntype NodeValue = (Key,Value)\n\ndata Heap_ a = Empty\n        | Node a (Heap_ a) (Heap_ a)\n        deriving(Show, Eq)\n\ntype Heap a = Heap_ NodeValue\n\nfrequencyOfCharacters :: [Char] -&gt; Map Key Value\nfrequencyOfCharacters [] = Data.Map.empty\nfrequencyOfCharacters (character:text) = insertWith (+) [character] 1 (frequencyOfCharacters text)\n\nmakeLeaf :: NodeValue -&gt; Heap a\nmakeLeaf a = Node a Empty Empty\n\nmergeHeaps :: Heap a -&gt; Heap a -&gt; Heap a\nmergeHeaps Empty rightHeap = rightHeap\nmergeHeaps leftHeap Empty = leftHeap\nmergeHeaps leftHeap@(Node a lefta righta) rightHeap@(Node b leftb rightb)\n    | snd a &lt; snd b = Node a (mergeHeaps lefta rightHeap) righta\n    | otherwise = Node b leftb (mergeHeaps leftHeap rightb)\n\naddToHeap :: Heap a-&gt;NodeValue-&gt;Heap a\naddToHeap Empty a =  makeLeaf a\naddToHeap h a = mergeHeaps h (makeLeaf a)\n\n\ntakeHeadFromHeap :: Heap a -&gt; (NodeValue,Heap a)\ntakeHeadFromHeap Empty = ((\"\",-1), Empty)\ntakeHeadFromHeap (Node a leftBranch rightBranch) = (a, mergeHeaps leftBranch rightBranch)\n\nmakeHeap :: Map Key Value -&gt; Heap a\nmakeHeap map_ = makeHeap_ $ toList map_\n\nmakeHeap_ :: [(Key,Value)] -&gt; Heap a\nmakeHeap_ [] = Empty\nmakeHeap_ (x:xs) = addToHeap (makeHeap_ xs) x\n\n\nhuffmanEntry :: [Char]-&gt; Heap a\nhuffmanEntry text = makeHeap $ frequencyOfCharacters text\n</code></pre>\n\n<p>I am thinking about this data structure for Huffman tree</p>\n\n<pre><code>data HuffmanTree h = Leaf [Char]\n                   | NodeHuff [Char] (HuffmanTree h) (HuffmanTree h)\n                   deriving(Show, Eq)\n</code></pre>\n\n<p>but i have no idea how to make Huffman tree from min heap.</p>\n\n<p>After this line of code in ghci min heap is made from input string</p>\n\n<pre><code> *Main&gt; huffmanEntry \"Aasdqweqweasd\"\n</code></pre>\n"}, {"tags": ["haskell", "pointfree"], "comments": [{"owner": {"reputation": 109956, "user_id": 159145, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/r8ryC.png?s=128&g=1", "display_name": "Dai", "link": "https://stackoverflow.com/users/159145/dai"}, "edited": false, "score": 18, "creation_date": 1526916232, "post_id": 50451946, "comment_id": 87916932, "body": "Uhm.... should I tell him?"}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 1, "creation_date": 1526916311, "post_id": 50451946, "comment_id": 87916978, "body": "Have you tried actually expanding the implementation of <code>(.)</code> to see what this results in?"}, {"owner": {"reputation": 15601, "user_id": 5173426, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/9tQ1B.png?s=128&g=1", "display_name": "DirtyBit", "link": "https://stackoverflow.com/users/5173426/dirtybit"}, "reply_to_user": {"reputation": 109956, "user_id": 159145, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/r8ryC.png?s=128&g=1", "display_name": "Dai", "link": "https://stackoverflow.com/users/159145/dai"}, "edited": false, "score": 0, "creation_date": 1526919377, "post_id": 50451946, "comment_id": 87918700, "body": "@Dai I&#39;m sure he probably knows! \ud83d\ude02"}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 3, "creation_date": 1526935707, "post_id": 50451946, "comment_id": 87926282, "body": "&quot;I&#39;m finding the pointfree style completely illegible&quot; - You and me both, friend! Anything more than a flat pipeline of <code>.</code>s and I&#39;m lost. Everyone learning Haskell goes through a phase of trying to write everything point-free and then comes out the other side"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 1, "creation_date": 1526942569, "post_id": 50451946, "comment_id": 87928528, "body": "How is <code>(.)(.)</code> formed?"}], "answers": [{"comments": [{"owner": {"reputation": 223, "user_id": 5823765, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e394ab7d72220e177d17ce81c49a02e1?s=128&d=identicon&r=PG&f=1", "display_name": "Erik", "link": "https://stackoverflow.com/users/5823765/erik"}, "edited": false, "score": 0, "creation_date": 1526920278, "post_id": 50452100, "comment_id": 87919153, "body": "Why does the <code>(\\c d -&gt; c . d)</code> replace the <code>a</code> and not the <code>b</code>? I though Haskell went from right to left."}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "reply_to_user": {"reputation": 223, "user_id": 5823765, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e394ab7d72220e177d17ce81c49a02e1?s=128&d=identicon&r=PG&f=1", "display_name": "Erik", "link": "https://stackoverflow.com/users/5823765/erik"}, "edited": false, "score": 2, "creation_date": 1526920487, "post_id": 50452100, "comment_id": 87919252, "body": "@Erik <code>\\a b -&gt; ...</code> is short for <code>\\a -&gt; (\\b -&gt; ...)</code>. So you have a function that, when given an argument <code>a</code>, produces another function expecting an argument <code>b</code>. So <code>a</code> comes first. Or put differently: given <code>(\\a b -&gt; ...) 1 2</code>, <code>a</code> will be <code>1</code> and <code>b</code> will be <code>2</code>. So the left-most argument goes to the left-most parameter."}], "tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": false, "score": 19, "last_activity_date": 1526916731, "creation_date": 1526916731, "answer_id": 50452100, "question_id": 50451946, "link": "https://stackoverflow.com/questions/50451946/explain-to-me/50452100#50452100", "title": "Explain (.)(.) to me", "body": "<p>Generally <code>(?)</code> (where <code>?</code> stands for an arbitrary infix operator) is the same as <code>\\x y -&gt; x ? y</code>. So we can rewrite <code>f</code> as:</p>\n\n<pre><code>f = (\\a b -&gt; a . b) (\\c d -&gt; c . d)\n</code></pre>\n\n<p>Now if we apply the argument to the function, we get:</p>\n\n<pre><code>f = (\\b -&gt; (\\c d -&gt; c . d) . b)\n</code></pre>\n\n<p>Now <code>b</code> is just an argument to <code>f</code>, so we can rewrite this as:</p>\n\n<pre><code>f b = (\\c d -&gt; c . d) . b\n</code></pre>\n\n<p>The definition of <code>.</code> is <code>f . g = \\x -&gt; f (g x)</code>. If replace the outer <code>.</code> with its definition, we get:</p>\n\n<pre><code>f b = \\x -&gt; (\\c d -&gt; c . d) (b x)\n</code></pre>\n\n<p>Again we can turn <code>x</code> into a regular parameter:</p>\n\n<pre><code>f b x = (\\c d -&gt; c . d) (b x)\n</code></pre>\n\n<p>Now let's replace the other <code>.</code>:</p>\n\n<pre><code>f b x = (\\c d y -&gt; c (d y)) (b x)\n</code></pre>\n\n<p>Now let's apply the argument:</p>\n\n<pre><code>f b x = \\d y -&gt; (b x) (d y)\n</code></pre>\n\n<p>Now let's move the parameters again:</p>\n\n<pre><code>f b x d y = (b x) (d y)\n</code></pre>\n\n<p>Done.</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1526939918, "post_id": 50453211, "comment_id": 87927803, "body": "I think this could really use some more background. It almost looks like it&#39;s written backwards."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1526971947, "post_id": 50453211, "comment_id": 87936024, "body": "@dfeuer well, the OP asked for &quot;backwards&quot;... seriously though, I&#39;ve realized this after writing it, but decided it was short enough for a reader to follow (or equivalently, read it bottom to top). I also assumed/remembered that &quot;eta-contraction&quot; is easily googlable. what more background could it be?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1526972192, "post_id": 50453211, "comment_id": 87936160, "body": "What do you mean by &quot;&#39;pattern matching&#39; over the combinator definitions&quot;? That&#39;s what really threw me for a loop."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1526973130, "post_id": 50453211, "comment_id": 87936643, "body": "@dfeuer I&#39;ve edited this to the asnwer, thanks for the discussion."}], "tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 5, "last_activity_date": 1556878427, "last_edit_date": 1556878427, "creation_date": 1526921014, "answer_id": 50453211, "question_id": 50451946, "link": "https://stackoverflow.com/questions/50451946/explain-to-me/50453211#50453211", "title": "Explain (.)(.) to me", "body": "<p>We <em>can</em> work backwards by <em>\"pattern matching\"</em> over the combinators' definitions. Given</p>\n\n<pre><code>f a b c d =  a b  (c d) \n          = (a b) (c d)\n</code></pre>\n\n<p>we proceed</p>\n\n<pre><code>         = B (a b) c d \n         = B B a b c d    -- writing B for (.)\n</code></pre>\n\n<p>so by <a href=\"https://en.wikipedia.org/wiki/Lambda_calculus#%CE%B7-conversion\" rel=\"nofollow noreferrer\">eta-contraction</a></p>\n\n<pre><code>f = B B \n</code></pre>\n\n<p>because </p>\n\n<pre><code>a (b c) = B a b c         -- bidirectional equation\n</code></pre>\n\n<p>by definition. Haskell's <code>(.)</code> is actually the <strong>B</strong> combinator (see <a href=\"https://en.wikipedia.org/wiki/B,_C,_K,_W_system\" rel=\"nofollow noreferrer\">BCKW combinators</a>).</p>\n\n<hr>\n\n<p><em>edit:</em> Potentially, many combinators can match the same code. That's why there are many possible combinatory encodings for the same piece of code. For example, <code>(ab)(cd) = (ab)(I(cd))</code> is a valid transformation, which might lead to some other combinator definition matching <em>that</em>. Choosing the \"most appropriate\" one is an art (or a search in a search space with somewhat high branching factor).</p>\n\n<p>That's about going <em>backwards</em>, as you asked. But if you want to go \"forward\", personally, I like the combinatory approach much better over the lambda notation fidgeting. I would even just write many arguments right away, and get rid of the extra ones in the end:</p>\n\n<pre><code>BBabcdefg = B(ab)cdefg = (ab)(cd)efg \n</code></pre>\n\n<p>hence, </p>\n\n<pre><code>BBabcd    = B(ab)cd    = (ab)(cd) \n</code></pre>\n\n<p>is all there is to it.</p>\n"}, {"tags": [], "owner": {"reputation": 1169, "user_id": 7731046, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4421d9cc740a327082631cf828105f85?s=128&d=identicon&r=PG&f=1", "display_name": "fghzxm", "link": "https://stackoverflow.com/users/7731046/fghzxm"}, "is_accepted": true, "score": 5, "last_activity_date": 1526974747, "last_edit_date": 1526974747, "creation_date": 1526949970, "answer_id": 50458300, "question_id": 50451946, "link": "https://stackoverflow.com/questions/50451946/explain-to-me/50458300#50458300", "title": "Explain (.)(.) to me", "body": "<p>You can also gradually append arguments to <code>f</code>:</p>\n\n<pre><code>f = ((.) . )\nf x = (.) . x\nf x y = ((.) . x) y\n      = (.) (x y)\n      = ((x y) . )\nf x y z = (x y) . z\nf x y z t = ((x y) . z) t\n          = (x y) (z t)\n          = x y (z t)\n          = x y $ z t\n</code></pre>\n\n<p>The result reveals that <code>x</code> and <code>z</code> are actually (binary and unary, respectively) functions, so I'll use different identifiers:</p>\n\n<pre><code>f g x h y = g x (h y)\n</code></pre>\n"}], "owner": {"reputation": 223, "user_id": 5823765, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e394ab7d72220e177d17ce81c49a02e1?s=128&d=identicon&r=PG&f=1", "display_name": "Erik", "link": "https://stackoverflow.com/users/5823765/erik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 407, "favorite_count": 5, "accepted_answer_id": 50458300, "answer_count": 3, "score": 12, "last_activity_date": 1556878427, "creation_date": 1526916150, "last_edit_date": 1526916275, "question_id": 50451946, "link": "https://stackoverflow.com/questions/50451946/explain-to-me", "title": "Explain (.)(.) to me", "body": "<p>Diving into Haskell, and while I am enjoying the language I'm finding the pointfree style completely illegible. I've come a across this function which only consists of these ASCII boobies as seen below.</p>\n\n<pre><code>f = (.)(.)\n</code></pre>\n\n<p>And while I understand its type signature and what it does, I can't for the life of me understand why it does it. So could someone please write out the de-pointfreed version of it for me, and maybe step by step work back to the pointfree version sorta like this:</p>\n\n<pre><code>f g x y = (g x) + y   \nf g x = (+) (g x)    \nf g = (+) . g    \nf = (.) (+)\n</code></pre>\n"}, {"tags": ["haskell", "functional-programming", "list-comprehension"], "comments": [{"owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 3, "creation_date": 1526914662, "post_id": 50451401, "comment_id": 87916113, "body": "Generators are separated by commas, so <code>[ x * y  | x &lt;- [1..10],  y &lt;- [1..10]]</code> will type check, but won&#39;t give you the output you want. <code>[x * x | x &lt;- [1..10]]</code> will work, but only requires a single generator."}, {"owner": {"reputation": 191, "user_id": 8970885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a038c6bb13e9c15b5313728b43241d31?s=128&d=identicon&r=PG&f=1", "display_name": "valerius21", "link": "https://stackoverflow.com/users/8970885/valerius21"}, "reply_to_user": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 0, "creation_date": 1526914921, "post_id": 50451401, "comment_id": 87916250, "body": "thanks! this really helped a lot!"}], "answers": [{"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 5, "last_activity_date": 1526914881, "creation_date": 1526914881, "answer_id": 50451562, "question_id": 50451401, "link": "https://stackoverflow.com/questions/50451401/using-list-comprehension-with-two-variables-in-haskell/50451562#50451562", "title": "Using list comprehension with two variables in haskell", "body": "<p>You need to zip the two ranges together:</p>\n\n<pre><code>[ x * y | (x, y) &lt;- zip [1..10] [1..10] ]\n</code></pre>\n\n<p>You <em>can</em> have two separate iterators, separated with a comma</p>\n\n<pre><code>[ x * y | x &lt;- [1..10], y &lt;-[1..10] ]\n</code></pre>\n\n<p>but this computes the cartesian product of the two sets, resulting in a full multiplication table rather a list of squares.</p>\n"}, {"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 3, "creation_date": 1526922997, "post_id": 50451580, "comment_id": 87920549, "body": "Probably worth mentioning <code>ParallelListComp</code> and <code>[x*y | x &lt;- [1..10] | y &lt;- [1..10]]</code>."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 10, "last_activity_date": 1615462324, "last_edit_date": 1615462324, "creation_date": 1526914944, "answer_id": 50451580, "question_id": 50451401, "link": "https://stackoverflow.com/questions/50451401/using-list-comprehension-with-two-variables-in-haskell/50451580#50451580", "title": "Using list comprehension with two variables in haskell", "body": "<p>Well there are two problems here: a <em>syntactical</em> one, and a <em>semantical</em> one.</p>\n<h1>Towards a valid list comprehension expression</h1>\n<p>The syntactical one is that you separate the parts of list comprehension (these can be <em>generators</em>, <em>filters</em>, and <code>let</code> clauses) by a <strong>comma (<code>,</code>)</strong>:</p>\n<pre><code>[ x * y  | x &lt;- [1..10]<b>,</b> y &lt;- [1..10]]</code></pre>\n<p>But now we will <em>not</em> get the desired output. Indeed:</p>\n<pre><code>Prelude&gt; [ x * y  | x &lt;- [1..10], y &lt;- [1..10]]\n[1,2,3,4,5,6,7,8,9,10,2,4,6,8,10,12,14,16,18,20,3,6,9,12,15,18,21,24,27,30,4,8,12,16,20,24,28,32,36,40,5,10,15,20,25,30,35,40,45,50,6,12,18,24,30,36,42,48,54,60,7,14,21,28,35,42,49,56,63,70,8,16,24,32,40,48,56,64,72,80,9,18,27,36,45,54,63,72,81,90,10,20,30,40,50,60,70,80,90,100]\n</code></pre>\n<p>What we here have is all multiplications between two integers from <code>1</code> to <code>10</code>. Since for every <code>x</code> in the list <code>[1..10]</code>, we iterate through the list <code>[1..10]</code> for <code>y</code>. This however does not match with your requested list, hence a semantical error.</p>\n<h1>Obtaining a list of squares</h1>\n<p>What you seem to want is a list of all <em>square</em> numbers. In that case there is only <em>one</em> variable <code>x</code>, and for each value of <code>x</code>, we yield <code>x*x</code>:</p>\n<pre><code>[ x * x  | x &lt;- [1..10]]</code></pre>\n<p>this then yields:</p>\n<pre><code>Prelude&gt; [ x * x  | x &lt;- [1..10]]\n[1,4,9,16,25,36,49,64,81,100]\n</code></pre>\n<h1>Enumerating lists in parallel</h1>\n<p>In case you have two lists you want to enumerate in parallel, you can do this with a <code>zip</code>, for example if we want to multiply the elements of <code>[1..10]</code> with the elements of <code>[5..14]</code> <em>elementwise</em>, we can do this with:</p>\n<pre><code>[ x * y  | (x, y) &lt;- zip [1..10] [5..14]]</code></pre>\n<p>We can also work with the <a href=\"https://ghc.readthedocs.io/en/8.0.2/glasgow_exts.html#parallel-list-comprehensions\" rel=\"nofollow noreferrer\"><strong><code>ParallelListComp</code></strong> extension</a> as <a href=\"https://stackoverflow.com/questions/50451401/using-list-comprehension-with-two-variables-in-haskell/50451580#comment87920549_50451580\">@DanielWagner says</a>:</p>\n<pre><code>{-# LANGUAGE ParallelListComp #-}\n\n[ x * y  | x &lt;- [1..10] <b>|</b> y &lt;- [5..14]]</code></pre>\n"}], "owner": {"reputation": 191, "user_id": 8970885, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a038c6bb13e9c15b5313728b43241d31?s=128&d=identicon&r=PG&f=1", "display_name": "valerius21", "link": "https://stackoverflow.com/users/8970885/valerius21"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1653, "favorite_count": 0, "accepted_answer_id": 50451580, "answer_count": 2, "score": 2, "last_activity_date": 1615462324, "creation_date": 1526914313, "question_id": 50451401, "link": "https://stackoverflow.com/questions/50451401/using-list-comprehension-with-two-variables-in-haskell", "title": "Using list comprehension with two variables in haskell", "body": "<p>does someone know how I can do a list comprehension with two variables in haskell? </p>\n\n<p>ex. </p>\n\n<pre><code>[ x * y  | x &lt;- [1..10]  y &lt;- [1..10]]\n</code></pre>\n\n<p>it should result in </p>\n\n<pre><code>[1,4,9,16,25,36,49,64,81,100]\n</code></pre>\n\n<p>but it actually yields in ghci</p>\n\n<pre><code>&lt;interactive&gt;:13:23-24: error:\n    parse error on input \u2018&lt;-\u2019\n    Perhaps this statement should be within a 'do' block?\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 3, "creation_date": 1526915272, "post_id": 50451333, "comment_id": 87916425, "body": "If you want <code>Relation</code> to have its own instances, it should be a fresh type (not a type synonym). One way of doing that is <code>newtype Relation a = Relation [[a]]</code> (note that doing this means you&#39;ll have to wrap and unwrap <code>Relation</code> all over the place). Then, you can define <code>==</code> for <code>Relation</code> with <code>instance Eq a =&gt; Eq Relation where { (==) = areEqual }</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 3, "creation_date": 1526916199, "post_id": 50451333, "comment_id": 87916912, "body": "Since you appear to really be encoding binary relations, I would make that explicit with <code>[(a,a)]</code> instead of <code>[[a]]</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1526917133, "post_id": 50451333, "comment_id": 87917437, "body": "Also, note that the properties you are testing must hold for <i>all</i> values of type <code>a</code>, not just the ones you see in the <code>Relation</code>. For example, <code>[[0,0]] :: [[Int]]</code> would not be a reflexive relation on <code>Int</code>,  because <code>[1,1] :: [Int]</code> (among others) is not present."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1526940125, "post_id": 50451333, "comment_id": 87927881, "body": "Minor note: the word is spelled &quot;symmetric&quot;. And the ultimate thing you&#39;re after is an &quot;equivalence&quot; relation."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1526940281, "post_id": 50451333, "comment_id": 87927927, "body": "Typically, the <code>...Rec</code> functions you&#39;ve defined would be defined locally, in <code>where</code> clauses. Generally speaking, a top-level function should be one with a clear meaning of its own, and should have a comment documenting that meaning."}, {"owner": {"reputation": 374, "user_id": 9290107, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-uaazeTb-DBE/AAAAAAAAAAI/AAAAAAAAAC0/bKKxFLCNxYk/photo.jpg?sz=128", "display_name": "Eric Nordelo Galiano", "link": "https://stackoverflow.com/users/9290107/eric-nordelo-galiano"}, "reply_to_user": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1527020191, "post_id": 50451333, "comment_id": 87965130, "body": "Thanks a lot, and sorry about my english, i&#39;m from Cuba, I did what @Alec said and after a lot of try and lecture finish I could achieve what i was expecting. :) really nice"}], "owner": {"reputation": 374, "user_id": 9290107, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-uaazeTb-DBE/AAAAAAAAAAI/AAAAAAAAAC0/bKKxFLCNxYk/photo.jpg?sz=128", "display_name": "Eric Nordelo Galiano", "link": "https://stackoverflow.com/users/9290107/eric-nordelo-galiano"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 91, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1526914010, "creation_date": 1526914010, "question_id": 50451333, "link": "https://stackoverflow.com/questions/50451333/how-create-a-new-generic-type-and-redefine-in-haskell", "title": "how create a new generic type and redefine == in haskell?", "body": "<p>I have the next haskell code successfully working:</p>\n\n<pre><code>type Relation a = [[a]]\n\nisAEquivalentRelation   ::  Eq a  =&gt; Relation a -&gt; Bool\nisAEquivalentRelation x   =   isASimetricRelation x &amp;&amp; isAReflexiveRelation x &amp;&amp; isATransitiveRelation x\n\nisASimetricRelation   ::  Eq a  =&gt;  Relation a -&gt; Bool\nisASimetricRelation []   =   True\nisASimetricRelation (x:xs)   =   (elem (reverse x) (x:xs)) &amp;&amp; (isASimetricRelation  (filter (/= y) xs)) where y = (reverse x)\n\nisAReflexiveRelation   ::  Eq a  =&gt;  Relation a -&gt; Bool \nisAReflexiveRelation []   =   True\nisAReflexiveRelation x   =   isAReflexiveRelationRec (filter (\\ a -&gt; a !! 0 == a !! 1) x) x\n\nisAReflexiveRelationRec   ::   Eq a   =&gt;  Relation a -&gt; Relation a -&gt; Bool \nisAReflexiveRelationRec [] _  =   False\nisAReflexiveRelationRec _ []  =   True\nisAReflexiveRelationRec pr (x:xs)  = or ( map (== [x!!0,x!!0]) pr) &amp;&amp; or ( map (== [x!!1,x!!1]) pr) &amp;&amp; isAReflexiveRelationRec pr xs\n\nisATransitiveRelation   ::   Eq a   =&gt;  Relation a -&gt; Bool \nisATransitiveRelation []   =   True\nisATransitiveRelation x   =   isATransitiveRelationRec x x\n\nisATransitiveRelationRec   ::   Eq a   =&gt; Relation a -&gt; Relation a -&gt; Bool \nisATransitiveRelationRec _ []   =   True\nisATransitiveRelationRec original (x:xs)   =   and ( map (\\ a -&gt; elem a original) (map (\\ a -&gt; [x !! 0, a !! 1]) (filter (\\ a -&gt; x !! 1 == a !! 0) original)) ) &amp;&amp; isATransitiveRelationRec original xs\n\nareEqual   ::   Eq a  =&gt;  Relation a -&gt; Relation a -&gt; Bool\nareEqual x y  =   subset x y &amp;&amp; subset y x \n\nsubset   ::   Eq a  =&gt;  Relation a -&gt; Relation a -&gt; Bool\nsubset [] _ = True\nsubset _ [] = False\nsubset x y = and (map (\\ a -&gt; elem a y) x)\n</code></pre>\n\n<p>The issue is that I need to redefine the == of the Relation type using the areEqual method that I have implemented but i can't achieve this working. I've tried a lot of things with classes and instances and datas but I'm stucked, how can i declare a generic Relation type and redefine the operator == to match areEqual method ?</p>\n"}, {"tags": ["haskell"], "owner": {"reputation": 11, "user_id": 1776866, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/25c32dc8c62c1b5413807f451e452f1f?s=128&d=identicon&r=PG", "display_name": "Ophidia", "link": "https://stackoverflow.com/users/1776866/ophidia"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 50, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1526918512, "creation_date": 1526911412, "last_edit_date": 1526918512, "question_id": 50450616, "link": "https://stackoverflow.com/questions/50450616/haskell-sqlerror-with-hdbc", "title": "Haskell SQLError with HDBC", "body": "<p>I want to read a file with many lines and want to save them in my table.\nAll is fine but when it reach the last element of my first line it stop with an SqlError.</p>\n\n<pre><code>readLines :: FilePath -&gt; IO ()\nreadLines n = \ndo s &lt;- readFile n\n   mapM_ (\\x -&gt; insertbdd x $ lines s !! 1) [3..9]\n\ninsertbdd :: Int -&gt; String -&gt; IO ()\ninsertbdd _ [] = putStrLn \"k\"   -- pattern matching that doesn't work\ninsertbdd ng xs =\n    do conn &lt;- connectSqlite3 \"ngram.db\"\n       stmt &lt;- handleSqlError $ prepare conn \"insert into n3 (seq) values (?)\"\n       execute stmt $ take 1 $ (map toSql) $ ngrams ng xs\n       commit conn\n       insertbdd ng (tail xs)\n\nngrams :: Int -&gt; [a] -&gt; [[a]]\nngrams n l = take (length l - (n - 1)) . map (take n) . tails $ l\n</code></pre>\n\n<p>That stop with this message </p>\n\n<pre><code>*** Exception: SqlError {seState = \"\", seNativeError = -1, seErrorMsg     = \"In HDBC execute, received [] but expected 1 args.\"}\n</code></pre>\n\n<p>I wroted many pattern that doesn't match.</p>\n\n<p>Any idea as to why this is happening?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1526904819, "post_id": 50447656, "comment_id": 87910537, "body": "From the two suggested questions, the &quot;Defining a function [...]&quot; one focuses on &quot;why&quot;, while the &quot;Number of arguments [...]&quot; one focuses on &quot;how&quot;."}], "answers": [{"tags": [], "owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "is_accepted": true, "score": 4, "last_activity_date": 1526901497, "creation_date": 1526901497, "answer_id": 50447720, "question_id": 50447656, "link": "https://stackoverflow.com/questions/50447656/failure-to-mix-non-point-free-function-definition-clauses/50447720#50447720", "title": "Failure to mix {,non-}point-free function definition clauses", "body": "<p>When you define a function in Haskell through this method, each declaration must have the same number of arguments. This are for reasons involving possible typos, and easier pattern-matching.</p>\n\n<p>Since your first line only includes one argument, <code>[]</code>, it causes an error since all other definitions include two arguments.</p>\n\n<p>This is a prohibition of mixing pointed and point-free styles in this particular case, yes, but it seems to be to avoid typos as mentioned.</p>\n"}], "owner": {"reputation": 1169, "user_id": 7731046, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4421d9cc740a327082631cf828105f85?s=128&d=identicon&r=PG&f=1", "display_name": "fghzxm", "link": "https://stackoverflow.com/users/7731046/fghzxm"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 45, "favorite_count": 0, "closed_date": 1526904720, "accepted_answer_id": 50447720, "answer_count": 1, "score": 3, "last_activity_date": 1526904763, "creation_date": 1526901275, "question_id": 50447656, "link": "https://stackoverflow.com/questions/50447656/failure-to-mix-non-point-free-function-definition-clauses", "closed_reason": "Duplicate", "title": "Failure to mix {,non-}point-free function definition clauses", "body": "<p>A definition like</p>\n\n<pre><code>mergeLists :: Ord a =&gt; [a] -&gt; [a] -&gt; [a]\nmergeLists [] = id\nmergeLists l [] = l\nmergeLists (x:xs) (y:ys) = if y &lt; x\n    then y : mergeLists (x:xs) ys\n    else x : mergeLists xs (y:ys)\n</code></pre>\n\n<p>leads to the error</p>\n\n<pre><code>MergeLists.hs:3:1: error:\n    Equations for \u2018mergeLists\u2019 have different numbers of arguments\n      MergeLists.hs:3:1-18\n      MergeLists.hs:4:1-19\n  |\n3 | mergeLists [] = id\n  | ^^^^^^^^^^^^^^^^^^...\n</code></pre>\n\n<p>With the line in question rewritten as <code>mergeLists [] l = l</code> the error is gone.</p>\n\n<p>Does Haskell prohibit the mixture of point-free and non-point-free clauses in a single function definition?</p>\n"}, {"tags": ["haskell", "lambda", "functional-programming", "fold", "cartesian-product"], "comments": [{"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 2, "creation_date": 1526902048, "post_id": 50447596, "comment_id": 87909026, "body": "It would be quite helpful to provide the types of <code>h</code> and <code>h&#39;&#39;</code> too."}], "answers": [{"tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": false, "score": 3, "last_activity_date": 1526903189, "creation_date": 1526903189, "answer_id": 50448195, "question_id": 50447596, "link": "https://stackoverflow.com/questions/50447596/it-is-hard-to-understand-to-a-transform-foldr-in-cartesian-product/50448195#50448195", "title": "It is hard to understand to a transform foldr in cartesian product", "body": "<p>Essentially it boils down to the fact that <code>h</code> is a recursive function on <code>xs</code> and that <code>foldr</code> generalizes recursion on lists. Note how <code>h</code> calls itself on the tail <code>xs</code>, much like <code>foldr</code> calls itself on the tail <code>as</code>.</p>\n\n<hr>\n\n<p>By induction on <code>ws</code>, prove that <code>h ws xss = h'' ws xss</code>. Reasoning by induction, there are two cases to consider.</p>\n\n<p><strong>Base case</strong>, <code>ws = []</code></p>\n\n<pre><code>h [] xss = []  -- by definition of h\n\nh'' [] xss\n= foldr g [] xss  -- by definition of h''\n= []              -- by definition of foldr\n</code></pre>\n\n<p><strong>Induction step</strong>, <code>ws = x : xs</code>, assuming <code>h xs xss = h'' xs xss</code> (induction hypothesis)</p>\n\n<pre><code>h (x : xs) xss\n= foldr f (h xs xss) xss    -- by definition of h (N.B. f depends on x)\n= foldr f (h'' xs xss) xss  -- by induction hypothesis\n= g x (h'' xs xss)          -- by definition of g (N.B. g depends on xss)\n= g x (foldr g [] xs)       -- by definition of h''\n= foldr g [] (x : xs)       -- by definition of foldr\n= h'' (x : xs) xss          -- by definition of h'' \n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 860, "user_id": 976371, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/948a98554e5882037f0feac8a21bef56?s=128&d=identicon&r=PG", "display_name": "jiamo", "link": "https://stackoverflow.com/users/976371/jiamo"}, "edited": false, "score": 0, "creation_date": 1526905884, "post_id": 50448567, "comment_id": 87911091, "body": "the helper func <code>g</code> is like <code>f</code> in the definition of <code>foldr</code> which <code>f</code> is a arg need to be pass. Here <code>g</code> just put there as in runtime. Very good and clear."}, {"owner": {"reputation": 860, "user_id": 976371, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/948a98554e5882037f0feac8a21bef56?s=128&d=identicon&r=PG", "display_name": "jiamo", "link": "https://stackoverflow.com/users/976371/jiamo"}, "edited": false, "score": 0, "creation_date": 1527240483, "post_id": 50448567, "comment_id": 88063478, "body": "In case anybody want to have a look: <a href=\"https://gist.github.com/jiamo/682fc4168791869b23439787a2aeaaab\" rel=\"nofollow noreferrer\">gist.github.com/jiamo/682fc4168791869b23439787a2aeaaab</a>"}], "tags": [], "owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "is_accepted": true, "score": 4, "last_activity_date": 1526904420, "creation_date": 1526904420, "answer_id": 50448567, "question_id": 50447596, "link": "https://stackoverflow.com/questions/50447596/it-is-hard-to-understand-to-a-transform-foldr-in-cartesian-product/50448567#50448567", "title": "It is hard to understand to a transform foldr in cartesian product", "body": "<p>Start by making an inner function without the second argument <code>xss</code> that does the standard list recursion only:</p>\n\n<pre><code>h []     xss = []\nh (x:xs) xss = foldr f (h xs xss) xss\n  where \n    f xs ys = (x:xs) : ys\n\n  --&gt;\n\nh xs xss = h' xs\n  where\n    h' []     = []\n    h' (x:xs) = foldr f (h' xs) xss\n      where\n        f xs ys = (x:xs) : ys\n</code></pre>\n\n<p>Then let's see how we abstract out the recursion pattern in <code>h'</code> with another helper function that acts on <code>x</code> and the recursive call result <code>h' xs</code> only:</p>\n\n<pre><code>h xs xss = h' xs\n  where\n    h' []     = []\n    h' (x:xs) = g x (h' xs)\n    g x zss = foldr f zss xss\n      where \n        f xs ys = (x:xs) : ys\n</code></pre>\n\n<p>which is just that helper function that we would pass to <code>foldr</code> if we didn't want to explicitly write out the list recursion in <code>h'</code>:</p>\n\n<pre><code>h xs xss = foldr g [] xs\n  where\n    g x zss = foldr f zss xss\n      where \n        f xs ys = (x:xs) : ys\n</code></pre>\n"}], "owner": {"reputation": 860, "user_id": 976371, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/948a98554e5882037f0feac8a21bef56?s=128&d=identicon&r=PG", "display_name": "jiamo", "link": "https://stackoverflow.com/users/976371/jiamo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 514, "favorite_count": 1, "accepted_answer_id": 50448567, "answer_count": 2, "score": -1, "last_activity_date": 1582791533, "creation_date": 1526901074, "last_edit_date": 1582791533, "question_id": 50447596, "link": "https://stackoverflow.com/questions/50447596/it-is-hard-to-understand-to-a-transform-foldr-in-cartesian-product", "title": "It is hard to understand to a transform foldr in cartesian product", "body": "<p>I follow <a href=\"https://tidsskrift.dk/brics/article/download/21934/19359\" rel=\"nofollow noreferrer\">On Barron and Strachey's cartesian product function</a> to understand the combination of high order function.</p>\n\n<p>There is a important transform I got and I think it is not easy to understand it straightforward:</p>\n\n<pre><code>h [] xss = []\nh (x : xs) xss =\n foldr f (h xs xss) xss where \n    f xs ys = (x: xs) : ys\n</code></pre>\n\n<p>to equal this :</p>\n\n<pre><code>h'' xs xss = \nfoldr g [] xs where\n    g x zss = foldr f zss xss where \n        f xs ys = (x : xs) : ys\n</code></pre>\n\n<p>Even I got these helper:</p>\n\n<pre><code>foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b\nfoldr f z [] = z\nfoldr f z (a:as) = f a (foldr f z as) \n\n-- change the name\nh' :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b\nh' f z [] = z\nh' f z (a:as) = f a (h' f z as)  \n</code></pre>\n\n<p>So my question is: Is it easy to explain the transform?</p>\n"}, {"tags": ["list", "haskell"], "comments": [{"owner": {"reputation": 240688, "user_id": 14955, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/5DblQ.png?s=128&g=1", "display_name": "Thilo", "link": "https://stackoverflow.com/users/14955/thilo"}, "edited": false, "score": 3, "creation_date": 1526899269, "post_id": 50447006, "comment_id": 87907521, "body": "The first step is to have a function that does this for a single input (i.e. <code>Int -&gt; [Int]</code>). You can then use this function for each element of your list-type input (for example by <code>map</code>ping over that input)."}, {"owner": {"reputation": 33, "user_id": 9822565, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/24055406a3aac5022cef22d2718573d1?s=128&d=identicon&r=PG&f=1", "display_name": "Alutri", "link": "https://stackoverflow.com/users/9822565/alutri"}, "reply_to_user": {"reputation": 240688, "user_id": 14955, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/5DblQ.png?s=128&g=1", "display_name": "Thilo", "link": "https://stackoverflow.com/users/14955/thilo"}, "edited": false, "score": 0, "creation_date": 1526899910, "post_id": 50447006, "comment_id": 87907873, "body": "yeah i figured as much, but since i am not allowed to use local scopes i cant just create a new variable through let or where.Thats the problem i am having atm."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 1, "creation_date": 1526901336, "post_id": 50447006, "comment_id": 87908633, "body": "So define a new function elsewhere, without <code>let</code> or <code>where</code>. Use the global scope instead of the local one."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1526905574, "post_id": 50447006, "comment_id": 87910919, "body": "I think before looking for a Haskell approach, how would you do that algorithmically?"}], "answers": [{"comments": [{"owner": {"reputation": 1914, "user_id": 1511037, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/3P5Qq.png?s=128&g=1", "display_name": "Penguino", "link": "https://stackoverflow.com/users/1511037/penguino"}, "edited": false, "score": 0, "creation_date": 1526961626, "post_id": 50457610, "comment_id": 87932338, "body": "And if you want to slightly increase the efficiency of the algorithm you could further change the interval to 2..y/2 as no factor will be larger than that."}], "tags": [], "owner": {"reputation": 619, "user_id": 8514005, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/318a3ae487b2140f9d08079450b6903d?s=128&d=identicon&r=PG&f=1", "display_name": "JohEker", "link": "https://stackoverflow.com/users/8514005/joheker"}, "is_accepted": false, "score": 3, "last_activity_date": 1526943586, "creation_date": 1526943586, "answer_id": 50457610, "question_id": 50447006, "link": "https://stackoverflow.com/questions/50447006/function-which-outputs-a-list-of-factors/50457610#50457610", "title": "Function which outputs a list of factors", "body": "<p>So the first thing to do if we get stuck is to skip the programming part of the problem and start by solving the actual problem. We want to take 1 number, get the factors of that number, wrap the factors inside a list, and keep going until there are no more numbers to factor. </p>\n\n<p>So how do we get the factors of a number? A number x is a factor of y if we can write y as a product of x and some other integer z. Therefor, 2 is a factor of 8 because 8 can be written as 2*4. </p>\n\n<p>Using this information we also know that 8 must be divisble by 2 without rest, which it is. Great! So know we know that for any two integers x and y, if x is divisible by y without rest, y is a factor.</p>\n\n<p>Lets go to haskell and try some approach with the information : \" x is a factor of y if y is divided by x with no rest\"</p>\n\n<pre><code>factors :: Int -&gt; [Int]\nfactors y = [ x | x &lt;- [1..y], y `mod` x == 0]\n</code></pre>\n\n<p>So, using a listcomp we can wrap all x:es from [1..y] and put them in a list, but <strong>if and only if</strong> </p>\n\n<p><code>y 'mod' that specific x equals 0</code>.</p>\n\n<p>If we have a function to create a list with all the factors of one number, what if we just map that function to a list of numbers, and wrap the resulting lists in a new list, and return that list</p>\n\n<pre><code>listFactors :: [Int] -&gt; [[Int]]\nlistFactors xs = map factors xs\n</code></pre>\n\n<p>If we do not want to show the multiplication identity 1 or the number itself we can just change the interval to [2..y-1]</p>\n"}], "owner": {"reputation": 33, "user_id": 9822565, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/24055406a3aac5022cef22d2718573d1?s=128&d=identicon&r=PG&f=1", "display_name": "Alutri", "link": "https://stackoverflow.com/users/9822565/alutri"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 695, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1526943586, "creation_date": 1526898992, "last_edit_date": 1526926162, "question_id": 50447006, "link": "https://stackoverflow.com/questions/50447006/function-which-outputs-a-list-of-factors", "title": "Function which outputs a list of factors", "body": "<p>For an assignment I need to create a function which takes a list of <code>Int</code>s and outputs all of a number's factors in a new list. Thing is, I have absolutely no idea how to do this. I know its signature needs to be like this though :</p>\n\n<pre><code>factors :: [Int] -&gt; [[Int]]\nfactors xs = ???\n</code></pre>\n\n<p>So when you take a list like this : <code>[2,5,7,8]</code></p>\n\n<p>It outputs <code>[[],[],[],[2,4]]</code></p>\n\n<p>I have tried things with map, filter, mod, list comprehension or higher order functions, but since this is the first language I am learning, it's very hard for me to come up with any sort of solution.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 17989, "user_id": 365102, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/e3139989e6548e7deac2cd45253d60df?s=128&d=identicon&r=PG", "display_name": "Mateen Ulhaq", "link": "https://stackoverflow.com/users/365102/mateen-ulhaq"}, "edited": false, "score": 1, "creation_date": 1526896237, "post_id": 50445974, "comment_id": 87905782, "body": "I&#39;m a Haskell beginner as well... but I believe they&#39;re equivalent. Yours looks nicer to me. (Though I would prefer putting the <code>[]</code> case on the second line.)"}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 5, "last_activity_date": 1527094327, "last_edit_date": 1527094327, "creation_date": 1526896544, "answer_id": 50446265, "question_id": 50445974, "link": "https://stackoverflow.com/questions/50445974/explain-this-haskell-funtion-list-of-tuples-to-list/50446265#50446265", "title": "explain this haskell funtion &quot;list of tuples to list&quot;", "body": "<p>There is no difference: their semantics is exactly the same.</p>\n\n<pre><code>tupleToList [] = []\ntupleToList ((a,b):xs) = a : b : tupleToList xs\n</code></pre>\n\n<p>is equivalent to</p>\n\n<pre><code>tupleToList ((a,b):xs) = a : b : tupleToList xs\ntupleToList [] = []\n</code></pre>\n\n<p>which is equivalent to</p>\n\n<pre><code>tupleToList ((a,b):xs) = a : b : tupleToList xs\ntupleToList _ = []\n</code></pre>\n\n<p>Usually, the wildcard <code>_</code> is used when we need to pattern match multiple cases. E.g.</p>\n\n<pre><code>myAnd :: Bool -&gt; Bool -&gt; Bool\nmyAnd True  y = y\nmyAnd False _ = False\n</code></pre>\n\n<p>Above, we could enumerate the <code>False False</code> and <code>False True</code> cases individually, and use three equations, but using a wildcard is more convenient (and makes our function slightly lazier, e.g. <code>myAnd False undefined</code> evaluates to <code>False</code>).</p>\n\n<p>Concluding, it's mostly a matter of style. Usually, when the wildcard <code>_</code> can only stand for one case, it <em>is</em> better to spell it out, to be explicit about it. In this way, the code is often more readable. E.g.</p>\n\n<pre><code>not :: Bool -&gt; Bool\nnot False = True\nnot _     = False\n</code></pre>\n\n<p>is equivalent but worse than</p>\n\n<pre><code>not :: Bool -&gt; Bool\nnot False = True\nnot True  = False\n</code></pre>\n\n<p>The same holds for <code>case</code> expression, of course.</p>\n\n<pre><code>case x of\n  Just y  -&gt; 1 + y\n  Nothing -&gt; 0\n</code></pre>\n\n<p>is arguably more readable than</p>\n\n<pre><code>case x of\n  Just y -&gt; 1 + y\n  _      -&gt; 0\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 9, "last_activity_date": 1527094514, "last_edit_date": 1527094514, "creation_date": 1526896820, "answer_id": 50446346, "question_id": 50445974, "link": "https://stackoverflow.com/questions/50445974/explain-this-haskell-funtion-list-of-tuples-to-list/50446346#50446346", "title": "explain this haskell funtion &quot;list of tuples to list&quot;", "body": "<blockquote>\n  <p>Like I usually see in the first exercises of the guides. I know that <code>_</code> is whatever, but, isn't better to use <code>[]</code> that mean, when the list is empty?</p>\n</blockquote>\n\n<p>Semantically the two are the same since a 2-tuple has only one constructor <code>(a,b)</code>, and a list has two constructors <code>[]</code> and <code>(h:t)</code>.</p>\n\n<p>Since the only pattern left that is not matched by the first clause is the empty list, the <em>wildcard</em> <code>_</code> is equivalent to <code>[]</code>.</p>\n\n<p>Since <code>[]</code> and <code>((a,b):xs)</code> are <em>disjunctive</em> patterns (i.e. there are no values that can match both patterns), the order of the two patterns is of no importance, when <code>[]</code> is used explicitly. We can write it in any order we like, then.</p>\n\n<p>Some Haskell programmers prefer to use <em>explicit</em> patterns (so with <code>[]</code> instead of <code>_</code>), since that means that we know which values we actually handle with that clause. If later the Haskell community would decide to introduce an additional list constructor (yes, for lists that is very unlikely, but for other <code>data</code> types this might be more reasonable), the Haskell compiler can (with <code>-Wincomplete-patterns</code>) give warnings that some patterns are not covered. A wildcard of course covers <em>all</em> patterns, but perhaps the expression at the right is not the one we intended for the additional constructor.</p>\n\n<p>Therefore I would advice to use a wildcard <em>only</em> in case you want to match <em>multiple</em> patterns by the same clause. In case it is clear what the other pattern is, it is better to be explicit. Like the <em>Zen of Python</em> says (yes, it is Python, but most concepts are to some extent universal): \"<em>explicit is better than implicit</em>\".</p>\n"}], "owner": {"reputation": 95, "user_id": 9821997, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Muribury Lex", "link": "https://stackoverflow.com/users/9821997/muribury-lex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 94, "favorite_count": 0, "accepted_answer_id": 50446346, "answer_count": 2, "score": 5, "last_activity_date": 1527094514, "creation_date": 1526895710, "question_id": 50445974, "link": "https://stackoverflow.com/questions/50445974/explain-this-haskell-funtion-list-of-tuples-to-list", "title": "explain this haskell funtion &quot;list of tuples to list&quot;", "body": "<p>I'm a beginner and basically I need an explanation of <a href=\"https://stackoverflow.com/a/6270263/9821997\">this</a></p>\n\n<p>He answer with this code:</p>\n\n<pre><code>tupleToList :: [(a,a)] -&gt; [a]\ntupleToList ((a,b):xs) = a : b : tupleToList xs\ntupleToList _          = []\n</code></pre>\n\n<p>But I don't underdand why he don't use:</p>\n\n<pre><code>tupleToList [] = []\ntupleToList ((a,b):xs) = a : b : tupleToList xs\n</code></pre>\n\n<p>Like I usually see in the first exercises of the guides.\nI know that '_' is whatever, but, isn't better to use '[]' that mean, when the list is empty?</p>\n"}, {"tags": ["regex", "haskell", "emacs", "syntax-highlighting"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1526918223, "post_id": 50442847, "comment_id": 87918076, "body": "What do you mean by &quot;doesn&#39;t work&quot; here? Does any highlighting occur at all? Does it crash with an error? What do you expect to happen?"}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 0, "creation_date": 1526922097, "post_id": 50442847, "comment_id": 87920099, "body": "You seem to be returning <code>(nil)</code> from <code>highlight-haskell-function</code>, rather than <code>nil</code>. That gives me a <code>Symbol&#39;s function definition is void</code> error."}, {"owner": {"reputation": 4583, "user_id": 2561714, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/752d92663322e652223379492f83bbaa?s=128&d=identicon&r=PG", "display_name": "NickD", "link": "https://stackoverflow.com/users/2561714/nickd"}, "edited": false, "score": 0, "creation_date": 1526923410, "post_id": 50442847, "comment_id": 87920760, "body": "Doesn&#39;t <code>haskell-mode</code> do proper highlighting?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user9775773"}, "edited": false, "score": 0, "creation_date": 1526956589, "post_id": 50442847, "comment_id": 87931270, "body": "AJFarmar, when I run haskell-mode nothing changes, emacs continue normal working. I expect that functions definitions like someFunc = undefined change color."}], "owner": {"user_type": "does_not_exist", "display_name": "user9775773"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 128, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1526910519, "creation_date": 1526882569, "last_edit_date": 1526910519, "question_id": 50442847, "link": "https://stackoverflow.com/questions/50442847/how-to-write-function-in-emacs-lisp-for-syntax-highlighting", "title": "How to write function in Emacs Lisp for syntax highlighting?", "body": "<p>I need to add Haskell syntax highlighting for Emacs. I can't create a regexp for functions definitions highlighting, because Emacs Lisp regexps don't support looking forward(?=) and looking backward(?&lt;=). In the <a href=\"https://www.gnu.org/software/emacs/manual/html_node/elisp/Search_002dbased-Fontification.html#Search_002dbased-Fontification\" rel=\"nofollow noreferrer\">Elisp manual</a> I read that \nsearching keywords can be realized by function. This function must not return <code>nil</code> and must set <code>match-beginning</code> and <code>match-end</code>.</p>\n\n<p>I created a function that finds Haskell functions definitions, but the syntax highlighting doesn't work.</p>\n\n<pre><code>(defun get-cur-character (pos)\n  (aref (buffer-substring (1- pos) pos) 0))\n\n(defun find-equal-character (pos)\n  (let ((curchar ?0)\n        (result nil)\n        (max-pos (point-max)))\n      (while (and (not (equal curchar ?\\n)) (&lt; pos max-pos))\n          (setq curchar (get-cur-character pos))\n          (setq pos (1+ pos))\n          (if (equal curchar ?=)\n              (progn\n                  (setq result t)\n                  (setq curchar ?\\n))))\n    result))\n\n(defun highlight-haskell-function (limit)\n    (save-excursion\n        (if (not (null (re-search-forward \"^\\\\([a-z]+\\\\w*\\\\)\" limit t)))\n            (find-equal-character (match-end 0))\n            (nil))))\n\n(provide 'haskell-mode)\n(font-lock-add-keywords 'haskell-mode '((highlight-haskell-function . 'font-lock-keyword-face)))\n</code></pre>\n\n<p>Functions description:</p>\n\n<ul>\n<li><code>get-cur-character</code> - return character by position.</li>\n<li><code>find-equal-character</code> - find character = from pos to nearest <code>\\n</code> character and return t or nil.</li>\n<li><code>highlight-haskell-function</code> - find words, that begin with lowercase letter, then call find-equal-character with position of searched word and return t or nil.</li>\n</ul>\n"}, {"tags": ["haskell", "dependent-type", "gadt"], "answers": [{"tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": false, "score": 2, "last_activity_date": 1526859714, "creation_date": 1526859714, "answer_id": 50440355, "question_id": 50440191, "link": "https://stackoverflow.com/questions/50440191/is-it-possible-to-ensure-that-two-gadt-type-variables-are-the-same-without-depen/50440355#50440355", "title": "Is it possible to ensure that two GADT type variables are the same without dependent types?", "body": "<p><code>matchType</code> <em>as written</em> is not possible to implement, but the idea you are going for is definitely possible.  Do you know about <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Typeable.html\" rel=\"nofollow noreferrer\"><code>Data.Typeable</code></a>?  <code>Typeable</code> is a class that provides some basic reflective operations for inspecting types.  To use it, you need a <code>Typeable a</code> constraint in scope for any type variable <code>a</code> you want to know about.    So for <code>matchType</code> you would have</p>\n\n<pre><code>matchType :: (Typeable a, Typeable b) =&gt; NewLVal a -&gt; Pure b -&gt; Either String (Pure a)\n</code></pre>\n\n<p>It needs also to infect your GADTs any time you want to hide a type variable:</p>\n\n<pre><code>data Command where\n    Assign :: (Typeable a) =&gt; NewLVal a -&gt; Pure a -&gt; Command\n    ...\n</code></pre>\n\n<p>But if you have the appropriate constraints in scope, you can use <code>eqT</code> to make type-safe runtime type comparisons.  For example</p>\n\n<pre><code>-- using ScopedTypeVariables and TypeApplications\nmatchType :: forall a b. (Typeable a, Typeable b) =&gt; NewLVal a -&gt; Pure b -&gt; Either String (Pure b)\nmatchType = case eqT @a @b of\n                Nothing -&gt; Left \"types are not equal\"\n                Just Refl -&gt; {- in this scope the compiler knows that\n                                a and b are the same type -}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 388, "user_id": 2895548, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f8917cb97b90c220287da72544039641?s=128&d=identicon&r=PG&f=1", "display_name": "Mezuzza", "link": "https://stackoverflow.com/users/2895548/mezuzza"}, "edited": false, "score": 0, "creation_date": 1526919634, "post_id": 50440410, "comment_id": 87918835, "body": "Thanks so much both to you and @luqui. I&#39;d missed that the <code>:~:</code> constraint actually proved the types equal for the compiler so I was really confused on how I was supposed to do it otherwise."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "reply_to_user": {"reputation": 388, "user_id": 2895548, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f8917cb97b90c220287da72544039641?s=128&d=identicon&r=PG&f=1", "display_name": "Mezuzza", "link": "https://stackoverflow.com/users/2895548/mezuzza"}, "edited": false, "score": 0, "creation_date": 1526936507, "post_id": 50440410, "comment_id": 87926575, "body": "I don&#39;t think either Luke or I explicitly spelled out how <code>:~:</code> works, so here you go: <code>:~:</code> is a GADT whose sole inhabitant <code>Refl</code> proves that the two type arguments are definitionally equal: <code>data a :~: b where Refl :: a :~: a</code>. You can only give <code>Refl</code> when the type checker can see that <code>a</code> and <code>b</code> are precisely the same type, and pattern matching on <code>Refl</code> refines the types in scope correspondingly."}, {"owner": {"reputation": 388, "user_id": 2895548, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f8917cb97b90c220287da72544039641?s=128&d=identicon&r=PG&f=1", "display_name": "Mezuzza", "link": "https://stackoverflow.com/users/2895548/mezuzza"}, "edited": false, "score": 0, "creation_date": 1526940243, "post_id": 50440410, "comment_id": 87927914, "body": "Just to be clear, are <code>:~:</code> and <code>Refl</code> compiler level magic or are they actually expressible in raw Haskell? I&#39;m guessing the former (analogous to <code>printf</code> in C)."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "reply_to_user": {"reputation": 388, "user_id": 2895548, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f8917cb97b90c220287da72544039641?s=128&d=identicon&r=PG&f=1", "display_name": "Mezuzza", "link": "https://stackoverflow.com/users/2895548/mezuzza"}, "edited": false, "score": 0, "creation_date": 1526940424, "post_id": 50440410, "comment_id": 87927970, "body": "<code>:~:</code> is an ordinary GADT. Here is the source code, for reference: <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/src/Data.Type.Equality.html#%3A~%3A\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/base-4.11.1.0/docs/src/&hellip;</a>"}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 1, "creation_date": 1526945330, "post_id": 50440410, "comment_id": 87929142, "body": "Also, just to be clear since I\u2019ve seen this as a point of confusion for people before, the <code>a</code> in <code>Refl :: a :~: a</code> is distinct from the <code>a</code> in <code>data a :~: b</code>, they just happen to have the same name. It\u2019s really saying <code>Refl :: x :~: x</code>, implying <code>a ~ x</code> and <code>b ~ x</code> and thus <code>a ~ b</code>."}], "tags": [], "owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "is_accepted": true, "score": 5, "last_activity_date": 1526899669, "last_edit_date": 1526899669, "creation_date": 1526860332, "answer_id": 50440410, "question_id": 50440191, "link": "https://stackoverflow.com/questions/50440191/is-it-possible-to-ensure-that-two-gadt-type-variables-are-the-same-without-depen/50440410#50440410", "title": "Is it possible to ensure that two GADT type variables are the same without dependent types?", "body": "<p>You want to perform a comparison at runtime on some type level data (namely the <code>Type</code>s by which your values are indexed). But by the time you run your code, and the <em>values</em> start to interact, the <em>types</em> are long gone. They're erased by the compiler, in the name of producing efficient code. So you need to manually reconstruct the type level data that was erased, using a value which reminds you of the type you'd forgotten you were looking at. You need a <em>singleton</em> copy of <code>Type</code>.</p>\n\n<pre><code>data SType t where\n    SIntT :: SType IntT\n    SPtrT :: SType t -&gt; SType (PtrT t)\n</code></pre>\n\n<p>Members of <code>SType</code> look like members of <code>Type</code> - compare the structure of a value like <code>SPtrT (SPtrT SIntT)</code> with that of <code>PtrT (PtrT IntT)</code> - but they're indexed by the (type-level) <code>Type</code>s that they resemble. For each <code>t :: Type</code> there's precisely one <code>SType t</code> (hence the name <em>singleton</em>), and because <code>SType</code> is a GADT, pattern matching on an <code>SType t</code> tells the type checker about the <code>t</code>. Singletons span the otherwise strictly-enforced separation between types and values.</p>\n\n<p>So when you're constructing your typed tree, you need to track the runtime <code>SType</code>s of your values and compare them when necessary. (This basically amounts to writing a partially verified type checker.) There's <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Type-Equality.html#t:TestEquality\" rel=\"nofollow noreferrer\">a class in <code>Data.Type.Equality</code></a> containing a function which compares two singletons and tells you whether their indexes match or not.</p>\n\n<pre><code>instance TestEquality SType where\n    -- testEquality :: SType t1 -&gt; SType t2 -&gt; Maybe (t1 :~: t2)\n    testEquality SIntT SIntT = Just Refl\n    testEquality (SPtrT t1) (SPtrT t2)\n        | Just Refl &lt;- testEquality t1 t2 = Just Refl\n    testEquality _ _ = Nothing\n</code></pre>\n\n<p>Applying this in your <code>convert</code> function looks roughly like this:</p>\n\n<pre><code>convert :: Statement -&gt; Either String Command\nconvert (AssignStmt oldLval exp) = do\n    (newLval, newLValSType) &lt;- convertLVal oldLval\n    (pure, pureSType) &lt;- convertPure exp\n    case testEquality newLValSType pureSType of\n        Just Refl -&gt; return $ Assign newLval pure'\n        Nothing -&gt; Left \"type mismatch\"\n</code></pre>\n\n<p>There actually aren't a whole lot of dependently typed programs you can't fake up with <code>TypeInType</code> and singletons (are there any?), but it's a real hassle to duplicate all of your datatypes in both \"normal\" and \"singleton\" form. (The duplication gets even worse if you want to pass singletons around implicitly - see <a href=\"http://homepages.inf.ed.ac.uk/slindley/papers/hasochism.pdf\" rel=\"nofollow noreferrer\"><em>Hasochism</em></a> for the details.) <a href=\"http://hackage.haskell.org/package/singletons\" rel=\"nofollow noreferrer\">The <code>singletons</code> package</a> can generate much of the boilerplate for you, but it doesn't really alleviate the pain caused by duplicating the concepts themselves. That's why people want to add real dependent types to Haskell, but we're a good few years away from that yet.</p>\n\n<p><a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Type-Reflection.html\" rel=\"nofollow noreferrer\">The new <code>Type.Reflection</code> module</a> contains a rewritten <code>Typeable</code> class. Its <code>TypeRep</code> is GADT-like and can act as a sort of \"universal singleton\". But programming with it is even more awkward than programming with singletons, in my opinion.</p>\n"}], "owner": {"reputation": 388, "user_id": 2895548, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f8917cb97b90c220287da72544039641?s=128&d=identicon&r=PG&f=1", "display_name": "Mezuzza", "link": "https://stackoverflow.com/users/2895548/mezuzza"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 399, "favorite_count": 1, "accepted_answer_id": 50440410, "answer_count": 2, "score": 2, "last_activity_date": 1527237415, "creation_date": 1526857786, "last_edit_date": 1527237415, "question_id": 50440191, "link": "https://stackoverflow.com/questions/50440191/is-it-possible-to-ensure-that-two-gadt-type-variables-are-the-same-without-depen", "title": "Is it possible to ensure that two GADT type variables are the same without dependent types?", "body": "<p>I'm writing a compiler where I'm using GADTs for my IR but standard data types for my everything else. I'm having trouble during the conversion from the old data type to the GADT. I've attempted to recreate the situation with a smaller/simplified language below.</p>\n\n<p>To start with, I have the following data types:</p>\n\n<pre><code>data OldLVal = VarOL Int -- The nth variable. Can be used to construct a Temp later.\n             | LDeref OldLVal\n\ndata Exp = Var Int -- See above\n         | IntT Int32\n         | Deref Exp\n\ndata Statement = AssignStmt OldLVal Exp\n               | ...\n</code></pre>\n\n<p>I want to convert these into this intermediate form:</p>\n\n<pre><code>{-# LANGUAGE DataKinds      #-}\n{-# LANGUAGE GADTs          #-}\n{-# LANGUAGE KindSignatures #-}\n\n-- Note: this is a Phantom type\ndata Temp a = Temp Int\n\ndata Type = IntT\n          | PtrT Type\n\ndata Command where\n    Assign :: NewLVal a -&gt; Pure a -&gt; Command\n    ...\n\ndata NewLVal :: Type -&gt; * where\n    VarNL :: Temp a -&gt; NewLVal a\n    DerefNL :: NewLVal ('PtrT ('Just a)) -&gt; NewLVal a\n\ndata Pure :: Type -&gt; * where\n    ConstP :: Int32 -&gt; Pure 'IntT\n    ConstPtrP :: Int32 -&gt; Pure ('PtrT a)\n    VarP :: Temp a -&gt; Pure a\n</code></pre>\n\n<p>At this point, I just want to write a conversion from the old data type to the new GADT. For right now, I have something that looks like this.</p>\n\n<pre><code>convert :: Statement -&gt; Either String Command\nconvert (AssignStmt oldLval exp) = do\n   newLval &lt;- convertLVal oldLval -- Either String (NewLVal a)\n   pure &lt;- convertPure exp -- Either String (Pure b)\n   -- return $ Assign newLval pure -- Obvious failure. Can't ensure a ~ b.\n   pure' &lt;- matchType newLval pure -- Either String (Pure a)\n   return $ Assign newLval pure'\n\n-- Converts Pure b into Pure a. Should essentially be a noop, but simply \n-- proves that it is possible.\nmatchType :: NewLVal a -&gt; Pure b -&gt; Either String (Pure a)\nmatchType = undefined\n</code></pre>\n\n<p>I realized that I couldn't write <code>convert</code> trivially, so I attempted to solve the problem using this idea of <code>matchType</code> which acts as a proof that these two types are indeed equal. The question is: how do I actually write <code>matchType</code>? This would be much easier if I had fully dependent types (or so I'm told), but can I finish this code here?</p>\n\n<p>An alternative to this would be to somehow provide <code>newLval</code> as an argument to <code>convertPure</code>, but I think that essentially is just attempting to use dependent types.</p>\n\n<p>Any other suggestions are welcome.</p>\n\n<p>If it helps, I also have a function that can convert an <code>Exp</code> or <code>OldLVal</code> to its type:</p>\n\n<pre><code>class Typed a where\n    typeOf :: a -&gt; Type\ninstance Typed Exp where\n    ...\ninstance Typed OldLVal where\n    ...\n</code></pre>\n\n<p><strong>EDIT:</strong></p>\n\n<p>Thanks to the excellent answers below, I've been able to finish writing this module.</p>\n\n<p>I ended up using <a href=\"https://hackage.haskell.org/package/singletons\" rel=\"nofollow noreferrer\">the <code>singletons</code> package</a> mentioned below. It was a little strange at first, but I found it pretty reasonable to use after I started understanding what I was doing. However, I did run into one pitfall: The type of <code>convertLVal</code> and <code>convertPure</code> requires an existential to express.</p>\n\n<pre><code>data WrappedPure = forall a. WrappedPure (Pure a, SType a)\ndata WrappedLVal = forall a. WrappedLVal (NewLVal a, SType a)\n\nconvertPure :: Exp -&gt; Either String WrappedPure\nconvertLVal :: OldLVal -&gt; Either String WrappedLVal\n</code></pre>\n\n<p>This means that you'll have to unwrap that existential in <code>convert</code>, but otherwise, the answers below show you the way. Thanks so much once again.</p>\n"}, {"tags": ["haskell", "monads", "identity"], "answers": [{"comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 2, "creation_date": 1526855359, "post_id": 50439927, "comment_id": 87894045, "body": "That&#39;s weird, I wouldn&#39;t expect <code>Identity</code> to have a num instance.  Why?  At this rate, why don&#39;t we add num instances for all applicatives?"}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1526855380, "post_id": 50439927, "comment_id": 87894049, "body": "@luqui That, I don&#39;t know. It&#39;s especially strange since I don&#39;t think <code>IdentityT</code> has those instances. Although, I&#39;m not sure why you&#39;d restrict to just applicatives, either way... I think the <code>Num</code> laws should be (vacuously) satisfied by something like <code>data VoidWithArg a</code> (where there are no constructors."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1526856207, "post_id": 50439927, "comment_id": 87894253, "body": "@DavidYoung It&#39;s kind of tricky to implement <code>fromInteger</code> for <code>VoidWithArg a</code>."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 1, "creation_date": 1526856537, "post_id": 50439927, "comment_id": 87894329, "body": "@luqui Applicative is actually not quite strong enough to guarantee the one <code>Num</code> law, namely, <code>abs x * signum x == x</code>. (Think of <code>[]</code>, or <code>Parser</code>.) I think last time I thought about this, I landed on <code>x *&gt; x = x</code> being a plausible rule to distinguish those applicatives for which the obvious <code>Applicative</code>-based <code>Num</code> instance is law abiding and those for which it isn&#39;t, but I don&#39;t know of an existing class with that as a law."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1526861479, "post_id": 50439927, "comment_id": 87895250, "body": "@DanielWagner Are there any interesting <code>Applicative</code>s (ie not <code>Identity</code> or <code>Proxy</code>) for which <code>x *&gt; x = x</code> holds? Struggling to think of any"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1526867137, "post_id": 50439927, "comment_id": 87896317, "body": "@BenjaminHodgson, there&#39;s <code>Reader</code>, but that&#39;s not interesting either. The most interesting I can think of is <code>Writer</code> with a monoid for which <code>forall x. x &lt;&gt; x = x</code>. Something like <code>Writer Any</code>, say."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 2, "creation_date": 1526871563, "post_id": 50439927, "comment_id": 87897108, "body": "@BenjaminHodgson (and dfeuer, and Daniel Wagner): There is <code>Maybe</code>, if that counts as interesting. <code>x *&gt; x = x</code> is a consequence of being what King and Wadler in <a href=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.40.7571&amp;rep=rep1&amp;type=pdf\" rel=\"nofollow noreferrer\"><i>Combining Monads</i></a> call an idempotent monad. (Note we might want to tweak that name -- not only because the property generalises straightforwardly to applicatives, but also because &quot;idempotent monad&quot; has a different meaning in categorical parlance.)"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 1, "creation_date": 1526902352, "post_id": 50439927, "comment_id": 87909181, "body": "@BenjaminHodgson Most &quot;zippy&quot; applicatives (e.g. <code>Maybe</code> as duplode mentioned, <code>ZipList</code>, and the other container types that do zip-like things on <code>(&lt;*&gt;)</code>) satisfy that law."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1526903450, "post_id": 50439927, "comment_id": 87909799, "body": "Thanks, those are both good examples. (I feel like I should&#39;ve been able to come up with them myself! Don&#39;t code tired, kids)"}], "tags": [], "owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "is_accepted": true, "score": 3, "last_activity_date": 1526855504, "last_edit_date": 1526855504, "creation_date": 1526854929, "answer_id": 50439927, "question_id": 50439871, "link": "https://stackoverflow.com/questions/50439871/identity-monad-behaviour-difference-in-haskell/50439927#50439927", "title": "Identity Monad - Behaviour difference in Haskell?", "body": "<p>This is because <code>Identity</code> has a <code>Num</code> instance and <code>Maybe</code> does not (you can see the instances of a type by using <code>:i</code> in GHCi or looking <a href=\"http://hackage.haskell.org/package/base-4.11.0.0/docs/Data-Functor-Identity.html#t:Identity\" rel=\"nofollow noreferrer\">in the Hackage documentation</a>).</p>\n\n<p>So, when you have <code>\\x -&gt; Identity 2 &gt;&gt;= \\y -&gt; x * y</code>, that <code>*</code> is actually the <code>*</code> from the <code>Num</code> instance for <code>Identity a</code> (where <code>a</code> is itself a <code>Num</code> instance, like <code>Int</code> or <code>Double</code>, etc).</p>\n\n<p>Additionally, numeric literals in Haskell are polymorphic: <code>5 :: Num a =&gt; a</code>, so they can behave as any <code>Num</code> instance rather than being restricted to a specific one (like <code>Int</code> or <code>Double</code>). That is what's happening when you try something like <code>Identity 5 + 6</code>. The <code>6</code> is inferred to have type <code>Num a =&gt; Identity a</code>, since <code>(+) :: Num a =&gt; a -&gt; a -&gt; a</code>.</p>\n\n<p>You can see this more explicitly:</p>\n\n<pre><code>ghci&gt; :t 5\n5 :: Num p =&gt; p\nghci&gt; 5 :: Identity Int\nIdentity 5\nghci&gt; 5 :: Maybe Int\n\n&lt;interactive&gt;:12:1: error:\n    \u2022 No instance for (Num (Maybe Int)) arising from the literal \u20185\u2019\n    \u2022 In the expression: 5 :: Maybe Int\n      In an equation for \u2018it\u2019: it = 5 :: Maybe Int\n</code></pre>\n"}], "owner": {"reputation": 1302, "user_id": 2126233, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/b1e8a36dcc7419c324aa876ae7c8128c?s=128&d=identicon&r=PG", "display_name": "pls", "link": "https://stackoverflow.com/users/2126233/pls"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 249, "favorite_count": 1, "accepted_answer_id": 50439927, "answer_count": 1, "score": 1, "last_activity_date": 1617557484, "creation_date": 1526854306, "last_edit_date": 1617557484, "question_id": 50439871, "link": "https://stackoverflow.com/questions/50439871/identity-monad-behaviour-difference-in-haskell", "title": "Identity Monad - Behaviour difference in Haskell?", "body": "<p>I have recently been playing around with Monads in Haskell (still a relative beginner with all this). I came across some interesting behaviour (or at least interesting to me) with the <code>Identity Monad</code>.</p>\n<hr />\n<p>If I write the following function:</p>\n<p><code>let f = \\x -&gt; Identity 2 &gt;&gt;= \\y -&gt; x * y</code></p>\n<p>and then do <code>:t</code> I get <code>f :: Num b =&gt; Identity b -&gt; Identity b</code>. It is inferring that x is an <code>Identity (Num b)</code>. I am able to call the function with <code>6</code> and I get the result <code>12</code>.</p>\n<p>However if I try the same with <code>Maybe</code> like so:</p>\n<p><code>let g = \\x -&gt; Just 2 &gt;&gt;= \\y -&gt; x * y</code></p>\n<pre><code>&lt;interactive&gt;:2096:5: error:\n    \u2022 Non type-variable argument in the constraint: Num (Maybe b)\n      (Use FlexibleContexts to permit this)\n    \u2022 When checking the inferred type\n        g :: forall b. Num (Maybe b) =&gt; Maybe b -&gt; Maybe b\n</code></pre>\n<p>I therefore need to explicitly return <code>Maybe</code> or use <code>return</code>. So I do: <code>let g = \\x -&gt; Just 2 &gt;&gt;= \\y -&gt; return $ x * y</code>.</p>\n<p>Everything works fine. However then I got to wondering what is happening with the <code>Identity</code> monad.</p>\n<p>Firstly I tried adding the explicit return type like so:</p>\n<p><code>let f = \\x -&gt; Identity 2 &gt;&gt;= \\y -&gt; Identity $ x * y</code></p>\n<p>and then did <code>:t</code> again and I got <code>f :: Num b =&gt; b -&gt; Identity b</code>. Which is what I was expecting the first time around.</p>\n<hr />\n<p>Which made me wonder about how it was able to handle <code>x + y</code> without <code>Identity $</code> if it was inferring <code>x</code> and <code>y</code>to be wrapped inside an\n<code>Identity</code>. So I tried the following:</p>\n<p><code>Identity 5</code> + <code>Identity 6</code> with the result being <code>11</code></p>\n<p><code>Identity 5</code> + <code>6</code> with the result being <code>11</code> again</p>\n<p>However it I try the same with <code>Maybe</code> like so</p>\n<p><code>Just 5</code> + <code>Just 6</code></p>\n<p><code>Just 5</code> + <code>6</code></p>\n<p>I get the following error:</p>\n<pre><code>&lt;interactive&gt;:2116:1: error:\n    \u2022 Non type-variable argument in the constraint: Num (Maybe a)\n      (Use FlexibleContexts to permit this)\n    \u2022 When checking the inferred type\n        it :: forall a. (Num (Maybe a), Num a) =&gt; Maybe a\n</code></pre>\n<p>I have tried <code>FlexibleContexts</code> but I just got the following error:</p>\n<pre><code>&lt;interactive&gt;:2134:1: error:\n    \u2022 No instance for (Num (Maybe a0)) arising from a use of \u2018it\u2019\n    \u2022 In the first argument of \u2018print\u2019, namely \u2018it\u2019\n      In a stmt of an interactive GHCi command: print it\n</code></pre>\n<hr />\n<p>I was wondering if someone could shed a little light on why the <code>Identity</code> monad behaviour is different to <code>Maybe</code>?</p>\n<p>Also is it possible to use <code>FlexibleContexts</code> to get the same behaviour with the <code>Maybe</code> monad? I haven't been able to get it to work as of yet.</p>\n"}, {"tags": ["haskell", "servant"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1526853636, "post_id": 50439760, "comment_id": 87893660, "body": "You need to import the module where the <code>instance</code> is defined. You however do (well you basically can&#39;t) name the instance. It will import all the instances of that module. So something like <code>import Some.Module()</code>."}, {"owner": {"reputation": 4854, "user_id": 1502035, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/2ZmRs.jpg?s=128&g=1", "display_name": "Kiara Grouwstra", "link": "https://stackoverflow.com/users/1502035/kiara-grouwstra"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1526854134, "post_id": 50439760, "comment_id": 87893766, "body": "@WillemVanOnsem thanks, I&#39;ve updated the question with a complication -- the module it is defined in is internal."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 3, "creation_date": 1526856925, "post_id": 50439760, "comment_id": 87894429, "body": "@Tycho Importing any module which (transitively) imports that internal module will do (e.g. importing <code>Servant.Client</code> should be enough, from my reading of the source for that module). That said, the module you linked to appears to be exported, so what&#39;s the problem? Can you make an <a href=\"https://stackoverflow.com/help/mcve\">MCVE</a> for us to play with?"}], "answers": [{"comments": [{"owner": {"reputation": 4854, "user_id": 1502035, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/2ZmRs.jpg?s=128&g=1", "display_name": "Kiara Grouwstra", "link": "https://stackoverflow.com/users/1502035/kiara-grouwstra"}, "edited": false, "score": 0, "creation_date": 1526899507, "post_id": 50441776, "comment_id": 87907636, "body": "I managed to reproduce my issue with this, then realized my versions were behind. Fixing that solved it. Thanks!"}], "tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": true, "score": 3, "last_activity_date": 1526874848, "creation_date": 1526874848, "answer_id": 50441776, "question_id": 50439760, "link": "https://stackoverflow.com/questions/50439760/no-instance-for-trait-thats-already-implemented/50441776#50441776", "title": "&quot;No instance for&quot; trait that&#39;s already implemented", "body": "<p>It works fine if, as Daniel said, you import the module that defines the desired instance:</p>\n\n<pre><code>Prelude&gt; import Control.Exception.Lifted\nPrelude Control.Exception.Lifted&gt; import Servant.Client\nPrelude Control.Exception.Lifted Servant.Client&gt; :set -XTypeApplications\nPrelude Control.Exception.Lifted Servant.Client&gt; :type finally @ ClientM\nfinally @ ClientM :: ClientM a -&gt; ClientM b -&gt; ClientM a\n</code></pre>\n"}], "owner": {"reputation": 4854, "user_id": 1502035, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/2ZmRs.jpg?s=128&g=1", "display_name": "Kiara Grouwstra", "link": "https://stackoverflow.com/users/1502035/kiara-grouwstra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 54, "favorite_count": 0, "accepted_answer_id": 50441776, "answer_count": 1, "score": 1, "last_activity_date": 1526874848, "creation_date": 1526853464, "last_edit_date": 1526854176, "question_id": 50439760, "link": "https://stackoverflow.com/questions/50439760/no-instance-for-trait-thats-already-implemented", "title": "&quot;No instance for&quot; trait that&#39;s already implemented", "body": "<p>I'd like to use Servant's <a href=\"https://hackage.haskell.org/package/servant-client-0.13.0.1/docs/Servant-Client.html#t:ClientM\" rel=\"nofollow noreferrer\"><code>ClientM</code></a> monad with <a href=\"http://hackage.haskell.org/package/lifted-base-0.2.3.12/docs/Control-Exception-Lifted.html#v:finally\" rel=\"nofollow noreferrer\"><code>finally</code></a><code>:: MonadBaseControl IO m =&gt; m a -&gt; m b -&gt; m a</code>, but am faced with error <code>No instance for (MonadBaseControl IO ClientM)</code>.</p>\n\n<p>Oddly, this exact instance appears to be <a href=\"https://hackage.haskell.org/package/servant-client-0.13.0.1/docs/Servant-Client.html#t:ClientM\" rel=\"nofollow noreferrer\">defined</a> already, be it from an <a href=\"https://hackage.haskell.org/package/servant-client-0.13.0.1/docs/src/Servant.Client.Internal.HttpClient.html\" rel=\"nofollow noreferrer\">internal</a> module.</p>\n\n<p>Do I need to explicitly import such instances somehow?</p>\n"}, {"tags": ["haskell", "abstract-syntax-tree", "state-monad", "symbol-table", "happy"], "comments": [{"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1526857409, "post_id": 50438860, "comment_id": 87894539, "body": "For future readers: parsing in a custom monad is addressed in Section 2.5 of <a href=\"https://www.haskell.org/happy/doc/happy.pdf\" rel=\"nofollow noreferrer\">the Happy manual</a>. It sounds like you&#39;ve already read that, though, which leaves me a little unclear on what exactly you&#39;re asking. Is there a specific part of the manual you don&#39;t understand?"}, {"owner": {"reputation": 11, "user_id": 6358803, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/387f9bc8c7cb5df4529cf3109afd20c2?s=128&d=identicon&r=PG&f=1", "display_name": "Erick", "link": "https://stackoverflow.com/users/6358803/erick"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1526858265, "post_id": 50438860, "comment_id": 87894713, "body": "It is more a question on the monads themselves, to be fair. I can already form an AST, without using any monads with happy, and, just building a sym-table seems easy enough just using a state and modifying after some select actions. The problem is doing both at the same time, I have no idea how to save an AST together with a symtable, and selectively modify one or the other when I want."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1526858573, "post_id": 50438860, "comment_id": 87894775, "body": "I&#39;m not a Happy user, so don&#39;t listen to me too carefully, but from the docs it looks like Happy will basically immediately feed the monadic computation returned from the <code>{%}</code> block into <code>&gt;&gt;=</code>. So the value inside the monad (ie what you <code>return</code>) is what <code>$1</code>/<code>$2</code>/etc refer to in the parent production rule. Since it sounds like you only sometimes want there to be a value you&#39;ll probably need to return <code>Maybe</code> a node and filter it out in the parent. Just a sketch but hope that helps?"}, {"owner": {"reputation": 11, "user_id": 6358803, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/387f9bc8c7cb5df4529cf3109afd20c2?s=128&d=identicon&r=PG&f=1", "display_name": "Erick", "link": "https://stackoverflow.com/users/6358803/erick"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1526859444, "post_id": 50438860, "comment_id": 87894917, "body": "Hmm, alright I think I see it slightly more clear, I did not get before that what happy did after an action was wrapping it in a return and passing it to the next with a bind. I will try something out. Thank you very much for answering!."}], "owner": {"reputation": 11, "user_id": 6358803, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/387f9bc8c7cb5df4529cf3109afd20c2?s=128&d=identicon&r=PG&f=1", "display_name": "Erick", "link": "https://stackoverflow.com/users/6358803/erick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 266, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1526853242, "creation_date": 1526846136, "last_edit_date": 1526853242, "question_id": 50438860, "link": "https://stackoverflow.com/questions/50438860/creating-an-ast-and-manage-at-the-same-time-a-symbol-table-using-haskells-hap", "title": "Creating an AST and manage, at the same time, a symbol Table using Haskell&#39;s Happy parsers", "body": "<p>I am creating a simple imperative language from scratch, I already have a working syntactic tree, without much complication, it just uses the bottom-up style of parsing to create it using a simple tree data structure. The idea now is to implement a complete LeBlanc-Cook style symbol table. Its structure is not complicated, the problem is that I don't know how to make happy fill it while creating the tree at the same time.</p>\n\n<p>The idea behind doing it all in a single pass is that in this way the AST can be filled with only what is the minimum necessary, ignoring stuff like variable or type declarations, which only effects are in the symbol table. Traversing the AST to fill the table is my last option.</p>\n\n<p>I have the basic idea of it being some kind of global state, modified just in certain select times, like when a new block is open or when a variable is declared, but I have no idea how to use the environment that happy gives me together with whatever monadic structure I would create.</p>\n\n<p>I know this question could be reduced to something like \"how does happy work?\", but anyways. Any comment is appreciated.</p>\n\n<p>Here's an example to illustrate a little better my question.</p>\n\n<pre><code>% monad {MyState}\n...\nSTART: INSTRUCTIONS   { (AST_Root $1, Final_Symtable_State) } -- Ideally\n\nINSTRUCTIONS: INSTRUCTIONS INSTRUCTION    { $2:$1 } -- A list of all instructions\n    | INSTRUCTION                         { [$1] }\n\nINSTRUCTION : VARDEF    {%???}\n    |  TYPEDEF\n    |  VARMOD   \n    | ...\n\n...\n\nVARDEF: let identifier : Int                   {%???}  -- This should modify the symtable state and not the tree\n           | let identifier : Int = number     {%???}  -- This should modify the symtable and provide a new branch for the tree\n</code></pre>\n\n<p>It seems like a single state would maybe not work out, and there is a combination of monadic and not monadic actions, what would be the best structure to work this out.</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1526833132, "post_id": 50436794, "comment_id": 87887809, "body": "N.b. either is a sum type"}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 1, "creation_date": 1526834085, "post_id": 50436794, "comment_id": 87888095, "body": "Note that <code>prod</code> is precisely <code>&lt;&lt;*&gt;&gt;</code> (from <code>bifunctors</code>) at the two-tuple case."}], "tags": [], "owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "is_accepted": true, "score": 5, "last_activity_date": 1526847639, "last_edit_date": 1526847639, "creation_date": 1526832476, "answer_id": 50436794, "question_id": 50436668, "link": "https://stackoverflow.com/questions/50436668/monoidal-product-in-haskell/50436794#50436794", "title": "Monoidal product in Haskell", "body": "<p>Haskell spells the Cartesian product type (your <code>*</code>) as <code>(,)</code>, as in <code>(Int, Bool)</code>. It doesn't take a lot of code to construct the product morphism by hand:</p>\n\n<pre><code>prod :: (a -&gt; b, c -&gt; d) -&gt; (a, c) -&gt; (b, d)\nprod (f, g) (x, y) = (f x, g y)\n</code></pre>\n\n<p>Curried versions of <code>prod</code>, with a type of <code>(a -&gt; b) -&gt; (c -&gt; d) -&gt; (a, c) -&gt; (b, d)</code>, can be found in <code>base</code> under the names <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Control-Arrow.html#v:-42--42--42-\" rel=\"nofollow noreferrer\"><code>Control.Arrow.(***)</code></a> or <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Bifunctor.html#v:bimap\" rel=\"nofollow noreferrer\"><code>Data.Bifunctor.bimap</code></a>. Each of these functions is actually overloaded, so they work at a variety of types, not just the product, such as <code>bimap :: (a -&gt; b) -&gt; (c -&gt; d) -&gt; Either a c -&gt; Either b d</code>.</p>\n"}], "owner": {"reputation": 121, "user_id": 9819411, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e0f8b93e1c84796d49aea943b33a1308?s=128&d=identicon&r=PG&f=1", "display_name": "Jerry", "link": "https://stackoverflow.com/users/9819411/jerry"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 0, "accepted_answer_id": 50436794, "answer_count": 1, "score": 1, "last_activity_date": 1526847639, "creation_date": 1526831673, "last_edit_date": 1526831745, "question_id": 50436668, "link": "https://stackoverflow.com/questions/50436668/monoidal-product-in-haskell", "title": "Monoidal product in Haskell", "body": "<p>I'm considering to learn Haskell to do some specific task. I want to do monoidal product:</p>\n\n<p>Suppose <code>f:A -&gt; B</code> and <code>g: C -&gt; D</code> are functions, and I want to do a monoidal product:</p>\n\n<pre><code>f * g : A * C -&gt; B * D\n</code></pre>\n\n<p>Is this easily implementable in Haskell? If so, can you give a simple example?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1526826107, "post_id": 50435705, "comment_id": 87885625, "body": "Can you explain in your own words what the last line of <code>mult</code> means?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 5, "creation_date": 1526826110, "post_id": 50435705, "comment_id": 87885629, "body": "From what you know of algebra, does this equation look right to you? <code>(1+x)*(1+y) = 1 + x*y</code>. That&#39;s what you&#39;ve written as your third defining equation for <code>mult</code>."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1526826183, "post_id": 50435705, "comment_id": 87885653, "body": "Hint: how can you calculate <code>(x+1)*y</code> in terms of <code>x</code> and <code>y</code>?"}, {"owner": {"reputation": 15, "user_id": 9819140, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "4320", "link": "https://stackoverflow.com/users/9819140/4320"}, "edited": false, "score": 0, "creation_date": 1526826398, "post_id": 50435705, "comment_id": 87885708, "body": "Our professor abbreviate multiply -&gt; mult. so I used it."}, {"owner": {"reputation": 15, "user_id": 9819140, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "4320", "link": "https://stackoverflow.com/users/9819140/4320"}, "edited": false, "score": 0, "creation_date": 1526826474, "post_id": 50435705, "comment_id": 87885736, "body": "and thank you for comment, i think i found what was problem. thx"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1526826913, "post_id": 50435705, "comment_id": 87885878, "body": "@4320 If you have solved your problem, please add an answer below explaining what you discovered and how you fixed it. This way, future visitors who have a similar problem can learn from your discoveries. (It may seem odd at first to both ask and answer a question, but it is considered perfectly polite and even desirable here on SO.)"}, {"owner": {"reputation": 15, "user_id": 9819140, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "4320", "link": "https://stackoverflow.com/users/9819140/4320"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1526828946, "post_id": 50435705, "comment_id": 87886518, "body": "@DanielWagner Thank for your information :)"}], "answers": [{"tags": [], "owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "is_accepted": false, "score": 3, "last_activity_date": 1526826630, "creation_date": 1526826630, "answer_id": 50435863, "question_id": 50435705, "link": "https://stackoverflow.com/questions/50435705/how-can-i-define-multiplication-on-nats/50435863#50435863", "title": "How can i define multiplication on Nats?", "body": "<p>Let's think about this more carefully. Instead of pattern matching on both sides, let's just do one. So:</p>\n\n<pre><code>mult :: Nat -&gt; Nat -&gt; Nat\nmult  Z    m = -- TODO: 0 * m = ???\nmult (S n) m = -- TODO: (1 + n) * m = ???\n</code></pre>\n\n<p>Let's start with <code>0 * m</code>, which is obviously <code>0</code>:</p>\n\n<pre><code>mult  Z    m = Z\n</code></pre>\n\n<p>Now for <code>(1 + n) * m</code>. From simple algebra, this is <code>m + n*m</code>. So, assuming you've already made a <code>plus</code> function somewhere, this is easy:</p>\n\n<pre><code>mult (S n) m = plus m (mult n m)\n</code></pre>\n\n<p>Note that an implementation of <code>plus</code> is a requirement for this. If you understand this, try re-writing <code>mult</code> by pattern matching on both sides.</p>\n"}], "owner": {"reputation": 15, "user_id": 9819140, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "4320", "link": "https://stackoverflow.com/users/9819140/4320"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 142, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1526828901, "creation_date": 1526825651, "last_edit_date": 1526828901, "question_id": 50435705, "link": "https://stackoverflow.com/questions/50435705/how-can-i-define-multiplication-on-nats", "title": "How can i define multiplication on Nats?", "body": "<p>I'm having a problem with defining <code>mult</code> on <code>Nat</code>s in Haskell.</p>\n\n<pre><code>mult :: Nat -&gt; Nat -&gt; Nat\nmult  Z    m = Z\nmult  m    Z = Z\nmult (S m)(S n) = S (mult m n)\ntwo    = S (S Z)\nthree  = S (S (S Z))\n</code></pre>\n\n<p>I get these results: </p>\n\n<pre><code>&gt; mult Z three             \nZ\n&gt; mult two three\nS (S Z)\n&gt; mult three three\nS (S (S Z))\n</code></pre>\n\n<p>Which part is causing the problem here?</p>\n\n<p>Solved.</p>\n\n<p>Nat : Natural</p>\n\n<p>Z : Zero </p>\n\n<p>mult : multiply</p>\n\n<pre><code>mult :: Nat -&gt; Nat -&gt; Nat\n\nmult Z    m = Z                       -------- 0*m = 0\n\nmult (S n) m = plus m (mult n m)      -------- (n+1)*m = m+nm\n\n\n&gt; mult Z three             \nZ\n&gt; mult two three\nS (S (S (S (S (S Z)))))\n&gt; mult three three\nS (S (S (S (S (S (S (S (S Z))))))))\n</code></pre>\n\n<p>my cell was having problem with equation</p>\n\n<p><strong>mult (S m)(S n) = S (mult m n)</strong></p>\n\n<p>it was incorrect equation same as (1+m)<em>(1+n) = 1 + m</em>n</p>\n\n<p>so i changed equation as</p>\n\n<p><strong>mult (S n) m = plus m (mult n m)</strong> --- (n+1)*m = m+nm</p>\n\n<p>Thanks for who answered my question. I finished easily thanks to your help.</p>\n"}, {"tags": ["haskell", "ioref"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1526826971, "post_id": 50434732, "comment_id": 87885895, "body": "Quick question: why are you using <code>&gt;&gt;</code> instead of <code>do</code>-notation here? This clearly breaks the 80-column rule."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1526827324, "post_id": 50434732, "comment_id": 87885992, "body": "You do not use the old value in <code>globalModel</code> here. Therefore switching to <code>atomicModifyIORef</code> won&#39;t change anything. You&#39;re going to need to do a bit of debugging work to determine the actual cause of your problem instead of shotgun changing things to see what works."}, {"owner": {"reputation": 1059, "user_id": 1395810, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/434085debcc69044679269ce84d5dad1?s=128&d=identicon&r=PG", "display_name": "ruby_object", "link": "https://stackoverflow.com/users/1395810/ruby-object"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1526838849, "post_id": 50434732, "comment_id": 87889473, "body": "@AJFarmar, good question! how do I rewrite it in do notation?"}, {"owner": {"reputation": 1059, "user_id": 1395810, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/434085debcc69044679269ce84d5dad1?s=128&d=identicon&r=PG", "display_name": "ruby_object", "link": "https://stackoverflow.com/users/1395810/ruby-object"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1526838919, "post_id": 50434732, "comment_id": 87889502, "body": "@Daniel Wagner, where I can find advice about debugging Haskell programs?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1526842100, "post_id": 50434732, "comment_id": 87890441, "body": "@ruby_object Tutorial recommendations (and recommendations for offsite resources generally) go stale too quickly to be useful long-term. But I&#39;m confident you have the skills needed to find advice on your own."}, {"owner": {"reputation": 1059, "user_id": 1395810, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/434085debcc69044679269ce84d5dad1?s=128&d=identicon&r=PG", "display_name": "ruby_object", "link": "https://stackoverflow.com/users/1395810/ruby-object"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1526844053, "post_id": 50434732, "comment_id": 87891072, "body": "@Daniel Wagner You were right, switching to atomicModifyIORef did not work. But I still think I have learned something. Now I will read about debugging Haskell programs."}], "answers": [{"comments": [{"owner": {"reputation": 1059, "user_id": 1395810, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/434085debcc69044679269ce84d5dad1?s=128&d=identicon&r=PG", "display_name": "ruby_object", "link": "https://stackoverflow.com/users/1395810/ruby-object"}, "reply_to_user": {"reputation": 5397, "user_id": 2193020, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/aa10d01a3d48851073bd61877a56b5a7?s=128&d=identicon&r=PG", "display_name": "hnefatl", "link": "https://stackoverflow.com/users/2193020/hnefatl"}, "edited": false, "score": 0, "creation_date": 1526848297, "post_id": 50438750, "comment_id": 87892277, "body": "I do not know, but the code appears to work. I am Haskell noob and I do not know what I am doing half of the time."}], "tags": [], "owner": {"reputation": 1059, "user_id": 1395810, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/434085debcc69044679269ce84d5dad1?s=128&d=identicon&r=PG", "display_name": "ruby_object", "link": "https://stackoverflow.com/users/1395810/ruby-object"}, "is_accepted": false, "score": 1, "last_activity_date": 1526849397, "last_edit_date": 1526849397, "creation_date": 1526845385, "answer_id": 50438750, "question_id": 50434732, "link": "https://stackoverflow.com/questions/50434732/how-do-i-rewrite-a-haskell-function-that-uses-modifyioref-to-use-atomicmodifyio/50438750#50438750", "title": "How do I rewrite a Haskell function that uses modifyIORef&#39; to use atomicModifyIORef&#39;", "body": "<p>The key to solving the problem was rewriting the function using do notation.</p>\n\n<pre><code>timerFun g c = do\n  i &lt;- readIORef g\n  writeIORef g (updateGlobalModel Tick i)\n  Gtk.widgetQueueDraw c\n  return True\n</code></pre>\n\n<p>At this point I had writeIORef separated from other functions, so rewriting it using atomicModifyIORef' was trivial.</p>\n\n<pre><code>timerFun g c = do\n  atomicModifyIORef' g $ \\p -&gt; \n    (updateGlobalModel Tick p, ())\n  Gtk.widgetQueueDraw c\n  return True\n</code></pre>\n\n<p>Same function with less syntactic sugar</p>\n\n<pre><code>timerFun g c = (atomicModifyIORef' g (\\p -&gt; (updateGlobalModel Tick p, ()))) &gt;&gt;\n  Gtk.widgetQueueDraw c &gt;&gt;\n  return True\n</code></pre>\n"}], "owner": {"reputation": 1059, "user_id": 1395810, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/434085debcc69044679269ce84d5dad1?s=128&d=identicon&r=PG", "display_name": "ruby_object", "link": "https://stackoverflow.com/users/1395810/ruby-object"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 162, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1526849397, "creation_date": 1526818418, "last_edit_date": 1526844985, "question_id": 50434732, "link": "https://stackoverflow.com/questions/50434732/how-do-i-rewrite-a-haskell-function-that-uses-modifyioref-to-use-atomicmodifyio", "title": "How do I rewrite a Haskell function that uses modifyIORef&#39; to use atomicModifyIORef&#39;", "body": "<p>I am trying to solve a problem where Haskell gives different output to the same arguments. someone already has suggested that it could be a thread related issue.</p>\n\n<p>I managed to rewrite a simple function to use the atomic version, but with more complex one I need help.</p>\n\n<p>This is my code:</p>\n\n<pre><code>timeFun globalModel canvas = modifyIORef' globalModel (updateGlobalModel Tick) &gt;&gt; Gtk.widgetQueueDraw canvas &gt;&gt; return True\n</code></pre>\n\n<h2>My findings</h2>\n\n<p>Following the advice I tried to rewrite the function using do notation:</p>\n\n<pre><code>timerFun g c = do\n  i &lt;- readIORef g\n  writeIORef g (updateGlobalModel Tick i)\n  Gtk.widgetQueueDraw c\n  return True\n</code></pre>\n\n<p>Version that uses atomic code and do notation:</p>\n\n<pre><code>timerFun g c = do\n  atomicModifyIORef' g $ \\p -&gt; do\n    (updateGlobalModel Tick p ,())\n  Gtk.widgetQueueDraw c\n  return True\n</code></pre>\n"}, {"tags": ["haskell", "monads"], "answers": [{"comments": [{"owner": {"reputation": 4854, "user_id": 1502035, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/2ZmRs.jpg?s=128&g=1", "display_name": "Kiara Grouwstra", "link": "https://stackoverflow.com/users/1502035/kiara-grouwstra"}, "edited": false, "score": 1, "creation_date": 1526853506, "post_id": 50432090, "comment_id": 87893629, "body": "Thanks for your help! I&#39;d have gotten lost trying to find this black magic. I&#39;ve somehow run into an error actually trying to use its <code>MonadBaseControl</code> instance though -- I&#39;ve posted that as a new question <a href=\"https://stackoverflow.com/questions/50439760/no-instance-for-trait-thats-already-implemented\">here</a>."}], "tags": [], "owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "is_accepted": true, "score": 9, "last_activity_date": 1526795809, "creation_date": 1526795809, "answer_id": 50432090, "question_id": 50431923, "link": "https://stackoverflow.com/questions/50431923/convert-monad-to-io/50432090#50432090", "title": "convert monad to IO", "body": "<p>Note that <code>ClientM</code> also has a <code>MonadBaseControl IO ClientM</code> instance  which is for this sort of thing. For instance, I think the following should typecheck (and can be used with <code>m ~ ClientM</code>).</p>\n\n<pre><code>finally' :: MonadBaseControl IO m =&gt; m a -&gt; m b -&gt; m a\nfinally' x y = control $ \\runInIO -&gt; catch (runInIO x) (runInIO y)\n</code></pre>\n\n<h1>EDIT</h1>\n\n<p>Not only does the above typecheck, but it is defined in <a href=\"http://hackage.haskell.org/package/lifted-base-0.2.3.12/docs/Control-Exception-Lifted.html#v:finally\" rel=\"noreferrer\"><code>lifted-base</code> as <code>finally</code></a>.</p>\n"}, {"tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": false, "score": 1, "last_activity_date": 1526856336, "last_edit_date": 1526856336, "creation_date": 1526821819, "answer_id": 50435177, "question_id": 50431923, "link": "https://stackoverflow.com/questions/50431923/convert-monad-to-io/50435177#50435177", "title": "convert monad to IO", "body": "<p>It seems that <code>ClientM</code> must be run at some point with <a href=\"http://hackage.haskell.org/package/servant-client-0.13.0.1/docs/Servant-Client.html#v:runClientM\" rel=\"nofollow noreferrer\"><code>runClientM</code></a>, which brings it down to <code>IO</code>.</p>\n\n<p>Perhaps the simplest solution\u2014if it happens to fit your case\u2014would be to use <code>finally</code> to wrap that resulting <code>IO</code> action.</p>\n"}], "owner": {"reputation": 4854, "user_id": 1502035, "user_type": "registered", "accept_rate": 94, "profile_image": "https://i.stack.imgur.com/2ZmRs.jpg?s=128&g=1", "display_name": "Kiara Grouwstra", "link": "https://stackoverflow.com/users/1502035/kiara-grouwstra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 264, "favorite_count": 0, "closed_date": 1526827403, "accepted_answer_id": 50432090, "answer_count": 2, "score": 4, "last_activity_date": 1526856336, "creation_date": 1526793799, "question_id": 50431923, "link": "https://stackoverflow.com/questions/50431923/convert-monad-to-io", "closed_reason": "Duplicate", "title": "convert monad to IO", "body": "<p>I'd like to use <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Control-Exception-Base.html#v:finally\" rel=\"nofollow noreferrer\"><code>finally</code></a>, signature <code>IO a -&gt; IO b -&gt; IO a</code>.</p>\n\n<p>However, the operations I wanna use are based on a different monad than <code>IO</code> (namely <a href=\"https://hackage.haskell.org/package/servant\" rel=\"nofollow noreferrer\"><code>Servant</code></a>'s <a href=\"http://hackage.haskell.org/package/servant-client-0.13.0.1/docs/Servant-Client.html#t:ClientM\" rel=\"nofollow noreferrer\"><code>ClientM</code></a>).</p>\n\n<p>I knew <a href=\"http://hackage.haskell.org/package/base-4.11.0.0/docs/Control-Monad-IO-Class.html#v:liftIO\" rel=\"nofollow noreferrer\"><code>liftIO</code></a>, but that seems to do the opposite -- <code>IO a -&gt; m a</code>.</p>\n\n<p>How can I transform my monads into IOs, or lift <code>finally</code> such as to operate on my monads instead?</p>\n"}, {"tags": ["scala", "haskell", "functional-programming", "terminology"], "comments": [{"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 13, "creation_date": 1526791248, "post_id": 50431709, "comment_id": 87877730, "body": "Functions can&#39;t be tested for equality, but that doesn&#39;t mean they can&#39;t be values. Values are the things that inhabit types."}, {"owner": {"reputation": 335867, "user_id": 2988, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed181f8c80df53d2b67a4f4fff088ed4?s=128&d=identicon&r=PG", "display_name": "J&#246;rg W Mittag", "link": "https://stackoverflow.com/users/2988/j%c3%b6rg-w-mittag"}, "edited": false, "score": 1, "creation_date": 1526812653, "post_id": 50431709, "comment_id": 87882041, "body": "You can define an equality relation for functions. E.g. two functions whose definition is the same source code are equal. Two functions whose definition has the same AST are equal. Two functions whose definition has the same AST modulo renaming are equal. What you can <i>not</i> do is decide whether two functions compute the same results in all cases."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1526827645, "post_id": 50431709, "comment_id": 87886096, "body": "The answer below is good, but beware: some literature uses &quot;value&quot; to contrast between type-level terms and computation-level terms (as discussed below), but some literature uses &quot;value&quot; to contrast between potentially unevaluated/erroring terms and fully evaluated non-error terms. In both cases, the second choice is the one called &quot;value&quot;."}, {"owner": {"reputation": 586, "user_id": 5566407, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/96f6a5bd6884a8436fe3cabf85be2e94?s=128&d=identicon&r=PG&f=1", "display_name": "xuq01", "link": "https://stackoverflow.com/users/5566407/xuq01"}, "edited": false, "score": 0, "creation_date": 1526938940, "post_id": 50431709, "comment_id": 87927485, "body": "Value is something in beta-normal form (i.e. can&#39;t be further <i>reduced</i>), basically."}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 2, "creation_date": 1526941751, "post_id": 50431709, "comment_id": 87928337, "body": "I know this is oversimplifying, but generally I think of a &quot;value&quot; as anything that can be assigned/bound to a variable."}], "answers": [{"comments": [{"owner": {"reputation": 13201, "user_id": 1098230, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0c8776a6aefb37bf25d866707973593e?s=128&d=identicon&r=PG", "display_name": "Kolmar", "link": "https://stackoverflow.com/users/1098230/kolmar"}, "edited": false, "score": 2, "creation_date": 1526806935, "post_id": 50432752, "comment_id": 87880706, "body": "&quot;Even when using case class C(x: Int), Scala still compares object references when using a == b&quot; Scala compares the contents of  <code>case class</code>es, not references."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 13201, "user_id": 1098230, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0c8776a6aefb37bf25d866707973593e?s=128&d=identicon&r=PG", "display_name": "Kolmar", "link": "https://stackoverflow.com/users/1098230/kolmar"}, "edited": false, "score": 0, "creation_date": 1526808246, "post_id": 50432752, "comment_id": 87880980, "body": "@Kolmar Thank you, I forgot that. I tried to amend accordingly."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1526811053, "post_id": 50432752, "comment_id": 87881597, "body": "Regarding the mutable object, it needs to have an identity. This identity (e.g. the location of the mutable memory) can be represented by a value (e.g. a pointer)."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 5, "last_activity_date": 1526808208, "last_edit_date": 1526808208, "creation_date": 1526802656, "answer_id": 50432752, "question_id": 50431709, "link": "https://stackoverflow.com/questions/50431709/what-is-value-in-pure-functional-programming/50432752#50432752", "title": "What is &quot;value&quot; in pure functional programming?", "body": "<blockquote>\n  <p>What constitutes a value in pure functional programming? </p>\n</blockquote>\n\n<h1>Background</h1>\n\n<p>In <em>pure</em> functional programming there is no mutation. Hence, code such as</p>\n\n<pre><code>case class C(x: Int)\n\nval a = C(42)\nval b = C(42)\n</code></pre>\n\n<p>would become equivalent to</p>\n\n<pre><code>case class C(x: Int)\n\nval a = C(42)\nval b = a\n</code></pre>\n\n<p>since, in <em>pure</em> functional programming, if <code>a.x == b.x</code>, then we would have <code>a == b</code>. That is, <code>a == b</code> would be implemented comparing the values inside.</p>\n\n<p>However, Scala is not pure, since it allows mutation, like Java. In such case, we do NOT have the equivalence between the two snippets above, when we declare <code>case class C(var x: Int)</code>. Indeed, performing <code>a.x += 1</code> afterwords does not affect <code>b.x</code> in the first snippet, but does in the second one, where <code>a</code> and <code>b</code> point to the same object. In such case, it is useful to have a comparison <code>a == b</code> which compares the object <em>references</em>, rather than its inner integer value.</p>\n\n<p>When using <code>case class C(x: Int)</code>, Scala comparisons <code>a == b</code> behave closer to pure functional programming, comparing the integers values. With regular (non <code>case</code>) classes, Scala instead compares object references breaking the equivalence between the two snippets. But, again, Scala is not pure. By comparison, in Haskell</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>data C = C Int deriving (Eq)\na = C 42\nb = C 42\n</code></pre>\n\n<p>is indeed equivalent to</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>data C = C Int deriving (Eq)\na = C 42\nb = a\n</code></pre>\n\n<p>since there are no \"references\" or \"object identities\" in Haskell. Note that the Haskell implementation likely will allocate two \"objects\" in the first snippet, and only one object in the second one, but since there is no way to tell them apart inside Haskell, the program output will be the same.</p>\n\n<h1>Answer</h1>\n\n<blockquote>\n  <p>Is a function a value ? (then what it means when equating two function: assert(f==g). For two function that is equivalent but defined separately => f!=g, why not they work like 1==1)</p>\n</blockquote>\n\n<p>Yes, functions are values in pure functional programming.</p>\n\n<p>Above, when you mention \"function that is equivalent but defined separately\", you are assuming that we can compare the \"references\" or \"object identities\" for these two functions. In pure functional programming we can not.</p>\n\n<p>Pure functional programming should compare functions making <code>f == g</code> equivalent to <code>f x == g x</code> for all possible arguments <code>x</code>. This is feasible when there is only a few values for <code>x</code>, e.g. if <code>f,g :: Bool -&gt; Int</code> we only need to check <code>x=True, x=False</code>. For functions having infinite domains, this is much harder. For instance, if <code>f,g :: String -&gt; Int</code> we can not check infinitely many strings.</p>\n\n<p>Theoretical computer science (computability theory) also proved that there is no algorithm to compare two functions <code>String -&gt; Int</code>, not even an inefficient algorithm, not even if we have access to the source code of the two functions. For this mathematical reason, we must accept that functions are values that can not be compared. In Haskell, we express this through the <code>Eq</code> typeclass, stating that almost all the standard types are comparable, functions being the exception.</p>\n\n<blockquote>\n  <p>Is an object with methods a value ? (for example, IO{println(\"\")})</p>\n</blockquote>\n\n<p>Yes. Roughly speaking, \"everything is a value\", including IO actions.</p>\n\n<blockquote>\n  <p>Is an object with setter methods and mutable states a value ?\n  Is an object with mutable states and works as a state machine a value ?</p>\n</blockquote>\n\n<p>There is no mutable state in pure functional programming.</p>\n\n<p>At best, the setters can produce a \"new\" object with the modified fields.</p>\n\n<p>And yes, the object would be a value.</p>\n\n<blockquote>\n  <p>How do we test if it is a value, is that immutable can be a sufficient condition to be a value ?</p>\n</blockquote>\n\n<p>In pure functional programming, we can only have immutable data.</p>\n\n<p>In impure functional programming, I think we can call most immutable objects \"values\", when we do not compare object references. If the \"immutable\" object contains a reference to a mutable object, e.g.</p>\n\n<pre><code>case class D(var x: Int)\ncase class C(c: C)\nval a = C(D(42))\n</code></pre>\n\n<p>then things are more tricky. I guess we could still call <code>a</code> \"immutable\", since we can not alter <code>a.c</code>, but we should be careful since <code>a.c.x</code> can be mutated.\nDepending on the intent, I think that some would not call <code>a</code> immutable. I would not consider <code>a</code> to be a value.</p>\n\n<p>To make things more muddy, in impure programming, there are objects which use mutation to present a \"pure\" interface in an efficient way. For instance one can write a pure function that, before returning, stores its result in a cache. When called again on the same argument, it will return the previously computed result\n(this is usually called <a href=\"https://en.wikipedia.org/wiki/Memoization\" rel=\"nofollow noreferrer\">memoization</a>). Here, mutation happens, but it is not observable from outside, where at most we can observe a faster implementation. In this case, we can simply pretend the that function is pure (even if it performs mutation) and consider it a \"value\".</p>\n"}, {"tags": [], "owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "is_accepted": false, "score": 2, "last_activity_date": 1526822389, "last_edit_date": 1526822389, "creation_date": 1526808826, "answer_id": 50433419, "question_id": 50431709, "link": "https://stackoverflow.com/questions/50431709/what-is-value-in-pure-functional-programming/50433419#50433419", "title": "What is &quot;value&quot; in pure functional programming?", "body": "<p>The contrast with imperative languages is stark. In inperitive languages, like Python, the output of a function is directed. It can be assigned to a variable, explicitly returned, printed or written to a file.</p>\n\n<p>When I compose a function in Haskell, I never consider output. I never use \"return\" Everything has \"a\" value. This is called \"symbolic\" programming. By \"everything\", is meant \"symbols\". Like human language, the nouns and verbs represent something. That something is their value. The \"value\" of \"Pete\" is Pete. The name \"Pete\" is not Pete but is a representation of Pete, the person. The same is true of functional programming. The best analogy is math or logic When you do pages of calculations, do you direct the output of each function? You even \"assign\" variables to be replaced by their \"value\" in functions or expressions. </p>\n"}, {"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1527508593, "post_id": 50437240, "comment_id": 88141797, "body": "I don&#39;t think you&#39;re using the concept WHNF correctly. In a strict language, that&#39;s an irrelevant notion because everything is brought to NF anyways, if evaluated at all. In Haskell, <code>42 : [10 + 20, 20 + 30]</code> <i>is</i> in WHNF. And for <code>(x: Int) =&gt; x * 42</code> the distinction is irrelevant because this is both in WHNF and in NF. I would however argue that normal form should be kept out of the discussion entirely \u2013 a value is already a value before it&#39;s evaluated, however evaluation doesn&#39;t change it. I.e., a value is an <i>equivalence class</i> of terms. If you disagree, you should provide some references."}], "tags": [], "owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "is_accepted": true, "score": 5, "last_activity_date": 1526835783, "last_edit_date": 1526835783, "creation_date": 1526835139, "answer_id": 50437240, "question_id": 50431709, "link": "https://stackoverflow.com/questions/50431709/what-is-value-in-pure-functional-programming/50437240#50437240", "title": "What is &quot;value&quot; in pure functional programming?", "body": "<p>I'll try to explain what a <em>value</em> is by contrasting it with things that are <em>not values</em>.</p>\n\n<p>Roughly speaking, <em>values</em> are structures produced by the process of <em>evaluation</em> which correspond to <em>terms</em> that cannot be simplified any further.</p>\n\n<hr>\n\n<p><strong>Terms</strong></p>\n\n<p>First, what are <em>terms</em>? Terms are syntactic structures that can be evaluated. Admittedly, this is a bit circular, so let's look at a few examples:</p>\n\n<ol>\n<li><p>Constant literals are terms:</p>\n\n<pre><code>42\n</code></pre></li>\n<li><p>Functions applied to other terms are terms:</p>\n\n<pre><code>atan2(123, 456 + 789)\n</code></pre></li>\n<li><p>Function literals are terms</p>\n\n<pre><code>(x: Int) =&gt; x * x\n</code></pre></li>\n<li><p>Constructor invocations are terms:</p>\n\n<pre><code>Option(42)\n</code></pre></li>\n</ol>\n\n<p>Contrast this to:</p>\n\n<ol>\n<li><p>Class declarations / definitions are not terms:</p>\n\n<pre><code>case class Foo(bar: Int)\n</code></pre>\n\n<p>that is, you cannot write</p>\n\n<pre><code>val x = (case class Foo(bar: Int))\n</code></pre>\n\n<p>this would be illegal.</p></li>\n<li><p>Likewise, trait and type definitions are not terms:</p>\n\n<pre><code>type Bar = Int\nsealed trait Baz\n</code></pre></li>\n<li><p>Unlike function literals, method definitions are not terms:</p>\n\n<pre><code>def foo(x: Int) = x * x\n</code></pre>\n\n<p>for example:</p>\n\n<pre><code>val x = (a: Int) =&gt; a * 2 // function literal, ok\nval y = (def foo(a: Int): Int = a * 2) // no, not a term\n</code></pre></li>\n<li><p>Package declarations and import statements are not terms:</p>\n\n<pre><code>import foo.bar.baz._ // ok\nList(package foo, import bar) // no\n</code></pre></li>\n</ol>\n\n<hr>\n\n<p><strong>Normal forms, values</strong></p>\n\n<p>Now, when it is hopefully somewhat clearer what a <em>term</em> is, what was meant by \"cannot be simplified any further*? In idealized functional programming languages, you can define what a <em>normal form</em>, or rather <em>weak head normal form</em> is. Essentially, a term is in a (wh-) normal form if no reduction rules can be applied to the term to make it any simpler. Again, a few examples:</p>\n\n<ol>\n<li><p>This is a term, but it's not in normal form, because it can be reduced to <code>42</code>:</p>\n\n<pre><code>40 + 2\n</code></pre></li>\n<li><p>This is not in weak head normal form:</p>\n\n<pre><code>((x: Int) =&gt; x * 2)(3)\n</code></pre>\n\n<p>because we can further evaluate it to <code>6</code>.</p></li>\n<li><p>This lambda is in weak head normal form (it's stuck, because the computation cannot proceed until an <code>x</code> is supplied):</p>\n\n<pre><code>(x: Int) =&gt; x * 42\n</code></pre></li>\n<li><p>This is not in normal form, because it can be simplified further:</p>\n\n<pre><code>42 :: List(10 + 20, 20 + 30)\n</code></pre></li>\n<li><p>This is in normal form, no further simplifications possible:</p>\n\n<pre><code>List(42, 30, 50)\n</code></pre></li>\n</ol>\n\n<p>Thus, </p>\n\n<ul>\n<li><code>42</code>, </li>\n<li><code>(x: Int) =&gt; x * 42</code>, </li>\n<li><code>List(42, 30, 50)</code> </li>\n</ul>\n\n<p>are values, whereas </p>\n\n<ul>\n<li><code>40 + 2</code>, </li>\n<li><code>((x: Int) =&gt; x * 2)(3)</code>, </li>\n<li><code>42 :: List(10 + 20, 20 + 30)</code> </li>\n</ul>\n\n<p>are not values, but merely non-normalized terms that can be further simplified.</p>\n\n<hr>\n\n<p><strong>Examples and non-examples</strong></p>\n\n<p>I'll just go through your list of sub-questions one-by-one:</p>\n\n<blockquote>\n  <p>Is a function a value</p>\n</blockquote>\n\n<p>Yes, things like <code>(x: T1, ..., xn: Tn) =&gt; body</code> are considered to be stuck terms in WHNF, in functional languages they can actually be represented, so they are values.</p>\n\n<blockquote>\n  <p>If so, what does it mean when equating two functions: <code>assert(f == g)</code> for two functions that are equivalent but defined separately => <code>f != g</code>, why don't they work as <code>1 == 1</code>?</p>\n</blockquote>\n\n<p>Function extensionality is somewhat unrelated to the question whether something is a value or not. In the above \"definition by example\", I talked only about the shape of the terms, not about the existence / non-existence of some computable relations defined on those terms. The sad fact is that you can't even really determine whether a lambda-expression actually represents a function (i.e. whether it terminates for all inputs), and it is also known that there cannot be an algorithm that could determine whether two functions produce the same output for all inputs (i.e. are extensionally equal).</p>\n\n<blockquote>\n  <p>Is an object with methods a value?  (for example <code>IO { println(\"\") }</code>)</p>\n</blockquote>\n\n<p>Not quite clear what you're asking here. Objects don't have methods. Classes have methods. If you mean method invocations, then, no, they are terms that can be further simplified (by actually running the method), so they are not values.</p>\n\n<blockquote>\n  <p>Is an object with setter methods and mutable state a value?\n  Is an object with mutable state which works as a state machine a value?</p>\n</blockquote>\n\n<p>There is no such thing in pure functional programming.</p>\n"}, {"tags": [], "owner": {"reputation": 14830, "user_id": 3757232, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/kLzML.jpg?s=128&g=1", "display_name": "Jared Smith", "link": "https://stackoverflow.com/users/3757232/jared-smith"}, "is_accepted": false, "score": 2, "last_activity_date": 1526915769, "creation_date": 1526915769, "answer_id": 50451816, "question_id": 50431709, "link": "https://stackoverflow.com/questions/50431709/what-is-value-in-pure-functional-programming/50451816#50451816", "title": "What is &quot;value&quot; in pure functional programming?", "body": "<p>Values are</p>\n\n<ol>\n<li>Immutable/Timeless</li>\n<li>Anonymous</li>\n<li>Semantically Transparent</li>\n</ol>\n\n<p>What is the value of 42? 42. What is the \"value\" of <code>new Date()</code>? <code>Date object at 0x3fa89c3</code>. What is the identity of 42? 42. What is the identity of <code>new Date()</code>? As we saw in the previous example, it's the thing that lives at the place. It may have many different \"values\" in different contexts but it has only one identity. OTOH, 42 is sufficient unto itself. It's semantically meaningless to ask where 42 lives in the system. What is the semantic meaning of 42? Magnitude of 42. What is the semantic meaning of <code>new Foo()</code>? Who knows.</p>\n\n<p>I would add a fourth criterion (see this in some contexts in the wild but not others) which is: values are <em>language agnostic</em> (I'm not certain the first 3 are sufficient to guarantee this nor that such a rule is entirely consistent with most people's intuition of what value means).</p>\n"}, {"comments": [{"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 1, "creation_date": 1527457459, "post_id": 50556378, "comment_id": 88124410, "body": "Equating &quot;types&quot; and &quot;sets&quot; might be appropriate as a very rough first approximation for those who need the most basic introduction, but since we now have bunch of functional programming languages with strong type systems <i>and</i> polymorphic functions, you have to keep in mind that <a href=\"https://link.springer.com/chapter/10.1007%2F3-540-13346-1_7\" rel=\"nofollow noreferrer\">Polymorphism is not set-theoretic</a>."}], "tags": [], "owner": {"reputation": 39519, "user_id": 5205022, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/DISiu.jpg?s=128&g=1", "display_name": "Mario Galic", "link": "https://stackoverflow.com/users/5205022/mario-galic"}, "is_accepted": false, "score": 0, "last_activity_date": 1527457947, "last_edit_date": 1527457947, "creation_date": 1527454104, "answer_id": 50556378, "question_id": 50431709, "link": "https://stackoverflow.com/questions/50431709/what-is-value-in-pure-functional-programming/50556378#50556378", "title": "What is &quot;value&quot; in pure functional programming?", "body": "<p>Values are things that </p>\n\n<ul>\n<li>functions can take as inputs and return as outputs, that is, can be computed, and</li>\n<li>are members of a type, that is, elements of some set, and</li>\n<li>can be bound to a variable, that is, can be named.</li>\n</ul>\n\n<p>First point is really the crucial test whether something is a value. Perhaps the word <em>value</em>, due to conditioning, might immediately make us think of just numbers, but the concept is very general. Essentially anything we can give to and get out of a function can be considered a value. Numbers, strings, booleans, instances of classes, functions themselves, predicates, and even types themselves, can be inputs and outputs of functions, and thus are values.</p>\n\n<p><code>IO</code> monad is a great example of how general this concept is. When we say <code>IO</code> monad models side-effects as values, we mean a function can take a side-effect (say <code>println</code>) as input and return as output. <code>IO(println(...))</code> separates the idea of the <em>effect</em> of an action of <code>println</code> from the actual execution of an action, and allows these effects to be considered as first class values that can be computed with using the same language facilities as for any other values such as numbers.</p>\n"}], "owner": {"reputation": 4042, "user_id": 2130573, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/sj5t6.png?s=128&g=1", "display_name": "WeiChing \u6797\u7152\u6e05", "link": "https://stackoverflow.com/users/2130573/weiching-%e6%9e%97%e7%85%92%e6%b8%85"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 946, "favorite_count": 5, "accepted_answer_id": 50437240, "answer_count": 5, "score": 11, "last_activity_date": 1527457947, "creation_date": 1526790994, "last_edit_date": 1527093208, "question_id": 50431709, "link": "https://stackoverflow.com/questions/50431709/what-is-value-in-pure-functional-programming", "title": "What is &quot;value&quot; in pure functional programming?", "body": "<p>What constitutes a value in pure functional programming?  </p>\n\n<p>I am asking myself these questions after seeing a sentence:</p>\n\n<blockquote>\n  <p><code>Task</code>(or <code>IO</code>) has a constructor that captures side-effects as <strong>values</strong>.</p>\n</blockquote>\n\n<ul>\n<li>Is a function a value? \n\n<ul>\n<li>If so, what does it mean when equating two functions: <code>assert(f == g)</code>. For two functions that are equivalent but defined separately => <code>f != g</code>, why don't they work as <code>1 == 1</code>?</li>\n</ul></li>\n<li>Is an object with methods a value?  (for example <code>IO { println(\"\") }</code>)   </li>\n<li>Is an object with setter methods and mutable state a value?  </li>\n<li>Is an object with mutable state which works as a state machine a value?  </li>\n</ul>\n\n<p>How do we test whether something is a value? Is immutability a sufficient condition?</p>\n\n<p>UPDATE:\nI'm using Scala.</p>\n"}, {"tags": ["haskell", "type-definition"], "comments": [{"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 4, "creation_date": 1526744690, "post_id": 50426904, "comment_id": 87868452, "body": "When I&#39;m stuck on something I often find that verbally articulating the problem in detail helps me to understand what I&#39;m doing wrong. Try <a href=\"https://stackoverflow.com/posts/50426904/edit\">editing your question</a> to include a detailed description of what each piece of your current <code>totalTime</code> function does."}], "answers": [{"comments": [{"owner": {"reputation": 41, "user_id": 7942926, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/662072e84a772ef540fb6aa5e3638f75?s=128&d=identicon&r=PG&f=1", "display_name": "Anna", "link": "https://stackoverflow.com/users/7942926/anna"}, "edited": false, "score": 0, "creation_date": 1526745320, "post_id": 50426962, "comment_id": 87868638, "body": "How come its not a list where RiderResults is in the form of [RiderResults]?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 41, "user_id": 7942926, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/662072e84a772ef540fb6aa5e3638f75?s=128&d=identicon&r=PG&f=1", "display_name": "Anna", "link": "https://stackoverflow.com/users/7942926/anna"}, "edited": false, "score": 0, "creation_date": 1526746192, "post_id": 50426962, "comment_id": 87868904, "body": "@Anna: <code>id</code> is the <i>id</i>entity function."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1526746353, "post_id": 50426962, "comment_id": 87868961, "body": "But RiderResults is NOT &quot;in the form of [RiderResults]&quot;, your type shows that <code>totalTime</code> only takes one <code>RiderResults</code>, so only one ability, one string, and one list of ints. You can use <code>penalty p = if ab==Low then p else 2*p</code>, which should be simpler to understand for a beginner."}, {"owner": {"reputation": 41, "user_id": 7942926, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/662072e84a772ef540fb6aa5e3638f75?s=128&d=identicon&r=PG&f=1", "display_name": "Anna", "link": "https://stackoverflow.com/users/7942926/anna"}, "edited": false, "score": 0, "creation_date": 1526835088, "post_id": 50426962, "comment_id": 87888400, "body": "Im still getting error whether using the id function or the simplified p"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1526903847, "post_id": 50426962, "comment_id": 87910001, "body": "We can&#39;t help you if you don&#39;t tell us what error you are getting?"}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 5, "last_activity_date": 1526746399, "last_edit_date": 1526746399, "creation_date": 1526744723, "answer_id": 50426962, "question_id": 50426904, "link": "https://stackoverflow.com/questions/50426904/haskell-data-and-type-declarations/50426962#50426962", "title": "Haskell Data and type declarations", "body": "<p>A <code>RiderResults</code> value is not a list; it's a triple of an ability, a name and a list of times. You need to unpack that value first before you can sum up the times stored in the value.</p>\n\n<pre><code>totalTime (Rider ab _ times) = sum (map penalty times)\n  where penalty = if ab == Low then id else (*2)\n</code></pre>\n"}], "owner": {"reputation": 41, "user_id": 7942926, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/662072e84a772ef540fb6aa5e3638f75?s=128&d=identicon&r=PG&f=1", "display_name": "Anna", "link": "https://stackoverflow.com/users/7942926/anna"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 92, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1526746399, "creation_date": 1526744204, "question_id": 50426904, "link": "https://stackoverflow.com/questions/50426904/haskell-data-and-type-declarations", "title": "Haskell Data and type declarations", "body": "<p>A bike race can be represented as a list of bike riders. Each rider is recorded with their ability class (High or Low), name, and the times in minutes that they finished in in each of their races, in the following types:</p>\n\n<pre><code>data Ability =  High | Low\ndata RiderResults = Rider Ability String [Int]\ntype Championship = [RiderResults]\n</code></pre>\n\n<p>How to solve totalTime :: RiderResults -> Int which returns the total time taken by that rider in all their races, including any penalty. High ability riders are penalised by having a time double their actual time (eg, pre-penalty total time 70mins becomes 140mins). </p>\n\n<p>I've done something like </p>\n\n<pre><code> totalTime :: RiderResults -&gt; Int   \n totalTime (x:xs) = if x == Low then sum x*2 \n                    else x : totalTime xs\n</code></pre>\n\n<p>but it is wrong. I have practice questions to solving types definition and data declarations in Haskell and this is one of them. Can someone please explain how to approach such questions? </p>\n"}, {"tags": ["haskell", "algebraic-data-types"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1526740854, "post_id": 50426437, "comment_id": 87867458, "body": "<code>JArray</code> is not a type, it&#39;s a constructor. What are you trying to do here? Did you mean to write <code>getArray :: JValue -&gt; Maybe [JValue]</code>? That&#39;s the type of the function here."}], "answers": [{"tags": [], "owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "is_accepted": true, "score": 5, "last_activity_date": 1526895130, "last_edit_date": 1526895130, "creation_date": 1526741100, "answer_id": 50426500, "question_id": 50426437, "link": "https://stackoverflow.com/questions/50426437/error-when-accessing-specific-adt/50426500#50426500", "title": "Error when accessing specific ADT", "body": "<p><strong><code>JArray</code> is a value constructor, not a type. You cannot use <code>JArray</code> in type signatures.*</strong> This is actually explained in the error: <code>Not in scope: <strong>type constructor</strong> or <strong>class</strong> `JArray'</code>.</p>\n\n<p>Since we see this:</p>\n\n<pre><code>data JValue = JString String\n            | JNumber Double\n            | JBool Bool\n            | JNull\n            | JObject [(String,JValue)]\n            | JArray [JValue]           -- This line defines JArray\n</code></pre>\n\n<p>So <code>JArray :: [JValue] -&gt; JValue</code>. Looking at your function, but ignoring the erroneous type signature:</p>\n\n<pre><code>getArray (JArray arr) = Just arr\n-- ^ arr :: [JValue], so Just arr :: Maybe [JValue]\ngetArray _ = Nothing\n-- ^ Nothing :: Maybe a\n</code></pre>\n\n<p>So, since you're pattern matching on some <code>JValue</code>, the function has type <code>getArray :: JValue -&gt; Maybe [JValue]</code>. This is because types and inhabitants of that type are distinct.</p>\n\n<hr>\n\n<p><em>* except with <code>DataKinds</code>, but this is a separate concern.</em></p>\n"}], "owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 52, "favorite_count": 0, "accepted_answer_id": 50426500, "answer_count": 1, "score": 0, "last_activity_date": 1526895130, "creation_date": 1526740711, "last_edit_date": 1526741398, "question_id": 50426437, "link": "https://stackoverflow.com/questions/50426437/error-when-accessing-specific-adt", "title": "Error when accessing specific ADT", "body": "<p>I am defining a type and everything works fine except the method that accesses the last data constructor : <code>JArray</code></p>\n\n<p>I get the following error:</p>\n\n<pre><code>Not in scope: type constructor or class `JArray'\n    A data constructor of that name is in scope; did you mean DataKinds?\n\n   |\n28 |     getArray::JValue-&gt;Maybe JArray\n   |  \n</code></pre>\n\n<p>Why is this happening? I can load the module and instantiate the <code>JArray</code> but it won't load with the <code>getArray</code> method.</p>\n\n<pre><code>data JValue = JString String\n            | JNumber Double\n            | JBool Bool\n            | JNull\n            | JObject [(String, JValue)]\n            | JArray [JValue]\n            deriving (Eq, Ord, Show)\n\ngetString :: JValue -&gt; Maybe String\ngetString (JString s) = Just s\ngetString _ = Nothing\n\ngetInt :: JValue -&gt; Maybe Int\ngetInt (JNumber n) = Just (truncate n)\ngetInt _ = Nothing\n\ngetBool :: JValue -&gt; Maybe Bool\ngetBool (JBool b) = Just b\ngetBool _ = Nothing\n\ngetObject (JObject obj) = Just obj\ngetObject _ = Nothing\n\n--What is wrong in this method?\n\ngetArray :: JValue -&gt; Maybe JArray    \ngetArray (JArray arr) = Just arr\ngetArray _ = Nothing\n</code></pre>\n"}, {"tags": ["performance", "haskell"], "comments": [{"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 3, "creation_date": 1526719974, "post_id": 50423335, "comment_id": 87861769, "body": "What happens if you try <code>(\\x -&gt; x `seq` x) (fib 30)</code> and <code>let x = (fib 30) :: Int in x `seq` x</code> ?"}, {"owner": {"reputation": 407, "user_id": 2882634, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/jbZId.jpg?s=128&g=1", "display_name": "RandomStudent", "link": "https://stackoverflow.com/users/2882634/randomstudent"}, "reply_to_user": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1526720551, "post_id": 50423335, "comment_id": 87861899, "body": "Added to post, even more surprised now!"}, {"owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "edited": false, "score": 5, "creation_date": 1526720901, "post_id": 50423335, "comment_id": 87862001, "body": "The problem is that <code>fib</code> has the polymorphic type <code>(Ord a, Num a) =&gt; a -&gt; a</code>. Hence, in the expression <code>x `seq` x</code>, the first <code>x</code> could be instantiated to a different monomorphic type than the second <code>x</code>. For example, the first <code>x</code> could be an <code>Int</code> whereas the second <code>x</code> could be a <code>Double</code>. There&#39;s nothing that forces the two to be the same type. That&#39;s the reason why <code>x</code> is evaluated twice."}, {"owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "edited": false, "score": 1, "creation_date": 1526720993, "post_id": 50423335, "comment_id": 87862021, "body": "The solution is simple. Give <code>fib</code> a explicit type signature like <code>let fib :: Int -&gt; Int; fib x = if x &lt;= 1 then x else fib (x - 1) + fib (x - 2)</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1526733162, "post_id": 50423335, "comment_id": 87865313, "body": "Avoiding this kind of performance issues is, precisely, why the Monomorphism Restriction was introduced. Without the MR <code>x</code> is polymorphic and <code>x `seq` x</code> actually means something like <code>x () `seq` x ()</code>, as if <code>x</code> were a function, and there <code>seq</code> will call the function twice (understandably)."}], "answers": [{"tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": true, "score": 16, "last_activity_date": 1526723281, "last_edit_date": 1526723281, "creation_date": 1526722113, "answer_id": 50423765, "question_id": 50423335, "link": "https://stackoverflow.com/questions/50423335/haskells-seq-evaluates-arguments-redundantly/50423765#50423765", "title": "Haskell&#39;s `seq` evaluates arguments redundantly?", "body": "<p>For the first part of this answer, <code>:set -XNoMonomorphismRestriction</code> in ghci. It will be explained later.</p>\n\n<p>Naively, one would expect that in Haskell <code>let x = 5 in (x + 1,x + 2)</code> would always be equivalent to <code>(\\x -&gt; (x + 1, x + 2)) 5</code>. But they have different types!</p>\n\n<pre><code>let x = 5 in (x + 1,x + 2) :: (Num a, Num b) =&gt; (a, b)\n\n(\\x -&gt; (x + 1,x + 2)) 5 :: Num b =&gt; (b, b)\n</code></pre>\n\n<p>The reason is a feature of Haskell called <a href=\"https://www.haskell.org/tutorial/pitfalls.html\" rel=\"noreferrer\">let-bound polymorphism</a>. Unlike lambda-bound identifiers, identifiers bound in a <code>let</code> can be instantiated in different ways in the body of the <code>let</code>. For example:</p>\n\n<pre><code>ghci&gt; let f = id in (f True, f 'a')\n(True,'a')\n\nghci&gt; (\\f -&gt; (f True, f 'a')) id\n*** ERROR ***\n</code></pre>\n\n<p>Now, you didn't give a type signature to your <code>fib</code> funtion, and the one that is deduced is something like</p>\n\n<pre><code>fib :: (Ord a, Num a) =&gt; a -&gt; a\n</code></pre>\n\n<p>that will work for different instances of <code>Num</code> like <code>Int</code>, <code>Float</code>, etc.</p>\n\n<p>But because of this, when you write <code>x `seq` x</code>, ghci can't be sure that the two <code>x</code>s are actually of the same type! And if they might be different, then they can't be shared.</p>\n\n<p>That's the reason why <code>(\\x -&gt; x `seq` x) (fib 30)</code> does have sharing. Because the <code>x</code> is lambda-bound, the compiler is sure that both occurrences really are the same value. Same for <code>let x = (fib 30) :: Int in x `seq` x</code> because we have removed polymorphism using an explicit type.</p>\n\n<p>There's another way out. Turning on the <a href=\"https://wiki.haskell.org/Monomorphism_restriction\" rel=\"noreferrer\"><code>-XMonomorphismRestriction</code></a> extension increases the amount of type defaulting, causing <code>let</code> expressions to be more monomorphic than one might expect. That should be enough to recover sharing in this case as well.</p>\n"}], "owner": {"reputation": 407, "user_id": 2882634, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/jbZId.jpg?s=128&g=1", "display_name": "RandomStudent", "link": "https://stackoverflow.com/users/2882634/randomstudent"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 186, "favorite_count": 0, "closed_date": 1526736953, "accepted_answer_id": 50423765, "answer_count": 1, "score": 14, "last_activity_date": 1526806656, "creation_date": 1526718541, "last_edit_date": 1526806656, "question_id": 50423335, "link": "https://stackoverflow.com/questions/50423335/haskells-seq-evaluates-arguments-redundantly", "closed_reason": "Duplicate", "title": "Haskell&#39;s `seq` evaluates arguments redundantly?", "body": "<p>If I understand the discussion <a href=\"https://stackoverflow.com/questions/9707190/time-cost-of-haskell-seq-operator\" title=\"here\">here</a> correctly, <code>seq</code> should not be evaluating a value twice, as in <code>x `seq` x</code> should be evaluating <code>x</code> once.</p>\n\n<p>Then why do I have this behaviour?</p>\n\n<p><pre><code><strong>\u03bb> :set +s</strong>\n<strong>\u03bb> let fib x = if x &lt;= 1 then x else fib (x - 1) + fib (x - 2)</strong>\n<em>(0.01 secs, 102,600 bytes)</em>\n<strong>\u03bb> fib 30</strong>\n832040\n<em>(2.49 secs, 638,088,448 bytes)</em>\n<strong>\u03bb> let x = fib 30 in x</strong>\n832040\n<em>(2.47 secs, 638,088,792 bytes)</em>\n<strong>\u03bb> let x = fib 30 in x `seq` x</strong>\n832040\n<em>(4.95 secs, 1,276,067,128 bytes)</em>\n</pre></code></p>\n\n<p>which is clearly double evaluating? Am I misunderstanding something?</p>\n\n<p><strong>EDIT</strong>: As asked @danidiaz below, I also evaluated</p>\n\n<p><pre><code><strong>\u03bb> (\\x -> x `seq` x) (fib 30)</strong>\n832040\n<em>(2.51 secs, 638,087,888 bytes)</em>\n<strong>\u03bb> let x = (fib 30) :: Int in x `seq` x</strong>\n832040\n<em>(2.52 secs, 732,476,640 bytes)</em>\n</pre></code></p>\n\n<p>which are even more surprising now.</p>\n\n<p><strong>EDIT 2:</strong> I see that this question has been marked as a duplicate of an earlier question that asks about the monomorphism restriction. When I encountered this problem, I had no idea that this was due to the restriction. So if someone finds him/herself in my position I guess the answer to this question would be helpful.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 1, "creation_date": 1526708232, "post_id": 50421850, "comment_id": 87859168, "body": "Your assumption about map and foldr is incorrect. Try <code>foldr (&amp;&amp;) True (map not [True, undefined])</code>. In other words, it already has the behavior you want. See also the Prelude function <code>all</code> instead of your map and foldr."}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 6, "last_activity_date": 1526738438, "last_edit_date": 1526738438, "creation_date": 1526737809, "answer_id": 50425992, "question_id": 50421850, "link": "https://stackoverflow.com/questions/50421850/checking-if-a-path-matches-any-regex-without-going-through-the-complete-list/50425992#50425992", "title": "Checking if a path matches any regex without going through the complete list", "body": "<blockquote>\n  <p>I believe <code>map</code> and <code>fold</code>s would traverse over the complete list before returning a value.</p>\n</blockquote>\n\n<p>Hey, great, a falsifiable hypothesis, the cornerstone of science! Let's do an experiment to attempt to falsify it. For any value <code>foo</code>, traversing the list <code>foo:undefined</code> completely will throw an exception.</p>\n\n<pre><code>&gt; head (map id (True:undefined))\nTrue\n&gt; foldr (&amp;&amp;) True (False:undefined)\nFalse\n</code></pre>\n\n<p><a href=\"https://i.stack.imgur.com/n5Quh.jpg\" rel=\"noreferrer\"><img src=\"https://i.stack.imgur.com/n5Quh.jpg\" alt=\"enter image description here\"></a></p>\n"}], "owner": {"reputation": 589, "user_id": 1494159, "user_type": "registered", "accept_rate": 38, "profile_image": "https://www.gravatar.com/avatar/2af3dee10db5e7d656a93ee582c4c66b?s=128&d=identicon&r=PG", "display_name": "Ajit", "link": "https://stackoverflow.com/users/1494159/ajit"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 77, "favorite_count": 0, "accepted_answer_id": 50425992, "answer_count": 1, "score": 0, "last_activity_date": 1563080628, "creation_date": 1526705096, "last_edit_date": 1563080628, "question_id": 50421850, "link": "https://stackoverflow.com/questions/50421850/checking-if-a-path-matches-any-regex-without-going-through-the-complete-list", "title": "Checking if a path matches any regex without going through the complete list", "body": "<p>Hello am trying to match regular expressions with a <code>FilePath</code> to filter my list of files</p>\n\n<pre><code>import Text.Regex.Posix\nimport System.FilePath\n\nescapePath path = foldr (&amp;&amp;) True $ map (\\pat -&gt; not $  (path =~ pat :: Bool)) patterns\n                   where\n                       patterns = [\"\\\\.\",  \"\\\\.\\\\.\", {-- So on --}]\n</code></pre>\n\n<p>I believe <code>map</code> and <code>folds</code> would traverse over the complete list before returning a value. </p>\n\n<p>I could avoid using fold by doing something like this</p>\n\n<pre><code>escapePath path = not $ elem True (map (\\pat -&gt; (path =~ pat :: Bool)) patterns)\n                    where\n                       patterns = [\"\\\\.\",  \"\\\\.\\\\.\", {-- continued --}]\n</code></pre>\n\n<p>But still I would be matching the path against all patterns before searching for a value</p>\n\n<p>How can I make the function more efficient by returning a value on first match? </p>\n"}, {"tags": ["haskell", "aeson"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1526737307, "post_id": 50420072, "comment_id": 87866407, "body": "Everyone gets so hung up on only using <code>FromJSON</code> and <code>ToJSON</code> that they forget they can just write whatever the heck functions they want and call them whatever they want. It&#39;s weird, and it only seems to happen with aeson. I don&#39;t get it. If you want an extra argument to your JSON encoder, <i>just write an encoder that takes an extra argument and don&#39;t call it <code>toJSON</code></i>. (I&#39;m not criticizing you -- it seems to be a common pitfall, so somewhere along the way the information out there on how to use aeson has screwed up, not you. I just don&#39;t understand where.)"}, {"owner": {"reputation": 3629, "user_id": 379639, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/4fa63505dd4dd4691b87d30508b1bfd3?s=128&d=identicon&r=PG", "display_name": "Xavier Shay", "link": "https://stackoverflow.com/users/379639/xavier-shay"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1526748755, "post_id": 50420072, "comment_id": 87869703, "body": "This is kind of where I was going with the ToJSONReader idea. Probably people get hung up on it because you get <code>ToJSON</code> instances for free with generics, and it&#39;s non-obvious how I would get that same thing doing it myself. In my case, I have tens of types in a big complex data structure, I&#39;m not particularly keen to write out full implementations of all of them myself. Perhaps an example of that in Aeson documentation would be helpful? (I mean, I know in theory I must be able to write a generic derivation, I&#39;ve just got no idea how to do it.)"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1526781798, "post_id": 50420072, "comment_id": 87876551, "body": "@DanielWagner That&#39;s a fair notice, but often times people use Aeson indirectly by using some more complex framework that requires the proper Aeson instances for the data types.  It is in these situations where some of the trickier classes come in handy in my experience."}], "owner": {"reputation": 3629, "user_id": 379639, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/4fa63505dd4dd4691b87d30508b1bfd3?s=128&d=identicon&r=PG", "display_name": "Xavier Shay", "link": "https://stackoverflow.com/users/379639/xavier-shay"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 77, "favorite_count": 1, "answer_count": 0, "score": 0, "last_activity_date": 1526683815, "creation_date": 1526683019, "last_edit_date": 1526683815, "question_id": 50420072, "link": "https://stackoverflow.com/questions/50420072/contextual-generation-of-json-in-haskell-using-aeson", "title": "Contextual generation of JSON in Haskell using Aeson", "body": "<p>I have a complex nested data structure that I would like to convert to JSON in different ways depending on some provided context. My use case is that my server contains the full state of the world state, but depending on which client is asking for it I want to provide a redacted copy. Ideally I'd like to write something like:</p>\n\n<pre><code>instance ToJSON MyNestedType where\n  toJSON x = do\n    currentUser &lt;- ask\n\n    return $ if owner x == currentUser then (defaultToJson x) else (toJSON \"REDACTED\")\n\nencodeWithReader (UserId 123) myDataStructure\n</code></pre>\n\n<p>Looking at the type of <a href=\"http://hackage.haskell.org/package/aeson-1.3.1.1/docs/Data-Aeson.html#v:toJSON\" rel=\"nofollow noreferrer\"><code>toJSON :: a -&gt; Value</code></a> this doesn't appear to be possible with plain Aeson. What would be a good option for doing this? A couple of options I was thinking about:</p>\n\n<ul>\n<li><p>Implementing my own typeclass <code>ToJSONReader</code>, and having a default implementation that simply passes through to <code>ToJSON</code> and overriding for the types that need redacting. Something like (this doesn't compile, just pseudocode. I don't actually know how to make this work.):</p>\n\n<pre><code>class ToJSONReader a where\n  toJSONReader :: a -&gt; Reader b Value\n\ninstance ToJSON a =&gt; ToJSONReader a where\n  toJSONReader x = return $ toJSON x\n\ninstance ToJSONReader MyNestedType where\n  toJSONReader x = do\n    currentUser &lt;- ask\n    return $ if owner x == currentUser then (toJSON x) else (toJSON \"REDACTED\")\n</code></pre></li>\n<li><p>Rather than use <code>encode</code> directly, use <code>toJSON</code> to get the intermediate <code>Value</code> then write code to redact that (kind of gross).</p></li>\n<li>Extend my type to include tags for redaction, then pre-process a copy of the type before converting to JSON.</li>\n<li>Create a new complex parent type <code>RedactedMyType</code> and duplicate the structure of the original type, but subbing in redacted options in the ADT as needed. Pretty gross also.</li>\n</ul>\n\n<p>Does anyone have any recommendations?</p>\n"}, {"tags": ["json", "haskell", "aeson"], "answers": [{"comments": [{"owner": {"reputation": 155, "user_id": 1626022, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3fa95f10d1947f140a3e324576fea114?s=128&d=identicon&r=PG", "display_name": "tomphp", "link": "https://stackoverflow.com/users/1626022/tomphp"}, "edited": false, "score": 0, "creation_date": 1526727827, "post_id": 50419305, "comment_id": 87863940, "body": "Excellent, thank you! I knew there was a simple solution but was struggling to work it out."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 4, "last_activity_date": 1526678578, "last_edit_date": 1526678578, "creation_date": 1526677754, "answer_id": 50419305, "question_id": 50419077, "link": "https://stackoverflow.com/questions/50419077/haskell-aeson-how-to-construct-a-record-from-json-with-additional-values/50419305#50419305", "title": "Haskell (Aeson) : How to construct a record from JSON with additional values", "body": "<p>Do you want to build <code>parseJSON</code>? It doesn't have to be <code>parseJSON</code>...</p>\n\n<pre><code>abParser :: String -&gt; Value -&gt; Parser MyRecord\nabParser valueC = withObject \"MyRecord\" $ \\o -&gt; do\n    valueA &lt;- o .: \"a\"\n    valueB &lt;- o .: \"b\"\n    return MyRecord { a = valueA, b = valueB, c = valueC }\n\ncreateMyRecord :: ByteString -&gt; String -&gt; Maybe MyRecord\ncreateMyRecord json valueC = decode json &gt;&gt;= parseMaybe (abParser valueC)\n</code></pre>\n"}], "owner": {"reputation": 155, "user_id": 1626022, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3fa95f10d1947f140a3e324576fea114?s=128&d=identicon&r=PG", "display_name": "tomphp", "link": "https://stackoverflow.com/users/1626022/tomphp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 94, "favorite_count": 0, "accepted_answer_id": 50419305, "answer_count": 1, "score": 1, "last_activity_date": 1526678578, "creation_date": 1526676573, "question_id": 50419077, "link": "https://stackoverflow.com/questions/50419077/haskell-aeson-how-to-construct-a-record-from-json-with-additional-values", "title": "Haskell (Aeson) : How to construct a record from JSON with additional values", "body": "<p>I have a record that I want to construct with some values from a JSON string as well as some additionally provided values.</p>\n\n<p>For example - given the following record:</p>\n\n<pre><code>data MyRecord = MyRecord { a :: String, b :: Int, c :: String }\n</code></pre>\n\n<p>I want do define a function:</p>\n\n<pre><code>createMyRecord :: String -&gt; String -&gt; Maybe MyRecord\ncreateMyRecord json cValue = ???\n</code></pre>\n\n<p>Which I want to be able to call like so:</p>\n\n<pre><code>createMyRecord \"{\\\"a\\\": \\\"a value\\\", \\\"b\\\": 100}\" \"c value\"\n</code></pre>\n\n<p>Currently, I'm doing this by use Aeson to create the record with defaults (i.e. empty strings and zeros) for the values which don't come from the JSON. I then create a new version of the record with the other fields updated. Something like this:</p>\n\n<pre><code>instance FromJSON MyRecord where\n    parseJSON = withObject \"MyRecord\" $ \\o -&gt; do\n        valueA &lt;- o .: \"a\"\n        valueB &lt;- o .: \"b\"\n        return MyRecord { a = valueA, b = valueB, c = \"\" }\n\ncreateMyRecord :: String -&gt; String -&gt; Maybe MyRecord\ncreateMyRecord json cValue =\n    Aeson.decode json &lt;$&gt; (\\r -&gt; r { c = cValue })\n</code></pre>\n\n<p>This feels a bit cumbersome - I'd like to create the record in one go with all the values, rather than filling them in step by step. Is there a nicer way to do this with Aeson (I'm open to other libraries also) that anyone can recommend?</p>\n\n<p>Thanks!</p>\n"}, {"tags": ["haskell", "syntax"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1526658965, "post_id": 50415146, "comment_id": 87846020, "body": "Well it is not necessary, since the <code>Leaf</code> case do not has such <code>[Tree c a]</code>."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1526659109, "post_id": 50415146, "comment_id": 87846095, "body": "What specifically about this syntax confuses you? Do you understand anything else here?"}], "answers": [{"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 0, "last_activity_date": 1526661473, "last_edit_date": 1526661473, "creation_date": 1526659121, "answer_id": 50415206, "question_id": 50415146, "link": "https://stackoverflow.com/questions/50415146/weird-type-syntax-in-data-constructor/50415206#50415206", "title": "Weird type syntax in data constructor", "body": "<p>It's not a matter of syntax; it's a matter of semantics. A <code>Leaf</code> value just wraps a value of type <code>a</code>. The other two constructors wrap lists of <code>Tree</code> values, making this a recursive data structure. A <code>Tree c a</code> is either a leaf node  (e.g. <code>Leaf 3</code>) or an interior node with an arbitrary number of subtrees as children (e.g. <code>Node \"foo\" [Leaf 1, Leaf 3, (Node \"bar\" []]</code>).</p>\n"}, {"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 2, "last_activity_date": 1526659155, "creation_date": 1526659155, "answer_id": 50415213, "question_id": 50415146, "link": "https://stackoverflow.com/questions/50415146/weird-type-syntax-in-data-constructor/50415213#50415213", "title": "Weird type syntax in data constructor", "body": "<p>When defining a value constructor <code>K</code>, the notation <code>K T1 T2 .. Tn</code> denotes that <code>K</code> is a constructor function taking <code>n</code> values, the first one being of type <code>T1</code>, and so on.</p>\n\n<p>In <code>Node String [Tree c a]</code>, we can see that <code>Node</code> takes two arguments. The first is a string (<code>String</code>). The second one is a list of trees (<code>[Tree c a]</code>). Hence, a node comprises both a string and a list of subtrees.</p>\n\n<p>Instead, <code>NodeWithCleanup c [Tree c a]</code> means that a node-with-cleanup comprises a value of type <code>c</code> and a list of subtrees.</p>\n\n<p><code>Leaf a</code> means that leafs contain a single value of type <code>a</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 3021, "user_id": 631914, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/5f8247a4ee5eebf4b586e8c396cea1c9?s=128&d=identicon&r=PG", "display_name": "nam", "link": "https://stackoverflow.com/users/631914/nam"}, "edited": false, "score": 0, "creation_date": 1526660044, "post_id": 50415264, "comment_id": 87846570, "body": "this is really awesome! I get 4 quality answer for 20 minutes! This iswhy learning haskell a wonderful experience!"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 5, "last_activity_date": 1526659327, "creation_date": 1526659327, "answer_id": 50415264, "question_id": 50415146, "link": "https://stackoverflow.com/questions/50415146/weird-type-syntax-in-data-constructor/50415264#50415264", "title": "Weird type syntax in data constructor", "body": "<h1>The list type <code>[]</code></h1>\n\n<p>In Haskell lists (which are conceptually <em>linked list</em>) are a type <code>[]</code>. A list can contain only <em>one</em> type of elements (so a list can not contain <code>Int</code> and <code>String</code>s at the same time).</p>\n\n<p>In case a list thus contains out of elements of type <code>a</code>, then we denote this as <code>[a]</code>. For example a list of <code>Int</code>s is denoted as <code>[Int]</code>.</p>\n\n<blockquote>\n  <p><strong>Note</strong>: this syntax is actually syntactical sugar. If you write <code>[a]</code>, behind the curtains you have actually written <code>[] a</code>.</p>\n</blockquote>\n\n<h1>Types (with type parameters)</h1>\n\n<p>In the code fragment you quote, the programmer defines a type <code>Tree</code>, and the type has two type parameters <code>c</code> (the type of the \"cleanup\") and <code>a</code> (the type of the \"leaves\"). So that means that a type <code>Tree c a</code> is a type for which <code>c</code> are the cleanup types and <code>a</code> are the leaf types.</p>\n\n<p>If we thus want to construct a list of such <code>Tree</code>s, we write <code>[] (Tree c a)</code>, or more convenient <code>[Tree c a]</code>.</p>\n\n<h1>Data constructors (with parameters)</h1>\n\n<p>The programmer has defined three <em>data constructors</em>. Data constructors can be seen as labels you attach to objects, and they bind \"parameters\" together. The number of parameters a data constructor has can differ, as well as the types.</p>\n\n<p>In your code fragment there are three data constructors:</p>\n\n<ol>\n<li><code>Node</code> a data constructor that takes two parameters: a <code>String</code> and a list of <code>Tree c a</code>s (its children);</li>\n<li><code>NodeWithCleanup</code> a dataconstructor with again two parameters: a <code>c</code> (the cleanup) and a list of <code>Tree c a</code>s (its children); and</li>\n<li><code>Leaf</code> a data constructor with a single parameter: the data it stores (of type <code>a</code>).</li>\n</ol>\n"}, {"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 3, "last_activity_date": 1526659797, "last_edit_date": 1526659797, "creation_date": 1526659462, "answer_id": 50415303, "question_id": 50415146, "link": "https://stackoverflow.com/questions/50415146/weird-type-syntax-in-data-constructor/50415303#50415303", "title": "Weird type syntax in data constructor", "body": "<p>Like most \u201csyntax\u201d in Haskell these <code>[]</code> aren't really special syntax at all<sup>\u2020</sup>. Constructor declarations simply list the types that are going to be contained. It might become clearer if you add record labels: (I'll diregard the \u201ccleanup\u201d part here)</p>\n\n<pre><code>data Tree a\n   = Node { nodeCaption :: String\n          , subtrees :: [Tree c a] }\n   | Leaf { leafContent :: a }\n</code></pre>\n\n<p>This is basically like two Python classes:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>class TreeNode:\n  def __init__(self, caption, subs):\n      self.nodeCaption = caption\n      self.subtrees = subs\nclass TreeLeaf:\n  def __init__(self, content):\n      self.leafContent = content\n</code></pre>\n\n<p>...intended to be built like</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>TreeNode(\"foo\", [TreeNode(\"bar1\", TreeLeaf(1)), TreeNode(\"bar2\", TreeLeaf(2))])\n</code></pre>\n\n<p>In the Haskell implementation, you just write</p>\n\n<pre><code>Node \"foo\" [Node \"bar1\" (Leaf 1), Node \"bar2\" (Leaf2)]\n</code></pre>\n\n<p>for that.</p>\n\n<hr>\n\n<p><sup>\u2020</sup><sub>Square brackets <em>are</em> special syntax in the sense that they are reserved for lists, but the do this the same way no matter if you write them in a function's type signature or in a data declaration.</sub></p>\n"}], "owner": {"reputation": 3021, "user_id": 631914, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/5f8247a4ee5eebf4b586e8c396cea1c9?s=128&d=identicon&r=PG", "display_name": "nam", "link": "https://stackoverflow.com/users/631914/nam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 168, "favorite_count": 0, "closed_date": 1526665809, "accepted_answer_id": 50415264, "answer_count": 4, "score": 0, "last_activity_date": 1605660388, "creation_date": 1526658891, "last_edit_date": 1605660388, "question_id": 50415146, "link": "https://stackoverflow.com/questions/50415146/weird-type-syntax-in-data-constructor", "closed_reason": "Duplicate", "title": "Weird type syntax in data constructor", "body": "<p>I've found some code</p>\n\n<pre><code>data Tree c a = Node String [Tree c a]\n              | NodeWithCleanup c [Tree c a]\n              | Leaf a\n</code></pre>\n\n<p>And I don't understand why it's necessary to add <code>[Tree c a]</code>. I don't know this syntax, can you explain it to me ?</p>\n"}, {"tags": ["haskell", "recursion", "stack-overflow", "fold"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1526644084, "post_id": 50410516, "comment_id": 87836591, "body": "Actually, it does kind of cause a stack overflow \u2013 just not on the fixed-size stack but on the demand-growable heap. So it doesn&#39;t crash your program but instead your OS... not at only 5000000 elements, but if you try much more, be prepared for some swapping fun."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1526644641, "post_id": 50410516, "comment_id": 87836934, "body": "I should hope it doesn&#39;t crash a modern OS."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1526651642, "post_id": 50410516, "comment_id": 87841370, "body": "@chepner not crash, but it can bring it down to almost standstill when the kernel starts swapping out the window manager to make room for the rogue Haskell programm. Compiling with <code>-with-rtsopts &#39;-M4g&#39;</code> or similar is advisable."}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user6445533"}, "edited": false, "score": 0, "creation_date": 1526645272, "post_id": 50410904, "comment_id": 87837322, "body": "Why was the stack size limited in the first place? This makes rather sense for imperative languages, where loops are idiomatic and recursion is not."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 3, "creation_date": 1526646726, "post_id": 50410904, "comment_id": 87838144, "body": "@ftor I don&#39;t know for sure, but I suspect it is a 32-bit computing legacy. When you only have 4 gigs to play with, memory management can actually be an issue that requires attention; and a popular strategy is to pick a fixed-size stack, put it at a particular place in the address space, and use the rest of your address space for heap. Once you move to 64-bit addresses that becomes much less of an issue, as it&#39;s easy to put your stack and heap in wildly different parts of the address space -- there is technically still a limit, but not one RAM will be able to match for a long time."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1526652047, "post_id": 50410904, "comment_id": 87841604, "body": "I&#39;m not sure if this is how memory management still works, but I remember dealing with stack-heap collisions on classic Mac OS in the 90s. The stack started at address space 0 and grew up; the heap started at &lt;some-high-address&gt; and grew down. Allocate too much memory on either, and one would start to overwrite the other. (Of course, each process was allocated a fixed-sized chunk of the global address space, rather than a full 32-bit virtual address space, so it was a lot easier to consume available memory.)"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 4, "last_activity_date": 1526644851, "creation_date": 1526644851, "answer_id": 50410904, "question_id": 50410516, "link": "https://stackoverflow.com/questions/50410516/why-does-foldr-applied-to-a-function-strict-in-both-arguments-not-cause-a-stack/50410904#50410904", "title": "Why does foldr applied to a function strict in both arguments not cause a stack overflow?", "body": "<p>GHC's latest runtime system lets its stack grow dynamically. Try limiting it, and you'll see your stack overflow:</p>\n\n<pre><code>% ghci +RTS -K512K\nGHCi, version 8.2.2: http://www.haskell.org/ghc/  :? for help\nPrelude&gt; foldr (+) 0 [1..5000000]\n*** Exception: stack overflow\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user6445533"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 121, "favorite_count": 0, "accepted_answer_id": 50410904, "answer_count": 1, "score": 2, "last_activity_date": 1526644851, "creation_date": 1526643498, "question_id": 50410516, "link": "https://stackoverflow.com/questions/50410516/why-does-foldr-applied-to-a-function-strict-in-both-arguments-not-cause-a-stack", "title": "Why does foldr applied to a function strict in both arguments not cause a stack overflow?", "body": "<p>I wonder why this expression doesn't cause a stack overflow in GHCi:</p>\n\n<pre><code>foldr (+) 0 [1..5000000] -- 12500002500000\n</code></pre>\n\n<p>Obviously, <code>(+)</code> is strict in both its arguments so the whole list has to be traversed immediately and lazyness doesn't help.</p>\n\n<p>My first thought was that the compiler would recognize <code>(+)</code> as an associative operation and transforms it into tail recursion.</p>\n\n<p>However, the following operation does work as well:</p>\n\n<pre><code>foldr (-) 0 [1..5000000] -- -2500000\n</code></pre>\n\n<p>What is happening here?</p>\n"}, {"tags": ["haskell", "aeson"], "comments": [{"owner": {"reputation": 1159, "user_id": 3953988, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/803352198cc6f048e409a07eefa19d7b?s=128&d=identicon&r=PG", "display_name": "Rahul Manne", "link": "https://stackoverflow.com/users/3953988/rahul-manne"}, "edited": false, "score": 0, "creation_date": 1526597396, "post_id": 50401443, "comment_id": 87818873, "body": "What if the object contained both a &quot;val1&quot; and a &quot;val3&quot;? What if it contained none of them? I think &quot;most correct&quot; needs to be better defined.  If &quot;val1&quot; and &quot;val3&quot; are not allowed to co-exist, make parsing fail if you see &quot;val3&quot; when parsing Thing1."}, {"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "reply_to_user": {"reputation": 1159, "user_id": 3953988, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/803352198cc6f048e409a07eefa19d7b?s=128&d=identicon&r=PG", "display_name": "Rahul Manne", "link": "https://stackoverflow.com/users/3953988/rahul-manne"}, "edited": false, "score": 0, "creation_date": 1526597672, "post_id": 50401443, "comment_id": 87818931, "body": "You&#39;ll only ever get JSON that looks like <code>Thing1</code> or <code>Thing2</code>. I can pick an arbitrary default case for only having a &quot;name&quot;. The real issue is this could grow to much more than two versions of data and I&#39;d like something more extensible than just looking for fields that shouldn&#39;t be in some cases. So &quot;most correct&quot; would be whichever datatype decodes with the least number of <code>Nothing</code>&#39;s."}, {"owner": {"reputation": 1159, "user_id": 3953988, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/803352198cc6f048e409a07eefa19d7b?s=128&d=identicon&r=PG", "display_name": "Rahul Manne", "link": "https://stackoverflow.com/users/3953988/rahul-manne"}, "edited": false, "score": 0, "creation_date": 1526597977, "post_id": 50401443, "comment_id": 87819004, "body": "What if, you made parsing fail if all of the fields were Nothing? I think that would resolve your issue. (eg: for Thing1, parseJSON (Object v) = do { n &lt;- v.: &quot;name&quot;; v1 &lt;- v .:? &quot;val1&quot;; v2 &lt;- v .:? &quot;val2&quot;; if v1 == Nothing &amp;&amp; v2 == Nothing then fail &quot;At least one must be present&quot; else ...}."}, {"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "reply_to_user": {"reputation": 1159, "user_id": 3953988, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/803352198cc6f048e409a07eefa19d7b?s=128&d=identicon&r=PG", "display_name": "Rahul Manne", "link": "https://stackoverflow.com/users/3953988/rahul-manne"}, "edited": false, "score": 0, "creation_date": 1526598210, "post_id": 50401443, "comment_id": 87819054, "body": "That might work... But I&#39;d prefer to not have to change the <code>parseJSON</code> instances for <code>Thing1</code> or <code>Thing2</code>. My general goal is to allow multiple versions of the data to coexist so I&#39;d prefer to not change any previous definitions. I was kind of thinking I could decode them, then re-encode into <code>Object</code>&#39;s and look at the length of the <code>HashMap</code> to see the number of keys that succeeded. But that felt pretty hacky too."}, {"owner": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 0, "creation_date": 1526635577, "post_id": 50401443, "comment_id": 87831425, "body": "Write a scoring function that tells how good a parse is (eg, number of Just). Then try all parses and pick the one with the highest score."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1526650741, "post_id": 50401443, "comment_id": 87840729, "body": "Will there be any keys in the JSON that the &quot;best&quot; parser will ignore? If not, you can track what keys you look at and use that information at   disambiguation time in a pretty straightforward way, and I&#39;d be happy to write up an answer describing how to do that."}, {"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1526651086, "post_id": 50401443, "comment_id": 87840989, "body": "@DanielWagner I think the &quot;best&quot; parser will always consume all of the keys, but might not have all of its fields be filled out (some things could be <code>Nothing</code>). Is there something in aeson like parseJSONWithLeftovers?  I wasn&#39;t sure how to nicely track which keys have been used."}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1526653774, "post_id": 50413467, "comment_id": 87842770, "body": "Two asides. Why not use <code>HashSet Text</code> instead of <code>HashMap Text ()</code>? Ideally you would, and then would use <code>HM.keysHashSet o == keys</code> instead of <code>null (HM.difference o keys)</code>. But <code>HM.keysHashSet</code> doesn&#39;t appear to exist! What a shame. Why not use <code>WriterT ... Parser</code> instead of <code>Compose Parser (Writer ...)</code> and get a <code>Monad</code> instance to use? It&#39;s probably fine, but before doing so I would want to check whether <code>(&lt;|&gt;)</code> tracks the right things, and I was too lazy to do that before writing up my answer."}, {"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 0, "creation_date": 1526656235, "post_id": 50413467, "comment_id": 87844390, "body": "Thanks for writing this up! I like this solution generally (it&#39;s a lot more elegant than some of the other ideas I&#39;ve had). Ideally, I&#39;d like to not modify my previous parsers for <code>Thing1</code> and <code>Thing2</code> and only modify the one for <code>VersionedThing</code>, but this gives me some good ideas on how to make that work as well."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 0, "creation_date": 1526656512, "post_id": 50413467, "comment_id": 87844555, "body": "@jkeuhlen I suppose an interesting alternate combinator is <code>roundtripping :: ToJSON a =&gt; (Value -&gt; Parser a) -&gt; (Value -&gt; Parser a); roundtripping p v = do { a &lt;- p v; guard (toJSON a == v); return a</code> (for bonus points, report a good error instead of using <code>guard</code>). Then without modifying the instances for <code>Thing1</code> or <code>Thing2</code> you can write the <code>VersionedThing</code> instance as <code>(V1 &lt;$&gt; roundtripping parseJSON v) &lt;|&gt; (V2 &lt;$&gt; roundtripping parseJSON v)</code>. Kind of expensive, but it sure is a small amount of code."}, {"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 0, "creation_date": 1526656763, "post_id": 50413467, "comment_id": 87844705, "body": "Do you want to edit that alternative into your answer? I think I&#39;ll end up combing parts of both methods for my eventual solution"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 1, "last_activity_date": 1526653363, "creation_date": 1526653363, "answer_id": 50413467, "question_id": 50401443, "link": "https://stackoverflow.com/questions/50401443/pick-the-most-correct-fromjson-instance-with-overlapping-definitions/50413467#50413467", "title": "Pick the most correct FromJSON instance with overlapping definitions", "body": "<p>Here's my plan: while parsing, we'll track which keys we've looked at. Parsers that don't consume all the keys of the object will fail. Here's your preamble, fleshed out to be complete and compilable:</p>\n\n<pre><code>{-# LANGUAGE DuplicateRecordFields #-}\n{-# LANGUAGE OverloadedStrings #-}\n\nimport Control.Applicative\nimport Control.Monad.Writer\nimport Data.Aeson\nimport Data.Aeson.Types (Parser)\nimport Data.Functor.Compose\nimport Data.HashMap.Lazy (HashMap)\nimport Data.Text (Text)\nimport qualified Data.HashMap.Lazy as HM\n\ndata VersionedThing = V1 Thing1 | V2 Thing2 deriving (Eq, Ord, Read, Show)\n\ndata Thing1 = Thing1\n    { name :: Maybe String\n    , val1 :: Maybe String\n    , val2 :: Maybe String\n    } deriving (Eq, Ord, Read, Show)\n\ndata Thing2 = Thing2\n    { name :: Maybe String\n    , val3 :: Maybe String\n    , val4 :: Maybe String\n    } deriving (Eq, Ord, Read, Show)\n</code></pre>\n\n<p>Now we'll add a type for parsing and tracking at the same time, together with embeddings for \"just parse without tracking\" and \"just track without parsing\".</p>\n\n<pre><code>type ParseAndTrack = Compose Parser (Writer (HashMap Text ()))\n\nparse :: Parser a -&gt; ParseAndTrack a\ntrack :: Text -&gt; ParseAndTrack ()\n\nparse p = Compose (pure &lt;$&gt; p)\ntrack t = Compose . pure . tell $ HM.singleton t ()\n</code></pre>\n\n<p>We can use these two primitives to lift <code>(.:)</code> and <code>(.:?)</code> to tracked versions of themselves. We'll use the suffix <code>&amp;</code> for things that parse and track.</p>\n\n<pre><code>(.:&amp;) :: FromJSON a =&gt; Object -&gt; Text -&gt; ParseAndTrack a\no .:&amp; t = track t *&gt; parse (o .: t)\n\n(.:?&amp;) :: FromJSON a =&gt; Object -&gt; Text -&gt; ParseAndTrack (Maybe a)\no .:?&amp; t = (Just &lt;$&gt; (o .:&amp; t)) &lt;|&gt; pure Nothing\n</code></pre>\n\n<p>Finally, we'll give a top-level way to drop back down from \"parse-and-track\" mode to \"parse-only\" mode, failing if we haven't consumed all the keys available.</p>\n\n<pre><code>consumeAllOf :: Object -&gt; ParseAndTrack a -&gt; Parser a\nconsumeAllOf o p = do\n    (result, keys) &lt;- runWriter &lt;$&gt; getCompose p\n    let unusedKeys = HM.difference o keys\n    unless (null unusedKeys) . fail $\n        \"unrecognized keys \" ++ show (HM.keys unusedKeys)\n    return result\n</code></pre>\n\n<p>Now we can write your two parsers with the above additional tools, and things should pretty much just work. The only difference in the parsers for <code>Thing1</code> and <code>Thing2</code> is that we throw a <code>consumeAllOf</code> on front and use the tracking versions of <code>.:</code> and <code>.:?</code> in the middle.</p>\n\n<pre><code>instance FromJSON Thing1 where\n    parseJSON (Object v) = consumeAllOf v $ Thing1 &lt;$&gt; v.:&amp; \"name\" &lt;*&gt; v.:?&amp; \"val1\" &lt;*&gt; v .:?&amp; \"val2\"\n\ninstance FromJSON Thing2 where\n    parseJSON (Object v) = consumeAllOf v $ Thing2 &lt;$&gt; v.:&amp; \"name\" &lt;*&gt; v.:?&amp; \"val3\" &lt;*&gt; v .:?&amp; \"val4\"\n\ninstance FromJSON (VersionedThing) where\n    parseJSON v = (V1 &lt;$&gt; parseJSON v)\n          `mplus` (V2 &lt;$&gt; parseJSON v)\n</code></pre>\n\n<p>Try it out in ghci:</p>\n\n<pre><code>&gt; decode \"{\\\"name\\\": \\\"foo\\\", \\\"val1\\\": \\\"bar\\\"}\" :: Maybe VersionedThing\nJust (V1 (Thing1 {name = Just \"foo\", val1 = Just \"bar\", val2 = Nothing}))\n&gt; decode \"{\\\"name\\\": \\\"foo\\\", \\\"val3\\\": \\\"bar\\\"}\" :: Maybe VersionedThing\nJust (V2 (Thing2 {name = Just \"foo\", val3 = Just \"bar\", val4 = Nothing}))\n</code></pre>\n"}], "owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 115, "favorite_count": 1, "accepted_answer_id": 50413467, "answer_count": 1, "score": 1, "last_activity_date": 1526653363, "creation_date": 1526596788, "question_id": 50401443, "link": "https://stackoverflow.com/questions/50401443/pick-the-most-correct-fromjson-instance-with-overlapping-definitions", "title": "Pick the most correct FromJSON instance with overlapping definitions", "body": "<p>I have a kind of unusual use case for supporting multiple versions of a record that is communicated via JSON and has a large number of <code>Maybe</code> values. </p>\n\n<pre><code>data VersionedThing = V1 Thing1 | V2 Thing2 \n\ndata Thing1 = Thing { \n  name :: Maybe String,\n  val1 :: Maybe String,\n  val2 :: Maybe String,\n}\n\ndata Thing2 = Thing { \n  name :: Maybe String,\n  val3 :: Maybe String,\n  val4 :: Maybe String,\n} \n\ninstance FromJSON Thing1 where \n  parseJSON (Object v) = Thing &lt;$&gt; v.: \"name\" &lt;*&gt; v.:? \"val1\" &lt;*&gt; v .:? \"val2\"\n\ninstance FromJSON Thing2 where \n  parseJSON (Object v) = Thing &lt;$&gt; v.: \"name\" &lt;*&gt; v.:? \"val3\" &lt;*&gt; v .:? \"val4\"\n\ninstance FromJSON (VersionedThing) where\n  parseJSON v = (V1 &lt;$&gt; parseJSON v)\n        `mplus` (V2 &lt;$&gt; parseJSON v) \n</code></pre>\n\n<p>My problem is that because these records share a name field with no other requirements, JSON that represents a specific version will always be able to be parsed as another version. </p>\n\n<p>For example decoding the JSON</p>\n\n<pre><code>{\n  \"name\":\"Foo\",\n  \"val3\":\"Bar\",\n  \"val4\":\"Baz\"\n}\n</code></pre>\n\n<p>Could yield the haskell values: </p>\n\n<pre><code>Thing1 (Just \"Foo\") Nothing Nothing \n</code></pre>\n\n<p>or  </p>\n\n<pre><code>Thing2 (Just \"Foo\") (Just \"Bar\") (Just \"Baz)\n</code></pre>\n\n<p>Is there a way to write my <code>FromJSON</code> instance of <code>VersionedThing</code> in such a way that it always parses whichever is the \"most correct\" value, rather than simply using the first one to succeed? </p>\n"}, {"tags": ["haskell", "list-comprehension"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1526592152, "post_id": 50400691, "comment_id": 87817224, "body": "<code>x</code> is the product of all possible <code>z</code>, <code>y</code>? Now it aims to construct products that are palindromes."}, {"owner": {"user_type": "does_not_exist", "display_name": "user6791424"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1526592390, "post_id": 50400691, "comment_id": 87817283, "body": "@WillemVanOnsem I meant that the list would have all the products but anyways I think even this interpretation is wrong"}], "answers": [{"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1526642338, "post_id": 50400790, "comment_id": 87835501, "body": "FWIW, in Haskell lingo, <code>x &lt;- e</code> is called a <i>generator</i>. (&amp; congratulations for having reached 100k :-)) (already +1d yesterday)"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 4, "last_activity_date": 1526642376, "last_edit_date": 1526642376, "creation_date": 1526592613, "answer_id": 50400790, "question_id": 50400691, "link": "https://stackoverflow.com/questions/50400691/list-comprehension-in-haskell-with-let-and-show-what-is-it-for/50400790#50400790", "title": "List comprehension in haskell with let and show, what is it for?", "body": "<blockquote>\n  <p>I don't think I understand what's happening here. Shouldn't everything to the right of <code>|</code> be constraints?</p>\n</blockquote>\n\n<p>No, at the right part you see an expression that is a comma-separated (<code>,</code>) list of \"parts\", and every part is one of the following tree:</p>\n\n<ol>\n<li>an <strong>\"generator\"</strong> of the form <code>somevar &lt;- somelist</code>;</li>\n<li>a <strong><code>let</code> statement</strong> which is an expression that can be used to for instance introduce a variable that stores a subresult; and</li>\n<li>expressions of the type boolean that act like a <strong>filter</strong>.</li>\n</ol>\n\n<p>So it is not some sort of \"<em>constraint programming</em>\" where one simply can list some constraints and hope that Haskell figures it out (in fact personally that is the difference between a \"programming language\" and a \"specification language\": in a programming language you have \"control\" how the data flows, in a specification language, that is handled by a system that reads your specifications)</p>\n\n<p>Basically an iterator can be compared to a \"foreach\" loop in many imperative programming languages. A \"let\" statement can be seen as introducing a temprary variable (but note that in Haskell you do <em>not</em> assign variable, you declare them, so you can not reassign values). The filter can be seen as an <code>if</code> statement.</p>\n\n<p>So the list comprehension would be equivalent to something in Python like:</p>\n\n<pre><code>for y in range(100, 1000):\n    for z in range(y, 1000):\n        x = y * z\n        s = str(x)\n        if x == x[::-1]:\n            yield x\n</code></pre>\n\n<p>We thus first iterate over two ranges in a nested way, then we declare <code>x</code> to be the multiplication of <code>y</code> and <code>z</code>, with <code>let s = show x</code>, we basically convert a number (for example <code>15129</code>) to its string counterpart (for example \"15129\"). Finally we use <code>s == reverse s</code> to reverse the string and check if it is equal to the original string.</p>\n\n<p>Note that there are more efficient ways to test Palindromes, especially for multiplications of two numbers.</p>\n"}, {"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user6791424"}, "edited": false, "score": 0, "creation_date": 1526594112, "post_id": 50400901, "comment_id": 87817906, "body": "So lists comprehensions are actually translated to this?"}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1526594190, "post_id": 50400901, "comment_id": 87817920, "body": "@GuerlandoOCs Yes, list comprehensions are syntactic sugar for <code>do</code>-notation specifically for lists."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1526595815, "post_id": 50400901, "comment_id": 87818422, "body": "There&#39;s also the <a href=\"https://ghc.haskell.org/trac/ghc/wiki/MonadComprehensions\" rel=\"nofollow noreferrer\"><code>MonadComprehensions</code></a> extension for general monads, not just lists."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 5, "last_activity_date": 1526593302, "creation_date": 1526593302, "answer_id": 50400901, "question_id": 50400691, "link": "https://stackoverflow.com/questions/50400691/list-comprehension-in-haskell-with-let-and-show-what-is-it-for/50400901#50400901", "title": "List comprehension in haskell with let and show, what is it for?", "body": "<p>A list comprehension is a rather thin wrapper around a <code>do</code> expression:</p>\n\n<pre><code>problem_4 = maximum $ do\n     y &lt;- [100..999]\n     z &lt;- [y..999]\n     let x = y*z\n     let s = show x\n     guard $ s == reverse s\n     return x\n</code></pre>\n\n<p>Most pieces translate directly; pieces that aren't iterators (<code>&lt;-</code>) or <code>let</code> expressions are treated as arguments to the <code>guard</code> function found in <code>Control.Monad</code>. The effect of <code>guard</code> is to short-circuit the evaluation; for the list monad, this means not executing <code>return x</code> for the particular value of <code>x</code> that led to the false argument.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user6791424"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 741, "favorite_count": 0, "accepted_answer_id": 50400901, "answer_count": 2, "score": 4, "last_activity_date": 1526642376, "creation_date": 1526592081, "last_edit_date": 1526593652, "question_id": 50400691, "link": "https://stackoverflow.com/questions/50400691/list-comprehension-in-haskell-with-let-and-show-what-is-it-for", "title": "List comprehension in haskell with let and show, what is it for?", "body": "<p>I'm studying project euler solutions and this is the solution of problem 4, which asks to </p>\n\n<blockquote>\n  <p>Find the largest palindrome made from the product of two 3-digit\n  numbers</p>\n</blockquote>\n\n<pre><code>problem_4 =\n  maximum [x | y&lt;-[100..999], z&lt;-[y..999], let x=y*z, let s=show x, s==reverse s]\n</code></pre>\n\n<p>I understand that this code creates a list such that <code>x</code> is a product of all possible <code>z</code> and <code>y</code>. </p>\n\n<p>However I'm having a problem understanding what does <code>s</code> do here. Looks like everything after <code>|</code> is going to be executed everytime a new element from this list is needed, right? </p>\n\n<p>I don't think I understand what's happening here. Shouldn't everything to the right of <code>|</code> be constraints?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 1, "creation_date": 1526587542, "post_id": 50399577, "comment_id": 87815267, "body": "Where do you think the problem is? What have you tried so far?"}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 3, "creation_date": 1526588021, "post_id": 50399577, "comment_id": 87815510, "body": "Hi Niclas! You appear to be a Haskell beginner. May I recommend reading <a href=\"http://learnyouahaskell.com/chapters\" rel=\"nofollow noreferrer\">LYAH</a> and learning more about Haskell before diving into these problems?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1526588025, "post_id": 50399577, "comment_id": 87815513, "body": "Hint: take a look at the brackets."}, {"owner": {"reputation": 10094, "user_id": 9518890, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Matus Dubrava", "link": "https://stackoverflow.com/users/9518890/matus-dubrava"}, "edited": false, "score": 0, "creation_date": 1526589311, "post_id": 50399577, "comment_id": 87816089, "body": "I can only recommend reading the book AJFarmar pointed out, it will save you a lot of time and trouble."}], "answers": [{"tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": false, "score": 3, "last_activity_date": 1526589200, "last_edit_date": 1526589200, "creation_date": 1526588681, "answer_id": 50399970, "question_id": 50399577, "link": "https://stackoverflow.com/questions/50399577/haskell-error-how-can-i-solve-it/50399970#50399970", "title": "Haskell Error how can I solve it", "body": "<p>There are a number of issues, but the compiler is currently complaining about your attempt to define <code>show</code>:</p>\n\n<pre><code>instance ToDouble (RechenBaum) where\n    show (Blattwert(a))= \"show a\"\n</code></pre>\n\n<ol>\n<li><p>The function <code>show</code> is not a member of the class <code>ToDouble</code> so you can not define it in the where block for a <code>ToDouble</code> instance.</p></li>\n<li><p>You are using some odd syntax for pattern matching.  Don't <code>Rechenbaum(a)</code> but instead <code>(Rechenbaum a)</code>.  EDIT: Rechenbaum isn't even a constructor so don't use it as such. If you want a variable that matches any constructor use <code>a</code> or pattern match with one of the constructors.  Same goes for your uses of <code>Op</code> which is not a constructor.</p></li>\n<li><p>There is no data constructor named <code>ToDouble</code> so your definition of <code>toDouble</code> inside the instance makes no sense at all.</p></li>\n<li><p>The constructor <code>RechenBaum</code> will produce a value of type <code>RechenBaum</code> and not a <code>Double</code> so using it on the right hand side of <code>toDouble</code> doesn't make much sense.  Actually, now that I look there are no <code>RechenBaum</code> constructors so using it as such is itself an error - the constructors for that type are namedd <code>BlattWert</code> and <code>AstOp</code>.</p></li>\n<li><p>Sometimes you use <code>RechenBaum</code> and other times <code>Rechenbaum</code> - these are different symbols.</p></li>\n</ol>\n"}], "owner": {"reputation": 11, "user_id": 9808277, "user_type": "registered", "profile_image": "https://graph.facebook.com/1626938574089406/picture?type=large", "display_name": "Niclas Schmidbauer", "link": "https://stackoverflow.com/users/9808277/niclas-schmidbauer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 137, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1526589200, "creation_date": 1526586859, "last_edit_date": 1526587516, "question_id": 50399577, "link": "https://stackoverflow.com/questions/50399577/haskell-error-how-can-i-solve-it", "title": "Haskell Error how can I solve it", "body": "<p>I get this error Message on my Haskell Codewhen compiling:</p>\n\n<pre><code>H5-1.hs:11:28: error:\n    parse error on input \u2018=\u2019\n    Perhaps you need a 'let' in a 'do' block?\n    e.g. 'let x = 5' instead of 'x = 5'\n   |\n11 |         show (Blattwert(a))= \"show a\"    | \n</code></pre>\n\n<p>Here is the original Code:</p>\n\n<pre><code>class ToDouble a \n where toDouble :: a -&gt; Double\n</code></pre>\n\n<p>How could I solve this issue?</p>\n\n<pre><code>data Op = Plus | Minus | Mal | Geteilt \n deriving (Show, Eq)\n\ndata RechenBaum = BlattWert Double | AstOp RechenBaum Op RechenBaum \n deriving Show\n\ninstance ToDouble (RechenBaum) where\n    show (Blattwert(a))= \"show a\"\n    toDouble(AstOp (Rechenbaum (a) Op(b) Rechenbaum(c)))= \n        ToDouble (AstOp (Rechenbaum (a) Op(Plus) Rechenbaum(c)))= RechenBaum(a)+ Rechenbaum(c)\n        ToDouble (AstOp (Rechenbaum (a) Op(Minus) Rechenbaum(c)))= RechenBaum(a) -  Rechenbaum(c)\n        ToDouble (AstOp (Rechenbaum (a) Op(Mal) Rechenbaum(c)))= RechenBaum(a)*Rechenbaum(c)\n        ToDouble (AstOp (Rechenbaum (a) Op(Geteilt) Rechenbaum(c)))= RechenBaum(a) /Rechenbaum(c)\n</code></pre>\n"}, {"tags": ["haskell", "types", "functional-programming", "type-inference"], "comments": [{"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 0, "creation_date": 1526585241, "post_id": 50399111, "comment_id": 87814064, "body": "I&#39;m not sure I understand your question? You specified the type of <code>nat</code> and the type of <code>head</code>, why is the result confusing when you combine them?"}, {"owner": {"reputation": 88, "user_id": 8896130, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZaDyA.png?s=128&g=1", "display_name": "NarrowVision", "link": "https://stackoverflow.com/users/8896130/narrowvision"}, "reply_to_user": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 0, "creation_date": 1526585326, "post_id": 50399111, "comment_id": 87814118, "body": "what do you mean combine them"}, {"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 0, "creation_date": 1526585388, "post_id": 50399111, "comment_id": 87814151, "body": "Your question is &quot;Give the type...&quot; and you state it is <code>Num c =&gt; c</code>. What is your question? You combined the types of <code>2</code>, <code>nat</code>, and <code>head</code> through function application."}], "answers": [{"comments": [{"owner": {"reputation": 88, "user_id": 8896130, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZaDyA.png?s=128&g=1", "display_name": "NarrowVision", "link": "https://stackoverflow.com/users/8896130/narrowvision"}, "edited": false, "score": 0, "creation_date": 1526585672, "post_id": 50399216, "comment_id": 87814295, "body": "This is the best answer I could ever think of, Thank You!."}, {"owner": {"reputation": 88, "user_id": 8896130, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZaDyA.png?s=128&g=1", "display_name": "NarrowVision", "link": "https://stackoverflow.com/users/8896130/narrowvision"}, "edited": false, "score": 0, "creation_date": 1526585905, "post_id": 50399216, "comment_id": 87814405, "body": "I understand how the types are being passed around now. clearly informative comment."}, {"owner": {"reputation": 88, "user_id": 8896130, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZaDyA.png?s=128&g=1", "display_name": "NarrowVision", "link": "https://stackoverflow.com/users/8896130/narrowvision"}, "edited": false, "score": 0, "creation_date": 1526585978, "post_id": 50399216, "comment_id": 87814437, "body": "you know that moment, when u read it 10 times, and you get it, you finally get it!"}, {"owner": {"reputation": 88, "user_id": 8896130, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZaDyA.png?s=128&g=1", "display_name": "NarrowVision", "link": "https://stackoverflow.com/users/8896130/narrowvision"}, "edited": false, "score": 0, "creation_date": 1526586768, "post_id": 50399216, "comment_id": 87814864, "body": "sorry for taking too long, but do you know any good resources on type inference in haskell?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 88, "user_id": 8896130, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZaDyA.png?s=128&g=1", "display_name": "NarrowVision", "link": "https://stackoverflow.com/users/8896130/narrowvision"}, "edited": false, "score": 0, "creation_date": 1526586950, "post_id": 50399216, "comment_id": 87814959, "body": "@NarrowVision: well the algorithm behind Haskells type system is the <i>Hindley\u2013Milner type system</i> (<a href=\"https://en.wikipedia.org/wiki/Hindley%E2%80%93Milner_type_system\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/Hindley%E2%80%93Milner_type_system</a>) I think this might be a start. There is some explanation about <i>algorithm W</i> which is the algorithm that does the type inference."}, {"owner": {"reputation": 18055, "user_id": 936310, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/302ec54987694b9746abf8e2e0ad8caf?s=128&d=identicon&r=PG&f=1", "display_name": "alias", "link": "https://stackoverflow.com/users/936310/alias"}, "edited": false, "score": 2, "creation_date": 1526659437, "post_id": 50399216, "comment_id": 87846273, "body": "Mark Jones&#39;s thesis is (though it&#39;s from 1994), definitive in Haskell type inference: <a href=\"https://rads.stackoverflow.com/amzn/click/com/0521543266\" rel=\"nofollow noreferrer\" rel=\"nofollow noreferrer\">amazon.com/Qualified-Types-Practice-Distinguished-Dissertati&zwnj;&#8203;ons/&hellip;</a> An earlier tech-report version is available for free (though it&#39;s scanned) at <a href=\"https://www.cs.ox.ac.uk/files/3432/PRG106.pdf\" rel=\"nofollow noreferrer\">cs.ox.ac.uk/files/3432/PRG106.pdf</a>"}, {"owner": {"reputation": 88, "user_id": 8896130, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZaDyA.png?s=128&g=1", "display_name": "NarrowVision", "link": "https://stackoverflow.com/users/8896130/narrowvision"}, "edited": false, "score": 0, "creation_date": 1526667769, "post_id": 50399216, "comment_id": 87850034, "body": "Thank you guys, I will definitely look into that."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 10, "last_activity_date": 1526585373, "creation_date": 1526585373, "answer_id": 50399216, "question_id": 50399111, "link": "https://stackoverflow.com/questions/50399111/how-can-i-demonstrate-that-this-type-will-be-inferred/50399216#50399216", "title": "How can I demonstrate that this type will be inferred?", "body": "<p>Well let us assume that we already derived the type of <code>nat</code> and we know the type of <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:head\" rel=\"noreferrer\"><strong><code>head :: [a] -&gt; a</code></strong></a></p>\n\n<pre><code>nat :: Num a =&gt; a -&gt; [a]\nhead :: [b] -&gt; b\n</code></pre>\n\n<p>Then we use different type variable names <code>a</code> and <code>b</code>, since right now we do not know anything about <code>a</code> and <code>b</code>, and hence we assume that the <em>can</em> be different, and hence assign a different name.</p>\n\n<p>Now we see <code>(nat 2)</code> in the expression. We know that <code>2</code> has type:</p>\n\n<pre><code>2 :: Num c =&gt; c\n</code></pre>\n\n<p>So that means that <code>nat 2</code> has type:</p>\n\n<pre><code>nat     :: Num a =&gt; a -&gt; [a]\n2       :: Num c =&gt; c\n----------------------------\n(nat 2) :: Num a =&gt;      [a]\n</code></pre>\n\n<p>and we know that <code>a ~ c</code> (<code>a</code> and <code>c</code> are the same type). We know this since <code>2</code> is the <em>parameter</em> of a function call with <code>nat</code> as function, and <code>nat</code> has as parameter type <code>a</code>. Hence the type of <code>2</code> and the parameter of <code>nat</code> need to be the same.</p>\n\n<p>Now we call <code>head</code> with as argument <code>(nat 2)</code>, so that means we reason that:</p>\n\n<pre><code>head         ::          [b] -&gt; b\n(nat 2)      :: Num a =&gt; [a]\n---------------------------------\nhead (nat 2) :: Num b =&gt;        b\n</code></pre>\n\n<p>And we know that <code>a ~ b</code> since the type of <code>nat 2</code> is <code>[a]</code> and the first parameter of <code>head</code> should have type <code>[b]</code>. So that means that since <code>a ~ b</code>, that means that the type constraint <code>Num a</code>, also means <code>Num b</code>, and vice versa.</p>\n\n<p>So the type is:</p>\n\n<pre><code>head (nat 2) :: Num b =&gt; b\n</code></pre>\n"}], "owner": {"reputation": 88, "user_id": 8896130, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ZaDyA.png?s=128&g=1", "display_name": "NarrowVision", "link": "https://stackoverflow.com/users/8896130/narrowvision"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 123, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1526634102, "creation_date": 1526584958, "last_edit_date": 1526634102, "question_id": 50399111, "link": "https://stackoverflow.com/questions/50399111/how-can-i-demonstrate-that-this-type-will-be-inferred", "title": "How can I demonstrate that this type will be inferred?", "body": "<p>I am going over, Haskel type inference which is a bit tricky for me even though it seems easy.</p>\n\n<p>Given this function: <code>nat x = x : ( nat (x+1))</code> </p>\n\n<p>which is of type: <code>Num t =&gt; t -&gt; [t]</code></p>\n\n<p>and this is clear because nat function takes an element and constructs an infinite list. </p>\n\n<p>But, now I am asked to specify the type of <code>head (nat 2)</code> </p>\n\n<p>I fully understand why and what is the type of <code>head :: [a] -&gt; a</code></p>\n\n<p>But why is <code>head (nat 2) :: Num c =&gt; c</code> can someone explain why?</p>\n\n<p>Starting from the most general type which is A -> B (I assume its A -> B because it takes one argument) Whats next?</p>\n\n<p><strong><em>EDIT</em></strong> </p>\n\n<p>This <code>Give the type of the expression: head (nat 2)</code> means that I should give the type of the function, or simply just the value returned, which in fact must be a number and that's why it is <code>Num c =&gt; c</code>, did I just answered my question?</p>\n\n<p>Original question:  <code>Give the type of the expression: head (nat 2)</code></p>\n\n<p>Justify your answer.</p>\n\n<p>Thanks</p>\n"}, {"tags": ["ubuntu", "haskell"], "answers": [{"tags": [], "owner": {"reputation": 1364, "user_id": 4883788, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/Z9NZQ.jpg?s=128&g=1", "display_name": "SkyWriter", "link": "https://stackoverflow.com/users/4883788/skywriter"}, "is_accepted": false, "score": 1, "last_activity_date": 1527133283, "creation_date": 1527133283, "answer_id": 50500559, "question_id": 50398974, "link": "https://stackoverflow.com/questions/50398974/two-different-haskell-platform-installations-on-my-ubuntu-disk/50500559#50500559", "title": "Two different Haskell Platform installations on my Ubuntu disk", "body": "<p>Having some experience in devops, I'd suggest you first get rid of both. Even though it does work now, it is most likely to cause problems down the road when you upgrade things, as this installation is definitely not how it is supposed to work, hence not supported.</p>\n\n<p>Once you have a clean slate again, you can get the latest Haskell Platform via your preferred way, or just use <a href=\"https://www.haskellstack.org/\" rel=\"nofollow noreferrer\">Haskell Stack</a>, which is something I use daily, quite happy with and a strong advocate of.</p>\n\n<p>Besides being a Haskell version manager, Stack maintains a set of compatible libraries in a so-called LTS'es and helps you avoid Cabal Hell and get reproducible builds by pinning a certain version of Haskell and a set of libraries to your source code. So as the world moves on, you still have mindful control over GHC and libraries versions your project uses and can build it with close to zero additional effort even a few years after you developed it.</p>\n"}], "owner": {"reputation": 175, "user_id": 6100902, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a6258d0cd48308d643be416d03c73d4e?s=128&d=identicon&r=PG&f=1", "display_name": "Douglas Lewit", "link": "https://stackoverflow.com/users/6100902/douglas-lewit"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 287, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1527133283, "creation_date": 1526584442, "last_edit_date": 1526584604, "question_id": 50398974, "link": "https://stackoverflow.com/questions/50398974/two-different-haskell-platform-installations-on-my-ubuntu-disk", "title": "Two different Haskell Platform installations on my Ubuntu disk", "body": "<p>I recently upgraded to Ubuntu 18.04, erasing everything on my old disk, including the Haskell platform. Then I did the following in order to get the Haskell platform on my disk:</p>\n\n<pre><code>sudo apt-get install haskell-platform\n</code></pre>\n\n<p>(Actually, I think in Ubuntu 18.04 you don't really need the word \"get\" but it still works anyhow. So I think I just entered this into my Terminal:\n<code>sudo apt install haskell-platform</code>)</p>\n\n<p>Then I noticed that the version I installed was version 8.0.2, which is not really the current version of the platform. So I visited www.haskell.org and downloaded and installed the current version of the platform, which is version 8.4.2. Now I have <em>two</em> different versions of the Haskell Platform, one from the official website and the other one is from an Ubuntu repository. (The one in the Ubuntu repository is a little out-of-date.)  </p>\n\n<p>The one that is \"active\" is the one I installed last, which is version 8.4.2. So if I type <code>ghci</code> in my Terminal, I get ghci version 8.4.2.  If I want the older version, then I can do the following:\n<code>/usr/bin/./ghci-8.0.2</code> and that launches the slightly older version of the interactive interpreter.</p>\n\n<p>Is there any harm in keeping both versions? How can I <em>safely</em> remove the version I installed from Ubuntu's repository? If I do that, would I then have to reinstall the Haskell Platform from Haskell's official website at www.haskell.org/? Should I just keep them both?</p>\n"}, {"tags": ["haskell", "happstack"], "answers": [{"comments": [{"owner": {"reputation": 11, "user_id": 9808102, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "ib1", "link": "https://stackoverflow.com/users/9808102/ib1"}, "edited": false, "score": 0, "creation_date": 1526586697, "post_id": 50398994, "comment_id": 87814818, "body": "Thank you for your response , I am getting this error  --  In the second argument of \u2018resp\u2019, namely \u2018&quot;Method not allowed&quot;\u2019       In a stmt of a &#39;do&#39; block: resp 405 &quot;Method not allowed&quot;       In the expression:         do { method PUT;              resp 405 &quot;Method not allowed&quot; } -- I tried to find what is wrong but no luck ."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 11, "user_id": 9808102, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "ib1", "link": "https://stackoverflow.com/users/9808102/ib1"}, "edited": false, "score": 0, "creation_date": 1526586871, "post_id": 50398994, "comment_id": 87814921, "body": "Hmm.. I think I forgot some brackets. Edited the answer."}, {"owner": {"reputation": 11, "user_id": 9808102, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "ib1", "link": "https://stackoverflow.com/users/9808102/ib1"}, "edited": false, "score": 0, "creation_date": 1526587434, "post_id": 50398994, "comment_id": 87815206, "body": "I am getting the same error -- \u2022 No instance for (Data.String.IsString Response)         arising from the literal \u2018&quot;Method not allowed&quot;\u2019     \u2022 In the second argument of \u2018($)\u2019, namely \u2018&quot;Method not allowed&quot;\u2019       In a stmt of a &#39;do&#39; block: (resp 405) $ &quot;Method not allowed&quot;       In the second argument of \u2018($)\u2019, namely         \u2018do { method [PUT, POST];               (resp 405) $ &quot;Method not allowed&quot; }\u2019  --"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 11, "user_id": 9808102, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "ib1", "link": "https://stackoverflow.com/users/9808102/ib1"}, "edited": false, "score": 0, "creation_date": 1526587771, "post_id": 50398994, "comment_id": 87815383, "body": "Here you include <code>PUT</code> and <code>POST</code> in the same list?"}, {"owner": {"reputation": 11, "user_id": 9808102, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "ib1", "link": "https://stackoverflow.com/users/9808102/ib1"}, "edited": false, "score": 0, "creation_date": 1526588528, "post_id": 50398994, "comment_id": 87815758, "body": "Yeah sorry wrong copy this is the one --  No instance for (Data.String.IsString Response)         arising from the literal \u2018&quot;Method not allowed&quot;\u2019     \u2022 In the second argument of \u2018($)\u2019, namely \u2018&quot;Method not allowed&quot;\u2019       In a stmt of a &#39;do&#39; block: (resp 405) $ &quot;Method not allowed&quot;       In the expression:         do { method PUT;              (resp 405) $ &quot;Method not allowed&quot; }"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 11, "user_id": 9808102, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "ib1", "link": "https://stackoverflow.com/users/9808102/ib1"}, "edited": false, "score": 0, "creation_date": 1526588659, "post_id": 50398994, "comment_id": 87815822, "body": "Are the there any other handlers in your list that work with a response instead of a string literal?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 11, "user_id": 9808102, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "ib1", "link": "https://stackoverflow.com/users/9808102/ib1"}, "edited": false, "score": 0, "creation_date": 1526588717, "post_id": 50398994, "comment_id": 87815847, "body": "@ib1: in that case you need to construct as message something of the same type as the other handlers."}, {"owner": {"reputation": 11, "user_id": 9808102, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "ib1", "link": "https://stackoverflow.com/users/9808102/ib1"}, "edited": false, "score": 0, "creation_date": 1526588760, "post_id": 50398994, "comment_id": 87815867, "body": "No there are not."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 1, "last_activity_date": 1526586860, "last_edit_date": 1526586860, "creation_date": 1526584511, "answer_id": 50398994, "question_id": 50398913, "link": "https://stackoverflow.com/questions/50398913/create-a-custom-happstack-response-code/50398994#50398994", "title": "Create a custom happstack response code", "body": "<p>Well the <a href=\"https://hackage.haskell.org/package/happstack-server-7.5.1/docs/Happstack-Server-Response.html\" rel=\"nofollow noreferrer\"><strong><code>ok :: (FilterMonad Response m) =&gt; a -&gt; m a</code></strong></a> function is implemented as <a href=\"https://hackage.haskell.org/package/happstack-server-7.5.1/docs/src/Happstack-Server-Response.html#ok\" rel=\"nofollow noreferrer\">[src]</a>:</p>\n\n<blockquote>\n<pre><code>ok :: (FilterMonad Response m) =&gt; a -&gt; m a\nok = resp 200\n</code></pre>\n</blockquote>\n\n<p>So it is the same way like you would write an <code>ok</code> response, except that you should use <a href=\"https://hackage.haskell.org/package/happstack-server-7.5.1/docs/Happstack-Server-Response.html#v:resp\" rel=\"nofollow noreferrer\"><strong><code>resp :: (FilterMonad Response m) =&gt; Int -&gt; b -&gt; m b</code></strong></a> with a custom return code.</p>\n\n<p>For example:</p>\n\n<pre><code>resp 405 \"Method not allowed\"\n</code></pre>\n\n<p>So we can for example block <code>PUT</code> and <code>POST</code> requests with something like:</p>\n\n<pre><code>main :: IO ()\nmain = simpleHTTP nullConf $ msum\n         [ do method GET\n              ok $ \"This is allowed.\\n\"\n         , do method PUT\n              (resp 405) $ \"Method not allowed\"\n         , do method POST\n              (resp 405) $ \"Method not allowed\"\n         ]\n</code></pre>\n"}], "owner": {"reputation": 11, "user_id": 9808102, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "ib1", "link": "https://stackoverflow.com/users/9808102/ib1"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 38, "favorite_count": 0, "accepted_answer_id": 50398994, "answer_count": 1, "score": 1, "last_activity_date": 1526586860, "creation_date": 1526584217, "last_edit_date": 1526584407, "question_id": 50398913, "link": "https://stackoverflow.com/questions/50398913/create-a-custom-happstack-response-code", "title": "Create a custom happstack response code", "body": "<p>I have been trying to create a custom <code>happstack</code> response the <code>405 \"Method not allowed\"</code> so if someone calls the <code>API</code> with a <code>POST</code> or <code>PUT</code> method they will get this response. I am new to <code>happstack</code>. Any ideas how I can do that?</p>\n"}, {"tags": ["haskell", "math"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1526569759, "post_id": 50394781, "comment_id": 87805422, "body": "Isn&#39;t the cruss sum of <code>42</code>, <code>3</code>?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1526569886, "post_id": 50394781, "comment_id": 87805509, "body": "Furthermore I actually think this belongs more to <a href=\"https://math.stackexchange.com\">Mathematics</a> or another SX network."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1526570071, "post_id": 50394781, "comment_id": 87805640, "body": "Hint: what is the relation between the number of ones in a binary representation and the recursions of the last type in your first code fragment?"}, {"owner": {"reputation": 371, "user_id": 156884, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/3a7abd71c411501b7c3631fe50e5e238?s=128&d=identicon&r=PG", "display_name": "ngmir", "link": "https://stackoverflow.com/users/156884/ngmir"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1526570450, "post_id": 50394781, "comment_id": 87805890, "body": "@WillemVanOnsem thats right, fixed it."}, {"owner": {"reputation": 371, "user_id": 156884, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/3a7abd71c411501b7c3631fe50e5e238?s=128&d=identicon&r=PG", "display_name": "ngmir", "link": "https://stackoverflow.com/users/156884/ngmir"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1526570505, "post_id": 50394781, "comment_id": 87805930, "body": "@WillemVanOnsem thanks for reading, regarding your hint: I see that, just forgot to add it to the post. Anything else you could say about it?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1526570635, "post_id": 50394781, "comment_id": 87806020, "body": "I have modified two small details in your exposition to be what I believe you intended. Feel free to roll back if you were being precise and I misunderstood."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1526571245, "post_id": 50394781, "comment_id": 87806433, "body": "And, by the way, there is some fascinating mathematics lurking just around the corner if you&#39;re interested. Finding the <i>minimal</i> number of multiplications needed to compute an power is surprisingly tricky. Computing the minimal number of multiplications needed to produce a given set of powers <a href=\"https://en.wikipedia.org/wiki/Addition-chain_exponentiation\" rel=\"nofollow noreferrer\">is NP-complete</a>."}, {"owner": {"reputation": 371, "user_id": 156884, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/3a7abd71c411501b7c3631fe50e5e238?s=128&d=identicon&r=PG", "display_name": "ngmir", "link": "https://stackoverflow.com/users/156884/ngmir"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1526584459, "post_id": 50394781, "comment_id": 87813679, "body": "@DanielWagner thank you for your edits, they were indeed as intended."}], "answers": [{"comments": [{"owner": {"reputation": 371, "user_id": 156884, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/3a7abd71c411501b7c3631fe50e5e238?s=128&d=identicon&r=PG", "display_name": "ngmir", "link": "https://stackoverflow.com/users/156884/ngmir"}, "edited": false, "score": 0, "creation_date": 1526585886, "post_id": 50395208, "comment_id": 87814393, "body": "That is nice, since you can express &quot;number of bits&quot; mathematically in terms of &quot;log_2&quot;.  It doesn&#39;t bother me that it does not hold generally, including base cases -- after all, the recursive definition has explicit base cases so theres bound to be different structure there."}, {"owner": {"reputation": 371, "user_id": 156884, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/3a7abd71c411501b7c3631fe50e5e238?s=128&d=identicon&r=PG", "display_name": "ngmir", "link": "https://stackoverflow.com/users/156884/ngmir"}, "edited": false, "score": 0, "creation_date": 1526628946, "post_id": 50395208, "comment_id": 87827430, "body": "cf this article: <a href=\"http://www.exploringbinary.com/number-of-bits-in-a-decimal-integer/\" rel=\"nofollow noreferrer\">Number of bits in a decimal integer</a>"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 3, "last_activity_date": 1526570839, "creation_date": 1526570839, "answer_id": 50395208, "question_id": 50394781, "link": "https://stackoverflow.com/questions/50394781/link-between-number-of-multiplications-to-calculate-nk-and-the-binary-cross-sum/50395208#50395208", "title": "Link between number of multiplications to calculate n^k and the binary cross sum of n", "body": "<blockquote>\n<pre><code>M(2k)   = 1 + M(k)\nM(2k+1) = 1 + M(2k)\n\nQ(2k)   =     Q(k)\nQ(2k+1) = 1 + Q(k)\n</code></pre>\n</blockquote>\n\n<p>In fact, we can make the parallel between the two definitions even closer. In <code>M(2k+1) = 1 + M(2k)</code>, we can unroll the equation we have for <code>M(2k)</code>:</p>\n\n<pre><code>M(2k)   =     1 + M(k)\nM(2k+1) = 1 + 1 + M(k)\n\nQ(2k)   =     Q(k)\nQ(2k+1) = 1 + Q(k)\n</code></pre>\n\n<p>Now it is clear that, compared to <code>Q</code>, <code>M</code> adds one more on each \"recursive call\". So <code>M(k)</code> will be <code>Q(k)</code> plus the total number of recursive calls <code>M</code> makes -- which in this case is also the total number of bits in <code>k</code>. (There is just one wrinkle: we haven't written about the base cases for <code>Q</code> and <code>M</code> above. Once we factor that in, does that change the answer? What would the base cases have to look like in a counterfactual world to give the other answer to \"does that change the answer?\"?)</p>\n"}], "owner": {"reputation": 371, "user_id": 156884, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/3a7abd71c411501b7c3631fe50e5e238?s=128&d=identicon&r=PG", "display_name": "ngmir", "link": "https://stackoverflow.com/users/156884/ngmir"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 86, "favorite_count": 0, "accepted_answer_id": 50395208, "answer_count": 1, "score": 1, "last_activity_date": 1526570839, "creation_date": 1526569612, "last_edit_date": 1526570605, "question_id": 50394781, "link": "https://stackoverflow.com/questions/50394781/link-between-number-of-multiplications-to-calculate-nk-and-the-binary-cross-sum", "title": "Link between number of multiplications to calculate n^k and the binary cross sum of n", "body": "<p>Using the identities...</p>\n\n<pre><code>       x^0 = 1\n    x^(2n) = (x*x)^n\n  x^(2n+1) = x * (x*x)^n\n</code></pre>\n\n<p>...we can write a Haskell function that calculates the <em>k</em>th power of <em>x</em> with fewer than <em>k</em> multiplications.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>nat_pow :: Double -&gt; Integer -&gt; Double\nnat_pow x 0 = 1\nnat_pow x k\n  | m==0 = nat_pow (x*x) n            -- k == 2*n  &lt;=&gt;  m == 0\n  | otherwise = x * nat_pow (x*x) n   -- k == 2*n+1\n  where\n    (n,m) = k `divMod` 2              -- n &lt;- k `div` 2; m &lt;- k `mod` 2\n</code></pre>\n\n<p>For example:</p>\n\n<pre><code>nat_pow x 6\n= nat_pow x^2 3\n= x^2 * natpow (x^2)^2 1\n= x^2 * (x^2)^2  *  natpow ((x^2)^2)^2) 0\n= x^2 * (x^2)^2  *         1\n</code></pre>\n\n<p>Further, we can look at the cross sum of a number w.r.t base 2.</p>\n\n<pre><code>crossSum_2 42 = 3                     (because (42)_10 = (101010)_2)\n</code></pre>\n\n<p><strong>Question:</strong> What is the link between the number of multiplications <code>nat_pow x k</code> requires and <code>crossSum_2 k</code>?</p>\n\n<p><strong>What I have so far</strong>:</p>\n\n<p>Let Q(k) be the binary cross sum of k; M(k) the number of multiplications of <code>nat_pow n k</code>. Then I can see that</p>\n\n<pre><code>M(2k)   = 1 + M(k)\nM(2k+1) = 1 + M(2k)\n\nQ(2k)   =     Q(k)\nQ(2k+1) = 1 + Q(k)\n</code></pre>\n\n<p>So one could say that </p>\n\n<ol>\n<li>Q(n) is the number of \"odd\" cases of <code>nat_pow</code>; hence</li>\n<li><em>M(n) >= Q(n)</em> always holds. </li>\n</ol>\n\n<p>However, I think there must be more to it.</p>\n"}, {"tags": ["haskell", "gcc", "cabal-install"], "comments": [{"owner": {"reputation": 2578, "user_id": 395863, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/d694caab02e48b350c52fda041cc75cf?s=128&d=identicon&r=PG", "display_name": "Raveline", "link": "https://stackoverflow.com/users/395863/raveline"}, "edited": false, "score": 0, "creation_date": 1526551436, "post_id": 50386787, "comment_id": 87792874, "body": "If you can install through Slack, why are you trying to install it through cabal ? Have you put parsec as a dependency of your project ? (In the cabal file or package.yaml file, depending on which version of Slack you use) In which case, you should be able to use parsec as a dependency (or test it in an interpreter launched using <code>stack ghci</code>)."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1526582999, "post_id": 50386787, "comment_id": 87812918, "body": "Did you try updating Xcode to the latest version (this will also update clang)?"}, {"owner": {"reputation": 113, "user_id": 9804802, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Etienne Bernard", "link": "https://stackoverflow.com/users/9804802/etienne-bernard"}, "edited": false, "score": 0, "creation_date": 1526667901, "post_id": 50386787, "comment_id": 87850107, "body": "Thank you for your kind replies.  David Young&gt; I must update the computer system in order to update Xcode. I will try it after exam time. :)"}], "answers": [{"comments": [{"owner": {"reputation": 444, "user_id": 9254063, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cN3Ot.png?s=128&g=1", "display_name": "Searge", "link": "https://stackoverflow.com/users/9254063/searge"}, "reply_to_user": {"reputation": 113, "user_id": 9804802, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Etienne Bernard", "link": "https://stackoverflow.com/users/9804802/etienne-bernard"}, "edited": false, "score": 0, "creation_date": 1526848236, "post_id": 50419101, "comment_id": 87892261, "body": "Spend 3 days on it and still can&#39;t make SublimeHaskell works properly \ud83d\ude13"}, {"owner": {"reputation": 18823, "user_id": 96531, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/a3739a0c73f29e189d798c2a96ba4d7c?s=128&d=identicon&r=PG", "display_name": "Felixyz", "link": "https://stackoverflow.com/users/96531/felixyz"}, "edited": false, "score": 1, "creation_date": 1526852746, "post_id": 50419101, "comment_id": 87893453, "body": "Just setting -no-pie to &quot;NO&quot; did it for me (everything else works with clang). Thanks!"}, {"owner": {"reputation": 2800, "user_id": 823778, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/ae9083830645913b421b0331a036162f?s=128&d=identicon&r=PG", "display_name": "oluckyman", "link": "https://stackoverflow.com/users/823778/oluckyman"}, "edited": false, "score": 3, "creation_date": 1529491008, "post_id": 50419101, "comment_id": 88889608, "body": "managed to fix that warning by editing <code>settings</code> in <code>~&#47;.stack&#47;programs&#47;...</code> folder. This is where stack installs <code>ghc</code> to isolate it from system <code>ghc</code>"}], "tags": [], "owner": {"reputation": 444, "user_id": 9254063, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cN3Ot.png?s=128&g=1", "display_name": "Searge", "link": "https://stackoverflow.com/users/9254063/searge"}, "is_accepted": true, "score": 17, "last_activity_date": 1526712430, "last_edit_date": 1526712430, "creation_date": 1526676707, "answer_id": 50419101, "question_id": 50386787, "link": "https://stackoverflow.com/questions/50386787/cabal-install-gcc-failed-in-phase-c-compiler/50419101#50419101", "title": "cabal install `gcc&#39; failed in phase `C Compiler&#39;", "body": "<p>I had the same problem in the same time :-)</p>\n\n<p>Most answers I\u2019ve found on stackoverflow is about to update Xcode. </p>\n\n<p><strong>But!</strong> I\u2019ve seen that suggestions since 2013, and in that case, I can\u2019t update Xcode, because I have old Macbook and OS X 10.11 on it, i have tried:\n<code>\nbrew install gcc\n</code>\nNext step I wondering how to setup Gnu C Compler over Xcode and found right now how.\nOpen in terminal with your fav. editor:</p>\n\n<p><code>mate /Library/Frameworks/GHC.framework/Versions/8.4.2-x86_64/usr/lib/ghc-8.4.2/settings\n</code></p>\n\n<p>And change this:</p>\n\n<pre><code>, (\"C compiler command\",\"gcc\")\n, (\"C compiler flags\",\" -fno-stack-protector\")\n, (\"C compiler link flags\",\" \")\n, (\"C compiler supports -no-pie\",\"YES\")\n, (\"Haskell CPP command\",\"gcc\")\n</code></pre>\n\n<p>with <code>/usr/local/bin/gcc-8</code> instead <code>gcc</code> &amp; <code>\"NO\"</code> instead <code>\"YES\u00bb</code></p>\n\n<p>Hope it helps &lt;3</p>\n"}], "owner": {"reputation": 113, "user_id": 9804802, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Etienne Bernard", "link": "https://stackoverflow.com/users/9804802/etienne-bernard"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 3829, "favorite_count": 4, "accepted_answer_id": 50419101, "answer_count": 1, "score": 11, "last_activity_date": 1539005910, "creation_date": 1526545834, "last_edit_date": 1539005910, "question_id": 50386787, "link": "https://stackoverflow.com/questions/50386787/cabal-install-gcc-failed-in-phase-c-compiler", "title": "cabal install `gcc&#39; failed in phase `C Compiler&#39;", "body": "<p>I want to use <code>parsec</code> for a personal project. But when I invoke <code>cabal install parsec</code>, I get an error:</p>\n\n<pre><code>clang: error: unknown argument: '-no-pie'\ngcc' failed in phase `C Compiler'. (Exit code: 1)\n</code></pre>\n\n<p>I am on OS X El Capitan, 10.11.6. If I have understood correctly he error message above, <code>gcc</code> seems to be the cause. When I check the version of <code>gcc</code>, I get </p>\n\n<pre><code>gcc --version\nConfigured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/usr/include/c++/4.2.1\nApple LLVM version 7.0.0 (clang-700.1.76)\nTarget: x86_64-apple-darwin15.6.0\nThread model: posix\n</code></pre>\n\n<p>Besides, I have read this <a href=\"https://stackoverflow.com/questions/44839260/gcc-exe-failed-in-phase-c-compiler-exit-code-1\">`gcc.exe&#39; failed in phase `C Compiler&#39;. (Exit code: 1)</a> and after <code>stack setup--reinstall</code>, <code>stack install parsec</code> worked very well. But cabal always not. Can you help me?</p>\n"}, {"tags": ["haskell", "monads", "do-notation"], "answers": [{"comments": [{"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1526545205, "post_id": 50386216, "comment_id": 87788696, "body": "Hey.I am sorry that was a typo.I updated the original post with further information."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1526545281, "post_id": 50386216, "comment_id": 87788736, "body": "Then the proposed solution is still valid: you need to use a <code>let</code> statement here, and not a <code>&lt;-</code>, since <code>renderJValue</code> is (as far as I know) not monadic?"}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1526545362, "post_id": 50386216, "comment_id": 87788788, "body": "Is there any documentation on this?When to use <code>&lt;-</code> vs <code>let</code> regarding monads?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 1, "creation_date": 1526545433, "post_id": 50386216, "comment_id": 87788826, "body": "@BercoviciAdrian: well the result of monadic actions are catched with <code>&lt;-</code> for the others, you can decide to inline it (i.e. <code>writeFile out (renderJValue sample)</code>, but this leads to complicated code), or by using <code>let</code> statements, that act like a <code>let ... in ...</code> in non-<code>do</code> blocks."}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1526545675, "post_id": 50386216, "comment_id": 87788983, "body": "I thought that inside the  Monad you can not use <code>=</code> only <code>&lt;-</code>.Outside monad i have used <code>let</code> and  <code>where</code> clauses etc..i know these constructs but do not know how they are used in <code>IO</code>."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 1, "creation_date": 1526545751, "post_id": 50386216, "comment_id": 87789037, "body": "@BercoviciAdrian: well <code>do</code> notation is actually only syntactical sugar. If you write <code>do {x &lt;- f; g x}</code>, you have actually written <code>f &gt;&gt;= g</code>. And like in non-do blocks, you can use a <code>let</code> clause."}, {"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "edited": false, "score": 3, "creation_date": 1526545910, "post_id": 50386216, "comment_id": 87789139, "body": "Use <code>foo &lt;- bar</code> whenever <code>bar</code> returns an <i>action</i> in the current monad (e.g., <code>IO Integer</code>). Use <code>let foo = bar</code> whenever <code>bar</code> does <i>not</i> return an action in the current monad (e.g., <code>Integer</code>)."}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1526557289, "post_id": 50386216, "comment_id": 87796585, "body": "Oh so to use <code>&lt;- method</code> ,<code>method</code> has to have some side effects like doing some IO stuff on its own? So <code>method</code> should be <code>method::IO Something</code> where something is a type.In my case i could create a wrapper for <code>putStrLn </code> that has a <code>do </code>inside it  and it would work."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 1, "creation_date": 1526557634, "post_id": 50386216, "comment_id": 87796803, "body": "@BercoviciAdrian: more or less, although <code>do</code> works with other monadic types than <code>IO</code> like <code>Maybe</code> and <code>[]</code>, etc. (which makes it quite hard to understand at first). But you can say that it has to be an <code>IO Something</code>, whether it really has side effects is of no importance."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 7, "last_activity_date": 1526545685, "last_edit_date": 1526545685, "creation_date": 1526543886, "answer_id": 50386216, "question_id": 50386089, "link": "https://stackoverflow.com/questions/50386089/can-not-print-to-file-using-io-monad/50386216#50386216", "title": "Can not print to file using IO Monad", "body": "<p>You here use <code>renderJValue sample</code> as if it is an <code>IO String</code>:</p>\n\n<pre><code>main :: IO()\nmain=do\n     <b>val &lt;- renderJValue sample</b>\n     writeFile out val</code></pre>\n\n<p>But it is in fact (given it is a function similar to <a href=\"http://book.realworldhaskell.org/read/writing-a-library-working-with-json-data.html\" rel=\"noreferrer\">this one</a>) a function with signature <code>renderJValue :: JValue -&gt; String</code>. So no <code>IO</code> is involved. In that case we do not use the arrow notation.</p>\n\n<p>We can call the function \"<em>inline</em>\":</p>\n\n<pre><code>main :: IO()\nmain = do\n     writeFile out <b>(renderJValue sample)</b></code></pre>\n\n<p>or even shorter:</p>\n\n<pre><code>main :: IO()\nmain = writeFile out (renderJValue sample)</code></pre>\n\n<p>But in case the expression is rather long, this can become quite ugly. We can decide to use a <code>let</code> statement in that case.</p>\n\n<p>You can solve this by either removing the <code>putStrLn</code>:</p>\n\n<pre><code>main :: IO()\nmain = do\n    <b>let</b> val <b>=</b> renderJValue sample\n    writeFile out val</code></pre>\n"}], "owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 89, "favorite_count": 0, "accepted_answer_id": 50386216, "answer_count": 1, "score": 2, "last_activity_date": 1526546025, "creation_date": 1526543494, "last_edit_date": 1526546025, "question_id": 50386089, "link": "https://stackoverflow.com/questions/50386089/can-not-print-to-file-using-io-monad", "title": "Can not print to file using IO Monad", "body": "<p>Hello i have done my JSon type and i am trying to it to a file.\nI can do this from the prelude but i can't do it when using the IO Monad.I get the following <code>error</code>:</p>\n\n<pre><code> Main.hs:13:24: error:\n    * Couldn't match type `Char' with `[Char]'\n      Expected type: String\n        Actual type: Char\n    * In the second argument of `writeFile', namely `val'\n      In a stmt of a 'do' block: writeFile out val\n      In the expression:\n        do val &lt;- renderJValue sample\n           writeFile out val\n   |\n13 |          writeFile out val\n   |                        ^^^\n</code></pre>\n\n<p><strong>Main</strong></p>\n\n<pre><code> module Main where\n        import Jlib\n        import Put\n        import Data.Typeable\n\n        import System.Environment\n\n        out=\"data.txt\"\n\n        main::IO()\n        main=do\n             val&lt;-renderJValue sample\n             writeFile out val\n</code></pre>\n\n<p>Why would this not work in the IO Monad since <code>renderJValue sample</code> in the prelude works ok .</p>\n\n<p><strong>Jlib.hs</strong></p>\n\n<pre><code>data JValue=JString String\n                |JNumber Double\n                |JBool Bool\n                |JNull\n                |JObject [(String,JValue)]\n                |JArray [JValue]\n                deriving (Eq,Ord,Show)\n</code></pre>\n\n<p><strong>Put.hs</strong></p>\n\n<pre><code>sample=JArray[\n                    JObject [(\"name\",JString \"adita\"),(\"age\",JNumber 13)],\n                    JObject [(\"name\",JString \"dan\"),(\"kids\",JNumber 3)] ,\n                    JNumber 3,\n                    JBool False,\n                    JString \"Howdy\"\n                    ]\n</code></pre>\n\n<p><strong>P.S</strong> <code>renderJValue</code> returns a string</p>\n\n<p><strong>P.S:</strong> if i start the prelude i load the module and i render the value it works:</p>\n\n<pre><code>Prelude System.Environment Put&gt; :load Put\nOk, two modules loaded.\nPrelude System.Environment Put&gt; renderJValue sample\n\"[{name:adita,age:13.0},{name:dan,kids:3.0},3.0,False,Howdy]\"\n</code></pre>\n"}, {"tags": ["haskell", "epoll", "udev"], "comments": [{"owner": {"reputation": 1571, "user_id": 283260, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/057e618fbf211a3733e9fef66030c0b9?s=128&d=identicon&r=PG", "display_name": "pdxleif", "link": "https://stackoverflow.com/users/283260/pdxleif"}, "edited": false, "score": 0, "creation_date": 1526536971, "post_id": 50383042, "comment_id": 87784267, "body": "Turns out there&#39;s <code>threadWaitRead</code> and <code>threadWaitWrite</code> in <code>Control.Concurrent</code> to block the current thread until a file descriptor is ready for reading / writing, without actually doing reading or writing."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1526552533, "post_id": 50383042, "comment_id": 87793539, "body": "Note that the GHC runtime automatically uses <code>poll</code> when Haskell threads (which might be run on a single OS thread) are stuck. The usual solution is to forget about <code>poll</code> and <code>forkIO</code> may green threads doing blocking I/O, and let the GHC runtime call <code>poll</code> for you. The functions you mention also help, if you do not want to read right now."}], "owner": {"reputation": 1571, "user_id": 283260, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/057e618fbf211a3733e9fef66030c0b9?s=128&d=identicon&r=PG", "display_name": "pdxleif", "link": "https://stackoverflow.com/users/283260/pdxleif"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 86, "favorite_count": 0, "closed_date": 1526529805, "answer_count": 0, "score": 0, "last_activity_date": 1526528916, "creation_date": 1526528916, "question_id": 50383042, "link": "https://stackoverflow.com/questions/50383042/recommended-way-to-poll-a-file-descriptor-in-haskell", "closed_reason": "Duplicate", "title": "Recommended way to &quot;poll&quot; a file descriptor in Haskell?", "body": "<p>I see there's wrapper libraries for select(2) and poll(2), but they don't seem much used.</p>\n\n<p>The epoll-based <code>System.Event</code> used <a href=\"https://wiki.haskell.org/Simple_Servers#Epoll-based_event_callbacks\" rel=\"nofollow noreferrer\">here</a> has since been merged in as <code>GHC.Event</code> (though the <code>loop</code> function got put in to the private module <code>GHC.Event.Manager</code> and isn't exported, so apparently only <code>getSystemEventManager</code> is usable). <code>GHC.Event</code> says \"This module should be considered GHC internal.\", which has me wondering - is there some library that wraps that that I should be using, instead?</p>\n\n<p>Some background on my use-case: I wanted to perform an action on a udev event (update a display when e.g. brightness changes). The example here is using the select(2) wrapper: <a href=\"https://github.com/pxqr/udev/blob/master/examples/monitor.hs#L36\" rel=\"nofollow noreferrer\">https://github.com/pxqr/udev/blob/master/examples/monitor.hs#L36</a>\nI was hoping to use something more modern / better maintained and/or less dependencies.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 3, "creation_date": 1526527256, "post_id": 50382732, "comment_id": 87781364, "body": "The definition of <code>Symbol</code> says that whoever creates a <code>Symbol</code> with <code>ProcedureSymbol</code> gets to pick the <code>sy</code> type. But the type of parent (which is the same as <code>forall sc. Scope sc =&gt; Symbol -&gt; Maybe sc</code>) says that whoever <i>calls</i> parent gets to pick the type. You could have a type argument for the <code>Symbol</code> type that tells you what the <code>sc</code> type is."}], "answers": [{"comments": [{"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1526528537, "post_id": 50382953, "comment_id": 87781607, "body": "The potentially tricky part is that, as-is, the third argument of the <code>ProcedureSymbol</code> constructor is necessarily a homogenous list (meaning that for all the <code>Symbol a</code>s in it, all the <code>a</code> types have to be the  same). Whether or not that&#39;s an issue depends on the larger context of the problem being solved here."}], "tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": true, "score": 1, "last_activity_date": 1526528049, "creation_date": 1526528049, "answer_id": 50382953, "question_id": 50382732, "link": "https://stackoverflow.com/questions/50382732/how-can-i-solve-a-rigid-type-variable-bound-error/50382953#50382953", "title": "How can I solve a rigid type variable bound error?", "body": "<p>As @David Young pointed, you can add a type parameter to your Symbol constructor, like this:</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\n\ndata Symbol a where\n     BuiltInTypeSymbol :: String -&gt; Symbol a\n     ProcedureSymbol   :: Scope a =&gt; String -&gt; a -&gt; [Symbol a] -&gt; Symbol a\n\nclass Scope s where\n    getName           :: s -&gt; String\n    getEnclosingScope :: Scope sc =&gt; s -&gt; Maybe sc\n    define            :: s -&gt; Symbol s-&gt; s\n    resolve           :: s -&gt; String -&gt; Maybe (Symbol s)\n\nname :: Symbol a -&gt; String\nname (BuiltInTypeSymbol n) = n\nname (ProcedureSymbol n _ _) = n \n\nparent :: Scope sc =&gt; Symbol sc -&gt; Maybe sc\nparent (ProcedureSymbol _ par _) = Just par\nparent _ = Nothing\n</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 9803550, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/28b2cbf4798f20e5ddf58e4b54f45f04?s=128&d=identicon&r=PG&f=1", "display_name": "Zemliakov", "link": "https://stackoverflow.com/users/9803550/zemliakov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 612, "favorite_count": 0, "accepted_answer_id": 50382953, "answer_count": 1, "score": 2, "last_activity_date": 1526528049, "creation_date": 1526526148, "question_id": 50382732, "link": "https://stackoverflow.com/questions/50382732/how-can-i-solve-a-rigid-type-variable-bound-error", "title": "How can I solve a rigid type variable bound error?", "body": "<p>I defined <code>Symbol</code> data type that can be either <code>BuiltInTypeSymbol</code> or <code>ProcedureSymbol</code>. <code>ProcedureSymbol</code> may have a parent of type <code>Scope</code>. So I added <code>Scope</code> type constraint for <code>ProcedureSymbol</code> data constructor and <code>parent</code> function.    </p>\n\n<pre><code>data Symbol where \n     BuiltInTypeSymbol :: String -&gt; Symbol\n     ProcedureSymbol   :: Scope sc =&gt; String -&gt; sc -&gt; [Symbol] -&gt; Symbol\n\nname :: Symbol -&gt; String\nname (BuiltInTypeSymbol n) = n\nname (ProcedureSymbol n _ _) = n \n\nparent :: Scope sc =&gt; Symbol -&gt; Maybe sc\nparent (ProcedureSymbol _ par _) = Just par\nparent _ = Nothing\n\nclass Scope s where\n    getName           :: s -&gt; String\n    getEnclosingScope :: Scope sc =&gt; s -&gt; Maybe sc\n    define            :: s -&gt; Symbol -&gt; s\n    resolve           :: s -&gt; String -&gt; Maybe Symbol\n</code></pre>\n\n<p>When I try to compile this code I got the following compile error:</p>\n\n<pre>\nSymbolTable.hs:13:36: error:\n    * Couldn't match type `sc1' with `sc'\n      `sc1' is a rigid type variable bound by\n        a pattern with constructor:\n          ProcedureSymbol :: forall sc.\n                             Scope sc =>\n                             String -> sc -> [Symbol] -> Symbol,\n        in an equation for `parent'\n        at SymbolTable.hs:13:9\n      `sc' is a rigid type variable bound by\n        the type signature for:\n          parent :: forall sc. Scope sc => Symbol -> Maybe sc\n        at SymbolTable.hs:12:11\n      Expected type: Maybe sc\n        Actual type: Maybe sc1\n    * In the expression: Just par\n      In an equation for `parent':\n          parent (ProcedureSymbol _ par _) = Just par\n    * Relevant bindings include\n        par :: sc1 (bound at SymbolTable.hs:13:27)\n        parent :: Symbol -> Maybe sc (bound at SymbolTable.hs:13:1)\n</pre>\n\n<p>How can I make this code compile? </p>\n"}, {"tags": ["haskell", "typeclass", "applicative"], "comments": [{"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 3, "creation_date": 1526519893, "post_id": 50381921, "comment_id": 87779994, "body": "Aside: to be law-abiding, <code>pure</code> for <code>ZipList</code> should return an infinite list of its argument, not a singleton list."}], "answers": [{"tags": [], "owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "is_accepted": true, "score": 5, "last_activity_date": 1526519533, "creation_date": 1526519533, "answer_id": 50381963, "question_id": 50381921, "link": "https://stackoverflow.com/questions/50381921/haskell-ziplist-applicative/50381963#50381963", "title": "Haskell ZipList Applicative", "body": "<p>The problem is the <code>&lt;*&gt;</code> in <code>ZipList' $ Cons (f x) (fs &lt;*&gt; xs)</code>.</p>\n\n<p>It's not <code>ZipList'</code>'s <code>&lt;*&gt;</code>, it's <code>List</code>'s.</p>\n\n<p>Try <code>ZipList' $ Cons (f x) (case ZipList' fs &lt;*&gt; ZipList' xs of ZipList ys -&gt; ys)</code>\n`</p>\n"}], "owner": {"reputation": 15, "user_id": 2762424, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5f204d85d2858b63d14dde074ef3dedf?s=128&d=identicon&r=PG&f=1", "display_name": "Aaron", "link": "https://stackoverflow.com/users/2762424/aaron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 191, "favorite_count": 0, "accepted_answer_id": 50381963, "answer_count": 1, "score": 1, "last_activity_date": 1526519533, "creation_date": 1526519095, "question_id": 50381921, "link": "https://stackoverflow.com/questions/50381921/haskell-ziplist-applicative", "title": "Haskell ZipList Applicative", "body": "<p>I'm trying to write an instance of Applicative for my ZipList and I'm getting some confusing results.</p>\n\n<pre><code>data List a =\n    Nil\n  | Cons a (List a)\n  deriving (Eq, Show)\n\nnewtype ZipList' a =\n  ZipList' (List a)\n  deriving (Eq, Show)\n\ninstance Applicative ZipList' where\n  pure = ZipList' . flip Cons Nil\n  (&lt;*&gt;) (ZipList' Nil) _ = ZipList' Nil\n  (&lt;*&gt;) _ (ZipList' Nil) = ZipList' Nil\n  (&lt;*&gt;) (ZipList' (Cons f fs)) (ZipList' (Cons x xs)) =\n    ZipList' $ Cons (f x) (fs &lt;*&gt; xs)\n</code></pre>\n\n<p>It works as expected for ZipLists of length 1 or 2:</p>\n\n<pre><code>&gt; ZipList' (Cons (*2) (Cons (+9) Nil)) &lt;*&gt; ZipList' (Cons 5 (Cons 9 Nil))\nZipList' (Cons 10 (Cons 18 Nil))\n</code></pre>\n\n<p>But when I go to 3+, I get some odd results:</p>\n\n<pre><code>&gt; ZipList' (Cons (*2) (Cons (+99) (Cons (+4) Nil))) &lt;*&gt; ZipList' (Cons 5 (Cons 9 (Cons 1 Nil)))\nZipList' (Cons 10 (Cons 108 (Cons 100 (Cons 13 (Cons 5 Nil)))))\n</code></pre>\n\n<p>The result should be a ZipList of 10, 108, 5 -- but somehow 100 and 13 are crashing the party.</p>\n\n<p>So I tried pulling my function out of the instance so that I could inspect the type that Haskell infers:</p>\n\n<pre><code>(&lt;**&gt;) (ZipList' Nil) _ = ZipList' Nil\n(&lt;**&gt;) _ (ZipList' Nil) = ZipList' Nil\n(&lt;**&gt;) (ZipList' (Cons f fs)) (ZipList' (Cons x xs)) =\n  ZipList' $ Cons (f x) (fs &lt;**&gt; xs)\n</code></pre>\n\n<p>but it won't compile!</p>\n\n<pre><code>17-applicative/list.hs:94:26: error:\n    \u2022 Couldn't match expected type \u2018ZipList' (a0 -&gt; b0)\u2019\n                  with actual type \u2018List (a -&gt; b)\u2019\n    \u2022 In the first argument of \u2018(&lt;**&gt;)\u2019, namely \u2018fs\u2019\n      In the second argument of \u2018Cons\u2019, namely \u2018(fs &lt;**&gt; xs)\u2019\n      In the second argument of \u2018($)\u2019, namely \u2018Cons (f x) (fs &lt;**&gt; xs)\u2019\n    \u2022 Relevant bindings include\n        xs :: List a (bound at 17-applicative/list.hs:93:49)\n        x :: a (bound at 17-applicative/list.hs:93:47)\n        fs :: List (a -&gt; b) (bound at 17-applicative/list.hs:93:26)\n        f :: a -&gt; b (bound at 17-applicative/list.hs:93:24)\n        (&lt;**&gt;) :: ZipList' (a -&gt; b) -&gt; ZipList' a -&gt; ZipList' b\n          (bound at 17-applicative/list.hs:91:1)\n</code></pre>\n\n<p>The error tells me that I'm trying to pass a List where a ZipList is expected, which I can see. But how then did my Applicative instance even compile?</p>\n"}]