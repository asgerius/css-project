[{"tags": ["haskell", "conduit"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1559777739, "post_id": 56468748, "comment_id": 99529901, "body": "A big component is probably caching; the first iteration has to actually compute the first 100000000 terms of the infinite list, but they remain in memory for the following iterations."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1559815991, "post_id": 56468748, "comment_id": 99541147, "body": "Something&#39;s fishy. I used <code>takeC (100000000+i)</code> to try to avoid caching (without success). With <code>-O0</code>, I get slow code (~18s each loop) which runs on ~5MB. With <code>-O2</code>, I get much faster loops with the effect shown above (10s the first one ,0.5s the second), using a whopping 5GB (!!!) resident memory. I had to use <code>Int</code> instead of the default <code>Integer</code> to prevent dying from OOM. Looks like caching, but caching is a quite wrong optimization in this case."}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 1, "creation_date": 1560316277, "post_id": 56468748, "comment_id": 99690838, "body": "What exact test program / compiler flags are you using, and what version of GHC and Conduit are giving you these numbers?  With GHC 8.6.4 (using <code>-O2</code>) and Conduit 1.3.1.1, and the main program <code>main = evaluate_listC 10</code>, I&#39;m seeing the first iteration run in constant memory and complete in under 2 secs with following iterations using a memoized value (i.e., all running in a few microseconds).  Downgrading to Conduit 1.3.0 (the earliest version with a <code>Conduit</code> convenience module), the first iteration slows down to 4.2 secs, but I can&#39;t see how to make it any slower than that."}], "answers": [{"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 1, "last_activity_date": 1560349428, "creation_date": 1560349428, "answer_id": 56564480, "question_id": 56468748, "link": "https://stackoverflow.com/questions/56468748/conduit-pipeline-has-strange-execution-times/56564480#56564480", "title": "Conduit pipeline has strange execution times", "body": "<p>As I mentioned in my comment, I can't duplicate these slow performance numbers, but I'm pretty sure I know what's going on.  If you provide some additional detail that allows me to duplicate the issue, I can update the answer.</p>\n\n<p>Most likely, the list <code>[1..]</code> (or perhaps some larger expression involving this list) is being \"lifted\" as a constant applicative form (CAF) to top level.  As the list is generated during that first iteration, it's kept around as a \"permanent\" heap object for future iterations.</p>\n\n<p>The first iteration takes a long time in <strong>part</strong> because it's allocating and generating the list, though because of GHC's \"bump allocator\", allocation is extremely fast, and actually generating the list probably only takes a few seconds.  Most of the time is likely spent garbage collecting.  GC time scales with the size of the \"important\" stuff that needs to be rescued (copied) from the bump allocator, and you're building a big, permanent list here.</p>\n\n<p>Later iterations are much faster because they can run the Conduit summation over the existing list.  This probably involves some allocation for intermediate results, but most of them don't stick around, so there's much less to GC and the iterations are fast.</p>\n\n<p>The reason the second and third iterations are a little slower than later iterations has to do with GHC's generational garbage collector.  Initially, both the permanent big list and other semi-permanent (e.g., needed only for a short time or for the current iteration) heap objects are copied out of the bump allocator.  Further garbage collection involves re-copying the same permanent list while allowing expired semi-permanent objects to be collected.  Eventually, the list gets promoted to the next generation, while all the non-list objects stay in the first generation.</p>\n\n<p>Once the permanent list and semi-permanent \"other objects\" have been fully separated into different generations, the list no longer needs to be recopied during GC of the first generation, and iteration times settle down to around a second.</p>\n"}], "owner": {"reputation": 117, "user_id": 11127765, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/71568a4586fd4c86cc3a92caf421a91d?s=128&d=identicon&r=PG&f=1", "display_name": "mennetorelli", "link": "https://stackoverflow.com/users/11127765/mennetorelli"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 2, "accepted_answer_id": 56564480, "answer_count": 1, "score": 5, "last_activity_date": 1560349428, "creation_date": 1559772916, "last_edit_date": 1559774858, "question_id": 56468748, "link": "https://stackoverflow.com/questions/56468748/conduit-pipeline-has-strange-execution-times", "title": "Conduit pipeline has strange execution times", "body": "<p>I'm testing the performance of this recursive Haskell function, which repeatedly sums the first 100000000 integers of an infinite list (using a Conduit pipeline) and prints the elapsed time of each execution:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>import Conduit\nimport Data.Time.Clock\n\nevaluate_listC 0 = return ()\nevaluate_listC i = do\n    startTime &lt;- getCurrentTime\n    print $ runConduitPure $ yieldMany [1..] .| takeC 100000000 .| sumC\n    endTime &lt;- getCurrentTime\n    print $ diffUTCTime endTime startTime\n    evaluate_listC (i-1)\n</code></pre>\n\n<p>Compiling (with -O flag) and running the code, and iterating the function 10 times, I obtain the following execution times:</p>\n\n<pre><code>38.2066878s\n4.3696857s\n1.3367605s\n0.9950032s\n0.9399968s\n0.9039936s\n0.9079987s\n0.9119587s\n0.9090151s\n0.8749654s\n</code></pre>\n\n<p>Why does the first iteration (and also the second) take more time while the following ones are incredibly faster?</p>\n"}, {"tags": ["haskell", "haskell-lens", "lenses"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 3, "creation_date": 1559770893, "post_id": 56468091, "comment_id": 99528268, "body": "Would a function <code>pointsToPlayer :: Player -&gt; Lens&#39; PointsData Points</code> be enough? (Can&#39;t test it right now, but I&#39;m quite sure a direct implementation of that would work right away.)"}], "answers": [{"comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1559771444, "post_id": 56468368, "comment_id": 99528467, "body": "Footnote: this works just as well with lenses from <i>lens</i> -- the only difference is how the two lenses happen to be defined."}], "tags": [], "owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "is_accepted": false, "score": 5, "last_activity_date": 1559770755, "creation_date": 1559770755, "answer_id": 56468368, "question_id": 56468091, "link": "https://stackoverflow.com/questions/56468091/a-lens-for-getting-or-setting-a-record-field-determined-by-a-runtime-argument/56468368#56468368", "title": "A lens for getting or setting a record field determined by a runtime argument", "body": "<p>You could create a function that produces a <code>Lens</code> given a <code>Player</code>, like this:</p>\n\n<pre><code>playerPoints :: Player -&gt; Lens' PointsData Point\nplayerPoints PlayerOne = field @\"pointsToPlayerOne\"\nplayerPoints PlayerTwo = field @\"pointsToPlayerTwo\"\n</code></pre>\n\n<p>(this is using <a href=\"https://www.stackage.org/haddock/lts-13.24/generic-lens-1.1.0.0/Data-Generics-Product-Fields.html#v:field\" rel=\"noreferrer\"><code>field</code> from <code>generic-lens</code></a>)</p>\n\n<p>Usage would be like this:</p>\n\n<pre><code>pts :: PointsData\n\npl1 = pts ^. playerPoints PlayerOne\npl2 = pts ^. playerPoints PlayerTwo\n\nnewPts = pts &amp; playerPoints PlayerOne .~ 42\n</code></pre>\n\n<hr>\n\n<p>P.S. Or were you looking for picking a field of <code>PointsData</code> by matching field name to <code>Player</code> constructor name? That is also possible via <code>Generic</code>, but doesn't seem worth the trouble.</p>\n"}, {"comments": [{"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 0, "creation_date": 1559846702, "post_id": 56468420, "comment_id": 99557057, "body": "I find that the concept of thinking about <code>PointsData</code> as a map aligns closely with my original thoughts, and I had hoped there&#39;d be something more closely related to such a concept. Since, however, I&#39;m trying to explore ways to model problem domains, I don&#39;t consider it appropriate to make <code>PointsData</code> polymorphic."}], "tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": false, "score": 6, "last_activity_date": 1559774702, "last_edit_date": 1559774702, "creation_date": 1559770991, "answer_id": 56468420, "question_id": 56468091, "link": "https://stackoverflow.com/questions/56468091/a-lens-for-getting-or-setting-a-record-field-determined-by-a-runtime-argument/56468420#56468420", "title": "A lens for getting or setting a record field determined by a runtime argument", "body": "<p>An excursion into somewhat abstract typeclasses. Your <code>PointsData</code> has a special relationship with the <code>Player</code> type. It's a bit like a <code>Map Player Point</code>, with the particularity that for <em>every</em> possible value of <code>Player</code>, there's <em>always</em> a corresponding <code>Point</code>. In a way, <code>PointsData</code> is like a \"reified function\" <code>Player -&gt; Point</code>.</p>\n\n<p>If we make <code>PointsData</code> polymorphic on the type of <code>Points</code>, it would fit with the <a href=\"http://hackage.haskell.org/package/adjunctions-4.4/docs/Data-Functor-Rep.html\" rel=\"nofollow noreferrer\"><code>Representable</code></a> typeclass. We would say that <code>PointsData</code> is \"represented\" by <code>Player</code>.</p>\n\n<p><code>Representable</code> is often useful as an interface to tabular data, like in the <a href=\"http://hackage.haskell.org/package/grids-0.5.0.1/docs/Data-Grid.html\" rel=\"nofollow noreferrer\">grids</a> package.</p>\n\n<hr>\n\n<p>So one possible solution would be to turn <code>PointsData</code> into an actual <code>Map</code>, but hide the implementation behind a smart constructor that took a <code>Player -&gt; Point</code> function to initialize it for all possible keys (it would correspond to the <a href=\"http://hackage.haskell.org/package/adjunctions-4.4/docs/Data-Functor-Rep.html\" rel=\"nofollow noreferrer\"><code>tabulate</code></a> method of <code>Representable</code>).</p>\n\n<p>The user should not be able to delete keys from the map. But we could piggyback on the <a href=\"http://hackage.haskell.org/package/lens-4.17.1/docs/Control-Lens-At.html#t:Ixed\" rel=\"nofollow noreferrer\"><code>Ixed</code></a> instance of <code>Map</code> to provide traversals.</p>\n\n<pre><code>import Control.Lens\nimport Data.Map.Strict -- from \"containers\"\n\nnewtype PointsData = PointsData { getPoints :: Map Player Point } \n\ninit :: (Player -&gt; Point) -&gt; PointsData\ninit f = PointsData (Data.Map.Strict.fromList ((\\p -&gt; (p, f p)) &lt;$&gt; [minBound..maxBound]))\n\n\nplayerPoints :: Player -&gt; Lens' PointsData Point\nplayerPoints pl = Control.Lens.singular (iso getPoints PointsData . ix pl)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": true, "score": 1, "last_activity_date": 1559869115, "last_edit_date": 1559869115, "creation_date": 1559847197, "answer_id": 56483494, "question_id": 56468091, "link": "https://stackoverflow.com/questions/56468091/a-lens-for-getting-or-setting-a-record-field-determined-by-a-runtime-argument/56483494#56483494", "title": "A lens for getting or setting a record field determined by a runtime argument", "body": "<p>Based on the <a href=\"https://stackoverflow.com/a/56468368/2751851\">answer from <em>Fyodor Soikin</em></a> and comment from <em>duplode</em>, I ended up using <code>makeLenses</code> from <em>lens</em> and writing a function that returns the appropriate lens:</p>\n\n<pre><code>data PointsData =\n  PointsData { _pointsToPlayerOne :: Point, _pointsToPlayerTwo :: Point }\n  deriving (Eq, Show, Read)\nmakeLenses ''PointsData\n\nplayerPoint :: Player -&gt; Lens' PointsData Point\nplayerPoint PlayerOne = pointsToPlayerOne\nplayerPoint PlayerTwo = pointsToPlayerTwo\n</code></pre>\n\n<p>It can be used like this fragment of a bigger function:</p>\n\n<pre><code>score :: Score -&gt; Player -&gt; Score\n-- ..\nscore (Points pd) winner = Points $ pd &amp; playerPoint winner %~ succ\n-- ..\n</code></pre>\n"}], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 153, "favorite_count": 1, "accepted_answer_id": 56483494, "answer_count": 3, "score": 2, "last_activity_date": 1559869115, "creation_date": 1559769158, "question_id": 56468091, "link": "https://stackoverflow.com/questions/56468091/a-lens-for-getting-or-setting-a-record-field-determined-by-a-runtime-argument", "title": "A lens for getting or setting a record field determined by a runtime argument", "body": "<p>I have these types (and more):</p>\n\n<pre><code>data Player = PlayerOne | PlayerTwo deriving (Eq, Show, Read, Enum, Bounded)\n\ndata Point = Love | Fifteen | Thirty deriving (Eq, Show, Read, Enum, Bounded)\n\ndata PointsData =\n  PointsData { pointsToPlayerOne :: Point, pointsToPlayerTwo :: Point }\n  deriving (Eq, Show, Read)\n</code></pre>\n\n<p>I'm doing the <a href=\"http://codingdojo.org/kata/Tennis\" rel=\"nofollow noreferrer\">Tennis kata</a>, and as part of the implementation, I'd like to use some functions that enable me to get or set the points for an arbitrary player, only known at runtime.</p>\n\n<p>Formally, I need functions like these:</p>\n\n<pre><code>pointFor :: PointsData -&gt; Player -&gt; Point\npointFor pd PlayerOne = pointsToPlayerOne pd\npointFor pd PlayerTwo = pointsToPlayerTwo pd\n\npointTo :: PointsData -&gt; Player -&gt; Point -&gt; PointsData\npointTo pd PlayerOne p = pd { pointsToPlayerOne = p }\npointTo pd PlayerTwo p = pd { pointsToPlayerTwo = p }\n</code></pre>\n\n<p>As demonstrated, my problem isn't that I can't implement these functions.</p>\n\n<p>They do, however, look <em>lens-like</em> to me, so I wonder if I could get that functionality via the <code>lens</code> library?</p>\n\n<p>Most of the lens tutorials show how to get or set a particular, named part of a bigger data structure. This doesn't quite seem to fit what I'm trying to do here; rather, I'm trying to get or set a sub-part determined at runtime.</p>\n"}, {"tags": ["haskell", "literate-programming"], "answers": [{"tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": false, "score": 0, "last_activity_date": 1559763277, "last_edit_date": 1559763277, "creation_date": 1559762238, "answer_id": 56466719, "question_id": 56465598, "link": "https://stackoverflow.com/questions/56465598/problem-with-spec-block-in-literate-haskell-file/56466719#56466719", "title": "Problem with spec block in literate haskell file", "body": "<p>The following answer is based on speculation. If you would provide an <a href=\"https://stackoverflow.com/help/minimal-reproducible-example\">MCVE</a>\u2014a short <code>.lhs</code> file that clearly demonstrates the issue\u2014perhaps a better answer could emerge.</p>\n\n<p>I think the issue is that <code>lhs2TeX</code> is not meant for C code. It gets confused by the <code>spec</code> block, thinks that it is Haskell code, and outputs problematic TeX commands. In fact, I can't even get your posted code past <code>pdflatex</code>\u2014the <code>.tex</code> is that broken. You can use a different mechanism to output C code. The <a href=\"https://ctan.org/pkg/minted\" rel=\"nofollow noreferrer\"><code>minted</code></a> package should do.</p>\n\n<pre class=\"lang-latex prettyprint-override\"><code>\\documentclass{article}\n%include lhs2TeX.fmt\n\\usepackage{minted}\n\n\\setlength{\\parindent}{0pt}\n\n\\begin{document}\nSome C code:\n\n\\begin{minted}{c}\ndouble co(double x, int n){\n  double a = 1;\n  double b = -1 * x * x / 2;\n  double c = 12;\n  double d = 18;\n\n  for(; n &gt; 0; n--){\n    a = a + b;\n    b = b * (-1 * x * x) / c;\n    c = c + d;\n    d = 8 + d;\n  }\n  return a;\n}\n\\end{minted}\n\nIt can be directly translated into Haskell:\n\n\\begin{code}\nco :: Double -&gt; Int -&gt; Double\nco x = worker 1 (-1 * x * x / 2) 12 18\n  where worker a _ _ _ 0 = a\n        worker a b c d n = worker (a + b) (b * (-1 * x * x) / c) (c + d) (8 + d) (n - 1)\n\\end{code}\n\nAs you can see, \\textit{Haskell} code passes through just fine.\n\\end{document}\n</code></pre>\n\n<p>PS: The weird <code>for</code>-loop can be written <code>while(n-- &gt; 0) { ... }</code>, no?</p>\n"}], "owner": {"reputation": 167, "user_id": 7927309, "user_type": "registered", "profile_image": "https://graph.facebook.com/1378053178938566/picture?type=large", "display_name": "Pedro Fernandes", "link": "https://stackoverflow.com/users/7927309/pedro-fernandes"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 40, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1559763277, "creation_date": 1559756888, "question_id": 56465598, "link": "https://stackoverflow.com/questions/56465598/problem-with-spec-block-in-literate-haskell-file", "title": "Problem with spec block in literate haskell file", "body": "<p>I have this block of code on my literate haskell file</p>\n\n<pre><code>\\end{code}\n\n\n\\paragraph{Valoriza\u00e7\u00e3o}\n\nCodigo em C\n\n\\begin{spec}\ndouble co(double x, int n){\n  double a = 1;\n  double b = -1 * x * x / 2;\n  double c = 12;\n  double d = 18;\n\n  for(; n &gt; 0; n--){\n    a = a + b;\n    b = b * (-1 * x * x) / c;\n    c = c + d;\n    d = 8 + d;\n  }\n  return a;\n}\n\\end{spec}\n\n\n\\subsection*{Problema 4}\n</code></pre>\n\n<p>What's happening is, when using lhs2tex and the pdflatex, what's inside the spec block is being completely ignored, and everything after it is forward, like it has a tab before it... Maybe this is something common? I'm not used to this... First time using it</p>\n\n<p>By the way, if I remove the spec block everything else is formatted correctly</p>\n"}, {"tags": ["haskell", "conduit"], "comments": [{"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 3, "creation_date": 1559734719, "post_id": 56459496, "comment_id": 99510892, "body": "Hint: Don&#39;t just tell us you got a type error. Report the type error. In the above section, not the comments section please."}, {"owner": {"reputation": 371, "user_id": 156884, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/3a7abd71c411501b7c3631fe50e5e238?s=128&d=identicon&r=PG", "display_name": "ngmir", "link": "https://stackoverflow.com/users/156884/ngmir"}, "reply_to_user": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 0, "creation_date": 1559738885, "post_id": 56459496, "comment_id": 99513009, "body": "Of course. I edited the post."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1559752149, "post_id": 56459496, "comment_id": 99520675, "body": "I&#39;m not sure, but try instead <code>runConduitRes $ (lineC $ ...) .| ...</code>. Otherwise, you are passing two arguments to <code>runConduitRes</code>, the first one being the function <code>lineC</code>."}, {"owner": {"reputation": 371, "user_id": 156884, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/3a7abd71c411501b7c3631fe50e5e238?s=128&d=identicon&r=PG", "display_name": "ngmir", "link": "https://stackoverflow.com/users/156884/ngmir"}, "edited": false, "score": 0, "creation_date": 1559752739, "post_id": 56459496, "comment_id": 99520968, "body": "thanks, that seems reasonable but does not quite solve my problem yet. I have edited my post."}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 1, "creation_date": 1559760471, "post_id": 56459496, "comment_id": 99524058, "body": "@ngmir In your edited example, you have <code>runConduitRes (lineC $ sourceFileBS &quot;input.txt&quot;)  .| sinkFile &quot;output.txt&quot;</code>. I think you might be missing a <code>$</code> after <code>runConduitRes</code>: otherwise you are trying to run <code>(lineC $ sourceFileBS &quot;input.txt&quot;)</code> instead of the whole pipeline."}], "answers": [{"tags": [], "owner": {"reputation": 159, "user_id": 5600030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a0051089f2030eed653f3c8a2587719?s=128&d=identicon&r=PG", "display_name": "NateV", "link": "https://stackoverflow.com/users/5600030/natev"}, "is_accepted": false, "score": 0, "last_activity_date": 1619034236, "last_edit_date": 1619034236, "creation_date": 1619032337, "answer_id": 67202121, "question_id": 56459496, "link": "https://stackoverflow.com/questions/56459496/haskell-conduit-read-file-line-by-line/67202121#67202121", "title": "Haskell / Conduit: read file line by line", "body": "<p>I was struggling with this today, and found this question while trying to figure out a similar problem. I was trying to break git logs into chunks for further parsing, like</p>\n<pre><code>commit 12345\nAuthor: Me\nDate:   Thu Jan 25 13:45:16 2019 -0500\n\n    made some changes\n\n 1 file changed, 10 insertions(+), 0 deletions(-)\n\ncommit 54321\nAuthor: Me\n...and so on...\n</code></pre>\n<p>The function I needed is almost <code>splitOnUnBounded</code> from <a href=\"https://hackage.haskell.org/package/conduit-1.3.4.1/docs/Data-Conduit-Combinators.html#g:13\" rel=\"nofollow noreferrer\">Data.Conduit.Combinators</a>, but I couldn't quite figure out how to write the predicate function there.</p>\n<p>I came up with the following <code>Conduit</code> that is a slight modification of <code>splitOnUnbounded</code>. <a href=\"https://hackage.haskell.org/package/conduit-1.3.4.1/docs/src/Data.Conduit.Combinators.html#splitOnUnboundedE\" rel=\"nofollow noreferrer\">source</a> It will take a stream of lists. There is one line of text per list, as I find it a bit easier to think about that way, though this is surely not an optimal solution.</p>\n<p>It will group the lines of text together using a function that takes the <em>next</em> line and returns a <code>Bool</code> indicating if the next line is the start of the next group of text.</p>\n<pre class=\"lang-hs prettyprint-override\"><code>\ngroupLines :: (Monad m, MonadIO m) =&gt; (Text -&gt; Bool) -&gt; [T.Text] -&gt; ConduitM Text [Text] m ()\ngroupLines startNextLine ls = start\n  where\n    -- If the next line in the stream is Nothing, return.\n    -- If the next line is the stream is Just line, then\n    --   accumulate that line\n    start = await &gt;&gt;= maybe (return ()) (accumulateLines ls)\n    accumulateLines ls nextLine = do\n      -- if ls is [], then add nextLine. Try to get a new next line. If there isn't one, yield. If there is a next line,\n      --     yield lines and call accumulatelines again.\n      -- if ls is [Text], check if nextLine is the start of the next group. If it isn't, add nextLine to ls,\n      --    try got the the next nextLine. if there isn't one, yield, and if there is one, call accumulate lines again.\n      --    If nextLine _is_ the start of the next group, the yield this group of lines and call accumulate lines again.\n      nextLine' &lt;- await\n      case nextLine' of\n        Nothing -&gt; yield ls'\n        Just l -&gt;\n          if Prelude.null ls\n            then accumulateLines ls' l\n            else\n              if startNextLine l\n                then yield ls' &gt;&gt; accumulateLines [] l\n                else accumulateLines ls' l\n      where\n        ls' = ls ++ [nextLine]\n\n</code></pre>\n<p>It can be used in a conduit like the following. Just pass the function above a <code>Text -&gt; Bool</code> function that tells the conduit when the next collection of text should start.</p>\n<pre class=\"lang-hs prettyprint-override\"><code>\nisCommitLine :: Text -&gt; Bool\nisCommitLine t = listToMaybe (TS.indices &quot;commit&quot; t) == Just 0\n\nlogParser =\n  sourceFile &quot;logs.txt&quot;\n    .| decodeUtf8\n    .| linesUnbounded\n    .| groupLines isCommitLine []\n    .| Data.Conduit.Combinators.map (intercalate &quot;\\n&quot;)\n    -- do something with each log entry here --\n    .| Data.Conduit.Combinators.print\n\nmain :: IO ()\nmain = runConduitRes logParser\n\n</code></pre>\n<p>I'm new to Haskell, and strongly suspect this isn't the best way to accomplish this. So if others have better suggestions, I'll be happy to learn! Otherwise, maybe posting this solution here will help somebody down the line.</p>\n"}], "owner": {"reputation": 371, "user_id": 156884, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/3a7abd71c411501b7c3631fe50e5e238?s=128&d=identicon&r=PG", "display_name": "ngmir", "link": "https://stackoverflow.com/users/156884/ngmir"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 242, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1619034236, "creation_date": 1559733696, "last_edit_date": 1559752719, "question_id": 56459496, "link": "https://stackoverflow.com/questions/56459496/haskell-conduit-read-file-line-by-line", "title": "Haskell / Conduit: read file line by line", "body": "<p><strong>Scenario</strong>: I have a ~900mb text file that is formatted as follows</p>\n\n<pre><code>...\nId:   109101\nASIN: 0806978473\n  title: The Beginner's Guide to Tai Chi\n  group: Book\n  salesrank: 672264\n  similar: 0\n  categories: 3\n   |Books[283155]|Subjects[1000]|Sports[26]|Individual Sports[16533]|Martial Arts[16571]|General[16575]\n   |Books[283155]|Subjects[1000]|Sports[26]|Individual Sports[16533]|Martial Arts[16571]|Taichi[16583]\n   |Books[283155]|Subjects[1000]|Sports[26]|General[11086921]\n  reviews: total: 2  downloaded: 2  avg rating: 5\n    2000-4-4  cutomer: A191SV1V1MK490  rating: 5  votes:   0  helpful:   0\n    2004-7-10  cutomer:  AVXBUEPNVLZVC  rating: 5  votes:   0  helpful:   0\n                    (----- empty line ------)    \nId :\n</code></pre>\n\n<p>and want to parse the information from it.</p>\n\n<p><strong>Problem</strong>: As a first step (and because I need it for another context) I want to process the file line by line and then collect the \"chunks\" belonging to one product together and then process them seperately with other logic.</p>\n\n<p>So the plan is the following:</p>\n\n<ol>\n<li>Define a source that represents the text file</li>\n<li>Define a conduit (?) that takes one line each from that source and...</li>\n<li>... passes it to some other components.</li>\n</ol>\n\n<p>Now, I am trying to adapt the following example:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>doStuff = do\n  writeFile \"input.txt\" \"This is a \\n test.\" -- Filepath -&gt; String -&gt; IO ()\n\n  runConduitRes                  -- m r\n    $ sourceFileBS \"input.txt\"   -- ConduitT i ByteString m ()  -- by \"chunk\"\n    .| sinkFile \"output.txt\"     -- FilePath -&gt; ConduitT ByteString o m ()\n\n  readFile \"output.txt\"\n    &gt;&gt;= putStrLn \n</code></pre>\n\n<p>So <code>sourceFileBS \"input.txt\"</code> is of type <code>ConduitT i ByteString m ()</code>, that is, a conduit with</p>\n\n<ul>\n<li>input type <code>i</code></li>\n<li>output type <code>ByteStream</code></li>\n<li>monad type <code>t</code></li>\n<li>result type <code>()</code>.</li>\n</ul>\n\n<p><code>sinkFile</code> streams all incoming data into the given file. <code>sinkFile \"output.txt\"</code> is a conduit with input type <code>ByteStream</code>.</p>\n\n<p>What I want now is to process the input source line-by-line, that is, pass on only one line each downstream. In pseudocode:</p>\n\n<pre><code>sourceFile \"input.txt\"\nsplitIntoLines\nyieldMany (?)\nother stuff\n</code></pre>\n\n<p>How do I do that?</p>\n\n<p>What I currently have is</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>copyFile = do\n  writeFile \"input.txt\" \"This is a \\n test.\" -- Filepath -&gt; String -&gt; IO ()\n\n  runConduitRes                  -- m r\n    (lineC $ sourceFileBS \"input.txt\")   -- ConduitT i ByteString m ()  -- by \"chunk\"\n    .| sinkFile \"output.txt\"     -- FilePath -&gt; ConduitT ByteString o m ()\n\n  readFile \"output.txt\"\n    &gt;&gt;= putStrLn --\n</code></pre>\n\n<p>but that gives the following type error:</p>\n\n<pre><code>    * Couldn't match type `bytestring-0.10.8.2:Data.ByteString.Internal.ByteString'\n                     with `Void'\n      Expected type: ConduitT\n                       ()\n                       Void\n                       (ResourceT\n                          (ConduitT\n                             a0 bytestring-0.10.8.2:Data.ByteString.Internal.ByteString m0))\n                       ()\n        Actual type: ConduitT\n                       ()\n                       bytestring-0.10.8.2:Data.ByteString.Internal.ByteString\n                       (ResourceT\n                          (ConduitT\n                             a0 bytestring-0.10.8.2:Data.ByteString.Internal.ByteString m0))\n                       ()\n    * In the first argument of `runConduitRes', namely\n        `(lineC $ sourceFileBS \"input.txt\")'\n      In the first argument of `(.|)', namely\n        `runConduitRes (lineC $ sourceFileBS \"input.txt\")'\n      In a stmt of a 'do' block:\n        runConduitRes (lineC $ sourceFileBS \"input.txt\")\n          .| sinkFile \"output.txt\"\n   |\n28 |     (lineC $ sourceFileBS \"input.txt\")   -- ConduitT i ByteString m ()  -- by \"chunk\"\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>This makes me believe that the problem now is that the first conduit in line does not have an input type compatible with <code>runConduitRes</code>.</p>\n\n<p>I just cant make sense of it and really need a hint.</p>\n\n<p>Thanks a lot in advance.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 7, "creation_date": 1559730054, "post_id": 56458559, "comment_id": 99508846, "body": "You can not enforce that directly in the type system. You could use <code>data LowerChar = LowerChar Char</code> and then keep the constructor private to the module, exporting only a &quot;smart constructor&quot; which does the check."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 3, "creation_date": 1559730231, "post_id": 56458559, "comment_id": 99508927, "body": "This could be done with Liquid Haskell, but in base Haskell this isn&#39;t possible."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1559731906, "post_id": 56458559, "comment_id": 99509637, "body": "You could technically speaking define a sequence of <code>Lowercase = La | Lb | Lc | ...</code>, but it probably more effective to add smart constructors to the <code>LowerChar</code>, and furthermore you can use <a href=\"https://github.com/ucsd-progsys/liquidhaskell\" rel=\"nofollow noreferrer\">LiquidHaskell</a> to define a subset, and proof code contracts."}], "answers": [{"tags": [], "owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "is_accepted": true, "score": 10, "last_activity_date": 1559731921, "creation_date": 1559731921, "answer_id": 56459039, "question_id": 56458559, "link": "https://stackoverflow.com/questions/56458559/data-type-for-only-lowercase-chars/56459039#56459039", "title": "Data type for only lowercase chars", "body": "<p>Since there are only 26 characters in that interval, you can represent your type as a finite type of 26 values, using e.g. <a href=\"https://hackage.haskell.org/package/finite-typelits-0.1.4.2/docs/Data-Finite.html\" rel=\"noreferrer\"><code>Data.Finite</code></a>:</p>\n\n<pre><code>{-# LANGUAGE DataKinds #-}\nimport Data.Finite\nimport Data.Char\n\nnewtype Letter = Letter{ getLetterIndex :: Finite 26 }\n\ntoLowerChar :: Letter -&gt; Char\ntoLowerChar = chr . (+ ord 'a') . fromIntegral . getFinite . getLetterIndex\n\nfromLowerChar :: Char -&gt; Maybe Letter\nfromLowerChar = fmap Letter . packFinite . fromIntegral . subtract (ord 'a') . ord\n</code></pre>\n\n<p>Of course, you can interpret the same type into uppercase letters as well if you want to.</p>\n"}], "owner": {"reputation": 446, "user_id": 4332507, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/yKcgD.jpg?s=128&g=1", "display_name": "HYBR1D", "link": "https://stackoverflow.com/users/4332507/hybr1d"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 142, "favorite_count": 0, "accepted_answer_id": 56459039, "answer_count": 1, "score": 4, "last_activity_date": 1559731921, "creation_date": 1559729876, "question_id": 56458559, "link": "https://stackoverflow.com/questions/56458559/data-type-for-only-lowercase-chars", "title": "Data type for only lowercase chars", "body": "<p>I'm trying to make a data type in Haskell that will only match lowercase chars, but not uppercase chars. I'm looking for something like this:</p>\n\n<pre><code>data LowerChar = [a..z]\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1559729345, "post_id": 56458331, "comment_id": 99508526, "body": "In that case, you can write this as <code>data Identifier = Identifier Num [Either   Char Num]</code>. So here the start item is a separate field. An identifier however usually starts with a <code>Char</code>, not with a <code>Num</code>."}, {"owner": {"reputation": 446, "user_id": 4332507, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/yKcgD.jpg?s=128&g=1", "display_name": "HYBR1D", "link": "https://stackoverflow.com/users/4332507/hybr1d"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1559729388, "post_id": 56458331, "comment_id": 99508542, "body": "We&#39;re making a weird embedded language for college. Would this also work if the number is part of the list?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1559730057, "post_id": 56458331, "comment_id": 99508849, "body": "no, since the elements of a list all have the same type. Haskell does not treat a list special: if you write <code>[a]</code>, you write <code>[] a</code>, with <code>[]</code> a type constructor. So in fact the compiler does not (have) to understand the concepts of lists at all. By using a field however, you make your data type &quot;stronger&quot;, since (a) it is impossible to define an empty identifier, and (b) you enforce that the first item is a list. You can then make some functions that do the parsing and rendering of the <code>Identifier</code>."}], "answers": [{"comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1559753751, "post_id": 56458691, "comment_id": 99521342, "body": "List <i>syntax</i>, though, is special. The language allows the otherwise invalid &quot;name&quot; <code>[]</code> to be used as the type constructor and the data constructor for the empty list, and additionally allows <code>[x,y,z]</code> as syntactic sugar for <code>x : y : z : []</code>."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1559754270, "post_id": 56458691, "comment_id": 99521576, "body": "@chepner: yes, but what I mean here is that a Haskell compiler should not need to treat the list <i>type</i> differenty. But you are indeed correct that there is some syntactical sugar and ond syntax for lists."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 4, "last_activity_date": 1559754271, "last_edit_date": 1559754271, "creation_date": 1559730439, "answer_id": 56458691, "question_id": 56458331, "link": "https://stackoverflow.com/questions/56458331/list-data-type-that-starts-with-digit/56458691#56458691", "title": "List data type that starts with digit", "body": "<p>In Haskell a list is not a \"special\" type. In fact one could define it like:</p>\n\n<pre><code>data List a = Empty | Cons a (List a)\n</code></pre>\n\n<p>So that means that the compiler does not <em>have</em> to understand what a list is, and how a list works. For Haskell <code>[a]</code> is just another representation of <code>[] a</code>, and it simply sees the type constructor for a list. This thus means that for the compiler <code>[a : b]</code> as type is non-sensical, since <code>(:)</code> is <em>not</em> a type constructor, it is a <em>data constructor</em>.</p>\n\n<p>You could model this with the first character as a separate parameter, like:</p>\n\n<pre><code>data Identifier = Identifier <b>Int</b> [Either Int Char]</code></pre>\n\n<p>You can then for example textually represent your <code>Identifier</code>, with:</p>\n\n<pre><code>import Data.Char(intToDigit)\n\nclass Render a where\n    render :: a -&gt; String\n\ninstance Render Identifier where\n    print (Identifier n ns) = intToDigit n : map iprint ns\n        where iprint (Left a) = intToDigit a\n              iprint (Right b) = b\n</code></pre>\n\n<p>Here our <code>Identifier</code> data type thus excludes two cases:</p>\n\n<ol>\n<li>an \"empty\" identifier (with no characters at all); and</li>\n<li>an identifier that starts with a <code>Char</code>.</li>\n</ol>\n\n<p>You might want to define a <code>Digit</code> type and <code>Lower</code> type as well, that act like subsets of <code>Int</code> and <code>Char</code> respectively to further restrict the possible values in your type, since right now the <code>Int</code> can have values outside the <code>[0..9]</code> range, and <code>Char</code> can have any character.</p>\n\n<p>You can also write functions to parse a string into an <code>Identifier</code>. In fact, by properly \"engineering\" the data types, you can exclude a lot of values that should be impossible, and thus the compiler can help you ensure that your functions do <em>not</em> return values that should be considered invalid.</p>\n\n<p>The above technique is used in some libraries in Haskell as well. The <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-List-NonEmpty.html\" rel=\"nofollow noreferrer\"><strong><code>Data.List.NonEmpty</code></strong></a> module for example defines a <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.Base.html#NonEmpty\" rel=\"nofollow noreferrer\">data constructor <code>(:|)</code></a>:</p>\n\n<blockquote>\n<pre><code>data NonEmpty a = a :| [a]\n</code></pre>\n</blockquote>\n\n<p>So here one defines a <code>NonEmpty</code> list again with a constructor that enforces that the a <code>NonEmpty</code> has an element, and a (possibly empty) list of remaining elements.</p>\n"}], "owner": {"reputation": 446, "user_id": 4332507, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/yKcgD.jpg?s=128&g=1", "display_name": "HYBR1D", "link": "https://stackoverflow.com/users/4332507/hybr1d"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 69, "favorite_count": 0, "accepted_answer_id": 56458691, "answer_count": 1, "score": 1, "last_activity_date": 1559754271, "creation_date": 1559728949, "last_edit_date": 1559729489, "question_id": 56458331, "link": "https://stackoverflow.com/questions/56458331/list-data-type-that-starts-with-digit", "title": "List data type that starts with digit", "body": "<pre><code>data Identifier = Identifier [Num:(Char|Num)]\n</code></pre>\n\n<p>I'm trying to do something like the code above in Haskell. I want to make a data type for a list that has to start with a digit, but can contain either lowercase characters or digits in it's tail.</p>\n"}, {"tags": ["haskell", "syntax", "monads", "let", "do-notation"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1559723177, "post_id": 56456712, "comment_id": 99505501, "body": "<code>main = do { a &lt;- getLine ; let { b = &quot;Hello &quot; ++ a} ; putStrLn b }</code> works fine."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1559723429, "post_id": 56456712, "comment_id": 99505620, "body": "I think that&#39;s parsed as <code>do { a &lt;- getLine ; let {b = &quot;Hello &quot; ++ a ; putStrLn b} }</code> if you don&#39;t put braces. After all, <code>do { a &lt;- getLine ; let {b = &quot;Hello &quot; ++ a ; putStrLn b = ()} ; print 3 }</code> would be legal code."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 4, "last_activity_date": 1559724793, "last_edit_date": 1559724793, "creation_date": 1559723707, "answer_id": 56456897, "question_id": 56456712, "link": "https://stackoverflow.com/questions/56456712/has-the-ability-to-use-let-statements-in-do-blocks-been-removed-in-ghc-8-6-5/56456897#56456897", "title": "Has the ability to use let statements in do blocks been removed in GHC 8.6.5?", "body": "<p>The problem is here that it parses your <code>putStrLn b</code> as a <code>let</code> declaration as well, so it parses it basically as:</p>\n\n<pre><code>do { a &lt;- getLine; let <b>{ b = \"Hello \" ++ a ; putStrLn b }</b> }</code></pre>\n\n<p>It thus is looking for a <code>=</code> in the <code>putStrLn</code> part, where you will define the <code>putStrLn</code> function. The parser thus has the \"idea\" that you are defining a function, not calling a function.</p>\n\n<p>Indeed, we can write for example:</p>\n\n<pre><code>Prelude&gt; let a = 3; f b = b + 1\nPrelude&gt; f a\n4\n</code></pre>\n\n<p>so here we declared two variables in the same line.</p>\n\n<p>You can use curly brackets to make clear that the <code>let</code> is scoped to only <code>b</code>, like:</p>\n\n<pre><code>do { a &lt;- getLine; let <b>{ b = \"Hello \" ++ a }</b>; putStrLn b }</code></pre>\n\n<p>The priority of <code>let</code> is due to the grammar, defined in <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch3.html\" rel=\"nofollow noreferrer\">Chapter 3: <em>Expressions</em> in the <em>Haskell'10 report</em></a>.</p>\n"}, {"tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": true, "score": 7, "last_activity_date": 1559724150, "creation_date": 1559724150, "answer_id": 56457023, "question_id": 56456712, "link": "https://stackoverflow.com/questions/56456712/has-the-ability-to-use-let-statements-in-do-blocks-been-removed-in-ghc-8-6-5/56457023#56457023", "title": "Has the ability to use let statements in do blocks been removed in GHC 8.6.5?", "body": "<p><code>let</code> is a layout keyword like <code>do</code>, both as a statement in a <code>do</code> block and in a <code>let</code>\u2026<code>in</code>\u2026 expression, because it introduces a <em>block</em> of bindings. This:</p>\n\n<pre><code>main = do\n  a &lt;- getLine\n  let b = \"Hello \" ++ a\n  putStrLn b\n</code></pre>\n\n<p>Desugars to this:</p>\n\n<pre><code>main = do {\n  a &lt;- getLine;\n  let {\n    b = \"Hello \" ++ a;\n  };\n  putStrLn b;\n};\n</code></pre>\n\n<p>Whereas what you\u2019ve written is equivalent to this:</p>\n\n<pre><code>main = do {\n  a &lt;- getLine;\n  let {\n    b = \"Hello \" ++ a;\n    putStrLn b\n  };\n};\n</code></pre>\n\n<p>So naturally GHC is expecting something else\u2014a pattern or <code>=</code>\u2014after <code>putStrLn b</code>, since you <em>could</em> be defining a local function named <code>putStrLn</code> with a parameter named <code>b</code>. The solution is either to use explicit braces in the <code>let</code> statement:</p>\n\n<pre><code>main = do { a &lt;- getLine; let { b = \"Hello \" ++ a }; putStrLn b }\n</code></pre>\n\n<p>Or to use multiline mode in GHCi, either with the <code>:{</code> command, terminated with the <code>:}</code> command:</p>\n\n<pre><code>&gt; :{\n| main = do\n|   a &lt;- getLine\n|   let b = \"Hello \" ++ a\n|   putStrLn b\n| :}\n&gt;\n</code></pre>\n\n<p>Or with <code>:set +m</code>, and terminated with a blank line:</p>\n\n<pre><code>&gt; :set +m\n| main = do\n|   a &lt;- getLine\n|   let b = \"Hello \" ++ a\n|   putStrLn b\n|\n&gt;\n</code></pre>\n\n<p>Followed by <code>:unset +m</code> to return to single-line mode.</p>\n"}], "owner": {"reputation": 1474, "user_id": 8025936, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/Kue08.png?s=128&g=1", "display_name": "schuelermine", "link": "https://stackoverflow.com/users/8025936/schuelermine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 0, "accepted_answer_id": 56457023, "answer_count": 2, "score": 2, "last_activity_date": 1559729178, "creation_date": 1559722997, "last_edit_date": 1559729178, "question_id": 56456712, "link": "https://stackoverflow.com/questions/56456712/has-the-ability-to-use-let-statements-in-do-blocks-been-removed-in-ghc-8-6-5", "title": "Has the ability to use let statements in do blocks been removed in GHC 8.6.5?", "body": "<p>I have entered some code in <code>ghci</code>, similar to this:</p>\n\n<pre><code>main = do { a &lt;- getLine ; let b = \"Hello \" ++ a ; putStrLn b }\n</code></pre>\n\n<p>However, I get this error:</p>\n\n<pre><code>&lt;interactive&gt;:1:63: error: parse error on input `}'\n</code></pre>\n\n<p>In previous versions of Haskell/GHC, I remember this working just fine - it was even explicitly said that, in <code>do</code> blocks, you don't need the <code>in</code> keyword. Yet, the only way to get this to work seems to be:</p>\n\n<pre><code>main = do { a &lt;- getLine ; let b = \"Hello \" ++ a in putStrLn b }\n</code></pre>\n\n<p>which doesn't produce this error.</p>\n\n<p>Has this been removed? If so, do I need a second <code>do</code> block inside the <code>let in</code> expression?</p>\n"}, {"tags": ["haskell", "category-theory", "recursive-datastructures", "fixpoint-combinators"], "answers": [{"comments": [{"owner": {"reputation": 2588, "user_id": 916142, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/cf88a560a7f987712350b7d629ed2bc7?s=128&d=identicon&r=PG", "display_name": "Jeffrey Benjamin Brown", "link": "https://stackoverflow.com/users/916142/jeffrey-benjamin-brown"}, "edited": false, "score": 0, "creation_date": 1559867992, "post_id": 56454030, "comment_id": 99563129, "body": "My example was bad -- in fact the recursive <code>Expr</code> data type I&#39;m working with is not a <code>Functor</code> (although now I wonder whether it should be). Therefore your excellent last solution does not apply. Instead I went with something like your second suggestion: I define <code>newtype ExprFWith b a = EFW (b, ExprF a)</code> where <code>ExprF</code> is the <code>Base</code> <code>Functor</code> of <code>Expr</code>, and then use <code>Fix (ExprFWith x)</code> to attach an <code>x</code> at every level of an <code>Expr</code>."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 2588, "user_id": 916142, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/cf88a560a7f987712350b7d629ed2bc7?s=128&d=identicon&r=PG", "display_name": "Jeffrey Benjamin Brown", "link": "https://stackoverflow.com/users/916142/jeffrey-benjamin-brown"}, "edited": false, "score": 0, "creation_date": 1559869215, "post_id": 56454030, "comment_id": 99563308, "body": "@JeffreyBenjaminBrown If you choose that route -- that is, making a modifier for your base functor rather than a modified <code>Fix</code> -- then I do recommend <code>type ExprFWith b = Compose ((,) b)</code> instead. No need to reinvent the wheel!"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 6, "last_activity_date": 1559706738, "creation_date": 1559706738, "answer_id": 56454030, "question_id": 56453996, "link": "https://stackoverflow.com/questions/56453996/attach-extra-information-at-every-level-of-a-recursive-data-type/56454030#56454030", "title": "Attach extra information at every level of a recursive data type?", "body": "<p>You could use</p>\n\n<pre><code>Fix (Compose Wrap (TreeF Int))\n</code></pre>\n\n<p>but I probably wouldn't. If you definitely want to go the open recursion route, making your own variant of <code>Fix</code> is probably sanest:</p>\n\n<pre><code>data WrapData = X | Y\ndata LabeledFix a f = Labeled a (f (LabeledFix a f))\n-- ... and then use LabeledFix WrapData (TreeF Int)\n</code></pre>\n\n<p>But even saner still is to just use plain old closed recursion. You don't even have to make your type any more special than it already was; just:</p>\n\n<pre><code>data Tree a = Leaf a | Branch a (Tree a) (Tree a)\n-- ... and then use Tree (WrapData, Int)\n</code></pre>\n"}], "owner": {"reputation": 2588, "user_id": 916142, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/cf88a560a7f987712350b7d629ed2bc7?s=128&d=identicon&r=PG", "display_name": "Jeffrey Benjamin Brown", "link": "https://stackoverflow.com/users/916142/jeffrey-benjamin-brown"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 0, "accepted_answer_id": 56454030, "answer_count": 1, "score": 1, "last_activity_date": 1562456944, "creation_date": 1559706301, "last_edit_date": 1562456944, "question_id": 56453996, "link": "https://stackoverflow.com/questions/56453996/attach-extra-information-at-every-level-of-a-recursive-data-type", "title": "Attach extra information at every level of a recursive data type?", "body": "<p>(This is not specifically a Haskell question.)</p>\n\n<p>I have a recursive data structure. I would like to attach some kind of extra information at every level of it. Here's a simplified example, in which I'm adding either an <code>X</code> or a <code>Y</code> to every level of a tree:</p>\n\n<pre><code>import Data.Functor.Foldable\n\ndata Wrap a = X a | Y a\n  deriving Show\n\ndata TreeF a b = Leaf a | TreeF a b b\n  deriving Show\n\ndepth1 :: Wrap (TreeF Int ())\ndepth1 = X (Leaf 1)\n\ndepth2 :: Wrap (TreeF Int (Wrap (TreeF Int ())))\ndepth2 = Y (TreeF 1 (X $ Leaf 1) (Y $ Leaf 1))\n\n-- depthInfinity :: Fix something something ...\n</code></pre>\n\n<p>(The definition of <code>TreeF</code> is, to me, unnatural. I would prefer to define <code>data Tree a = Leaf a | Tree a (Tree a) (Tree a)</code>, but I can't figure out how to state my question if I do that. So instead I've written it in the form of a <code>Base</code> functor, ala <a href=\"http://hackage.haskell.org/package/recursion-schemes-5.1.2/docs/Data-Functor-Foldable.html\" rel=\"nofollow noreferrer\">Data.Functor.Foldable</a>.)</p>\n\n<p>The <code>Wrap</code> type can be used to attach the information <code>X</code> or <code>Y</code> to some kind of data. <code>depth1'</code> is a depth-1 <code>TreeF</code> in which the <code>Wrap</code> flag has been attached at every level (it's only got one level). <code>depth2</code> is a depth-2 <code>TreeF</code> in which, again, the <code>Wrap</code> flag has been attached at every level (it's got two levels).</p>\n\n<p>How can I create a \"Wrapped Tree\" of arbitrary depth? How should I write its type signature? Is there a category-theoretic term for this kind of data mashup?</p>\n"}, {"tags": ["haskell", "conduit"], "comments": [{"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 3, "creation_date": 1559704945, "post_id": 56452717, "comment_id": 99500383, "body": "You might find <a href=\"https://stackoverflow.com/a/55814664/7203016\">this answer</a> helpful.  The point of Conduit isn&#39;t to improve performance (and in fact lazy I/O will generally be faster)."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1559771808, "post_id": 56452717, "comment_id": 99528576, "body": "I have closed against the question suggested by @K.A.Buhr because the accepted answer there appears to fully address your question. Ping me if you feel that isn&#39;t the case."}], "owner": {"reputation": 117, "user_id": 11127765, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/71568a4586fd4c86cc3a92caf421a91d?s=128&d=identicon&r=PG&f=1", "display_name": "mennetorelli", "link": "https://stackoverflow.com/users/11127765/mennetorelli"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 54, "favorite_count": 0, "closed_date": 1559771635, "answer_count": 0, "score": 0, "last_activity_date": 1559692719, "creation_date": 1559692719, "question_id": 56452717, "link": "https://stackoverflow.com/questions/56452717/conduit-pipeline-performance", "closed_reason": "Duplicate", "title": "Conduit pipeline performance", "body": "<p>I have two versions of a Haskell program which counts the occurrences of each word inside a .txt file.</p>\n\n<p>The first one is:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>import Data.HashMap.Strict (empty, insertWith, toList)\nimport Data.Text (pack, toLower, filter, words)\nimport System.IO\n\nwordcount = withFile \"input.txt\" ReadMode $ \\handle -&gt; do\n    content &lt;- hGetContents handle\n    print $ toList $ foldr\n        (\\x v -&gt; insertWith (+) x 1 v) \n        empty \n        (fmap Data.Text.toLower \n            $ fmap (Data.Text.filter isAlphaNum)\n            $ (Data.Text.words . pack) content)\n</code></pre>\n\n<p>The second one exploits Conduit library:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>import Data.HashMap.Strict (empty, insertWith, toList)\nimport Data.Char (isAlphaNum, toLower)\nimport Conduit\nimport qualified Data.Conduit.Combinators as CC\n\nwordcountC = do \n    hashMap &lt;- runConduitRes $ sourceFile \"input.txt\"\n        .| decodeUtf8C\n        .| omapCE Data.Char.toLower\n        .| CC.splitOnUnboundedE (not . isAlphaNum)\n        .| foldMC insertInHashMap empty\n    print (toList hashMap)\n</code></pre>\n\n<p>Running each function several times with a large input file (approx. 80 MB), I measured that there isn't difference between the execution times of the two versions (approximately 13 seconds for both the \"standard\" version and the Conduit one). Shouldn't the second version benefit from Conduit's stream processing paradigm, therefore resulting in smaller execution time?</p>\n"}, {"tags": ["haskell", "interpreter"], "comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 4, "creation_date": 1559682357, "post_id": 56451223, "comment_id": 99496027, "body": "Sounds like you don&#39;t know how to read <code>data</code> declarations yet.  <a href=\"http://learnyouahaskell.com/making-our-own-types-and-typeclasses\" rel=\"nofollow noreferrer\">This</a> might help"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 3, "creation_date": 1559686750, "post_id": 56451223, "comment_id": 99497262, "body": "so it&#39;s not <i>Haskell</i> Mini-interpreter, it&#39;s <i>a</i> Mini-interpreter coded <i>in</i> Haskell."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1559700641, "post_id": 56451223, "comment_id": 99499714, "body": "@WillNess it has lambdas, so if you squint you could call it a mini Haskell mini interpreter (in haskell)"}, {"owner": {"reputation": 54864, "user_id": 404970, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/o6X94.jpg?s=128&g=1", "display_name": "molbdnilo", "link": "https://stackoverflow.com/users/404970/molbdnilo"}, "edited": false, "score": 1, "creation_date": 1559721539, "post_id": 56451223, "comment_id": 99504752, "body": "It looks like your professor is rushing ahead of you on the learning curve - by the time you implement an interpreter, you would normally have your students be pretty comfortable with type definitions. I would recommend that you review earlier materials."}], "answers": [{"tags": [], "owner": {"reputation": 100768, "user_id": 1899640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/47374ccb28e4b0d2454b64f7b975bc66?s=128&d=identicon&r=PG", "display_name": "that other guy", "link": "https://stackoverflow.com/users/1899640/that-other-guy"}, "is_accepted": true, "score": 3, "last_activity_date": 1559686219, "last_edit_date": 1559686219, "creation_date": 1559685508, "answer_id": 56451859, "question_id": 56451223, "link": "https://stackoverflow.com/questions/56451223/haskell-mini-interpreter/56451859#56451859", "title": "Haskell Mini-Interpreter", "body": "<p>There's a lot of questions in one here, and StackOverflow works better when you ask one specific question per post. Anyways, here's a start:</p>\n\n<blockquote>\n  <p><code>Lambda String Exp</code>, is it a String or an anonymous function</p>\n</blockquote>\n\n<p>It's a value with the non-special name \"Lambda\" that contains a <code>String</code> and an <code>Exp</code>. It's the equivalent of this Java class:</p>\n\n<pre><code>class Lambda extends Exp {\n  String variable;\n  Exp expression;\n}\n</code></pre>\n\n<p>It represents an anonymous function expression in the interpreted language.</p>\n\n<blockquote>\n  <p>is <code>Exp</code> a pre-defined value?</p>\n</blockquote>\n\n<p>No, it's defined right here in your snippet, <code>data Exp = ...</code></p>\n\n<blockquote>\n  <p>What are the VLambda and the VVar supposed to be? </p>\n</blockquote>\n\n<p>The interpreter uses different types for an expression and a resulting value, so a <code>Lambda</code> expression would evaluate into a <code>VLambda</code> value, and a <code>Var</code> expression into either a <code>Value</code> from the environment or a <code>VVar</code> if it's free (presumably). An <code>App</code> expression would be evaluated until you get a <code>Value</code></p>\n\n<blockquote>\n  <p>Which scope will be used by the function eval?</p>\n</blockquote>\n\n<p>The <code>eval</code> function will evaluate a language with dynamic scoping. You can tell because the VLambda does not have an Env field that could store the closure.</p>\n\n<blockquote>\n  <p>What do we have to change to allow for the other scope?</p>\n</blockquote>\n\n<p>You'd add an Env field to the VLambda that will store the closure of lexical variables when the Lambda was evaluated. </p>\n"}], "owner": {"reputation": 33, "user_id": 6252481, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c6d6d101f79f1d1a371882d7ea9e99a?s=128&d=identicon&r=PG&f=1", "display_name": "ndrb", "link": "https://stackoverflow.com/users/6252481/ndrb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 222, "favorite_count": 0, "accepted_answer_id": 56451859, "answer_count": 1, "score": -2, "last_activity_date": 1560290131, "creation_date": 1559681694, "last_edit_date": 1559683853, "question_id": 56451223, "link": "https://stackoverflow.com/questions/56451223/haskell-mini-interpreter", "title": "Haskell Mini-Interpreter", "body": "<p>So our prof presented us with this code and two questions about it. I have no clue where to even begin because I do not understand any of the code presented, so just understanding what all these lines are doing is a good start. </p>\n\n<p>I know <code>data</code> is to declare data types and the <code>|</code> acts as an Or.</p>\n\n<p>But for everything else such as <code>Lambda String Exp</code>, \nis it a <code>String</code> or an anonymous function and is <code>Exp</code> a pre-defined value?\nWhat are the <code>VLambda</code> and the <code>VVar</code> supposed to be?\nGoing with an explanation of every line would be great.\nThank you for your time :)</p>\n\n<p>Here is some Haskell code that serves as an interpreter of a functional mini-language:</p>\n\n<pre><code>-- The expressions\n\ndata Exp = Var String\n   | Lambda String Exp\n   | App Exp Exp\n\n-- The values returned by the interpreter\n\ndata Value = VVar String\n   | VLambda String Exp\ntype Env = [(String, Value)]\n\n-- The interpreter\n\neval :: Env -&gt; Exp -&gt; Value\neval env e = ...\n</code></pre>\n\n<ol>\n<li>Which scope will be used by the function eval?</li>\n<li>What do we have to change to allow for the other scope?</li>\n</ol>\n\n<p>The scopes referred to are either dynamic or static(lexical) scope</p>\n"}, {"tags": ["windows", "loops", "haskell", "ghc"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 1, "creation_date": 1559679164, "post_id": 56450693, "comment_id": 99494697, "body": "I believe it&#39;s related to whether the single-threaded runtime or the multi-threaded runtime is used."}, {"owner": {"reputation": 2378, "user_id": 394327, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/59d57d95bc7c45ced5f1969279cec06b?s=128&d=identicon&r=PG", "display_name": "Andrej Bauer", "link": "https://stackoverflow.com/users/394327/andrej-bauer"}, "edited": false, "score": 2, "creation_date": 1559679465, "post_id": 56450693, "comment_id": 99494810, "body": "Do you understand that in general it is <i>impossible</i> to <a href=\"https://en.wikipedia.org/wiki/Halting_problem\" rel=\"nofollow noreferrer\">detect non-termination</a>? Haskell only succeeds in certain fortuitous cases, and it definitely doesn&#39;t provide any guarantees about being able to detect non-termination (because it cannot)."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1559680057, "post_id": 56450693, "comment_id": 99495067, "body": "This is in essence the opposite of the <a href=\"https://en.wikipedia.org/wiki/Halting_problem\" rel=\"nofollow noreferrer\"><i>Halting</i> problem</a> (well you could say it is the &quot;<i>looping problem</i>&quot;), although there are solvers for certain <i>cases</i> of the halting problem, in general it is an undecidable problem."}], "answers": [{"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 7, "last_activity_date": 1559681273, "creation_date": 1559681273, "answer_id": 56451144, "question_id": 56450693, "link": "https://stackoverflow.com/questions/56450693/why-does-running-ghci-in-windows-make-it-not-possible-to-detect-infinite-loops/56451144#56451144", "title": "Why does running GHCi in Windows make it not possible to detect infinite loops?", "body": "<p>The comment seems to be outdated.  I can confirm that in GHCi 8.6.4 on Linux, entering this code in an interactive prompt simply hangs.  </p>\n\n<p>Moreover, if you take the program:</p>\n\n<pre><code>main = let x = x in x\n</code></pre>\n\n<p>and compile it with GHC 8.6.4 (again on Linux), then compiled without optimization it hangs, while compiled with <code>-O2</code> it prints:</p>\n\n<pre><code>Loop: &lt;&lt;loop&gt;&gt;\n</code></pre>\n\n<p>It doesn't seem to make any difference whether it's compiled threaded or not.</p>\n\n<p>The bottom line is that GHC makes no real guarantees about which infinite loops it may or may not \"catch\", and this can change from version to version and with different optimization settings, and in interactive versus not interactive code, and might be different from architecture to architecture.</p>\n\n<p>There's nothing inherent to Windows that would prevent this detection process, and no particularly reason why the Windows and Linux versions of a program would behave differently.  If the comment was accurate at one point, it was probably some subtle difference in code generation under Windows that led to the difference in observed behavior.</p>\n"}], "migrated_from": {"other_site": {"aliases": ["http://computerscience.stackexchange.com"], "markdown_extensions": ["MathJax", "Prettify"], "launch_date": 1439905020, "open_beta_date": 1332272936, "closed_beta_date": 1331060400, "site_state": "normal", "high_resolution_icon_url": "https://cdn.sstatic.net/Sites/cs/Img/apple-touch-icon@2.png", "favicon_url": "https://cdn.sstatic.net/Sites/cs/Img/favicon.ico", "icon_url": "https://cdn.sstatic.net/Sites/cs/Img/apple-touch-icon.png", "audience": "students, researchers and practitioners of computer science", "site_url": "https://cs.stackexchange.com", "api_site_parameter": "cs", "logo_url": "https://cdn.sstatic.net/Sites/cs/Img/logo.png", "name": "Computer Science", "site_type": "main_site"}, "on_date": 1559679043, "question_id": 110239}, "owner": {"reputation": 45, "user_id": 4584808, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2fab1bbc473298ae2d8e2669d156959?s=128&d=identicon&r=PG&f=1", "display_name": "Christian", "link": "https://stackoverflow.com/users/4584808/christian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 97, "favorite_count": 0, "accepted_answer_id": 56451144, "answer_count": 1, "score": 3, "last_activity_date": 1559681273, "creation_date": 1559678700, "last_edit_date": 1559679075, "question_id": 56450693, "link": "https://stackoverflow.com/questions/56450693/why-does-running-ghci-in-windows-make-it-not-possible-to-detect-infinite-loops", "title": "Why does running GHCi in Windows make it not possible to detect infinite loops?", "body": "<p>I'm currently reading \"Haskell Programming from first principles\" and there is a paragraph in the section about <em>bottom</em> that reads:</p>\n\n<blockquote>\n  <p>Let us examine a few ways by which we can have bottom in our programs:</p>\n\n<pre><code>Prelude&gt; let x = x in x\n</code></pre>\n  \n  <p>*** Exception: &lt;&lt; loop >> </p>\n  \n  <p>Here GHCi detected that let x = x in x was never going to return and short-circuited the never-ending\n  computation. This is an exam- ple of bottom because it was never going\n  to return a result. <strong>Note that if you\u2019re using a Windows computer, this\n  example may freeze your GHCi and not throw an exception.</strong></p>\n</blockquote>\n\n<p>My question is: is there anything inherent to Windows that makes it impossible or difficult to detect this loop or is it just specific to the GHC(i) implementation?</p>\n"}, {"tags": ["haskell", "polymorphism", "rank-n-types", "impredicativetypes"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1559670367, "post_id": 56448814, "comment_id": 99491241, "body": "It may have to do with the recursive nature of <code>[]</code>. The function only requires <code>RankNTypes</code> to be enabled. (Strictly speaking, <code>Rank2Types</code> would suffice, were it not superseded by <code>RankNTypes</code>.) It&#39;s <code>[]</code> which is special, not <code>(-&gt;)</code>."}, {"owner": {"reputation": 1706, "user_id": 1840613, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2dfd4d21060ccd9b972864e0f6cb8c4?s=128&d=identicon&r=PG", "display_name": "Jeremy List", "link": "https://stackoverflow.com/users/1840613/jeremy-list"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1559685067, "post_id": 56448814, "comment_id": 99496810, "body": "@chepner it is <code>(-&gt;)</code> that&#39;s special: <code>Maybe (forall a . a)</code> is a subtype of <code>forall a . Maybe a</code> in that every value of the first type is admissible when the second is expected but not vice-versa; ie impredicative polymorphism is disallowed for <code>Maybe</code> and <code>[]</code> for exactly the same reason."}], "answers": [{"tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": true, "score": 14, "last_activity_date": 1559671870, "creation_date": 1559671870, "answer_id": 56449258, "question_id": 56448814, "link": "https://stackoverflow.com/questions/56448814/why-is-impredicative-polymorphism-allowed-only-for-functions-in-haskell/56449258#56449258", "title": "Why is impredicative polymorphism allowed only for functions in Haskell?", "body": "<p>Higher-rank polymorphism is a special case of impredicative polymorphism, where the type constructor is <code>(-&gt;)</code> instead of any arbitrary constructor like <code>[]</code>.</p>\n\n<p>The basic problems with impredicativity are that it makes type <em>checking</em> hard and type <em>inference</em> impossible\u2014and indeed we can\u2019t infer types of a higher rank than 2: you have to provide a type annotation. This is the reason for the existence of the <code>Rank2Types</code> extension separate from <code>RankNTypes</code>. But for the restricted case of <code>(-&gt;)</code>, there are simplified algorithms for checking these types and doing the necessary amount of inference along the way for the programmer\u2019s convenience, such as <a href=\"https://www.cl.cam.ac.uk/~nk480/bidir.pdf\" rel=\"noreferrer\">Complete and Easy Bidirectional Type Checking for Higher-rank Polymorphism</a>\u2014compare that to the complexity of <a href=\"https://repository.upenn.edu/cgi/viewcontent.cgi?article=1291&amp;context=cis_papers\" rel=\"noreferrer\">Boxy Types: Inference for Higher-rank Types and Impredicativity</a>.</p>\n\n<p>The actual reasons in GHC are partly historical: there <em>was</em> an <code>ImpredicativeTypes</code> extension, which is now deprecated, but it never worked properly or ergonomically. Part of the problem was that we didn\u2019t yet have the <code>TypeApplications</code> extension, so there was no convenient way to explicitly supply a polymorphic type as a type argument, and the compiler attempted to do more inference than it ought to. Now that we have <code>TypeApplications</code>, a restricted form of <code>ImpredicativeTypes</code> may become possible in the future.</p>\n\n<p>It\u2019s not terribly pressing, however, since there have been workarounds for a while: with <code>RankNTypes</code>, you can \u201chide\u201d other forms of impredicativity by wrapping the polymorphic type in a <code>newtype</code> and explicitly packing &amp; unpacking it to tell the compiler exactly where you want to generalise and instantiate type variables.</p>\n\n<pre><code>newtype Id = Id { unId :: forall a. a -&gt; a }\n\nf :: [Id]\nf = [Id id]  -- generalise\n\n(unId (head f) (), unId (head f) 'x')  -- instantiate to () and Char\n</code></pre>\n"}], "owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 775, "favorite_count": 3, "accepted_answer_id": 56449258, "answer_count": 1, "score": 11, "last_activity_date": 1559678949, "creation_date": 1559669759, "last_edit_date": 1559678949, "question_id": 56448814, "link": "https://stackoverflow.com/questions/56448814/why-is-impredicative-polymorphism-allowed-only-for-functions-in-haskell", "title": "Why is impredicative polymorphism allowed only for functions in Haskell?", "body": "<p>In Haskell I can't write</p>\n\n<pre><code>f :: [forall a. a -&gt; a]\nf = [id]\n</code></pre>\n\n<p>because</p>\n\n<pre><code>\u2022 Illegal polymorphic type: forall a. a -&gt; a\n  GHC doesn't yet support impredicative polymorphism\n</code></pre>\n\n<p>But I can happily do</p>\n\n<pre><code>f :: (forall a. a -&gt; a) -&gt; (a, b) -&gt; (a, b)\nf i (x, y) = (i x, i y)\n</code></pre>\n\n<p>So as I see GHC does support impredicative polymorphism which is contradict to error message above. Why is <code>(-&gt;)</code> type constructor treated specially in this case? What prevents GHC from having this feature generalized over all datatypes?</p>\n"}, {"tags": ["haskell", "haskell-lucid"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 1, "creation_date": 1559662922, "post_id": 56446704, "comment_id": 99487895, "body": "Did you mean <code>div_</code>?"}, {"owner": {"reputation": 191, "user_id": 5414805, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/329a31f8a12bd80134b9e57094052e04?s=128&d=identicon&r=PG&f=1", "display_name": "Zyphicx", "link": "https://stackoverflow.com/users/5414805/zyphicx"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1559663364, "post_id": 56446704, "comment_id": 99488121, "body": "Well, this is embarrassing. I looked at it on and off probably for an hour or so and somehow I never noticed that. The error was not quite what I would have expected for a typo. Blunder on my part, thank you very much."}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1559663408, "post_id": 56446704, "comment_id": 99488140, "body": "So it was the issue? Neat. I&#39;d never heard of Lucid before."}, {"owner": {"reputation": 191, "user_id": 5414805, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/329a31f8a12bd80134b9e57094052e04?s=128&d=identicon&r=PG&f=1", "display_name": "Zyphicx", "link": "https://stackoverflow.com/users/5414805/zyphicx"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1559664198, "post_id": 56446704, "comment_id": 99488494, "body": "Yes, that was the issue. Lucid uses underscores to avoid conflicts with prelude functions such as div and id. I probably forgot the underscore on a few other occasions, but the compiler warned me since for example nav without an underscore would not be an actual function, but since div is a function I did not get such an error."}], "answers": [{"tags": [], "owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "is_accepted": false, "score": 0, "last_activity_date": 1559664256, "creation_date": 1559664256, "answer_id": 56447552, "question_id": 56446704, "link": "https://stackoverflow.com/questions/56446704/lucid-nav-element-gives-error-about-attribute-list/56447552#56447552", "title": "Lucid nav element gives error about attribute list", "body": "<p>The problem is the use of <code>div</code> (integer division) instead of <code>div_</code> (HTML element).</p>\n\n<p>The type error is slightly bizarre, but arises from how the type checker tries to infer a type for the whole expression.</p>\n\n<p><code>class_</code> has type</p>\n\n<pre><code>class_ :: Text -&gt; Attribute\n</code></pre>\n\n<p>Thus <code>[class_ \"list-group\"] :: [Attribute]</code>. That's easy.</p>\n\n<p><code>div</code> has type</p>\n\n<pre><code>div :: Integral a =&gt; a -&gt; a -&gt; a\n</code></pre>\n\n<p>There is an <code>Integral</code> constraint, but more importantly, both input types and the result type must be the same.</p>\n\n<p>In an expression like</p>\n\n<pre><code>div [class_ \"list-group\"] $ do\n  a_ [href_ \"#\", class_ \"menuItem list-group-item rounded-0\"] \"Item 1\"\n  a_ [href_ \"#\", class_ \"menuItem list-group-item rounded-0\"] \"Item 2\"\n</code></pre>\n\n<p>the type checker concludes that <code>[class_ \"list-group\"]</code>, <code>do ...</code>, and the whole <code>div ... ...</code> expression have the same type.</p>\n\n<p>We know the first type, so we conclude <code>do { a_ ...; a_ ... } :: [Attribute]</code> and <code>div [...] $ do ... :: [Attribute]</code>.</p>\n\n<p>This use of <code>div</code> is the last statement in a <code>do</code> block, which means its type is also the type of the whole <code>do</code> expression.</p>\n\n<p>I'm a bit fuzzy on the next part, but I think the type checker looks at</p>\n\n<pre><code>nav_ :: Term arg result =&gt; arg -&gt; result\n</code></pre>\n\n<p>and</p>\n\n<pre><code>class Term arg result | result -&gt; arg\n</code></pre>\n\n<p>and the available <code>Term</code> instances, and concludes that because the declared result type is <code>sidebar :: Html ()</code>, the second argument to <code>nav_</code> (the <code>do</code> block) must also have type <code>Html ()</code>, which is an alias for <code>HtmlT Identity ()</code>.</p>\n\n<p>Now we have a conflict: The declared type signature says the second argument of <code>nav_</code> must be a <code>HtmlT Identity ()</code>, but the inferred type is <code>[Attribute]</code>.</p>\n\n<p>At this point the type checker just gives up and reports the confusing problem to the user.</p>\n"}], "owner": {"reputation": 191, "user_id": 5414805, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/329a31f8a12bd80134b9e57094052e04?s=128&d=identicon&r=PG&f=1", "display_name": "Zyphicx", "link": "https://stackoverflow.com/users/5414805/zyphicx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 36, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1559664256, "creation_date": 1559661143, "last_edit_date": 1559662887, "question_id": 56446704, "link": "https://stackoverflow.com/questions/56446704/lucid-nav-element-gives-error-about-attribute-list", "title": "Lucid nav element gives error about attribute list", "body": "<p>I am currently in the process of rewriting an HTML file in Lucid for use with a Spock web server. However, for some reason this particular snippet gives me an error:</p>\n\n<pre><code>sidebar :: Html ()\nsidebar = do\n  nav_ [id_ \"sidebar\"] $ do\n    div [class_ \"sidebar-header\"] $\n      h3_ \"Sidebar\"\n\n    div [class_ \"list-group\"] $ do\n      a_ [href_ \"#\", class_ \"menuItem list-group-item rounded-0\"] \"Item 1\"\n      a_ [href_ \"#\", class_ \"menuItem list-group-item rounded-0\"] \"Item 2\"\n</code></pre>\n\n<p>Namely, the error is:</p>\n\n<pre><code>Couldn't match type `[Attribute]'\n               with `HtmlT Data.Functor.Identity.Identity ()'\n  arising from a use of `nav_'\n</code></pre>\n\n<p>I noticed that removing the div and just having the <code>h3</code> fixes the problem, but that is not what I want. I did some googling to try to find the issue, but from what I could see the library does not have that many examples online that I could try to look at. Stackoverflow and Reddit searches did not reveal anything either.</p>\n\n<p>This is my first actual project where I have used Lucid, so it is entirely possible that there is an obvious blunder somewhere.</p>\n"}, {"tags": ["haskell", "containers"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1559635909, "post_id": 56439825, "comment_id": 99473178, "body": "Your signature <code>at :: (Eq k) =&gt; c -&gt; k -&gt; v</code> means that for any type <code>k</code>, I can retrieve a value of any type <code>v</code> for that container, so even if your container stores <code>Int</code>s, I can decide to retrieve <code>String</code>s from it?"}, {"owner": {"reputation": 123, "user_id": 3157312, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c6fa3ce9887621fc1f64ad20a8ee9dc?s=128&d=identicon&r=PG", "display_name": "asianirish", "link": "https://stackoverflow.com/users/3157312/asianirish"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1559636281, "post_id": 56439825, "comment_id": 99473354, "body": "@WillemVanOnsem I corrected that to <code>c a -&gt; k -&gt; a</code>"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1559653702, "post_id": 56439825, "comment_id": 99482605, "body": "Since <code>c</code> is a type <i>constructor</i>, you would need to define the instance for <code>[]</code>, not <code>[a]</code>."}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 0, "creation_date": 1559717631, "post_id": 56439825, "comment_id": 99503222, "body": "You can have a look at the <code>Relude.Extra.Map</code> module for an idea on how to implement similar typeclass: <a href=\"http://hackage.haskell.org/package/relude-0.5.0/docs/Relude-Extra-Map.html\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/relude-0.5.0/docs/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 1, "creation_date": 1559671100, "post_id": 56441130, "comment_id": 99491500, "body": "It would be a good idea to incorporate some of the code blocks into the answer. It is considered good practice on SO to not have answers that are heavily dependent on external resources (citations are, of course, good to have though)."}], "tags": [], "owner": {"reputation": 1610, "user_id": 11257715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7ef71a9bfa4abd30cb98cbb290b909?s=128&d=identicon&r=PG", "display_name": "moonGoose", "link": "https://stackoverflow.com/users/11257715/moongoose"}, "is_accepted": true, "score": 2, "last_activity_date": 1559640501, "creation_date": 1559640501, "answer_id": 56441130, "question_id": 56439825, "link": "https://stackoverflow.com/questions/56439825/container-type-class-in-haskell/56441130#56441130", "title": "Container type class in Haskell", "body": "<p>Take a look at <a href=\"https://hackage.haskell.org/package/lens-4.15.4/docs/Control-Lens-At.html\" rel=\"nofollow noreferrer\">Control.Lens.At</a>, and perhaps ask a more specific question after you've seen what's done there? Admittedly that's done with the slightly different goal of setting up lenses, but it amounts to much the same thing. I'll try to give a brief explanation of how it works though.</p>\n\n<p>First, it's worth noting that what you want would be better seen as an associative mapping typeclass rather than a container, as you wish to be able to look up the value at a <code>k</code>. </p>\n\n<p>Thus, Control.Lens.At sets up two type families, <code>Index</code> and <code>IxValue</code>, for the key and value type of the container. For example, a <code>Map k v</code> <a href=\"https://hackage.haskell.org/package/lens-4.15.4/docs/src/Control.Lens.At.html#line-287\" rel=\"nofollow noreferrer\">has</a> <code>Index (Map k v) = k</code> and <code>IxValue (Map k v) = v</code> as you might expect (eliding that <code>k</code> must be <code>Ord</code>), whereas a list can be thought of as a mapping from indices to its values, <a href=\"https://hackage.haskell.org/package/lens-4.15.4/docs/src/Control.Lens.At.html#line-94\" rel=\"nofollow noreferrer\">thus</a> <code>Index [a] = Int</code>, <code>IxValue [a] = a</code>.</p>\n\n<p>These type families are used to construct the typeclass <code>Ixed</code> saying, given a container <code>:: c</code> and an <code>k = Index c</code> then I can retrieve an <code>v :: Maybe (IxValue c)</code> (depending on whether it's present or not) (and indeed modify at <code>k</code> instead if desired). As I said earlier, this is done to set up lenses, but this approach could be adapted if desired.</p>\n\n<hr>\n\n<p>You could also take a look at <a href=\"https://hackage.haskell.org/package/mono-traversable-1.0.11.0/docs/Data-Containers.html\" rel=\"nofollow noreferrer\">IsMap</a> for another point in the design space. No language extensions used there either.</p>\n"}], "owner": {"reputation": 123, "user_id": 3157312, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1c6fa3ce9887621fc1f64ad20a8ee9dc?s=128&d=identicon&r=PG", "display_name": "asianirish", "link": "https://stackoverflow.com/users/3157312/asianirish"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 264, "favorite_count": 0, "accepted_answer_id": 56441130, "answer_count": 1, "score": 0, "last_activity_date": 1559666870, "creation_date": 1559635813, "last_edit_date": 1559666870, "question_id": 56439825, "link": "https://stackoverflow.com/questions/56439825/container-type-class-in-haskell", "title": "Container type class in Haskell", "body": "<p>I have an idea to create a <code>Container</code> class to use <strong>any</strong> container-like type universally:</p>\n\n<pre><code>class Container c where\n    at :: (Eq k) =&gt; c a -&gt; k -&gt; a\n</code></pre>\n\n<p>But at attempt to use an instance of this class as (for example) a <code>List</code> will be disappointing:</p>\n\n<pre><code>{- not working code -}\ninstance Container [a] where\n    at lst k = lst !! k\n</code></pre>\n\n<p>The <code>List</code> demands <code>Int</code> but we have only <code>Eq</code>:</p>\n\n<blockquote>\n<pre><code>\u2022 Couldn't match expected type \u2018Int\u2019 with actual type \u2018k\u2019\n  \u2018k\u2019 is a rigid type variable bound by\n    the type signature for:\n      at :: forall k v. Eq k =&gt; [a] -&gt; k -&gt; v\n</code></pre>\n</blockquote>\n\n<p>We can not do like this:</p>\n\n<pre><code>class Container c where\n    at :: c a -&gt; Int -&gt; v\n</code></pre>\n\n<p>because the whole point is lost, since we'd like to use as a 'key' of the container not only <code>Int</code>, but also any other <code>Eq</code> type such as <code>String</code>, <code>(Int, Int)</code>, <code>Bool</code> etc.</p>\n\n<p>An example to do it in a wrong way (I did it but I didn't like it):</p>\n\n<pre><code>class Container c where\n    at :: (Show k, Eq k) =&gt; c a -&gt; k -&gt; a\n\n\ntoInt :: (Show s) =&gt; s -&gt; Int\ntoInt r = let s = show r\n          in  (read s :: Int)\n\n\ninstance Container [] where\n    at arr k = arr !! toInt k\n\n{-\n*R.Container&gt; at [1,2,3] 1\n2\n-}\n\ntoBool :: (Show s) =&gt; s -&gt; Bool\ntoBool r = let s = show r\n           in  (read s :: Bool)\n\n\ndata MyPair a = MyPair { ifTrue :: a, ifFalse :: a } deriving (Show)\n\n\ninstance Container MyPair where\n    at (MyPair a b) k = let yes = toBool k\n                        in  if yes then a else b \n\n{-\n*R.Container&gt; let myPair = MyPair 12 13\n*R.Container&gt; at myPair True\n12\n*R.Container&gt; at myPair False\n13\n-}\n\ntoIntPair :: (Show s) =&gt; s -&gt; (Int,Int)\ntoIntPair r = let s = show r\n           in  (read s :: (Int,Int))\n\ndata Matrix a = Matrix {arr2d :: [[a]]} deriving (Show)\n\n\ninstance Container Matrix where\n    at mtrx k = let (f,s) = toIntPair k\n                    arrs = arr2d mtrx\n                    arr = arrs !! f\n                in  arr !! s\n\n{-\n*R.Container&gt; let mtrx = Matrix [[1,2,3,4],[5,6,7,8],[9,10,11,12],[13,12,11,10]] \n*R.Container&gt; at mtrx (3,1)\n12\n*R.Container&gt; at mtrx (3,0)\n13\n-}\n</code></pre>\n\n<p>So I have to use <code>Show</code> constraint for every conversation function which contains slow conversions from <code>Eq</code> to the required type</p>\n\n<p>My question is how to implement this idea in the best way (good practice) and without language extensions (<code>{-# LANGUAGE</code>)?</p>\n"}, {"tags": ["haskell", "functional-programming", "higher-order-functions"], "answers": [{"comments": [{"owner": {"reputation": 15567, "user_id": 3656904, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c8dbd58d3b477ad0e5889bc60625e7e8?s=128&d=identicon&r=PG&f=1", "display_name": "talex", "link": "https://stackoverflow.com/users/3656904/talex"}, "edited": false, "score": 0, "creation_date": 1559629685, "post_id": 56438377, "comment_id": 99470450, "body": "You can make one more step and say <code>flippity flop x y = flop y x</code>. But it made things more confusing."}, {"owner": {"reputation": 1610, "user_id": 11257715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7ef71a9bfa4abd30cb98cbb290b909?s=128&d=identicon&r=PG", "display_name": "moonGoose", "link": "https://stackoverflow.com/users/11257715/moongoose"}, "reply_to_user": {"reputation": 15567, "user_id": 3656904, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c8dbd58d3b477ad0e5889bc60625e7e8?s=128&d=identicon&r=PG&f=1", "display_name": "talex", "link": "https://stackoverflow.com/users/3656904/talex"}, "edited": false, "score": 0, "creation_date": 1559640798, "post_id": 56438377, "comment_id": 99475663, "body": "@talex wouldn&#39;t <i>one</i> more step be <code>flippity flop x = \\y -&gt; flop y x</code> :P"}, {"owner": {"reputation": 15567, "user_id": 3656904, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c8dbd58d3b477ad0e5889bc60625e7e8?s=128&d=identicon&r=PG&f=1", "display_name": "talex", "link": "https://stackoverflow.com/users/3656904/talex"}, "edited": false, "score": 0, "creation_date": 1559640934, "post_id": 56438377, "comment_id": 99475754, "body": "That is real baby step :)"}], "tags": [], "owner": {"reputation": 12941, "user_id": 292731, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/e3f90adedab79538799e2375a9731920?s=128&d=identicon&r=PG", "display_name": "Justin L.", "link": "https://stackoverflow.com/users/292731/justin-l"}, "is_accepted": true, "score": 5, "last_activity_date": 1559629388, "creation_date": 1559629388, "answer_id": 56438377, "question_id": 56438173, "link": "https://stackoverflow.com/questions/56438173/understanding-the-flip-function/56438377#56438377", "title": "Understanding the flip function", "body": "<p>In the syntax:</p>\n\n<pre><code>myFunction x = x + 2\n</code></pre>\n\n<p>things on the left hand side of the equal sign, <code>x</code>, are treated as \"parameters\".  You can use them on the right hand sign of the equal sign to state what you want the result to be.</p>\n\n<p>This syntax defines a function <code>myFunction</code>, with single parameter <code>x</code>.</p>\n\n<p>So here we have:</p>\n\n<pre><code>flip' f = g\n</code></pre>\n\n<p>This defines a function <code>flip'</code>, with single parameter <code>f</code>.</p>\n\n<p>We have another definition, as well:</p>\n\n<pre><code>g x y = f y x\n</code></pre>\n\n<p>This defines a function <code>g</code>, with two parameters, <code>x</code> and <code>y</code>.</p>\n\n<p>So when we say:</p>\n\n<pre><code>flip' f = g\n  where\n    g x y = f y x\n</code></pre>\n\n<p>We are saying that the result of <code>flip f</code> is the function <code>g</code>, where <code>g</code> is defined as <code>g x y = f y x</code>.</p>\n\n<p>In case the short variable names are confusing you, here is the same function with some of the names swapped for clarity:</p>\n\n<pre><code>flippity flop = glop\n  where\n    glop x y = flop y x\n</code></pre>\n\n<p>See if you can understand what <code>flippity</code> does, and see if you can see how it is the same as <code>flip'</code>, just with different internal parameter and helper function names.</p>\n\n<p>Remember also in Haskell that we can always replace function calls by their body, for the most part.  So we can rewrite that as:</p>\n\n<pre><code>flippity flop = glop\n  where\n    glop = \\x y -&gt; flop y x\n\n-- replace glop with its definition\n\nflippity flop = \\x y -&gt; flop y x\n</code></pre>\n\n<p>So we can see that <code>flippity</code> is a function that takes a function <code>flop</code> and returns a new function, <code>\\x y -&gt; flop y x</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 1275, "user_id": 11571245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vkCkX.png?s=128&g=1", "display_name": "typedfern", "link": "https://stackoverflow.com/users/11571245/typedfern"}, "is_accepted": false, "score": 5, "last_activity_date": 1559629576, "creation_date": 1559629576, "answer_id": 56438425, "question_id": 56438173, "link": "https://stackoverflow.com/questions/56438173/understanding-the-flip-function/56438425#56438425", "title": "Understanding the flip function", "body": "<p><code>f</code>  is <code>flip'</code>'s input (the function you want to flip), <code>g</code> is <code>flip'</code>s output (the flipped function it will return).</p>\n\n<p>The <code>where</code> clause is simply defining what <code>g</code> is; that is, defining a function that simply calls <code>f</code> with its arguments reversed.</p>\n\n<p>You could avoid naming <code>g</code> at all by simply having <code>flip'</code> return a lambda:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>flip' :: (a -&gt; b -&gt; c) -&gt; (b -&gt; a -&gt; c)\nflip' f = \\x y -&gt; f y x\n</code></pre>\n"}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 273, "favorite_count": 0, "accepted_answer_id": 56438377, "answer_count": 2, "score": 1, "last_activity_date": 1559631052, "creation_date": 1559628396, "last_edit_date": 1559631052, "question_id": 56438173, "link": "https://stackoverflow.com/questions/56438173/understanding-the-flip-function", "title": "Understanding the flip function", "body": "<p>I am learning higher-order functions from 'Learn You a Haskell for Great Good!' by Miran Lipovaca. </p>\n\n<p>For the following function flip which takes a function and returns a function with the first two arguments flipped:</p>\n\n<pre><code>flip' :: (a -&gt; b -&gt; c) -&gt; (b -&gt; a -&gt; c)\nflip' f = g\n   where g x y = f y x\n</code></pre>\n\n<p>I don't exactly understand what <code>f</code> and <code>g</code> are. Are they two different functions? Similarly, in the where binding, what exactly does <code>g x y = f y x</code> mean?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 1, "creation_date": 1559631314, "post_id": 56438055, "comment_id": 99471111, "body": "That sounds like the configurations problem; see <a href=\"http://okmij.org/ftp/Haskell/tr-15-04.pdf\" rel=\"nofollow noreferrer\">okmij.org/ftp/Haskell/tr-15-04.pdf</a> and its modern implementation <a href=\"https://hackage.haskell.org/package/reflection\" rel=\"nofollow noreferrer\">Data.Reflection</a> (warning: advanced black magic)."}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 0, "creation_date": 1559672420, "post_id": 56438055, "comment_id": 99492005, "body": "I&#39;d recommend just passing context state like this as arguments, but if you really want you can take a look at GHC&#39;s <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#implicit-parameters\" rel=\"nofollow noreferrer\">ImplicitParams</a> extension."}, {"owner": {"reputation": 1416, "user_id": 1769679, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/NIcLL.png?s=128&g=1", "display_name": "Asa", "link": "https://stackoverflow.com/users/1769679/asa"}, "edited": false, "score": 2, "creation_date": 1559683829, "post_id": 56438055, "comment_id": 99496448, "body": "&quot;In an object-oriented language, you would just have a member variable in a class, or some sort of global variable.&quot; The idiomatic haskell answer to this OO pattern is <code>ReaderT</code> if the member is constant, and <code>StateT</code> if the member needs to be mutable. One of the answers below covers this in more detail."}], "answers": [{"tags": [], "owner": {"reputation": 1275, "user_id": 11571245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vkCkX.png?s=128&g=1", "display_name": "typedfern", "link": "https://stackoverflow.com/users/11571245/typedfern"}, "is_accepted": false, "score": 14, "last_activity_date": 1559629775, "last_edit_date": 1559629775, "creation_date": 1559629241, "answer_id": 56438338, "question_id": 56438055, "link": "https://stackoverflow.com/questions/56438055/idiomatic-way-to-share-variables-between-functions-in-haskell/56438338#56438338", "title": "Idiomatic way to share variables between functions in Haskell?", "body": "<p>There is nothing awkward about passing arguments to fun1 - it <em>does</em> use them (passing them to func2 <em>is</em> using them).</p>\n\n<p>What <em>is</em> awkward, is to have your fun1 or fun2's behavior depend on hidden variables, making their behaviors difficult to reason about or predict.</p>\n\n<p>Another thing you can do: make fun2 an argument to fun1 (you can pass functions as parameters in Haskell!):</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>fun1 :: (Char -&gt; IO ()) -&gt; String -&gt; IO ()\nfun1 f s = traverse_ f s\n</code></pre>\n\n<p>Then, you can call it in <code>main</code> like this:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>traverse_ (fun1 (fun2 args)) [\"one\", \"two\", \"three\"]\n</code></pre>\n\n<p>That way you can pass the arguments directly to fun2, then pass fun2 to fun1...</p>\n"}, {"tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": false, "score": 7, "last_activity_date": 1559635150, "creation_date": 1559635150, "answer_id": 56439667, "question_id": 56438055, "link": "https://stackoverflow.com/questions/56438055/idiomatic-way-to-share-variables-between-functions-in-haskell/56439667#56439667", "title": "Idiomatic way to share variables between functions in Haskell?", "body": "<p>While the answer by <em>typedfern</em> is good (upvoted), it'd be even more idiomatic to write as many <strong>pure functions</strong> as possible, and then <strong>defer the effects</strong> until the time where you can no longer postpone them. This enables you to create a <strong>pipeline of data</strong> instead of having to pass arguments around.</p>\n\n<p>I understand that the example problem shown in the OP is simplified, possibly to the degree that it's trivial, but it'd be easier to compose if you separate the logic from its effects.</p>\n\n<p>First, rewrite <code>fun2</code> to a pure function:</p>\n\n<pre><code>fun2 :: Foldable t =&gt; t String -&gt; Char -&gt; Char\nfun2 args c =\n  if \"-u\" `elem` args then toUpper c else toLower c\n</code></pre>\n\n<p>If you partially apply <code>fun2</code> with your arguments, you have a function with the type <code>Char -&gt; Char</code>. The data (<code>[\"one\", \"two\", \"three\"]</code>) you wish to <code>print</code>, however, has the type <code>[[Char]]</code>. You want to apply each of the <code>Char</code> values to <code>fun2 args</code>. That's essentially what the OP <code>fun1</code> function does.</p>\n\n<p>You can, however, instead flatten the <code>[[Char]]</code> value to <code>[Char]</code> with <code>join</code> (or <code>concat</code>).</p>\n\n<pre><code>*Q56438055&gt; join [\"one\", \"two\", \"three\"]\n\"onetwothree\"\n</code></pre>\n\n<p>Now you can simply apply each of the <code>Char</code> values in the flattened list to <code>fun2 args</code>:</p>\n\n<pre><code>*Q56438055&gt; args = [\"-u\"]\n*Q56438055&gt; fmap (fun2 args) $ join [\"one\", \"two\", \"three\"]\n\"ONETWOTHREE\"\n</code></pre>\n\n<p>This is still a pure result, but you can now apply the effect by printing each of the characters:</p>\n\n<pre><code>main :: IO ()\nmain = do\n  args &lt;- getArgs\n  mapM_ print $ fmap (fun2 args) $ join [\"one\", \"two\", \"three\"]\n</code></pre>\n\n<p>By changing the function design so that you're passing data from function to function, you can often simplify the code.</p>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 8, "last_activity_date": 1559660658, "last_edit_date": 1559660658, "creation_date": 1559657920, "answer_id": 56445813, "question_id": 56438055, "link": "https://stackoverflow.com/questions/56438055/idiomatic-way-to-share-variables-between-functions-in-haskell/56445813#56445813", "title": "Idiomatic way to share variables between functions in Haskell?", "body": "<p>For cases when you really <em>do</em> need a shared, read-only environment, use the <code>Reader</code> monad, or in this case, the <code>ReaderT</code> monad transformer.</p>\n\n<pre><code>import Data.Char\nimport Data.Foldable\nimport System.Environment\nimport Control.Monad.Trans\nimport Control.Monad.Trans.Reader\n\nmain :: IO ()\nmain = do\n    args &lt;- getArgs\n    -- Pass in the arguments using runReaderT\n    runReaderT (traverse_ fun1 [\"one\", \"two\", \"three\"]) args\n\n-- The type changes, but the body stays the same.\n-- fun1 doesn't care about the environment, and fun2\n-- is still a Kleisli arrow; traverse_ doesn't care if\n-- its type is Char -&gt; IO () or Char -&gt; ReaderT [String] IO ()\nfun1 :: String -&gt; ReaderT [String] IO ()\nfun1 s = traverse_ fun2 s\n\n-- Get the arguments using ask, and use liftIO\n-- to lift the IO () value produced by print\n-- into monad created by ReaderT\nfun2 :: Char -&gt; ReaderT [String] IO ()\nfun2 c = do\n    args &lt;- ask\n    liftIO $ if \"-u\" `elem` args \n      then print $ toUpper c\n      else print $ toLower c\n</code></pre>\n\n<p>As an aside, you can refactor <code>fun2</code> slightly:</p>\n\n<pre><code>fun2 :: Char -&gt; ReaderT [String] IO ()\nfun2 c = do\n    args &lt;- ask\n    let f = if \"-u\" `elem` args then toUpper else toLower\n    liftIO $ print (f c)\n</code></pre>\n\n<hr>\n\n<p>In fact, you can select <code>toUpper</code> or <code>toLower</code> as soon as you get the arguments, and put <em>that</em>, rather than the arguments themselves, in the environment.</p>\n\n<pre><code>main :: IO ()\nmain = do\n    args &lt;- getArgs\n    -- Pass in the arguments using runReaderT\n    runReaderT \n      (traverse_ fun1 [\"one\", \"two\", \"three\"])\n      (if \"-u\" `elem` args then toUpper else toLower)\n\nfun1 :: String -&gt; ReaderT (Char -&gt; Char) IO ()\nfun1 s = traverse_ fun2 s\n\nfun2 :: Char -&gt; ReaderT (Char -&gt; Char) IO ()\nfun2 c = do\n    f &lt;- ask\n    liftIO $ print (f c)\n</code></pre>\n\n<p>The environment type can be any value. The above examples show a list of strings and a single <code>Char -&gt; Char</code> as the environment. In general, you might want a custom product type that holds whatever values you want to share with the rest of your code, for example,</p>\n\n<pre><code>data MyAppConfig = MyAppConfig { foo :: Int\n                               , bar :: Char -&gt; Char\n                               , baz :: [Strings]\n                               }\n\nmain :: IO ()\nmain = do\n    args &lt;- getArgs\n    -- Process arguments and define a value of type MyAppConfig\n    runReaderT fun1 MyAppConfig\n\nfun1 :: ReaderT MyAppConfig IO ()\nfun1 = do\n   (MyAppConfig x y z) &lt;- ask  -- Get the entire environment and unpack it\n   x' &lt;- asks foo  -- Ask for a specific piece of the environment\n   ...\n</code></pre>\n\n<p>You may want to read more about the <a href=\"https://www.fpcomplete.com/blog/2017/06/readert-design-pattern\" rel=\"noreferrer\">ReaderT design pattern</a>.</p>\n"}], "owner": {"reputation": 1185, "user_id": 3228230, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/m9lny.jpg?s=128&g=1", "display_name": "paperduck", "link": "https://stackoverflow.com/users/3228230/paperduck"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 329, "favorite_count": 0, "accepted_answer_id": 56445813, "answer_count": 3, "score": 10, "last_activity_date": 1559660658, "creation_date": 1559627745, "last_edit_date": 1559635233, "question_id": 56438055, "link": "https://stackoverflow.com/questions/56438055/idiomatic-way-to-share-variables-between-functions-in-haskell", "title": "Idiomatic way to share variables between functions in Haskell?", "body": "<p>I have a situation where a recursive function makes a decision based on the command line arguments. The recursive function is not called directly by <code>main</code>. I'm wondering what the best way is to make the arguments available to the function. I do not want to call <code>getArgs</code> inside the recursive function, because that seems like it would add a lot of overhead. </p>\n\n<p>However, it is awkward to call <code>getArgs</code> in <code>main</code> and then pass the arguments through a function that doesn't use them. This example is not recursive, but hopefully you get the concept.</p>\n\n<pre><code>import Data.Char\nimport System.Environment\n\nmain :: IO ()\nmain = do\n    args &lt;- getArgs  -- want to use these args in fun2\n    traverse_ fun1 [\"one\", \"two\", \"three\"]\n\nfun1 :: String -&gt; IO ()\nfun1 s = traverse_ fun2 s\n\nfun2 :: Char -&gt; IO ()\nfun2 c = do\n    if \"-u\" `elem` args then print $ toUpper c  -- how to get args here?\n    else print $ toLower c\n</code></pre>\n\n<p>Passing the arguments around seems like a bad idea:</p>\n\n<pre><code>import Data.Char\nimport System.Environment\n\nmain :: IO ()\nmain = do\n    args &lt;- getArgs -- want to use these args in fun2\n    traverse_ (fun1 args) [\"one\", \"two\", \"three\"]\n\nfun1 :: [String] -&gt; String -&gt; IO ()\nfun1 args s = traverse_ (fun2 args) s\n\nfun2 :: [String] -&gt; Char -&gt; IO ()\nfun2 args c = do\n    if \"-u\" `elem` args then print $ toUpper c\n    else print $ toLower c\n</code></pre>\n\n<p>In an object-oriented language, you would just have a member variable in a class, or some sort of global variable.</p>\n"}, {"tags": ["haskell", "quickcheck", "property-testing"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1559627560, "post_id": 56437457, "comment_id": 99469755, "body": "Have you looked at how the existing ones were written? What happened when you tried to write similar code to that yourself?"}, {"owner": {"reputation": 1206, "user_id": 783116, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/ZOv9Y.jpg?s=128&g=1", "display_name": "josiah", "link": "https://stackoverflow.com/users/783116/josiah"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1559655428, "post_id": 56437457, "comment_id": 99483651, "body": "@DanielWagner I did look at the definitions of Positive and NonEmptyList, but I didn&#39;t feel like I came away from that with a full picture of the methods that could be employed, and I also thought asking the question here on SO might make it easier for others to get a handle on this skill more quickly in the future."}], "answers": [{"comments": [{"owner": {"reputation": 1206, "user_id": 783116, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/ZOv9Y.jpg?s=128&g=1", "display_name": "josiah", "link": "https://stackoverflow.com/users/783116/josiah"}, "edited": false, "score": 0, "creation_date": 1559768297, "post_id": 56438741, "comment_id": 99527301, "body": "I really appreciate that you also added examples of how to use these techniques in Properties.  Excellent answer, thank you for taking the time."}], "tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": true, "score": 2, "last_activity_date": 1559631094, "creation_date": 1559631094, "answer_id": 56438741, "question_id": 56437457, "link": "https://stackoverflow.com/questions/56437457/how-do-you-write-a-new-modifier-in-quickcheck/56438741#56438741", "title": "How do you write a new modifier in QuickCheck", "body": "<p>There's plenty of way in which you can do that. Here's some examples.</p>\n\n<h1>Combinator function</h1>\n\n<p>You can write a combinator as a function. Here's one that generates non-singleton lists from any <code>Gen a</code>:</p>\n\n<pre><code>nonSingleton :: Gen a -&gt; Gen [a]\nnonSingleton g = do\n  x1 &lt;- g\n  x2 &lt;- g\n  xs &lt;- listOf g\n  return $ x1 : x2 : xs\n</code></pre>\n\n<p>This has the same type as the built-in <code>listOf</code> function, and can be used in the same way:</p>\n\n<pre><code>useNonSingleton :: Gen Bool\nuseNonSingleton = do\n  xs :: [String] &lt;- nonSingleton arbitrary\n  return $ length xs &gt; 1\n</code></pre>\n\n<p>Here I've taken advantage of <code>Gen a</code> being a <code>Monad</code> so that I could write both the function and the property with <code>do</code> notation, but you can also write it using monadic combinators if you so prefer.</p>\n\n<p>The function simply generates two values, <code>x1</code> and <code>x2</code>, as well as a list <code>xs</code> of arbitrary size (which can be empty), and creates a list of all three. Since <code>x1</code> and <code>x2</code> are guaranteed to be single values, the resulting list will have at least those two values.</p>\n\n<h1>Filtering</h1>\n\n<p>Sometimes you just want to throw away a small subset of generated values. You can to that with the built-in <code>==&gt;</code> combinator, here used directly in a property:</p>\n\n<pre><code>moreThanOne :: (Ord a, Num a) =&gt; Positive a -&gt; Property\nmoreThanOne (Positive i) = i &gt; 1 ==&gt; i &gt; 1\n</code></pre>\n\n<p>While this property is tautological, it demonstrates that the predicate you place to the left of <code>==&gt;</code> ensures that whatever runs on the right-hand side of <code>==&gt;</code> has passed the predicate.</p>\n\n<h1>Existing monadic combinators</h1>\n\n<p>Since <code>Gen a</code> is a <code>Monad</code> instance, you can also use existing <code>Monad</code>, <code>Applicative</code>, and <code>Functor</code> combinators. Here's one that turns any number inside of any <code>Functor</code> into an even number:</p>\n\n<pre><code>evenInt :: (Functor f, Num a) =&gt; f a -&gt; f a\nevenInt = fmap (* 2)\n</code></pre>\n\n<p>Notice that this works for <em>any</em> <code>Functor f</code>, not just for <code>Gen a</code>. Since, however, <code>Gen a</code> is a <code>Functor</code>, you can still use <code>evenInt</code>:</p>\n\n<pre><code>allIsEven :: Gen Bool\nallIsEven = do\n  i :: Integer &lt;- evenInt arbitrary\n  return $ even i\n</code></pre>\n\n<p>The <code>arbitrary</code> function call here creates an unconstrained <code>Integer</code> value. <code>evenInt</code> then makes it even by multiplying it by two.</p>\n\n<h1>Arbitrary newtypes</h1>\n\n<p>You can also use <code>newtype</code> to create your own data containers, and then make them <code>Arbitrary</code> instances:</p>\n\n<pre><code>newtype Odd a = Odd a deriving (Eq, Ord, Show, Read)\n\ninstance (Arbitrary a, Num a) =&gt; Arbitrary (Odd a) where\n  arbitrary = do\n    i &lt;- arbitrary\n    return $ Odd $ i * 2 + 1\n</code></pre>\n\n<p>This also enables you to implement <code>shrink</code>, if you need it.</p>\n\n<p>You can use the <code>newtype</code> in a property like this:</p>\n\n<pre><code>allIsOdd :: Integral a =&gt; Odd a -&gt; Bool\nallIsOdd (Odd i) = odd i\n</code></pre>\n\n<p>The <code>Arbitrary</code> instance uses <code>arbitrary</code> for the type <code>a</code> to generate an unconstrained value <code>i</code>, then doubles it and adds one, thereby ensuring that the value is odd.</p>\n\n<p>Take a look at the <a href=\"http://hackage.haskell.org/package/QuickCheck/docs/Test-QuickCheck.html\" rel=\"nofollow noreferrer\">QuickCheck documentation</a> for many more built-in combinators. I particularly find <code>choose</code>, <code>elements</code>, <code>oneof</code>, and <code>suchThat</code> useful for expressing additional constraints.</p>\n"}], "owner": {"reputation": 1206, "user_id": 783116, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/ZOv9Y.jpg?s=128&g=1", "display_name": "josiah", "link": "https://stackoverflow.com/users/783116/josiah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 1, "accepted_answer_id": 56438741, "answer_count": 1, "score": 1, "last_activity_date": 1559631190, "creation_date": 1559623363, "last_edit_date": 1559631190, "question_id": 56437457, "link": "https://stackoverflow.com/questions/56437457/how-do-you-write-a-new-modifier-in-quickcheck", "title": "How do you write a new modifier in QuickCheck", "body": "<p>I have come across a few instances in my testing with QuickCheck when it would have simplified things to write my own modifiers in some cases, but I'm not exactly sure how one would do this.  In particular, it would be helpful to know how to write a modifier for generators of lists and of numerics (such as <code>Int</code>).  I'm aware of <code>NonEmptyList</code>, and <code>Positive</code> and <code>NonNegative</code>, that are already in the library, but in some instances it would have made my tests clearer if I could have specified something like a list that is not only NonEmpty, but also NonSingleton (so, it has at least 2 elements), or an <code>Int</code> that is greater than 1, not just <code>NonZero</code> or <code>Positive</code>, or an <code>Int(egral)</code> that is even/odd, etc.</p>\n"}, {"tags": ["haskell", "yesod", "one-to-one", "persistent"], "answers": [{"comments": [{"owner": {"reputation": 17, "user_id": 11270452, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-rh2mOaSvJ8E/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3re89iRgdyu8Jwr2suAMVwDDNK4a6w/mo/photo.jpg?sz=128", "display_name": "Manuel", "link": "https://stackoverflow.com/users/11270452/manuel"}, "edited": false, "score": 0, "creation_date": 1559723551, "post_id": 56438575, "comment_id": 99505680, "body": "Thanks! I changed the type signature and it is compiling."}], "tags": [], "owner": {"reputation": 1275, "user_id": 11571245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vkCkX.png?s=128&g=1", "display_name": "typedfern", "link": "https://stackoverflow.com/users/11571245/typedfern"}, "is_accepted": false, "score": 1, "last_activity_date": 1559630365, "creation_date": 1559630365, "answer_id": 56438575, "question_id": 56437338, "link": "https://stackoverflow.com/questions/56437338/how-to-get-the-associated-data-using-the-foreign-key/56438575#56438575", "title": "How to get the associated data using the foreign key", "body": "<p>If you look at <a href=\"https://hackage.haskell.org/package/yesod-persistent-1.6.0.2/docs/Yesod-Persist-Core.html#v:runDB\" rel=\"nofollow noreferrer\">runDB's type signature</a>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>runDB :: YesodDB site a -&gt; HandlerFor site a\n</code></pre>\n\n<p>you'll see what the problem is.</p>\n\n<p>Yesod requires you to do some rather elaborate stuff to actually use the query's results - it isn't simply a (Maybe result). You can find examples <a href=\"https://www.yesodweb.com/book/persistent\" rel=\"nofollow noreferrer\">here</a>; this part in particular:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>people &lt;- runDB $ selectList [] [Asc PersonAge]\ndefaultLayout\n        [whamlet|\n            &lt;ul&gt;\n                $forall Entity personid person &lt;- people\n                    &lt;li&gt;\n                        &lt;a href=@{PersonR personid}&gt;#{personFirstName person}\n        |]\n</code></pre>\n\n<p>Hope this helps.</p>\n"}, {"tags": [], "owner": {"reputation": 17, "user_id": 11270452, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-rh2mOaSvJ8E/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3re89iRgdyu8Jwr2suAMVwDDNK4a6w/mo/photo.jpg?sz=128", "display_name": "Manuel", "link": "https://stackoverflow.com/users/11270452/manuel"}, "is_accepted": false, "score": 0, "last_activity_date": 1559723742, "creation_date": 1559723742, "answer_id": 56456907, "question_id": 56437338, "link": "https://stackoverflow.com/questions/56437338/how-to-get-the-associated-data-using-the-foreign-key/56456907#56456907", "title": "How to get the associated data using the foreign key", "body": "<p>This is compiling</p>\n\n<pre><code>getOrCreateProfile :: UserId -&gt; Handler ProfileId\ngetOrCreateProfile userId = runDB $ do\n    mProfile &lt;- getBy $ UniqueUserId userId\n    case mProfile of\n        Just (Entity pid _) -&gt; return pid\n        Nothing  -&gt; insert $ Profile getTempProfile userId\n</code></pre>\n"}], "owner": {"reputation": 17, "user_id": 11270452, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-rh2mOaSvJ8E/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3re89iRgdyu8Jwr2suAMVwDDNK4a6w/mo/photo.jpg?sz=128", "display_name": "Manuel", "link": "https://stackoverflow.com/users/11270452/manuel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 40, "favorite_count": 0, "answer_count": 2, "score": -1, "last_activity_date": 1559723742, "creation_date": 1559622293, "question_id": 56437338, "link": "https://stackoverflow.com/questions/56437338/how-to-get-the-associated-data-using-the-foreign-key", "title": "How to get the associated data using the foreign key", "body": "<p>I am trying to write a function that look for the profile of a user or create one if it doesn't exists. </p>\n\n<p>I have used getBy and selectFirst to get the profile of a given user, but I get this error:</p>\n\n<p>Couldn't match type \u2018HandlerFor site0\u2019 with \u2018Key\u2019</p>\n\n<p>I am using the scaffolding site with postgres.</p>\n\n<p>This is my model (user and profile have a one-to-one relationship)</p>\n\n<pre><code>User\n    email Text\n    password Text Maybe\n    verkey Text Maybe\n    verified Bool\n    UniqueUser email                                                                                                   \n    deriving Typeable\n\nProfile \n    name Text                                                                                                          \n    userId UserId\n    UniqueName name\n    UniqueUserId userId\n    deriving Typeable\n\n</code></pre>\n\n<p>The function is as follow:</p>\n\n<pre><code>getOrCreateProfile :: UserId -&gt; ProfileId\ngetOrCreateProfile userId = do\n    mProfile &lt;- runDB $ getBy $ UniqueUserId userId                                                                    \n    case mProfile of\n        Just (Entity pid _) -&gt; return pid\n        Nothing  -&gt; undefined -- insert profile\n</code></pre>\n\n<p>The error I am getting is:</p>\n\n<pre><code>    \u2022 Couldn't match type \u2018HandlerFor site0\u2019 with \u2018Key\u2019\n      Expected type: Key (Maybe (Entity Profile))\n        Actual type: HandlerFor site0 (Maybe (Entity Profile))\n    \u2022 In a stmt of a 'do' block:\n        mProfile &lt;- runDB $ getBy $ UniqueUserId userId\n      In the expression:\n        do mProfile &lt;- runDB $ getBy $ UniqueUserId userId\n           case mProfile of\n             Just (Entity pid _) -&gt; pid\n             Nothing -&gt; undefined\n      In an equation for \u2018getOrCreateProfile\u2019:\n          getOrCreateProfile userId\n            = do mProfile &lt;- runDB $ getBy $ UniqueUserId userId\n                 case mProfile of\n                   Just (Entity pid _) -&gt; pid\n                   Nothing -&gt; undefined\n   |\n45 |     mProfile &lt;- runDB $ getBy $ UniqueUserId userId\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n</code></pre>\n\n<p>What am I doing wrong? What's the proper way to do this query?</p>\n"}, {"tags": ["haskell", "category-theory", "free-monad"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 2, "creation_date": 1559625829, "post_id": 56437219, "comment_id": 99469240, "body": "This doesn&#39;t seem possible at all. Conider <code>Free (Integer -&gt;)</code> and <code>Free1 (Integer -&gt;)</code>."}, {"owner": {"reputation": 12941, "user_id": 292731, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/e3f90adedab79538799e2375a9731920?s=128&d=identicon&r=PG", "display_name": "Justin L.", "link": "https://stackoverflow.com/users/292731/justin-l"}, "reply_to_user": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1559626738, "post_id": 56437219, "comment_id": 99469521, "body": "@n.m. do you think that is a limitation of this particular encoding of <code>Free1</code>, or of all &quot;free <code>Bind</code>&quot; implementations in general? (which would imply that my <code>Free1</code> is not a proper free Bind)"}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1559629719, "post_id": 56437219, "comment_id": 99470460, "body": "Hmm I don&#39;t really know..."}, {"owner": {"reputation": 12941, "user_id": 292731, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/e3f90adedab79538799e2375a9731920?s=128&d=identicon&r=PG", "display_name": "Justin L.", "link": "https://stackoverflow.com/users/292731/justin-l"}, "reply_to_user": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1559629895, "post_id": 56437219, "comment_id": 99470524, "body": "I tried playing around with the &quot;final form&quot; of the Free Bind, which I am sure 100% is the actual Free Bind (<code>type FreeBind f a = forall g. Bind g =&gt; (forall x. f x -&gt; g x) -&gt; g a</code>) and satisfies all the free bind laws.  In this version I cannot implement <code>fromFree</code> either, so it might be the case that this is true for all Free Binds."}, {"owner": {"reputation": 12941, "user_id": 292731, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/e3f90adedab79538799e2375a9731920?s=128&d=identicon&r=PG", "display_name": "Justin L.", "link": "https://stackoverflow.com/users/292731/justin-l"}, "reply_to_user": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1559630500, "post_id": 56437219, "comment_id": 99470782, "body": "If it is true that there the free bind is fundamentally incompatible with the free monad, I&#39;m now curious to see why this is the case for <code>Bind</code> and <code>Monad</code>, but not for <code>Apply</code> and <code>Applicative</code>, or <code>Alt</code> and <code>Plus</code>.  Both of these can be properly converted, but not <code>Bind</code> and <code>Monad</code>."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1559969354, "post_id": 56437219, "comment_id": 99595425, "body": "I&#39;m now wondering about the <code>Apply</code> case. Shouldn&#39;t we run into the same problem when it comes to squeezing <code>Pure</code> into <code>data Ap1 f a = Lift (f a) | forall x. Ap (f x) (Ap f (x -&gt; a))</code>? (Or did I mess up my free apply?)"}, {"owner": {"reputation": 12941, "user_id": 292731, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/e3f90adedab79538799e2375a9731920?s=128&d=identicon&r=PG", "display_name": "Justin L.", "link": "https://stackoverflow.com/users/292731/justin-l"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1560117206, "post_id": 56437219, "comment_id": 99622360, "body": "@duplode my Free Apply was <code>data Ap1 f a = forall x. Ap1 (f x) (Ap f (x -&gt; a))</code> :)"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1560119061, "post_id": 56437219, "comment_id": 99622668, "body": "@JustinL. (1) Oops, there was a typo in my <code>Ap1</code> above: I meant <code>data Ap1 f a = Lift (f a) | forall x. Ap1 (f x) (Ap1 f (x -&gt; a))</code>, as I didn&#39;t actually use the free applicative <code>Ap</code> (In any case, it seems our types are equivalent). (2) I might be missing something, but I still don&#39;t see how we might have the <code>a -&gt; Ap1 f a</code> injection needed for handling <code>Pure</code>, even with your <code>Ap1</code> -- the closest thing seems to be <code>\\a -&gt; Ap1 u (Pure (const a))</code>, but in that case I don&#39;t know where to get an <code>u :: f x</code> from."}, {"owner": {"reputation": 12941, "user_id": 292731, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/e3f90adedab79538799e2375a9731920?s=128&d=identicon&r=PG", "display_name": "Justin L.", "link": "https://stackoverflow.com/users/292731/justin-l"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1560137306, "post_id": 56437219, "comment_id": 99625210, "body": "@duplode i&#39;ve written the implementations of the analogous functions here <a href=\"https://github.com/mstksg/functor-combinators/blob/88b1edba8bb30acd37d9b30c0ff63fd9f8725581/src/Data/Functor/Apply/Free.hs#L80-L83\" rel=\"nofollow noreferrer\">github.com/mstksg/functor-combinators/blob/&hellip;</a> :)"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1560167055, "post_id": 56437219, "comment_id": 99635169, "body": "@JustinL. Thanks! Nevermind my objections -- I had lost track of your actual problem statement for a moment there :)"}], "answers": [{"comments": [{"owner": {"reputation": 12941, "user_id": 292731, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/e3f90adedab79538799e2375a9731920?s=128&d=identicon&r=PG", "display_name": "Justin L.", "link": "https://stackoverflow.com/users/292731/justin-l"}, "edited": false, "score": 0, "creation_date": 1560117323, "post_id": 56459482, "comment_id": 99622381, "body": "Ah.  This seems to be the fundamental difference -- &quot;all leaves, or all nodes&quot;.  it&#39;s interesting that <code>Bind</code> gives rise to such a restriction.  This makes sense to me, thank you! :)"}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 4, "last_activity_date": 1559733673, "creation_date": 1559733673, "answer_id": 56459482, "question_id": 56437219, "link": "https://stackoverflow.com/questions/56437219/defining-free-bind-in-a-way-that-is-compatible-with-the-free-monad/56459482#56459482", "title": "Defining Free Bind in a way that is compatible with the Free Monad", "body": "<p>While <code>Free f a</code> is the type of trees with \"<code>f</code>-nodes\" and <code>a</code>-leaves, the \"free Bind-structure\" <code>Free1 f a</code> is the type of such trees with an additional restriction: the children of an <code>f</code>-node are either all leaves or all <code>f</code>-nodes. Thus if we consider binary trees:</p>\n\n<pre><code>data Bin x = Bin x x\n</code></pre>\n\n<p>Then <code>Free Bin a</code> contains the following tree shape, but <code>Free1 Bin a</code> does not:</p>\n\n<pre><code>Impure (Bin\n  (Pure a)\n  (Impure (Bin (Pure a) (Pure a))))\n</code></pre>\n\n<p>because the root node has one leaf and one <code>Bin</code> node as children, while a <code>Free1 Bin a</code> should have either two leaves, or two <code>Bin</code> nodes. Such a pattern could occur deep in a <code>Free</code> tree, so even a partial conversion <code>Free f a -&gt; Maybe (Free1 f a)</code> is not possible with only a <code>Functor f</code> constraint. A <code>Traversable f</code> constraint with an assumption that the traversals are finite makes that conversion possible, but of course it's still not practical for large trees since they must be fully traversed before any output can be produced.</p>\n\n<p>Note that because of the above characterization of <code>Free1</code>, this other definition in terms of <code>Free</code> is not actually equivalent:</p>\n\n<pre><code>data Free1 f a = Free1 (f (Free f a))  -- Not a free Bind\n</code></pre>\n"}], "owner": {"reputation": 12941, "user_id": 292731, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/e3f90adedab79538799e2375a9731920?s=128&d=identicon&r=PG", "display_name": "Justin L.", "link": "https://stackoverflow.com/users/292731/justin-l"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 199, "favorite_count": 1, "accepted_answer_id": 56459482, "answer_count": 1, "score": 9, "last_activity_date": 1559733673, "creation_date": 1559621291, "last_edit_date": 1559666097, "question_id": 56437219, "link": "https://stackoverflow.com/questions/56437219/defining-free-bind-in-a-way-that-is-compatible-with-the-free-monad", "title": "Defining Free Bind in a way that is compatible with the Free Monad", "body": "<p>So we have the free monad: (encoding may vary, but they're all the same)</p>\n\n<pre><code>data Free f a = Pure a\n              | Impure (f (Free f a))\n\ninstance Functor f =&gt; Monad (Free f) where\n    pure = Pure\n    Pure   x &gt;&gt;= f = f x\n    Impure x &gt;&gt;= f = Impure ((&gt;&gt;= f) &lt;$&gt; x)\n\nliftFree :: Functor f =&gt; f a -&gt; Free f a\nliftFree x = Impure (Pure &lt;$&gt; x)\n\nrunFree :: Monad g =&gt; (forall x. f x -&gt; g x) -&gt; Free f a -&gt; g a\nrunFree _ (Pure   x) = pure x\nrunFree f (Impure x) = join (runFree f &lt;$&gt; f x)\n</code></pre>\n\n<p>such that <code>runFree</code> forms a monad homomorphism, which is the defining property of the free monad.</p>\n\n<pre><code>runFree f (pure x) = pure x\nrunFree f (liftFree x &gt;&gt;= liftFree . g) = f x &gt;&gt;= (f . g)\n-- + some other associativity requirements\n</code></pre>\n\n<p>We can also make a similar construction to (what I believe to be) the free <a href=\"https://hackage.haskell.org/package/semigroupoids-5.3.2/docs/Data-Functor-Bind.html\" rel=\"noreferrer\"><code>Bind</code> from semigroupoids</a>, which is a functor with only bind <code>&gt;&gt;-</code>:</p>\n\n<pre><code>data Free1 f a = Done (f a)\n               | More (f (Free1 f a))\n\ninstance Functor f =&gt; Bind (Free f) where\n    Done x &gt;&gt;- f = More (f &lt;$&gt; x)\n    More x &gt;&gt;- f = More ((&gt;&gt;- f) &lt;$&gt; x)\n\nliftFree1 :: f a -&gt; Free1 f a\nliftFree1 = Done\n\nrunFree1 :: Bind g =&gt; (forall x. f x -&gt; g x) -&gt; Free1 f a -&gt; g a\nrunFree1 f (Done x) = f x\nrunFree1 f (More x) = f x &gt;&gt;- runFree1 f\n</code></pre>\n\n<p>and we get the appropriate bind homomorphism:</p>\n\n<p>such that <code>runFree1</code> forms a bind homomorphism, which is the defining property:</p>\n\n<pre><code>runFree1 f (liftFree1 x &gt;&gt;- liftFree1 . g) = f x &gt;&gt;- (f . g)\n-- + some associativity laws\n</code></pre>\n\n<p>Now, these two types are great.  We can convert from <code>Free1</code> to <code>Free</code>, which makes sense:</p>\n\n<pre><code>toFree :: Free1 f a -&gt; Free f a\ntoFree (Done x) = Impure (Pure   &lt;$&gt; x)\ntoFree (More x) = Impure (toFree &lt;$&gt; x)\n</code></pre>\n\n<p>but converting backwards is trickier.  To go from a <code>Free</code> to a <code>Free1</code>, we would have to handle two cases:</p>\n\n<ol>\n<li>The <code>Free</code> is pure, so cannot be represented in <code>Free1</code>.</li>\n<li>The <code>Free</code> is impure, so can be represented in <code>Free1</code>.</li>\n</ol>\n\n<p>It makes sense that these two cases can be handled statically, since we can just match on <code>Pure</code> or <code>Impure</code>.</p>\n\n<p>So a reasonable type signature might be:</p>\n\n<pre><code>fromFree :: Functor f =&gt; Free f a -&gt; Either a (Free1 f a)\n</code></pre>\n\n<p>but I am having problems writing this.</p>\n\n<pre><code>fromFree :: Free f a -&gt; Either a (Free1 f a)\nfromFree (Pure   x) = Left x   -- easy\nfromFree (Impure x) = Right ?? -- a bit harder\n</code></pre>\n\n<p>It looks like the main problem is that we need to decide whether or not to use the <code>Done</code> or the <code>More</code> constructor without ever \"running\" the f.  We need a:</p>\n\n<pre><code>f (Free f a) -&gt; Free1 f a\n</code></pre>\n\n<p>which sounds like it might be troublesome for functors were you can't \"get out\", like <code>IO</code>.</p>\n\n<p>So, this sounds impossible, unless I'm missing something.</p>\n\n<p>There's another encoding that I've tried:</p>\n\n<pre><code>data Free1 f a = Free1 (f (Free f a))\n</code></pre>\n\n<p>this <em>does</em> lets us define <code>fromFree</code>, and it borrows from the <code>NonEmpty</code> construction (<code>data NonEmpty a = a :| [a]</code>).  And I was able to use this approach when defining the \"free <code>Apply</code>\", which was nice.  This does let us write <code>toFree</code>, <code>fromFree</code>, <code>liftFree1</code>, and a <code>Bind</code> instances.  However, I can't seem to write <code>runFree1</code>:</p>\n\n<pre><code>runFree1 :: Bind g =&gt; (forall x. f x -&gt; g x) -&gt; f (Free f a) -&gt; g a\n</code></pre>\n\n<p>as soon as I do anything, I seem to require <code>return :: a -&gt; g a</code>, but we don't have this for all <code>Bind g</code> (I found a possible version that typechecks, but it performs the effects twice and so is not a proper bind homomorphism)</p>\n\n<p>So, while this method gives us <code>fromFree</code>, I can't seem to find a way to write <code>runFree1</code>, which is the very thing that gives it \"free <code>Bind</code>\" capabilities.</p>\n\n<p>Of these two methods, either we:</p>\n\n<ol>\n<li>Have an actual free <code>Bind</code> with <code>runFree1</code>, but it is imcompatible with <code>Free</code> in that you can't \"match\" a <code>Free</code> into either a <code>Free1</code>, or a pure value.</li>\n<li>Have a type that is compatible with <code>Free</code> (maybe a \"nonempty <code>Free</code>\"), but is not actually a free <code>Bind</code> (no <code>runFree1</code>), and defeats the whole purpose.</li>\n</ol>\n\n<p>From this I can make one of two conclusions:</p>\n\n<ol>\n<li>There is some way to make a free Bind <code>Free1</code> that is compatible with <code>Free</code>, but I have not been able to figure it out yet</li>\n<li>Fundamentally, we cannot have a free <code>Bind</code> that is compatible with <code>Free</code>.  This seems to contradict my intuition (we can always immediately decide if a <code>Free</code> is pure or impure, so we should also be able to immediately distinguish between pure (zero effects) or <code>Free1</code>), but maybe there is a deeper reason that I am missing out on?</li>\n</ol>\n\n<p>Which of these is the case?  If #1, what is way, and if #2, what is the deeper reason? :)</p>\n\n<p>Thank you in advance!</p>\n\n<hr>\n\n<p><strong>Edit</strong> To dispel my uncertainty about whether or not I was working with a \"true Free Bind\", I started looking at one that was truly a Free Bind by definition:</p>\n\n<pre><code>newtype Free1 f a = Free1 { runFree1 :: forall g. Bind g =&gt; (forall x. f x -&gt; g x) -&gt; g a }\n</code></pre>\n\n<p>And I can't seem to be able to write <code>fromFree</code> for this one, either.  In the end I seem to need a <code>g (Either a (Free1 a)) -&gt; g a</code>.</p>\n\n<p>If I can't write <code>fromFree</code> for this, then it stands to reason that I can't write <code>fromFree</code> for any implementation of the free bind, since all implementations are isomorphic to this one.</p>\n\n<p>Is there a way to write <code>fromFree</code> for this one, even?  Or is it all impossible :'(  It all worked so well for <code>Alt</code>/<code>Plus</code> and <code>Apply</code>/<code>Applicative</code>.</p>\n"}, {"tags": ["haskell", "functional-programming", "higher-order-functions", "partial-application"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 3, "creation_date": 1559621041, "post_id": 56437049, "comment_id": 99468201, "body": "I mean... same way? It becomes <code>&quot;HAHA &quot; ++ &quot;HEY&quot;</code> and then <code>&quot;HAHA &quot; ++ &quot;HAHA HEY&quot;</code> and then <code>&quot;HAHA HAHA HEY&quot;</code>."}], "answers": [{"tags": [], "owner": {"reputation": 7130, "user_id": 10239789, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/YeHJm.png?s=128&g=1", "display_name": "TrebledJ", "link": "https://stackoverflow.com/users/10239789/trebledj"}, "is_accepted": true, "score": 3, "last_activity_date": 1559622398, "last_edit_date": 1559622398, "creation_date": 1559621899, "answer_id": 56437278, "question_id": 56437049, "link": "https://stackoverflow.com/questions/56437049/haskell-question-about-partial-application/56437278#56437278", "title": "Haskell: Question about Partial Application", "body": "<blockquote>\n  <p>For the first example, I understand that the string was produced by using the concatenation operator in the following manner:</p>\n\n<pre><code>\"HEY\" ++ \" HAHA\"\n\"HEY HAHA\" ++ \" HAHA\"\n\"HEY HAHA HAHA\"\n</code></pre>\n</blockquote>\n\n<p>Instead of directly jumping to the infix expression (i.e. <code>++</code> is in between), it helps if you think in terms of functions.</p>\n\n<pre><code>(++ \" HAHA\") :: [Char] -&gt; [Char]   -- #1 this is a function (++ is partially applied)     \n\"HEY\" :: [Char]\n\n(++ \" HAHA\") \"HEY\"                 -- apply \"HEY\" as an argument to #1\n-- same as \"HEY\" ++ \" HAHA\"\n\n(+) :: (Num a) =&gt; a -&gt; a -&gt; a      -- #2 a binary function\n(+) 1 2                            -- #3 apply 1 and 2 as arguments to #2\n-- same as 1 + 2\n\n-- technically, #3 is curried as\n--    ((+) 1) 2                    -- i.e. (+) 1 is a partially applied function, which is then applied to 2     \n</code></pre>\n\n<p>If you substitute <code>(++ \" HAHA\")</code> into the definition of <code>applyTwice</code>, you get</p>\n\n<pre><code>applyTwice f x = f (f x)\napplyTwice (++ \" HAHA\") \"HEY\" = (++ \" HAHA\") ((++ \" HAHA\") \"HEY\")\n\n                              = (++ \" HAHA\") (\"HEY\" ++ \" HAHA\")\n                              = (++ \" HAHA\") (\"HEY HAHA\")\n                              = \"HEY HAHA\" ++ \" HAHA\"\n                              = \"HEY HAHA HAHA\"\n</code></pre>\n\n<p>Now do the same with <code>applyTwice (\"HAHA \" ++) \"HEY\"</code>.</p>\n\n<pre><code>applyTwice f x = f (f x)\napplyTwice (\"HAHA \" ++) \"HEY\" = (\"HAHA \" ++) ((\"HAHA \" ++) \"HEY\")\n\n                              = (\"HAHA \" ++) (\"HAHA \" ++ \"HEY\")\n                              = (\"HAHA \" ++) (\"HAHA HEY\")\n                              = \"HAHA \" ++ \"HAHA HEY\"\n                              = \"HAHA HAHA HEY\"\n</code></pre>\n"}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 49, "favorite_count": 0, "accepted_answer_id": 56437278, "answer_count": 1, "score": 3, "last_activity_date": 1559667251, "creation_date": 1559619611, "last_edit_date": 1559667251, "question_id": 56437049, "link": "https://stackoverflow.com/questions/56437049/haskell-question-about-partial-application", "title": "Haskell: Question about Partial Application", "body": "<p>I am reading the book 'Learn You a Haskell for Great Good!' by Miran Lipovaca and learning about higher-order functions in Chapter 5.</p>\n\n<p>One of the examples involves the following function:</p>\n\n<pre><code>applyTwice :: (a -&gt; a) -&gt; a -&gt; a\napplyTwice f x = f (f x)\n</code></pre>\n\n<p>The following are examples of the function's output:</p>\n\n<pre><code>ghci&gt; applyTwice (++ \" HAHA\") \"HEY\"\n\"HEY HAHA HAHA\"\n\nghci&gt; applyTwice (\"HAHA \" ++) \"HEY\"\n\"HAHA HAHA HEY\"\n</code></pre>\n\n<p>For the first example, I understand that the string was produced by using the concatenation operator in the following manner:</p>\n\n<pre><code>\"HEY\" ++ \" HAHA\"\n\"HEY HAHA\" ++ \" HAHA\"\n\"HEY HAHA HAHA\"\n</code></pre>\n\n<p>However, I don't understand how the concatenation operator works in the second example. How is the output string \"HAHA HAHA HEY\" produced? Any insights are appreciated. </p>\n"}, {"tags": ["haskell", "type-level-computation"], "answers": [{"comments": [{"owner": {"reputation": 1882, "user_id": 2882307, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ec8370b53eef1b4e53bccdcdf605a282?s=128&d=identicon&r=PG&f=1", "display_name": "John Smith", "link": "https://stackoverflow.com/users/2882307/john-smith"}, "edited": false, "score": 0, "creation_date": 1559597078, "post_id": 56434476, "comment_id": 99463720, "body": "Thank you very much! Is there some kind of tutorial I can follow so I can understand this better? I never really seen the possibility of just lifting a function to the type level."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 4, "last_activity_date": 1559595604, "creation_date": 1559595604, "answer_id": 56434476, "question_id": 56434345, "link": "https://stackoverflow.com/questions/56434345/find-next-factor-of-knownnat-given-a-starting-knownnat-at-type-level/56434476#56434476", "title": "Find next factor of KnownNat given a starting KnownNat at type level", "body": "<p>Shouldn't be too hard. The standard trial-division algorithm, lifted to the type level, seems to do the trick.</p>\n\n<pre><code>{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE UndecidableInstances #-}\nimport GHC.TypeLits\n\ntype FactorGT a b = FactorGTRaw a b (CmpNat (Mod b a) 0)\n\ntype family FactorGTRaw a b v where\n    FactorGTRaw a b EQ = a\n    FactorGTRaw a b _ = FactorGT (a+1) b\n</code></pre>\n\n<p>Try it out in ghci:</p>\n\n<pre><code>&gt; :k! FactorGT 13 100\nFactorGT 13 100 :: Nat\n= 20\n&gt; :k! FactorGT 96 1000\nFactorGT 96 1000 :: Nat\n= 100\n</code></pre>\n"}], "owner": {"reputation": 1882, "user_id": 2882307, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ec8370b53eef1b4e53bccdcdf605a282?s=128&d=identicon&r=PG&f=1", "display_name": "John Smith", "link": "https://stackoverflow.com/users/2882307/john-smith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "accepted_answer_id": 56434476, "answer_count": 1, "score": 2, "last_activity_date": 1559643932, "creation_date": 1559594760, "last_edit_date": 1559643932, "question_id": 56434345, "link": "https://stackoverflow.com/questions/56434345/find-next-factor-of-knownnat-given-a-starting-knownnat-at-type-level", "title": "Find next factor of KnownNat given a starting KnownNat at type level", "body": "<p>I'm working on some Haskell code and I want to define a type that takes two <code>KnownNat</code> and results in the smallest factor of the second <code>KnownNat</code> that is greater then the first.</p>\n\n<p>For instance given the numbers <code>13</code> and <code>100</code> the result would be <code>20</code> since <code>20</code> divides <code>100</code> cleanly and there is no number between <code>13</code> and <code>20</code> that divides <code>100</code> cleanly. Another example is given <code>96</code> and <code>10000</code> the result would be <code>100</code>.</p>\n\n<p>The way I wanted to express this in Haskell is to somehow use the <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-TypeLits.html\" rel=\"nofollow noreferrer\">typelits</a> package to compute it. But I can't really figure out how.</p>\n\n<pre><code>type a b = ...?\n</code></pre>\n\n<p>Any help or pointers are appreciated!</p>\n"}, {"tags": ["haskell", "arguments"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1559582686, "post_id": 56431874, "comment_id": 99458431, "body": "<code>(Node2 a t)</code> is <i>not</i> a list of <code>Tree</code>s, you can use <code>(Node2 a t : rest)</code> for a list that starts with a node, or <code>[Node2 a t]</code> for a singleton list, but anyway, with both, still not <i>all</i> patterns are covered."}, {"owner": {"reputation": 49, "user_id": 10260794, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-Wz-HoLHV3Ts/AAAAAAAAAAI/AAAAAAAAFjE/KiU1b88SaLo/photo.jpg?sz=128", "display_name": "M. Ianniello", "link": "https://stackoverflow.com/users/10260794/m-ianniello"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1559582976, "post_id": 56431874, "comment_id": 99458554, "body": "So I need to put the value &#39;a&#39; in the data structure Tree into the list even if it&#39;s declared outside?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1559583014, "post_id": 56431874, "comment_id": 99458568, "body": "what do you mean with &quot;the value <code>a</code>?"}, {"owner": {"reputation": 49, "user_id": 10260794, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-Wz-HoLHV3Ts/AAAAAAAAAAI/AAAAAAAAFjE/KiU1b88SaLo/photo.jpg?sz=128", "display_name": "M. Ianniello", "link": "https://stackoverflow.com/users/10260794/m-ianniello"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1559583146, "post_id": 56431874, "comment_id": 99458618, "body": "Node2 a [Tree a]  The first parameter a. Sorry, I used value instead of parameter."}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1559595881, "post_id": 56432079, "comment_id": 99463338, "body": "That second definition of <code>degree</code> is way cute!"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 4, "last_activity_date": 1559584190, "last_edit_date": 1559584190, "creation_date": 1559583301, "answer_id": 56432079, "question_id": 56431874, "link": "https://stackoverflow.com/questions/56431874/how-should-i-pass-correctly-the-list-parameter-in-this-way-the-interpreter-give/56432079#56432079", "title": "How should I pass correctly the list parameter? In this way the interpreter gives me error for expected type", "body": "<p>It does not seem to make much sense to define a <code>degree</code> function with type <code>degree :: [Tree a] -&gt; Int</code>. If I query for the degree of a <em>list</em> of trees, I would expect a list of numbers. Especially since that list can contain a lot of different trees that are <em>not</em> the subtrees of a larger tree.</p>\n\n<p>It makes more sense to define a function <code>degree :: Tree a -&gt; Int</code> to calculate the degree of that specific tree. We can thus implement this as:</p>\n\n<pre><code>degree :: <b>Tree a</b> -&gt; Int\ndegree Void2 = 0\ndegree (Node2 _ t) = max (length t) (maximum (map degree t))</code></pre>\n\n<p>it however contains a problem here: if <code>Node2</code> has <em>no</em> children, then <code>map degree t</code>, will return an empty list, and <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:maximum\" rel=\"nofollow noreferrer\"><strong><code>maximum :: Ord a =&gt; [a] -&gt; a</code></strong></a> on an empty list will raise an error. We can however pass the <code>length t</code> as one of the elements, like:</p>\n\n<pre><code>degree :: <b>Tree a</b> -&gt; Int\ndegree Void2 = 0\ndegree (Node2 _ t) = maximum (length t : map degree t)</code></pre>\n\n<p>we here thus eliminated the list input from your code, as well as the second clause, since an empty list has no counterpart as tree itsef. The above is indeed a way to calculate the <em>degree</em> of a <em>tree</em>.</p>\n\n<p>We can here use the underscore (<code>_</code>) for the first parameter of the <code>Node2</code> data constructor, since we are <em>not</em> interested in the value of the node itself.</p>\n\n<p>We could also put more logic in another function <code>children :: Tree a -&gt; [Tree a]</code>, like:</p>\n\n<pre><code>children :: Tree a -&gt; [Tree a]\nchildren Void2 = []\nchildren (Node2 _ t) = t</code></pre>\n\n<p>in which case we can define <code>degree</code> simply as:</p>\n\n<pre><code>import Control.Applicative(liftA2)\n\ndegree :: Tree a -&gt; Int\ndegree = maximum . liftA2 (:) length (map degree) . children</code></pre>\n"}], "owner": {"reputation": 49, "user_id": 10260794, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-Wz-HoLHV3Ts/AAAAAAAAAAI/AAAAAAAAFjE/KiU1b88SaLo/photo.jpg?sz=128", "display_name": "M. Ianniello", "link": "https://stackoverflow.com/users/10260794/m-ianniello"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 55, "favorite_count": 0, "accepted_answer_id": 56432079, "answer_count": 1, "score": 2, "last_activity_date": 1559595742, "creation_date": 1559582335, "last_edit_date": 1559595742, "question_id": 56431874, "link": "https://stackoverflow.com/questions/56431874/how-should-i-pass-correctly-the-list-parameter-in-this-way-the-interpreter-give", "title": "How should I pass correctly the list parameter? In this way the interpreter gives me error for expected type", "body": "<p>I'd like to find the node with the maximum number of children in the list of trees.</p>\n\n<p>I tried passing the parameter as 't' , as a singleton '[t]', as pattern matching '(t:ts)', as '[Tree t]'. None of the above worked.</p>\n\n<pre><code>data Tree a = Void2 | Node2 a [Tree a] deriving (Eq,Show)\n\n\ndegree [Void2] = 0\ndegree [] = 0\ndegree (Node2 a t) = max (length t) (maximum (map degree t))\n</code></pre>\n\n<p>This is the error that the interpreter gives to me</p>\n\n<pre><code>Couldn't match expected type \u2018[Tree a0]\u2019\n                  with actual type \u2018Tree a\u2019\n    \u2022 In the pattern: Node2 a t\n      In an equation for \u2018degree\u2019:\n          degree (Node2 a t) = max (length t) (maximum (map degree t))\n    \u2022 Relevant bindings include\n        degree :: Tree a -&gt; Int (bound at Esercizi_Haskell.hs:67:1)\n   |\n   | degree (Node2 a t) = max (length t) (maximum (map degree t))\n</code></pre>\n"}, {"tags": ["haskell", "category-abstractions"], "answers": [{"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1559592317, "post_id": 56430224, "comment_id": 99462029, "body": "This is correct, but only half of the story. <code>(&lt;&gt;)</code> also uses <code>RMS</code> but at that point we don&#39;t need to require an <code>Ord</code> constraint. That&#39;s because we already have one from the GADT we pattern matched."}], "tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": false, "score": 2, "last_activity_date": 1559575000, "creation_date": 1559575000, "answer_id": 56430224, "question_id": 56429937, "link": "https://stackoverflow.com/questions/56429937/difference-of-constraints-in-semigroup-and-monoid-instances/56430224#56430224", "title": "Difference of constraints in Semigroup and Monoid instances", "body": "<blockquote>\n  <p>Why Monoid instance need (Ord a, Ord b) constraints while Semigroup instance doesn't?</p>\n</blockquote>\n\n<p>Try removing the constraint and having GHC tell you why.</p>\n\n<pre><code>ac.hs:33:14: error:\n    \u2022 No instance for (Ord a) arising from a use of \u2018RMS\u2019\n      Possible fix:\n        add (Ord a) to the context of the instance declaration\n    \u2022 In the expression: RMS $ M.empty\n      In an equation for \u2018mempty\u2019: mempty = RMS $ M.empty\n      In the instance declaration for \u2018Monoid (RelationMS a b)\u2019\n   |\n33 |     mempty = RMS $ M.empty\n   |\n</code></pre>\n\n<p>So <code>RMS</code> requires <code>Ord a</code>?  You said:</p>\n\n<pre><code>  RMS :: (Ord a, Ord b) =&gt; Map a (Set b) -&gt; RelationMS a b\n</code></pre>\n\n<p>So, yup.</p>\n"}, {"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 8, "last_activity_date": 1559575096, "creation_date": 1559575096, "answer_id": 56430252, "question_id": 56429937, "link": "https://stackoverflow.com/questions/56429937/difference-of-constraints-in-semigroup-and-monoid-instances/56430252#56430252", "title": "Difference of constraints in Semigroup and Monoid instances", "body": "<p>This certainly has nothing to do with the category instances.</p>\n\n<p>The <code>Semigroup</code> instance does, at least conceptually, also require <code>Ord</code>, however you've already packed that in the GADT (except in the <code>Id</code> case, where it's not needed because it's trivial), so there's no need to mention the constraint in the instance head.</p>\n\n<p>For <code>mempty</code> however, you don't <em>have</em> a <code>RelationMS</code> value at hand from which you could read out the <code>(Ord a, Ord b)</code> constraints. Quite the opposite: you need to <em>provide</em> these constraints, because you're now trying to wrap up such a GADT! That's why the <code>Monoid</code> instance needs the constraint in its head, but the <code>Semigroup</code> one doesn't.</p>\n"}], "owner": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 114, "favorite_count": 0, "accepted_answer_id": 56430252, "answer_count": 2, "score": 2, "last_activity_date": 1559575096, "creation_date": 1559573940, "question_id": 56429937, "link": "https://stackoverflow.com/questions/56429937/difference-of-constraints-in-semigroup-and-monoid-instances", "title": "Difference of constraints in Semigroup and Monoid instances", "body": "<p>Why Monoid instance need (Ord a, Ord b) constraints while Semigroup instance doesn't?</p>\n\n<p>Does this depend on the Category.Constrained class or the use of GADT to define the data type?</p>\n\n<pre><code>{-# LANGUAGE GADTs, TypeFamilies, ConstraintKinds, StandaloneDeriving #-}\n\nmodule Question3 where\n\nimport Control.Category.Constrained as CC\nimport Data.Set as S\nimport Data.Map as M\n\ndata RelationMS a b where\n  IdRMS :: RelationMS a a\n  RMS :: (Ord a, Ord b) =&gt; Map a (Set b) -&gt; RelationMS a b \nderiving instance (Show a, Show b) =&gt; Show (RelationMS a b)\n\nRMS mp2 `compRMS` RMS mp1\n  | M.null mp2 || M.null mp1 = RMS M.empty\n  | otherwise = RMS $ M.foldrWithKey \n        (\\k s acc -&gt; M.insert k (S.foldr (\\x acc2 -&gt; case M.lookup x mp2 of\n                                                    Nothing -&gt; acc2\n                                                    Just s2 -&gt; S.union s2 acc2\n                                         ) S.empty s\n                                ) acc\n        ) M.empty mp1\n\ninstance Category RelationMS where\n    type Object RelationMS o = Ord o\n    id = IdRMS\n    (.) = compRMS\n\ninstance Semigroup (RelationMS a b) where \n    RMS r1 &lt;&gt; RMS r2 = RMS $ M.foldrWithKey (\\k s acc -&gt; M.insertWith S.union k s acc) r1  r2 \n\ninstance (Ord a, Ord b) =&gt; Monoid (RelationMS a b) where\n    mempty = RMS $ M.empty\n    mappend = (&lt;&gt;)\n</code></pre>\n"}, {"tags": ["haskell", "liquid-haskell"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1559557777, "post_id": 56425209, "comment_id": 99445619, "body": "I can&#39;t reproduce. With <code>LiquidHaskell Version 0.8.6.0</code> it compiles here."}, {"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1559557864, "post_id": 56425209, "comment_id": 99445672, "body": "hm, my installation is too <code>LiquidHaskell Version 0.8.6.0, Git revision fd35e1c17500ebe706d99260921a8e833561cdde</code>"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1559558566, "post_id": 56425209, "comment_id": 99446025, "body": "Mine prints <code>no git information</code>. A cabal file I recently installed asks for commit <code>574d17ba012dffcff5a736e15cd0a603bf0f558d</code>. I&#39;m not completely certain, though (why the installed version shows no git info?)."}, {"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1559558935, "post_id": 56425209, "comment_id": 99446206, "body": "I am newer even... Very strange"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1559560666, "post_id": 56425209, "comment_id": 99447048, "body": "I don&#39;t know what to suggest. Maybe ensure you have a recent Z3 solver, which is exploited by LH."}, {"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1559565200, "post_id": 56425209, "comment_id": 99449405, "body": "Hm, LH does not work with last Z3: <code>:1:1-1:1: Error   crash: SMTLIB2 respSat = Error &quot;line 13 column 13: invalid sort definition, sort already declared&#47;defined&quot;</code>. Also it does not work with 1st and last CVC4 (broken pipe) and with last MathSat."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1559617735, "post_id": 56425209, "comment_id": 99467645, "body": "It does appear to be a tooling problem. LH does not work with the latest GHC, preventing me from trying it out right now, but the online system agrees your code is fine (e.g. try here <a href=\"http://goto.ucsd.edu:8090/index.html\" rel=\"nofollow noreferrer\">goto.ucsd.edu:8090/index.html</a>)."}], "owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 678, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1559556769, "creation_date": 1559556769, "question_id": 56425209, "link": "https://stackoverflow.com/questions/56425209/canonical-way-to-fix-error-with-data-text-head-in-liquid-haskell", "title": "Canonical way to fix error with Data.Text.head in Liquid Haskell?", "body": "<p>I have code:</p>\n\n<pre><code>myfun c t = if c == '/' &amp;&amp; T.length t &gt; 0 &amp;&amp; '/' == T.head t then t else T.singleton c &lt;&gt; t\n</code></pre>\n\n<p>When I run LH on it (<code>stack exec liquid -- MyFile.hs</code>) I get error:</p>\n\n<pre><code>Error: Liquid Type Mismatch\n\n35 |           rmSlash c t = if c == '/' &amp;&amp; T.length t &gt;= 1 &amp;&amp; '/' == T.head t then t else T.singleton c &lt;&gt; t\n                                                                            ^\n\nInferred type\n    VV : {v : Data.Text.Internal.Text | 0 &lt;= tlen v\n                                        &amp;&amp; tlen v == stringlen v\n                                        &amp;&amp; v == t}\n\nnot a subtype of Required type\n    VV : {VV : Data.Text.Internal.Text | 1 &lt;= tlen VV}\n\nIn Context\n    t : {t : Data.Text.Internal.Text | 0 &lt;= tlen t\n                                        &amp;&amp; tlen t == stringlen t}\n</code></pre>\n\n<p>I am not sure what does it mean, seems that LH thinks the call of <code>T.head</code> is unsafe. But I have a check of the length with <code>T.length t &gt; 0</code>! What is the canonical way to fix this problem, so LH could pass the verification? More interesting is without rewriting of the code, with LH only.</p>\n"}, {"tags": ["haskell", "functor", "category-theory"], "comments": [{"owner": {"reputation": 15567, "user_id": 3656904, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c8dbd58d3b477ad0e5889bc60625e7e8?s=128&d=identicon&r=PG&f=1", "display_name": "talex", "link": "https://stackoverflow.com/users/3656904/talex"}, "edited": false, "score": 0, "creation_date": 1559544239, "post_id": 56422226, "comment_id": 99439394, "body": "You mean something like tuple when you don&#39;t know should you apply function to first value or second?"}, {"owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "reply_to_user": {"reputation": 15567, "user_id": 3656904, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c8dbd58d3b477ad0e5889bc60625e7e8?s=128&d=identicon&r=PG&f=1", "display_name": "talex", "link": "https://stackoverflow.com/users/3656904/talex"}, "edited": false, "score": 0, "creation_date": 1559545717, "post_id": 56422226, "comment_id": 99439983, "body": "@talex No, if you treat a tuple of (a, b) as a functor over b, then the result of fmap is (a, c), from which it&#39;s very clear which value shoud the function b -&gt; c be applied to."}, {"owner": {"reputation": 15567, "user_id": 3656904, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c8dbd58d3b477ad0e5889bc60625e7e8?s=128&d=identicon&r=PG&f=1", "display_name": "talex", "link": "https://stackoverflow.com/users/3656904/talex"}, "edited": false, "score": 0, "creation_date": 1559545893, "post_id": 56422226, "comment_id": 99440047, "body": "Agree. Now I&#39;m curious too."}, {"owner": {"reputation": 8440, "user_id": 402428, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b17015101f2649d332c389337897816b?s=128&d=identicon&r=PG", "display_name": "michid", "link": "https://stackoverflow.com/users/402428/michid"}, "edited": false, "score": 2, "creation_date": 1559546445, "post_id": 56422226, "comment_id": 99440276, "body": "Functor in Haskell can always be derived. Bartosz Milewski talks about this in his book *Category Theory for Programmers*[1]. I need to look up the exact reference and details myself but it has to do with functors in Haskell forming some sort of an algebra.   [1] <a href=\"https://bartoszmilewski.com/2014/10/28/category-theory-for-programmers-the-preface/\" rel=\"nofollow noreferrer\">bartoszmilewski.com/2014/10/28/&hellip;</a>"}, {"owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "reply_to_user": {"reputation": 8440, "user_id": 402428, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b17015101f2649d332c389337897816b?s=128&d=identicon&r=PG", "display_name": "michid", "link": "https://stackoverflow.com/users/402428/michid"}, "edited": false, "score": 0, "creation_date": 1559546818, "post_id": 56422226, "comment_id": 99440421, "body": "@michid I believe functors can always be derived. I&#39;m curious of whether this is also true for other type classes generally? For example, if I do proof search as in dependently typed languages such as Idris, the result of fmap of Functor List can also be [], but it does not confirm to the fmap id law, and haskell does not have a deriving mechanism that check laws."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 5, "creation_date": 1559546841, "post_id": 56422226, "comment_id": 99440433, "body": "Foldable, Traversable, and Semigroup all have symmetries which allow them to be lawfully instantiated in multiple distinct ways, which is one sense of nontriviality at least"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 1, "creation_date": 1559585022, "post_id": 56422226, "comment_id": 99459373, "body": "@luqui, if you use an Atkey-style indexed applicative to define a notion of traversable for type-aligned collections, then you should recover uniqueness."}], "answers": [{"tags": [], "owner": {"reputation": 8440, "user_id": 402428, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b17015101f2649d332c389337897816b?s=128&d=identicon&r=PG", "display_name": "michid", "link": "https://stackoverflow.com/users/402428/michid"}, "is_accepted": false, "score": 9, "last_activity_date": 1559641049, "last_edit_date": 1559641049, "creation_date": 1559548140, "answer_id": 56423106, "question_id": 56422226, "link": "https://stackoverflow.com/questions/56422226/example-of-non-trivial-functors/56423106#56423106", "title": "Example of non-trivial functors", "body": "<p>There are no non-trivial functors in the sense of the question. All functors can be derived mechanically as sums (<code>Either</code>) and products (<code>Tuple</code>) of the <code>Identity</code> and the <code>Const</code> functor. See the section about <a href=\"https://bartoszmilewski.com/2015/02/03/functoriality/\" rel=\"nofollow noreferrer\">Functorial Algebraic Data Types</a> for how this construction works in detail. </p>\n\n<p>On a higher level of abstraction this works because Haskell's type form a <a href=\"https://bartoszmilewski.com/2015/03/13/function-types/\" rel=\"nofollow noreferrer\">Cartesian Closed Category</a> where terminal objects, all products and all exponentials exist. </p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1559587725, "post_id": 56423175, "comment_id": 99460362, "body": "Why might it not be a functor if reduction diverges? If you choose a deterministic reduction strategy in <code>Red1</code>, define <code>data Blue t where BlueStep :: Red1 t t&#39; -&gt; Blue t&#39; -&gt; Blue t</code>. (For a non-deterministic strategy, things get kind of ugly, because you have to separate out all the overlapping rules). Now you can consume <code>Red t a</code> alongside <code>Blue t</code>. At each step, the <code>Red1 t t&#39;</code> in the <code>Blue t</code> proves that <code>t</code> is not <code>S</code>."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1559602507, "post_id": 56423175, "comment_id": 99465139, "body": "@dfeuer, hm I&#39;m not sure I&#39;m following.  Sure we can get that <code>t</code> is not <code>S</code> at each step, but in order to prove functorhood we need that at <i>every</i> step"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1559619107, "post_id": 56423175, "comment_id": 99467855, "body": "I haven&#39;t <i>quite</i> gotten there, but <a href=\"https://gist.github.com/treeowl/a381c329ce740ae911bc62539eb8bb51\" rel=\"nofollow noreferrer\">this gist</a> sets up the framework I sketched, and goes much of the way toward expressing a proof of divergence for a particular example."}], "tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": false, "score": 13, "last_activity_date": 1559620874, "last_edit_date": 1559620874, "creation_date": 1559548441, "answer_id": 56423175, "question_id": 56422226, "link": "https://stackoverflow.com/questions/56422226/example-of-non-trivial-functors/56423175#56423175", "title": "Example of non-trivial functors", "body": "<p>Here's kind of a fun argument I just stumbled on.  (It's late so I wonder if it will be sensical tomorrow)</p>\n\n<p>We can construct the type of proofs of <a href=\"https://en.wikipedia.org/wiki/SKI_combinator_calculus\" rel=\"nofollow noreferrer\">SK</a> reducibility as a GADT:</p>\n\n<pre><code>infixl 9 :%:\ndata Term = S | K | Term :%: Term\n\n-- small step, you can get from t to t' in one step\ndata Red1 t t' where\n    Red1S :: Red1 (S :%: x :%: y :%: z) (x :%: z :%: (y :%: z))\n    ...\n</code></pre>\n\n<p>Now let's make a type which hides its functorhood at the end of a reduction chain.</p>\n\n<pre><code>data Red t a where\n    RedStep :: Red1 t t' -&gt; Red t' a -&gt; Red t a\n    RedK    :: a                     -&gt; Red K a\n    RedS    :: (a -&gt; Bool)           -&gt; Red S a\n</code></pre>\n\n<p>Now <code>Red t</code> is a <code>Functor</code> if <code>t</code> normalizes to <code>K</code>, but not if it normalizes to <code>S</code> -- an undecidable problem.  So perhaps you can still follow a \"simple set of rules\", but if you allow GADTs, the rules have to be powerful enough to compute anything.</p>\n\n<p>(There is an alternative formulation which I find rather elegant, but maybe less demonstrative: if you drop the <code>RedK</code> constructor, then <code>Red t</code> is a <code>Functor</code> if and only if the type system can express that the reduction of <code>t</code> <em>diverges</em> -- and sometimes it diverges but you can't prove it, and my mind boggles about whether it's really a functor in that case or not)</p>\n"}, {"tags": [], "owner": {"reputation": 1610, "user_id": 11257715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7ef71a9bfa4abd30cb98cbb290b909?s=128&d=identicon&r=PG", "display_name": "moonGoose", "link": "https://stackoverflow.com/users/11257715/moongoose"}, "is_accepted": false, "score": 4, "last_activity_date": 1559548765, "creation_date": 1559548765, "answer_id": 56423249, "question_id": 56422226, "link": "https://stackoverflow.com/questions/56422226/example-of-non-trivial-functors/56423249#56423249", "title": "Example of non-trivial functors", "body": "<p>It's a bit cheaty, but here we go. According to <a href=\"https://gitlab.haskell.org/ghc/ghc/wikis/commentary/compiler/derive-functor\" rel=\"nofollow noreferrer\">this</a> then functor cannot be derived automatically when there's a constraint on the type, eg.</p>\n\n<pre><code>data A a where\n    A1 :: (Ord a) =&gt; a -&gt; A a\nderiving instance Functor A -- doesn't work\n</code></pre>\n\n<p>and indeed, if (say) we wrote a manual version, it wouldn't work either.</p>\n\n<pre><code>instance Functor A where\n    fmap f (A1 a) = A1 (f a) -- Can't deduce Ord for f a\n</code></pre>\n\n<p>However, because all the algorithm's doing is checking that no constraint exists, we can introduce a typeclass of which every type is a member.</p>\n\n<pre><code>class C c\ninstance C c\n</code></pre>\n\n<p>Now proceeding as above with <code>C</code> instead of <code>Ord</code>,</p>\n\n<pre><code>data B b where\n    B1 :: (C b) =&gt; b -&gt; B b\n\nderiving instance Functor B -- doesn't work\n\ninstance Functor B where\n    fmap f (B1 b) = B1 (f b) -- does work!\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 3, "creation_date": 1559585842, "post_id": 56425078, "comment_id": 99459664, "body": "Most of the usual <code>Functor</code> instances are valid even with bottoms, I believe. Here&#39;s a simple type GHC can&#39;t derive <code>Functor</code> for: <code>data Foo a = Foo (a -&gt; Bool) !Void</code>. There&#39;s another way contravariance can get in the way: <code>newtype Bar f a = Bar (f a -&gt; Bool)</code>. GHC can&#39;t derive the perfectly valid instance <code>instance Contravariant f =&gt; Functor (Bar f) where fmap f (Bar g) = Bar (g . contramap f)</code>. The main trouble is that adding <code>Contravariant</code> into the deriving mix leads to be multiple potential instances (with incompatible constraints) for things like <code>newtype Baz f g a = Baz (f (g a))</code>."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 10, "last_activity_date": 1559557330, "last_edit_date": 1559557330, "creation_date": 1559556305, "answer_id": 56425078, "question_id": 56422226, "link": "https://stackoverflow.com/questions/56422226/example-of-non-trivial-functors/56425078#56425078", "title": "Example of non-trivial functors", "body": "<p>Explicitly empty parametric types can be made into functors automatically:</p>\n\n<pre><code>data T a deriving Functor\n</code></pre>\n\n<p>However, implicitly empty ones can not:</p>\n\n<pre><code>import Data.Void\ndata T a = K a (a -&gt; Void)\n    deriving Functor  -- fails\n{-\nerror:\n    \u2022 Can't make a derived instance of \u2018Functor T\u2019:\n        Constructor \u2018K\u2019 must not use the type variable in a function argument\n    \u2022 In the data declaration for \u2018T\u2019\n-}\n</code></pre>\n\n<p>However,</p>\n\n<pre><code>instance Functor T where\n   fmap f (K x y) = absurd (y x)\n</code></pre>\n\n<p>is arguably a legal instance.</p>\n\n<p>One could argue that, exploiting bottoms, one can find a counterexample to the functor laws for the instance above. In such case, however, I wonder if all the \"standard\" functor instances are actually lawful, even in the presence of bottoms. (Maybe they are?)</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1559640942, "post_id": 56436891, "comment_id": 99475760, "body": "Where both sets of constraints hold (i.e., when both <code>f</code> and <code>g</code> have phantom parameters), the instances have the same behavior. So I&#39;d say this is about incompatible constraints rather than different behaviors."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 1, "last_activity_date": 1559618046, "creation_date": 1559618046, "answer_id": 56436891, "question_id": 56422226, "link": "https://stackoverflow.com/questions/56422226/example-of-non-trivial-functors/56436891#56436891", "title": "Example of non-trivial functors", "body": "<p>There is a standard type in <code>base</code> called <code>Compose</code> defined like this:</p>\n\n<pre><code>newtype Compose f g a = Compose { getCompose :: f (g a) }\n</code></pre>\n\n<p>The derived <code>Functor</code> instance is implemented this way:</p>\n\n<pre><code>instance (Functor f, Functor g) =&gt; Functor (Compose f g) where\n    fmap f (Compose v) = Compose (fmap (fmap f) v)\n</code></pre>\n\n<p>But there is another perfectly lawful instance with different behavior:</p>\n\n<pre><code>instance (Contravariant f, Contravariant g) =&gt; Functor (Compose f g) where\n    fmap f (Compose v) = Compose (contramap (contramap f) v)\n</code></pre>\n\n<p>To me, the fact that two distinct instances are available for <code>Compose</code> suggests to me that no set of rules can be automatically applied to cover all possible cases.</p>\n"}], "owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1120, "favorite_count": 1, "answer_count": 5, "score": 13, "last_activity_date": 1559641049, "creation_date": 1559544010, "last_edit_date": 1559561676, "question_id": 56422226, "link": "https://stackoverflow.com/questions/56422226/example-of-non-trivial-functors", "title": "Example of non-trivial functors", "body": "<p>In Haskell, functors can almost always be derived, is there any case where a type is a functor and satisfies functor laws (such as <code>fmap id == id</code>) but cannot be derived according to a simple set of rules?</p>\n\n<p>And what about Foldable, Traversable, Semigroup and others? Is there any non-trivial cases available?</p>\n"}, {"tags": ["haskell", "cabal", "ghci"], "answers": [{"comments": [{"owner": {"reputation": 7576, "user_id": 480398, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/3468d23f15a9f631136b508b967b0fbe?s=128&d=identicon&r=PG", "display_name": "hvr", "link": "https://stackoverflow.com/users/480398/hvr"}, "edited": false, "score": 1, "creation_date": 1559682622, "post_id": 56419548, "comment_id": 99496116, "body": "btw, in case the executable&#39;s name is not unique in the current build-plan, you can qualify it by prefixing it by <code>exe:</code> or even <code>&lt;pkgname&gt;:exe:</code>"}], "tags": [], "owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "is_accepted": true, "score": 4, "last_activity_date": 1559516100, "creation_date": 1559516100, "answer_id": 56419548, "question_id": 56419432, "link": "https://stackoverflow.com/questions/56419432/what-is-the-cabal-equivalent-of-stack-ghci-appexeexecutable/56419548#56419548", "title": "What is the cabal equivalent of `stack ghci app:exe:executable`?", "body": "<p><a href=\"https://cabal.readthedocs.io/en/latest/nix-local-build.html#cabal-v2-repl\" rel=\"nofollow noreferrer\">https://cabal.readthedocs.io/en/latest/nix-local-build.html#cabal-v2-repl</a></p>\n\n<pre><code>cabal v2-repl executableNameGoesHere\n</code></pre>\n"}], "owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "accepted_answer_id": 56419548, "answer_count": 1, "score": 3, "last_activity_date": 1559516642, "creation_date": 1559514891, "last_edit_date": 1559516642, "question_id": 56419432, "link": "https://stackoverflow.com/questions/56419432/what-is-the-cabal-equivalent-of-stack-ghci-appexeexecutable", "title": "What is the cabal equivalent of `stack ghci app:exe:executable`?", "body": "<p>I've previously used <code>stack ghci app:exe:executable</code> to get a list of any errors in my Haskell project managed via cabal.</p>\n\n<p>However now that I'm not using stack, how would I achieve the above (essentially load all the modules from the executable defined in the cabal project file)?</p>\n"}, {"tags": ["haskell", "aeson", "wreq"], "answers": [{"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": false, "score": 0, "last_activity_date": 1559672554, "last_edit_date": 1559672554, "creation_date": 1559671344, "answer_id": 56449163, "question_id": 56419201, "link": "https://stackoverflow.com/questions/56419201/creating-an-aeson-model-from-two-wreq-api-calls/56449163#56449163", "title": "Creating an Aeson model from two wreq API calls", "body": "<p>As you undoubtedly know, unlike Javascript objects, Haskell ADTs aren't extensible, so you can't simple \"add a field\".  In certain circumstances, it might make sense to include a field with a <code>Maybe</code> type originally set to <code>Nothing</code> that then gets populated.  Rarely, it might make sense to perform the very unsafe operation of including the field with it's final type but its values initialized to bottom (i.e., <code>undefined</code>) and populated it later.</p>\n\n<p>Alternatively, you might switch to some kind of explicitly extensible record type, like <code>HList</code>.</p>\n\n<p>However, the most straightforward approach, and the one that makes use of the Haskell type system as intended, is to introduce a new type to represent a track augmented with genre information.  If you have additional data types that incorporate <code>Track</code> fields which you want to reuse, they can be made polymorphic in the track type.  So, given your data types above, you would introduce the new type:</p>\n\n<pre><code>data Track' = Track'\n  { playedAt :: String\n  , externalUrls :: String\n  , name :: String\n  , artists :: [Artist]\n  , genres :: [Genre]     -- added field\n  , explicit :: Bool\n  }\n</code></pre>\n\n<p>(which requires the <code>DuplicateRecordFields</code> extension to coexist with <code>Track</code>) and make the dependent types polymorphic in the track type:</p>\n\n<pre><code>data Tracks trk = Tracks\n  { tracks :: [trk]\n  }\n\ndata RecentlyPlayed trk = RecentlyPlayed\n  { recentlyPlayed :: Tracks trk\n  , next :: String\n  }\n</code></pre>\n\n<p>Conversion of a playlist can be accomplished using:</p>\n\n<pre><code>addGenre :: (Artist -&gt; [Genre]) -&gt; RecentlyPlayed Track -&gt; RecentlyPlayed Track'\naddGenre g (RecentlyPlayed (Tracks trks) nxt)\n  = RecentlyPlayed (Tracks (map cvtTrack trks)) nxt\n  where\n    cvtTrack (Track p e n a ex) = Track' p e n a (concatMap g a) ex\n</code></pre>\n\n<p>or alternatively using the <code>RecordWildCards</code> extension, which will be much more readable especially for very large records:</p>\n\n<pre><code>addGenre' :: (Artist -&gt; [Genre]) -&gt; RecentlyPlayed Track -&gt; RecentlyPlayed Track'\naddGenre' g RecentlyPlayed{recentlyPlayed = Tracks trks, ..}\n  = RecentlyPlayed{recentlyPlayed = Tracks (map cvtTrack trks), ..}\n  where\n    cvtTrack (Track{..}) = Track' { genres = concatMap g artists, .. }\n</code></pre>\n\n<p>or using a Lens approach, or even using <code>deriving (Functor)</code> instances with all the heavy lifting done by <code>fmap</code>:</p>\n\n<pre><code>addGenre'' :: (Artist -&gt; [Genre]) -&gt; RecentlyPlayed Track -&gt; RecentlyPlayed Track'\naddGenre'' g = fmap cvtTrack\n  where\n    cvtTrack (Track{..}) = Track' { genres = concatMap g artists, .. }\n</code></pre>\n\n<p>though the functor approach doesn't scale very well if multiple augmentations are in place (e.g., if you find you want to introduce a <code>RecentlyPlayed artist track</code> type).  A <code>Data.Generics</code> approach might work well in this case.</p>\n\n<p>From a more general design standpoint, though, you might want to ask yourself why you're trying to augment the <code>RecentlyPlayed</code> representation this way.  This is a good representation of the required parts of the underlying Javascript API, but it's a poor representation to work with in the rest of your program logic.</p>\n\n<p>Presumably, the rest of your program deals primarily with a list of tracks, and shouldn't concern itself with following <code>next</code> URLs, so why not generate the full list of genre-augmented tracks directly?</p>\n\n<p>That is, given an initial <code>RecentlyPlayed</code> list and some IO functions to get the next list and look up genre information:</p>\n\n<pre><code>firstRecentlyPlayed :: RecentlyPlayed\ngetNextRecentlyPlayed :: String -&gt; IO RecentlyPlayed\ngetGenresByArtist :: Artist -&gt; IO [Genre]\n</code></pre>\n\n<p>you'd probably want something like:</p>\n\n<pre><code>getTracks :: IO [Track']\ngetTracks = go firstRecentlyPlayed\n  where go :: RecentlyPlayed -&gt; IO [Track']\n        go (RecentlyPlayed (Tracks trks) next) = do\n          trks' &lt;- mapM getGenre trks\n          rest &lt;- go =&lt;&lt; getNextRecentlyPlayed next\n          return $ trks' ++ rest\n        getGenre Track{..} = do\n          artistGenres &lt;- mapM getGenresByArtist artists\n          return (Track' {genres = concat artistGenres, ..})\n</code></pre>\n\n<p>for a first attempt.  Of course, you'll want to modify this to avoid looking up genres for the same artist over and over, but that's the idea.</p>\n"}], "owner": {"reputation": 21, "user_id": 11591159, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b434ce82cd1fccbb98d829bab1007161?s=128&d=identicon&r=PG&f=1", "display_name": "Jacob Clark", "link": "https://stackoverflow.com/users/11591159/jacob-clark"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 56, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1559672554, "creation_date": 1559512348, "question_id": 56419201, "link": "https://stackoverflow.com/questions/56419201/creating-an-aeson-model-from-two-wreq-api-calls", "title": "Creating an Aeson model from two wreq API calls", "body": "<p>I'm looking to solve a problem where I construct some data from a HTTP call and then based off that data I make another HTTP call and enrich the original data with information from the second call.</p>\n\n<p>I have code which takes a Spotify Recently Played API Call (JSON) via wreq as a ByteString and returns my a fully formed \"RecentlyPlayed\" data type.</p>\n\n<p>However, in order to get the Genre of a Track in the Spotify API, a second HTTP call is needed to their artist endpoint, I'm not quite sure how I can modify my Track data type to add a \"Genre\" field in that I will populate later, I'm also unsure on how to actually populate it later too, clearly I need to loop through my original data structure, pull the artist ID out, call the new server - but I'm unsure how to add this additional data to the original data type.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE OverloadedStrings #-}\n\nmodule Types.RecentlyPlayed where\n\nimport qualified Data.ByteString.Lazy as L\nimport qualified Data.Vector as V\nimport Data.Aeson\nimport Data.Either\n\ndata Artist = Artist {\n  id :: String\n  , href :: String\n  , artistName :: String\n} deriving (Show)\n\ndata Track = Track {\n  playedAt :: String\n  , externalUrls :: String\n  , name :: String\n  , artists :: [Artist]\n  , explicit :: Bool\n} deriving (Show)\n\ndata Tracks = Tracks {\n  tracks :: [Track]\n} deriving (Show)\n\ndata RecentlyPlayed = RecentlyPlayed {\n  recentlyPlayed :: Tracks\n  , next :: String\n} deriving (Show)\n\ninstance FromJSON RecentlyPlayed where\n  parseJSON = withObject \"items\" $ \\recentlyPlayed -&gt; RecentlyPlayed \n    &lt;$&gt; recentlyPlayed .: \"items\"\n    &lt;*&gt; recentlyPlayed .: \"next\"\n\ninstance FromJSON Tracks where\n  parseJSON = withArray \"items\" $ \\items -&gt; Tracks \n    &lt;$&gt; mapM parseJSON (V.toList items)\n\ninstance FromJSON Track where\n  parseJSON = withObject \"tracks\" $ \\tracks -&gt; Track \n    &lt;$&gt; tracks .: \"played_at\" \n    &lt;*&gt; (tracks .: \"track\" &gt;&gt;= (.: \"album\") &gt;&gt;= (.: \"external_urls\") &gt;&gt;= (.: \"spotify\"))\n    &lt;*&gt; (tracks .: \"track\" &gt;&gt;= (.: \"name\"))\n    &lt;*&gt; (tracks .: \"track\" &gt;&gt;= (.: \"artists\"))\n    &lt;*&gt; (tracks .: \"track\" &gt;&gt;= (.: \"explicit\"))\n\ninstance FromJSON Artist where\n  parseJSON = withObject \"artists\" $ \\artists -&gt; Artist\n    &lt;$&gt; artists .: \"id\"\n    &lt;*&gt; artists .: \"href\"\n    &lt;*&gt; artists .: \"name\"\n\nmarshallRecentlyPlayedData :: L.ByteString -&gt; Either String RecentlyPlayed\nmarshallRecentlyPlayedData recentlyPlayedTracks = eitherDecode recentlyPlayedTracks\n</code></pre>\n\n<p>(<a href=\"https://github.com/imjacobclark/Recify/blob/master/src/Types/RecentlyPlayed.hs\" rel=\"nofollow noreferrer\">https://github.com/imjacobclark/Recify/blob/master/src/Types/RecentlyPlayed.hs</a>)</p>\n\n<p>This works brilliantly for a single API call, its usage can be seen here:</p>\n\n<pre><code>recentlyPlayedTrackData &lt;- liftIO $ (getCurrentUsersRecentlyPlayedTracks (textToByteString . getAccessToken . AccessToken $ accessTokenFileData))\n\nlet maybeMarshalledRecentlyPlayed = (marshallRecentlyPlayedData recentlyPlayedTrackData)\n</code></pre>\n\n<p>(<a href=\"https://github.com/imjacobclark/Recify/blob/master/src/Recify.hs#L53-L55\" rel=\"nofollow noreferrer\">https://github.com/imjacobclark/Recify/blob/master/src/Recify.hs#L53-L55</a>)</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE OverloadedStrings #-}\n\nmodule Clients.Spotify.RecentlyPlayed where\n\nimport qualified Data.ByteString.Lazy as L\nimport qualified Data.ByteString.Char8 as B\nimport qualified Network.Wreq as W\nimport System.Environment\nimport Control.Monad.IO.Class\nimport Control.Lens\n\nrecentlyPlayerUri = \"https://api.spotify.com/v1/me/player/recently-played\"\n\ngetCurrentUsersRecentlyPlayedTracks :: B.ByteString -&gt; IO L.ByteString\ngetCurrentUsersRecentlyPlayedTracks accessToken = do\n  let options = W.defaults &amp; W.header \"Authorization\" .~ [(B.pack \"Bearer \") &lt;&gt; accessToken] \n  text &lt;- liftIO $ (W.getWith options recentlyPlayerUri)\n  return $ text ^. W.responseBody\n</code></pre>\n\n<p>(<a href=\"https://github.com/imjacobclark/Recify/blob/master/src/Clients/Spotify/RecentlyPlayed.hs\" rel=\"nofollow noreferrer\">https://github.com/imjacobclark/Recify/blob/master/src/Clients/Spotify/RecentlyPlayed.hs</a>)</p>\n\n<p>I expect to be able to call the first API, construct my data type, call the second API and then enrich the first data type with data returned from the second HTTP call.</p>\n"}, {"tags": ["performance", "haskell", "parallel-processing"], "comments": [{"owner": {"reputation": 68611, "user_id": 53897, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/2e71c1745ebc5401c8c8dfbf7c9a5d30?s=128&d=identicon&r=PG", "display_name": "Thorbj&#248;rn Ravn Andersen", "link": "https://stackoverflow.com/users/53897/thorbj%c3%b8rn-ravn-andersen"}, "edited": false, "score": 6, "creation_date": 1559498396, "post_id": 56417598, "comment_id": 99430893, "body": "How would you measure &quot;better&quot;?"}, {"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 1, "creation_date": 1559498430, "post_id": 56417598, "comment_id": 99430900, "body": "Code reviews should go to the code review stack exchange."}, {"owner": {"reputation": 1, "user_id": 7152942, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/735ed7096ab6e7e7456d843f72281c41?s=128&d=identicon&r=PG", "display_name": "ssrlee", "link": "https://stackoverflow.com/users/7152942/ssrlee"}, "reply_to_user": {"reputation": 68611, "user_id": 53897, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/2e71c1745ebc5401c8c8dfbf7c9a5d30?s=128&d=identicon&r=PG", "display_name": "Thorbj&#248;rn Ravn Andersen", "link": "https://stackoverflow.com/users/53897/thorbj%c3%b8rn-ravn-andersen"}, "edited": false, "score": 0, "creation_date": 1559498546, "post_id": 56417598, "comment_id": 99430940, "body": "@Thorbj&#248;rnRavnAndersen with better I mean the one that has lower costs in terms of work (one porcessor) and span (infinte processors), the least number of operations"}], "answers": [{"comments": [{"owner": {"reputation": 1610, "user_id": 11257715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7ef71a9bfa4abd30cb98cbb290b909?s=128&d=identicon&r=PG", "display_name": "moonGoose", "link": "https://stackoverflow.com/users/11257715/moongoose"}, "edited": false, "score": 0, "creation_date": 1559638343, "post_id": 56417730, "comment_id": 99474293, "body": "I think this answer misses the point that OP is trying to explicitly parallelize the invocations of <code>f</code>."}, {"owner": {"reputation": 2158, "user_id": 9991455, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2ff5d55afd5d829849efbf27962dd320?s=128&d=identicon&r=PG&f=1", "display_name": "Lorenzo", "link": "https://stackoverflow.com/users/9991455/lorenzo"}, "reply_to_user": {"reputation": 1610, "user_id": 11257715, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7ef71a9bfa4abd30cb98cbb290b909?s=128&d=identicon&r=PG", "display_name": "moonGoose", "link": "https://stackoverflow.com/users/11257715/moongoose"}, "edited": false, "score": 0, "creation_date": 1559638483, "post_id": 56417730, "comment_id": 99474360, "body": "@moonGoose yeah I know this doesn&#39;t fully answer the question but I was trying to raise the issue / point of view of lazy evaluation"}], "tags": [], "owner": {"reputation": 2158, "user_id": 9991455, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2ff5d55afd5d829849efbf27962dd320?s=128&d=identicon&r=PG&f=1", "display_name": "Lorenzo", "link": "https://stackoverflow.com/users/9991455/lorenzo"}, "is_accepted": false, "score": 1, "last_activity_date": 1559499504, "creation_date": 1559499504, "answer_id": 56417730, "question_id": 56417598, "link": "https://stackoverflow.com/questions/56417598/which-one-of-the-following-is-better/56417730#56417730", "title": "Which one of the following is better?", "body": "<p>Time and space complexity in Haskell is often non-trivial as it is a lazy language. This means that while a function might be <code>O(n!)</code>, its result might never be needed and therefore never evaluated. Or like in this case, if your function returns a list, and only the first 3 elements are needed by other functions, only those are evaluated.</p>\n\n<p>Anyways, your functions is just a particular case of <code>map</code>, and as such it could be coded in a much more readable way:</p>\n\n<pre><code>tabulate f n = map f [0..n]\n</code></pre>\n\n<p>Map is implemented with a fold, and is probably the most optimised version you could get</p>\n"}], "owner": {"reputation": 1, "user_id": 7152942, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/735ed7096ab6e7e7456d843f72281c41?s=128&d=identicon&r=PG", "display_name": "ssrlee", "link": "https://stackoverflow.com/users/7152942/ssrlee"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1559499504, "creation_date": 1559498261, "question_id": 56417598, "link": "https://stackoverflow.com/questions/56417598/which-one-of-the-following-is-better", "title": "Which one of the following is better?", "body": "<p>So I have two implementations of the function tabulate, which, given a function <code>f :: Int -&gt; a</code> and a number <code>n</code>, should produce the list <code>[f 0, f 1, ..., f (n-1)]</code>. I'm trying to guess which one is better in terms of work and span.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>tabulate1 :: (Int -&gt; a) -&gt; Int -&gt; [a]\ntabulate1 f n = tab (\\x -&gt; f (n - x)) n where\n    tab _ 0 = []\n    tab g n = let (x,xs) = (g n) ||| (tab g (n-1))\n              in (x:xs)\n</code></pre>\n\n<pre class=\"lang-hs prettyprint-override\"><code>tabulate2 :: (Int -&gt; a) -&gt; Int -&gt; [a]\ntabulate2 f n = tab f 0 (n-1) where\n    tab f n m\n        | n &gt; m = []\n        | n == m = [f n]\n        | otherwise = let i = (n + m) `div` 2\n                          (l, r) = (tab f n i) ||| (tab f i+1 m)\n                      in (l ++ r)\n</code></pre>\n\n<p>While the first one avoids the using of <code>(++)</code>, which has linear work and span, the second one computes the two sublists in parallel but uses <code>(++)</code>.</p>\n\n<p>So... which one is better?</p>\n"}, {"tags": ["haskell", "applicative"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1559495892, "post_id": 56417123, "comment_id": 99430287, "body": "Side note: the <i>witherable</i> library indeed calls (a generalised version of) it <a href=\"https://hackage.haskell.org/package/witherable-0.3.1/docs/Data-Witherable.html#v:filterA\" rel=\"nofollow noreferrer\"><code>filterA</code></a>."}], "answers": [{"comments": [{"owner": {"reputation": 1762, "user_id": 3760519, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/92f83bbbf421e12a53e8111040d3d280?s=128&d=identicon&r=PG&f=1", "display_name": "Chechy Levas", "link": "https://stackoverflow.com/users/3760519/chechy-levas"}, "edited": false, "score": 1, "creation_date": 1559496907, "post_id": 56417298, "comment_id": 99430533, "body": "Great answer! For all those reading this who aren&#39;t familiar with this course, the operator (:.) on the custom List type, is equivalent to the (:) operator on the stock List type."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 1762, "user_id": 3760519, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/92f83bbbf421e12a53e8111040d3d280?s=128&d=identicon&r=PG&f=1", "display_name": "Chechy Levas", "link": "https://stackoverflow.com/users/3760519/chechy-levas"}, "edited": false, "score": 0, "creation_date": 1559496961, "post_id": 56417298, "comment_id": 99430548, "body": "@ChechyLevas And <code>lift2</code> is <code>liftA2</code> from <code>Control.Applicative</code>."}], "tags": [], "owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "is_accepted": true, "score": 4, "last_activity_date": 1559496807, "last_edit_date": 1559496807, "creation_date": 1559496027, "answer_id": 56417298, "question_id": 56417123, "link": "https://stackoverflow.com/questions/56417123/what-is-the-idiomatic-way-to-write-this-function-which-might-normally-be-called/56417298#56417298", "title": "What is the idiomatic way to write this function (which might normally be called filterA)?", "body": "<p>My first idea would be to start with plain <code>filter</code>:</p>\n\n<pre><code>filter :: (a -&gt; Bool) -&gt; List a -&gt; List a\nfilter _ Nil = Nil\nfilter f (x :. xs) =\n    let b = f x\n        ys = filter f xs\n    in\n    if b then x :. ys else ys\n</code></pre>\n\n<p>... and try to extend it to <code>Applicative</code>:</p>\n\n<pre><code>filtering :: (Applicative f) =&gt; (a -&gt; f Bool) -&gt; List a -&gt; f (List a)\nfiltering _ Nil = pure Nil\nfiltering f (x :. xs) =\n    let b = f x\n        ys = filtering f xs\n    in\n    if b then x :. ys else ys\n</code></pre>\n\n<p>There are two issues with this attempt: <code>f x</code> is an <code>f Bool</code>, not a <code>Bool</code>, so <code>if b then ...</code> is a type error, and <code>filtering f xs</code> is an <code>f (List a)</code>, not a <code>List a</code>, so <code>x :. ys</code> is a type error.</p>\n\n<p>We can fix those problems by using <code>lift2 :: (Applicative f) =&gt; (a -&gt; b -&gt; c) -&gt; f a -&gt; f b -&gt; f c</code>:</p>\n\n<pre><code>filtering f (x :. xs) =\n    lift2 (\\b ys -&gt; if b then x :. ys else ys) (f x) (filtering f xs)\n</code></pre>\n\n<p><code>lift2</code> lets us locally extract a <code>Bool</code> and a <code>List a</code> from <code>f x</code> and <code>filtering f xs</code>, respectively; or more correctly, we've wrapped our <code>if ... then ... else</code> computation in a function, which <code>lift2</code> then pushes into <code>f</code>.</p>\n\n<p>Alternatively we could use <code>&lt;$&gt;</code> and <code>&lt;*&gt;</code> directly:</p>\n\n<pre><code>filtering f (x :. xs) =\n    (\\b ys -&gt; if b then x :. ys else ys) &lt;$&gt; f x &lt;*&gt; filtering f xs\n</code></pre>\n\n<p>Or write our helper function slightly differently:</p>\n\n<pre><code>filtering f (x :. xs) =\n    (\\b -&gt; if b then (x :.) else id) &lt;$&gt; f x &lt;*&gt; filtering f xs\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 2, "last_activity_date": 1559600589, "last_edit_date": 1559600589, "creation_date": 1559498877, "answer_id": 56417658, "question_id": 56417123, "link": "https://stackoverflow.com/questions/56417123/what-is-the-idiomatic-way-to-write-this-function-which-might-normally-be-called/56417658#56417658", "title": "What is the idiomatic way to write this function (which might normally be called filterA)?", "body": "<p>Here is an implementation in terms of <code>foldr</code> (and written using <em>base</em> types and functions). I'm fairly sure it is equivalent to <a href=\"https://stackoverflow.com/a/56417298/2751851\">melpomene's solution</a>.</p>\n\n<pre><code>import Control.Applicative (liftA2)\nimport Data.Bool (bool)\n\nfilterA :: Applicative f =&gt; (a -&gt; f Bool) -&gt; [a] -&gt; f [a]\nfilterA f = foldr (\\x xs -&gt; liftA2 (++) (bool [] [x] &lt;$&gt; f x) xs) (pure [])\n</code></pre>\n\n<p>A few details worth noting:</p>\n\n<ul>\n<li><p><code>bool y x b</code> is pointfree-friendly slang for <code>if b then x else y</code>.</p></li>\n<li><p>Using <code>(++)</code> instead of <code>(:)</code> to add the elements is fine since we are doing it to the front of the list.</p></li>\n<li><p><code>xs</code> isn't literally a list -- it has type <code>f [a]</code>.</p></li>\n</ul>\n\n<p>A demonstration:</p>\n\n<pre><code>GHCi&gt; filterA (\\x -&gt; print x *&gt; pure (x &gt; 5)) [1..10]\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n[6,7,8,9,10]\n</code></pre>\n\n<hr>\n\n<p>Here is a different take, inspired by your original solution (note that <code>sequence (map f xs)</code> is the same as <code>traverse f xs</code>):</p>\n\n<pre><code>filterA :: Applicative f =&gt; (a -&gt; f Bool) -&gt; [a] -&gt; f [a]\nfilterA f = fmap concat . traverse (\\x -&gt; bool [] [x] &lt;$&gt; f x)\n</code></pre>\n\n<p>(<code>bool Nothing (Just x)</code> and <code>catMaybes</code> from <code>Data.Maybe</code> instead of <code>bool [] [x]</code> and <code>concat</code> would also work.)</p>\n\n<p>Note that this solution requires an additional pass through the list(s) because <code>traverse</code> is not strong enough to implement filtering. That is why <code>filter</code>, <code>catMaybes</code>, <code>filterA</code> and friends require <a href=\"https://hackage.haskell.org/package/witherable-0.3.1/docs/Data-Witherable.html\" rel=\"nofollow noreferrer\">different classes</a> if they are to be generalised.</p>\n"}], "owner": {"reputation": 1762, "user_id": 3760519, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/92f83bbbf421e12a53e8111040d3d280?s=128&d=identicon&r=PG&f=1", "display_name": "Chechy Levas", "link": "https://stackoverflow.com/users/3760519/chechy-levas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 114, "favorite_count": 0, "accepted_answer_id": 56417298, "answer_count": 2, "score": 2, "last_activity_date": 1559600589, "creation_date": 1559494855, "last_edit_date": 1559495390, "question_id": 56417123, "link": "https://stackoverflow.com/questions/56417123/what-is-the-idiomatic-way-to-write-this-function-which-might-normally-be-called", "title": "What is the idiomatic way to write this function (which might normally be called filterA)?", "body": "<p>I am going through <a href=\"https://github.com/bitemyapp/fp-course\" rel=\"nofollow noreferrer\">this</a> course.</p>\n\n<p>There is a section for <code>Applicative</code> and I am being asked to implement a function with the following behaviour and type</p>\n\n<pre><code>-- | Filter a list with a predicate that produces an effect.\n--\n-- &gt;&gt;&gt; filtering (ExactlyOne . even) (4 :. 5 :. 6 :. Nil)\n-- ExactlyOne [4,6]\n--\n-- &gt;&gt;&gt; filtering (\\a -&gt; if a &gt; 13 then Empty else Full (a &lt;= 7)) (4 :. 5 :. 6 :. Nil)\n-- Full [4,5,6]\n--\n-- &gt;&gt;&gt; filtering (\\a -&gt; if a &gt; 13 then Empty else Full (a &lt;= 7)) (4 :. 5 :. 6 :. 7 :. 8 :. 9 :. Nil)\n-- Full [4,5,6,7]\n--\n-- &gt;&gt;&gt; filtering (\\a -&gt; if a &gt; 13 then Empty else Full (a &lt;= 7)) (4 :. 5 :. 6 :. 13 :. 14 :. Nil)\n-- Empty\n--\n-- &gt;&gt;&gt; filtering (&gt;) (4 :. 5 :. 6 :. 7 :. 8 :. 9 :. 10 :. 11 :. 12 :. Nil) 8\n-- [9,10,11,12]\n--\n-- &gt;&gt;&gt; filtering (const $ True :. True :.  Nil) (1 :. 2 :. 3 :. Nil)\n-- [[1,2,3],[1,2,3],[1,2,3],[1,2,3],[1,2,3],[1,2,3],[1,2,3],[1,2,3]]\nfiltering :: Applicative f =&gt; (a -&gt; f Bool) -&gt; List a -&gt; f (List a)\n</code></pre>\n\n<p>I have come up with the following implementation, which satifies all the requirements</p>\n\n<pre><code>filtering f as =\n  let x = sequence (f `map` as)\n      y = zip as &lt;$&gt; x\n      z = filter snd &lt;$&gt; y\n   in map fst &lt;$&gt; z\n</code></pre>\n\n<p>but it feels a bit \"round about\" to me, and I can't think of a more direct way to do it. </p>\n\n<p>Note: I have expanded into <code>x, y, z</code> because it makes it easier (for me) to follow what is happening, and whilst I realize I could express it all on a single line, I do not consider that to be more 'direct' and thus not an answer to my question.</p>\n\n<p>Note 2: This course appears to be building up common type classes from fundamental pieces. We started with a custom implementation of <code>List</code> followed by <code>Functor</code> and now <code>Applicative</code>, so I can only use concepts from these classes. I cannot use anything from <code>Monad</code> yet.</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 1275, "user_id": 11571245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vkCkX.png?s=128&g=1", "display_name": "typedfern", "link": "https://stackoverflow.com/users/11571245/typedfern"}, "is_accepted": false, "score": 7, "last_activity_date": 1559490202, "creation_date": 1559490202, "answer_id": 56416537, "question_id": 56416479, "link": "https://stackoverflow.com/questions/56416479/defining-append-using-foldr/56416537#56416537", "title": "Defining append using foldr", "body": "<p><code>foldr</code> needs three arguments: an accumulator function, an initial accumulator value, and a list (well, a Foldable).</p>\n\n<p><code>foldr (:)</code>, therefore, requires two more arguments: initial accumulator, and list.</p>\n\n<p>What is being done here, is cleverly using one of the two lists as the initial accumulator.</p>\n\n<p>Then, for each element in the other list, it is cons'ed to the initial list; which results in all the elements in the other list being appended to the initial list.</p>\n\n<p>Basically, <code>append [1,2,3] [4,5,6]</code> here is equivalent to <code>foldr (:) [4,5,6] [1,2,3]</code>, which ends up doing <code>(1:(2:(3:[4,5,6])))</code>, resulting in <code>[1,2,3,4,5,6]</code></p>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 3, "last_activity_date": 1559490939, "last_edit_date": 1559490939, "creation_date": 1559490424, "answer_id": 56416571, "question_id": 56416479, "link": "https://stackoverflow.com/questions/56416479/defining-append-using-foldr/56416571#56416571", "title": "Defining append using foldr", "body": "<p><a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:flip\" rel=\"nofollow noreferrer\"><strong><code>flip :: (a -&gt; b -&gt; c) -&gt; b -&gt; a -&gt; c</code></strong></a> is implemented as:</p>\n\n<blockquote><pre><code>flip                    :: (a -&gt; b -&gt; c) -&gt; b -&gt; a -&gt; c\nflip f x y              =  f y x</code></pre></blockquote>\n\n<p>So it is given a function <code>f</code> and two parameters <code>x</code> and <code>y</code>, and it applies these arguments like <code>f y x</code>. So that means that the <code>append = flip (foldr (:))</code> is short for:</p>\n\n<pre><code>append :: [a] -&gt; [a] -&gt; [a]\nappend <b>xs ys</b> = foldr (:) <b>ys xs</b></code></pre>\n\n<p>Now you can see <code>foldr</code> as a <a href=\"https://en.wikipedia.org/wiki/Catamorphism\" rel=\"nofollow noreferrer\"><em>catamorphsim</em> [wiki]</a> for a list. Indeed, for <code>foldr f z ls</code>, it replaces the cons <code>(:)</code> in the list of <code>ls</code> with <code>f</code>, and the empty list <code>[]</code> with <code>z</code>. For lists <code>foldr</code> is <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.Base.html#foldr\" rel=\"nofollow noreferrer\">implemented as</a>:</p>\n\n<blockquote><pre><code>foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b\nfoldr k z = go\n    where go []     = z\n          go (y:ys) = y `k` go ys</code></pre></blockquote>\n\n<p>So that means for <code>foldr (+) 0 [x<sub>1</sub>, x<sub>2</sub>, x<sub>3</sub>]</code> which is equal to <code>foldr (+) 0 (x<sub>1</sub> : (x<sub>2</sub> : (x<sub>3</sub> : [])))</code>, it is equal to <code>x<sub>1</sub> + (x<sub>2</sub> + (x<sub>3</sub> + 0))</code> or less verbose <code>x<sub>1</sub> + x<sub>2</sub> + x<sub>3</sub> + 0</code>.</p>\n\n<p>So here for <code>foldr (:) ys</code>, with a list <code>[x<sub>1</sub>, x<sub>2</sub>, x<sub>3</sub>]</code>, this is equal to <code>(x<sub>1</sub> : (x<sub>2</sub> : (x<sub>3</sub> : ys)))</code>, which is thus equal to a list of <code>[x<sub>1</sub>, x<sub>2</sub>, x<sub>3</sub>, y<sub>1</sub>, y<sub>2</sub>, &#8230;, y<sub>n</sub>]</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 1, "last_activity_date": 1559496997, "creation_date": 1559496997, "answer_id": 56417426, "question_id": 56416479, "link": "https://stackoverflow.com/questions/56416479/defining-append-using-foldr/56417426#56417426", "title": "Defining append using foldr", "body": "<p><code>flip f xs ys = f ys xs</code>, so then</p>\n\n<pre><code>append xs ys = flip (foldr (:)) xs ys \n             = foldr (:) ys xs\n</code></pre>\n\n<p>Now, <code>foldr g z xs</code> replaces every <code>:</code> in <code>xs</code> with <code>g</code>, and it replaces the final <code>[]</code> in <code>xs</code> with <code>z</code>, so we get</p>\n\n<pre><code>append (x1 : x2 : ... : xn : []) ys = foldr (:) ys xs\n                            -- replace `:` with `:` and `[]` with `ys`:\n  =    (x1 : x2 : ... : xn : ys)\n</code></pre>\n\n<p>As to where it gets the lists from, they are simply left <em>implicit</em>. Haskell allows to shorten a definition by removing the same last parameter from its left hand side, and its right hand side, if it's not needed in what remains:</p>\n\n<pre><code>    foo x y z = g x x y z\n    foo x y   = g x x y \n    foo x     = g x x  \n              = join g x\n    foo       = join g\n</code></pre>\n\n<p><code>x</code> can't be simply removed, as it is needed in the remaining <code>g x</code>. But after transforming it with the use of <code>join</code> (details of what it is and why it works don't matter here) it becomes possible to remove the remaining <code>x</code> as well.</p>\n\n<p>In your case the arguments are used just once, and their order is flipped by using the <code>flip</code> function:</p>\n\n<pre><code>    append xs ys = foldr (:) ys xs\n                 = flip (foldr (:)) xs ys\n    append xs    = flip (foldr (:)) xs\n    append       = flip (foldr (:))\n</code></pre>\n"}], "owner": {"reputation": 59, "user_id": 10996202, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1b962210357cc6d0a480cdf7151d13dd?s=128&d=identicon&r=PG&f=1", "display_name": "Callum Perks", "link": "https://stackoverflow.com/users/10996202/callum-perks"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 518, "favorite_count": 0, "answer_count": 3, "score": 0, "last_activity_date": 1559496997, "creation_date": 1559489739, "last_edit_date": 1559492548, "question_id": 56416479, "link": "https://stackoverflow.com/questions/56416479/defining-append-using-foldr", "title": "Defining append using foldr", "body": "<p>I have seen that it is possible to define the <code>append</code> function in Haskell in this way </p>\n\n<pre><code>append :: [a] -&gt; [a] -&gt; [a]\nappend = flip (foldr (:))\n</code></pre>\n\n<p>I am looking for an explanation of how this works. My main problem is I don't know how <code>foldr</code> gets the lists as arguments. A full explanation of the entire implementation would be good though.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 5, "creation_date": 1559486333, "post_id": 56415977, "comment_id": 99427931, "body": "Advice: read as much Haskell code other people wrote as you can. You&#39;ll pick up the idiom faster that way."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 8, "last_activity_date": 1559486554, "last_edit_date": 1559486554, "creation_date": 1559486236, "answer_id": 56416002, "question_id": 56415977, "link": "https://stackoverflow.com/questions/56415977/how-to-check-for-the-argument-of-a-function-and-pass-it-on/56416002#56416002", "title": "How to check for the argument of a function and pass it on?", "body": "<p>You really should use <a href=\"https://en.wikibooks.org/wiki/Haskell/Pattern_matching\" rel=\"nofollow noreferrer\"><em>pattern matching</em> [Haskell-wiki]</a> here:</p>\n\n<pre><code>f :: Command -&gt; Int\nf <b>(PushC n)</b> = n\nf <b>(Push n)</b> = n\nf <b>Pop</b> = 1</code></pre>\n\n<p>Pattern matching is more effective than using <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:-61--61-\" rel=\"nofollow noreferrer\"><strong><code>(==) :: Eq a =&gt; a -&gt; a -&gt; Bool</code></strong></a>, first of all, not all types are an instance of <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Eq\" rel=\"nofollow noreferrer\"><strong><code>Eq</code></strong></a>, and furthermore you can not match <em>parameters</em> of the data constructor with <code>Eq</code>. You can thus <em>not</em> match <code>some_val == PushC num</code>, and hope that Haskell assigns a value to <code>num</code>, like Prolog does.</p>\n\n<p>Usually <code>(==)</code> and <code>(/=)</code> are only used to check if two values are equal, not to discriminate between the possible data constructors and parameters of a type.</p>\n\n<p>You could use a wild card (<code>_</code>) as last clause here, but it is probably better <em>not</em> to do that: if you later add an extra <code>Command</code> data constructor, the compiler can warn you that not all patterns are covered, and thus you can provide the correct expression. If on the other hand, you use a wildcard, then that clause will automatically be matched with that data constructor, and this might not be the intended effect.</p>\n"}], "owner": {"reputation": 13, "user_id": 11590065, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e49a648e79e825a354c4bf8e41cf2e77?s=128&d=identicon&r=PG&f=1", "display_name": "Nex55", "link": "https://stackoverflow.com/users/11590065/nex55"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 61, "favorite_count": 0, "accepted_answer_id": 56416002, "answer_count": 1, "score": 0, "last_activity_date": 1559486554, "creation_date": 1559485986, "question_id": 56415977, "link": "https://stackoverflow.com/questions/56415977/how-to-check-for-the-argument-of-a-function-and-pass-it-on", "title": "How to check for the argument of a function and pass it on?", "body": "<p>I'm trying to code a function that takes one of my own commands and its argument if it has got one and passes on the argument only. Of course \"int\" is not in scope, but if I try to pass it on with x (like \"f (x int)\") I get a parse error. I'm new to Haskell and grateful for any advice.</p>\n\n<pre><code>data Command = PushC Int | Pop | Push Int\nf :: Command -&gt; Int\nf x | x == PushC int = int\n    | x == Pop = 1\n    | x == Push int = int\n    | otherwise = -1\n</code></pre>\n\n<p>I just want to check for any Integer as argument of the command and have it as output. If the command doesen't have an argument output 1.</p>\n"}, {"tags": ["performance", "haskell", "monads", "state-monad", "reader-monad"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 4, "creation_date": 1559481702, "post_id": 56415402, "comment_id": 99426861, "body": "I&#39;m no expert in Monad Transformers, but as far as I can tell it doesn&#39;t really matter here. Modulo newtypes, <code>MyMonad1 a</code> is the same as <code>MyState -&gt; Env -&gt; (a, MyState)</code>,while <code>MyMonad2 a</code> is <code>Env -&gt; MyState -&gt;  (a, MyState)</code>, so the only difference is argument order."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1559483697, "post_id": 56415402, "comment_id": 99427310, "body": "Is this question specifically about <code>ReaderT</code> and <code>StateT</code>, or is it generally about how to choose the order of transformers in a stack?"}, {"owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "edited": false, "score": 0, "creation_date": 1559488276, "post_id": 56415402, "comment_id": 99428361, "body": "Specifically about these two"}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1559596236, "post_id": 56421604, "comment_id": 99463457, "body": "A tiny quibble: simply having two isomorphic types isn&#39;t really enough when we&#39;re talking about erasing newtypes; one also has to check that the associated instances respect the isomorphism. (For example, consider <code>All</code> and a hypothetical <code>Xor</code>, which both unwrap to <code>Bool</code>, but whose <code>Monoid</code> instances do not respect either the <code>id</code> or the <code>not</code> isomorphism.) It&#39;s a very minor quibble in this case, though, since the instances do indeed correspond appropriately."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 6, "last_activity_date": 1559539771, "creation_date": 1559539771, "answer_id": 56421604, "question_id": 56415402, "link": "https://stackoverflow.com/questions/56415402/is-there-any-significant-difference-between-statet-over-reader-and-readert-over/56421604#56421604", "title": "Is there any significant difference between StateT over Reader and ReaderT over State?", "body": "<p>In the general case, different orderings of monad transformers will lead to different behaviors, but as was pointed out in the comments, for the two orderings of \"state\" and \"reader\", we have the following isomorphisms up to newtypes:</p>\n\n<pre><code>StateT MyState (Reader Env) a  ~  MyState -&gt; Env -&gt; (a, MyState)\nReaderT Env (State MyState) a  ~  Env -&gt; MyState -&gt; (a, MyState)\n</code></pre>\n\n<p>so the only difference is one of argument order, and these two monads are otherwise semantically equivalent.</p>\n\n<p>With respect to performance, it's hard to know for sure without benchmarking actual code.  However, as one data point, if you consider the following monadic action:</p>\n\n<pre><code>foo :: StateT Double (Reader Int) Int\nfoo = do\n  n &lt;- ask\n  modify (* fromIntegral n)\n  gets floor\n</code></pre>\n\n<p>then when compiled with GHC 8.6.4 using <code>-O2</code>, the newtypes are -- obviously -- optimized away, and this generates <strong>exactly</strong> the same Core if you change the signature to:</p>\n\n<pre><code>foo :: ReaderT Int (State Double) Int\n</code></pre>\n\n<p>except that the two arguments to <code>foo</code> get flipped.  So, there's no performance difference at all, at least in this simple example.</p>\n\n<p>Stylistically, you might run into situations where one ordering leads to nicer looking code than the other, but usually there won't be much to choose between them.  In particular, basic monadic actions like the one above will look exactly the same with either ordering.</p>\n\n<p>For no good reason, I tend to favor #2, mostly because the <code>Env -&gt; MyState -&gt; (a, MyState)</code> looks more natural to me.</p>\n"}], "owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 200, "favorite_count": 0, "accepted_answer_id": 56421604, "answer_count": 1, "score": 5, "last_activity_date": 1559539771, "creation_date": 1559481280, "question_id": 56415402, "link": "https://stackoverflow.com/questions/56415402/is-there-any-significant-difference-between-statet-over-reader-and-readert-over", "title": "Is there any significant difference between StateT over Reader and ReaderT over State?", "body": "<p>When I design my programming model I always have a dilemma which approach is better:</p>\n\n<pre><code>type MyMonad1 = StateT MyState (Reader Env)\ntype MyMonad2 = ReaderT Env (State MyState)\n</code></pre>\n\n<p>What are the benefits and trade offs between using one monad over another? Does it matter at all? How about performance?</p>\n"}, {"tags": ["haskell", "nix"], "answers": [{"tags": [], "owner": {"reputation": 3203, "user_id": 2622234, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/a4b0faa804acdb74ea677bc421d5caac?s=128&d=identicon&r=PG", "display_name": "sara", "link": "https://stackoverflow.com/users/2622234/sara"}, "is_accepted": false, "score": 5, "last_activity_date": 1559475200, "creation_date": 1559475200, "answer_id": 56414609, "question_id": 56414329, "link": "https://stackoverflow.com/questions/56414329/how-do-i-override-a-haskell-package-in-nixpkgs-via-nix/56414609#56414609", "title": "How do I override a Haskell package in nixpkgs via Nix?", "body": "<p>Consider using <code>callCabal2nix</code> from <code>haskell.packages.${compiler}</code>!</p>\n\n<p>It will go through your .cabal file and generate a nix expression for a derivation from that (thus making gitchapter.nix unnecessary), which you then can override using the <code>overrideCabal</code> function in <code>haskell.lib</code> in a similar fashion to normal derivation overriding. You can then fetch the updated pandoc derivation from git, and add it as a buildInput in your override expression.</p>\n"}, {"comments": [{"owner": {"reputation": 3203, "user_id": 2622234, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/a4b0faa804acdb74ea677bc421d5caac?s=128&d=identicon&r=PG", "display_name": "sara", "link": "https://stackoverflow.com/users/2622234/sara"}, "edited": false, "score": 1, "creation_date": 1559493519, "post_id": 56416694, "comment_id": 99429734, "body": "you can refer directly to the commit in the repository using nix! that way you don&#39;t need to clone the repo!"}], "tags": [], "owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "is_accepted": false, "score": 1, "last_activity_date": 1612530106, "last_edit_date": 1612530106, "creation_date": 1559491494, "answer_id": 56416694, "question_id": 56414329, "link": "https://stackoverflow.com/questions/56414329/how-do-i-override-a-haskell-package-in-nixpkgs-via-nix/56416694#56416694", "title": "How do I override a Haskell package in nixpkgs via Nix?", "body": "<p>Example of local path referenced:</p>\n<pre><code>{ nixpkgs ? import &lt;nixpkgs&gt; {}, compiler ? &quot;ghc864&quot; } :\nlet\n  myHaskellPackages = nixpkgs.pkgs.haskell.packages.${compiler}.override {\n    overrides = self: super: rec {\n    pandoc-include-code  = self.callCabal2nix &quot;pandoc-include-code&quot; (./pandoc-include-code) {};\n    };\n  };\nin\n  myHaskellPackages.callCabal2nix &quot;gitchaper&quot; (./.) {}\n</code></pre>\n<p>Other alternatives:</p>\n<p>Git repo:</p>\n<pre><code>    pandoc-include-code  = self.callCabal2nix &quot;pandoc-include-code&quot; (builtins.fetchGit {\n        url = &quot;git@github.com:owickstrom/pandoc-include-code.git&quot;;\n        rev = &quot;3afe94299b3a473fda0c62fdfd318435117751dd&quot;;\n      })\n      {};\n</code></pre>\n<p>Hackage (via tar archive) example:</p>\n<pre><code>  prettyprinter = self.callCabal2nix &quot;prettyprinter&quot; (builtins.fetchTarball {\n    url = &quot;https://hackage.haskell.org/package/prettyprinter-1.7.0/prettyprinter-1.7.0.tar.gz&quot;;\n  }) {};\n</code></pre>\n"}], "owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1151, "favorite_count": 3, "answer_count": 2, "score": 4, "last_activity_date": 1616677583, "creation_date": 1559472567, "last_edit_date": 1616677583, "question_id": 56414329, "link": "https://stackoverflow.com/questions/56414329/how-do-i-override-a-haskell-package-in-nixpkgs-via-nix", "title": "How do I override a Haskell package in nixpkgs via Nix?", "body": "<p>Essentially I'm using this:</p>\n\n<p><strong>default.nix</strong></p>\n\n<pre><code>{ nixpkgs ? import &lt;nixpkgs&gt; {}, compiler ? \"ghc864\" }:\nnixpkgs.pkgs.haskell.packages.${compiler}.callPackage ./gitchapter.nix { }\n</code></pre>\n\n<p><strong>gitchapter.nix</strong></p>\n\n<pre><code>{ mkDerivation, base, directory, extra, filepath, foldl, hpack\n, HUnit, mtl, optparse-applicative, pandoc-include-code, parsec\n, pretty-simple, process, QuickCheck, rainbow, regex-pcre\n, regex-posix, safe, stdenv, string-conversions, system-filepath\n, template-haskell, text, transformers, turtle, unix\n, unordered-containers\n}:\nmkDerivation {\n  pname = \"gitchapter\";\n  version = \"0.1.0.0\";\n  src = ./.;\n  isLibrary = false;\n  isExecutable = true;\n  libraryToolDepends = [ hpack ];\n  executableHaskellDepends = [\n    base directory extra filepath foldl HUnit mtl optparse-applicative\n    pandoc-include-code parsec pretty-simple process QuickCheck rainbow\n    regex-pcre regex-posix safe string-conversions system-filepath\n    template-haskell text transformers turtle unix unordered-containers\n  ];\n  preConfigure = \"hpack\";\n  license = stdenv.lib.licenses.bsd3;\n}\n</code></pre>\n\n<p>However there is an issue with the <code>pandoc-include-code</code> failing to build, which seems to have since been fixed in the git repository. How can I override the package either to point to git repository or a local directory?</p>\n\n<p>Would I follow the instructions at <a href=\"https://nixos.org/nixos/nix-pills/nixpkgs-overriding-packages.html\" rel=\"nofollow noreferrer\">https://nixos.org/nixos/nix-pills/nixpkgs-overriding-packages.html</a> or would this work differently due to using the <code>nixpkgs.pkgs.haskell.packages.${compiler}.callPackage</code> function?</p>\n\n<hr>\n\n<p><strong>Edit:</strong>\nThanks to @sara's answer I now have:</p>\n\n<pre><code>{ nixpkgs ? import &lt;nixpkgs&gt; {}, compiler ? \"ghc864\" } :\nlet\n  gitchapter = nixpkgs.pkgs.haskell.packages.${compiler}.callCabal2nix \"gitchaper\" (./.) {};\n  zzzzz = nixpkgs.pkgs.haskell.lib.overrideCabal gitchapter;\nin\n  nixpkgs.pkgs.haskell.packages.${compiler}.callPackage (zzzzz) { }\n</code></pre>\n\n<p>So it I suppose now it's a matter of determining how to override that dependency now.</p>\n"}, {"tags": ["haskell", "category-abstractions"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1559475728, "post_id": 56413900, "comment_id": 99425557, "body": "Ah yes. I thought about whether to include <code>Semigroupoid</code> in <code>constrained-categories</code> when I wrote it, but if at all I would have made it a superclass of <code>Category</code>, and I decided to keep it simple there (\u201cYAGNI\u201d, and I wanted my hierarchies to resemble the unconstrained <code>base</code> one as much as possible). Maybe I should change that; anyways I also have split up <code>Arrow</code> into <code>Cartesian</code>, <code>Morphism</code> and <code>PreArrow</code>."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1559476364, "post_id": 56413900, "comment_id": 99425699, "body": "What do you want to use the <code>Semigroupoid</code> instance for? Might be useful for me to know, to decide how to move the design of the package forward."}, {"owner": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1559476855, "post_id": 56413900, "comment_id": 99425815, "body": "@leftaroundabout is a question that emerged from the attempts I am making to define various types of Relation using X.Constrained classes. For now I am still waiting for an affirmative answer to my previous post on Control.Functor.Constrained (an answer that includes the check that I entered later). I think that for some if not all types of Relation can be defined as Foldable.Constrained instances. But it all seems very precarious and above all difficult to understand."}, {"owner": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1559477138, "post_id": 56413900, "comment_id": 99425875, "body": "@leftaroundabout Furthermore, I think that Relation is in a more natural way an instance of Semigroupoid than of Category, as it appears that identity is defined in an &quot;artificial&quot; way and has no real utility and / or use."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1559477585, "post_id": 56413900, "comment_id": 99425951, "body": "That&#39;s true, <code>id</code> is actually surprisingly nontrivial in several important categories!"}], "owner": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 51, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1559485584, "creation_date": 1559468596, "last_edit_date": 1559485584, "question_id": 56413900, "link": "https://stackoverflow.com/questions/56413900/compatibility-between-contemporary-semigroupoid-and-category-constrained-instanc", "title": "Compatibility between contemporary Semigroupoid and Category.Constrained instances", "body": "<p>Once the Set (a, b) relationship was defined, I defined the Semigroupoid and Category instances based on the same composition function.</p>\n\n<p>Surprisingly to me, it was not so possible to do so for the relation [(a, b)].</p>\n\n<p>Why?</p>\n\n<p>The search for Control.Category.Constrained with Hoogle does not give a positive result. The direct link to the library is:\n<a href=\"http://hackage.haskell.org/package/constrained-categories-0.3.1.1\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/constrained-categories-0.3.1.1</a></p>\n\n<pre><code>{-# LANGUAGE GADTs, TypeFamilies, ConstraintKinds #-}\n\nmodule Question2 where\n\nimport Data.Semigroupoid\nimport Control.Category.Constrained\nimport Data.List as L\nimport Data.Map as M\nimport Data.Set as S\n\n-- ============================== Set (a,b) ==============================\n\ndata RelationSP a b where\n  IdRSP  :: RelationSP a a\n  RSP :: (Ord a, Ord b) =&gt; Set (a,b) -&gt; RelationSP a b\n\ncompRSP ::  RelationSP b c-&gt; RelationSP a b -&gt; RelationSP a c \nRSP r1 `compRSP` RSP r2 = RSP $\n    S.foldr (\\(x,y) acc -&gt; S.union acc (S.map (\\(_,b) -&gt; (x,b))  $ S.filter (\\(w,z) -&gt; y == w) r1)\n            ) S.empty r2 \n\ninstance Semigroupoid RelationSP where\n    o = compRSP\n\ninstance Category RelationSP where\n  type Object RelationSP o = Ord o\n  id = IdRSP\n  (.) = compRSP\n\n-- ============================== [(a,b)] ==============================\n\ndata RelationLP a b where\n  IdLP  :: RelationLP a a\n  RLP ::  (Eq a, Eq b) =&gt; [(a,b)] -&gt; RelationLP a b\n  -- RLP :: [(a,b)] -&gt; RelationLP a b -- Possible, if you do not define the Semigroupoid instance.\n\ncompRLP :: (Eq a1, Eq b, Eq a2) =&gt;\n     RelationLP a2 b -&gt; RelationLP a1 a2 -&gt; RelationLP a1 b     \nRLP r2 `compRLP` RLP r1 = RLP $ L.nub [(a, b) | (t, b) &lt;- r2, (a, t') &lt;- r1, t == t']\n\ninstance Semigroupoid RelationLP where\n    o = compRLP  \n{-    ERROR:\n      No instance for (Eq i) arising from a use of \u2018compRLP\u2019\n      Possible fix:\n        add (Eq i) to the context of\n          the type signature for:\n            o :: forall j k1 i.\n                 RelationLP j k1 -&gt; RelationLP i j -&gt; RelationLP i k1 -}\n\ninstance Category RelationLP where\n  type Object RelationLP o = Eq o\n  id = IdLP\n  (.) = compRLP\n</code></pre>\n"}, {"tags": ["haskell", "typeclass", "functional-dependencies", "type-level-computation"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1559424794, "post_id": 56410544, "comment_id": 99418231, "body": "You can list multiple ones like <code>class Foo a b | a -&gt; b, b -&gt; a where ...</code>, but that would make the two <code>instance Foo ... Bool</code>s problematic."}], "answers": [{"comments": [{"owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "edited": false, "score": 1, "creation_date": 1559441200, "post_id": 56410616, "comment_id": 99420408, "body": "Thank you.  That is exactly what I am looking for, the code I was showing was specifically code that I did not want to be possible, that was possible with the single functional dependency, perhaps I should have worded it better."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 8, "last_activity_date": 1559425269, "last_edit_date": 1559425269, "creation_date": 1559425057, "answer_id": 56410616, "question_id": 56410544, "link": "https://stackoverflow.com/questions/56410544/bidirectional-functional-dependencies/56410616#56410616", "title": "Bidirectional Functional Dependencies", "body": "<p>A <em>bidirectional dependency</em> between <code>a</code> and <code>b</code> can be presented as <em>two</em> functional dependencies <code>a -&gt; b</code> and <code>b -&gt; a</code>, like:</p>\n\n<pre><code>class Foo a b | a -&gt; b<b>, b -&gt; a</b> where\n  f :: a -&gt; Bool\n  g :: b -&gt; Bool\n  h :: a -&gt; b -&gt; Bool</code></pre>\n\n<p>So here <code>a</code> is functional dependent on <code>b</code> and <code>b</code> is functional dependent on <code>a</code>.</p>\n\n<p>For your <code>instance</code>s however this of course raises an error, since now you defined two different <code>a</code>s for <code>b ~ Bool</code>. This will raise an error like:</p>\n\n<pre><code>file.hs:6:10: error:\n    <b>Functional dependencies conflict</b> between instance declarations:\n      instance Foo () Bool -- Defined at file.hs:6:10\n      instance Foo ((), ()) Bool -- Defined at file.hs:11:10\nFailed, modules loaded: none.</code></pre>\n\n<p>Because of the functional dependency, you can only define one <code>a</code> for <code>b ~ Bool</code>. But this is probably exactly what you are looking for: a mechanism to prevent defining <code>Foo</code> twice for the same <code>a</code>, or the same <code>b</code>. </p>\n"}, {"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 3, "last_activity_date": 1559463963, "creation_date": 1559463963, "answer_id": 56413399, "question_id": 56410544, "link": "https://stackoverflow.com/questions/56410544/bidirectional-functional-dependencies/56413399#56413399", "title": "Bidirectional Functional Dependencies", "body": "<p>(This is more a comment than an answer, since it does not address the exact question the OP asked.)</p>\n\n<p>To complement Willem's answer: nowadays we have another way to make GHC accept this class.</p>\n\n<pre><code>class Foo a b | a -&gt; b where\n  f :: a -&gt; Bool\n  g :: b -&gt; Bool\n  h :: a -&gt; b -&gt; Bool\n</code></pre>\n\n<p>As GHC suggests in its error message, we can turn on <code>AllowAmbiguousTypes</code>. The OP noted that then run in troubles if we evaluate something like <code>g False</code> and there are two matching instances like</p>\n\n<pre><code>instance Foo () Bool where\n  f x = True\n  g y = y\n  h x y = False\n\ninstance Foo ((), ()) Bool where\n  f x = True\n  g y = not y\n  h x y = False\n</code></pre>\n\n<p>Indeed, in such case <code>g False</code> becomes ambiguous. We then have two options. </p>\n\n<p>First, we can forbid having both the instances above by adding a functional dependency <code>b -&gt; a</code> to the class (as Willem suggested). That makes <code>g False</code> to be unambiguous (and we do not need the extension in such case).</p>\n\n<p>Alternatively, we can leave both instances in the code, and disambiguate the call <code>g False</code> using type applications (another extension). For instance, <code>g @() False</code> chooses the first instance, while <code>g @((),()) False</code> chooses the second one.</p>\n\n<p>Full code:</p>\n\n<pre><code>{-# LANGUAGE MultiParamTypeClasses, FunctionalDependencies,\n    FlexibleInstances, AllowAmbiguousTypes, TypeApplications #-}\n\nclass Foo a b | a -&gt; b where\n  f :: a -&gt; Bool\n  g :: b -&gt; Bool\n  h :: a -&gt; b -&gt; Bool\n\ninstance Foo () Bool where\n  f x = True\n  g y = y\n  h x y = False\n\ninstance Foo ((), ()) Bool where\n  f x = True\n  g y = not y\n  h x y = False\n\nmain :: IO ()\nmain = print (g @() False, g @((),()) False)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "is_accepted": false, "score": 1, "last_activity_date": 1559526925, "creation_date": 1559526925, "answer_id": 56420305, "question_id": 56410544, "link": "https://stackoverflow.com/questions/56410544/bidirectional-functional-dependencies/56420305#56420305", "title": "Bidirectional Functional Dependencies", "body": "<p><a href=\"https://stackoverflow.com/a/56410616/4040600\">Willem Van Onsem's answer</a> is pretty much exactly what I wanted, but there is another way I realized that might be worth mentioning.  To get the intended behavior we can actually split our class up into multiple classes.  There are a couple of ways to do this and the best option probably depends on the specifics.  But here is one way you could do it for the code from the question:</p>\n\n<pre><code>class Bar b where\n  g :: b -&gt; Bool\n\nclass (Bar b) =&gt; Foo a b | a -&gt; b where\n  f :: a -&gt; Bool\n  h :: a -&gt; b -&gt; Bool\n</code></pre>\n\n<p>Now we do still allow us to make two different <code>Foo</code> instances with the same <code>b</code>, but we no longer get the ambiguity since <code>g</code> is now a member of <code>Bar</code> there must be a single instance across the two.</p>\n\n<p>This can be done in general by moving the functions that might be ambiguous and moving it to a separate type class.</p>\n\n<p>Another way we can use additional type classes to create a second class to enforce the bidirectionality.  For the example this would look like:</p>\n\n<pre><code>class Bar a b | b -&gt; a\n\nclass (Bar a b) =&gt; Foo a b | a -&gt; b where\n  f :: a -&gt; Bool\n  g :: b -&gt; Bool\n  h :: a -&gt; b -&gt; Bool\n</code></pre>\n\n<p>Here <code>Bar</code> is acts to make <code>b</code> dependent on <code>a</code> preventing us from having the ambiguity. Since <code>Foo</code> requires <code>Bar</code> and <code>Bar</code> allows <code>a</code> to be derived from <code>b</code>, any instance of <code>Foo</code> allows <code>a</code> to be derived from <code>b</code>.  This is pretty much what I wanted originally, however it is just a slightly more complex version of Willem Van Onsem's answer.</p>\n"}], "owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 236, "favorite_count": 0, "accepted_answer_id": 56410616, "answer_count": 3, "score": 9, "last_activity_date": 1559526925, "creation_date": 1559424277, "last_edit_date": 1559441572, "question_id": 56410544, "link": "https://stackoverflow.com/questions/56410544/bidirectional-functional-dependencies", "title": "Bidirectional Functional Dependencies", "body": "<p>I have a type class that looks a bit like the following:</p>\n\n<pre><code>class Foo a b | a -&gt; b where\n  f :: a -&gt; Bool\n  g :: b -&gt; Bool\n  h :: a -&gt; b -&gt; Bool\n</code></pre>\n\n<p>Or at least these are the bits that are important to my question.  This class does not compile, and for good reason. The problem with this class is that I could (if I wanted to) do the following:</p>\n\n<pre><code>instance Foo () Bool where\n  f x = True\n  g y = y\n  h x y = False\n\ninstance Foo ((), ()) Bool where\n  f x = True\n  g y = not y\n  h x y = False\n</code></pre>\n\n<p>Now if I call <code>g True</code> there are two separate results one for each instance.   And the compiler picks up on this possibility and informs me that my type class is no good.</p>\n\n<p>My issue is that the dependency <code>| a -&gt; b</code> is not quite what I mean.  I don't just mean that you can find <code>a</code> from <code>b</code>, but also that you can find <code>b</code> from <code>a</code>.  That is each type should only ever be a member of <code>Foo</code> with one other type so we can given one type find the other.  Or to put it in yet another way the dependency is bidirectional.  Such a functional dependency would prevent me from having <code>Bool</code> present in two separate instances because the first parameter would be derivable from the second as well as the second from the first.</p>\n\n<p>But I don't know how to express this idea to the compiler.</p>\n\n<p>How can I create a bidirectional functional dependency?  Or, more likely, is there a way that I can rephrase my type class to get something that could replace a bidirectional functional dependency?</p>\n"}, {"tags": ["haskell", "recursion", "functional-programming"], "comments": [{"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 1, "creation_date": 1559422615, "post_id": 56410104, "comment_id": 99417834, "body": "Unfortunately, this description leaves too much ambiguous to easily answer.  (For example, What&#39;s supposed to happen if <code>a_1</code> and <code>a_2</code> both satisfy the predicate -- is <code>a_1</code> returned or are they combined?  What if none of <code>a_1</code> through <code>a_n</code> satisfy it, but <code>g a_1</code> has two elements that satisfy the predicate, and <code>g a_2</code> has another?  What sort of &quot;combining&quot; are you talking about?) Can you explain what concrete problem you&#39;re trying to solve, even in a simplified form, or give us some concrete examples?"}, {"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1559423442, "post_id": 56410104, "comment_id": 99417988, "body": "It might be useful to look at the definition of <code>filter</code> from Prelude (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.List.html#filter\" rel=\"nofollow noreferrer\">here</a>), and adapt it to your needs - it seems to be the key component of what you&#39;re trying to do (at least as I understand it). Or cheat and use <code>find</code> from <code>Data.List</code>."}, {"owner": {"reputation": 5180, "user_id": 15527, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9b09f3f8d813d899d516943cd0220907?s=128&d=identicon&r=PG", "display_name": "Martin Spamer", "link": "https://stackoverflow.com/users/15527/martin-spamer"}, "edited": false, "score": 1, "creation_date": 1559475602, "post_id": 56410104, "comment_id": 99425525, "body": "You need to improve your question to avoid it being closed, you are far more likely to get a useful answer if your question is very clear.  please review how to ask questions: <a href=\"https://stackoverflow.com/help/how-to-ask\">stackoverflow.com/help/how-to-ask</a>"}], "answers": [{"tags": [], "owner": {"reputation": 66318, "user_id": 3510736, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/kVtHP.jpg?s=128&g=1", "display_name": "Ami Tavory", "link": "https://stackoverflow.com/users/3510736/ami-tavory"}, "is_accepted": true, "score": 1, "last_activity_date": 1559424371, "last_edit_date": 1559424371, "creation_date": 1559420342, "answer_id": 56410142, "question_id": 56410104, "link": "https://stackoverflow.com/questions/56410104/the-most-correct-way-to-iterate-over-a-list-in-haskell-and-return-the-element-f/56410142#56410142", "title": "The most correct way to iterate over a list in haskell, and return the element for which a condition is true", "body": "<p>How about if you define</p>\n\n<pre><code>satisfies:: [t]-&gt; (t -&gt; Bool) -&gt; Maybe t\n</code></pre>\n\n<p>which means that <code>satisifies</code> takes a list and a predicate, and returns a <a href=\"https://www.google.com/search?q=haskell+maybe\" rel=\"nofollow noreferrer\"><code>Maybe</code> of an element</a>. This is one way of indicating that there might not be an element satisfying the predicate (it makes the function <em>total</em>, meaning, it is always defined).</p>\n\n<p>Now if the list is empty, the return is <code>Nothing</code>:</p>\n\n<pre><code>satisfies [] _ = Nothing\n</code></pre>\n\n<p>Finally, </p>\n\n<pre><code>satisfies (x:xs) p = case p x of\n    True -&gt; Just x\n    False -&gt; satisfies xs p\n</code></pre>\n"}], "owner": {"reputation": 779, "user_id": 5760615, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/Y7T9x.jpg?s=128&g=1", "display_name": "Zeina Migeed", "link": "https://stackoverflow.com/users/5760615/zeina-migeed"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 89, "favorite_count": 0, "accepted_answer_id": 56410142, "answer_count": 1, "score": -2, "last_activity_date": 1559424371, "creation_date": 1559419941, "question_id": 56410104, "link": "https://stackoverflow.com/questions/56410104/the-most-correct-way-to-iterate-over-a-list-in-haskell-and-return-the-element-f", "title": "The most correct way to iterate over a list in haskell, and return the element for which a condition is true", "body": "<p>I have a function which takes some argument and calls another function which returns a list of the form [a_1, a_2, ..., a_n].</p>\n\n<p>What I am trying to do is call a predicate p on each item in the list, and return the item for which p(a_i)=True.</p>\n\n<p>If not, then I will recursively repeat the algorithm for all a_i.</p>\n\n<p>The structure is as follows:</p>\n\n<pre><code>f :: t -&gt; t\nf =  (g t) --this is a list\n     (p ?) -- p is a predicate on each element \n</code></pre>\n\n<p>I want to call this  predicate p on each item on the list then return the item if the predicate is true.</p>\n\n<p>If the predicate does not hold for all items, then I recursively call f on each item in the list which I realize will give me multiple \"t\" which I know how to combine into a single t to match my signature.</p>\n\n<p>I found this:</p>\n\n<p><a href=\"https://stackoverflow.com/questions/47122615/how-to-get-out-of-iterate-loop-when-a-condition-is-met\">How to get out of iterate loop when a condition is met?</a></p>\n\n<p>But the structure of the condition looks different than what I am trying to do.</p>\n\n<p>Could someone possibly point me to the right direction?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 4, "creation_date": 1559414736, "post_id": 56409496, "comment_id": 99416141, "body": "Haskell handles this with the <code>Integer</code> type for arbitrary sized integers, the <code>Int</code> is however a fixed word size integer."}], "answers": [{"comments": [{"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1559443981, "post_id": 56409534, "comment_id": 99420647, "body": "What is this <code>p</code> in your answer? You mean <code>b2</code> again, right?"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 7, "last_activity_date": 1559457452, "last_edit_date": 1559457452, "creation_date": 1559414969, "answer_id": 56409534, "question_id": 56409496, "link": "https://stackoverflow.com/questions/56409496/why-does-this-code-overflow-with-int-int/56409534#56409534", "title": "Why does this code overflow with Int -&gt; Int?", "body": "<blockquote>\n  <p>I assume I have some overflow. But I thought Haskell handled this.</p>\n</blockquote>\n\n<p>It is indeed overflow, and Haskell has a type to handle integral numbers with arbitrary size: the <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Integer\" rel=\"nofollow noreferrer\"><strong><code>Integer</code></strong></a>. You however use an <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Int\" rel=\"nofollow noreferrer\"><strong><code>Int</code></strong></a>. As the documentation specifies, for an <code>Int</code>:</p>\n\n<blockquote>\n  <p><strong><code>data Int</code></strong></p>\n  \n  <p>A <strong>fixed-precision integer type</strong> with at least the range <code>[-2^29 .. 2^29-1]</code>. The exact range for a given implementation can be determined by using <code>minBound</code> and <code>maxBound</code> from the <code>Bounded</code> class.</p>\n</blockquote>\n\n<p>An <code>Int</code> thus has a fixed word size, and can overflow. You can use an <code>Integer</code> however that can represent an arbitrary number (well until the memory is exhausted).</p>\n\n<p>If we thus change the definition to:</p>\n\n<pre><code>power :: <b>Integer</b> -&gt; <b>Integer</b>\npower 0 = 1\npower n = 2 * power (n-1)</code></pre>\n\n<p>we indeed can calculate <em>2<sup>128</sup></em>:</p>\n\n<pre><code>Prelude&gt; power 128\n340282366920938463463374607431768211456\n</code></pre>\n\n<p>Note that we can boost the performance of this <code>power</code> function with:</p>\n\n<pre><code>power :: Integral i => i -&gt; Integer\npower 0 = 1\npower n | even n = b2 * b2\n        | otherwise = 2 * b2 * b2\n    where b2 = power (div n 2)</code></pre>\n\n<p>This holds since <em>b<sup>2 a</sup> = (b<sup>2)a</sup></em>. If we thus assume that all the operations are in constant time, then this algorithm runs in <em>O(log p)</em>. This however does not completely hold, since <code>b2</code> can be quite large, and thus multiplying <code>b2</code> does not run in constant time.</p>\n"}], "owner": {"reputation": 212, "user_id": 2204000, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3438be2ebed4ad7281b065b587b740cc?s=128&d=identicon&r=PG", "display_name": "Trevor Lee Oakley", "link": "https://stackoverflow.com/users/2204000/trevor-lee-oakley"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 69, "favorite_count": 0, "accepted_answer_id": 56409534, "answer_count": 1, "score": 2, "last_activity_date": 1559457452, "creation_date": 1559414631, "question_id": 56409496, "link": "https://stackoverflow.com/questions/56409496/why-does-this-code-overflow-with-int-int", "title": "Why does this code overflow with Int -&gt; Int?", "body": "<p>I am using recursive calls to calc an exponent. It works to 2**63 and then zeros out. I assume I have some overflow. But I thought Haskell handled this.</p>\n\n<p>I tried numbers until 64 and checked into Int.</p>\n\n<pre><code>power :: Int -&gt; Int\npower n = if n==0 then 1 else 2*power(n-1)\nmain = return()\n</code></pre>\n\n<p>In GHCI</p>\n\n<pre><code>1152921504606846976\n*Main&gt; power 70\n0\n*Main&gt; power 65\n0\n*Main&gt; power 64\n0\n*Main&gt; power 63\n-9223372036854775808\n*Main&gt; power 62\n4611686018427387904\n</code></pre>\n"}, {"tags": ["haskell", "functional-programming", "lazy-evaluation", "ghc"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1559408726, "post_id": 56408750, "comment_id": 99414745, "body": "Only once. Since <code>(+1)</code> on the other elements are postponed."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1559409325, "post_id": 56408750, "comment_id": 99414898, "body": "Note that the definition of <code>map</code> is also necessary to properly answer this question. (Willem&#39;s answer makes the reasonable assumption that <code>map</code> is defined in a similar way to that <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch9.html#x16-1720009.1\" rel=\"nofollow noreferrer\">in the Report Prelude</a> or <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.Base.html#map\" rel=\"nofollow noreferrer\">in GHC</a>.)"}, {"owner": {"reputation": 25321, "user_id": 163177, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e811b5337bcad19d52c8fed3a0ea0075?s=128&d=identicon&r=PG", "display_name": "John F. Miller", "link": "https://stackoverflow.com/users/163177/john-f-miller"}, "edited": false, "score": 2, "creation_date": 1559409692, "post_id": 56408750, "comment_id": 99414995, "body": "Well technically since there is never a demand to match, print, or branch on the result of the given statement, the statement it&#39;s self would never be evaluated. There is an argument to be made that 0 is the correct answer."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 25321, "user_id": 163177, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e811b5337bcad19d52c8fed3a0ea0075?s=128&d=identicon&r=PG", "display_name": "John F. Miller", "link": "https://stackoverflow.com/users/163177/john-f-miller"}, "edited": false, "score": 1, "creation_date": 1559410037, "post_id": 56408750, "comment_id": 99415088, "body": "@JohnF.Miller: well I assume that they typically include evaluation of the final value (as if one would write an implicit <code>print</code> or something)."}], "answers": [{"comments": [{"owner": {"reputation": 418, "user_id": 6106932, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1fe6348cb3a1f3b9a7afd420777c587a?s=128&d=identicon&r=PG&f=1", "display_name": "Vlad Iordache", "link": "https://stackoverflow.com/users/6106932/vlad-iordache"}, "edited": false, "score": 1, "creation_date": 1559410027, "post_id": 56408797, "comment_id": 99415085, "body": "thank you! is it some tool that prints the evaluation like this or did you just write it?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 418, "user_id": 6106932, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1fe6348cb3a1f3b9a7afd420777c587a?s=128&d=identicon&r=PG&f=1", "display_name": "Vlad Iordache", "link": "https://stackoverflow.com/users/6106932/vlad-iordache"}, "edited": false, "score": 0, "creation_date": 1559410367, "post_id": 56408797, "comment_id": 99415166, "body": "@VladIordache: I once stumbled upon a website that could show the lazy evaluation, but I can not find it immediately."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 9, "last_activity_date": 1559409905, "last_edit_date": 1559409905, "creation_date": 1559409012, "answer_id": 56408797, "question_id": 56408750, "link": "https://stackoverflow.com/questions/56408750/how-many-times-is-1-computed-here/56408797#56408797", "title": "How many times is (+ 1) computed here?", "body": "<blockquote>\n  <p>many times is <code>(+ 1)</code> function computed in the following code?</p>\n</blockquote>\n\n<p>It is calculated only <em>once</em>. <code>map</code> does not force to calculate <code>f x<sub>i</sub></code> on the elements in the result list. These calculations are postponed (just like everything else in Haskell), only when we need to calculate the value of a specific item, we do that.</p>\n\n<p><code>map</code> is specified in <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch9.html#x16-1720009.1\" rel=\"noreferrer\">chapter 9 of the Haskell'10 report</a> as:</p>\n\n<blockquote><pre><code>-- Map and append  \nmap :: (a -&gt; b) -&gt; [a] -&gt; [b]  \nmap f []     = []  \nmap f (x:xs) = f x : map f xs</code></pre></blockquote>\n\n<p>There are no <code>seq</code>, bang patterns, etc. here to force evaluation of <code>f x</code>, so the <code>map</code> function will indeed \"yield\" an <code>f x</code>, but <em>without</em> evaluating <code>f x</code>, it is postponed until it is necessary (and it might happen that we are not interested in some of these values, and thus can save some CPU cycles).</p>\n\n<p>We can take a look how Haskell will evaluate this:</p>\n\n<pre><code>   (!!) (map (+ 1) [1 .. 10]) 5\n-&gt; (!!) ((+1) 1 : map (+1) [2..10]) 5\n-&gt; (!!) (map (+1) [2..10]) 4\n-&gt; (!!) ((+1) 1 : map (+1) [3..10]) 4\n-&gt; (!!) (map (+1) [3..10]) 3\n-&gt; (!!) ((+1) 1 : map (+1) [4..10]) 3\n-&gt; (!!) (map (+1) [4..10]) 2\n-&gt; (!!) ((+1) 1 : map (+1) [5..10]) 2\n-&gt; (!!) (map (+1) [5..10]) 1\n-&gt; (!!) ((+1) 1 : map (+1) [6..10]) 1\n-&gt; (!!) (map (+1) [6..10]) 0\n-&gt; (!!) ((+1) 6 : map (+1) [7..10]) 0\n-&gt; (+1) 6\n-&gt; 7\n</code></pre>\n\n<p>This is because <code>map f [x1, x2, ..., xn]</code> eventually maps to a list <code>[f x1, f x2, ..., f xn]</code>, but it does <em>not</em> compute <code>f x<sub>i</sub></code> of the elements, that computation is postponed until we actually would need the value in that list, and do something with it (like priting it).</p>\n\n<p>This can result in a significant performance boost, given <code>f</code> is an expensive function, and we only need the value of a small amount of elements in the list.</p>\n"}, {"tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": false, "score": 7, "last_activity_date": 1559409355, "last_edit_date": 1559409355, "creation_date": 1559409102, "answer_id": 56408809, "question_id": 56408750, "link": "https://stackoverflow.com/questions/56408750/how-many-times-is-1-computed-here/56408809#56408809", "title": "How many times is (+ 1) computed here?", "body": "<p>Let's test it by doing something horrible. You'll need to import the <code>Debug.Trace</code> module for this.</p>\n\n<pre><code>ghci&gt; (map (\\x -&gt; trace \"Performing...\" (x + 1)) [1..10]) !! 5\n</code></pre>\n\n<p>Now, we'll get that totally safe <code>IO</code> action to happen every time the lambda expression is called. When we run this in GHCi, we get</p>\n\n<pre><code>Performing\n7\n</code></pre>\n\n<p>So only once.</p>\n\n<p>As a sanity check, we could remove the <code>!! 5</code> bit.</p>\n\n<pre><code>ghci&gt; map (\\x -&gt; trace \"Performing...\" (x + 1)) [1..10]\n[Performing\n2,Performing\n3,Performing\n4,Performing\n5,Performing\n6,Performing\n7,Performing\n8,Performing\n9,Performing\n10,Performing\n11]\n</code></pre>\n\n<p>So it's definitely happening 10 times when we ask for the whole list.</p>\n"}], "owner": {"reputation": 418, "user_id": 6106932, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/1fe6348cb3a1f3b9a7afd420777c587a?s=128&d=identicon&r=PG&f=1", "display_name": "Vlad Iordache", "link": "https://stackoverflow.com/users/6106932/vlad-iordache"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 0, "accepted_answer_id": 56408797, "answer_count": 2, "score": 5, "last_activity_date": 1559409905, "creation_date": 1559408631, "last_edit_date": 1559408727, "question_id": 56408750, "link": "https://stackoverflow.com/questions/56408750/how-many-times-is-1-computed-here", "title": "How many times is (+ 1) computed here?", "body": "<p>On my functional programming exam, I had the following question:</p>\n\n<p>How many times is (+ 1) function computed in the following code?</p>\n\n<pre><code>(map (+ 1) [1 .. 10]) !! 5\n</code></pre>\n\n<p>where the index function is defined like this:</p>\n\n<pre><code>(h:_) !! 0 = h\n(_:t) !! x = t !! (x-1)\n</code></pre>\n\n<p>I would say 6 times, but the correct answer seems to be 1, and I cannot understand why. I could not find a good enough explanation of lazy evaluation in Haskell, so I would like to know what is the correct answer and why. Thank you in advance!</p>\n"}, {"tags": ["list", "haskell", "traversable"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1559403326, "post_id": 56407905, "comment_id": 99413270, "body": "What would you use the generalised version for? I&#39;m inclined to think it would be enough to have <code>walk</code> return a specific structure (be it a list, a map, or something else) and then convert it into something else in a separate step, but it might help to know your intended use case."}], "answers": [{"comments": [{"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 2, "creation_date": 1559403563, "post_id": 56408072, "comment_id": 99413329, "body": "Exactly.  This can be determined by looking at the type signatures of the Traversable methods.  All of them have the traversable <code>t</code> in the negative position and thus can not be used to product an arbitrary <code>t</code> result."}], "tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 5, "last_activity_date": 1559403329, "creation_date": 1559403329, "answer_id": 56408072, "question_id": 56407905, "link": "https://stackoverflow.com/questions/56407905/how-to-convert-function-returning-to-traversable/56408072#56408072", "title": "How to convert function returning [] to Traversable?", "body": "<blockquote>\n  <p>I think it's failing on the <code>:</code>?</p>\n</blockquote>\n\n<p>Indeed it is. If you use <code>(:)</code> to build the structure, the structure will be a list, and you can't change the type of <code>walk</code> to claim it returns an arbitrary traversable structure. There isn't really a good <code>Traversable</code>-centric workaround, either: <code>Traversable</code> means you have, via its <code>Foldable</code> superclass, a <code>toList</code>, but not a <code>fromList</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": true, "score": 3, "last_activity_date": 1559406846, "creation_date": 1559406846, "answer_id": 56408531, "question_id": 56407905, "link": "https://stackoverflow.com/questions/56407905/how-to-convert-function-returning-to-traversable/56408531#56408531", "title": "How to convert function returning [] to Traversable?", "body": "<p>Polymorphic production of lists, and designing classes for polymorphic containers in general, has proven to be more difficult than it might first appear.  GHC's current solution for producing fully polymorphic containers, vs just operating over a pre-existing container such as with <code>Traversable</code>, is the <code>IsList</code> class.</p>\n\n<p>Defined in <code>GHC.Exts</code> as:</p>\n\n<pre><code>class IsList l where\n  type Item l\n  fromList  :: [Item l] -&gt; l\n  ...\n</code></pre>\n\n<p>There are already instances for lists, non empty lists, maps, and most other types coming from what you'd think of as standard Haskell libraries.</p>\n\n<p>Notice the type parameter, <code>l</code>, is of kind <code>*</code> and not what you might expect from a container of <code>* -&gt; *</code>.  You provide the fully applied type and can constrain the <code>Item l</code> type with type equality if desired.  For example:</p>\n\n<pre><code>{-# LANGUAGE TypeFamilies #-}\nmodule Walk\n  ( walk\n  ) where\n\nimport           Control.Monad\nimport           Control.Monad.IO.Class\nimport           Data.List\nimport           System.Directory\nimport           System.FilePath\nimport           GHC.Exts\n\nwalk :: (IsList l, Item l ~ (FilePath,[FilePath]), MonadIO m) =&gt; FilePath -&gt; m l\nwalk root =\n  do entries &lt;- liftIO $ listDirectory root\n     (files, dirs) &lt;- partition snd &lt;$&gt; liftM2 (&lt;$&gt;) zip (mapM (liftIO . doesFileExist . (root &lt;/&gt;))) entries\n     fromList . ((root, map fst files) :) . concat &lt;$&gt; mapM (walk . (root &lt;/&gt;) . fst) dirs\n</code></pre>\n"}], "owner": {"reputation": 939, "user_id": 11140945, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5Esk.png?s=128&g=1", "display_name": "Listerone", "link": "https://stackoverflow.com/users/11140945/listerone"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 88, "favorite_count": 0, "accepted_answer_id": 56408531, "answer_count": 2, "score": 4, "last_activity_date": 1559406846, "creation_date": 1559402016, "question_id": 56407905, "link": "https://stackoverflow.com/questions/56407905/how-to-convert-function-returning-to-traversable", "title": "How to convert function returning [] to Traversable?", "body": "<p>I have the following module which implements a directory walk:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>module Walk\n  ( walk\n  ) where\n\nimport           Control.Monad\nimport           Control.Monad.IO.Class\nimport           Data.List\nimport           System.Directory\nimport           System.FilePath\n\nwalk :: (MonadIO m) =&gt; FilePath -&gt; m [(FilePath, [FilePath])]\nwalk root = do\n  entries &lt;- liftIO $ listDirectory root\n  (files, dirs) &lt;- partition snd &lt;$&gt; liftM2 (&lt;$&gt;) zip (mapM (liftIO . doesFileExist . (root &lt;/&gt;))) entries\n  ((root, map fst files) :) . concat &lt;$&gt; mapM (walk . (root &lt;/&gt;) . fst) dirs\n</code></pre>\n\n<p>It currently returns a list, but I'd like it to return a <code>Traversable</code> instead:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>walk :: (MonadIO m, Traversable t) =&gt; FilePath -&gt; m (t (FilePath, [FilePath]))\n</code></pre>\n\n<p>If I change the signature, I get the following error:</p>\n\n<pre><code>    \u2022 Couldn't match type \u2018t\u2019 with \u2018[]\u2019\n      \u2018t\u2019 is a rigid type variable bound by\n        the type signature for:\n          walk :: forall (m :: * -&gt; *) (t :: * -&gt; *).\n                  (MonadIO m, Traversable t) =&gt;\n                  FilePath -&gt; m (t (FilePath, [FilePath]))\n      Expected type: m (t (FilePath, [FilePath]))\n        Actual type: m [(FilePath, [FilePath])]\n    \u2022 In a stmt of a 'do' block:\n        ((root, map fst files) :) . concat\n          &lt;$&gt; mapM (walk . (root &lt;/&gt;) . fst) dirs\n      In the expression:\n        do entries &lt;- liftIO $ listDirectory root\n           (files, dirs) &lt;- partition snd\n                              &lt;$&gt;\n                                liftM2\n                                  (&lt;$&gt;) zip (mapM (liftIO . doesFileExist .\n(root &lt;/&gt;))) entries\n           ((root, map fst files) :) . concat\n             &lt;$&gt; mapM (walk . (root &lt;/&gt;) . fst) dirs\n      In an equation for \u2018walk\u2019:\n          walk root\n            = do entries &lt;- liftIO $ listDirectory root\n                 (files, dirs) &lt;- partition snd\n                                    &lt;$&gt;\n                                      liftM2\n                                        (&lt;$&gt;)\n                                        zip\n                                        (mapM (liftIO . doesFileExist .\n(root &lt;/&gt;)))\n                                        entries\n                 ((root, map fst files) :) . concat\n                   &lt;$&gt; mapM (walk . (root &lt;/&gt;) . fst) dirs\n    \u2022 Relevant bindings include\n        walk :: FilePath -&gt; m (t (FilePath, [FilePath]))\n</code></pre>\n\n<p>I think it's failing on the <code>:</code>? I can't be sure. How do I fix this?</p>\n"}, {"tags": ["haskell", "category-abstractions"], "comments": [{"owner": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "edited": false, "score": 0, "creation_date": 1559402331, "post_id": 56407814, "comment_id": 99412992, "body": "@luqui. But If delete the type declarations I get another error: &quot;Expecting two more arguments to \u2018FC.Functor RelationMS\u2019       Expected a constraint, ...&quot;"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1559402488, "post_id": 56407814, "comment_id": 99413043, "body": "<code>Object</code> is defined by the <code>Category</code>(s), you don&#39;t have to define it again in <code>Functor</code>. But your <code>pseudoFmap</code> is between categories <code>(-&gt;)</code> and <code>(-&gt;)</code> so there&#39;s nowhere for the constraint to show up.  Learn about functors in category theory (not haskell) and it will make sense."}, {"owner": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1559403189, "post_id": 56407814, "comment_id": 99413230, "body": "@luqui Another point: how and where to define Object t (f a) and Object t (f a) required by the type fmap?"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1559404821, "post_id": 56407814, "comment_id": 99413667, "body": "Meta question: does anyone have suggestions of a tag for questions about using packages such as <i>constrained-categories</i>? [categories] <a href=\"https://meta.stackoverflow.com/questions/370697/what-is-the-point-of-the-category-tag\">is hopelessly vague</a>, and [category-theory], while workable, feels a bit off, as the focus of such questions isn&#39;t necessarily on the theoretical aspects."}, {"owner": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1559405015, "post_id": 56407814, "comment_id": 99413702, "body": "@duplode. Could be something like: [package.theory] or  [package.application]?"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1559405364, "post_id": 56407814, "comment_id": 99413811, "body": "@AlbertoCapitani Simply [constrained-categories] might work, though I would rather have a tag that would also work for questions about packages like <a href=\"http://hackage.haskell.org/package/categories\" rel=\"nofollow noreferrer\"><i>categories</i></a> or <a href=\"https://hackage.haskell.org/package/data-category-0.7\" rel=\"nofollow noreferrer\"><i>data-category</i></a>. That isn&#39;t really a problem with most tags (something like [traversable], for instance, feels just as adequate for theoretical and practical questions); it is mostly the &quot;theory&quot; word in [category-theory] that bothers me. Or maybe I&#39;m just overthinking it :)"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1559478277, "post_id": 56407814, "comment_id": 99426066, "body": "@duplode perhaps <code>category-abstractions</code> or <code>type-category</code> or <code>haskell-category</code>?"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1559481400, "post_id": 56407814, "comment_id": 99426784, "body": "@leftaroundabout [category-abstractions] sounds okay. While in the past I hadn&#39;t been too enthusiastic about the similar suggestion <a href=\"https://meta.stackoverflow.com/a/267069/2751851\">of using &#91;arrow-abstraction&#93; for <code>Arrow</code></a>, in this case it does feel like the best available option."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1559487511, "post_id": 56407814, "comment_id": 99428204, "body": "@leftaroundabout P.S.: I have just created <a href=\"https://stackoverflow.com/questions/tagged/category-abstractions\">category-abstractions</a>."}, {"owner": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1559488378, "post_id": 56407814, "comment_id": 99428386, "body": "@leftaroundabout Best choice."}], "answers": [{"comments": [{"owner": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "edited": false, "score": 0, "creation_date": 1559407511, "post_id": 56408500, "comment_id": 99414437, "body": "Now I have clearer ideas. But: 1) fmap = pseudoFmap . unconstrained give me this error: parse error on input \u2018=\u2019    Perhaps you need a &#39;let&#39; in a &#39;do&#39; block? 2) As a note in uncostrained definition: &quot;Note that you may often not need to do that; in particular morphisms that are actually Functions can just be applied to their objects with $ right away, no need to go back to Hask first.&quot; What exactly means? It is applicable in this case?"}, {"owner": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "edited": false, "score": 0, "creation_date": 1559408818, "post_id": 56408500, "comment_id": 99414768, "body": "Even after entering &quot;where&quot; and adding FC. before Functor, GHCi gives this error: Ambiguous occurrence \u2018.\u2019 I tried all the two alternatives unsuccessful."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "edited": false, "score": 0, "creation_date": 1559409252, "post_id": 56408500, "comment_id": 99414872, "body": "There are two <code>(.)</code>s: the one in <code>Category</code> and the one in <code>Prelude</code>. I forgot to qualify it."}, {"owner": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "edited": false, "score": 0, "creation_date": 1559410709, "post_id": 56408500, "comment_id": 99415250, "body": "After your last update GHCi ghive this error: In the instance declaration for         \u2018FC.Functor (RelationMS a) (ConstrainedCategory (-&gt;) Ord) Fun\u2019 : error: Illegal instance declaration for         \u2018FC.Functor (RelationMS a) (ConstrainedCategory (-&gt;) Ord) Fun\u2019         (All instance types must be of the form (T a1 ... an)          where a1 ... an are <i>distinct type variables</i>,          and each type variable appears at most once in the instance head.          Use FlexibleInstances if you want to disable this.)"}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "edited": false, "score": 0, "creation_date": 1559413200, "post_id": 56408500, "comment_id": 99415820, "body": "Do as it says. Set <code>-XFlexibleInstances</code>. It&#39;ll also ask for <code>-XMultiParamTypeClasses</code>."}, {"owner": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "edited": false, "score": 0, "creation_date": 1559462595, "post_id": 56408500, "comment_id": 99423038, "body": ":t FC.fmap (+1) (RMS $ M.fromList [(1,S.fromList [10,20]), (2,S.fromList [30,40])])  :: (P.Functor (RelationMS a), Num b, Num a, Ord a, Ord b) =&gt;      RelationMS a b -- But, let (RMS r) = it give this error:  &quot;Non type-variable argument         in the constraint: P.Functor (RelationMS a)       (Use FlexibleContexts to permit this)&quot;.  Adding FlexibleContexts to the pragma doesn&#39;t change the result. What&#39;s wrong?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1559475276, "post_id": 56408500, "comment_id": 99425449, "body": "@HTNW Instead of defining a custom <code>Fun</code> newtype, you can also use <a href=\"http://hackage.haskell.org/package/trivial-constraint-0.5.0.0/docs/Data-Constraint-Trivial.html\" rel=\"nofollow noreferrer\"><code>ConstrainedCategory (-&gt;) Unconstrained</code></a>. This gives you the instances for free, including also the <a href=\"http://hackage.haskell.org/package/constrained-categories-0.3.1.1/docs/Control-Arrow-Constrained.html#g:4\" rel=\"nofollow noreferrer\">overloaded <code>$</code> operator</a>, which makes it a lot more convenient."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "edited": false, "score": 0, "creation_date": 1559477517, "post_id": 56408500, "comment_id": 99425942, "body": "@AlbertoCapitani the problem is that <code>(+1)</code> is not a <code>ConstrainedCategory</code>-morphism, but just an unconstrained function. You need to wrap it in <a href=\"http://hackage.haskell.org/package/constrained-categories-0.3.1.1/docs/Control-Category-Constrained.html#v:constrained\" rel=\"nofollow noreferrer\"><code>constrained</code></a>, and also give it a signature so the compiler knows from what category the functor is supposed to map. See my answer."}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": false, "score": 2, "last_activity_date": 1559410062, "last_edit_date": 1559410062, "creation_date": 1559406611, "answer_id": 56408500, "question_id": 56407814, "link": "https://stackoverflow.com/questions/56407814/how-to-define-an-instance-of-control-functor-constrained/56408500#56408500", "title": "How to define an instance of Control.Functor.Constrained?", "body": "<p>You probably don't mean to make <code>RelationMS</code> a <code>Functor</code> (it can be made one, but not with <code>constrained-categories</code>). You mean to make <code>RelationMS a</code> a <code>Functor</code> for all <code>a</code>; you want <code>Functor (RelationMS a)</code>. Also, <code>Functor</code>s exist between two <code>Category</code>s, so you must define the <code>Category</code>s that <code>RelationMS a</code> is a <code>Functor</code> between. The source category is <code><a href=\"https://hackage.haskell.org/package/constrained-categories-0.3.1.1/docs/Control-Category-Constrained.html\" rel=\"nofollow noreferrer\">ConstrainedCategory</a> (-&gt;) Ord</code>, and the output category is <code>(-&gt;)</code>. However, there's a \"default\" <code>instance Prelude.Functor f =&gt; FC.Functor f (-&gt;) (-&gt;)</code> instance that stops <code>instance FC.Functor (RelationMS a) (ConstrainedCategory (-&gt;) Ord) (-&gt;)</code> from working, due to a fundep conflict. Define this <code>newtype</code></p>\n\n<pre><code>newtype Fun a b = Fun { runFun :: a -&gt; b }\ninstance Category Fun where\n  id = Fun Prelude.id\n  Fun f . Fun g = Fun (f Prelude.. g)\n</code></pre>\n\n<p>That's two of <code>Functor</code>'s superclasses satisfied, and the third one is satisfied as <code>Object Fun o = ()</code>. So, you get</p>\n\n<pre><code>instance FC.Functor (RelationMS a) (ConstrainedCategory (-&gt;) Ord) Fun where\n  fmap = Fun Prelude.. pseudoFmap Prelude.. unconstrained\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "edited": false, "score": 0, "creation_date": 1559477875, "post_id": 56414855, "comment_id": 99425997, "body": "Unfortunately, right now Hoogle is &quot;down&quot; and I can&#39;t load the library that contains Data.Constraint.Trivial (I can try with cabal install if you tell me what the package is called). It seems to me that you have given a very different solution than the one attempted yesterday. Before telling you that I solved my problem, I would like to check how it works on my computer :-)"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "edited": false, "score": 0, "creation_date": 1559477960, "post_id": 56414855, "comment_id": 99426005, "body": "<a href=\"http://hackage.haskell.org/package/trivial-constraint-0.5.0.0/docs/Data-Constraint-Trivial.html\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/trivial-constraint-0.5.0.0/docs/&zwnj;&#8203;&hellip;</a>"}, {"owner": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "edited": false, "score": 0, "creation_date": 1559478070, "post_id": 56414855, "comment_id": 99426025, "body": "Error 503 Backend unavailable, connection timeout Backend unavailable, connection timeout  Guru Mediation: Details: cache-ams21034-AMS 1559477991 3716549772"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "edited": false, "score": 0, "creation_date": 1559478133, "post_id": 56414855, "comment_id": 99426036, "body": "Well, Hackage problems...? can&#39;t help you with that I&#39;m afraid!"}, {"owner": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "edited": false, "score": 0, "creation_date": 1559767157, "post_id": 56414855, "comment_id": 99526861, "body": "Sorry for the delay, but I spent time reading the classes documentation.About the syntactict sugar proposed: 1) I use Notepad ++ and the turnstile symbol is not allowed (UTF-8 only). I propose the substitute (|-). 2) Following the recommended import list, I simplified the code a bit and applied your sugar&#39;s recipes.It&#39;s all much more readable. This is due to the last version of the package. So why don&#39;t put an allert of new release in this thread?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "edited": false, "score": 0, "creation_date": 1559767838, "post_id": 56414855, "comment_id": 99527152, "body": "@AlbertoCapitani Hmm...? UTF-8 sure includes the turnstile, as well as all other Unicode characters. Right here you see it in UTF-8, which really should <a href=\"http://utf8everywhere.org/\" rel=\"nofollow noreferrer\">be used everywhere</a>. Anyway... I know many people still like to stick to ASCII only in source code, which is fine. You can always just write out <code>ConstrainedCategory</code>. But I think the TypeApplications-<code>constrained @Ord</code> version really is better than either way of writing a long signature."}, {"owner": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "edited": false, "score": 0, "creation_date": 1559768086, "post_id": 56414855, "comment_id": 99527229, "body": "First, thank for the link. Second, I agree with you that the TypeApplication is much more clear. I&#39;d like to show you the &quot;polished&quot; version of the solution, mainly because I think it could be useful to some readers (with your possible further corrections). If you agree, what should I do?"}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 2, "last_activity_date": 1559556483, "last_edit_date": 1559556483, "creation_date": 1559477243, "answer_id": 56414855, "question_id": 56407814, "link": "https://stackoverflow.com/questions/56407814/how-to-define-an-instance-of-control-functor-constrained/56414855#56414855", "title": "How to define an instance of Control.Functor.Constrained?", "body": "<pre><code>{-# LANGUAGE GADTs, TypeFamilies, ConstraintKinds, FlexibleInstances\n  , MultiParamTypeClasses, StandaloneDeriving #-}\n\nmodule Question1 where\n\nimport Prelude hiding (($))\n\nimport Control.Category.Constrained\nimport Control.Functor.Constrained as FC \nimport Control.Arrow.Constrained (($))\nimport Data.Map as M\nimport Data.Set as S\nimport Data.Constraint.Trivial\n\n\nmain :: IO ()\nmain = print $ FC.fmap f\n         $ RMS (M.fromList [(1,S.fromList [11,21]),(2,S.fromList [31,41])])\n where f :: ConstrainedCategory (-&gt;) Ord Int Int\n       f = constrained (+1)\n\n\ndata RelationMS a b where\n  IdRMS :: RelationMS a a\n  RMS :: Map a (Set b) -&gt; RelationMS a b \nderiving instance (Show a, Show b) =&gt; Show (RelationMS a b)\n\ninstance Category RelationMS where\n    type Object RelationMS o = Ord o\n    id = IdRMS\n    (.) = compRMS\n\ncompRMS :: (Ord a, Ord k, Ord b) =&gt; RelationMS k b -&gt; RelationMS a k -&gt; RelationMS a b \nRMS mp2 `compRMS` RMS mp1\n  | M.null mp2 || M.null mp1 = RMS M.empty\n  | otherwise = RMS $ M.foldrWithKey \n        (\\k s acc -&gt; M.insert k (S.foldr (\\x acc2 -&gt; case M.lookup x mp2 of\n                                                    Nothing -&gt; acc2\n                                                    Just s2 -&gt; S.union s2 acc2\n                                         ) S.empty s\n                                ) acc\n        ) M.empty mp1\n\npseudoFmap :: Ord c =&gt;  (b -&gt; c) -&gt; RelationMS a b -&gt; RelationMS a c\npseudoFmap f (RMS r) = RMS $ M.map (S.map f) r\n\ninstance FC.Functor (RelationMS a)\n                    (ConstrainedCategory (-&gt;) Ord)\n                    (ConstrainedCategory (-&gt;) Unconstrained) where\n    fmap (ConstrainedMorphism f) = ConstrainedMorphism $\n            \\(RMS r) -&gt; pseudoFmap f (RMS r)\n</code></pre>\n\n<pre>RMS (fromList [(1,fromList [12,22]),(2,fromList [32,42])])</pre>\n\n<p>BTW, you can make the definitions of those maps and sets easier to type/read with a syntactic extension:</p>\n\n<pre><code>{-# LANGUAGE OverloadedLists #-}\nmain :: IO ()\nmain = print $ FC.fmap f $ RMS [(1, [11,21]),(2, [31,41])]\n where f :: ConstrainedCategory (-&gt;) Ord Int Int\n       f = constrained (+1)\n</code></pre>\n\n<p>Talking about syntactic sugar: with <a href=\"http://hackage.haskell.org/package/constrained-categories-0.4.0.0\" rel=\"nofollow noreferrer\"><code>constrained-categories&gt;=0.4</code></a>, you can also shorten the type signature</p>\n\n<pre><code>{-# LANGUAGE TypeOperators #-}\nmain = print $ FC.fmap f\n         $ RMS (M.fromList [(1,S.fromList [11,21]),(2,S.fromList [31,41])])\n where f :: (Ord\u22a2(-&gt;)) Int Int\n       f = constrained (+1)\n</code></pre>\n\n<p>or even omit it entirely and instead specify the constraint with a <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#extension-TypeApplications\" rel=\"nofollow noreferrer\">type application</a> on <code>constrained</code>:</p>\n\n<pre><code>{-# LANGUAGE TypeApplications, OverloadedLists #-}\nmain :: IO ()\nmain = print $ FC.fmap (constrained @Ord (+1))\n              $ RMS ([(1,[11,21]),(2,[31,41])])\n</code></pre>\n\n<p>Also, there's now the synonym <code>Hask</code> for the oxymoronic-looking <code>ConstrainedCategory (-&gt;) Unconstrained</code>, so you can simplify the instance head to</p>\n\n<pre><code>instance FC.Functor (RelationMS a) (ConstrainedCategory (-&gt;) Ord) Hask\n</code></pre>\n"}], "owner": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 125, "favorite_count": 0, "accepted_answer_id": 56414855, "answer_count": 2, "score": 2, "last_activity_date": 1559556483, "creation_date": 1559401337, "last_edit_date": 1559483302, "question_id": 56407814, "link": "https://stackoverflow.com/questions/56407814/how-to-define-an-instance-of-control-functor-constrained", "title": "How to define an instance of Control.Functor.Constrained?", "body": "<p>I'm trying to define an instance of Functor.Constrained, after successfully defining an instance of Category.Constrained. However the type of Functor.Constrained fmap is complex and the attempt I made led to an error that I can't explain. How do you define all the objects required by the fmap type?</p>\n\n<pre><code>Control.Functor.Constrained\nfmap :: (Object r a, Object t (f a), Object r b, Object t (f b)) =&gt; r a b -&gt; t (f a) (f b)\n</code></pre>\n\n<p><a href=\"http://hackage.haskell.org/package/constrained-categories-0.3.1.1\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/constrained-categories-0.3.1.1</a></p>\n\n<pre><code>{-# LANGUAGE GADTs, TypeFamilies, ConstraintKinds #-}\n\nmodule Question1 where\n\nimport Control.Category.Constrained\nimport Control.Functor.Constrained as FC \nimport Data.Map as M\nimport Data.Set as S\n\ndata RelationMS a b where\n  IdRMS :: RelationMS a a\n  RMS :: Map a (Set b) -&gt; RelationMS a b \n\ninstance Category RelationMS where\n    type Object RelationMS o = Ord o\n    id = IdRMS\n    (.) = compRMS\n\ncompRMS :: (Ord a, Ord k, Ord b) =&gt; RelationMS k b -&gt; RelationMS a k -&gt; RelationMS a b \nRMS mp2 `compRMS` RMS mp1\n  | M.null mp2 || M.null mp1 = RMS M.empty\n  | otherwise = RMS $ M.foldrWithKey \n        (\\k s acc -&gt; M.insert k (S.foldr (\\x acc2 -&gt; case M.lookup x mp2 of\n                                                    Nothing -&gt; acc2\n                                                    Just s2 -&gt; S.union s2 acc2\n                                         ) S.empty s\n                                ) acc\n        ) M.empty mp1\n\npseudoFmap :: Ord c =&gt;  (b -&gt; c) -&gt; RelationMS a b -&gt; RelationMS a c\npseudoFmap f (RMS r) = RMS $ M.map (S.map f) r\n\ninstance FC.Functor RelationMS where\n    -- error: \u2018Object\u2019 is not a (visible) associated type of class \u2018Functor\u2019\n    type Object RelationMS o = Ord o\n    fmap f (RMS r) = pseudoFmap f (RMS r)\n</code></pre>\n\n<p><strong>----------- TO CHECK THE PROPOSED SOLUTION ---------</strong></p>\n\n<pre><code>instance (Show a, Show b) =&gt; Show (RelationMS a b) where\n        show (IdRMS) = \"IdRMS\"\n        show (RMS r) = show r\n\n\n&gt; FC.fmap (+1) (RMS $ M.fromList [(1,S.fromList [10,20]), (2,S.fromList [30,40])])\n&gt; fromList [(1,fromList [11,21]),(2,fromList [31,41])]\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1559402686, "post_id": 56406701, "comment_id": 99413099, "body": "Side note: Stack is just a build tool, so its version doesn&#39;t tell much about what your code is actually using. In future questions, you can instead tell us which resolver Stack is using to build your code, which allows us to find out the corresponding versions of GHC and Stackage libraries. The resolver is specified in the <code>stack.yaml</code> file you are using (and if you aren&#39;t sure about where it is, <code>stack path --config-location</code> will tell you)."}], "answers": [{"tags": [], "owner": {"reputation": 36141, "user_id": 4354477, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/SuxtS.gif?s=128&g=1", "display_name": "ForceBru", "link": "https://stackoverflow.com/users/4354477/forcebru"}, "is_accepted": false, "score": 3, "last_activity_date": 1559391902, "creation_date": 1559391902, "answer_id": 56406719, "question_id": 56406701, "link": "https://stackoverflow.com/questions/56406701/how-to-compare-a-custom-data-type-in-haskell/56406719#56406719", "title": "How to compare a custom data type in haskell", "body": "<p>You can <em>derive</em> the methods for comparison automatically:</p>\n\n<pre><code>data Tile = Wall | Ground | Storage | Box | Blank deriving (Eq)\n</code></pre>\n\n<p>And then you can use <code>==</code> and <code>/=</code> to compare <code>Tile</code>s for equality and inequality.</p>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 7, "last_activity_date": 1559397382, "last_edit_date": 1559397382, "creation_date": 1559391919, "answer_id": 56406723, "question_id": 56406701, "link": "https://stackoverflow.com/questions/56406701/how-to-compare-a-custom-data-type-in-haskell/56406723#56406723", "title": "How to compare a custom data type in haskell", "body": "<p>The error</p>\n\n<blockquote>\n<pre><code>No instance for (Eq Tile) arising from a use of \u2018==\u2019\n</code></pre>\n</blockquote>\n\n<p>Says that you use <code>(==)</code> with two <code>Tile</code>s, but that the compiler did not found an instance of <code>Eq Tile</code> where you defined the <code>(==)</code> function for <code>Tile</code>s.</p>\n\n<p>You can make it an instance of the <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Eq\" rel=\"nofollow noreferrer\"><strong><code>Eq</code></strong> typeclass</a>:</p>\n\n<pre><code>data Tile = Wall | Ground | Storage | Box | Blank <b>deriving Eq</b></code></pre>\n\n<p>If you automatically derive <code>Eq</code>, then Haskell considers two objects of <code>Tile</code> equal given the data constructors (<code>Wall</code>, <code>Ground</code>, ...) are the same, and all their arguments are the same. Since the data constructors of your <code>Tile</code> data type have no arguments, this thus simply means that <code>Wall</code> is equal to <code>Wall</code>, <code>Ground</code> is equal to <code>Ground</code>, etc.</p>\n\n<p>In your function <code>tileToInteger</code> however, you do not <em>need</em> to use <code>(==)</code> at all, you can use <a href=\"https://en.wikibooks.org/wiki/Haskell/Pattern_matching\" rel=\"nofollow noreferrer\"><em>pattern matching</em> [Haskell-wiki]</a>, like:</p>\n\n<pre><code>tileToInteger :: Tile -&gt; Integer\ntileToInteger <b>Blank</b> = 1\ntileToInteger <b>Wall</b> = 1\ntileToInteger <b>_</b> = 2</code></pre>\n\n<p>You can implement the <code>(==)</code> function for <code>Tile</code>s with pattern matching, like:</p>\n\n<pre><code>instance Eq Tile where\n    Wall == Wall = True\n    Ground == Ground = True\n    Storage == Storage = True\n    Box == Box = True\n    Blank == Blank = True\n    _ == _ = False</code></pre>\n\n<p>The above is however equivalent to what <code>deriving Eq</code> will do, so usually one only implements <code>Eq</code> manually if two <code>Tile</code>s are considered equivalent in a different way.</p>\n"}], "owner": {"reputation": 2667, "user_id": 572332, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/ede4acd1b1775241fa41834dd1406fef?s=128&d=identicon&r=PG&f=1", "display_name": "robor", "link": "https://stackoverflow.com/users/572332/robor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 983, "favorite_count": 0, "accepted_answer_id": 56406723, "answer_count": 2, "score": 3, "last_activity_date": 1559401735, "creation_date": 1559391755, "last_edit_date": 1559401735, "question_id": 56406701, "link": "https://stackoverflow.com/questions/56406701/how-to-compare-a-custom-data-type-in-haskell", "title": "How to compare a custom data type in haskell", "body": "<p>I have a custom data type which I would like to compare.</p>\n\n<pre><code>data Tile = Wall | Ground | Storage | Box | Blank\n</code></pre>\n\n<p>I would like to do <code>instance-of-tile == Box</code></p>\n\n<p>I've tried using <code>==</code> like so</p>\n\n<pre><code>tileToInteger :: Tile -&gt; Integer\ntileToInteger tile \n  | tile == Blank || tile == Wall = 1\n  | otherwise = 2\n</code></pre>\n\n<p>I've also tried</p>\n\n<pre><code>tileToInteger :: Eq =&gt; Tile -&gt; Integer\n</code></pre>\n\n<p>The error message from <code>stack build</code> is</p>\n\n<pre><code>No instance for (Eq Tile) arising from a use of \u2018==\u2019\n    \u2022 In the first argument of \u2018(||)\u2019, namely \u2018tile == Blank\u2019\n      In the expression: tile == Blank || tile == Wall\n      In a stmt of a pattern guard for an equation for \u2018tileToInteger\u2019: tile == Blank || tile == Wall\n</code></pre>\n\n<p>Here's the full sample code</p>\n\n<pre><code>data Tile = Wall | Ground | Storage | Box | Blank\n\ngetTileAtXY :: Integer -&gt; Integer -&gt; Tile\ngetTileAtXY x y\n  | x == 0 &amp;&amp; y == 0 = Box\n  | otherwise = Ground\n\ntileToInteger :: Tile -&gt; Integer\ntileToInteger tile \n  | tile == Blank || tile == Wall = 1\n  | otherwise = 2\n\nmain :: IO ()\nmain = print (tileToInteger (getTileAtXY 1 0))\n</code></pre>\n\n<p><strong>Background</strong></p>\n\n<ul>\n<li>Exercise from <a href=\"https://www.seas.upenn.edu/~cis194/fall16/hw/02-ho-datatypes.html\" rel=\"nofollow noreferrer\">Penn Engineering university</a> course</li>\n<li>Using stack version 1.9.3.1</li>\n</ul>\n"}, {"tags": ["haskell", "haskell-hedgehog"], "comments": [{"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1559406796, "post_id": 56406210, "comment_id": 99414231, "body": "You can&#39;t, by design, which means you&#39;re probably using Hedgehog wrong.  Can you post a stripped down version (ideally only a few dozen lines) that illustrates what you&#39;re trying to do?"}, {"owner": {"reputation": 4424, "user_id": 34996, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ca2e2c3442a73f84394abb35d6236b12?s=128&d=identicon&r=PG", "display_name": "Magnus", "link": "https://stackoverflow.com/users/34996/magnus"}, "reply_to_user": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1559469303, "post_id": 56406210, "comment_id": 99424251, "body": "Well, I can start with just a description and then try to put together a stripped down version. The web API I want to test has a <code>POST foo</code> that returns a random UUID used as a reference for that particular <i>foo</i>, so in order to build up a useful model of the web service I want to extract that UUID from the output and keep it in the state. Ideally I&#39;d like a <code>Map UUID ModelOfFoo</code>, but that&#39;d require me to extract the UUID from the output, which I apparently can&#39;t do. So, then the question becomes, what should my state look like?"}], "answers": [{"comments": [{"owner": {"reputation": 4424, "user_id": 34996, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ca2e2c3442a73f84394abb35d6236b12?s=128&d=identicon&r=PG", "display_name": "Magnus", "link": "https://stackoverflow.com/users/34996/magnus"}, "edited": false, "score": 0, "creation_date": 1560628459, "post_id": 56436662, "comment_id": 99801924, "body": "Thanks, that was quite a long answer! I did however sort it out with a bit of help from an IRC user. The main insight was that I can&#39;t separate <i>all</i> tests into <code>Ensure</code> callbacks. I have to let the <code>commandExecute</code> function return only a <code>UUID</code>, like you do above, and any tests on other things in the HTTP response, e.g. the status, have to be taken care of right there. That means that my <code>commandExecute</code> must have a type <code>(MonadIO m, MonadTest m) =&gt; ... -&gt; m UUID</code>."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": false, "score": 1, "last_activity_date": 1559615494, "creation_date": 1559615494, "answer_id": 56436662, "question_id": 56406210, "link": "https://stackoverflow.com/questions/56406210/haskell-define-specialization-of-function-thats-polymorphic-in-type/56436662#56436662", "title": "Haskell, define specialization of function that&#39;s polymorphic in type", "body": "<p>Ah, I see.  What you want to do is use <code>Vars</code> in your Hedgehog model state and inputs (AKA transitions) wherever a state component depends on earlier actions.  You then update the state in terms of these variables abstractly (i.e., in a way that can work both symbolically and concretely).  It's only when you <em>execute</em> a command that you make those variables concrete.</p>\n\n<p>Let me show you an example.  I've used the following imports and extensions, if you want to follow along:</p>\n\n<pre><code>{-# LANGUAGE KindSignatures #-}\n{-# LANGUAGE RecordWildCards #-}\n{-# OPTIONS_GHC -Wall #-}\n\nimport Control.Monad\nimport Control.Monad.IO.Class\nimport Data.IORef\nimport Data.Map.Strict as Map\nimport Data.Map.Strict (Map)\nimport Data.Set as Set\nimport Data.Set (Set)\nimport System.IO.Unsafe\n\nimport Hedgehog\nimport Hedgehog.Gen as Gen\nimport Hedgehog.Range as Range\n</code></pre>\n\n<p>Suppose we have the following mock web API using global IORefs:</p>\n\n<pre><code>type UUID = Int\ntype Content = String\n\nuuidRef :: IORef UUID\nuuidRef = unsafePerformIO (newIORef 0)\n\nnewUuid :: IO UUID\nnewUuid = do\n  n &lt;- readIORef uuidRef\n  writeIORef uuidRef (n+1)\n  return n\n\ndbRef :: IORef (Map UUID Content)\ndbRef = unsafePerformIO (newIORef Map.empty)\n\nresetDatabase :: IO ()\nresetDatabase = writeIORef dbRef Map.empty\n\npostFoo :: Content -&gt; IO UUID\npostFoo bdy = do\n  uuid &lt;- newUuid\n  modifyIORef dbRef (Map.insert uuid bdy)\n  return uuid\n\ngetFoo :: UUID -&gt; IO (Maybe Content)\ngetFoo uuid = Map.lookup uuid &lt;$&gt; readIORef dbRef\n\ndeleteFoo :: UUID -&gt; IO ()\ndeleteFoo uuid =\n  modifyIORef dbRef (Map.delete uuid)\n</code></pre>\n\n<p>In constructing the Hedgehog model, we need to keep in mind that UUIDs will be generated as output by <code>postFoo</code> actions for use in subsequent (get and delete) actions.  This dependency of later actions on earlier ones means that these UUIDs should appear as variables in the state.</p>\n\n<p>In our state, we'll keep track of a <code>Map</code> of UUIDs (as variables) to <code>Content</code> to model the internal state of the database.  We'll also keep track of the set of all UUIDs seen even those no longer in the database, so we can test fetching of deleted UUIDs.</p>\n\n<pre><code>data ModelState (v :: * -&gt; *)\n  = S { uuids :: Set (Var UUID v)             -- UUIDs ever returned\n      , content :: Map (Var UUID v) Content   -- active content\n      }\n  deriving (Eq, Ord, Show)\n\ninitialState :: ModelState v\ninitialState = S Set.empty Map.empty\n</code></pre>\n\n<p>Now, we'll want to model post, get, and delete commands.  To \"post\", we'll want the following \"input\" (or transition, or whatever), which posts the given content:</p>\n\n<pre><code>data Post (v :: * -&gt; *) = Post Content\n  deriving (Eq, Show)\n</code></pre>\n\n<p>and the corresponding command looks like this:</p>\n\n<pre><code>s_post :: (MonadGen n, MonadIO m, MonadTest m) =&gt; Command n m ModelState\ns_post =\n  let\n    gen _state = Just $ Post &lt;$&gt; Gen.string (Range.constant 0 100) Gen.alpha\n    execute (Post bdy) = liftIO $ postFoo bdy\n  in\n    Command gen execute [\n        Update $ \\S{..} (Post bdy) o -&gt; S { uuids = Set.insert o uuids\n                                          , content = Map.insert o bdy content }\n      ]\n</code></pre>\n\n<p>Note that it's always possible to create a new post, whatever the current state, so <code>gen</code> ignores the current state and generate a random post.  <code>execute</code> translates this action into an IO action on the actual API.  Note that the <code>Update</code> callback receives the result of the <code>postFoo</code> as a <strong>variable</strong>.  That is, <code>o</code> will have type <code>Var UUID v</code>.  That's fine, because our <code>Update</code> just needs to store a <code>Var UUID v</code> in the state -- it doesn't need a concrete <code>UUID</code> value because of the way we structured the <code>ModelState</code>.</p>\n\n<p>We'll also need an <code>HTraversable</code> instance for <code>Post</code> for this to typecheck.  Since <code>Post</code> doesn't have any variables, this instance is trivial:</p>\n\n<pre><code>instance HTraversable Post where\n  htraverse _ (Post bdy) = pure (Post bdy)\n</code></pre>\n\n<p>For the \"get\" input and command, we have:</p>\n\n<pre><code>data Get (v :: * -&gt; *) = Get (Var UUID v)\n  deriving (Eq, Show)\n\ns_get :: (MonadGen n, MonadIO m, MonadTest m) =&gt; Command n m ModelState\ns_get =\n  let\n    gen S{..} | not (Set.null uuids) = Just $ Get &lt;$&gt; Gen.element (Set.toList uuids)\n              | otherwise            = Nothing\n    execute (Get uuid) = liftIO $ getFoo $ concrete uuid\n  in\n    Command gen execute [\n        Require $ \\S{..} (Get uuid) -&gt; uuid `Set.member` uuids\n      , Ensure $ \\before _after (Get uuid) o -&gt;\n          o === Map.lookup uuid (content before)\n      ]\n</code></pre>\n\n<p>Here, <code>gen</code> consults the current state to get the set of ever-observed UUIDs (technically, as symbolic variables).  If the set is empty, we don't have any valid UUIDs to test, so no <code>Get</code> is possible, and <code>gen</code> returns <code>Nothing</code>.  Otherwise, we generate a <code>Get</code> request for a random UUID (as a symbolic variable) in the set.  This may be a UUID still in the database or one that's been deleted.  The <code>execute</code> method then performs the IO action on the actual API.  Here, finally, we're allowed to make the variable concrete (which we need to get an actual <code>UUID</code> for the API).</p>\n\n<p>Note the callbacks -- we <code>Require</code> that the UUID variable be a member of the set of UUID variables in the current state (in case this was invalidated during shrinkage), and after the action executes, we <code>Ensure</code> that we can retrieve the appropriate content for this UUID.  Note that we're allowed to make variables concrete in <code>Ensure</code>, but we didn't need to in this case.  No <code>Update</code> was needed here, since <code>Get</code> doesn't affect the state.</p>\n\n<p>We also need an <code>HTraversable</code> instance for <code>Get</code>.  Since it has a variable, the instance is little more complicated:</p>\n\n<pre><code>instance HTraversable Get where\n  htraverse f (Get uuid) = Get &lt;$&gt; htraverse f uuid\n</code></pre>\n\n<p>The code for the \"delete\" input and command is much the same as for \"get\", except it has an <code>Update</code> callback.</p>\n\n<pre><code>data Delete (v :: * -&gt; *) = Delete (Var UUID v)\n  deriving (Eq, Show)\ninstance HTraversable Delete where\n  htraverse f (Delete uuid) = Delete &lt;$&gt; htraverse f uuid\n\ns_delete :: (MonadGen n, MonadIO m, MonadTest m) =&gt; Command n m ModelState\ns_delete =\n  let\n    gen S{..} | not (Set.null uuids) = Just $ Delete &lt;$&gt; Gen.element (Set.toList uuids)\n              | otherwise            = Nothing\n    execute (Delete uuid) = liftIO $ deleteFoo $ concrete uuid\n  in\n    Command gen execute [\n        Require $ \\S{..} (Delete uuid) -&gt; uuid `Set.member` uuids\n      , Update $ \\S{..} (Delete uuid) _o -&gt; S { content = Map.delete uuid content, .. }\n      , Ensure $ \\_before after (Delete uuid) _o -&gt;\n          Nothing === Map.lookup uuid (content after)\n      ]\n</code></pre>\n\n<p>The property we want to test is sequential application of a random collection of these actions.  Note that because our API has global state, we need to <code>resetDatabase</code> at the start of each test, or things will get bizarre:</p>\n\n<pre><code>prop_main :: Property\nprop_main =\n  property $ do\n    liftIO $ resetDatabase\n    actions &lt;- forAll $\n      Gen.sequential (Range.linear 1 100) initialState\n          [ s_post, s_get, s_delete ]\n    executeSequential initialState actions\n</code></pre>\n\n<p>Finally, then:</p>\n\n<pre><code>main :: IO ()\nmain = void (check prop_main)\n</code></pre>\n\n<p>and running this gives:</p>\n\n<pre><code>&gt; main\n\u2713 &lt;interactive&gt; passed 100 tests.\n&gt;\n</code></pre>\n\n<p>Note that there was one thing we forgot to check above, namely that the API genuinely provides unique UUIDs when posting.  For example, if we intentinoally break our UUID generator:</p>\n\n<pre><code>newUuid :: IO UUID\nnewUuid = do\n  n &lt;- readIORef uuidRef\n  writeIORef uuidRef $ (n+1) `mod` 2\n  return n\n</code></pre>\n\n<p>the testing still passes -- the API gives us duplicate UUIDs and we dutifully overwrite old data in our model state, matching the broken API.</p>\n\n<p>To check this, we want to add an <code>Ensure</code> callback to <code>s_post</code> to ensure that each new UUID isn't one we've seen before.  However if we write:</p>\n\n<pre><code>, Ensure $ \\before _after (Post _bdy) o -&gt;\n    assert $ o `Set.notMember` uuids before\n</code></pre>\n\n<p>this won't type check, because <code>o</code> is an actual, concrete <code>UUID</code> output value (i.e., not a <code>Var</code>), but <code>uuids before</code> is a set of concrete variables.  We could map over the set to extract the concrete values from the variables:</p>\n\n<pre><code>, Ensure $ \\before _after (Post _bdy) o -&gt;\n    assert $ o `Set.notMember` Set.map concrete (uuids before)\n</code></pre>\n\n<p>or alternatively, we can construct a concrete variable for the value <code>o</code> like so:</p>\n\n<pre><code>, Ensure $ \\before _after (Post _bdy) o -&gt;\n    assert $ Var (Concrete o) `Set.notMember` uuids before\n</code></pre>\n\n<p>Both work fine and catch the buggy <code>newUuid</code> implementation above.</p>\n\n<p>For reference, the complete code is:</p>\n\n<pre><code>{-# LANGUAGE KindSignatures #-}\n{-# LANGUAGE RecordWildCards #-}\n{-# OPTIONS_GHC -Wall #-}\n\nimport Control.Monad\nimport Control.Monad.IO.Class\nimport Data.IORef\nimport Data.Map.Strict as Map\nimport Data.Map.Strict (Map)\nimport Data.Set as Set\nimport Data.Set (Set)\nimport System.IO.Unsafe\n\nimport Hedgehog\nimport Hedgehog.Gen as Gen\nimport Hedgehog.Range as Range\n\n-- * Mock API\n\ntype UUID = Int\ntype Content = String\n\nuuidRef :: IORef UUID\nuuidRef = unsafePerformIO (newIORef 0)\n\nnewUuid :: IO UUID\nnewUuid = do\n  n &lt;- readIORef uuidRef\n  writeIORef uuidRef $ (n+1)\n  return n\n\ndbRef :: IORef (Map UUID Content)\ndbRef = unsafePerformIO (newIORef Map.empty)\n\nresetDatabase :: IO ()\nresetDatabase = writeIORef dbRef Map.empty\n\npostFoo :: Content -&gt; IO UUID\npostFoo bdy = do\n  uuid &lt;- newUuid\n  modifyIORef dbRef (Map.insert uuid bdy)\n  return uuid\n\ngetFoo :: UUID -&gt; IO (Maybe Content)\ngetFoo uuid = Map.lookup uuid &lt;$&gt; readIORef dbRef\n\ndeleteFoo :: UUID -&gt; IO ()\ndeleteFoo uuid =\n  modifyIORef dbRef (Map.delete uuid)\n\n-- * Hedgehog model state\n\ndata ModelState (v :: * -&gt; *)\n  = S { uuids :: Set (Var UUID v)             -- UUIDs ever returned\n      , content :: Map (Var UUID v) Content   -- active content\n      }\n  deriving (Eq, Ord, Show)\n\ninitialState :: ModelState v\ninitialState = S Set.empty Map.empty\n\n-- * Post input/command\n\ndata Post (v :: * -&gt; *) = Post Content\n  deriving (Eq, Show)\ninstance HTraversable Post where\n  htraverse _ (Post bdy) = pure (Post bdy)\n\ns_post :: (MonadGen n, MonadIO m, MonadTest m) =&gt; Command n m ModelState\ns_post =\n  let\n    gen _state = Just $ Post &lt;$&gt; Gen.string (Range.constant 0 100) Gen.alpha\n    execute (Post bdy) = liftIO $ postFoo bdy\n  in\n    Command gen execute [\n        Update $ \\S{..} (Post bdy) o -&gt; S { uuids = Set.insert o uuids\n                                          , content = Map.insert o bdy content }\n    , Ensure $ \\before _after (Post _bdy) o -&gt;\n        assert $ Var (Concrete o) `Set.notMember` uuids before\n      ]\n\n-- * Get input/command\n\ndata Get (v :: * -&gt; *) = Get (Var UUID v)\n  deriving (Eq, Show)\ninstance HTraversable Get where\n  htraverse f (Get uuid) = Get &lt;$&gt; htraverse f uuid\n\ns_get :: (MonadGen n, MonadIO m, MonadTest m) =&gt; Command n m ModelState\ns_get =\n  let\n    gen S{..} | not (Set.null uuids) = Just $ Get &lt;$&gt; Gen.element (Set.toList uuids)\n              | otherwise            = Nothing\n    execute (Get uuid) = liftIO $ getFoo $ concrete uuid\n  in\n    Command gen execute [\n        Require $ \\S{..} (Get uuid) -&gt; uuid `Set.member` uuids\n      , Ensure $ \\before _after (Get uuid) o -&gt;\n          o === Map.lookup uuid (content before)\n      ]\n\n-- * Delete input/command\n\ndata Delete (v :: * -&gt; *) = Delete (Var UUID v)\n  deriving (Eq, Show)\ninstance HTraversable Delete where\n  htraverse f (Delete uuid) = Delete &lt;$&gt; htraverse f uuid\n\ns_delete :: (MonadGen n, MonadIO m, MonadTest m) =&gt; Command n m ModelState\ns_delete =\n  let\n    gen S{..} | not (Set.null uuids) = Just $ Delete &lt;$&gt; Gen.element (Set.toList uuids)\n              | otherwise            = Nothing\n    execute (Delete uuid) = liftIO $ deleteFoo $ concrete uuid\n  in\n    Command gen execute [\n        Require $ \\S{..} (Delete uuid) -&gt; uuid `Set.member` uuids\n      , Update $ \\S{..} (Delete uuid) _o -&gt; S { content = Map.delete uuid content, .. }\n      , Ensure $ \\_before after (Delete uuid) _o -&gt;\n          Nothing === Map.lookup uuid (content after)\n      ]\n\n-- * Run the tests\n\nprop_main :: Property\nprop_main =\n  property $ do\n    liftIO $ resetDatabase\n    actions &lt;- forAll $\n      Gen.sequential (Range.linear 1 100) initialState\n          [ s_post, s_get, s_delete ]\n    executeSequential initialState actions\n\nmain :: IO ()\nmain = void (check prop_main)\n</code></pre>\n"}], "owner": {"reputation": 4424, "user_id": 34996, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ca2e2c3442a73f84394abb35d6236b12?s=128&d=identicon&r=PG", "display_name": "Magnus", "link": "https://stackoverflow.com/users/34996/magnus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 109, "favorite_count": 1, "answer_count": 1, "score": 0, "last_activity_date": 1559615494, "creation_date": 1559387674, "question_id": 56406210, "link": "https://stackoverflow.com/questions/56406210/haskell-define-specialization-of-function-thats-polymorphic-in-type", "title": "Haskell, define specialization of function that&#39;s polymorphic in type", "body": "<p>When using state machines in <a href=\"http://hackage.haskell.org/package/hedgehog\" rel=\"nofollow noreferrer\">hedgehog</a> I have to define a function that updates my model state. Its type should be <code>forall v. Ord1 v =&gt; state v -&gt; input v -&gt; Var output v -&gt; state v</code> (see <code>Update</code> constructor of <a href=\"http://hackage.haskell.org/package/hedgehog-1.0/docs/Hedgehog.html#t:Callback\" rel=\"nofollow noreferrer\"><code>Callback</code></a>).</p>\n\n<p>Now, I want to get to <code>output</code>, but the only function I've found is <a href=\"http://hackage.haskell.org/package/hedgehog-1.0/docs/Hedgehog.html#v:concrete\" rel=\"nofollow noreferrer\"><code>concrete</code></a>, however it's specifying that <code>v</code> of my update function.</p>\n\n<p>How do I define an update function that satisfies the type for <code>Update</code> while still letting me get to the output (presumably by using <code>concrete</code>)?</p>\n"}, {"tags": ["c", "haskell", "cabal", "haskell-stack", "cabal-install"], "comments": [{"owner": {"reputation": 125, "user_id": 9982106, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-dO1cee-zNOU/AAAAAAAAAAI/AAAAAAAAAIc/Kt9AMjsNHeI/photo.jpg?sz=128", "display_name": "Aman Pandey", "link": "https://stackoverflow.com/users/9982106/aman-pandey"}, "edited": false, "score": 0, "creation_date": 1563555922, "post_id": 56405751, "comment_id": 100752324, "body": "Can anyone tell me why the question is being disliked?  If no specific reason. Please don&#39;t dislike it, It causes difficulty in getting possible answers. Specially if someone is a beginner."}], "answers": [{"tags": [], "owner": {"reputation": 125, "user_id": 9982106, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-dO1cee-zNOU/AAAAAAAAAAI/AAAAAAAAAIc/Kt9AMjsNHeI/photo.jpg?sz=128", "display_name": "Aman Pandey", "link": "https://stackoverflow.com/users/9982106/aman-pandey"}, "is_accepted": true, "score": 0, "last_activity_date": 1563516482, "creation_date": 1563516482, "answer_id": 57106448, "question_id": 56405751, "link": "https://stackoverflow.com/questions/56405751/shows-missing-library-ff-while-building-echidna-using-stack-install/57106448#57106448", "title": "Shows Missing library : ff while building echidna using stack install", "body": "<p>So, it is clear from the error provided above, that the installation was not able to find the <code>libff</code> file.</p>\n\n<p>The best solution is to build the <code>libff</code> library manually and copy the required builds at the place it should be.</p>\n\n<p>The best way to debug the problem is to look at the executed command closely and try to find the possible places where the libff should be...</p>\n\n<p>Looking into the very 2nd error line, i.e. the complete command it was trying to execute\nhere, I sighted the following options being executed </p>\n\n<p><code>--extra-include-dirs=/usr/local/opt/readline/include --extra-lib-dirs=/usr/local/opt/readline/lib</code></p>\n\n<p>In order to solve this, I looked for the required <code>libff</code> library and cloned it from GitHub. I cloned the required dependencies and places them in the directory it should be.</p>\n\n<blockquote>\n  <p><a href=\"https://github.com/scipr-lab/libff\" rel=\"nofollow noreferrer\">https://github.com/scipr-lab/libff</a></p>\n</blockquote>\n\n<p>I then followed the \"Build guide\" to build the required library.</p>\n\n<p>Then with the superuser on, I created the directories, <code>/usr/local/opt/readline/lib</code> and <code>/usr/local/opt/readline/include</code>, and it was solved. And pasted the required builds in it.</p>\n\n<p>Used <code>stack install</code> again, and it worked.</p>\n\n<hr>\n\n<p>Note:\nI thought many beginners may have similar problem while installing the required tools for their use. These small ideas may help them.</p>\n"}], "owner": {"reputation": 125, "user_id": 9982106, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-dO1cee-zNOU/AAAAAAAAAAI/AAAAAAAAAIc/Kt9AMjsNHeI/photo.jpg?sz=128", "display_name": "Aman Pandey", "link": "https://stackoverflow.com/users/9982106/aman-pandey"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 273, "favorite_count": 0, "accepted_answer_id": 57106448, "answer_count": 1, "score": -2, "last_activity_date": 1563516482, "creation_date": 1559383713, "last_edit_date": 1559400407, "question_id": 56405751, "link": "https://stackoverflow.com/questions/56405751/shows-missing-library-ff-while-building-echidna-using-stack-install", "title": "Shows Missing library : ff while building echidna using stack install", "body": "<p>I am trying to build echidna using <code>stack install</code>.</p>\n\n<p><a href=\"https://github.com/crytic/echidna\" rel=\"nofollow noreferrer\">https://github.com/crytic/echidna</a></p>\n\n<p>I am continuously getting the missing library error while installing at a progress state of <code>171/178</code>. </p>\n\n<p>I believe it to be more of stack error than library error. Error shown is as follows</p>\n\n<p>I have tried installing the library but not getting any C library of such sort.ye</p>\n\n<p>SO, i've installed every library using </p>\n\n<p><code>sudo apt-get install lib*ff*-dev</code></p>\n\n<p>isn't working yet.</p>\n\n<pre><code>--  While building package hevm-0.31 using:\n      /home/aman/.stack/setup-exe-cache/x86_64-linux/Cabal-simple_mPHDZzAJ_2.2.0.1_ghc-8.4.3 --builddir=.stack-work/dist/x86_64-linux/Cabal-2.2.0.1 configure --with-ghc=/home/aman/.stack/programs/x86_64-linux/ghc-8.4.3/bin/ghc --with-ghc-pkg=/home/aman/.stack/programs/x86_64-linux/ghc-8.4.3/bin/ghc-pkg --user --package-db=clear --package-db=global --package-db=/home/aman/.stack/snapshots/x86_64-linux/lts-12.10/8.4.3/pkgdb --package-db=/home/aman/Desktop/new/echidna2/echidna/.stack-work/install/x86_64-linux/lts-12.10/8.4.3/pkgdb --libdir=/home/aman/Desktop/new/echidna2/echidna/.stack-work/install/x86_64-linux/lts-12.10/8.4.3/lib --bindir=/home/aman/Desktop/new/echidna2/echidna/.stack-work/install/x86_64-linux/lts-12.10/8.4.3/bin --datadir=/home/aman/Desktop/new/echidna2/echidna/.stack-work/install/x86_64-linux/lts-12.10/8.4.3/share --libexecdir=/home/aman/Desktop/new/echidna2/echidna/.stack-work/install/x86_64-linux/lts-12.10/8.4.3/libexec --sysconfdir=/home/aman/Desktop/new/echidna2/echidna/.stack-work/install/x86_64-linux/lts-12.10/8.4.3/etc --docdir=/home/aman/Desktop/new/echidna2/echidna/.stack-work/install/x86_64-linux/lts-12.10/8.4.3/doc/hevm-0.31 --htmldir=/home/aman/Desktop/new/echidna2/echidna/.stack-work/install/x86_64-linux/lts-12.10/8.4.3/doc/hevm-0.31 --haddockdir=/home/aman/Desktop/new/echidna2/echidna/.stack-work/install/x86_64-linux/lts-12.10/8.4.3/doc/hevm-0.31 --dependency=QuickCheck=QuickCheck-2.11.3-3XHQpBYb83U2mMvNz2AjQX --dependency=abstract-par=abstract-par-0.3.3-Ie3MD7O3orK6ZR8i7FuBEv --dependency=aeson=aeson-1.3.1.1-7JlrwYHW7OR9ca4RRZ9oOf --dependency=ansi-wl-pprint=ansi-wl-pprint-0.6.8.2-9fh9v74MJQDJeSHE7X3Co6 --dependency=async=async-2.2.1-7DQr5PBcpiwJNOuf7ZiSPa --dependency=base=base-4.11.1.0 --dependency=base16-bytestring=base16-bytestring-0.1.1.6-I0igvRcEwRNBMqqPC2yQBh --dependency=base64-bytestring=base64-bytestring-1.0.0.1-4OCIe2BZn8jKI191JIXI37 --dependency=binary=binary-0.8.5.1 --dependency=brick=brick-0.37.2-HmDqAExuwtV4o98FRmS9eK --dependency=bytestring=bytestring-0.10.8.2 --dependency=cereal=cereal-0.5.7.0-ILaYAmVTyR1IcEsGXXUCfI --dependency=containers=containers-0.5.11.0 --dependency=cryptonite=cryptonite-0.25-GgyZs9E1viv2owjaLxA3vq --dependency=data-dword=data-dword-0.3.1.2-CMzWV6RCGtK8L6wsVSErKS --dependency=deepseq=deepseq-1.4.3.0 --dependency=directory=directory-1.3.1.5 --dependency=fgl=fgl-5.6.0.0-E3fRSNebqkULRqplV3ljSc --dependency=filepath=filepath-1.4.2 --dependency=ghci-pretty=ghci-pretty-0.0.2-I5PJbL8ge6MChp3KxZbHqH --dependency=haskeline=haskeline-0.7.4.3-5EI2v7Zmtnz57a7mmnEGOS --dependency=lens=lens-4.16.1-B0f4CyKKTUGAKBzzY965AX --dependency=lens-aeson=lens-aeson-1.0.2-Jly9eqrxMbj6GutGwOKn69 --dependency=megaparsec=megaparsec-6.5.0-G48ltiRFbVUHATB1lTnNRx --dependency=memory=memory-0.14.16-GTCi0eCrvrnI3inLDBWVMK --dependency=monad-par=monad-par-0.3.4.8-Jjk0JT5qYVK4xEO13GFUu8 --dependency=mtl=mtl-2.2.2 --dependency=multiset=multiset-0.3.4.1-DOPR5uXspss8vZY4jdOdOo --dependency=operational=operational-0.2.3.5-4jEcCWo4nKu1T4LZlKqe58 --dependency=optparse-generic=optparse-generic-1.3.0-1jcIewFKPXBLcRetZisV2l --dependency=process=process-1.6.3.0 --dependency=quickcheck-text=quickcheck-text-0.1.2.1-2lR7Kay7WBV5AMKAdKDpZZ --dependency=regex-tdfa=regex-tdfa-1.2.3.1-9PkkapJrmiKFVG38JA02jN --dependency=restless-git=restless-git-0.7-83nBoDMPYLtJIx01bvXzKs --dependency=rosezipper=rosezipper-0.2-GAlMD5j8Qb83GzjCYQknnx --dependency=s-cargot=s-cargot-0.1.4.0-J9AhWfrUxDQ6YMTyzXkHth --dependency=scientific=scientific-0.3.6.2-5di0UflhS5I1xpiiCPzjKz --dependency=semver-range=semver-range-0.2.7-dBvW3ofcsgDQf0zazTsJd --dependency=temporary=temporary-1.3-5Z6bOFbSCb7VhnH5UnI2r --dependency=text=text-1.2.3.0 --dependency=text-format=text-format-0.3.2-Fd261TSu6ptAAzilVN6BFx --dependency=time=time-1.8.0.2 --dependency=transformers=transformers-0.5.5.0 --dependency=tree-view=tree-view-0.5-Kkrk0dCM0oj2Q4xwPbd7Gg --dependency=unordered-containers=unordered-containers-0.2.9.0-IkfpzvG0LzrHAbTzfMidvY --dependency=vector=vector-0.12.0.1-4awQG9XUvVEBfJgKGHBhOb --dependency=vty=vty-5.21-A2OCwk39Wv3J3RjR3BvHey --dependency=witherable=witherable-0.2-2RYbFmOnVolGAqiDDS1CLe --dependency=wreq=wreq-0.5.2.1-IjuXB0jwsxA7O3uIVjcJXu --extra-include-dirs=/home/aman/Downloads/Compressed/ff13c/source/ --extra-include-dirs=/usr/local/opt/readline/include --extra-lib-dirs=/usr/local/opt/readline/lib\n    Process exited with code: ExitFailure 1\n    Logs have been written to: /home/aman/Desktop/new/echidna2/echidna/.stack-work/logs/hevm-0.31.log\n\n    Configuring hevm-0.31...\n    Cabal-simple_mPHDZzAJ_2.2.0.1_ghc-8.4.3: Missing dependency on a foreign\n    library:\n    * Missing (or bad) C library: ff\n    This problem can usually be solved by installing the system package that\n    provides this library (you may need the \"-dev\" version). If the library is\n    already installed but in a non-standard location then you can use the flags\n    --extra-include-dirs= and --extra-lib-dirs= to specify where it is.If the\n    library file does exist, it may contain errors that are caught by the C\n    compiler at the preprocessing stage. In this case you can re-run configure\n    with the verbosity flag -v3 to see the error messages.\n\n</code></pre>\n\n<p>The stack install must find this library and end up successfully installing the library I'm using.</p>\n"}, {"tags": ["javascript", "loops", "haskell", "recursion-schemes", "corecursion"], "answers": [{"comments": [{"owner": {"reputation": 3831, "user_id": 5536315, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/38Cjm.png?s=128&g=1", "display_name": "scriptum", "link": "https://stackoverflow.com/users/5536315/scriptum"}, "edited": false, "score": 0, "creation_date": 1559405974, "post_id": 56405730, "comment_id": 99413982, "body": "Thank you for adding an example - great answer. I guess lazy evaluation is also essential to understand the dual of futu, histo."}, {"owner": {"reputation": 3831, "user_id": 5536315, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/38Cjm.png?s=128&g=1", "display_name": "scriptum", "link": "https://stackoverflow.com/users/5536315/scriptum"}, "edited": false, "score": 1, "creation_date": 1559406017, "post_id": 56405730, "comment_id": 99413999, "body": "Unfortunately, there is no TCO in Javascript even though it is part of the spec (no major browser vendor implemented it or will implement it any time soon. And yes, I know guarded recursion/TCO modulo cons and also implemented it in form of a trampoline in JS."}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "reply_to_user": {"reputation": 3831, "user_id": 5536315, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/38Cjm.png?s=128&g=1", "display_name": "scriptum", "link": "https://stackoverflow.com/users/5536315/scriptum"}, "edited": false, "score": 2, "creation_date": 1559406989, "post_id": 56405730, "comment_id": 99414281, "body": "@bob Lazy evaluation fits futu better because futu is an unfold, an &quot;anamorphism&quot; that builds a value from a seed. The value that is built might even be infinite. Meanwhile, histos are &quot;catamorphims&quot; that tear down an existing finite value. Strict evaluation works well there. The particularity of histos wrt normal catamorphisms is that at each step they have access to a record of all previous sub-results."}, {"owner": {"reputation": 3831, "user_id": 5536315, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/38Cjm.png?s=128&g=1", "display_name": "scriptum", "link": "https://stackoverflow.com/users/5536315/scriptum"}, "edited": false, "score": 0, "creation_date": 1559408239, "post_id": 56405730, "comment_id": 99414642, "body": "That sound reasonable. I just figured that for the <code>List</code> type <code>histo</code> seems to be implemented in terms of <code>cata</code>, which is just <code>foldr</code> in this context, i.e. the lazy evaluated right associative fold. I need to do some research on this subject. For me personally, lazy evaluation is one of the most complicated aspects of Haskell."}], "tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": true, "score": 3, "last_activity_date": 1559385182, "last_edit_date": 1559385182, "creation_date": 1559383583, "answer_id": 56405730, "question_id": 56404948, "link": "https://stackoverflow.com/questions/56404948/express-a-futumorphism-specialized-to-lists-as-an-imperative-loop/56405730#56405730", "title": "Express a futumorphism specialized to lists as an imperative loop", "body": "<p>Because Haskell is lazy, one can start consuming the beginning of the list returned by the \"futu\" before the rest has been calculated. In Javascript terms, this is best modeled with <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*\" rel=\"nofollow noreferrer\">generators</a>.</p>\n\n<p>For example (for simplicity, I used <code>null</code> values to represent the <code>None</code>s):</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>const arrFutu = coalg =&gt; function*(seed) {\n    while (true) {\n        const next = coalg(seed);\n        if (next) {\n            // Maybe (b, ([b], Maybe a)), using null for None &amp; flattening nested tuple   \n            const [item, items, nextseed] = next; \n            yield item;\n            yield* items;\n            // Maybe a, using null for None \n            if (nextseed) { \n                seed = nextseed;\n                continue; // Continue iterating if the seed isn't null.\n            }\n        } \n        return;\n    }\n}\n</code></pre>\n\n<p>With an example coalgebra like:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>const coalg1 = seed =&gt; {\n    if (seed &lt; 5) {\n        return ['a', ['a','a'], seed + 1];\n    } else if (seed &lt; 10) {\n        return ['b', ['b','b'], seed + 1];\n    } else if (seed == 10) {\n        return ['c', ['c'], null];\n    }\n    return null;\n}\n\nfor (const x of arrFutu(coalg1)(0)) {\n    console.log(x);\n}\n\nfor (const x of arrFutu(coalg1)(20)) {\n    console.log(x);\n}\n</code></pre>\n\n<p>It would be nice to make the futu recursive instead of iterative, but it seems <a href=\"https://stackoverflow.com/questions/30135916/does-es6-tail-call-optimization-cover-generators\">Javascript tail call optimization doesn't work with generators</a>.</p>\n\n<hr>\n\n<p>By the way, even if the Haskell code isn't tail recursive, the recursion is <a href=\"https://mail.haskell.org/pipermail/haskell-cafe/2009-March/058607.html\" rel=\"nofollow noreferrer\">\"guarded\"</a>: the recursive call happens within one or more data constructors (here, list constructors) and the call can be delayed until the constructors have been \"peeled away\" by the client when he is consuming the returned list.</p>\n"}], "owner": {"reputation": 3831, "user_id": 5536315, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/38Cjm.png?s=128&g=1", "display_name": "scriptum", "link": "https://stackoverflow.com/users/5536315/scriptum"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 156, "favorite_count": 0, "accepted_answer_id": 56405730, "answer_count": 1, "score": 4, "last_activity_date": 1559403839, "creation_date": 1559376394, "last_edit_date": 1559403839, "question_id": 56404948, "link": "https://stackoverflow.com/questions/56404948/express-a-futumorphism-specialized-to-lists-as-an-imperative-loop", "title": "Express a futumorphism specialized to lists as an imperative loop", "body": "<p>I've been trying to translate this recursive Haskell implementation of a futumorphism specialized to <code>List</code>s</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>futuL :: (a -&gt; Maybe (b, ([b], Maybe a))) -&gt; a -&gt; [b]\nfutuL f x = case f x of\n  Nothing -&gt; []\n  Just (y, (ys, mz)) -&gt; y : (ys ++ fz)\n    where fz = case mz of\n      Nothing -&gt; []\n      Just z -&gt; futuL f z\n</code></pre>\n\n<p>into an imperative Javascript loop. It is remarkably difficult (at least for me):</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>const None = ({type: \"Option\", tag: \"None\"});\nconst Some = x =&gt; ({type: \"Option\", tag: \"Some\", runOption: x});\n\nconst arrFutu = coalg =&gt; x =&gt; { // futuL f x\n  const acc = []; // ~ fz\n\n  while (true) {\n    let optX = coalg(x); // f x\n\n    switch (optX.tag) { // case\n      case \"None\": return acc; // Nothing -&gt; []\n\n      case \"Some\": {\n        let [y, [ys, optX_]] = optX.runOption; // Just (y, (ys, mz))\n\n        switch(optX_.tag) {\n          case \"None\": {\n            arrPushFlat(acc) ((ys.unshift(y), ys)); // y : (ys ++ [])\n            return acc;\n          }\n\n          case \"Some\": { // y : (ys ++ futuL f z)\n            arrPushFlat(acc) ((ys.unshift(y), ys)); \n            x = optX_.runOption;\n            break;\n          }\n\n          default: throw new UnionError(\"invalid tag\");\n        }\n\n        break;\n      }\n\n      default: throw new UnionError(\"invalid tag\");\n    }\n  }\n};\n</code></pre>\n\n<p>I have a difficult time to parse the Haskell code mentally, especially the <code>where</code> part containing the recursive call. I guess this call isn't in tail position, therefore I need an explicit stack (<code>acc</code>) for my JS loop.</p>\n\n<p>Is my translation correct?</p>\n"}, {"tags": ["haskell", "ghc"], "answers": [{"comments": [{"owner": {"reputation": 43, "user_id": 11585698, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f89bf05df9c8819bab38f9319d0aa9d6?s=128&d=identicon&r=PG&f=1", "display_name": "jmpgunn", "link": "https://stackoverflow.com/users/11585698/jmpgunn"}, "edited": false, "score": 0, "creation_date": 1559365217, "post_id": 56403944, "comment_id": 99405996, "body": "Does that mean I can link the .o files generated by GHC to a C program?"}, {"owner": {"reputation": 1275, "user_id": 11571245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vkCkX.png?s=128&g=1", "display_name": "typedfern", "link": "https://stackoverflow.com/users/11571245/typedfern"}, "reply_to_user": {"reputation": 43, "user_id": 11585698, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f89bf05df9c8819bab38f9319d0aa9d6?s=128&d=identicon&r=PG&f=1", "display_name": "jmpgunn", "link": "https://stackoverflow.com/users/11585698/jmpgunn"}, "edited": false, "score": 2, "creation_date": 1559365352, "post_id": 56403944, "comment_id": 99406018, "body": "The C compiler isn&#39;t aware of the specifics of how GHC represents Haskell code as executable code, so basically, no - what you want there is to use GHC&#39;s FFI interface to explicitly declare how to get Haskell and C to interact."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 2, "creation_date": 1559373444, "post_id": 56403944, "comment_id": 99407209, "body": "More precisely: the code generated by GHC in an <code>.o</code> is not, by default, ready to be called from C. If you use a <code>foreign export</code> directive (see GHC manual), then the <code>.o</code> file will contain functions that can be called from C. You can always <i>link</i> a GHC produced <code>.o</code> file into a C program\u2014object files are object files no matter what&#39;s in them. The question is whether the C program can <i>use</i> any of the code in that object file."}], "tags": [], "owner": {"reputation": 1275, "user_id": 11571245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vkCkX.png?s=128&g=1", "display_name": "typedfern", "link": "https://stackoverflow.com/users/11571245/typedfern"}, "is_accepted": true, "score": 12, "last_activity_date": 1559364754, "creation_date": 1559364754, "answer_id": 56403944, "question_id": 56403798, "link": "https://stackoverflow.com/questions/56403798/what-are-the-hi-and-o-files-generated-by-ghc-on-linux/56403944#56403944", "title": "What are the .hi and .o files generated by GHC (on Linux)?", "body": "<p>The .o is exactly the same as C's object files; the .hi file is an \"interface file\"; it contains information about the .o that GHC would need, if you compile other modules, to be able to link against that .o file (said information cannot be stored in a standard .o file).</p>\n\n<p>You could say that the .hi file is the equivalent of C's header files (that is, with .h extension), only these are generated by GHC from the original Haskell source.</p>\n\n<p>Thus, the .hi is used when GHC compiles other modules, and the .o is used when linking all modules together to produce the executable.</p>\n\n<p>You can safely delete the .hi and .o files once you have successfully generated the executable (or keep them if you want to make some small change and rebuild quickly - it will save time in unneeded recompilations).</p>\n"}, {"tags": [], "owner": {"reputation": 25321, "user_id": 163177, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e811b5337bcad19d52c8fed3a0ea0075?s=128&d=identicon&r=PG", "display_name": "John F. Miller", "link": "https://stackoverflow.com/users/163177/john-f-miller"}, "is_accepted": false, "score": 3, "last_activity_date": 1559364815, "creation_date": 1559364815, "answer_id": 56403950, "question_id": 56403798, "link": "https://stackoverflow.com/questions/56403798/what-are-the-hi-and-o-files-generated-by-ghc-on-linux/56403950#56403950", "title": "What are the .hi and .o files generated by GHC (on Linux)?", "body": "<p><code>.o</code> files are indeed object files.  Basically chunks of bytecode ready to be linked together.</p>\n\n<p><code>.hi</code> files are interface files.  The short version is that they hold something like compiled type signatures along with information that lets GHC perform optimization across file boundaries.</p>\n\n<hr>\n\n<p>I personally find having these files in my working directory annoying enough that I add <code>-outputdir ../tmp</code> to my <code>ghc</code> invocation.</p>\n"}], "owner": {"reputation": 43, "user_id": 11585698, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f89bf05df9c8819bab38f9319d0aa9d6?s=128&d=identicon&r=PG&f=1", "display_name": "jmpgunn", "link": "https://stackoverflow.com/users/11585698/jmpgunn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1630, "favorite_count": 1, "accepted_answer_id": 56403944, "answer_count": 2, "score": 4, "last_activity_date": 1559364815, "creation_date": 1559362402, "question_id": 56403798, "link": "https://stackoverflow.com/questions/56403798/what-are-the-hi-and-o-files-generated-by-ghc-on-linux", "title": "What are the .hi and .o files generated by GHC (on Linux)?", "body": "<p>I am just getting started with Haskell and functional programming in general. After compiling and running my first Haskell program, I noticed that GHC (on Linux) generates three separate files from a single .hs source file: a .hi file, a .o file, and finally an executable. What is the purpose of each of these files? Practically, when are .hi and .o files actually used?</p>\n\n<p>From my little experience in C, I think .o is an object file. Searching Google shows that .hi is an \"interface file\".</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1559352313, "post_id": 56403194, "comment_id": 99404646, "body": "...I don&#39;t think a <i>rudimentary options parser</i> cares about list access being not O(1)."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1559378947, "post_id": 56403194, "comment_id": 99408148, "body": "I don\u2018t think I want to see the application that is weird enough for Option parsing performance to be a major concern"}], "answers": [{"comments": [{"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1559352414, "post_id": 56403227, "comment_id": 99404661, "body": "You may also want to check the error messages produced by <code>getOpt</code>"}], "tags": [], "owner": {"reputation": 1185, "user_id": 3228230, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/m9lny.jpg?s=128&g=1", "display_name": "paperduck", "link": "https://stackoverflow.com/users/3228230/paperduck"}, "is_accepted": true, "score": 2, "last_activity_date": 1559352370, "creation_date": 1559352370, "answer_id": 56403227, "question_id": 56403194, "link": "https://stackoverflow.com/questions/56403194/in-the-haskell-system-console-getopt-module-when-are-option-explanations-used/56403227#56403227", "title": "In the Haskell `System.Console.GetOpt` module, when are option explanations used?", "body": "<p>They are printed when you call <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/System-Console-GetOpt.html#v:usageInfo\" rel=\"nofollow noreferrer\"><code>usageInfo</code></a> with the same list of options.</p>\n"}], "owner": {"reputation": 1185, "user_id": 3228230, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/m9lny.jpg?s=128&g=1", "display_name": "paperduck", "link": "https://stackoverflow.com/users/3228230/paperduck"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 50, "favorite_count": 0, "accepted_answer_id": 56403227, "answer_count": 1, "score": 1, "last_activity_date": 1559352370, "creation_date": 1559351769, "question_id": 56403194, "link": "https://stackoverflow.com/questions/56403194/in-the-haskell-system-console-getopt-module-when-are-option-explanations-used", "title": "In the Haskell `System.Console.GetOpt` module, when are option explanations used?", "body": "<p>I have a question about the <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/System-Console-GetOpt.html\" rel=\"nofollow noreferrer\"><code>System.Console.GetOpt</code></a> module in the <code>base</code> package.</p>\n\n<p>The <code>OptDescr</code> data type has a field for a <code>String</code> explanation of the command line option.</p>\n\n<p>Where is there ever an opportunity to use this field? Idiomatic Haskell uses a list of options passed into <code>getOpt</code>. This means there is no way to access the option from the list in O(1) time. You'd have to iterate through the list to find the option you want. The returned tuple doen't include the explanations. This suggests that the explanations are never used.</p>\n\n<p>All I can think of is that the explanations would appear in error messages, but I shouldn't have to use trial and error to determine this myself. The documentation only uses the word \"explanation\" once, and does not have an... explanation of what the explanations are used for.</p>\n\n<pre><code>data OptDescr a\n\n    Each OptDescr describes a single option.\n    The arguments to Option are:\n\n        - list of short option characters\n        - list of long option strings (without \"--\")\n        - argument descriptor\n        - explanation of option for user\n\n    Constructors:\n\n        Option [Char] [String] (ArgDescr a) String  \n</code></pre>\n"}, {"tags": ["list", "haskell", "recursion", "set", "pattern-matching"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1559342412, "post_id": 56402394, "comment_id": 99403164, "body": "Haskell actually already has a <code>Set</code> type. Yours is just a synonym for lists (which are different, lists can have multiple of the same element, and have a defined order), and a lot of these functions for lists are already defined in the <code>Data.List</code> module."}, {"owner": {"reputation": 101, "user_id": 11580944, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JnskV.jpg?s=128&g=1", "display_name": "MeghanMarkle", "link": "https://stackoverflow.com/users/11580944/meghanmarkle"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1559342511, "post_id": 56402394, "comment_id": 99403188, "body": "This is mostly an exercise in futility, I know, I know. But the examiner asked us to define everything ourselves."}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1559343145, "post_id": 56402394, "comment_id": 99403308, "body": "Since you&#39;re asking for general advice on your approach rather than asking a question about a specific bug or issue, I think the <a href=\"https://codereview.stackexchange.com/\">Code Review</a> site would be a better fit."}, {"owner": {"reputation": 2158, "user_id": 9991455, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2ff5d55afd5d829849efbf27962dd320?s=128&d=identicon&r=PG&f=1", "display_name": "Lorenzo", "link": "https://stackoverflow.com/users/9991455/lorenzo"}, "edited": false, "score": 1, "creation_date": 1559343262, "post_id": 56402394, "comment_id": 99403324, "body": "Also implementing sets with lists -- especially in Haskell -- would be quite inefficient as membership checking (one of the most used functions with sets) is linear and not constant time."}], "answers": [{"tags": [], "owner": {"reputation": 1275, "user_id": 11571245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vkCkX.png?s=128&g=1", "display_name": "typedfern", "link": "https://stackoverflow.com/users/11571245/typedfern"}, "is_accepted": false, "score": 3, "last_activity_date": 1559343550, "last_edit_date": 1559343550, "creation_date": 1559343248, "answer_id": 56402507, "question_id": 56402394, "link": "https://stackoverflow.com/questions/56402394/representing-set-theoretical-notions-in-terms-of-lists-in-haskell/56402507#56402507", "title": "Representing set-theoretical notions in terms of lists in Haskell", "body": "<p>Looks good to me (for an \"exercise in futility\", as you put it); one thing: None of your signatures require specializing as Integer, anything that supports equality (Eq) will work, with powerset additionally requiring a numeric value (again, not necessarily an Integer):</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>noReps :: Eq a =&gt; Set a -&gt; Set a\ninclusion :: Eq a =&gt; Set a -&gt; Set a -&gt; Bool\nidentical :: Eq a =&gt; Set a -&gt; Set a -&gt; Bool \nsetmember :: Eq a =&gt; Set a -&gt; Set (Set a) -&gt; Bool\naddsets :: Eq a =&gt; Set a -&gt; Set (Set a) -&gt; Set (Set a)\naddelem :: Eq a =&gt; a -&gt; Set (Set a) -&gt; Set (Set a) \npowerset :: (Eq a, Num a) =&gt; a -&gt; Set (Set a)\n</code></pre>\n\n<p>All these signatures will work, without changing absolutely anything in the functions themselves.</p>\n\n<p>(EDIT: it is usually a good idea to make your signatures as generic and polymorphic as possible - not only will allow reusing the code, but, by restricting what your functions can do with their arguments - in this case, the signature allows you ONLY applying the == operator - you reduce the risk of bugs / unintended effects).</p>\n\n<p>Of course, using lists will make the code simple yet slow - for real-life code, you'd use balanced trees to represent the sets - more complex, but fast; in fact, that's how Haskell's own Set type is implemented.</p>\n"}], "owner": {"reputation": 101, "user_id": 11580944, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JnskV.jpg?s=128&g=1", "display_name": "MeghanMarkle", "link": "https://stackoverflow.com/users/11580944/meghanmarkle"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 62, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1559343550, "creation_date": 1559342109, "question_id": 56402394, "link": "https://stackoverflow.com/questions/56402394/representing-set-theoretical-notions-in-terms-of-lists-in-haskell", "title": "Representing set-theoretical notions in terms of lists in Haskell", "body": "<p>I'm trying to define a new type in Haskell (i.e. sets) and to operate with it in terms of functions that input and output unordered lists without duplicates.</p>\n\n<p>Am I on the right path over here? Any suggestion is welcomed, even the most minor quibble. I'd want my code to be as elegant as possible.</p>\n\n<pre><code>-- generalized membership\n\ntype Set a = [a]\n\nmember :: Eq a =&gt; a -&gt; [a] -&gt; Bool\nmember x []                 = False\nmember x (y:ys) | x == y    = True\n                | otherwise = member x ys                \n\n-- elimination of duplicates\n\nnoReps :: Set Integer -&gt; Set Integer\nnoReps []                   = []\nnoReps (x:xs) | member x xs = noReps xs\n              | otherwise   = x : noReps xs\n\ninclusion :: Set Integer -&gt; Set Integer -&gt; Bool\ninclusion x y = length [i | i &lt;- x, not (member i y)] == 0\n\nidentical :: Set Integer -&gt; Set Integer -&gt; Bool \nidentical x y = inclusion x y &amp;&amp; inclusion y x\n\n-- membership for sets of sets\n\nsetmember :: Set Integer -&gt; Set (Set Integer) -&gt; Bool\nsetmember [] _                      = True\nsetmember _ []                      = False\nsetmember x (y:ys)  | identical x y = True \n                    | otherwise     = setmember x ys   \n\naddsets :: Set Integer -&gt; Set (Set Integer) -&gt; Set (Set Integer)\naddsets x y | setmember x y = y\n            | otherwise = x:y\n\n-- adding an integer to every member of a sets of sets of integers\n\naddelem :: Integer -&gt; Set (Set Integer) -&gt; Set (Set Integer) \naddelem x y = [noReps (x : i) | i &lt;- y]\n\n-- powerset of the set {1,...,n}\n\npowerset :: Integer -&gt; Set (Set Integer)\npowerset 1 = [[], [1]]\npowerset x = powerset (x-1) ++ addelem x (powerset (x-1))\n</code></pre>\n"}, {"tags": ["haskell", "pointfree", "combinators"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1559339247, "post_id": 56402002, "comment_id": 99402513, "body": "Backing up a little, you are looking for a point-free definition of <code>zipSorted f g = flip (f . g) . g</code>?"}, {"owner": {"reputation": 533, "user_id": 2121816, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/2ef34f3675b36942ffbc6ed7e502a9c8?s=128&d=identicon&r=PG", "display_name": "Raghav Malik", "link": "https://stackoverflow.com/users/2121816/raghav-malik"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1559339558, "post_id": 56402002, "comment_id": 99402583, "body": "I got the point-free definition of <code>zipSorted</code> as <code>flip (zip . sort) . sort</code> (that doesn&#39;t have <code>list1</code> or <code>list2</code> in its definition) but now I&#39;m trying to factor it out so it doesn&#39;t have <code>zip</code> or <code>sort</code> in the definition either (i.e. the function takes 4 arguments: <code>zip</code>, <code>sort</code>, <code>list1</code>, and <code>list2</code>)"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1559340707, "post_id": 56402002, "comment_id": 99402814, "body": "Yes, that&#39;s what I mean in my question; I abstracted out <code>zip</code> and <code>sort</code> as the parameters <code>f</code> and <code>g</code>, so that <code>zipSorted zip sort</code> evaluates to your original function."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1559341598, "post_id": 56402002, "comment_id": 99402994, "body": "(I guess I should say, do you want the point-free version of <code>foo f g = flip (f . g) . g</code>, so that <code>zipSorted == foo zip sort</code>.)"}], "answers": [{"tags": [], "owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "is_accepted": false, "score": 2, "last_activity_date": 1559340070, "creation_date": 1559340070, "answer_id": 56402150, "question_id": 56402002, "link": "https://stackoverflow.com/questions/56402002/haskell-point-free-style-with-no-functions-in-the-expression/56402150#56402150", "title": "Haskell point-free style with no functions in the expression", "body": "<p>I just asked lambdabot for the answer, rather than trying to work it out by hand:</p>\n\n<pre><code>&lt;amalloy&gt; @pl \\zip sort x y -&gt; (zip . sort) y $ sort x\n&lt;lambdabot&gt; join . (((.) . flip) .) . (.)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 2, "creation_date": 1559344243, "post_id": 56402153, "comment_id": 99403509, "body": "This can be streamlined further. Parametricity means we can push <code>flip</code> inside in <code>flip (f `on` g)</code>, giving out <code>flip f `on` g</code>, or simply <code>on . flip</code>   ."}], "tags": [], "owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "is_accepted": true, "score": 6, "last_activity_date": 1559340079, "creation_date": 1559340079, "answer_id": 56402153, "question_id": 56402002, "link": "https://stackoverflow.com/questions/56402002/haskell-point-free-style-with-no-functions-in-the-expression/56402153#56402153", "title": "Haskell point-free style with no functions in the expression", "body": "<p>Let's start from the beginning:</p>\n\n<pre><code>zipSort x y = zip (sort y) (sort x)\n</code></pre>\n\n<p>It's slightly weird that it uses its arguments in the opposite order, but we can fix that later with <code>flip</code>.</p>\n\n<p>Here we have a general pattern of a \"combining\" function of two arguments (here: <code>zip</code>) being passed two values transformed by another function. If we had the same base argument but different transformers, this would have been a <code>liftA2</code> pattern:</p>\n\n<pre><code>  c (f x) (g x)\n==\n  liftA2 c f g x\n</code></pre>\n\n<p>But here it's the opposite: We have the same transform function on both sides (here: <code>sort</code>), but different arguments (<code>x</code> and <code>y</code>). That's <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Function.html#v:on\" rel=\"noreferrer\"><code>on</code></a>:</p>\n\n<pre><code>  c (f x) (f y)\n==\n  (c `on` f) x y\n</code></pre>\n\n<p>In your case we get:</p>\n\n<pre><code>zip (sort y) (sort x)\n(zip `on` sort) y x\nflip (zip `on` sort) x y\n</code></pre>\n\n<p>So</p>\n\n<pre><code>zipSort = flip (zip `on` sort)  -- or: flip (on zip sort)\n</code></pre>\n\n<p>We can further pull out <code>zip</code> and <code>sort</code> by recognizing the standard two-argument-into-one-argument-function composition:</p>\n\n<pre><code>(\\x y -&gt; f (g x y)) == (f .) . g\n</code></pre>\n\n<p>giving</p>\n\n<pre><code>zipSort = ((flip .) . on) zip sort\n</code></pre>\n\n<p>Note that this function is less general than the pointful version, however. The original function has type</p>\n\n<pre><code>(Ord a, Ord b) =&gt; [a] -&gt; [b] -&gt; [(b, a)]\n</code></pre>\n\n<p>but the pointfree version has type</p>\n\n<pre><code>(Ord a) =&gt; [a] -&gt; [a] -&gt; [(a, a)]\n</code></pre>\n\n<p>because unifying the two <code>sort</code>s forces them to have the same type.</p>\n"}], "owner": {"reputation": 533, "user_id": 2121816, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/2ef34f3675b36942ffbc6ed7e502a9c8?s=128&d=identicon&r=PG", "display_name": "Raghav Malik", "link": "https://stackoverflow.com/users/2121816/raghav-malik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 70, "favorite_count": 0, "accepted_answer_id": 56402153, "answer_count": 2, "score": 1, "last_activity_date": 1559344758, "creation_date": 1559338832, "last_edit_date": 1559344758, "question_id": 56402002, "link": "https://stackoverflow.com/questions/56402002/haskell-point-free-style-with-no-functions-in-the-expression", "title": "Haskell point-free style with no functions in the expression", "body": "<p>I've been trying to take some simple functions and convert them to point-free style for practice. \nI started with something like this:</p>\n\n<pre><code>zipSorted x y = (zip . sort) y $ sort x --zipSorted(x, y) = zip(sort(y), sort(x))\n</code></pre>\n\n<p>and eventually converted it to</p>\n\n<pre><code>zipSorted = flip (zip . sort) . sort\n</code></pre>\n\n<p>(I'm not sure if this is even the best way to do it but it works)</p>\n\n<p>Now I'm trying to further reduce this expression by not having it depend on <code>zip</code> and <code>sort</code> at all. In other words, I'm looking for this function: (I think its a combinator if my vocabulary isn't mistaken)</p>\n\n<pre><code>P(f, g, x, y) = f(g(y), g(x))\n</code></pre>\n\n<p>The fact that <code>sort</code> is present twice but only passed in once hinted to me that I should use the applicative functor operator <code>&lt;*&gt;</code> but I can't figure out how for some reason. </p>\n\n<p>From my understanding, <code>(f &lt;*&gt; g)(x) = f(x, g(x))</code>, so I've tried re-writing the first point-free expression in this form:</p>\n\n<pre><code>flip (zip . sort) . sort\n(.) (flip $ zip . sort) sort\n(flip (.)) sort $ flip (zip . sort)\n(flip (.)) sort $ flip $ (zip .) sort\n</code></pre>\n\n<p>It seems that <code>sort</code> should be <code>x</code>, <code>(flip (.))</code> should be <code>f</code>, and <code>flip . (zip .)</code> should be <code>g</code>.</p>\n\n<pre><code>p = (flip (.)) &lt;*&gt; (flip . (zip .))\np sort [2, 1, 3] [4, 1, 5]\n</code></pre>\n\n<p>yields <code>[(1, 1), (4, 2), (5, 3)]</code> as expected, but now I'm lost on how to pull the <code>zip</code> out. I've tried </p>\n\n<pre><code>p = (flip (.)) &lt;*&gt; (flip . (.))\np zip sort [2, 1, 3] [4, 1, 5]\n</code></pre>\n\n<p>but this doesn't work. Is there a way to convert that expression to a combinator that factors out <code>zip</code>?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 7, "creation_date": 1559331664, "post_id": 56400401, "comment_id": 99400162, "body": "This looks as a terrible idea. Pattern matching should always be exhaustive. Intentionally causing errors and then trying to catch and fix them later seems more complex. Further, exceptions can only be caught inside IO, greatly limiting this approach. Why do you want to do this? It looks like an XY problem."}, {"owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1559332525, "post_id": 56400401, "comment_id": 99400395, "body": "Mocking up <a href=\"https://www.reddit.com/r/haskell/comments/bjpfda/matching_eithers_using_lambdacase_and_operators/ema9kwu\" rel=\"nofollow noreferrer\">an idea I had last month</a>. The proper implementation may require function types that mention their patterns (e.g. <code>\\True-&gt; () :: Partial &#39;[True] Bool ()</code>)"}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 1, "creation_date": 1559352750, "post_id": 56400401, "comment_id": 99404688, "body": "I think the <a href=\"https://hackage.haskell.org/package/total-1.0.5/docs/Lens-Family-Total.html\" rel=\"nofollow noreferrer\"><code>total</code></a> library does something like that."}, {"owner": {"reputation": 2226, "user_id": 2246434, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bTuEI.jpg?s=128&g=1", "display_name": "Julia Path", "link": "https://stackoverflow.com/users/2246434/julia-path"}, "edited": false, "score": 0, "creation_date": 1561195263, "post_id": 56400401, "comment_id": 99990753, "body": "If there was a way to catch the  exception of the outermost lambda, then <code>f</code> and <code>f `seq` (id . f)</code> would behave differently, but with <code>-O1</code> or <code>-O2</code> the latter will be optimised to the former (We need the <code>seq</code>, because <code>undefined</code> and <code>id . undefined</code> actually do behave differently)."}], "owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 96, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1559328879, "creation_date": 1559328879, "question_id": 56400401, "link": "https://stackoverflow.com/questions/56400401/only-catching-outer-patternmatchfail-exceptions", "title": "Only catching outer PatternMatchFail exceptions", "body": "<p>Given a partial function, e.g.:</p>\n\n<pre><code>foo :: Maybe (Bool, a) -&gt; a\nfoo = \\(Just (b, a)) -&gt; (\\True -&gt; a) b\n</code></pre>\n\n<p>Is there a way to capture <code>PatternMatchFail</code> exceptions thrown by the outermost lambda without capturing <code>PatternMatchFail</code> exceptions thrown by the body of the lambda?</p>\n\n<pre><code> ghci&gt; catchingOuterPatternMatchFailure foo (Just (True, ()))\n Right ()\n ghci&gt; catchingOuterPatternMatchFailure foo (Just (False, ()))\n *** Exception: ...: Non-exhaustive patterns in lambda\n ghci&gt; catchingOuterPatternMatchFailure foo Nothing\n Left \"...: Non-exhaustive patterns in lambda\"\n</code></pre>\n\n<p>I think I'd need something weaker than weak normal head form, only check that the given function pattern matches the given value, not that it does so successfully.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 0, "creation_date": 1559327488, "post_id": 56399982, "comment_id": 99398707, "body": "Hunh. Looking at the core it seems like the compiler switches the argument order for <code>\\True () -&gt; ()</code> into <code>\\() -&gt; \\True -&gt; ()</code>"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1559328028, "post_id": 56399982, "comment_id": 99398905, "body": "In ghci, an easy way of forcing thunks is <code>ghci&gt; my_thunk `seq` ()</code>; it doesn&#39;t require an extra import."}], "answers": [{"tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 7, "last_activity_date": 1559327871, "last_edit_date": 1592644375, "creation_date": 1559327871, "answer_id": 56400221, "question_id": 56399982, "link": "https://stackoverflow.com/questions/56399982/control-exception-evaluate-treats-thunks-generated-by-equivalent-functions-diffe/56400221#56400221", "title": "Control.Exception.evaluate treats thunks generated by equivalent functions differently", "body": "<p>From the Haskell 2010 report:</p>\n<blockquote>\n<p>The following identity holds:</p>\n<pre><code>\\ p1 \u2026 pn -&gt; e    =   \\ x1 \u2026 xn -&gt; case (x1, \u2026, xn) of (p1, \u2026, pn) -&gt; e\n</code></pre>\n<p><a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-260003.3\" rel=\"noreferrer\">https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-260003.3</a></p>\n</blockquote>\n<p>So <code>\\True () -&gt; e</code> desugars to <code>\\x y -&gt; case (x, y) of (True, ()) -&gt; e</code>, which after partial application to <code>False</code> is <code>\\y -&gt; case (False, y) of ...</code> i.e., a function abstraction, so that's not bottom.</p>\n<p>In contrast, <code>\\True -&gt; f</code> (where <code>f = \\() -&gt; e</code>) desugars to <code>\\x -&gt; case x of True -&gt; ...</code>, and there's the exception.</p>\n"}], "owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 59, "favorite_count": 1, "accepted_answer_id": 56400221, "answer_count": 1, "score": 8, "last_activity_date": 1559327871, "creation_date": 1559326495, "question_id": 56399982, "link": "https://stackoverflow.com/questions/56399982/control-exception-evaluate-treats-thunks-generated-by-equivalent-functions-diffe", "title": "Control.Exception.evaluate treats thunks generated by equivalent functions differently", "body": "<p>Here are two equivalent partial functions:</p>\n\n<ul>\n<li><code>\\True -&gt; \\() -&gt; ()</code></li>\n<li><code>\\True () -&gt; ()</code></li>\n</ul>\n\n<p>Applying either to <code>False</code> should raise a <code>PatternMatchFail</code> exception.</p>\n\n<p>When I use <code>Control.Exception.evaluate</code> to force a thunk made from the former to WHNF, it forces the <code>PatternMatchFail</code> exception:</p>\n\n<pre><code>ghci&gt; _ &lt;- evaluate $ (\\True -&gt; \\() -&gt; ()) False\n*** Exception: &lt;interactive&gt;:10:18-35: Non-exhaustive patterns in lambda\n</code></pre>\n\n<p>When I use the latter form, it doesn't:</p>\n\n<pre><code>ghci&gt; _ &lt;- evaluate $ (\\True () -&gt; ()) False\n</code></pre>\n\n<p>Why not?</p>\n\n<p>(on GHC-8.0.1)</p>\n"}, {"tags": ["haskell", "haskell-snap-framework"], "answers": [{"comments": [{"owner": {"reputation": 255, "user_id": 681337, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/be5e0ffb42be5e3337208ae8c9679bb4?s=128&d=identicon&r=PG", "display_name": "Neil", "link": "https://stackoverflow.com/users/681337/neil"}, "edited": false, "score": 0, "creation_date": 1559695058, "post_id": 56438770, "comment_id": 99498785, "body": "Thanks, I&#39;ve figured out the solution using onUnload."}], "tags": [], "owner": {"reputation": 1275, "user_id": 11571245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vkCkX.png?s=128&g=1", "display_name": "typedfern", "link": "https://stackoverflow.com/users/11571245/typedfern"}, "is_accepted": false, "score": 0, "last_activity_date": 1559631228, "creation_date": 1559631228, "answer_id": 56438770, "question_id": 56398413, "link": "https://stackoverflow.com/questions/56398413/how-to-run-cleanup-on-snap-shutdown/56438770#56438770", "title": "how to run cleanup on snap shutdown", "body": "<p>How do you shut down the server? If it is by killing the process, you will need to catch the <code>ThreadKilled</code> and/or <code>UserInterrupt</code> exceptions, as documented <a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/Control-Exception.html\" rel=\"nofollow noreferrer\">here</a></p>\n\n<p>(Snap does not appear to have an \"in case of forceful shutdown\" hook, nor is it really its obligation)</p>\n\n<p>Otherwise, you'll have to add the checkpointing instruction as part of whatever shutdown procedure you have.</p>\n"}, {"tags": [], "owner": {"reputation": 255, "user_id": 681337, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/be5e0ffb42be5e3337208ae8c9679bb4?s=128&d=identicon&r=PG", "display_name": "Neil", "link": "https://stackoverflow.com/users/681337/neil"}, "is_accepted": true, "score": 0, "last_activity_date": 1559695286, "creation_date": 1559695286, "answer_id": 56452934, "question_id": 56398413, "link": "https://stackoverflow.com/questions/56398413/how-to-run-cleanup-on-snap-shutdown/56452934#56452934", "title": "how to run cleanup on snap shutdown", "body": "<p>For reference, I solved it by getting a reference to the acid-state, and then using onUnload to close it:</p>\n\n<pre><code>acidDisk :: IO (AcidStorage SessionMap)\nacidDisk = AcidStorage &lt;$&gt; openLocalState emptyState\n\napp :: SnapletInit App App\napp = makeSnaplet \"app\" \"An snaplet example application.\" Nothing $ do\n  conf &lt;- getSnapletUserConfig\n  h &lt;- nestSnaplet \"\" heist $ heistInit \"templates\"\n\n  ad &lt;- liftIO $ fmap opts . createState =&lt;&lt; acidDisk\n  s &lt;- nestSnaplet \"sess\"sess $ \n        SS.initServerSessionManager (return ad)\n  onUnload (createCheckpointAndClose $ acidState $ storage ad)\n\n</code></pre>\n"}], "owner": {"reputation": 255, "user_id": 681337, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/be5e0ffb42be5e3337208ae8c9679bb4?s=128&d=identicon&r=PG", "display_name": "Neil", "link": "https://stackoverflow.com/users/681337/neil"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 89, "favorite_count": 0, "accepted_answer_id": 56452934, "answer_count": 2, "score": 2, "last_activity_date": 1559695286, "creation_date": 1559318649, "last_edit_date": 1559695029, "question_id": 56398413, "link": "https://stackoverflow.com/questions/56398413/how-to-run-cleanup-on-snap-shutdown", "title": "how to run cleanup on snap shutdown", "body": "<p>I'm using <a href=\"https://hackage.haskell.org/package/serversession-backend-acid-state\" rel=\"nofollow noreferrer\">serversession-backend-acid-state</a> for sessions, along with <a href=\"https://hackage.haskell.org/package/serversession-frontend-snap\" rel=\"nofollow noreferrer\">serversession-frontend-snap</a>. </p>\n\n<p>If I run with the memory version of acid-state, everything works fine:</p>\n\n<pre><code>-- create state container in memory from initial state\nacidMem :: IO (AcidStorage SessionMap)\nacidMem = AcidStorage &lt;$&gt; openMemoryState emptyState\n\napp :: SnapletInit App App\napp = makeSnaplet \"app\" \"An snaplet example application.\" Nothing $ do\n  conf &lt;- getSnapletUserConfig\n  h &lt;- nestSnaplet \"\" heist $ heistInit \"templates\"\n  s &lt;- nestSnaplet \"sess\"sess $ SS.simpleServerSessionManager acidDisk id\n</code></pre>\n\n<p>I can successfully use the disk version of acid-state by using the following:</p>\n\n<pre><code>acidDisk :: IO (AcidStorage SessionMap)\nacidDisk = AcidStorage &lt;$&gt; openLocalState emptyState\n</code></pre>\n\n<p>My problem arises when I shut down snap; I don't know where I can properly close acid-state via <code>(createCheckpointAndClose . acidState)</code>. Without a proper shutdown, I will get an error when restarting snap.</p>\n\n<p>I see the <code>cleanup</code> function in Main.hs, but I don't understand how I can use this to close acid-state. What is the best approach for this?</p>\n\n<p>Edit: I've discovered <code>onUnload</code>, but can't wrap the simpleServerSessionManager with it.</p>\n\n<p>Edit #2: I've determined how to use <code>onUnload</code> to get it working with acidDisk:</p>\n\n<pre><code>    ad &lt;- liftIO $ fmap opts . createState =&lt;&lt; acidDisk\n    s &lt;- nestSnaplet \"sess\"sess $ \n        SS.initServerSessionManager (return ad)\n    onUnload (createCheckpointAndClose $ acidState $ storage ad)\n</code></pre>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 7666, "user_id": 1241193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0331e5e748a0ac3860b68f6cac130ef1?s=128&d=identicon&r=PG", "display_name": "Bob Dalgleish", "link": "https://stackoverflow.com/users/1241193/bob-dalgleish"}, "edited": false, "score": 1, "creation_date": 1559320588, "post_id": 56397232, "comment_id": 99396008, "body": "To enhance your example, note that <code>x, y, c :: Grid -&gt; Int</code> by construction, since the field names are simply accessor functions."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": false, "score": 4, "last_activity_date": 1559313975, "creation_date": 1559313975, "answer_id": 56397232, "question_id": 56396696, "link": "https://stackoverflow.com/questions/56396696/haskell-calculated-fields-in-custom-data-types/56397232#56397232", "title": "haskell : calculated fields in custom data types", "body": "<p>Without any additional requirement, that's simply a function.</p>\n\n<pre><code>c :: Grid -&gt; Int\nc g = x g * y g\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "edited": false, "score": 0, "creation_date": 1559317568, "post_id": 56397784, "comment_id": 99394783, "body": "@matthias, also note that because Haskell is lazy, the <code>x * y</code> here is not computed until a <code>c</code> is requested, so there&#39;s no time cost to doing it this way. And unlike defining <code>c</code> as a bare function, this saves the result for future use."}, {"owner": {"reputation": 7666, "user_id": 1241193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0331e5e748a0ac3860b68f6cac130ef1?s=128&d=identicon&r=PG", "display_name": "Bob Dalgleish", "link": "https://stackoverflow.com/users/1241193/bob-dalgleish"}, "edited": false, "score": 0, "creation_date": 1559320525, "post_id": 56397784, "comment_id": 99395985, "body": "Unless you hide the bare constructor, though, someone can update one of the fields thus: <code>grid {y=16}</code> but the value of <code>c</code> would not be updated."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 4, "last_activity_date": 1559316093, "creation_date": 1559316093, "answer_id": 56397784, "question_id": 56396696, "link": "https://stackoverflow.com/questions/56396696/haskell-calculated-fields-in-custom-data-types/56397784#56397784", "title": "haskell : calculated fields in custom data types", "body": "<p>If, for some reason, you want to pre-compute <code>c</code> and store it in the value, define a smart constructor.</p>\n\n<pre><code>data Grid = Grid {x :: Int, y :: Int, c :: Int}\n\nmkGrid :: Int -&gt; Int -&gt; Grid\nmkGrid x y = Grid x y (x * y)\n</code></pre>\n\n<p>There is a stricter separation of data and functions in Haskell than in an OO language. <code>data</code> only defines a new type, not the operations on that type. Record syntax only provides projections of the form <code>Grid -&gt; x</code> for some type <code>x</code>; it doesn't let you define anything more complicated.</p>\n"}], "owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 94, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1559316093, "creation_date": 1559311856, "question_id": 56396696, "link": "https://stackoverflow.com/questions/56396696/haskell-calculated-fields-in-custom-data-types", "title": "haskell : calculated fields in custom data types", "body": "<p>Is it possible to do something that is equivalent to having a field in a data type that is automatically calculated from other fields in the data type. For example:</p>\n\n<pre><code>data Grid = Grid\n  { x :: Int\n  , y :: Int\n  , c = (x * y) :: Int\n  }\n</code></pre>\n\n<p>and then \n<code>myGrid = Grid 5 6</code></p>\n\n<p>or does this have to be or can only be done with <code>Class</code>?</p>\n\n<pre><code>data Grid = Grid\n  { x :: Int\n  , y :: Int\n  }\n\nclass Calculated a where\n  c :: a -&gt; Int\n\ninstance Calculated Grid where\n  c g = x g * y g\n</code></pre>\n"}, {"tags": ["algorithm", "haskell", "optimization", "parallel-processing", "massiv"], "comments": [{"owner": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 2, "creation_date": 1559341619, "post_id": 56395599, "comment_id": 99402999, "body": "Do you mean to estimate the error using <a href=\"https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%B0%D0%B2%D0%B8%D0%BB%D0%BE_%D0%A0%D1%83%D0%BD%D0%B3%D0%B5\" rel=\"nofollow noreferrer\">Runge&#39;s rule</a> (the article is in Russian, if someone has an equivalent English link, please share for everyone&#39;s enjoyment)?"}, {"owner": {"reputation": 349, "user_id": 11388249, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-Zhe1qISXmzY/AAAAAAAAAAI/AAAAAAAAAC0/Opx3Le0xlkE/photo.jpg?sz=128", "display_name": "Vasiliy", "link": "https://stackoverflow.com/users/11388249/vasiliy"}, "reply_to_user": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 0, "creation_date": 1559387472, "post_id": 56395599, "comment_id": 99409788, "body": "@Michail,Yes, that&#39;s exactly what I want."}, {"owner": {"reputation": 8621, "user_id": 1848029, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qfjAy.jpg?s=128&g=1", "display_name": "lehins", "link": "https://stackoverflow.com/users/1848029/lehins"}, "reply_to_user": {"reputation": 1414, "user_id": 6564029, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/WxyK5.jpg?s=128&g=1", "display_name": "Michail", "link": "https://stackoverflow.com/users/6564029/michail"}, "edited": false, "score": 1, "creation_date": 1559388813, "post_id": 56395599, "comment_id": 99410056, "body": "@Michail thank you for posting link to Wikipedia article in Russian . It was much easier to grasp the meat of the Runge rule from it rather than other articles in English that I found."}], "answers": [{"comments": [{"owner": {"reputation": 349, "user_id": 11388249, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-Zhe1qISXmzY/AAAAAAAAAAI/AAAAAAAAAC0/Opx3Le0xlkE/photo.jpg?sz=128", "display_name": "Vasiliy", "link": "https://stackoverflow.com/users/11388249/vasiliy"}, "edited": false, "score": 0, "creation_date": 1559390358, "post_id": 56406332, "comment_id": 99410369, "body": "Please explain what is Right (int, double) and Left (int, double)? how is MAX n formed?"}, {"owner": {"reputation": 8621, "user_id": 1848029, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qfjAy.jpg?s=128&g=1", "display_name": "lehins", "link": "https://stackoverflow.com/users/1848029/lehins"}, "reply_to_user": {"reputation": 349, "user_id": 11388249, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-Zhe1qISXmzY/AAAAAAAAAAI/AAAAAAAAAC0/Opx3Le0xlkE/photo.jpg?sz=128", "display_name": "Vasiliy", "link": "https://stackoverflow.com/users/11388249/vasiliy"}, "edited": false, "score": 1, "creation_date": 1559390664, "post_id": 56406332, "comment_id": 99410438, "body": "If you&#39;d like you can remove the max n and <code>Left</code> case completely, since it is a mere precaution. Or you can simply supply <code>maxBound</code> for the <code>nMax</code>. It is basically a guard against unbounded computation for extremely expensive functions."}, {"owner": {"reputation": 8621, "user_id": 1848029, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qfjAy.jpg?s=128&g=1", "display_name": "lehins", "link": "https://stackoverflow.com/users/1848029/lehins"}, "reply_to_user": {"reputation": 349, "user_id": 11388249, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-Zhe1qISXmzY/AAAAAAAAAAI/AAAAAAAAAC0/Opx3Le0xlkE/photo.jpg?sz=128", "display_name": "Vasiliy", "link": "https://stackoverflow.com/users/11388249/vasiliy"}, "edited": false, "score": 1, "creation_date": 1559398540, "post_id": 56406332, "comment_id": 99412195, "body": "@Vasiliy in case that you are looking for absolute performance, I added extra advanced solutions"}], "tags": [], "owner": {"reputation": 8621, "user_id": 1848029, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qfjAy.jpg?s=128&g=1", "display_name": "lehins", "link": "https://stackoverflow.com/users/1848029/lehins"}, "is_accepted": true, "score": 2, "last_activity_date": 1559399586, "last_edit_date": 1559399586, "creation_date": 1559388688, "answer_id": 56406332, "question_id": 56395599, "link": "https://stackoverflow.com/questions/56395599/how-to-correctly-add-the-runge-error-estimation-rule-to-this-example/56406332#56406332", "title": "How to correctly add the Runge error estimation rule to this example?", "body": "<p>You don't need to change anything in the already supplied integral estimator in order to add precision to it using Runge rule. Something like that, I think:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>-- | Returns estimated integral up to a precision, or value estimated at max\n-- number of steps\nrungeRule ::\n     Int -- ^ Maximum number of steps as an upper bound, to prevent unbounded computation\n  -&gt; Double -- ^ \u03b5 -- precision\n  -&gt; Int -- ^ Starting value of @n@\n  -&gt; Double -- ^ \u0398 -- ^ Either 1/3 for trapezoidal and midpoint or 1/15 for Simpson's\n  -&gt; (Int -&gt; Double) -- ^ Integral estimator\n  -&gt; Either Double (Int, Double)\nrungeRule nMax epsilon n0 theta integralEstimator =\n  go (integralEstimator n0) (2 * n0)\n  where\n    go prevEstimate n\n      | n &gt;= nMax = Left prevEstimate\n      | theta * abs (curEstimate - prevEstimate) &lt; epsilon =\n        Right (n, curEstimate)\n      | otherwise = go curEstimate (2 * n)\n      where\n        curEstimate = integralEstimator n\n\ntrapezoidal ::\n     Double -- ^ \u03b5 -- precision\n  -&gt; (Double -&gt; Double) -- ^ f(x) - function to integrate\n  -&gt; Double -- ^ a - from\n  -&gt; Double -- ^ b - to\n  -&gt; Either Double (Int, Double)\ntrapezoidal epsilon f a b =\n  rungeRule 100000 epsilon 10 (1 / 3) (\\n -&gt; integrateA n f a b)\n</code></pre>\n\n<p>If we run it, we get promising results:</p>\n\n<pre><code>\u03bb&gt; trapezoidal 0.0005 (\\x -&gt; x * x) 10 20\nRight (640,2333.333740234375)\n\u03bb&gt; trapezoidal 0.00005 (\\x -&gt; x * x) 10 20\nRight (2560,2333.3333587646484)\n\u03bb&gt; trapezoidal 0.00000005 (\\x -&gt; x * x) 10 20\nRight (81920,2333.3333333581686)\n\u03bb&gt; trapezoidal 0.000000005 (\\x -&gt; x * x) 10 20\nLeft 2333.3333333581686\n</code></pre>\n\n<p>Side note:</p>\n\n<ul>\n<li><p>Your function <code>f</code> the way you wrote it suggests that:</p>\n\n<ul>\n<li><p>you expect: <code>f x = (sin x) * (cos (x*x*x))</code> </p></li>\n<li><p>where in reality it is: <code>f x = (sin x) * (cos x) * x * x</code></p></li>\n</ul></li>\n</ul>\n\n<p><strong>Edit</strong>:</p>\n\n<p>Solution presented above is general enough to work for all integral approximation rules. But there is some duplicate work happens at each iteration of Runge rule, in case of trapezoidal rule half of the elements are being recomputed each time, which I saw as a potential optimization. What comes next is a bit more advance usage of <code>massiv</code>, as such I am not gonna be able to elaborate on how it work, except the fact that the <code>segments</code> array passed around is used to access values computed at a previous step.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>trapezoidalMemoized ::\n     Int\n  -&gt; Array P Ix1 Double\n  -&gt; (Double -&gt; Double)\n  -&gt; Double\n  -&gt; Double\n  -&gt; (Double, Array P Ix1 Double)\ntrapezoidalMemoized n prevSegments f a b =\n  let step = (b - a) / fromIntegral n\n      sz = size segments - 1\n      curSegments = \n        fmap f (enumFromStepN Seq (a + step) (2 * step) (Sz (n `div` 2)))\n      segments =\n        computeAs P $\n        makeLoadArrayS (Sz (n + 1)) 0 $ \\w -&gt; do\n          A.iforM_ prevSegments $ \\i e -&gt; w (i * 2) e\n          A.iforM_ curSegments $ \\i e -&gt; w (i * 2 + 1) e\n      area y0 y1 = step * (y0 + y1) / 2\n      areas = A.zipWith area segments (extract' 1 sz segments)\n   in (A.sum areas, segments)\n\n\ntrapezoidalRungeMemo ::\n     Double -- ^ \u03b5 -- precision\n  -&gt; (Double -&gt; Double) -- ^ f(x) - function to integrate\n  -&gt; Double -- ^ a - from\n  -&gt; Double -- ^ b - to\n  -&gt; Either Double (Int, Double)\ntrapezoidalRungeMemo epsilon f a b = go initEstimate initSegments 4\n  where\n    (initEstimate, initSegments) =\n      trapezoidalMemoized 2 (A.fromList Seq [f a, f b]) f a b\n    nMax = 131072 -- 2 ^ 17\n    theta = 1 / 3\n    go prevEstimate prevSegments n\n      | n &gt;= nMax = Left prevEstimate\n      | theta * abs (curEstimate - prevEstimate) &lt; epsilon =\n        Right (n, curEstimate)\n      | otherwise = go curEstimate curSegments (2 * n)\n      where\n        (curEstimate, curSegments) =\n          trapezoidalMemoized n prevSegments f a b\n</code></pre>\n\n<p>And making it parallelizable is even more involved:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>-- Requires additional import: `Data.Massiv.Array.Unsafe`\ntrapezoidalMemoizedPar ::\n     Int\n  -&gt; Array P Ix1 Double\n  -&gt; (Double -&gt; Double)\n  -&gt; Double\n  -&gt; Double\n  -&gt; (Double, Array P Ix1 Double)\ntrapezoidalMemoizedPar n prevSegments f a b =\n  let step = (b - a) / fromIntegral n\n      sz = size segments - 1\n      curSegments =\n        fmap f (enumFromStepN Seq (a + step) (2 * step) (Sz (n `div` 2)))\n      segments =\n        computeAs P $\n        unsafeMakeLoadArray Par (Sz (n + 1)) Nothing $ \\scheduler _ w -&gt; do\n          splitLinearlyWith_\n            scheduler\n            (unSz (size prevSegments))\n            (unsafeLinearIndex prevSegments) $ \\i e -&gt; w (i * 2) e\n          splitLinearlyWith_\n            scheduler\n            (unSz (size curSegments))\n            (unsafeLinearIndex curSegments) $ \\i e -&gt; w (i * 2 + 1) e\n      area y0 y1 = step * (y0 + y1) / 2\n      areas = A.zipWith area segments (extract' 1 sz segments)\n   in (A.sum areas, segments)\n</code></pre>\n"}], "owner": {"reputation": 349, "user_id": 11388249, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-Zhe1qISXmzY/AAAAAAAAAAI/AAAAAAAAAC0/Opx3Le0xlkE/photo.jpg?sz=128", "display_name": "Vasiliy", "link": "https://stackoverflow.com/users/11388249/vasiliy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 98, "favorite_count": 2, "accepted_answer_id": 56406332, "answer_count": 1, "score": 4, "last_activity_date": 1559399586, "creation_date": 1559307587, "last_edit_date": 1559399502, "question_id": 56395599, "link": "https://stackoverflow.com/questions/56395599/how-to-correctly-add-the-runge-error-estimation-rule-to-this-example", "title": "How to correctly add the Runge error estimation rule to this example?", "body": "<p>I have an algorithm for parallel computing a certain integral.\nThis solution gives very good time acceleration if you use multiple threads. And the more threads the faster the calculation.\nI tested up to -N4 and the acceleration factor reached 8. Ie, the launch of the program on 4 cores is the calculation of the integral 8 times faster than the launch of this program on 1 core.\nBut I want to add a rule for estimating the error of Runge.\nSince now, in order to increase the accuracy of the calculation of the integral, it is necessary to increase N. Which indicates how many parts we need to break our original segment.\nHow can i do this?</p>\n\n<pre><code>import Data.Time\nimport System.Environment\nimport Data.Massiv.Array as A\n\nmain = do\n    begT &lt;- getCurrentTime\n    putStrLn $ show $ integrateA 100000 f 0.00005 10000\n    endT &lt;- getCurrentTime\n    putStrLn $ init $ show $ diffUTCTime endT begT\n\nf :: Double -&gt; Double\nf x = sin x * cos x*x*x\n\nintegrateA :: Int -&gt; (Double -&gt; Double) -&gt; Double -&gt; Double -&gt; Double\nintegrateA n f a b =\n let step = (b - a) / fromIntegral n\n  sz = size segments - 1\n  segments = computeAs P $ A.map f (enumFromStepN Par a step (Sz (n + 1)))\n  area y0 y1 = step * (y0 + y1) / 2\n  areas = A.zipWith area (extract' 0 sz segments) (extract' 1 sz segments)\n in A.sum areas\n</code></pre>\n\n<p>Examples of launches:\n<a href=\"https://i.stack.imgur.com/hBeoD.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/hBeoD.png\" alt=\"enter image description here\"></a></p>\n"}, {"tags": ["haskell", "ghc", "guard-clause", "pattern-guards"], "comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 3, "creation_date": 1559300543, "post_id": 56393471, "comment_id": 99386262, "body": "<a href=\"https://wiki.haskell.org/Keywords#.3C-\" rel=\"nofollow noreferrer\">wiki.haskell.org/Keywords#.3C-</a>"}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 8, "last_activity_date": 1559299257, "creation_date": 1559299257, "answer_id": 56393553, "question_id": 56393471, "link": "https://stackoverflow.com/questions/56393471/what-does-left-arrow-mean-outside-a-do-block/56393553#56393553", "title": "What does left arrow &lt;- mean outside a do block?", "body": "<p>This is a <a href=\"https://wiki.haskell.org/Pattern_guard\" rel=\"noreferrer\"><em>pattern guard</em> [Haskell-wiki]</a>. Since Haskell'10 a guard is a list of qualifiers. A qualifier can be a condition (like in the old guards), and <em>pattern guards</em>.</p>\n\n<p>Haskell will thus (lazily) evaluate the expression on the right side of the arrow <code>&lt;-</code> and aim to match it with the pattern on the left of the arrow. If that succeeds, than the guard (well that part of the guard) is successful. If all the parts of the guard are successful, then the rule \"fires\".</p>\n\n<p>In this specific case the only part of the pattern that might fail is the fact that the third item of the 3-tuple is <em>not</em> a <code>CmmForeignCall</code> data constructor. Furthermore by using this pattern guard, we can of course use <code>entry</code>, <code>middle</code> in the body of the expression.</p>\n"}, {"tags": [], "owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "is_accepted": true, "score": 12, "last_activity_date": 1559299291, "last_edit_date": 1592644375, "creation_date": 1559299291, "answer_id": 56393562, "question_id": 56393471, "link": "https://stackoverflow.com/questions/56393471/what-does-left-arrow-mean-outside-a-do-block/56393562#56393562", "title": "What does left arrow &lt;- mean outside a do block?", "body": "<p>That's a <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-460003.13\" rel=\"noreferrer\">pattern guard</a>:</p>\n<blockquote>\n<p><em>guard</em> \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u2192\u00a0\u00a0 <em>pat</em> <code>&lt;-</code> <em>infixexp</em> \u00a0\u00a0\u00a0\u00a0    (pattern guard)</p>\n</blockquote>\n<p>[...]</p>\n<blockquote>\n<p>A <em>guard</em> has one of the following forms:</p>\n<ul>\n<li><em>pattern guards</em> are of the form <code>p &lt;- e</code>, where <em>p</em> is a pattern (see Section <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-580003.17\" rel=\"noreferrer\">3.17</a>) of type <em>t</em> and <em>e</em> is an expression type <em>t</em>. They succeed if the expression <em>e</em> matches the pattern <em>p</em>, and introduce the bindings of the pattern to the environment.</li>\n</ul>\n</blockquote>\n<p>Where normal guards are limited to a boolean check, pattern guards can match against an arbitrary pattern and define local variables. (In your case <code>entry</code>, <code>middle</code>, and the contents of <code>CmmForeignCall</code> will be directly available in the function body.)</p>\n<p>You can think of boolean guards as equivalent to pattern guards with a pattern of <code>True</code>:</p>\n<pre><code>| expr\n</code></pre>\n<p>works like</p>\n<pre><code>| True &lt;- expr\n</code></pre>\n"}], "owner": {"reputation": 443, "user_id": 4183297, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/UNM2l.jpg?s=128&g=1", "display_name": "Theodora", "link": "https://stackoverflow.com/users/4183297/theodora"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 755, "favorite_count": 2, "accepted_answer_id": 56393562, "answer_count": 2, "score": 12, "last_activity_date": 1559300799, "creation_date": 1559298970, "last_edit_date": 1559300799, "question_id": 56393471, "link": "https://stackoverflow.com/questions/56393471/what-does-left-arrow-mean-outside-a-do-block", "title": "What does left arrow &lt;- mean outside a do block?", "body": "<p>I came across with the following code recently and it bothers me a lot</p>\n\n<pre><code>lowerSafeForeignCall dflags block\n| (entry, middle, CmmForeignCall { .. }) &lt;- blockSplit block\n= do\n -- do block stuffs\n -- Block doesn't end in a safe foreign call:\n| otherwise = return block\n</code></pre>\n\n<p>This piece of code is from \n<a href=\"https://phabricator.haskell.org/rGHCb0534f78a73f972e279eed4447a5687bd6a8308e\" rel=\"noreferrer\">https://phabricator.haskell.org/rGHCb0534f78a73f972e279eed4447a5687bd6a8308e</a></p>\n\n<p>in file compiler/cmm/CmmLayoutStack.hs </p>\n\n<p>line 983</p>\n\n<p>I really would like to konw what is this &lt;- in the second line.\nI believe <em>lowerSafeForeignCall</em> is a function and the <em>|</em> and '<em>otherwise</em>' indicate this function uses guards. So</p>\n\n<pre><code>(entry, middle, CmmForeignCall { .. }) &lt;- blockSplit block\n</code></pre>\n\n<p>must be of type Bool. But the &lt;- is outside any do block.\nI did some search online but still not a single clue about this usage.</p>\n"}, {"tags": ["haskell", "functional-programming", "polymorphism", "type-signature"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1559295190, "post_id": 56392393, "comment_id": 99383576, "body": "This is a result of the monomorphism restriction: <a href=\"https://wiki.haskell.org/Monomorphism_restriction\" rel=\"nofollow noreferrer\">wiki.haskell.org/Monomorphism_restriction</a>"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 4, "creation_date": 1559296261, "post_id": 56392393, "comment_id": 99384122, "body": "@WillemVanOnsem At a glance, this looks more like a <code>ScopedTypeVariables</code> kind of issue than a monomorphism restriction one -- there are no constraints to make the monomorphism restriction kick in."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1559297661, "post_id": 56392393, "comment_id": 99384816, "body": "I haven&#39;t tried this code but <code>ScopedTypeVariables</code> was my first reaction. To the OP: try enabling that extension and let us know if it works, or gives you a different error message"}, {"owner": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "edited": false, "score": 3, "creation_date": 1559299042, "post_id": 56392393, "comment_id": 99385496, "body": "With <code>ScopedTypeVariables</code> you&#39;d also need an explicit <code>forall</code> to put the type variables into scope. <a href=\"https://stackoverflow.com/a/6929074/8491228\">see this answer</a> (I&#39;m not 100% sure this is an actual duplicate)"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1559306212, "post_id": 56392393, "comment_id": 99388976, "body": "Isn&#39;t <code>mapSupply</code> just <code>fmap</code> if you define <code>type Supply s a = State s a</code>?"}, {"owner": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "edited": false, "score": 2, "creation_date": 1559310283, "post_id": 56392393, "comment_id": 99391014, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/6928884/type-signature-in-a-where-clause\">Type signature in a where clause</a>"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "edited": false, "score": 0, "creation_date": 1559341474, "post_id": 56392393, "comment_id": 99402962, "body": "@user11228628 In essence, that is the same question indeed. I opted not to close against it because I saw some value in having a differently framed answer, but the decision could have gone either way."}], "answers": [{"tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": true, "score": 1, "last_activity_date": 1559341369, "creation_date": 1559341369, "answer_id": 56402312, "question_id": 56392393, "link": "https://stackoverflow.com/questions/56392393/add-type-signature-for-a-helper-function-inside/56402312#56402312", "title": "Add type signature for a helper function inside", "body": "<p>To begin from the end, the solution is turning on <code>ScopedTypeVariables</code> and using an explicit <code>forall</code> in the <code>mapSupply</code> signature, like this:</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables #-}  -- Put this at the top of your file.\n\nmapSupply :: forall a b s. (a -&gt; b) -&gt; Supply s a -&gt; Supply s b\nmapSupply mapFunc (S supFuncA) = S supFuncB where\n    supFuncB :: Stream s -&gt; (b, Stream s)\n    supFuncB strm = let (la, strms) = supFuncA strm in \n        ((mapFunc la), strms)\n</code></pre>\n\n<p>What follows is an explanation of why that is necessary.</p>\n\n<hr>\n\n<p>When you write a signature like this:</p>\n\n<pre><code>mapSupply :: (a -&gt; b) -&gt; Supply s a -&gt; Supply s b\n</code></pre>\n\n<p>GHC actually sees this:</p>\n\n<pre><code>mapSupply :: forall a b s. (a -&gt; b) -&gt; Supply s a -&gt; Supply s b\n</code></pre>\n\n<p>The <code>forall</code>, which normally can be left implicit, says that <code>a</code>, <code>b</code> and <code>s</code> can be anything -- <code>mapSupply</code> is a <em>polymorphic</em> function, and so whoever uses it is free to choose any concrete types for the three type variables. Writing the <code>forall</code>s explicitly, your second definition would look like this:</p>\n\n<pre><code>mapSupply :: forall a b s. (a -&gt; b) -&gt; Supply s a -&gt; Supply s b\nmapSupply mapFunc (S supFuncA) = S supFuncB where\n    supFuncB :: forall s b. Stream s -&gt; (b, Stream s)\n    supFuncB strm = let (la, strms) = supFuncA strm in \n        ((mapFunc la), strms)\n</code></pre>\n\n<p>According to it, <code>a</code>, <code>b</code> and <code>s</code> in <code>mapSupply</code> can be anything, and the same goes for <code>s</code> and <code>b</code> in <code>supFuncB</code>. That is a problem, though. For instance, the definition involves <code>strms</code>, whose type is <code>s</code>... except that <code>s</code>, which shows up because you are using <code>supFuncA</code>, is <em>not</em> the one from the <code>supFuncB</code> signature, but rather the one from the <code>mapSupply</code> signature. While the <code>s</code> from <code>mapSupply</code> can, in principle, be anything, as I noted before, once you actually choose an <code>s</code> by using <code>mapSupply</code>, the <code>s</code> from <code>supFuncB</code> must match it. That being so, the <code>forall</code> in the <code>supFuncB</code> signature is out of place, as its type variables can't really be anything. It becomes easier to see if we rename the type variables from <code>supFuncB</code> so that their names don't clash with those from <code>mapSupply</code> (given the <code>forall</code>, it should be a valid move to do that):</p>\n\n<pre><code>mapSupply :: forall a b s. (a -&gt; b) -&gt; Supply s a -&gt; Supply s b\nmapSupply mapFunc (S supFuncA) = S supFuncB where\n    supFuncB :: forall s1 b1. Stream s1 -&gt; (b1, Stream s1)\n    supFuncB strm = let (la, strms) = supFuncA strm in \n        ((mapFunc la), strms)\n</code></pre>\n\n<p>(GHC does that internally, which explains why the error message you got mentioned an <code>s1</code> type variable.)</p>\n\n<p>This problem only happened because of the signature added to <code>supFuncB</code>, which introduced an implicit <code>forall</code>. Without the signature, GHC does what you want by not generalising the types from <code>supFuncB</code> -- in that case, it is not polymorphic, but rather <a href=\"https://stackoverflow.com/a/56319149/2751851\"><em>monomorphic in the type variables</a> <code>a</code>, <code>b</code> and <code>s</code></em>, which are borrowed from <code>mapSupply</code>. The <code>ScopedTypeVariables</code> extension makes it possible to recover that behaviour while writing a type signature for <code>supFuncB</code>. When it is enabled, using an explicit <code>forall</code> for the type variables in a signature will make any type variables with the same name in the corresponding definition refer to the same thing (as long as they aren't also under a <code>forall</code> in their own signatures). In other words, by doing that it becomes possible to refer to the variables from the outer signature anywhere within the scope of the corresponding definition, which justifies the name of the extension.</p>\n"}], "owner": {"reputation": 1108, "user_id": 2341267, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/6c68f3ea94f0906875907c756e67b0c2?s=128&d=identicon&r=PG", "display_name": "WreckingBall", "link": "https://stackoverflow.com/users/2341267/wreckingball"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 129, "favorite_count": 0, "accepted_answer_id": 56402312, "answer_count": 1, "score": 0, "last_activity_date": 1561386161, "creation_date": 1559295111, "last_edit_date": 1561386161, "question_id": 56392393, "link": "https://stackoverflow.com/questions/56392393/add-type-signature-for-a-helper-function-inside", "title": "Add type signature for a helper function inside", "body": "<p>First I define the following data type</p>\n\n<pre><code>data Supply s a = S (Stream s -&gt; (a, Stream s))\ndata Stream a = Cons a (Stream a)\n</code></pre>\n\n<p>Then I want to implement a function which maps to a <code>Supply</code> with the following type signature:</p>\n\n<pre><code>mapSupply :: (a -&gt; b) -&gt; Supply s a -&gt; Supply s b\n</code></pre>\n\n<p>And here is my implementation: (which compiles with no problem)</p>\n\n<pre><code>mapSupply :: (a -&gt; b) -&gt; Supply s a -&gt; Supply s b\nmapSupply mapFunc (S supFuncA) = S supFuncB where\n    supFuncB strm = let (la, strms) = supFuncA strm in \n        ((mapFunc la), strms)\n</code></pre>\n\n<p>Then I met a problem when I tried to write down the type signature for the helper function named <code>supFuncB</code> which I defined inside <code>mapSupply</code>. </p>\n\n<p>The type signature for <code>supFuncB</code> is very simple and should be:</p>\n\n<pre><code>supFuncB :: Stream s -&gt; (b, Stream s)\n</code></pre>\n\n<p>However when I tried to add the type signature in the code, I got a compiler error. The code looks like this  </p>\n\n<pre><code>mapSupply :: (a -&gt; b) -&gt; Supply s a -&gt; Supply s b\nmapSupply mapFunc (S supFuncA) = S supFuncB where\n    supFuncB :: Stream s -&gt; (b, Stream s)\n    supFuncB strm = let (la, strms) = supFuncA strm in \n        ((mapFunc la), strms)\n</code></pre>\n\n<p>And then compiler complained: </p>\n\n<pre><code>\u2022 Couldn't match type \u2018s1\u2019 with \u2018s\u2019\n  \u2018s1\u2019 is a rigid type variable bound by\n    the type signature for:\n      supFuncB :: forall s1 b1. Stream s1 -&gt; (b1, Stream s1)\n    at Main.hs:58:5-41\n  \u2018s\u2019 is a rigid type variable bound by\n    the type signature for:\n      mapSupply :: forall a b s. (a -&gt; b) -&gt; Supply s a -&gt; Supply s b\n    at Main.hs:56:1-49\n  Expected type: Stream s1\n    Actual type: Stream s\n\u2022 In the expression: strms\n  In the expression: ((mapFunc la), strms)\n  In the expression:\n    let (la, strms) = supFuncA strm in ((mapFunc la), strms)\n</code></pre>\n\n<p>I'm very new to Haskell and I don't understand why the compile would fail?  And what should be the correct type signature if I were to add it in the code.</p>\n"}, {"tags": ["haskell", "code-generation", "template-haskell"], "comments": [{"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 0, "creation_date": 1559325282, "post_id": 56392332, "comment_id": 99397925, "body": "Personally, I would just leave it like this. From the code it&#39;s clear what you&#39;re doing and why, and you have more control over the individual cases if you need it. A TH solution would be more difficult to read and modify, and more prone to bugs (a number of Haskell&#39;s guarantees are lacking in TH). Bottom line, TH has a number of downsides, and you&#39;re only doing this one time, so it may not be worth it. I see TH as primarily useful in libraries (e.g. Yesod) where its use greatly simplifies the API, or significantly reduces user boilerplate. That&#39;s just my opinion though, your mileage may vary."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1559333778, "post_id": 56392332, "comment_id": 99400829, "body": "I doubt it&#39;s only going to be done this one time - this looks like a yearly endeavor for Advent of Code. So, I guess, 50 lines of code a year? TH still seems like a pretty poor ROI compared to doing it by hand, and indeed would be less clear in the end."}, {"owner": {"reputation": 2009, "user_id": 107341, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/2263e59b3b4f65895d0d3dd592f00662?s=128&d=identicon&r=PG", "display_name": "oshyshko", "link": "https://stackoverflow.com/users/107341/oshyshko"}, "edited": false, "score": 0, "creation_date": 1559343766, "post_id": 56392332, "comment_id": 99403416, "body": "Thank you DarthFennec, amalloy. But I still want to do it and use this example for learning how good or bad TH can be."}], "answers": [{"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 3, "last_activity_date": 1559350799, "creation_date": 1559350799, "answer_id": 56403129, "question_id": 56392332, "link": "https://stackoverflow.com/questions/56392332/how-to-generate-imports-and-boilerplate-lists-using-template-haskell/56403129#56403129", "title": "How to generate imports and boilerplate lists using Template Haskell?", "body": "<p>With respect to question (2), Template Haskell cannot generate <code>import</code> statements.  You can see a very old feature request for it in the <a href=\"https://gitlab.haskell.org/ghc/ghc/issues/1475\" rel=\"nofollow noreferrer\">bug tracker on GitLab</a> but no one's been sufficiently inspired to implement it.</p>\n\n<p>With respect to question (3), if modules have been imported and their names are available as strings, you can use TH to retrieve the type of a binding in each module like so.  Given:</p>\n\n<pre><code>-- M001.hs\nmodule M001 where\nsolve1 :: Int\nsolve1 = 10\n\n-- M002.hs\nmodule M002 where\nsolve1 :: IO Int\nsolve1 = return 20\n\n-- THTest1.hs\n{-# LANGUAGE TemplateHaskell #-}\n\nmodule THTest1 where\n\nimport M001\nimport M002\n\nimport Language.Haskell.TH\n\nlet\n  modules = [\"M001\", \"M002\"]\n\n  showType :: String -&gt; Q ()\n  showType nm = do\n    Just n &lt;- lookupValueName nm\n    VarI _ typ _ &lt;- reify n\n    reportWarning $ show nm ++ \" has type \" ++ show typ\n    return ()\n\n  in do mapM_ showType (map (++ \".solve1\") modules)\n        return []\n</code></pre>\n\n<p>Then compiling <code>THTest.hs</code> will generate two warnings:</p>\n\n<pre><code>warning: \"M001.solve1\" has type ConT GHC.Types.Int\nwarning: \"M002.solve1\" has type AppT (ConT GHC.Types.IO)\n     (ConT GHC.Types.Int)\n</code></pre>\n\n<p>For question (4), here's a simplified example using modules <code>M001</code> and <code>M002</code> as defined above.  Compile this program with <code>ghc -ddump-splices</code> to see the definition generated for <code>days</code>:</p>\n\n<pre><code>-- THTest2.hs\n{-# LANGUAGE TemplateHaskell #-}\n\nimport M001\nimport M002\n\nimport Control.Monad\nimport GHC.Types\nimport Language.Haskell.TH\n\nlet\n  -- list of modules to search\n  modules = [\"M001\", \"M002\"]\n  -- assoc list of adapter function by argument type\n  funcs = [(ConT ''Int, 'return), (AppT (ConT ''IO) (ConT ''Int), 'id)]\n\n  getDay :: String -&gt; Q Exp\n  getDay modname = do\n    -- look up name (e.g., M001.solve1)\n    Just n &lt;- lookupValueName (modname ++ \".solve1\")\n    -- get type of binding\n    VarI _ typ _ &lt;- reify n\n    -- look up appropriate adapter function\n    let Just f = lookup typ funcs\n    -- (\"M001\", adapter_f M001.solve1)\n    [|($(pure $ LitE (StringL modname)),\n       $(pure $ AppE (VarE f) (VarE n)))|]\n\n  makeDays :: Q [Dec]\n  makeDays = do\n    [d| days :: [(String, IO Int)]\n        days = $(ListE &lt;$&gt; mapM getDay modules)\n      |]\n  in makeDays\n\nmain = do\n  forM days $ \\(modname, action) -&gt; do\n    putStr modname\n    putStr \": \"\n    print =&lt;&lt; action\n</code></pre>\n\n<p>Then running it will output:</p>\n\n<pre><code>M001: 10\nM002: 20\n</code></pre>\n"}], "owner": {"reputation": 2009, "user_id": 107341, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/2263e59b3b4f65895d0d3dd592f00662?s=128&d=identicon&r=PG", "display_name": "oshyshko", "link": "https://stackoverflow.com/users/107341/oshyshko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 121, "favorite_count": 0, "accepted_answer_id": 56403129, "answer_count": 1, "score": 0, "last_activity_date": 1559350799, "creation_date": 1559294870, "question_id": 56392332, "link": "https://stackoverflow.com/questions/56392332/how-to-generate-imports-and-boilerplate-lists-using-template-haskell", "title": "How to generate imports and boilerplate lists using Template Haskell?", "body": "<p>I'd like to replace this boilerplate with code generation:</p>\n\n<pre><code>import qualified Y15.D01\nimport qualified Y15.D02\nimport qualified Y15.D03\nimport qualified Y15.D04\nimport qualified Y15.D05\nimport qualified Y15.D06HM\nimport qualified Y15.D06IO\nimport qualified Y15.D06ST\nimport qualified Y15.D07\nimport qualified Y15.D08\nimport qualified Y15.D09\nimport qualified Y15.D10\nimport qualified Y15.D11\nimport qualified Y15.D12\nimport qualified Y15.D13\n\n...\n\ndays :: [(String, [String -&gt; IO String])]\ndays =\n    [ (\"Y15.D01\",  i2ios   [Y15.D01.solve1,   Y15.D01.solve2])\n    , (\"Y15.D02\",  i2ios   [Y15.D02.solve1,   Y15.D02.solve2])\n    , (\"Y15.D03\",  i2ios   [Y15.D03.solve1,   Y15.D03.solve2])\n    , (\"Y15.D04\",  i2ios   [Y15.D04.solve1,   Y15.D04.solve2])\n    , (\"Y15.D05\",  i2ios   [Y15.D05.solve1,   Y15.D05.solve2])\n    , (\"Y15.D06HM\",i2ios   [Y15.D06HM.solve1, Y15.D06HM.solve2]) -- Data.Map.Strict\n    , (\"Y15.D06IO\",ioi2ios [Y15.D06IO.solve1, Y15.D06IO.solve2]) -- Data.Array.IO\n    , (\"Y15.D06ST\",i2ios   [Y15.D06ST.solve1, Y15.D06ST.solve2]) -- Data.Array.ST\n    , (\"Y15.D07\",  i2ios   [Y15.D07.solve1,   Y15.D07.solve2])\n    , (\"Y15.D08\",  i2ios   [Y15.D08.solve1,   Y15.D08.solve2])\n    , (\"Y15.D09\",  i2ios   [Y15.D09.solve1,   Y15.D09.solve2])\n    , (\"Y15.D10\",  i2ios   [Y15.D10.solve1,   Y15.D10.solve2])\n    , (\"Y15.D11\",  s2ios   [Y15.D11.solve1,   Y15.D11.solve2])\n    , (\"Y15.D12\",  i2ios   [Y15.D12.solve1,   Y15.D12.solve2])\n    , (\"Y15.D13\",  i2ios   [Y15.D13.solve1,   Y15.D13.solve2])\n    ]\n  where s2ios :: [a -&gt; b] -&gt; [a -&gt; IO b]\n        s2ios   = fmap (return .)\n        i2ios :: [a -&gt; Int] -&gt; [a -&gt; IO String]\n        i2ios   = fmap ((return . show) .)\n        ioi2ios :: [a -&gt; IO Int] -&gt; [a -&gt; IO String]\n        ioi2ios = fmap (fmap show .)\n</code></pre>\n\n<p><a href=\"https://github.com/oshyshko/adventofcode/blob/master/src/Main.hs\" rel=\"nofollow noreferrer\">https://github.com/oshyshko/adventofcode/blob/master/src/Main.hs</a></p>\n\n<p>I am new to Template Haskell and I would appreciate any help/suggestions on where to start with these questions:</p>\n\n<ol>\n<li>How to list modules in a project that match /Y\\d\\d.D\\d\\d.*/ pattern?</li>\n<li>How to generate imports for p.1?</li>\n<li>How to retrieve types of <code>solve1</code> and <code>solve2</code> fns from a given module?</li>\n<li>How to generate <code>days</code> list?</li>\n</ol>\n"}, {"tags": ["haskell", "monads", "category-theory"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1559292057, "post_id": 56391291, "comment_id": 99382067, "body": "For 1), I suspect that there is no such definition. All we need to do to prove it is to find a modal logic which satisfies axioms <code>p -&gt; [] p</code> and <code>[][]p -&gt; []p</code> (aka <code>return</code> and <code>join</code>) but fails to prove as a theorem <code>(p-&gt;q) -&gt; []p -&gt; []q</code> (aka <code>fmap</code>). There should be such a logic, but I&#39;m not an expert on modal logics. Then 2) and 3) follow."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1559292415, "post_id": 56391291, "comment_id": 99382230, "body": "For 3), I believe &#39;more powerful&#39; means that you can define one operator/abstraction in terms of another, but not the reverse. For instance, we say that <code>Monad</code> is more powerful than <code>Applicative</code> because the <code>Monad</code> methods may be used to re-implement <code>Applicative</code> for all <code>Monad</code>s, but not the reverse. I would agree with @chi for 1) though, which would imply that 2) is correct and also that <code>bind</code> is less powerful than <code>join</code>."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1559293647, "post_id": 56391291, "comment_id": 99382811, "body": "For 2), mathematically indeed every Monad is a functor, because a Monad is defined as a functor with extra functionality (which in Haskell terms means having <code>return</code> and <code>join</code> available and satisfying the necessary laws). That&#39;s because in category theory it doesn&#39;t make sense to look at mappings between categories that aren&#39;t functors. And as you note, it doesn&#39;t seem to be possible (although I can&#39;t claim to be 100% certain) to define <code>fmap</code> just in terms of <code>return</code> and <code>join</code>."}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 4, "creation_date": 1559303908, "post_id": 56391291, "comment_id": 99387841, "body": "<code>fmap f x = join $ fmap (return . f)</code> is not a recursuve definition of fmap (you cannot calculate fmap using it). It is an equation that fmap, join and return must satisfy."}], "answers": [{"comments": [{"owner": {"reputation": 17170, "user_id": 1671066, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/bd4c9461f2d17a884fba66eeed20e320?s=128&d=identicon&r=PG", "display_name": "Micha Wiedenmann", "link": "https://stackoverflow.com/users/1671066/micha-wiedenmann"}, "edited": false, "score": 0, "creation_date": 1559301440, "post_id": 56393418, "comment_id": 99386721, "body": "Could you elaborate 1. please? It could be that <code>fmap</code> was redundant all along."}, {"owner": {"reputation": 27561, "user_id": 214446, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/5deb6b87326686b1f2e9fdb37ceac210?s=128&d=identicon&r=PG", "display_name": "mb21", "link": "https://stackoverflow.com/users/214446/mb21"}, "reply_to_user": {"reputation": 17170, "user_id": 1671066, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/bd4c9461f2d17a884fba66eeed20e320?s=128&d=identicon&r=PG", "display_name": "Micha Wiedenmann", "link": "https://stackoverflow.com/users/1671066/micha-wiedenmann"}, "edited": false, "score": 0, "creation_date": 1559301692, "post_id": 56393418, "comment_id": 99386817, "body": "I don&#39;t have a formal proof ready, but there is a link in my answer (or <a href=\"https://en.wikipedia.org/wiki/Monad_(functional_programming)#Derivation_from_functors\" rel=\"nofollow noreferrer\">see wikipedia</a>) to back up my statement."}, {"owner": {"reputation": 9111, "user_id": 90088, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/c018f213204496b4bbf481e7c8e6c15c?s=128&d=identicon&r=PG", "display_name": "Bartosz Milewski", "link": "https://stackoverflow.com/users/90088/bartosz-milewski"}, "edited": false, "score": 0, "creation_date": 1559356898, "post_id": 56393418, "comment_id": 99405114, "body": "It&#39;s worth stressing that a monad is always an endofunctor. General functors go between categories. A monad always maps a category to itself. Haskell <code>Functor</code> is automatically an endofunctor. This is also evident in the definition of <code>bind</code>, where the morphism goes from <code>a</code> to <code>m b</code>: therefore both must be in the same category. It&#39;s worth noting that there is a third definition of a monad in terms of Kleisli arrows, Haskell <code>&gt;=&gt;</code>, which also requires functoriality."}], "tags": [], "owner": {"reputation": 27561, "user_id": 214446, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/5deb6b87326686b1f2e9fdb37ceac210?s=128&d=identicon&r=PG", "display_name": "mb21", "link": "https://stackoverflow.com/users/214446/mb21"}, "is_accepted": false, "score": 6, "last_activity_date": 1559303817, "last_edit_date": 1559303817, "creation_date": 1559298771, "answer_id": 56393418, "question_id": 56391291, "link": "https://stackoverflow.com/questions/56391291/what-is-the-relationship-between-bind-and-join/56393418#56393418", "title": "What is the relationship between bind and join?", "body": "<p>A monad can be <a href=\"https://en.wikibooks.org/wiki/Haskell/Understanding_monads#Monads_and_Category_Theory\" rel=\"nofollow noreferrer\">either defined in terms of</a>:</p>\n\n<ul>\n<li><code>return :: a -&gt; m a</code></li>\n<li><code>bind :: m a -&gt; (a -&gt; m b) -&gt; m b</code></li>\n</ul>\n\n<p>or alternatively in terms of:</p>\n\n<ul>\n<li><code>return :: a -&gt; m a</code></li>\n<li><code>fmap :: (a -&gt; b) -&gt; m a -&gt; m b</code></li>\n<li><code>join :: m (m a) -&gt; m a</code></li>\n</ul>\n\n<p>To your questions:</p>\n\n<ol>\n<li>No, we cannot define <code>fmap</code> in terms of <code>join</code>, since otherwise we could remove <code>fmap</code> from the second list above.</li>\n<li>No, \"every monad is a functor\" is a statement about monads in general, regardless whether you define your specific monad in terms of <code>bind</code> or in terms of <code>join</code> and <code>fmap</code>. It is easier to understand the statement if you see the second definition, but that's it.</li>\n<li>Yes, <code>bind</code> is more \"powerful\" than <code>join</code>. It is exactly as \"powerful\" as <code>join</code> and <code>fmap</code> combined, if you mean with \"powerful\" that it has the capacity to define a monad (always in combination with <code>return</code>).</li>\n</ol>\n\n<p>For an intuition, see e.g. <a href=\"https://stackoverflow.com/a/11241990/214446\">this answer</a> \u2013 <code>bind</code> allows you to combine or chain strategies/plans/computations (that are in a context) together. As an example, let's use the <code>Maybe</code> context (or <code>Maybe</code> monad):</p>\n\n<pre><code>\u03bb: let plusOne x = Just (x + 1)\n\u03bb: Just 3 &gt;&gt;= plusOne\nJust 4\n</code></pre>\n\n<p><code>fmap</code> also let's you chain computations in a context together, but at the cost of increasing the nesting with every step.[1]</p>\n\n<pre><code>\u03bb: fmap plusOne (Just 3)\nJust (Just 4)\n</code></pre>\n\n<p>That's why you need <code>join</code>: to squash two levels of nesting into one. Remember:</p>\n\n<pre><code>join :: m (m a) -&gt; m a\n</code></pre>\n\n<p>Having only the squashing step doesn't get you very far. You need also <code>fmap</code> to have a monad \u2013 and <code>return</code>, which is <code>Just</code> in the example above.</p>\n\n<p>[1]: <code>fmap</code> and <code>(&gt;&gt;=)</code> don't take their two arguments in the same order, but don't let that confuse you.</p>\n"}, {"tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": true, "score": 5, "last_activity_date": 1559484093, "last_edit_date": 1592644375, "creation_date": 1559362855, "answer_id": 56403821, "question_id": 56391291, "link": "https://stackoverflow.com/questions/56391291/what-is-the-relationship-between-bind-and-join/56403821#56403821", "title": "What is the relationship between bind and join?", "body": "<blockquote>\n<p>Is there a [definition] of <code>fmap</code> in terms of <code>join</code>?</p>\n</blockquote>\n<p>No, there isn't. That can be demonstrated by attempting to do it. Suppose we are given an arbitrary type constructor <code>T</code>, and functions:</p>\n<pre><code>returnT :: a -&gt; T a\njoinT :: T (T a) -&gt; T a\n</code></pre>\n<p>From this data alone, we want to define:</p>\n<pre><code>fmapT :: (a -&gt; b) -&gt; T a -&gt; T b\n</code></pre>\n<p>So let's sketch it:</p>\n<pre><code>fmapT :: (a -&gt; b) -&gt; T a -&gt; T b\nfmapT f ta = tb\n    where\n    tb = undefined  -- tb :: T b\n</code></pre>\n<p>We need to get a value of type <code>T b</code> somehow. <code>ta :: T a</code> on its own won't do, so we need functions that produce <code>T b</code> values. The only two candidates are <code>joinT</code> and <code>returnT</code>. <code>joinT</code> doesn't help:</p>\n<pre><code>fmapT :: (a -&gt; b) -&gt; T a -&gt; T b\nfmapT f ta = joinT ttb\n    where\n    ttb = undefined  -- ttb :: T (T b)\n</code></pre>\n<p>It just kicks the can down the road, as needing a <code>T (T b)</code> value under these circumstances is no improvement.</p>\n<p>We might try <code>returnT</code> instead:</p>\n<pre><code>fmapT :: (a -&gt; b) -&gt; T a -&gt; T b\nfmapT f ta = returnT b\n    where\n    b = undefined  -- b :: b\n</code></pre>\n<p>Now we need a <code>b</code> value. The only thing that can give us one is <code>f</code>:</p>\n<pre><code>fmapT :: (a -&gt; b) -&gt; T a -&gt; T b\nfmapT f ta = returnT (f a)\n    where\n    a = undefined  -- a :: a\n</code></pre>\n<p>And now we are stuck: nothing can give us an <code>a</code>. We have exhausted all available possibilities, so <code>fmapT</code> cannot be defined in such terms.</p>\n<p>A digression: it wouldn't suffice to cheat by using a function like this:</p>\n<pre><code>extractT :: T a -&gt; a\n</code></pre>\n<p>With an <code>extractT</code>, we might try <code>a = extractT ta</code>, leading to:</p>\n<pre><code>fmapT :: (a -&gt; b) -&gt; T a -&gt; T b\nfmapT f ta = returnT (f (extractT ta))\n</code></pre>\n<p>It is not enough, however, for <code>fmapT</code> to have the right type: it must also follow the functor laws. In particular, <code>fmapT id = id</code> should hold. With this definition, <code>fmapT id</code> is <code>returnT . extractT</code>, which, in general, is not <code>id</code> (most functors which are instances of both <code>Monad</code> and <code>Comonad</code> serve as examples).</p>\n<hr />\n<blockquote>\n<p>Is &quot;every monad is a functor&quot; a conclusion when using <code>bind</code> (in the definition of a monad), but an assumption when using <code>join</code>?</p>\n</blockquote>\n<p>&quot;Every monad is a functor&quot; is an assumption, or, more precisely, part of the definition of monad. To pick an arbitrary illustration, here is Emily Riehl, <a href=\"http://www.math.jhu.edu/%7Eeriehl/context.pdf\" rel=\"nofollow noreferrer\"><em>Category Theory In Context</em></a>, p. 154:</p>\n<blockquote>\n<p>Definition 5.1.1. A <strong>monad</strong> on a category C consists of</p>\n<ul>\n<li><p>an endofunctor <em>T</em> : C \u2192 C,</p>\n</li>\n<li><p>a <strong>unit</strong> natural transformation <em>\u03b7</em> : 1<sub>C</sub> \u21d2 <em>T</em>, and</p>\n</li>\n<li><p>a <strong>multiplication</strong> natural transformation <em>\u03bc</em> :<em>T</em><sup>2</sup> \u21d2 <em>T</em>,</p>\n</li>\n</ul>\n<p>so that the following diagrams commute in C<sup>C</sup>: [diagrams of the monad laws]</p>\n</blockquote>\n<p>A monad, therefore, involves an endofunctor by definition. For a Haskell type constructor <code>T</code> that instantiates <code>Monad</code>, the object mapping of that endofunctor is <code>T</code> itself, and the morphism mapping is its <code>fmap</code>. That <code>T</code> will be a <code>Functor</code> instance, and therefore will have an <code>fmap</code>, is, in contemporary Haskell, guaranteed by <code>Applicative</code> (and, by extension, <code>Functor</code>) being a superclass of <code>Monad</code>.</p>\n<p>Is that the whole story, though? As far as Haskell is concerned. we know that <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#v:liftM\" rel=\"nofollow noreferrer\"><code>liftM</code></a> exists, and also that in a not-so-distant past <code>Functor</code> was not a superclass of <code>Monad</code>. Are those two facts mere Haskellisms? Not quite. In the classic paper <a href=\"https://www.disi.unige.it/person/MoggiE/ftp/ic91.pdf\" rel=\"nofollow noreferrer\"><em>Notions of computation and monads</em></a>, Eugenio Moggi unearths the following definition (p. 3):</p>\n<blockquote>\n<p>Definition 1.2 ([Man76]) A <strong>Kleisli triple</strong> over a category <em><strong>C</strong></em> is a triple <i>(T, \u03b7, _*)</i>, where <em>T</em> : Obj(<em><strong>C</strong></em>) \u2192 Obj(<em><strong>C</strong></em>), <i>\u03b7<sub><sub>A</sub></sub> : A \u2192 T A</i> for <em>A</em> \u2208 Obj(<em><strong>C</strong></em>), <i>f* : T A \u2192 T B</i> for <i>f : A \u2192 T B</i> and the following equations hold:</p>\n<ul>\n<li><i>\u03b7<sub><sub>A</sub></sub>*</i> = id<sub><sub><i>T A</i></sub></sub></li>\n<li><i>\u03b7<sub><sub>A</sub></sub>; f* = f</i> \u00a0 for \u00a0   <i>f : A \u2192 T B</i></li>\n<li><i>f*; g* = (f; g*)*</i> \u00a0 for \u00a0 <i>f : A \u2192 T B</i> \u00a0 and \u00a0 <i>g : B \u2192 T C</i></li>\n</ul>\n</blockquote>\n<p>The important detail here is that <em>T</em> is presented as merely an object mapping in the category <em><strong>C</strong></em>, and not as an endofunctor in <em><strong>C</strong></em>. Working in the <strong>Hask</strong> category, that amounts to taking a type constructor <code>T</code> without presupposing it is a <code>Functor</code> instance. In code, we might write that as:</p>\n<pre><code>class KleisliTriple t where\n    return :: a -&gt; t a\n    (=&lt;&lt;) :: (a -&gt; t b) -&gt; t a -&gt; t b\n\n-- (return =&lt;&lt;) = id\n-- (f =&lt;&lt;) . return = f\n-- (g =&lt;&lt;) . (f =&lt;&lt;) = ((g =&lt;&lt;) . f =&lt;&lt;)\n</code></pre>\n<p>Flipped bind aside, that is the pre-AMP definition of <code>Monad</code> in Haskell. Unsurprisingly, Moggi's paper doesn't take long to show that &quot;there is a one-to-one correspondence between Kleisli triples and monads&quot; (p. 5), establishing along the way that <em>T</em> can be extended to an endofunctor (in Haskell, that step amounts to defining the morphism mapping <code>liftM f m = return . f =&lt;&lt; m</code>, and then showing it follows the functor laws).</p>\n<p>All in all, if you write lawful definitions of <code>return</code> and <code>(&gt;&gt;=)</code> without presupposing <code>fmap</code>, you indeed get a lawful implementation of <code>Functor</code> as a consequence. &quot;There is a one-to-one correspondence between Kleisli triples and monads&quot; is a consequence of the definition of Kleisli triple, while &quot;a monad involves an endofunctor&quot; is part of the definition of monad. It is tempting to consider whether it would be more accurate to describe what Haskellers did when writing <code>Monad</code> instances as &quot;setting up a Klesili triple&quot; rather than &quot;setting up a monad&quot;, but I will refrain out of fear of getting mired down terminological pedantry -- and in any case, now that <code>Functor</code> <em>is</em> a superclass of <code>Monad</code> there is no practical reason to worry about that.</p>\n<hr />\n<blockquote>\n<p>Is <code>bind</code> more &quot;powerful&quot; than <code>join</code>? And what would &quot;more powerful&quot; mean?</p>\n</blockquote>\n<p>Trick question!</p>\n<p>Taken at face value, the answer would be yes, to the extent that, together with <code>return</code>, <code>(&gt;&gt;=)</code> makes it possible to implement <code>fmap</code> (via <code>liftM</code>, as noted above), while <code>join</code> doesn't. However, I don't feel it is worthwhile to insist on this distinction. Why so? Because of the monad laws. Just like it doesn't make sense to talk about a <em>lawful</em> <code>(&gt;&gt;=)</code> without presupposing <code>return</code>, it doesn't make sense to talk about a lawful <code>join</code> without pressuposing <code>return</code> <em>and</em> <code>fmap</code>.</p>\n<p>One might get the impression that I am giving too much weight to the laws by using them to tie <code>Monad</code> and <code>Functor</code> in this way. It is true that there are cases of laws that involve two classes, and that only apply to types which instantiate them both. <code>Foldable</code> provides a good example of that: we can find the following law in <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Traversable.html\" rel=\"nofollow noreferrer\">the <code>Traversable</code> documentation</a>:</p>\n<blockquote>\n<p>The superclass instances should satisfy the following: [...]</p>\n<p>In the <code>Foldable</code> instance, <code>foldMap</code> should be equivalent to traversal with a constant applicative functor (<code>foldMapDefault</code>).</p>\n</blockquote>\n<p>That this specific law doesn't always apply is not a problem, because we don't need it to characterise what <code>Foldable</code> is (alternatives include &quot;a <code>Foldable</code> is a container from which we can extract some sequence of elements&quot;, and &quot;a <code>Foldable</code> is a container that can be converted to the free monoid on its element type&quot;). With the monad laws, though, it isn't like that: the meaning of the class is inextricably bound to all three of the monad laws.</p>\n"}], "owner": {"reputation": 17170, "user_id": 1671066, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/bd4c9461f2d17a884fba66eeed20e320?s=128&d=identicon&r=PG", "display_name": "Micha Wiedenmann", "link": "https://stackoverflow.com/users/1671066/micha-wiedenmann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 530, "favorite_count": 2, "accepted_answer_id": 56403821, "answer_count": 2, "score": 10, "last_activity_date": 1568703163, "creation_date": 1559290761, "last_edit_date": 1568703163, "question_id": 56391291, "link": "https://stackoverflow.com/questions/56391291/what-is-the-relationship-between-bind-and-join", "title": "What is the relationship between bind and join?", "body": "<p>I got the impression that <code>(&gt;&gt;=)</code> (used by Haskell) and <code>join</code> (preferred by mathematicians) are \"equal\" since one can write one in terms of the other:</p>\n\n<pre><code>import Control.Monad (join)\n\njoin x = x &gt;&gt;= id\nx &gt;&gt;= f = join (fmap f x)\n</code></pre>\n\n<p>Additionally <a href=\"https://stackoverflow.com/questions/9098247/how-to-show-that-a-monad-is-a-functor-and-an-applicative-functor\">every monad is a functor</a> since <code>bind</code> can be used to replace <code>fmap</code>:</p>\n\n<pre><code>fmap f x = x &gt;&gt;= (return . f)\n</code></pre>\n\n<p>I have the following questions:</p>\n\n<ol>\n<li><p>Is there a (non-recursive) definition of <code>fmap</code> in terms of <code>join</code>? (<code>fmap f x = join $ fmap (return . f) x</code> follows from the equations above but is recursive.)</p></li>\n<li><p>Is \"every monad is a functor\" a conclusion when using <code>bind</code> (in the definition of a monad), but an assumption when using <code>join</code>?</p></li>\n<li><p>Is <code>bind</code> more \"powerful\" than <code>join</code>? And what would \"more powerful\" mean?</p></li>\n</ol>\n"}, {"tags": ["haskell", "nginx", "yesod"], "comments": [{"owner": {"reputation": 719, "user_id": 540718, "user_type": "registered", "accept_rate": 41, "profile_image": "https://www.gravatar.com/avatar/64bb401eff530b423eae58217f2b1362?s=128&d=identicon&r=PG", "display_name": "nemron", "link": "https://stackoverflow.com/users/540718/nemron"}, "edited": false, "score": 0, "creation_date": 1559394226, "post_id": 56391194, "comment_id": 99411182, "body": "OK, that\u2019s weird. It\u2019s running in Safari but not in Chrome!  W/o a prefix on the Yesod site <code>approot = ApprootStatic &quot;http:&#47;&#47;localhost:9000\u201d</code> and the following Nginx configuration <code>daemon off; events { worker_connections  1024; } http { server { listen 80; server_name  localhost; location &#47;yello&#47; { proxy_pass http:&#47;&#47;localhost:9000&#47;; }}} Opening </code><a href=\"http://localhost/yello\" rel=\"nofollow noreferrer\">localhost/yello</a>` in Safari gives the correct site. But opening the same URL in Chrome, I get <code>http:&#47;&#47;localhost&#47;yelloyello&#47;yello</code>. That\u2019s weird! Does anyone have an idea?"}, {"owner": {"reputation": 719, "user_id": 540718, "user_type": "registered", "accept_rate": 41, "profile_image": "https://www.gravatar.com/avatar/64bb401eff530b423eae58217f2b1362?s=128&d=identicon&r=PG", "display_name": "nemron", "link": "https://stackoverflow.com/users/540718/nemron"}, "edited": false, "score": 0, "creation_date": 1559395469, "post_id": 56391194, "comment_id": 99411484, "body": "<code>open &quot;&#47;Applications&#47;Google Chrome.app&quot; --args --disable-extensions --disable-plugins</code> also doesn&#39;t help."}, {"owner": {"reputation": 719, "user_id": 540718, "user_type": "registered", "accept_rate": 41, "profile_image": "https://www.gravatar.com/avatar/64bb401eff530b423eae58217f2b1362?s=128&d=identicon&r=PG", "display_name": "nemron", "link": "https://stackoverflow.com/users/540718/nemron"}, "edited": false, "score": 0, "creation_date": 1559395949, "post_id": 56391194, "comment_id": 99411602, "body": "OK, I shut down the web app as well as the nginx server. Then entered <code>http:&#47;&#47;localhost&#47;yello&#47;</code> in Chrome and got <code>http:&#47;&#47;localhost&#47;yelloyello&#47;yello</code>"}, {"owner": {"reputation": 719, "user_id": 540718, "user_type": "registered", "accept_rate": 41, "profile_image": "https://www.gravatar.com/avatar/64bb401eff530b423eae58217f2b1362?s=128&d=identicon&r=PG", "display_name": "nemron", "link": "https://stackoverflow.com/users/540718/nemron"}, "edited": false, "score": 0, "creation_date": 1559396270, "post_id": 56391194, "comment_id": 99411673, "body": "Opened Chrome with a different account, then it worked. So all the mess is just about the fact that somehow my Google Chrome configuration is kind of corrupt. Will investigate..."}, {"owner": {"reputation": 719, "user_id": 540718, "user_type": "registered", "accept_rate": 41, "profile_image": "https://www.gravatar.com/avatar/64bb401eff530b423eae58217f2b1362?s=128&d=identicon&r=PG", "display_name": "nemron", "link": "https://stackoverflow.com/users/540718/nemron"}, "edited": false, "score": 0, "creation_date": 1559396498, "post_id": 56391194, "comment_id": 99411732, "body": "Oh man... &quot;Clear Browsing Data...&quot; and &quot;Basic&quot; did the trick..."}], "owner": {"reputation": 719, "user_id": 540718, "user_type": "registered", "accept_rate": 41, "profile_image": "https://www.gravatar.com/avatar/64bb401eff530b423eae58217f2b1362?s=128&d=identicon&r=PG", "display_name": "nemron", "link": "https://stackoverflow.com/users/540718/nemron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 499, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1559396881, "creation_date": 1559290334, "last_edit_date": 1559396881, "question_id": 56391194, "link": "https://stackoverflow.com/questions/56391194/how-to-locally-run-a-yesod-web-app-via-nginx", "title": "How to locally run a Yesod web app via Nginx?", "body": "<p>On the Yesod site I have the following (excerpt):</p>\n\n<pre><code>staticFiles \"assets/\"\n\nnewtype App = App\n    { appStatic :: Static\n    }\n\ninstance Yesod App where\n    approot = ApprootStatic \"http://localhost:9000/yello\"\n\nmain :: IO ()\nmain = do\n    appStatic &lt;- static \"assets\"\n    warp 9000 $ App appStatic\n</code></pre>\n\n<p>So, I'm declaring that my little web application will be hosted at the prefix <code>yello</code>.</p>\n\n<p>Now, I want to run this on Nginx ... but don't get the configuration right :(</p>\n\n<p>I have the following <code>nginx.conf</code>:</p>\n\n<pre><code>daemon off;\nevents {\n    worker_connections  1024;\n}\nhttp {\n    server {\n        listen       80;\n        server_name  localhost;\n\n        location /yello/ {\n            proxy_pass http://localhost:9000/;\n        }\n        #location /assets {\n        #    root /Users/nrm/Learning/Haskell/web/yesod/yello;\n        #    expires max;\n        #}\n    }\n}\n</code></pre>\n\n<p>My local source code is at <code>/Users/nrm/Learning/Haskell/web/yesod/yello</code>, so I first start <code>yello</code> and then run <code>nginx</code>:</p>\n\n<p>At Terminal 1:</p>\n\n<pre><code>[/Users/nrm/Learning/Haskell/web/yesod/yello]\n$ stack build\n$ stack exec -- yello\n</code></pre>\n\n<p>At Terminal 2:</p>\n\n<pre><code>[/usr/local/etc/nginx]                                                             \n$ nginx\n</code></pre>\n\n<p>Then at the browser, I enter <code>localhost/yello</code> and the result is</p>\n\n<pre><code>Not Found\n\n/yelloyello/yello\n</code></pre>\n\n<p>and the URL in the address bar changed to <code>http://localhost/yelloyello/yello</code>.</p>\n\n<p>What am i missing here?</p>\n\n<p><strong>Update0</strong>: Simplified <code>nginx.conf</code> according to <a href=\"https://serverfault.com/questions/379675/nginx-reverse-proxy-url-rewrite\">https://serverfault.com/questions/379675/nginx-reverse-proxy-url-rewrite</a>. Still does not work :(</p>\n\n<p><strong>Update1</strong>: With the following configurations it's working (note, no prefix in <code>approot</code>!):</p>\n\n<pre><code>staticFiles \"assets/\"\n\nnewtype App = App\n    { appStatic :: Static\n    }\n\ninstance Yesod App where\n    approot = ApprootStatic \"http://localhost:9000\"\n\nmain :: IO ()\nmain = do\n    appStatic &lt;- static \"assets\"\n    warp 9000 $ App appStatic\n</code></pre>\n\n<p><code>nginx.conf</code>:</p>\n\n<pre><code>daemon off;\nevents {\n    worker_connections  1024;\n}\nhttp {\n    server {\n        listen       80;\n        server_name  localhost;\n        location /yello/ {\n            proxy_pass http://localhost:9000/;\n        }\n    }\n}\n</code></pre>\n\n<p>At Terminal 1:</p>\n\n<pre><code>[/Users/nrm/Learning/Haskell/web/yesod/yello]\n$ stack build\n$ stack exec -- yello\n</code></pre>\n\n<p>At Terminal 2:</p>\n\n<pre><code>[/usr/local/etc/nginx]                                                             \n$ nginx\n</code></pre>\n\n<p>Then at the browser, enter <code>http://localhost/yello</code>.</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 3, "last_activity_date": 1559289374, "last_edit_date": 1559289374, "creation_date": 1559287716, "answer_id": 56390601, "question_id": 56390562, "link": "https://stackoverflow.com/questions/56390562/how-do-i-use-a-data-constructor-on-a-value-wrapped-inside-an-io-monad/56390601#56390601", "title": "How do I use a data constructor on a value wrapped inside an IO monad?", "body": "<p>You can use the <em>sequential application</em> <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:-60--42--62-\" rel=\"nofollow noreferrer\"><strong><code>(&lt;*&gt;) :: Applicative f =&gt; f (a -&gt; b) -&gt; f a -&gt; f b</code></strong></a> for this. For example:</p>\n\n<pre><code>MyRecord &lt;$&gt; nextRandom <b>&lt;*&gt;</b> getCurrentTime <b>&lt;*&gt;</b> return \"some comment\"</code></pre>\n\n<p>This is equivalent to:</p>\n\n<pre><code>some_function :: IO MyRecord\nsome_function = do\n    r &lt;- nextRandom\n    t &lt;- getCurrentTime\n    return (MyRecord r t \"some comment\")</code></pre>\n\n<p>What here basically happens is that if you write:</p>\n\n<pre><code>MyRecord &lt;$&gt; nextRandom</code></pre>\n\n<p>you construct an item of type <code>IO (UTCTime -&gt; String -&gt; MyRecord)</code>. Now by using the <code>(&lt;*&gt;)</code> function with as left operand this function, and as right operand an <code>IO UTCTime</code>, we thus construct an object of type <code>IO (String -&gt; MyRecord)</code>.</p>\n\n<p>We can use <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:return\" rel=\"nofollow noreferrer\"><strong><code>return :: Monad m =&gt; a -&gt; m a</code></strong></a> or <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:pure\" rel=\"nofollow noreferrer\"><strong><code>pure :: Applicative f =&gt; a -&gt; f a</code></strong></a> to convert a <code>String</code> to an <code>IO String</code>, and we thus use again <code>(&lt;*&gt;)</code> to apply this to the partial data constructor.</p>\n"}, {"tags": [], "owner": {"reputation": 27561, "user_id": 214446, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/5deb6b87326686b1f2e9fdb37ceac210?s=128&d=identicon&r=PG", "display_name": "mb21", "link": "https://stackoverflow.com/users/214446/mb21"}, "is_accepted": false, "score": 3, "last_activity_date": 1559287733, "creation_date": 1559287733, "answer_id": 56390607, "question_id": 56390562, "link": "https://stackoverflow.com/questions/56390562/how-do-i-use-a-data-constructor-on-a-value-wrapped-inside-an-io-monad/56390607#56390607", "title": "How do I use a data constructor on a value wrapped inside an IO monad?", "body": "<p>This is the common <a href=\"http://learnyouahaskell.com/functors-applicative-functors-and-monoids#applicative-functors\" rel=\"nofollow noreferrer\">applicative style pattern</a>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>MyRecord &lt;$&gt; nextRandom\n         &lt;*&gt; getCurrentTime\n         &lt;*&gt; pure \"my comment\"\n</code></pre>\n"}], "owner": {"reputation": 177, "user_id": 2303516, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ve0Sw.jpg?s=128&g=1", "display_name": "Avneesh", "link": "https://stackoverflow.com/users/2303516/avneesh"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 78, "favorite_count": 0, "accepted_answer_id": 56390601, "answer_count": 2, "score": 1, "last_activity_date": 1559289374, "creation_date": 1559287510, "question_id": 56390562, "link": "https://stackoverflow.com/questions/56390562/how-do-i-use-a-data-constructor-on-a-value-wrapped-inside-an-io-monad", "title": "How do I use a data constructor on a value wrapped inside an IO monad?", "body": "<p>So I have a data type in haskell defined as follows:</p>\n\n<pre><code>import qualified Data.UUID as UUID\nimport qualified Data.Time.Clock as CLK\n\ndata MyRecord = MyRecord {\n    id :: UUID.UUID,\n    creationDate :: CLK.UTCTime,\n    comment :: String\n}\n</code></pre>\n\n<p>now the problem is that the UUID and UTCTime are returned inside an IO monad. The functions I use to generate them have the following type</p>\n\n<p>for UUID</p>\n\n<pre><code>nextRandom :: IO uuid-types-1.0.3:Data.UUID.Types.Internal.UUID\n</code></pre>\n\n<p>for getting the current time stamp:</p>\n\n<pre><code>getCurrentTime :: IO UTCTime\n</code></pre>\n\n<p>my problem is how do use the data constructor to actually initialise the data type?</p>\n\n<p>I can do the following</p>\n\n<pre><code>MyRecord &lt;$&gt; nextRandom\n</code></pre>\n\n<p>and this works, but I am not able to understand how to provide the constructor with the other argument.</p>\n"}, {"tags": ["haskell", "polymorphism", "ghc", "typeclass"], "answers": [{"tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 4, "last_activity_date": 1559275581, "creation_date": 1559275581, "answer_id": 56388542, "question_id": 56388108, "link": "https://stackoverflow.com/questions/56388108/how-can-ghc-convert-a-polymorphic-numeric-literal-into-an-arbitrary-type-with-an/56388542#56388542", "title": "How can GHC convert a polymorphic numeric literal into an arbitrary type with an instance of Num?", "body": "<p>As you have found out, the integer literal <code>5</code> <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch6.html#x13-1360006.4.1\" rel=\"nofollow noreferrer\">amounts to</a>:</p>\n\n<pre><code>fromInteger 5\n</code></pre>\n\n<p>As the type of <code>fromInteger</code> is <code>Num a =&gt; Integer -&gt; a</code>, you can instantiate <code>5</code> to the <code>Num</code> instance of your choice, be it <code>Int</code>, <code>Double</code>, <code>MySum Double</code>, or anything else. In particular, given that <code>Fractional</code> is a subclass of <code>Num</code>, and that you wrote a <code>Num a =&gt; Num (MySum a)</code> instance, <code>5 :: Fractional a =&gt; MySum a</code> works just fine:</p>\n\n<pre><code>5 :: Fractional a =&gt; MySum a\nfromInteger 5 :: Fractional a =&gt; MySum a\n(pure . fromInteger) 5 :: Fractional a =&gt; MySum a\nMySum (fromInteger 5 :: Fractional a =&gt; a)\n</code></pre>\n\n<blockquote>\n  <p>It seems to imply that a value can instantiated to any type under Num exactly when that value is integral.</p>\n</blockquote>\n\n<p>Things get a little subtle here. An integral value can be <em>converted</em> to any type under <code>Num</code> (via <code>fromInteger</code> and, in the general case, <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:fromIntegral\" rel=\"nofollow noreferrer\"><code>fromIntegral</code></a>). We can instantiate an integer literal like <code>5</code> as anything under <code>Num</code> because GHC handles the conversion for us, by desugaring it to <code>fromInteger 5 :: Num a =&gt; a</code>. However, we can't instantiate the monomorphic value <code>5 :: Integer</code> as a <code>Double</code>, nor can we instantiate <code>5 :: Integral a =&gt; a</code> to a non-<code>Integral</code> type like <code>Double</code>. In those two cases, the type annotations further restrict the type, so that we have to perform the conversion explicitly if we want a <code>Double</code>.  </p>\n"}, {"comments": [{"owner": {"reputation": 436, "user_id": 2227966, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1471a2a4abd39213b3cd2b6296b120d1?s=128&d=identicon&r=PG", "display_name": "Kevin Bradner", "link": "https://stackoverflow.com/users/2227966/kevin-bradner"}, "edited": false, "score": 0, "creation_date": 1559351710, "post_id": 56388626, "comment_id": 99404575, "body": "Thanks - and the default type picking info was very helpful."}], "tags": [], "owner": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "is_accepted": true, "score": 3, "last_activity_date": 1559277759, "last_edit_date": 1559277759, "creation_date": 1559276269, "answer_id": 56388626, "question_id": 56388108, "link": "https://stackoverflow.com/questions/56388108/how-can-ghc-convert-a-polymorphic-numeric-literal-into-an-arbitrary-type-with-an/56388626#56388626", "title": "How can GHC convert a polymorphic numeric literal into an arbitrary type with an instance of Num?", "body": "<p>You mostly have it correct: an integer literal <code>5</code> is equivalent to <code>fromInteger (5 :: Integer)</code>, and thus has type <code>Num a =&gt; a</code>; and a floating-point literal <code>5.0</code> is equivalent to <code>fromRational (5.0 :: Rational)</code> and has type <code>Fractional a =&gt; a</code>. This does indeed explain <code>5 :: MySum Int</code>. <code>5 :: Fractional a =&gt; MySum a</code> isn't that much trickier. Per the above rule, this expands to:</p>\n\n<pre><code>fromInteger (5 :: Integer) :: Fractional a =&gt; MySum a\n</code></pre>\n\n<p><code>fromInteger</code> has type <code>Num b =&gt; Integer -&gt; b</code>. So for the above expression to type check, GHC has to unify <code>b</code> with <code>MySum a</code>. So now GHC has to solve <code>Num (MySum a)</code> given <code>Fractional a</code>. <code>Num (MySum a)</code> is solved by your instance, producing the constraint <code>Num a</code>. <code>Num</code> is a superclass of <code>Fractional</code>, so any solution to <code>Fractional a</code> will also be a solution to <code>Num a</code>. So everything checks out.</p>\n\n<p>You might be wondering though, if <code>5</code> gets passed through <code>fromInteger</code> here, why does the value that ends up inside <code>MySum</code> look like a <code>Double</code> in GHCi? This is because, after type checking, <code>Fractional a =&gt; MySum a</code> is still ambiguous\u2014when GHCi goes to print that value, it needs to actually choose an <code>a</code> in order to select an appropriate <code>Fractional</code> instance, after all. If we weren't dealing with numbers, we might end up with GHC complaining about this ambiguity in <code>a</code>.</p>\n\n<p>But there's a special case <a href=\"https://www.haskell.org/onlinereport/decls.html#default-decls\" rel=\"nofollow noreferrer\">in the Haskell standard</a> for this. The brief overview is, if you have an ambiguity issue like the above that involves only numeric type classes, Haskell in its wisdom will pick either <code>Integer</code> or <code>Double</code> for the ambiguous type and run with the first one that type checks. In this case, that's <code>Double</code>. If you'd like to know more about this feature, <a href=\"http://andrew.gibiansky.com/blog/haskell/haskell-typeclasses/#_defaulting_rules\" rel=\"nofollow noreferrer\">this blog post</a> does a decent job of motivating and elaborating on what the standard says.</p>\n"}], "owner": {"reputation": 436, "user_id": 2227966, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1471a2a4abd39213b3cd2b6296b120d1?s=128&d=identicon&r=PG", "display_name": "Kevin Bradner", "link": "https://stackoverflow.com/users/2227966/kevin-bradner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 84, "favorite_count": 0, "accepted_answer_id": 56388626, "answer_count": 2, "score": 2, "last_activity_date": 1559277759, "creation_date": 1559271579, "question_id": 56388108, "link": "https://stackoverflow.com/questions/56388108/how-can-ghc-convert-a-polymorphic-numeric-literal-into-an-arbitrary-type-with-an", "title": "How can GHC convert a polymorphic numeric literal into an arbitrary type with an instance of Num?", "body": "<p>As far as I can tell, GHC can convert any numeric literal with default polymorphic type <code>Num a =&gt; a</code> into any type with an instance of <code>Num</code>. I'd like to know whether this is true and a little about the underlying mechanism.</p>\n\n<p>To explore this, I have written a datatype called <code>MySum</code> which replicates (part of) the functionality of <code>Sum</code> from Data.Monoid. The most important part is that it contains <code>instance Num a =&gt; Num (MySum a)</code>.</p>\n\n<p>Note - This just so happens to be where my question go its start. The Monoid is not specifically relevant. I've included a portion of that code at the bottom of this question, just in case it is useful for an answer to refer to the contents. </p>\n\n<p>It seems that GHCi will happily comply with an input of the form \"v :: MySum t\", under the following conditions:</p>\n\n<ol>\n<li><p>v is a polymorphic value of type <code>Num a =&gt; a</code></p></li>\n<li><p>t is a (possibly polymorphic) type under <code>Num</code></p></li>\n</ol>\n\n<p>As far as I can tell, the only numeric literals compatible with the type <code>Num a =&gt; a</code> are ones that look like integers. Is this always the case? It seems to imply that a value can instantiated to any type under Num exactly when that value is integral. If this is correct, then I understand how something like <code>5 :: MySum Int</code> might work, given the function <code>fromInteger</code> in <code>Num</code>.</p>\n\n<p>With all of that said, I can't figure out how something like this works:</p>\n\n<pre><code>*Main Data.Monoid&gt; 5 :: Fractional a =&gt; MySum a\nMySum {getMySum = 5.0}\n</code></pre>\n\n<p>If it's possible to explain this in a novice-friendly way, I would appreciate it.</p>\n\n<hr>\n\n<p>The instance <code>Num a =&gt; Num (MySum a)</code>, as promised:</p>\n\n<pre><code>import Control.Applicative\n\nnewtype MySum a = MySum {getMySum :: a}\n  deriving Show\n\ninstance Functor MySum where\n  fmap f (MySum a) = MySum (f a)\n\ninstance Applicative MySum where\n  pure = MySum\n  (MySum f) &lt;*&gt; (MySum a) = MySum (f a)\n\ninstance Num a =&gt; Num (MySum a) where\n  (+) = liftA2 (+)\n  (-) = liftA2 (-)\n  (*) = liftA2 (*)\n  negate = fmap negate\n  abs = fmap abs\n  signum = fmap signum\n  fromInteger = pure . fromInteger\n</code></pre>\n"}, {"tags": ["list", "haskell", "pattern-matching"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 5, "creation_date": 1559270072, "post_id": 56387929, "comment_id": 99375664, "body": "<code>belongs (head xs) xs</code> checks whether the first element of <code>xs</code> (assuming it exists) belongs to <code>xs</code>. You want <code>repeated xs</code> instead."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1559276981, "post_id": 56387929, "comment_id": 99376825, "body": "What is the smallest list where <code>repeated</code> gives you a different answer than you expect? Now that you have identified a smallest list, you can start evaluating subexpressions of your definition in ghci to see which of them behaves differently than you expect. Eventually you will drill down to an expression so small that it will be obvious either 1. why your expectation was wrong or 2. why the code you wrote was wrong. This is the essence of debugging, and you should expect that the majority of your time and effort in writing code will be spent on this process."}], "answers": [{"tags": [], "owner": {"reputation": 15567, "user_id": 3656904, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c8dbd58d3b477ad0e5889bc60625e7e8?s=128&d=identicon&r=PG&f=1", "display_name": "talex", "link": "https://stackoverflow.com/users/3656904/talex"}, "is_accepted": false, "score": 3, "last_activity_date": 1559277111, "creation_date": 1559277111, "answer_id": 56388694, "question_id": 56387929, "link": "https://stackoverflow.com/questions/56387929/determining-if-there-are-repeated-elements-in-a-list-in-haskell/56388694#56388694", "title": "Determining if there are repeated elements in a list in Haskell", "body": "<p>You want </p>\n\n<pre><code>repeated :: [Integer] -&gt; Bool\nrepeated [] = False\nrepeated (x:xs) | belongs x xs = True\n                | otherwise = repeated xs\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1275, "user_id": 11571245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vkCkX.png?s=128&g=1", "display_name": "typedfern", "link": "https://stackoverflow.com/users/11571245/typedfern"}, "is_accepted": false, "score": 3, "last_activity_date": 1559287009, "creation_date": 1559287009, "answer_id": 56390439, "question_id": 56387929, "link": "https://stackoverflow.com/questions/56387929/determining-if-there-are-repeated-elements-in-a-list-in-haskell/56390439#56390439", "title": "Determining if there are repeated elements in a list in Haskell", "body": "<p>\"belongs (head xs) xs\" checks whether xs's head is within xs, which will always be true.</p>\n\n<p>(Except when xs is empty, in which case your program will crash! \"head\" is a partial function, crashes with empty lists)</p>\n\n<p>This would fix it (as pointed by <a href=\"https://stackoverflow.com/users/3656904/talex\">@talex</a> too, but I also suggest making it more general, there is no need to specialize it to Integer):</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>repeated :: Eq a =&gt; [a] -&gt; Bool\nrepeated [] = False\nrepeated (x:xs) | belongs x xs = True\n                | otherwise = repeated xs\n</code></pre>\n"}], "owner": {"reputation": 101, "user_id": 11580944, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/JnskV.jpg?s=128&g=1", "display_name": "MeghanMarkle", "link": "https://stackoverflow.com/users/11580944/meghanmarkle"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 60, "favorite_count": 0, "answer_count": 2, "score": -1, "last_activity_date": 1559287009, "creation_date": 1559269574, "question_id": 56387929, "link": "https://stackoverflow.com/questions/56387929/determining-if-there-are-repeated-elements-in-a-list-in-haskell", "title": "Determining if there are repeated elements in a list in Haskell", "body": "<p>I'm trying to test lists for duplicates but when I compile and enter</p>\n\n<pre><code>repeated [1,2,3,4] \n</code></pre>\n\n<p>it outputs True. What's wrong?</p>\n\n<pre><code>belongs :: Eq a =&gt; a -&gt; [a] -&gt; Bool\nbelongs n [] = False\nbelongs n (x:xs) | n == x = True\n                 | otherwise = belongs n xs\n\nrepeated :: [Integer] -&gt; Bool\nrepeated [] = False\nrepeated (x:xs) | belongs x xs = True\n                | otherwise = belongs (head xs) xs\n</code></pre>\n"}, {"tags": ["haskell", "xmonad"], "answers": [{"comments": [{"owner": {"reputation": 597, "user_id": 3404377, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7df3cf3bc9180341a3e996358cc9fe4?s=128&d=identicon&r=PG&f=1", "display_name": "ddulaney", "link": "https://stackoverflow.com/users/3404377/ddulaney"}, "edited": false, "score": 0, "creation_date": 1559430012, "post_id": 56388729, "comment_id": 99419165, "body": "Thanks! Do you know how to access <code>_NET_WM_PID</code> from XMonad? I can see it in <code>xprop</code>, but there&#39;s no obvious Haskell function that gets it."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 597, "user_id": 3404377, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7df3cf3bc9180341a3e996358cc9fe4?s=128&d=identicon&r=PG&f=1", "display_name": "ddulaney", "link": "https://stackoverflow.com/users/3404377/ddulaney"}, "edited": false, "score": 1, "creation_date": 1559433787, "post_id": 56388729, "comment_id": 99419663, "body": "@ddulaney <a href=\"https://hackage.haskell.org/package/xmonad-0.15/docs/XMonad-Core.html#v:getAtom\" rel=\"nofollow noreferrer\">getAtom</a>"}, {"owner": {"reputation": 597, "user_id": 3404377, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7df3cf3bc9180341a3e996358cc9fe4?s=128&d=identicon&r=PG&f=1", "display_name": "ddulaney", "link": "https://stackoverflow.com/users/3404377/ddulaney"}, "edited": false, "score": 0, "creation_date": 1559449251, "post_id": 56388729, "comment_id": 99421189, "body": "Oh. Perfect! Thanks!"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 3, "last_activity_date": 1559277436, "creation_date": 1559277436, "answer_id": 56388729, "question_id": 56387720, "link": "https://stackoverflow.com/questions/56387720/how-can-xmonad-spawn-a-process-with-a-specified-working-directory/56388729#56388729", "title": "How can XMonad spawn a process with a specified working directory?", "body": "<p><code>spawn</code> already calls out to <code>/bin/sh</code>, so you can just shove the <code>cd</code> into the thing you spawn, as in <code>spawn \"cd /very/good/directory &amp;&amp; very-good-executable --very --good --arguments\"</code>.</p>\n\n<p>There is not even a reliable way to detect which process is associated with a given window -- and even if you could it may not even be running on this machine! -- let alone its working directory. But see also the <code>_NET_WM_PID</code> atom which is occasionally available and <a href=\"https://unix.stackexchange.com/q/94357/66679\">this question on the Unix stackexchange</a>.</p>\n"}], "owner": {"reputation": 597, "user_id": 3404377, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d7df3cf3bc9180341a3e996358cc9fe4?s=128&d=identicon&r=PG&f=1", "display_name": "ddulaney", "link": "https://stackoverflow.com/users/3404377/ddulaney"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 117, "favorite_count": 0, "accepted_answer_id": 56388729, "answer_count": 1, "score": 1, "last_activity_date": 1559277436, "creation_date": 1559267422, "question_id": 56387720, "link": "https://stackoverflow.com/questions/56387720/how-can-xmonad-spawn-a-process-with-a-specified-working-directory", "title": "How can XMonad spawn a process with a specified working directory?", "body": "<p>I am using (and loving!) XMonad as a window manager. However, I'm not sure how to implement a keyboard shortcut that can <code>spawn</code> a new process/window with the working directory of the current window.</p>\n\n<p>I'm thinking there are two parts to this problem: Determining the working directory of the currently-active window, and spawning a process with a given working directory.</p>\n\n<p>For process spawning, I'm currently using a hack where I spawn <code>/bin/sh</code>, that <code>cd</code>'s to the desired location then starts the program. Is there a more elegant way to do this?</p>\n\n<p>For determining the working directory of the current window, I have no idea how to do this. A quick search of <code>xmonad-contrib</code> didn't show anything, though I might have missed something. Is this an attribute that X makes available to the window manager? Maybe I could do something with the <code>/proc</code> tree?</p>\n"}, {"tags": ["haskell", "huffman-code"], "comments": [{"owner": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "edited": false, "score": 0, "creation_date": 1559266959, "post_id": 56387023, "comment_id": 99375041, "body": "FYI, the <code>encode</code> and <code>encode&#39;</code> functions aren&#39;t taking a <code>Bits</code> argument; they have the requirement that <code>a</code>, the type of the elements of the lists that they return, has an instance of the <code>Bits</code> class. See <a href=\"http://www.learnyouahaskell.com/types-and-typeclasses\" rel=\"nofollow noreferrer\">Learn You A Haskell</a> for more about classes and instances in Haskell."}], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 10911301, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8TLWf.jpg?s=128&g=1", "display_name": "Titamik", "link": "https://stackoverflow.com/users/10911301/titamik"}, "edited": false, "score": 0, "creation_date": 1559266292, "post_id": 56387561, "comment_id": 99374928, "body": "&lt;interactive&gt;:14:1: error:     \u2022 Ambiguous type variable \u2018a0\u2019 arising from a use of \u2018print\u2019       prevents the constraint \u2018(Show a0)\u2019 from being solved.       Probable fix: use a type annotation to specify what \u2018a0\u2019 should be.       These potential instances exist:         instance (Show k, Show a) =&gt; Show (M.Map k a)           -- Defined in \u2018Data.Map.Internal\u2019         instance Show Ordering -- Defined in \u2018GHC.Show\u2019         instance Show Integer -- Defined in \u2018GHC.Show\u2019         ...plus 24 others and: print it"}, {"owner": {"reputation": 15567, "user_id": 3656904, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c8dbd58d3b477ad0e5889bc60625e7e8?s=128&d=identicon&r=PG&f=1", "display_name": "talex", "link": "https://stackoverflow.com/users/3656904/talex"}, "reply_to_user": {"reputation": 1, "user_id": 10911301, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8TLWf.jpg?s=128&g=1", "display_name": "Titamik", "link": "https://stackoverflow.com/users/10911301/titamik"}, "edited": false, "score": 1, "creation_date": 1559266607, "post_id": 56387561, "comment_id": 99374985, "body": "add <code>result :: [Int]</code>"}], "tags": [], "owner": {"reputation": 15567, "user_id": 3656904, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c8dbd58d3b477ad0e5889bc60625e7e8?s=128&d=identicon&r=PG&f=1", "display_name": "talex", "link": "https://stackoverflow.com/users/3656904/talex"}, "is_accepted": true, "score": 1, "last_activity_date": 1559266413, "last_edit_date": 1559266413, "creation_date": 1559265756, "answer_id": 56387561, "question_id": 56387023, "link": "https://stackoverflow.com/questions/56387023/how-to-use-this-huffman-coding-implementation/56387561#56387561", "title": "How to use this Huffman coding implementation?", "body": "<p>The answer you looking for is</p>\n\n<pre><code>myString = \"Ho-ho-ho\"\nresult = encode (stringCodemap myString) myString\n</code></pre>\n"}], "owner": {"reputation": 1, "user_id": 10911301, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8TLWf.jpg?s=128&g=1", "display_name": "Titamik", "link": "https://stackoverflow.com/users/10911301/titamik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 357, "favorite_count": 0, "accepted_answer_id": 56387561, "answer_count": 1, "score": -4, "last_activity_date": 1559271698, "creation_date": 1559260373, "last_edit_date": 1559271698, "question_id": 56387023, "link": "https://stackoverflow.com/questions/56387023/how-to-use-this-huffman-coding-implementation", "title": "How to use this Huffman coding implementation?", "body": "<p>I have found <a href=\"https://gist.github.com/kirelagin/3886243\" rel=\"nofollow noreferrer\">this Literate Haskell snippet</a> implementing Huffman coding, but I don't understand how to use it. Some functions make sense to me\u2014for example, I can write:</p>\n\n<pre><code>a = freqList \"lol\" \nbuild list a\n</code></pre>\n\n<p>But how can I compute the Huffman encoding of this string? The <code>encode</code> and <code>encode'</code> functions appear to take a <code>Bits</code> argument.</p>\n\n<p>Here is the code from the Huffman coding implementation, minus the Literate Haskell comments:</p>\n\n<pre><code>module Huffman where\n\nimport Control.Arrow\nimport Data.List\nimport qualified Data.Map as M\nimport Data.Function\n\n\nclass Eq a =&gt; Bits a where\n    zer :: a\n    one :: a\n\ninstance Bits Int where\n    zer = 0\n    one = 1\n\ninstance Bits Bool where\n    zer = False\n    one = True\n\ntype Codemap a = M.Map Char [a]\n\ndata HTree  = Leaf Char Int\n            | Fork HTree HTree Int\n            deriving (Show)\n\nweight :: HTree -&gt; Int\nweight (Leaf _ w)    = w\nweight (Fork _ _ w)  = w\n\nmerge t1 t2 = Fork t1 t2 (weight t1 + weight t2)\n\nfreqList :: String -&gt; [(Char, Int)]\nfreqList = M.toList . M.fromListWith (+) . map (flip (,) 1)\n\nbuildTree :: [(Char, Int)] -&gt; HTree\nbuildTree = bld . map (uncurry Leaf) . sortBy (compare `on` snd)\n    where  bld (t:[])    = t\n           bld (a:b:cs)  = bld $ insertBy (compare `on` weight) (merge a b) cs\n\n\nbuildCodemap :: Bits a =&gt; HTree -&gt; Codemap a\nbuildCodemap = M.fromList . buildCodelist\n    where  buildCodelist (Leaf c w)    = [(c, [])]\n           buildCodelist (Fork l r w)  = map (addBit zer) (buildCodelist l) ++ map (addBit one) (buildCodelist r)\n             where addBit b = second (b :)\n\nstringTree :: String -&gt; HTree\nstringTree = buildTree . freqList\n\nstringCodemap :: Bits a =&gt; String -&gt; Codemap a\nstringCodemap = buildCodemap . stringTree\n\nencode :: Bits a =&gt; Codemap a -&gt; String -&gt; [a]\nencode m = concat . map (m M.!)\n\nencode' :: Bits a =&gt; HTree -&gt; String -&gt; [a]\nencode' t = encode $ buildCodemap t\n\ndecode :: Bits a =&gt; HTree -&gt; [a] -&gt; String\ndecode tree = dcd tree\n    where  dcd (Leaf c _) []        = [c]\n           dcd (Leaf c _) bs        = c : dcd tree bs\n           dcd (Fork l r _) (b:bs)  = dcd (if b == zer then l else r) bs\n</code></pre>\n"}, {"tags": ["function", "haskell", "types", "functional-programming", "semantics"], "comments": [{"owner": {"reputation": 2158, "user_id": 9991455, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2ff5d55afd5d829849efbf27962dd320?s=128&d=identicon&r=PG&f=1", "display_name": "Lorenzo", "link": "https://stackoverflow.com/users/9991455/lorenzo"}, "edited": false, "score": 3, "creation_date": 1559243096, "post_id": 56384112, "comment_id": 99368538, "body": "Looks like you have a too basic understanding of currying, which is an important concept in Haskell. Have a look at <a href=\"http://learnyouahaskell.com/chapters\" rel=\"nofollow noreferrer\">Learn You A Haskell</a>"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 3, "creation_date": 1559246168, "post_id": 56384112, "comment_id": 99369781, "body": "<code>insert</code> is not of type <code>t</code>, its <i>first argument</i> is of type <code>t</code>. <code>insert a</code> takes two more argument as you described. --- <code>partition</code> is not a tuple, it is a function. its first argument <code>p</code> is not a tuple, it is a function."}], "answers": [{"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 6, "last_activity_date": 1559242944, "creation_date": 1559242944, "answer_id": 56384187, "question_id": 56384112, "link": "https://stackoverflow.com/questions/56384112/understanding-the-types-of-functions/56384187#56384187", "title": "Understanding the types of functions", "body": "<p>No, the types are exactly as shown:</p>\n\n<p><code>insert</code> has type <code>t -&gt; Bool -&gt; ([t], [t]) -&gt; ([t], [t])</code>, which means it is a function that takes a value of type <code>t</code> as an argument and returns a function of type <code>Bool -&gt; ([t], [t]) -&gt; ([t], [t])</code>. Informally, you can think of <code>insert</code> as a function that takes 3 arguments: one of type <code>t</code>, one of type <code>Bool</code>, and one of type <code>([t], [t])</code>, and returns another value of type <code>([t], [t])</code>.</p>\n\n<p><code>partition</code> is a function that takes <em>another</em> function (of type <code>t -&gt; Bool</code>) as its argument, and returns a function of type <code>[t] -&gt; ([t],[t])</code>. Again informally, you can think of <code>partition</code> as taking two arguments (of type <code>t -&gt; Bool</code> and type <code>[t]</code>) and returning a value of type <code>([t], [t])</code>.</p>\n\n<p><code>-&gt;</code> itself is a type-level operator; it takes two types as arguments and returns a function type. It is right-associative, which means <code>a -&gt; (b -&gt; c)</code> and <code>a -&gt; b -&gt; c</code> are equivalent.</p>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 10, "last_activity_date": 1559243963, "last_edit_date": 1559243963, "creation_date": 1559243166, "answer_id": 56384238, "question_id": 56384112, "link": "https://stackoverflow.com/questions/56384112/understanding-the-types-of-functions/56384238#56384238", "title": "Understanding the types of functions", "body": "<blockquote>\n  <p><code>insert</code> is of type <code>t</code>, it takes two arguments one of <code>Bool</code> and one of a tuple of two lists of type <code>t</code> and returns a tuple of two lists of type <code>t</code>.</p>\n</blockquote>\n\n<p><strong>No</strong>. First of all it is important to notice that in Haskell each function takes <em>exactly</em> one parameter. Indeed</p>\n\n<pre><code>insert :: t -&gt; Bool -&gt; ([t],[t]) -&gt; ([t],[t])\n</code></pre>\n\n<p>is a short and compact form of:</p>\n\n<pre><code>insert :: t -&gt; (Bool -&gt; (([t],[t]) -&gt; ([t],[t])))\n</code></pre>\n\n<p>in fact the above is still not very verbose, a canonical form would be:</p>\n\n<pre><code>insert :: ((-&gt;) t) (((-&gt;) Bool) (((-&gt;) ((,) ([] t)) ([] t))  ((,) ([] t)) ([] t)))\n</code></pre>\n\n<p>but the above is of course not very readable, let us thus stick to the second form.</p>\n\n<p>Each function in Haskell takes exactly one parameter. What here happens is that the <em>result</em> of applying a parameter to a certain function, generates a new function.</p>\n\n<p>So if we would generate an expression <code>insert x</code>, we have constructed a function of the type <code>Bool -&gt; (([t], [t]) -&gt; ([t], [t]))</code>.</p>\n\n<p><em>Informally</em>, one indeed sometimes says that a \"<em>function takes n parameters</em>\". But it is important to keep that in mind.</p>\n\n<p>Secondly you forgot about the <code>t</code>. We can informally say that <code>insert</code> takes <em>three</em> parameters, a value of type <code>t</code>, a boolean (type <code>Bool</code>), and a 2-tuple with two lists of <code>t</code>s. It will return a 2-tuple of two lists of <code>t</code>s. Depending on whether the <code>Bool</code> is <code>True</code> or <code>False</code> it prepends one of the two lists with the given value.</p>\n\n<p>For example:</p>\n\n<pre><code>Prelude&gt; insert 5 False ([], [])\n([],[5])\nPrelude&gt; insert 5 False ([1,4], [2,5])\n([1,4],[5,2,5])\nPrelude&gt; insert 5 True ([1,4], [2,5])\n([5,1,4],[2,5])\nPrelude&gt; insert 3 True ([1,4], [2,5])\n([3,1,4],[2,5])\nPrelude&gt; insert 3 False ([1,4], [2,5])\n([1,4],[3,2,5])\n</code></pre>\n\n<blockquote>\n  <p><code>partition</code> is a tuple of type <code>t</code> which returns a <code>bool</code>, and it takes a list of type <code>t</code> as it's argument and returns a tuple of two lists of type <code>t</code>.</p>\n</blockquote>\n\n<p>No, the parameter here has type <code>(t -&gt; Bool)</code> that is a <em>function</em>. Indeed in Haskell you can pass functions as parameters.</p>\n\n<p>Informally we can say that <code>partition</code> takes a \"<em>predicate</em>\" (a function that maps values to <code>Bool</code>s) and a list of <code>t</code>s, and it returns a 2-tuple with two lists of <code>t</code>s. Depending on whether the predicate holds for the values in the list, these are sorted in the first or the second list in the 2-tuple.</p>\n\n<p>For example:</p>\n\n<pre><code>Prelude&gt; partition (&gt;3) [1,4,2,5]\n([4,5],[1,2])\nPrelude&gt; partition (&gt;3) [1,3,0,2]\n([],[1,3,0,2])\nPrelude&gt; partition (&gt;3) [1,7,8,0]\n([7,8],[1,0])\nPrelude&gt; partition (&gt;3) [1,7,8,9]\n([7,8,9],[1])\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1559245248, "post_id": 56384265, "comment_id": 99369415, "body": "Functions are values, too. The problem isn&#39;t that <code>t</code> isn&#39;t (or can&#39;t be) a function, it&#39;s that it doesn&#39;t <i>have</i> to be a function. For example, <code>id :: t -&gt; t</code>, but both <code>id &#39;c&#39;</code> and <code>id (+)</code> type-check because you can unify <code>t</code> with either <code>Char</code> or <code>Num a =&gt; a -&gt; a -&gt; a</code>."}, {"owner": {"reputation": 36141, "user_id": 4354477, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/SuxtS.gif?s=128&g=1", "display_name": "ForceBru", "link": "https://stackoverflow.com/users/4354477/forcebru"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1559245990, "post_id": 56384265, "comment_id": 99369723, "body": "@chepner, yep, you worded it better. I was trying to draw a difference between values as some kind of data and functions as <i>behaviour</i>, while also attempting not to overcomplicate the answer with the fact that one can also pass functions to other functions."}], "tags": [], "owner": {"reputation": 36141, "user_id": 4354477, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/SuxtS.gif?s=128&g=1", "display_name": "ForceBru", "link": "https://stackoverflow.com/users/4354477/forcebru"}, "is_accepted": false, "score": 5, "last_activity_date": 1559243615, "last_edit_date": 1559243615, "creation_date": 1559243269, "answer_id": 56384265, "question_id": 56384112, "link": "https://stackoverflow.com/questions/56384112/understanding-the-types-of-functions/56384265#56384265", "title": "Understanding the types of functions", "body": "<p>No, <code>insert</code> is a <em>function</em>, so it can't be \"of type <code>t</code>\". If it were of type <code>t</code>, it would be a <em>value</em>:</p>\n\n<pre><code>a :: Int\na = 5\n</code></pre>\n\n<p>Here <code>a</code> is <em>of type</em> <code>Int</code>.</p>\n\n<p>As you can see from the function implementation, <code>insert</code> takes <em>three</em> arguments:</p>\n\n<pre><code>insert a True (b,c) = ...\n</code></pre>\n\n<p>The arguments are <code>a</code>, <code>True</code> and <code>(b, c)</code>.</p>\n\n<p>So, the type of <code>insert</code> is exactly <code>t -&gt; Bool -&gt; ([t],[t]) -&gt; ([t],[t])</code>:</p>\n\n<ol>\n<li>it's a function (because of <code>-&gt;</code>s)</li>\n<li>...of <em>one</em> argument of <em>some</em> type <code>t</code></li>\n<li>...and returns <em>another function</em> of type <code>Bool -&gt; ([t],[t]) -&gt; ([t],[t])</code>\n\n<ol>\n<li>...which takes <em>one argument</em> of type <code>Bool</code> (and <code>Bool</code> only)</li>\n<li>...and returns a function <code>([t],[t]) -&gt; ([t],[t])</code></li>\n<li>(this should be one level of indentation deeper) ...which takes one argument of type <code>([t],[t])</code> (a tuple of two lists, each of which holds values of <em>some</em> type <code>t</code>)</li>\n<li>...and returns, finally, a <em>value</em> of type <code>([t],[t])</code></li>\n</ol></li>\n</ol>\n\n<p>Now, this looks like a mess: functions returning other functions that return functions... But this can be simplified. You can think of <code>insert</code> as a function of <em>three</em> arguments:</p>\n\n<ol>\n<li><code>insert</code> is this crazy function that returns other functions: type <code>t -&gt; Bool -&gt; ([t],[t]) -&gt; ([t],[t])</code></li>\n<li><code>insert 2</code> is of type <code>Bool -&gt; ([t],[t]) -&gt; ([t],[t])</code></li>\n<li><code>insert 2 True</code> if of type <code>([t],[t]) -&gt; ([t],[t])</code></li>\n<li><code>insert 2 True ([1], [2])</code> is of type <code>([t],[t])</code></li>\n</ol>\n\n<p><em>BOOM!</em> The last call actually returned a value, not a function! And due to this, one can treat <code>insert</code> as a function of three arguments. This thing is called currying, and it's named after the same man after whom Haskell is named - Haskell Curry.</p>\n"}], "owner": {"reputation": 165, "user_id": 10605156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ba993c69b70982a3134493528fa4bb80?s=128&d=identicon&r=PG&f=1", "display_name": "JameshGong", "link": "https://stackoverflow.com/users/10605156/jameshgong"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 122, "favorite_count": 0, "answer_count": 3, "score": 3, "last_activity_date": 1559249741, "creation_date": 1559242630, "last_edit_date": 1559249741, "question_id": 56384112, "link": "https://stackoverflow.com/questions/56384112/understanding-the-types-of-functions", "title": "Understanding the types of functions", "body": "<p>I am trying to understand the types of functions and being able to explain them.</p>\n\n<p>Two functions:</p>\n\n<pre><code>insert :: t -&gt; Bool -&gt; ([t],[t]) -&gt; ([t],[t])\ninsert a True (b,c) = (a:b,c)\ninsert a False (b,c) = (b,a:c)\n\npartition :: (t -&gt; Bool) -&gt; [t] -&gt; ([t],[t])\npartition p [] = ([],[])\npartition p (x : xs) = insert x (p x) (partition p xs)\n</code></pre>\n\n<p>From my limited knowledge I think that insert function:</p>\n\n<ul>\n<li><p><code>insert</code> is of type t, it takes two arguments one of bool and one of a tuple of two lists of type t and returns a tuple of two lists of type t.</p></li>\n<li><p><code>partition</code> is a tuple of type t which returns a bool, and it takes a list of type t as it's argument and returns a tuple of two lists of type t.</p></li>\n</ul>\n\n<p>Is that the right way of thinking about it or am I getting it wrong? I have been following some tutorials and this is what I've u   nderstood so far.</p>\n"}, {"tags": ["haskell", "permutation"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 4, "creation_date": 1559232495, "post_id": 56381819, "comment_id": 99364011, "body": "Please include the code (<a href=\"https://stackoverflow.com/posts/56381819/edit\">edit</a> your question), not an <i>image</i> of code."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 4, "creation_date": 1559232606, "post_id": 56381819, "comment_id": 99364078, "body": "And <i>especially</i> not an image of code that&#39;s been downscaled so far it can&#39;t be read."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 4, "creation_date": 1559232635, "post_id": 56381819, "comment_id": 99364096, "body": "Furthermore the output can not be <code>[[&quot;a&quot;,1,&quot;i&quot;,2],[&quot;u&quot;,4,&quot;e&quot;,s].....]</code>, since the elements in a list in Haskell all have the <i>same</i> type."}, {"owner": {"reputation": 2158, "user_id": 9991455, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2ff5d55afd5d829849efbf27962dd320?s=128&d=identicon&r=PG&f=1", "display_name": "Lorenzo", "link": "https://stackoverflow.com/users/9991455/lorenzo"}, "edited": false, "score": 2, "creation_date": 1559239666, "post_id": 56381819, "comment_id": 99367156, "body": "Also, what do you mean by permutations? Would <code>[1,2,3,4]</code> be valid output? If so, just merge the lists and find the possible combinations"}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 2, "last_activity_date": 1559233184, "creation_date": 1559233184, "answer_id": 56381984, "question_id": 56381819, "link": "https://stackoverflow.com/questions/56381819/making-permutation-from-two-list-but-not-using-full-number/56381984#56381984", "title": "making permutation from two list but not using full number", "body": "<p>Making a guess at what your current code does, here's a proposal for an algorithm: </p>\n\n<ol>\n<li>nondeterministically pick a permutation of the vowels</li>\n<li>assign indices to the permutation</li>\n<li>use the standard <code>tails</code> trick to nondeterministically choose the appropriate number of elements from this list</li>\n</ol>\n\n<p>In code:</p>\n\n<pre><code>import Data.List\n\nchoose :: Int -&gt; [a] -&gt; [[a]]\nchoose 0 xs = [[]]\nchoose n xs = do\n    x:xs' &lt;- tails xs\n    (x:) &lt;$&gt; choose (n-1) xs'\n\nassignments :: Int -&gt; [a] -&gt; [[(Int, a)]]\nassignments n xs = do\n    xs' &lt;- permutations xs\n    choose n (zip [1..] xs')\n</code></pre>\n\n<p>In ghci:</p>\n\n<pre><code>&gt; mapM_ print (assignments 2 \"abc\")\n[(1,'a'),(2,'b')]\n[(1,'a'),(3,'c')]\n[(2,'b'),(3,'c')]\n[(1,'b'),(2,'a')]\n[(1,'b'),(3,'c')]\n[(2,'a'),(3,'c')]\n[(1,'c'),(2,'b')]\n[(1,'c'),(3,'a')]\n[(2,'b'),(3,'a')]\n[(1,'b'),(2,'c')]\n[(1,'b'),(3,'a')]\n[(2,'c'),(3,'a')]\n[(1,'c'),(2,'a')]\n[(1,'c'),(3,'b')]\n[(2,'a'),(3,'b')]\n[(1,'a'),(2,'c')]\n[(1,'a'),(3,'b')]\n[(2,'c'),(3,'b')]\n</code></pre>\n"}], "owner": {"reputation": 1, "user_id": 11578975, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-iZJj7I6ypzk/AAAAAAAAAAI/AAAAAAAAAmU/cVQ0Vws8DYs/photo.jpg?sz=128", "display_name": "Ms.Ms", "link": "https://stackoverflow.com/users/11578975/ms-ms"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 78, "favorite_count": 0, "closed_date": 1559261678, "answer_count": 1, "score": -9, "last_activity_date": 1559277053, "creation_date": 1559232434, "last_edit_date": 1559277053, "question_id": 56381819, "link": "https://stackoverflow.com/questions/56381819/making-permutation-from-two-list-but-not-using-full-number", "closed_reason": "Not suitable for this site", "title": "making permutation from two list but not using full number", "body": "<p>I want to create a list of all possible  permutation from two list. However, I do not want to make with full length.\nFor example, first list is <code>[\"a\", \"e\", \"i\", \"o\" \"u\"]</code> and second is <code>[1, 2, 3, 4, 5]</code> \nthen one of the outcome would be like <code>[[\"a\",1,\"i\",2],[\"u\",4,\"e\",s].....]</code></p>\n\n<pre><code>listsOfPossibilitiesN ::[a] -&gt; [a]  -&gt; [[a]]\nlistsOfPossibilitiesN  a b = case a of\n    _ -&gt; (listMakerN [] a b (length a) (length b) 0)\n\n\n-- | list = storage, and show at the end of loop, p1h = first list, p2h = second list,\n-- | count(x) = count to stop loop when the thing is fully rotated, depthCount = count to stop all loop when the depth reached 10\nlistMakerN :: [a] -&gt; [a]  -&gt; [a] -&gt; Integer  -&gt; Integer -&gt; Integer -&gt; [[a]]\nlistMakerN list p1h  p2h count1 count2 depthCount\n    | depthCount == 10 = [list]\n    | count1 == 0 = []\n    | otherwise = case p1h of\n                    ((x:xs)) -&gt; (listMaker2N (list ++ [x])  xs p2h (count2 - 1) count2 (depthCount + 1)) ++ listMakerN list (xs ++ [x]) p2h (count1 - 1) count2 depthCount\n\nlistMaker2N ::  [a] -&gt; [a]  -&gt; [a] -&gt; Integer -&gt; Integer  -&gt; Integer -&gt; [[a]]\nlistMaker2N list  p1h  p2h count1 count2 depthCount\n    | depthCount == 10 = [list]\n    | count2 == 0 = []\n    | otherwise = case p2h of\n                    ((x:xs)) -&gt; (listMakerN (list ++ [x])  p1h xs count1 (count1 ) (depthCount + 1))  ++ listMaker2N list p1h (xs ++ [x]) count1 (count2 - 1) depthCount\n\n</code></pre>\n\n<p>I made this function above (I am sorry for bad image. I finally could figure out how t put code in question), but it takes too long to get result.\nHow do i do better?(Just to remind you, I am a beginner of programming)</p>\n\n<p>and, the output is:</p>\n\n<pre><code>&gt; listsOfPossibilitiesN  [1,2,3,4,5,6,7,8,9,10] [100,200,300,400,500,600,700,800,900,1000]\n[[1,100,2,200,3,300,4,400,5,500],[1,100,2,200,3,300,4,400,5,600],[1,100,2,200,3,300,4,400,5,700],[1,100,2,200,3,300,4,400,5,800],[1,100,2,200,3,300,4,400,5,900],[1,100,2,200,3,300,4,400,5,1000],[1,100,\n2,200,3,300,4,400,6,500],[1,100,2,200,3,300,4,400,6,600],[1,100,2,200,3,300,4,400,6,700],[1,100,2,200,3,300,4,400,6,800],[1,100,2,200,3,300,4,400,6,900],[1,100,2,200,3,300,4,400,6,1000],[1,100,2,200,3,\n300,4,400,7,500],[1,100,2,200,3,300,4,400,7,600],..]\n</code></pre>\n"}, {"tags": ["html", "haskell", "haskell-spock", "haskell-lucid"], "comments": [{"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 1, "creation_date": 1559241880, "post_id": 56380876, "comment_id": 99368005, "body": "Please include specific compiler errors, copied exactly. Also, is this your exact actual source? <code>getRequest</code> should fail to compile, because <code>liftIO parseRequest &quot;http:&#47;&#47;......&quot;</code> passes too many arguments to <code>liftIO</code>, but you seem to be writing as though that function were correct/complete."}, {"owner": {"reputation": 115, "user_id": 3680029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2f9062247d1bcf616e8a6cf493c00fc?s=128&d=identicon&r=PG&f=1", "display_name": "user3680029", "link": "https://stackoverflow.com/users/3680029/user3680029"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1559244148, "post_id": 56380876, "comment_id": 99368964, "body": "In my actual code lucid is undefined ``` lucid= undefined ``` Everything else compile correctly. getRequest compile don&#39;t read here my definition literally I skip the part responsible for building the request the last call of this function is a IO-lifted result from putStrLn (i.e IO () )"}, {"owner": {"reputation": 49359, "user_id": 1082681, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/45ea14ad7f04aa78ce58cb2b52234f5b?s=128&d=identicon&r=PG", "display_name": "kriegaex", "link": "https://stackoverflow.com/users/1082681/kriegaex"}, "edited": false, "score": 0, "creation_date": 1559275677, "post_id": 56380876, "comment_id": 99376594, "body": "I just fixed your tags. I guess you don&#39;t want <i>spock</i> because it refers to a test framework written in Groovy. I replaed it by <i>haskell-spock</i> which hopefully refers to the web development framework you are talking about."}], "answers": [{"comments": [{"owner": {"reputation": 115, "user_id": 3680029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2f9062247d1bcf616e8a6cf493c00fc?s=128&d=identicon&r=PG&f=1", "display_name": "user3680029", "link": "https://stackoverflow.com/users/3680029/user3680029"}, "edited": false, "score": 0, "creation_date": 1559312681, "post_id": 56388278, "comment_id": 99392261, "body": "html is a &quot;converter&quot; from Text to ActionCtxt ctx m a which is in fact wrapped somewhere underneath the SpockAction type ( SpockAction is a SpockActionCTxt wrapper which himself is a wrapper for a ActionCTxt type). I think that if I go the way you suggested Jeremy List I need to flatten out one layer of ActionCTxt . LiftIO is working fine the error I get is: Couldn&#39;t match type `ActionCtxT ctx0 m0 a0&#39; with () Expected type: ActionCtxT () (WebStateM database session state) () Actual type: ActionCtxT () (WebStateM database session state) (ActionCtxT ctx0 m0 a0)"}, {"owner": {"reputation": 1706, "user_id": 1840613, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2dfd4d21060ccd9b972864e0f6cb8c4?s=128&d=identicon&r=PG", "display_name": "Jeremy List", "link": "https://stackoverflow.com/users/1840613/jeremy-list"}, "reply_to_user": {"reputation": 115, "user_id": 3680029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2f9062247d1bcf616e8a6cf493c00fc?s=128&d=identicon&r=PG&f=1", "display_name": "user3680029", "link": "https://stackoverflow.com/users/3680029/user3680029"}, "edited": false, "score": 0, "creation_date": 1559606866, "post_id": 56388278, "comment_id": 99465927, "body": "The remaining problem was your use of <code>return</code>; which was getting instantiated via the <code>instance Monad ((-&gt;) r)</code> declaration."}, {"owner": {"reputation": 115, "user_id": 3680029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2f9062247d1bcf616e8a6cf493c00fc?s=128&d=identicon&r=PG&f=1", "display_name": "user3680029", "link": "https://stackoverflow.com/users/3680029/user3680029"}, "edited": false, "score": 1, "creation_date": 1559624259, "post_id": 56388278, "comment_id": 99468856, "body": "perfect. I must have done something wrong previously what you propose in fact compile correctly. Thank you very much Jeremy.  Nevertheless wandering with my errors so long was a very good exercise I finally get a deeper understanding of monad transformers. Still I&#39;m not very satisified with the IO monad in my code, I feel there is another way. As I see everything come from the use of parseRequest which pull me into a monad (String -&gt; m Request)  - I made m to be a IO, and once you&#39;re in the IO monad you cannot get out... it&#39;s the &quot;curse of the IO Monad&quot; (&quot;runIO&quot; is the main function)"}], "tags": [], "owner": {"reputation": 1706, "user_id": 1840613, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2dfd4d21060ccd9b972864e0f6cb8c4?s=128&d=identicon&r=PG", "display_name": "Jeremy List", "link": "https://stackoverflow.com/users/1840613/jeremy-list"}, "is_accepted": false, "score": 1, "last_activity_date": 1559606501, "last_edit_date": 1559606501, "creation_date": 1559272995, "answer_id": 56388278, "question_id": 56380876, "link": "https://stackoverflow.com/questions/56380876/how-to-stack-correctly-monads-to-finally-render-to-html/56388278#56388278", "title": "How to stack correctly monads to finally render to html?", "body": "<p>The relevant types:</p>\n\n<pre><code>document :: HtmlT IO ()\nrenderTextT :: Monad m =&gt; HtmlT m a -&gt; m Text\nrenderTextT document :: IO Text\n&lt;the value you need&gt; :: SpockAction database session state Text\n</code></pre>\n\n<p>Fortunately we have this available: <code>liftIO :: MonadIO m =&gt; IO a -&gt; m a</code></p>\n\n<p>Two steps to getting your <code>lucid</code> function running:</p>\n\n<ol>\n<li>Change <code>txt &lt;- renderTextT document</code> to <code>txt &lt;- liftIO (renderTextT document)</code></li>\n<li>Try to compile your code to make sure <code>liftIO</code> is imported (it probably is already). If not: add <code>import Control.Monad.IO.Class</code> to your import list.</li>\n<li>Remove the <code>return</code> from <code>return html (TL.toStrict txt)</code>.</li>\n</ol>\n\n<p>The following code is working on my machine:</p>\n\n<pre><code>lucid :: HtmlT IO () -&gt; SpockAction database session state ()\nlucid document = do\n  txt &lt;- liftIO (renderTextT document)\n  html (TL.toStrict txt)\n</code></pre>\n"}], "owner": {"reputation": 115, "user_id": 3680029, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2f9062247d1bcf616e8a6cf493c00fc?s=128&d=identicon&r=PG&f=1", "display_name": "user3680029", "link": "https://stackoverflow.com/users/3680029/user3680029"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 142, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1559662866, "creation_date": 1559228762, "last_edit_date": 1559662866, "question_id": 56380876, "link": "https://stackoverflow.com/questions/56380876/how-to-stack-correctly-monads-to-finally-render-to-html", "title": "How to stack correctly monads to finally render to html?", "body": "<p>My goal is to feed correctly the html function (as define in Spock-core) with a <code>HtmlT m</code> type (ideally <code>Html ()</code>). In between I am performing some Network.Http.Simple requests. Apparently my knowledge of Haskell is insufficient, I didn't find the way to force the correct monad. As far as I know (and understand the whole sense of monads) there is no way to compose different monads something like <code>(Monad M, Monad N =&gt; M a -&gt; (a -&gt; N b) -&gt; N b)</code>.</p>\n\n<p>The best I manage to achieve was to set up a <code>HtmlT IO ()</code> type but then I get stuck in the conversion function <code>lucid :: HtmlT IO () -&gt; SpockAction dtb sess state ()</code></p>\n\n<p>Here is my connection function (<code>Auth</code> is a FromJSON data structure to host authorization key and token)</p>\n\n<pre><code>     connect :: IO Auth\n     connect = do  \n                ...building a http request.. \n                response &lt;- httpJSON request\n                return (getResponseBody response :: Auth)\n</code></pre>\n\n<p>Next this get wired in a <code>getRequest</code> function of type <code>String -&gt; HtmlT IO ()</code></p>\n\n<pre><code>    getRequest :: RequestPath -&gt; HtmlT IO ()\n    getRequest rpath = do\n                    atoken &lt;- liftIO connect\n                    request' &lt;- liftIO parseRequest \"http://......\"\n                    let request = { series of set methods\n                                    to build the request }\n                    response &lt;- httpLBS request\n                    liftIO (L8.putStrnLn $ (getResponseBody response))\n</code></pre>\n\n<p>and here we come to the lucid function, Lucid can handle transformation <code>Html () -&gt; SpockAction ...</code>. <code>Html ()</code> is nothing else than <code>HtmlT Identity ()</code> so my first attempt was to feed lucid with <code>HtmlT IO ()</code>.</p>\n\n<pre><code>   lucid :: HtmlT IO () -&gt; SpockAction database session state ()\n   lucid document = do \n                        txt &lt;- renderTextT document       --&gt; inside IO (?)\n                        return html (TL.toStrict txt)     &lt;-- naive attempt to \n                                      return to \"somewhere\" of course stupid..\n</code></pre>\n\n<p>Maybe <code>IO</code> is not the good monad here? When I try the Identity monad (to have a <code>HtmlT Identity ()</code>) so if I define connect as <code>connect :: Identity Auth</code> then naturally it follows that I am asked for a FromJSON instance of Identity (arising from using httpJSON), maybe that's a potential solution once I am in the Identity monad I am able to wire things up and probably finish with a clean <code>Html ()</code> type which will be then executed smoothly by my lucid function.</p>\n\n<p>Thank you for any clue or hints, maybe my approach is totally wrong the whole thing I am working on is to query a restAPI website and view the result on a web server run with Spock.</p>\n"}, {"tags": ["haskell", "liquid-haskell"], "comments": [{"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "edited": false, "score": 2, "creation_date": 1559225754, "post_id": 56376882, "comment_id": 99360322, "body": "Correct syntax to declare length as measure is <code>{-@ measure length :: Foldable t =&gt; t a -&gt; Int @-}</code>. Seems LH does not see it&#39;s signature by default.."}], "answers": [{"comments": [{"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "edited": false, "score": 0, "creation_date": 1559228292, "post_id": 56380565, "comment_id": 99361704, "body": "Oh, it makes sense, and especially predefined <code>len</code>."}], "tags": [], "owner": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "is_accepted": true, "score": 8, "last_activity_date": 1559228648, "last_edit_date": 1559228648, "creation_date": 1559227641, "answer_id": 56380565, "question_id": 56376882, "link": "https://stackoverflow.com/questions/56376882/what-is-a-measure/56380565#56380565", "title": "What is a measure?", "body": "<p>A measure is just a function that can be run by LiquidHaskell at verification time, to be used in refinements and termination checking. You likely already knew this.</p>\n\n<p>The reason your first example \"works\" (I think it's incomplete as-is, but I can tell what you were going for) is that <code>len</code> is already defined as a measure <a href=\"https://github.com/ucsd-progsys/liquidhaskell/blob/211445762c9127e2f0e7d090978c844300fd1dfe/include/GHC/Base.spec#L12\" rel=\"noreferrer\">in the LiquidHaskell prelude</a> (technically it's a \"class measure\", which means it's polymorphic, and thus can be used both with <code>[]</code> lists and your custom <code>List</code>). Assuming you've added annotations for <code>Nil</code> and <code>Cons</code> as in <a href=\"https://stackoverflow.com/a/56327061\">this answer</a> from your earlier question, the <code>len</code> used in the refinement for <code>mymap</code> is not your <code>len</code>, but the prelude <code>len</code>, which is already a measure.</p>\n\n<p>In your second example, <code>measure</code> is required because <code>ln</code> is a new symbol in the measure namespace, and doesn't exist unless you make it.</p>\n"}], "owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 186, "favorite_count": 1, "accepted_answer_id": 56380565, "answer_count": 1, "score": 11, "last_activity_date": 1559228648, "creation_date": 1559213704, "last_edit_date": 1559222795, "question_id": 56376882, "link": "https://stackoverflow.com/questions/56376882/what-is-a-measure", "title": "What is a measure?", "body": "<p>I am reading <a href=\"http://www.cs.nott.ac.uk/~pszgmh/tpfa.pdf\" rel=\"noreferrer\">this</a> where I find this:</p>\n\n<blockquote>\n  <p><strong>Measures</strong> -- In order to allow Haskell functions to appear in refinement\n  types, we need to lift them to the refinement type level.</p>\n</blockquote>\n\n<p>And there are other documents asserting that <em>measures</em> are needed to use such function in contract. But I tried this:</p>\n\n<pre><code>{-@ len :: List a -&gt; Nat @-}\nlen :: List a -&gt; Int\nlen Nil           = 0\nlen (x `Cons` xs) = 1 + len xs\n\n{-@ mymap :: (a -&gt; b) -&gt; xs : List a -&gt; { ys : List b | len xs == len ys } @-}\nmymap :: (a -&gt; b) -&gt; List a -&gt; List b\nmymap _ Nil           = Nil\nmymap f (x `Cons` xs) = f x `Cons` mymap f xs\n</code></pre>\n\n<p>and this works but <code>len</code> is not <em>measure</em>. So what is measure exactly and when I need it?</p>\n\n<hr>\n\n<p>Another example which does not work without <code>measure</code>:</p>\n\n<pre><code>{-@ measure ln @-}\nln :: [a] -&gt; Int\nln [] = 0\nln (x:y) = 1 + ln y\n\n{-@ conc :: xs : [a] -&gt; ys : [a] -&gt; {zs : [a] | ln zs == ln xs + ln ys} @-}\nconc :: [a] -&gt; [a] -&gt; [a]\nconc [] ys = ys\nconc (x:xs) ys = x : (conc xs ys)\n</code></pre>\n\n<p>Usage of <code>{-@ measure length @-}</code> like I found in many documents leads to error <code>Cannot extract measure from haskell function</code> (ie. from <code>length</code>).</p>\n"}, {"tags": ["haskell", "tree"], "comments": [{"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1559207715, "post_id": 56372533, "comment_id": 99351674, "body": "I don&#39;t understand. How is that a tree at all? I get that conceptually <code>NodeData</code> describes a tree but in a CS perspective there are no tree like properties - no log n indexing or search, no links at all.  It&#39;s just an association list where each lookup key can have multiple values.  Did you mean for NodeData to entirely describe the tree&#39;s branch node?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1559219227, "post_id": 56372533, "comment_id": 99356846, "body": "Binary search trees support log-time indexing; not all trees have to."}, {"owner": {"reputation": 940, "user_id": 8393442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/649ba3617086819804333c4dc40a4715?s=128&d=identicon&r=PG", "display_name": "luispauloml", "link": "https://stackoverflow.com/users/8393442/luispauloml"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1559227312, "post_id": 56372533, "comment_id": 99361162, "body": "@ThomasM.DuBuisson No, I didn&#39;t mean it. <code>NodeData</code> should be used with some <code>Tree a</code> type to create the structure. I rewrote that part of the question. Perhaps now you understand what I mean."}], "answers": [{"comments": [{"owner": {"reputation": 940, "user_id": 8393442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/649ba3617086819804333c4dc40a4715?s=128&d=identicon&r=PG", "display_name": "luispauloml", "link": "https://stackoverflow.com/users/8393442/luispauloml"}, "edited": false, "score": 0, "creation_date": 1559227833, "post_id": 56373880, "comment_id": 99361462, "body": "What if the ids can&#39;t be <code>Ord</code>? I just edited the question to make this constraint explicit. And how can I update <code>value</code> based on the children&#39;s values?"}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "reply_to_user": {"reputation": 940, "user_id": 8393442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/649ba3617086819804333c4dc40a4715?s=128&d=identicon&r=PG", "display_name": "luispauloml", "link": "https://stackoverflow.com/users/8393442/luispauloml"}, "edited": false, "score": 0, "creation_date": 1559235116, "post_id": 56373880, "comment_id": 99365209, "body": "If they&#39;re hashable, you can use a hashmap instead. If they&#39;re not even hashable, just eq, then you probably can&#39;t do anything better than the same algorithm but with linear search as your lookup operation."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "reply_to_user": {"reputation": 940, "user_id": 8393442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/649ba3617086819804333c4dc40a4715?s=128&d=identicon&r=PG", "display_name": "luispauloml", "link": "https://stackoverflow.com/users/8393442/luispauloml"}, "edited": false, "score": 0, "creation_date": 1559235231, "post_id": 56373880, "comment_id": 99365265, "body": "And if you can&#39;t figure out how to look at the children of a node given a Tree, you are probably asking too complicated a question by starting with this business of reconstructing a tree based on a list of parent links."}], "tags": [], "owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "is_accepted": true, "score": 4, "last_activity_date": 1559202303, "creation_date": 1559202303, "answer_id": 56373880, "question_id": 56372533, "link": "https://stackoverflow.com/questions/56372533/how-to-create-a-tree-hierarchy-in-haskell/56373880#56373880", "title": "How to create a tree hierarchy in Haskell?", "body": "<p>I see no particularly clever single-pass solution to this. You simply have to bite the bullet and do two passes: one pass creates an index of the form <code>Map Id [Node]</code>, listing all the children of each node. Then a second pass consumes this index and reconstitutes it into a <code>Forest a</code>. Note it's not a <code>Tree a</code>, because there's no value to put at the root, and also because for all we know there are multiple roots.</p>\n\n<pre><code>import qualified Data.Map.Lazy as M\nimport qualified Data.Tree as T\n\nnewtype Id = Id Int deriving (Eq, Show, Ord)\ndata Node a = Node {id, parent :: Id, value :: a} deriving Show\n\ninput :: [Node String]\ninput = [ Node (Id 1) (Id 0) \"1\"\n        , Node (Id 2) (Id 1) \"1.1\"\n        , Node (Id 3) (Id 0) \"2\"\n        , Node (Id 4) (Id 2) \"1.1.1\"\n        , Node (Id 5) (Id 3) \"2.1\"\n        , Node (Id 6) (Id 1) \"1.2\"\n        ]\n\nindex :: [Node a] -&gt; M.Map Id [Node a]\nindex m = M.fromListWith (++) $ do\n  n@(Node this parent v) &lt;- m\n  pure (parent, [n])\n\nrecombine :: M.Map Id [Node a] -&gt; T.Forest a\nrecombine m = go (Id 0) -- Implied root, but a more thorough solution would be explicit\n  where go root = [ T.Node v (go idx)\n                  | Node idx p v &lt;- M.findWithDefault [] root m\n                  ]\n</code></pre>\n\n<p>After this, we have the tree we wanted:</p>\n\n<pre><code>&gt; putStr . T.drawForest . recombine . index $ input\n2\n|\n`- 2.1\n\n1\n|\n+- 1.2\n|\n`- 1.1\n   |\n   `- 1.1.1\n</code></pre>\n"}], "owner": {"reputation": 940, "user_id": 8393442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/649ba3617086819804333c4dc40a4715?s=128&d=identicon&r=PG", "display_name": "luispauloml", "link": "https://stackoverflow.com/users/8393442/luispauloml"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 242, "favorite_count": 0, "accepted_answer_id": 56373880, "answer_count": 1, "score": 0, "last_activity_date": 1559240448, "creation_date": 1559196379, "last_edit_date": 1559240448, "question_id": 56372533, "link": "https://stackoverflow.com/questions/56372533/how-to-create-a-tree-hierarchy-in-haskell", "title": "How to create a tree hierarchy in Haskell?", "body": "<p>How do I achieve the same result shown in <a href=\"https://stackoverflow.com/questions/192220/\">this question</a> using Haskell and non-binary trees, such as <a href=\"http://hackage.haskell.org/package/containers-0.6.0.1/docs/Data-Tree.html\" rel=\"nofollow noreferrer\"><code>Data.Tree</code></a>? Considering the record <code>NodeData { nodeID :: String , parentID :: String, value :: a }</code> to store data, and <code>Data.Tree</code> for the tree type, a tree would be:</p>\n\n<pre><code>Node $ NodeData \"id\" \"parent\" (value :: a) (children :: Forest (NodeData a)) :: Tree (NodeData a)\n</code></pre>\n\n<p>Now how could I update <code>value</code> based on the node's children's <code>value</code> and its own? The input table would be a list <code>[NodeData]</code>. <code>NodeData</code> and the ids could be made an instance of <code>Eq</code>, but not <code>Ord</code>.</p>\n"}, {"tags": ["haskell", "haskell-ffi"], "comments": [{"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 2, "creation_date": 1559202778, "post_id": 56372218, "comment_id": 99349540, "body": "Is there a reason a foreign import with an IO type of a C symbol isn&#39;t what you&#39;re wanting?  You&#39;d declare the C extern in the cxx file and have <code>foreign import ccall &quot;externed_getVal&quot; getVal :: CxxObj -&gt; IO CInt</code> in Haskell."}, {"owner": {"reputation": 181, "user_id": 9985445, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-y4ooBZ_hzRc/AAAAAAAAAAI/AAAAAAAAAtQ/dL_nPMm3FLM/photo.jpg?sz=128", "display_name": "James Strieter", "link": "https://stackoverflow.com/users/9985445/james-strieter"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1559225905, "post_id": 56372218, "comment_id": 99360400, "body": "No, there&#39;s no reason why that wouldn&#39;t be it. I read somewhere that FFI functions are not allowed to have side effects. I guess what I&#39;m really asking is  1) is that true and 2) if so, what to do about it."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 2, "creation_date": 1559239142, "post_id": 56372218, "comment_id": 99366920, "body": "It is not true."}], "answers": [{"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 3, "last_activity_date": 1559249233, "last_edit_date": 1559249233, "creation_date": 1559248470, "answer_id": 56385270, "question_id": 56372218, "link": "https://stackoverflow.com/questions/56372218/how-to-call-c-setters-getters-from-haskell/56385270#56385270", "title": "How to Call C++ Setters &amp; Getters from Haskell", "body": "<p>Note that the production of side effects isn't the issue.  It's \"impure\" versus \"pure\" functions that are important.  While <code>getVal</code> doesn't <em>cause</em> side effects, it <em>relies</em> on side effects to produce a value because it consults <code>presentLocation</code>.  In other words, it's an impure function.</p>\n\n<p>Haskell can call foreign functions whether they are pure or impure, you just need to give them appropriate signatures.  An impure function must be given an <code>IO a</code> return type.  A pure function can be given a non-<code>IO</code> return type.  (Of course, you <em>could</em> give a pure function an <code>IO</code> return type, too, but you don't have to and so usually wouldn't.)</p>\n\n<p>For example, suppose we have the simple C++ \"interface\":</p>\n\n<pre><code>int value = 0;   // Haskell code sets value directly\nextern \"C\" int getValue() { return value; }  // and gets it with this\n</code></pre>\n\n<p>If we <strong>incorrectly</strong> try to import <code>getValue</code> as a pure function:</p>\n\n<pre><code>foreign import ccall \"interface.cc &amp;value\" valuePtr :: Ptr CInt\nforeign import ccall \"interface.cc getValue\" getValue :: CInt  -- **NO NO NO!!!**\n</code></pre>\n\n<p>and test it like so:</p>\n\n<pre><code>main :: IO ()\nmain = do\n  print getValue\n  poke valuePtr 5\n  print getValue\n</code></pre>\n\n<p>we get incorrect output:</p>\n\n<pre><code>0\n0\n</code></pre>\n\n<p>Instead, we need to give <code>getValue</code> a type <code>IO CInt</code>:</p>\n\n<pre><code>foreign import ccall \"interface.cc getValue\" getValue :: IO CInt\n</code></pre>\n\n<p>With appropriate modifications to the rest of the program:</p>\n\n<pre><code>import Foreign\nimport Foreign.C\n\nforeign import ccall \"interface.cc &amp;value\" valuePtr :: Ptr CInt\nforeign import ccall \"interface.cc getValue\" getValue :: IO CInt\n\nmain :: IO ()\nmain = do\n  print =&lt;&lt; getValue\n  poke valuePtr 5\n  print =&lt;&lt; getValue\n</code></pre>\n\n<p>the output is as expected:</p>\n\n<pre><code>0\n5\n</code></pre>\n\n<p>Note that it's only the <strong>return</strong> value that should be given an <code>IO</code> type.  If we add an impure function that takes arguments, like:</p>\n\n<pre><code>extern \"C\" int getMultValue(int scale) { return value*scale; }\n</code></pre>\n\n<p>then you'd use:</p>\n\n<pre><code>foreign import ccall \"interface.cc getMultValue\" getMultValue :: CInt -&gt; IO CInt\n</code></pre>\n\n<p>The full programs:</p>\n\n<pre><code>// interface.cc\nint value = 0;\nextern \"C\" int getValue() { return value; }\nextern \"C\" int getMultValue(int scale) { return value*scale; }\n\n-- Main.hs\nimport Foreign\nimport Foreign.C\n\nforeign import ccall \"interface.cc &amp;value\" valuePtr :: Ptr CInt\nforeign import ccall \"interface.cc getValue\" getValue :: IO CInt\nforeign import ccall \"interface.cc getMultValue\" getMultValue :: CInt -&gt; IO CInt\n\nmain :: IO ()\nmain = do\n  print =&lt;&lt; getValue\n  poke valuePtr 5\n  print =&lt;&lt; getValue\n  print =&lt;&lt; getMultValue 5\n</code></pre>\n\n<p>Note that things will get a little more complicated when the functions or variables in question are actually methods / instance variables.  Haskell doesn't directly support working with C++ objects, so you need to build some kind of <code>extern \"C\"</code> interface and pass object pointers as explicit arguments.  If you run into trouble a little further along in your design, maybe post additional questions and we'll try to help.</p>\n"}], "owner": {"reputation": 181, "user_id": 9985445, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-y4ooBZ_hzRc/AAAAAAAAAAI/AAAAAAAAAtQ/dL_nPMm3FLM/photo.jpg?sz=128", "display_name": "James Strieter", "link": "https://stackoverflow.com/users/9985445/james-strieter"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 91, "favorite_count": 0, "accepted_answer_id": 56385270, "answer_count": 1, "score": 0, "last_activity_date": 1559249233, "creation_date": 1559194580, "question_id": 56372218, "link": "https://stackoverflow.com/questions/56372218/how-to-call-c-setters-getters-from-haskell", "title": "How to Call C++ Setters &amp; Getters from Haskell", "body": "<p>I know how to call pure C++ functions from Haskell, but wondering how to get GHC to accept functions that have side effects. </p>\n\n<p>I want Haskell to have read-only access to a C++ linked list, and exclusive write access to a C++ variable. For example:</p>\n\n<pre><code>class node {\n    // Some other class makes a linked list out of these\n    int x;\n    node* previous;\n    node* next;\n}\n\nclass myHaskellInterface {\n    node* presentLocation; // C++ decides what is regarded as current location\n\n    int getVal() {\n        // Haskell calls this to get information from C++\n        return presentLocation-&gt;x;\n    }\n\n    int haskellResults; // Store Haskell output here\n\n    void setVal(int x) {\n        // Haskell calls this to pass information back\n        haskellResults = x;\n    }\n\n};\n</code></pre>\n\n<p>Even though getVal() doesn't have side effects, it is part of a class that obviously has side effects, so it's not clear to me whether sneaky tricks are required to get GHC to accept it. </p>\n\n<p>setVal(int) clearly has side effects, so how do you make GHC not care?</p>\n"}, {"tags": ["haskell", "functional-programming"], "answers": [{"tags": [], "owner": {"reputation": 1275, "user_id": 11571245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vkCkX.png?s=128&g=1", "display_name": "typedfern", "link": "https://stackoverflow.com/users/11571245/typedfern"}, "is_accepted": true, "score": 4, "last_activity_date": 1559183358, "creation_date": 1559183358, "answer_id": 56370905, "question_id": 56370641, "link": "https://stackoverflow.com/questions/56370641/describing-the-first-few-evaluation-steps-of-a-given-foldr-function/56370905#56370905", "title": "Describing the first few evaluation steps of a given foldr function", "body": "<p>The key here is that the foldr operation is constructing a function, <em>then</em> applying it to a and b; we can clarify it by adding parentheses:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>mystery a b c xs = \n(foldr (\\x rec a b -&gt; rec x (b + c)) (\\a b -&gt; a + b - c) xs) a b\n</code></pre>\n\n<p>If the xs list is empty, you get simply the initial function <code>\\a b -&gt; a + b - c</code>, which is then applied to a and b.</p>\n\n<p>if it is not empty, then it makes succesive transformations to that function (in each iteration, \"rec\" is the previous function, which is used to construct a new one).</p>\n\n<p>To illustrate, let's run the foldr by hand for <code>mystery 1 2 3 [1, 2, 3]</code>;\ninitially, we have:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>foldr (\\x rec a b -&gt; rec x (b + 3)) (\\a b -&gt; a + b - 3) [1,2,3]\n</code></pre>\n\n<p>Applying the equations for foldr:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>foldr f z []     = z \nfoldr f z (x:xs) = f x (foldr f z xs)\n</code></pre>\n\n<p>Reduces the expression to:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>(\\rec a b -&gt; rec 1 (b + 3)) (foldr (\\x rec a b -&gt; rec x (b + 3)) (\\a b -&gt; a + b - 3) [2,3])\n</code></pre>\n\n<p>Repeating for the next value in the list we get:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>(\\rec a b -&gt; rec 1 (b + 3)) (\\rec a b -&gt; rec 2 (b + 3)) (foldr (\\x rec a b -&gt; rec x (b + 3)) (\\a b -&gt; a + b - 3) [3])\n</code></pre>\n\n<p>Then, for the last one:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>(\\rec a b -&gt; rec 1 (b + 3)) (\\rec a b -&gt; rec 2 (b + 3)) (\\rec a b -&gt; rec 3 (b + 3)) (\\a b -&gt; a + b - 3)\n</code></pre>\n\n<p>We need to compose those functions, to create the final function - replacing \"rec\" with the previous function:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>(\\rec a b -&gt; rec 1 (b + 3)) (\\rec a b -&gt; rec 2 (b + 3)) (\\rec a b -&gt; rec 3 (b + 3)) (\\a b -&gt; a + b - 3)\n=&gt; (\\rec a b -&gt; rec 1 (b + 3)) (\\rec a b -&gt; rec 2 (b + 3)) (\\a b -&gt; (\\a b -&gt; a + b - 3) 3 (b + 3))\n=&gt; (\\rec a b -&gt; rec 1 (b + 3)) (\\rec a b -&gt; rec 2 (b + 3)) (\\a b -&gt; 3 + (b + 3) - 3))\n=&gt; (\\rec a b -&gt; rec 1 (b + 3)) (\\a b -&gt; (\\a b -&gt; 3 + (b + 3) - 3)) 2 (b + 3))\n=&gt; (\\rec a b -&gt; rec 1 (b + 3)) (\\a b -&gt; 3 + ((b + 3) + 3) - 3))\n=&gt; \\a b -&gt; (\\a b -&gt; 3 + ((b + 3) + 3) - 3)) 1 (b + 3)\n=&gt; \\a b -&gt; 3 + (((b + 3) + 3) + 3) - 3)\n=&gt; \\a b -&gt; b + 9\n</code></pre>\n\n<p>then, we apply <code>\\a b -&gt; b + 9</code> to the original \"a\" and \"b\" (which are 1 and 2), and get 2 + 9 = 11</p>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 3, "last_activity_date": 1559205680, "creation_date": 1559205680, "answer_id": 56374653, "question_id": 56370641, "link": "https://stackoverflow.com/questions/56370641/describing-the-first-few-evaluation-steps-of-a-given-foldr-function/56374653#56374653", "title": "Describing the first few evaluation steps of a given foldr function", "body": "<p>Substituting the definition for <code>foldr</code>, the function reveals itself to be</p>\n\n<pre><code>mystery a b c xs = \n = foldr (\\x rec a b -&gt; rec x (b + c)) (\\a b -&gt; a + b - c) xs a b\n = let { g x r   a b =  r   x (b + c); z a b =  a + b - c } in \n     foldr g z xs a b\n     =&gt;  foldr g z [] a b = z a b            = a  + b       - c\n     =&gt;  foldr g z [x1,x2,...,xn] a  b\n          = g x1 (foldr g z [x2,...,xn]) a b   -- g x r a b = r x (b+c)\n          = foldr g z [x2,...,xn] x1 (b+c)\n          = foldr g z [x3,...,xn] x2 (b+c*2)\n          = foldr g z [         ] xn (b+c*n) = xn + b + c*n - c\n = last (a:xs) + b + c * (length xs - 1)\n</code></pre>\n\n<p>Naming the two lambda functions, using short names, makes it much easier to handle the expressions visually.</p>\n"}, {"tags": [], "owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "is_accepted": false, "score": 0, "last_activity_date": 1563073110, "last_edit_date": 1563073110, "creation_date": 1559274571, "answer_id": 56388433, "question_id": 56370641, "link": "https://stackoverflow.com/questions/56370641/describing-the-first-few-evaluation-steps-of-a-given-foldr-function/56388433#56388433", "title": "Describing the first few evaluation steps of a given foldr function", "body": "<p>When the folding function given to <code>foldr</code> takes more than two parameters, it's often really a <code>foldl</code> in disguise. Let's see if that's true here.</p>\n\n<pre><code>mystery a b c xs = foldr (\\x rec a b -&gt; rec x (b + c)) (\\a b -&gt; a + b - c) xs a b\n</code></pre>\n\n<p>Uncurry the two \"extra\" arguments to the folding function:</p>\n\n<pre><code>mystery a b c xs = foldr (\\x rec (a,b) -&gt; rec (x,b + c)) (\\(a,b) -&gt; a + b - c) xs (a,b)\n</code></pre>\n\n<p>Extract function <code>f</code> out of the folding function, and <code>finalStep</code> from the nil case:</p>\n\n<pre><code>mystery a b c xs = foldr (\\x rec z -&gt; rec (f z x)) finalStep xs (a,b)\n  where\n    f (a,b) x = (x,b + c)\n    finalStep (a,b) = a + b - c\n</code></pre>\n\n<p>Replace <code>foldr</code> with explicit recursion:</p>\n\n<pre><code>mystery a b c xs = go xs (a,b)\n  where\n    go [] = finalStep\n    go (x:xs) = \\z -&gt; go xs (f z x)\n    f (a,b) x = (x,b + c)\n    finalStep (a,b) = a + b - c\n</code></pre>\n\n<p>Move the call to <code>finalStep</code> outside of <code>go</code>:</p>\n\n<pre><code>mystery a b c xs = finalStep $ go xs (a,b)\n  where\n    go [] = id\n    go (x:xs) = \\z -&gt; go xs (f z x)\n    f (a,b) x = (x,b + c)\n    finalStep (a,b) = a + b - c\n</code></pre>\n\n<p>Eta-expand <code>go</code> and reverse the order of the arguments:</p>\n\n<pre><code>mystery a b c xs = finalStep $ go (a,b) xs\n  where\n    go z [] = z\n    go z (x:xs) = go (f z x) xs\n    f (a,b) x = (x,b + c)\n    finalStep (a,b) = a + b - c\n</code></pre>\n\n<p>Now, <code>go</code> is exactly the definition of <code>foldl f</code>, so replace it with that:</p>\n\n<pre><code>mystery a b c xs = finalStep $ foldl f (a,b) xs\n  where\n    f (a,b) x = (x,b + c)\n    finalStep (a,b) = a + b - c\n</code></pre>\n\n<p>Now we have a very simple fold operation that can be trivially worked through. The key takeaway from the above is the fact that <code>foldr (\\x rec -&gt; rec . f x) finalStep xs z</code> and <code>finalStep $ foldl (flip f) z xs</code> are the same, for any <code>f</code>, <code>z</code>, and <code>xs</code>.</p>\n"}], "owner": {"reputation": 81, "user_id": 10264322, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-DtMZ1vg7RJI/AAAAAAAAAAI/AAAAAAAAABQ/22dkNVGjvW8/photo.jpg?sz=128", "display_name": "Ketho", "link": "https://stackoverflow.com/users/10264322/ketho"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "accepted_answer_id": 56370905, "answer_count": 3, "score": 1, "last_activity_date": 1563073110, "creation_date": 1559180777, "last_edit_date": 1559216012, "question_id": 56370641, "link": "https://stackoverflow.com/questions/56370641/describing-the-first-few-evaluation-steps-of-a-given-foldr-function", "title": "Describing the first few evaluation steps of a given foldr function", "body": "<p>The following function is given:</p>\n\n<pre><code>mystery a b c xs = \n  foldr (\\x rec a b -&gt; rec x (b + c)) (\\a b -&gt; a + b - c) xs a b\n</code></pre>\n\n<p>I know what the function does roughly but I have a hard time really understanding the intermediate steps. I picked following example:</p>\n\n<pre><code>mystery 1 2 3 [1, 2, 3]\n</code></pre>\n\n<p>Especially the use of <code>rec</code> is giving me a hard time. I assume that one of the final steps looks like this:</p>\n\n<pre><code>(\\a b -&gt; 3 + (b + 3 + 3 + 3) - 3) [] 1 2\n</code></pre>\n\n<p>So the output is <code>11</code>. Could someone describe the first few steps of the execution? What happens after:</p>\n\n<pre><code>foldr (\\x rec a b -&gt; rec x (b + 3)) (\\a b -&gt; a + b - 3) [1, 2, 3] 1 2\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 1, "creation_date": 1559179323, "post_id": 56370313, "comment_id": 99343401, "body": "This code type checks?  Looks like the parameters the lambda are reversed"}], "answers": [{"comments": [{"owner": {"reputation": 3, "user_id": 11575665, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-XhvgsC4eXjI/AAAAAAAAAAI/AAAAAAAAAAc/ZkQ1fSD4isY/photo.jpg?sz=128", "display_name": "Juan Gonzalez", "link": "https://stackoverflow.com/users/11575665/juan-gonzalez"}, "edited": false, "score": 0, "creation_date": 1559313333, "post_id": 56370519, "comment_id": 99392599, "body": "Since you said it should work I went through the code, and I found another typo. In the lambda I had m, instead of mp. Now it works. Thank you and sorry for wasting your time."}], "tags": [], "owner": {"reputation": 1275, "user_id": 11571245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vkCkX.png?s=128&g=1", "display_name": "typedfern", "link": "https://stackoverflow.com/users/11571245/typedfern"}, "is_accepted": true, "score": 2, "last_activity_date": 1559179607, "creation_date": 1559179607, "answer_id": 56370519, "question_id": 56370313, "link": "https://stackoverflow.com/questions/56370313/changing-the-value-for-several-keys-in-a-map-in-haskell/56370519#56370519", "title": "Changing the value for several keys in a map in Haskell", "body": "<p>Your code does not compile for me; you sure you pasted it correctly? If I switch the parameters for the lambda:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>change m ns c = foldr (\\k mp -&gt; Map.insert k c mp) m ns\n</code></pre>\n\n<p>or change the foldr to a foldl:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>change m ns c = foldl (\\mp k -&gt; Map.insert k c mp) m ns\n</code></pre>\n\n<p>the code compiles (and inserts all the keys) both ways.</p>\n"}], "owner": {"reputation": 3, "user_id": 11575665, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-XhvgsC4eXjI/AAAAAAAAAAI/AAAAAAAAAAc/ZkQ1fSD4isY/photo.jpg?sz=128", "display_name": "Juan Gonzalez", "link": "https://stackoverflow.com/users/11575665/juan-gonzalez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 159, "favorite_count": 0, "accepted_answer_id": 56370519, "answer_count": 1, "score": -1, "last_activity_date": 1559226194, "creation_date": 1559177743, "last_edit_date": 1559226194, "question_id": 56370313, "link": "https://stackoverflow.com/questions/56370313/changing-the-value-for-several-keys-in-a-map-in-haskell", "title": "Changing the value for several keys in a map in Haskell", "body": "<p>I need to change the value in a Map for several keys to a given value. </p>\n\n<p>I have this code:</p>\n\n<pre><code>change :: Map.Map Integer Char -&gt; [Integer] -&gt; Char -&gt; Map.Map Integer Char\nchange m ns c = foldr (\\k mp -&gt; Map.insert k c m) m ns\n</code></pre>\n\n<p>Only the first key in the list is changed. I can think other ways to do it but I'm trying to understand folds better.</p>\n\n<p>Sorry, I've corrected the code.</p>\n\n<p>Here's a ghci session:</p>\n\n<pre><code>*Maps&gt; m\nfromList [(3,'?'),(5,'?'),(7,'?'),(9,'?'),(11,'?'),(13,'?'),(15,'?'),(17,'?'),(19,'?'),(21,'?'),(23,'?'),(25,'?'),(27,'?'),(29,'?')]\nit :: (Ord k, Num k, Enum k) =&gt; Map.Map k Char\n(0.02 secs, 149,192 bytes)\n*Maps&gt; ns\n[9,15,21,27]\nit :: Num a =&gt; [a]\n(0.00 secs, 59,000 bytes)\n*Maps&gt; change m ns 'c'\nfromList [(3,'?'),(5,'?'),(7,'?'),(9,'c'),(11,'?'),(13,'?'),(15,'?'),(17,'?'),(19,'?'),(21,'?'),(23,'?'),(25,'?'),(27,'?'),(29,'?')]\nit :: Map.Map Integer Char\n(0.02 secs, 149,752 bytes)\n</code></pre>\n\n<p>Only the value for 9 is changed.</p>\n"}]