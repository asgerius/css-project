[{"tags": ["haskell", "filter", "list-comprehension"], "comments": [{"owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 0, "creation_date": 1553154661, "post_id": 55271298, "comment_id": 97281817, "body": "Better put the innner list comprehension for <code>fixEquals</code> in a separated function."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1553199339, "post_id": 55271298, "comment_id": 97306552, "body": "Are these sequences of possible characters the original form of the constraint, or are they derived from some more... sensible... constraints? If the latter, what are the original constraints?"}, {"owner": {"reputation": 1435, "user_id": 2335363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/11bzw.jpg?s=128&g=1", "display_name": "Adahus", "link": "https://stackoverflow.com/users/2335363/adahus"}, "edited": false, "score": 0, "creation_date": 1553245752, "post_id": 55271298, "comment_id": 97320647, "body": "I&#39;m creating arithmetic puzzles where the answers are equations. Sometimes I say directly what some of the symbols are.  This means that I might know that an equation is &quot;49??=??3&quot; and I need to find all equations which fit that template.  In this case &quot;49/7=4+3&quot; or &quot;49*7=343&quot; would be possible solutions.  Sometimes I give that a symbol is a digit &quot;0123456789&quot; or an operator &quot;+-*/&quot; without specifying it exactly - just give a set of possibilities.  Does that explain why I&#39;m choosing the constraints as I have?"}], "answers": [{"comments": [{"owner": {"reputation": 1435, "user_id": 2335363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/11bzw.jpg?s=128&g=1", "display_name": "Adahus", "link": "https://stackoverflow.com/users/2335363/adahus"}, "edited": false, "score": 0, "creation_date": 1553143307, "post_id": 55271344, "comment_id": 97278492, "body": "filter (not . any null) is more elegant - thanks.  but still has the issue that it creates 4 lists and then throws 2 away which I&#39;d rather avoid."}], "tags": [], "owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "is_accepted": false, "score": 3, "last_activity_date": 1553122932, "last_edit_date": 1553122932, "creation_date": 1553122613, "answer_id": 55271344, "question_id": 55271298, "link": "https://stackoverflow.com/questions/55271298/haskell-exclude-lists-based-on-a-test-in-a-nested-list-comprehension/55271344#55271344", "title": "Haskell - Exclude lists based on a test in a nested list comprehension", "body": "<p>Let </p>\n\n<pre><code>xs = [[\"\",\"34\",\"56\",\"78\"],[\"12\",\"=\",\"56\",\"78\"],[\"12\",\"34\",\"=\",\"78\"],[\"12\",\"34\",\"56\",\"\"]]\n</code></pre>\n\n<p>in </p>\n\n<pre><code>filter (not . any null) xs\n</code></pre>\n\n<p>will give</p>\n\n<pre><code>[[\"12\",\"=\",\"56\",\"78\"],[\"12\",\"34\",\"=\",\"78\"]]\n</code></pre>\n\n<p>If you want list comprehension then do</p>\n\n<pre><code>[x | x &lt;- xs, and [not $ null y | y &lt;- x]]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1435, "user_id": 2335363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/11bzw.jpg?s=128&g=1", "display_name": "Adahus", "link": "https://stackoverflow.com/users/2335363/adahus"}, "edited": false, "score": 0, "creation_date": 1553143389, "post_id": 55271501, "comment_id": 97278508, "body": "Thanks @Lorenzo - certainly solves my problem more clearly. You tantalizingly suggest I could probably find a better data structure - any thoughts on the type of thing I might explore?"}, {"owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "reply_to_user": {"reputation": 1435, "user_id": 2335363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/11bzw.jpg?s=128&g=1", "display_name": "Adahus", "link": "https://stackoverflow.com/users/2335363/adahus"}, "edited": false, "score": 0, "creation_date": 1553154472, "post_id": 55271501, "comment_id": 97281738, "body": "@Adahus what is the real problem you want to solve/are working on?"}, {"owner": {"reputation": 1435, "user_id": 2335363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/11bzw.jpg?s=128&g=1", "display_name": "Adahus", "link": "https://stackoverflow.com/users/2335363/adahus"}, "reply_to_user": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 0, "creation_date": 1553157783, "post_id": 55271501, "comment_id": 97283214, "body": "@Elmex80s My overall program involves finding arithmetic equations which fit certain masks.  I tried generating all sequences of characters and then parsing to see if they are balanced equations but it was too inefficient as I was trying loads of totally invalid strings (e.g. &quot;999+=&quot;).  I am now implementing a new approach which requires the routine discussed above.  I am confident of the improved efficiency as I have previously implemented much of it in Swift but I want to translate into Haskell and as I&#39;m learning Haskell it seems best to build from the bottom up.  Thanks for asking."}, {"owner": {"reputation": 2158, "user_id": 9991455, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2ff5d55afd5d829849efbf27962dd320?s=128&d=identicon&r=PG&f=1", "display_name": "Lorenzo", "link": "https://stackoverflow.com/users/9991455/lorenzo"}, "edited": false, "score": 0, "creation_date": 1553170612, "post_id": 55271501, "comment_id": 97290181, "body": "Yes, usually the approach in Haskell is completely different from what you&#39;d use in imperative programming. I can&#39;t really understand what you want to do but I&#39;d say having the <code>=</code> in a string doesn&#39;t seem right. Maybe have a look at the Either monad or make your own data type"}, {"owner": {"reputation": 1435, "user_id": 2335363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/11bzw.jpg?s=128&g=1", "display_name": "Adahus", "link": "https://stackoverflow.com/users/2335363/adahus"}, "edited": false, "score": 0, "creation_date": 1553204099, "post_id": 55271501, "comment_id": 97308469, "body": "To Swift&#39;s credit it does move into the functional programming realm as well as it&#39;s imperative core. It certainly has map, filter, reduce and it&#39;s extendable into composability (Search &quot;Swift Point Free&quot; if interested.).  In fact, I came to Haskell by following a thread from Swift to PointFree to Haskell). But yes - Haskell is purely functional so a different approach is certainly needed."}], "tags": [], "owner": {"reputation": 2158, "user_id": 9991455, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2ff5d55afd5d829849efbf27962dd320?s=128&d=identicon&r=PG&f=1", "display_name": "Lorenzo", "link": "https://stackoverflow.com/users/9991455/lorenzo"}, "is_accepted": true, "score": 3, "last_activity_date": 1553125759, "last_edit_date": 1553125759, "creation_date": 1553123786, "answer_id": 55271501, "question_id": 55271298, "link": "https://stackoverflow.com/questions/55271298/haskell-exclude-lists-based-on-a-test-in-a-nested-list-comprehension/55271501#55271501", "title": "Haskell - Exclude lists based on a test in a nested list comprehension", "body": "<p>I don't know if this is any cleaner than your code, but it might be a bit more clear and maybe more efficient using a recursion:</p>\n\n<pre><code>fixEquals = init . f\nf :: [String] -&gt; [[String]]\nf [] = [[]]\nf (x:xs) | '=' `elem` x = (\"=\":removeEq xs) : map (removeEq [x] ++) (f xs)\n         | otherwise    = map (x:) (f xs)\n\nremoveEq :: [String] -&gt; [String]\nremoveEq = map (filter (/= '='))\n</code></pre>\n\n<p>The way it works is that, if there's an <code>'='</code> in the current string, then it splits the return into two, if not just calls recursively. The <code>init</code> is needed as in the last element returned there's no equal in any string.</p>\n\n<p>Finally, I believe you can probably find a better data structure to do what you need to achieve instead of using list of strings</p>\n"}, {"comments": [{"owner": {"reputation": 1435, "user_id": 2335363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/11bzw.jpg?s=128&g=1", "display_name": "Adahus", "link": "https://stackoverflow.com/users/2335363/adahus"}, "edited": false, "score": 0, "creation_date": 1553194085, "post_id": 55286823, "comment_id": 97304313, "body": "This is very nice - thankyou - and you&#39;ve gone further too which is useful.  I&#39;m getting an issue - my compiler doesn&#39;t like the guard: I get: error: Variable not in scope: guard :: Bool -&gt; [a0] and it underlines the word guard?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 1435, "user_id": 2335363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/11bzw.jpg?s=128&g=1", "display_name": "Adahus", "link": "https://stackoverflow.com/users/2335363/adahus"}, "edited": false, "score": 1, "creation_date": 1553194937, "post_id": 55286823, "comment_id": 97304705, "body": "@Adahus <code>guard</code> is available from the <code>Control.Monad</code> module."}, {"owner": {"reputation": 1435, "user_id": 2335363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/11bzw.jpg?s=128&g=1", "display_name": "Adahus", "link": "https://stackoverflow.com/users/2335363/adahus"}, "edited": false, "score": 0, "creation_date": 1553199084, "post_id": 55286823, "comment_id": 97306462, "body": "That sorts it - now works a treat.  Great stuff.  I stumbled across mapM before so good to see it in action. Thanks"}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "reply_to_user": {"reputation": 1435, "user_id": 2335363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/11bzw.jpg?s=128&g=1", "display_name": "Adahus", "link": "https://stackoverflow.com/users/2335363/adahus"}, "edited": false, "score": 1, "creation_date": 1553462045, "post_id": 55286823, "comment_id": 97383028, "body": "@Adahus: If you run into <code>traverse</code>/<code>traverse_</code> (or their flipped cousins <code>for</code>/<code>for_</code>), they\u2019re equivalent to the older <code>mapM</code>/<code>mapM_</code> and <code>forM</code>/<code>forM_</code>, but slightly more general in that they work on <code>Applicative</code> instead of <code>Monad</code>, just like <code>return</code> vs. <code>pure</code>. (As a matter of style I prefer to just always use the <code>Applicative</code> versions for consistency.)"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 2, "last_activity_date": 1553192156, "creation_date": 1553192156, "answer_id": 55286823, "question_id": 55271298, "link": "https://stackoverflow.com/questions/55271298/haskell-exclude-lists-based-on-a-test-in-a-nested-list-comprehension/55286823#55286823", "title": "Haskell - Exclude lists based on a test in a nested list comprehension", "body": "<p>I think I'd probably do it this way. First, a preliminary that I've written so many times it's practically burned into my fingers by now:</p>\n\n<pre><code>zippers :: [a] -&gt; [([a], a, [a])]\nzippers = go [] where\n    go _ [] = []\n    go b (h:e) = (b,h,e):go (h:b) e\n</code></pre>\n\n<p>Probably running it once or twice in ghci will be a more clear explanation of what this does than any English writing I could do:</p>\n\n<pre><code>&gt; zippers \"abcd\"\n[(\"\",'a',\"bcd\"),(\"a\",'b',\"cd\"),(\"ba\",'c',\"d\"),(\"cba\",'d',\"\")]\n</code></pre>\n\n<p>In other words, it gives a way of selecting each element of a list in turn, giving the \"leftovers\" of what was before and after the selection point. Given that tool, here's our plan: we'll nondeterministically choose a <code>String</code> to serve as our equals sign, double-check that we've got an equals sign in the first place, and then clear out the equals from the others. So:</p>\n\n<pre><code>fixEquals ss = do\n    (prefix, s, suffix) &lt;- zippers ss\n    guard ('=' `elem` s)\n    return (reverse (deleteEquals prefix) ++ [\"=\"] ++ deleteEquals suffix)\n\ndeleteEquals = map (filter ('='/=))\n</code></pre>\n\n<p>Let's try it:</p>\n\n<pre><code>&gt; fixEquals [\"12\", \"34=\", \"56=\", \"78\"]\n[[\"12\",\"=\",\"56\",\"78\"],[\"12\",\"34\",\"=\",\"78\"]]\n</code></pre>\n\n<p>Perfect! But this is just a stepping-stone to actually generating the equations, right? It turns out to be not that hard to go all the way in one step, skipping this intermediate. Let's do that:</p>\n\n<pre><code>equations ss = do\n    (prefixes, s, suffixes) &lt;- zippers ss\n    guard ('=' `elem` s)\n    prefix &lt;- mapM (filter ('='/=)) (reverse prefixes)\n    suffix &lt;- mapM (filter ('='/=)) suffixes\n    return (prefix ++ \"=\" ++ suffix)\n</code></pre>\n\n<p>And we can try it in ghci:</p>\n\n<pre><code>&gt; equations [\"12\", \"34=\", \"56=\", \"78\"]\n[\"1=57\",\"1=58\",\"1=67\",\"1=68\",\"2=57\",\"2=58\",\"2=67\",\"2=68\",\"13=7\",\"13=8\",\"14=7\",\"14=8\",\"23=7\",\"23=8\",\"24=7\",\"24=8\"]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 6367, "user_id": 6914441, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bbc12c764b93fa915b8e5384f521fe12?s=128&d=identicon&r=PG&f=1", "display_name": "jferard", "link": "https://stackoverflow.com/users/6914441/jferard"}, "is_accepted": false, "score": 1, "last_activity_date": 1553712030, "creation_date": 1553712030, "answer_id": 55384405, "question_id": 55271298, "link": "https://stackoverflow.com/questions/55271298/haskell-exclude-lists-based-on-a-test-in-a-nested-list-comprehension/55384405#55384405", "title": "Haskell - Exclude lists based on a test in a nested list comprehension", "body": "<p>The easiest waty to achieve what you want is to create all the combinations and to filter the ones that have a meaning:</p>\n\n<pre><code>Prelude&gt; test = [\"12\", \"34=\", \"56=\", \"78\"]\nPrelude&gt; sequence test\n[\"1357\",\"1358\",\"1367\",\"1368\",\"13=7\",\"13=8\",\"1457\",\"1458\",\"1467\",\"1468\",\"14=7\",\"14=8\",\"1=57\",\"1=58\",\"1=67\",\"1=68\",\"1==7\",\"1==8\",\"2357\",\"2358\",\"2367\",\"2368\",\"23=7\",\"23=8\",\"2457\",\"2458\",\"2467\",\"2468\",\"24=7\",\"24=8\"\nPrelude&gt; filter ((1==).length.filter('='==)) $ sequence test\n[\"13=7\",\"13=8\",\"14=7\",\"14=8\",\"1=57\",\"1=58\",\"1=67\",\"1=68\",\"23=7\",\"23=8\",\"24=7\",\"24=8\",\"2=57\",\"2=58\",\"2=67\",\"2=68\"]\n</code></pre>\n\n<p>You pointed the drawback: imagine we have the followig list of strings: <code>[\"=\", \"=\", \"0123456789\", \"0123456789\"]</code>. We will generate 100 combinations and drop them all.</p>\n\n<p>You can look at the combinations as a tree. For the <code>[\"12\", \"34\"]</code>, you have:</p>\n\n<pre><code>  /  \\\n 1    2\n/ \\  / \\\n3 4  3 4\n</code></pre>\n\n<p>You can prune the tree: just ignore the subtrees when you have two <code>=</code> on the path.\nLet's try to do it. First, a simple <code>combinations</code> function:</p>\n\n<pre><code>Prelude&gt; :set +m\nPrelude&gt; let combinations :: [String] -&gt; [String]\nPrelude|     combinations [] = [\"\"]\nPrelude|     combinations (cs:ts) = [c:t | c&lt;-cs, t&lt;-combinations ts]\nPrelude|\nPrelude&gt; combinations test\n[\"1357\",\"1358\",\"1367\",\"1368\",\"13=7\",\"13=8\",\"1457\",\"1458\",\"1467\",\"1468\",\"14=7\",\"14=8\",\"1=57\",\"1=58\",\"1=67\",\"1=68\",\"1==7\",\"1==8\",\"2357\",\"2358\",\"2367\",\"2368\",\"23=7\",\"23=8\",\"2457\",\"2458\",\"2467\",\"2468\",\"24=7\",\"24=8\", ...]\n</code></pre>\n\n<p>Second, we need a variable to store the current number of <code>=</code> signs met:</p>\n\n<ul>\n<li>if we find a second <code>=</code> sign, just drop the subtree</li>\n<li>if we reach the end of a combination with no <code>=</code>, drop the combination</li>\n</ul>\n\n<p>That is: </p>\n\n<pre><code>Prelude&gt; let combinations' :: [String] -&gt; Int -&gt; [String]\nPrelude|     combinations' [] n= if n==1 then [\"\"] else []\nPrelude|     combinations' (cs:ts) n = [c:t | c&lt;-cs, let p = n+(fromEnum $ c=='='), p &lt;= 1, t&lt;-combinations' ts p]\nPrelude|\nPrelude&gt; combinations' test 0\n[\"13=7\",\"13=8\",\"14=7\",\"14=8\",\"1=57\",\"1=58\",\"1=67\",\"1=68\",\"23=7\",\"23=8\",\"24=7\",\"24=8\",\"2=57\",\"2=58\",\"2=67\",\"2=68\"]\n</code></pre>\n\n<ul>\n<li>We use <code>p</code> as the new number of <code>=</code> sign on the path: if <code>p&gt;1</code>, drop the subtree.</li>\n<li>If <code>n</code> is zero, we don't have any <code>=</code> sign in the path, drop the combination.</li>\n</ul>\n\n<p>You may use the variable <code>n</code> to store more information, eg type of the last char (to avoid <code>+*</code> sequences).</p>\n"}], "owner": {"reputation": 1435, "user_id": 2335363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/11bzw.jpg?s=128&g=1", "display_name": "Adahus", "link": "https://stackoverflow.com/users/2335363/adahus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 179, "favorite_count": 0, "accepted_answer_id": 55271501, "answer_count": 4, "score": 0, "last_activity_date": 1553712030, "creation_date": 1553122259, "question_id": 55271298, "link": "https://stackoverflow.com/questions/55271298/haskell-exclude-lists-based-on-a-test-in-a-nested-list-comprehension", "title": "Haskell - Exclude lists based on a test in a nested list comprehension", "body": "<p>I want to create a series of possible equations based on a general specification:</p>\n\n<pre><code>test = [\"12\", \"34=\", \"56=\", \"78\"]\n</code></pre>\n\n<p>Each string (e.g. \"12\") represents a possible character at that location, in this case '1' or '2'.)\nSo possible equations from test would be \"13=7\" or \"1=68\".\nI know the examples I give are not balanced but that's because I'm deliberately giving a simplified short string.\n(I also know that I could use 'sequence' to search all possibilities but I want to be more intelligent so I need a different approach explained below.)</p>\n\n<p>What I want is to try fixing each of the equals in turn and then removing all other equals in the equation.  So I want:</p>\n\n<pre><code>[[\"12\",\"=\",\"56\",\"78\"],[\"12\",\"34\",\"=\",\"78\u201d]]\n</code></pre>\n\n<p>I've written this nested list comprehension:\n(it needs: {-# LANGUAGE ParallelListComp #-} )</p>\n\n<pre><code>fixEquals :: [String] -&gt; [[String]]\nfixEquals re\n  = [\n      [\n        if index == outerIndex then equals else remain \n        | equals &lt;- map (filter (== '=')) re\n        | remain &lt;- map (filter (/= '=')) re\n        | index &lt;- [1..]\n      ]\n\n      | outerIndex &lt;- [1..length re]\n    ]\n</code></pre>\n\n<p>This produces:</p>\n\n<pre><code>[[\"\",\"34\",\"56\",\"78\"],[\"12\",\"=\",\"56\",\"78\"],[\"12\",\"34\",\"=\",\"78\"],[\"12\",\"34\",\"56\",\"\u201d]]\n</code></pre>\n\n<p>but I want to filter out any with empty lists within them.  i.e. in this case, the first and last.</p>\n\n<p>I can do:</p>\n\n<pre><code>countOfEmpty :: (Eq a) =&gt; [[a]] -&gt; Int \ncountOfEmpty = length . filter (== [])\n\nfixEqualsFiltered :: [String] -&gt; [[String]]\nfixEqualsFiltered re = filter (\\x -&gt; countOfEmpty x == 0) (fixEquals re)\n</code></pre>\n\n<p>so that \"fixEqualsFiltered test\" gives:</p>\n\n<pre><code>[[\"12\",\"=\",\"56\",\"78\"],[\"12\",\"34\",\"=\",\"78\u201d]]\n</code></pre>\n\n<p>which is what I want but it doesn\u2019t seem elegant.\nI can\u2019t help thinking there\u2019s another way to filter these out.\nAfter all, it\u2019s whenever \"equals\" is used in the if statement and is empty that we want to drop the equals so it seems a waste to build the list (e.g. [\"\",\"34\",\"56\",\"78\u201d] and then ditch it.)</p>\n\n<p>Any thoughts appreciated.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1553115780, "post_id": 55270094, "comment_id": 97271414, "body": "What does <code>Empty</code> provide that <code>New []</code> does not?"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1553115870, "post_id": 55270094, "comment_id": 97271461, "body": "it&#39;s worth observing that your <code>New</code> type is essentially identical (&quot;isomorphic&quot; in the jargon) to <code>Maybe [Int]</code>"}, {"owner": {"user_type": "does_not_exist", "display_name": "user9660393"}, "edited": false, "score": 0, "creation_date": 1553115903, "post_id": 55270094, "comment_id": 97271483, "body": "New has an [Int] arg while Empty has no args."}, {"owner": {"user_type": "does_not_exist", "display_name": "user9660393"}, "edited": false, "score": 0, "creation_date": 1553115932, "post_id": 55270094, "comment_id": 97271503, "body": "So I have to address both New [Int] and Empty in the definition?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1553115971, "post_id": 55270094, "comment_id": 97271522, "body": "Yes, because those are both values of type <code>New</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 3, "creation_date": 1553116030, "post_id": 55270094, "comment_id": 97271549, "body": "What I meant was, do you have a situation in mind where you need to distinguish between no list and an empty list?"}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user9660393"}, "edited": false, "score": 0, "creation_date": 1553116335, "post_id": 55270178, "comment_id": 97271674, "body": "To test this I write <code>check 1 (New [1,2,3])</code> and it comes back True. My question is this: the New I&#39;m using in the test is the type constructor, not the data constructor of the same name?"}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 1, "creation_date": 1553116425, "post_id": 55270178, "comment_id": 97271708, "body": "@BingoBongo The <code>New</code> you use in that line is the data constructor. Type constructors mostly only go in type annotations."}, {"owner": {"user_type": "does_not_exist", "display_name": "user9660393"}, "edited": false, "score": 0, "creation_date": 1553116981, "post_id": 55270178, "comment_id": 97271974, "body": "Thank you so much, this really helped me understand the syntax."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1553123829, "post_id": 55270178, "comment_id": 97274218, "body": "Until you get used to where type constructors are used and where data constructors are used, you might want to use different names for each: <code>data New =  NewList [Int] | Empty</code>."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 4, "last_activity_date": 1553116186, "last_edit_date": 1553116186, "creation_date": 1553115877, "answer_id": 55270178, "question_id": 55270094, "link": "https://stackoverflow.com/questions/55270094/matching-int-to-datatype-for-bool/55270178#55270178", "title": "Matching Int to dataType for Bool", "body": "<p>You'll want <code>check</code> to pattern-match on its <code>New</code> argument to access the underlying list, if any.</p>\n\n<pre><code>check :: Int -&gt; New -&gt; Bool\ncheck x Empty = False\ncheck x (New ys) = x `elem` ys\n</code></pre>\n\n<p>One way to collapse the definition a bit is to realize that as far as <code>check</code> is concerned, the values <code>Empty</code> and <code>New []</code> are equivalent.</p>\n\n<pre><code>check :: Int -&gt; New -&gt; Bool\ncheck x ys = x `elem` (case ys of\n                         New ys' -&gt; ys'\n                         Empty -&gt; []) \n</code></pre>\n"}, {"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user9660393"}, "edited": false, "score": 0, "creation_date": 1553169454, "post_id": 55278542, "comment_id": 97289558, "body": "Thank you! This is a super useful reference."}], "tags": [], "owner": {"reputation": 14543, "user_id": 235908, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/rTstt.jpg?s=128&g=1", "display_name": "Simon Shine", "link": "https://stackoverflow.com/users/235908/simon-shine"}, "is_accepted": false, "score": 0, "last_activity_date": 1553164692, "creation_date": 1553164692, "answer_id": 55278542, "question_id": 55270094, "link": "https://stackoverflow.com/questions/55270094/matching-int-to-datatype-for-bool/55278542#55278542", "title": "Matching Int to dataType for Bool", "body": "<p>Even though this is an exercise in using custom data types, I feel like expanding on chepner's question, \"What does <code>Empty</code> provide that <code>New []</code> does not?\" since it was not met with any response: Lists can already be empty, so you could make your check without a custom data type definition:</p>\n\n<pre><code>check :: Int -&gt; [Int] -&gt; Bool\ncheck = elem\n</code></pre>\n\n<p>With the type that Robin said was isomorphic to your <code>New</code> type, <code>Maybe</code>, it would look like:</p>\n\n<pre><code>type New = Maybe [Int]\n\ncheck :: Int -&gt; New -&gt; Bool\ncheck _ Nothing = False\ncheck x (Just xs) = x `elem` xs\n</code></pre>\n\n<p>Generally when the standard library offers a data type isomorphic to your current one, you should ask yourself if you want to create your own one. Sometimes it is warranted, but often you will want to use either <code>type</code> or <code>newtype</code> and not <code>data</code>.</p>\n\n<p>With this type, <code>Maybe [Int]</code>, you must ask yourself why you want to differentiate between <code>Nothing</code> and <code>Just []</code>. For example, <code>Nothing</code> could indicate that the function failed, while <code>Just []</code> could indicate that it succeeded, but that the (correct) result was empty.</p>\n\n<p>An example of a function where this makes sense is <a href=\"https://github.com/exercism/haskell/tree/master/exercises/change\" rel=\"nofollow noreferrer\">the Change exercise on Exercism</a>:</p>\n\n<blockquote>\n  <p>Correctly determine the fewest number of coins to be given to a customer such that the sum of the coins' value would equal the correct amount of change.</p>\n</blockquote>\n\n<p>Here <code>Nothing</code> means that it's not possible to give exact change, and <code>Just []</code> means that the customer paid the exact amount and needs no change.</p>\n\n<p>If, instead, you'd like some exercises that deal with writing functions for custom data types, see the \"W3\" exercises on <a href=\"https://github.com/opqdonut/haskell-exercises\" rel=\"nofollow noreferrer\">https://github.com/opqdonut/haskell-exercises</a>.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user9660393"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 65, "favorite_count": 0, "accepted_answer_id": 55270178, "answer_count": 2, "score": -1, "last_activity_date": 1553164692, "creation_date": 1553115574, "last_edit_date": 1553115813, "question_id": 55270094, "link": "https://stackoverflow.com/questions/55270094/matching-int-to-datatype-for-bool", "title": "Matching Int to dataType for Bool", "body": "<p>I want to create a data type that's either New [Int] or Empty; then I want to use an Int and check if the data type contains the Int. This is probably an extremely simple question but I'm new to creating data types and using them in functions, specifically getting a handle on the syntax; I don't have a grounded understanding of it yet.</p>\n\n<pre><code>data New = New [Int]\n         | Empty\n    deriving Show\n\ncheck :: Int -&gt; New -&gt; Bool\ncheck x ys\n | x `elem` New ys = True\n | otherwise  = False\n</code></pre>\n"}, {"tags": ["haskell", "instance", "dry"], "answers": [{"comments": [{"owner": {"reputation": 77, "user_id": 11233868, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6b35236d2d69ac8929d874cbd8616bf8?s=128&d=identicon&r=PG&f=1", "display_name": "fata", "link": "https://stackoverflow.com/users/11233868/fata"}, "edited": false, "score": 0, "creation_date": 1553115590, "post_id": 55268934, "comment_id": 97271324, "body": "It&#39;s a good idea to extract the function definitions but the main problem still remains in my opinion. Maybe a meta programming solution via template haskell is the correct way to go?"}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 2, "last_activity_date": 1553207934, "last_edit_date": 1553207934, "creation_date": 1553110702, "answer_id": 55268934, "question_id": 55268631, "link": "https://stackoverflow.com/questions/55268631/avoiding-repeated-instance-declarations-in-haskell/55268934#55268934", "title": "Avoiding repeated instance declarations in Haskell", "body": "<p>Like,</p>\n\n<pre><code>noPrefixParseJSON :: (Generic a, GFromJSON Zero (Rep a)) =&gt; Value -&gt; Parser a\nnoPrefixParseJSON\n    = genericParseJSON (defaultOptions { fieldLabelModifier = body_noprefix })\nnoPrefixToJSON :: (Generic a, GToJSON Zero (Rep a)) =&gt; a -&gt; Value\nnoPrefixToJSON\n    = genericToJSON (defaultOptions { fieldLabelModifier = body_noprefix })\n\ninstance FromJSON User where parseJSON = noPrefixParseJSON\ninstance ToJSON User where toJSON = noPrefixToJSON\ninstance FromJSON Role where parseJSON = noPrefixParseJSON\ninstance ToJSON Role where toJSON = noPrefixToJSON\n...\n</code></pre>\n\n<p>Sure this is still kind of repetitive, but I'd say this isn't any cause of worry any more.</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1553219494, "post_id": 55270932, "comment_id": 97312492, "body": "That instance overlaps a <i>lot</i>. I think a newtype taking a phantom marker (or even a list of markers) would be a lot cleaner. That could also be useful for the  <code>DerivingVia</code> approach I outlined in my answer, if you want to do a lot of type-level work up front."}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1553239475, "post_id": 55270932, "comment_id": 97317704, "body": "@dfeuer I believe it overlaps with more concrete types also parametrized with Marker, but the idea is that Marker will be used only with entities defined in the same module, and for those we wanted &quot;uniform&quot; instances anyway. A problem I see with the newtype is that if <code>Role</code> is nested within <code>User</code>, we also have to put the newtype there, which seems inconvenient."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1553241370, "post_id": 55270932, "comment_id": 97318504, "body": "I&#39;m pretty sure it will also affect instance resolution in some other circumstances. For example, suppose you want the instance for <code>Const Int a</code>, where <code>a</code> is neither specified nor inferred. Having your instance in scope will cause resolution to fail where it would otherwise succeed, because the compiler now wants to know that <code>a</code> is <i>not</i> the marker type."}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1553279451, "post_id": 55270932, "comment_id": 97339980, "body": "@dfeuer The GHC User Guide states that &quot;It is fine for there to be a <i>potential</i> of overlap [\u2026] an error is only reported if a <i>particular</i> constraint matches more than one [instance]&quot; <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html?#instance-resolution\" rel=\"nofollow noreferrer\">downloads.haskell.org/~ghc/latest/docs/html/users_guide/&hellip;</a> So, as long as we don&#39;t require <code>FromJSON</code> from a <code>Const Int Marker</code> in our program, we won&#39;t get any overlapping instances error."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1553285374, "post_id": 55270932, "comment_id": 97342550, "body": "Huh .... It looks like I was overly optimistic about resolution without that instance. I&#39;m pretty sure I&#39;ve encountered situations where that hurt when messing around with <code>Data.Constraint.Forall</code>; I&#39;ll have to dig a bit further and see if I can produce a real example."}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1586426210, "post_id": 55270932, "comment_id": 108125448, "body": "related twitter thread <a href=\"https://twitter.com/fresheyeball/status/1247991094157049857\" rel=\"nofollow noreferrer\">twitter.com/fresheyeball/status/1247991094157049857</a>"}], "tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": false, "score": 0, "last_activity_date": 1553127288, "last_edit_date": 1553127288, "creation_date": 1553119983, "answer_id": 55270932, "question_id": 55268631, "link": "https://stackoverflow.com/questions/55268631/avoiding-repeated-instance-declarations-in-haskell/55270932#55270932", "title": "Avoiding repeated instance declarations in Haskell", "body": "<p>If explicitly declaring all those similar instances proves too onerous, perhaps you could parameterize your datatypes with a <a href=\"https://wiki.haskell.org/Phantom_type\" rel=\"nofollow noreferrer\">phantom type</a> like</p>\n\n<pre><code>data User x = User { aa :: Int, bb :: Bool } deriving Generic\n\ndata Role x = Role { xx :: Int, dd :: Bool } deriving Generic\n</code></pre>\n\n<p>and then define a \"marker\" datatype like</p>\n\n<pre><code>data Marker\n</code></pre>\n\n<p>This datatype will only serve as a peg on which to hang instances like the following</p>\n\n<pre><code>{-# language UndecidableInstances #-}\ninstance (Generic (f Marker), GFromJSON Zero (Rep (f Marker))) =&gt; FromJSON (f Marker) where \n    parseJSON = noPrefixParseJSON\n</code></pre>\n\n<p>Would it be worth it? Likely not, because the definition of your datatypes becomes more complex. On the other hand, you could change aspects of the serialization by varying the marker, so you gain some flexibility.</p>\n"}, {"comments": [{"owner": {"reputation": 77, "user_id": 11233868, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6b35236d2d69ac8929d874cbd8616bf8?s=128&d=identicon&r=PG&f=1", "display_name": "fata", "link": "https://stackoverflow.com/users/11233868/fata"}, "edited": false, "score": 0, "creation_date": 1553183424, "post_id": 55272830, "comment_id": 97298513, "body": "I see this as the most elegant solution until now. There is just a small typo here: <code>ToJSON =</code> should be <code>toJSON =</code>."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 4, "last_activity_date": 1553226108, "last_edit_date": 1553226108, "creation_date": 1553134492, "answer_id": 55272830, "question_id": 55268631, "link": "https://stackoverflow.com/questions/55268631/avoiding-repeated-instance-declarations-in-haskell/55272830#55272830", "title": "Avoiding repeated instance declarations in Haskell", "body": "<p>This is what the fairly new <code>DerivingVia</code> extension is for, among other things.</p>\n\n<pre><code>{-# language DerivingVia #-}\n\nnewtype NP a = NP {unNP::a}\n\ninstance (Generic a, GFromJSON Zero (Rep a)) =&gt; FromJSON (NP a) where\n  parseJSON = fmap NP . genericParseJSON \n    (defaultOptions { fieldLabelModifier = body_noprefix })\n\ninstance (Generic a, GToJSON Zero (Rep a)) =&gt; ToJSON (NP a) where\n  toJSON = genericToJSON (defaultOptions { fieldLabelModifier = body_noprefix }) . unNP\n</code></pre>\n\n<p>Now, you can write</p>\n\n<pre><code>deriving via (NP User) instance FromJSON User\n</code></pre>\n\n<p>Or</p>\n\n<pre><code>data User = ...\n  deriving Generic\n  deriving (FromJSON, ToJSON) via (NP User)\n</code></pre>\n\n<p>and so on.</p>\n\n<p>This doesn't save a lot over leftaroundabout's answer as it is. However, once you add a definition of <code>toEncoding</code>, it starts to look worthwhile.</p>\n\n<p>Caution: I have tested none of this.</p>\n"}], "owner": {"reputation": 77, "user_id": 11233868, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6b35236d2d69ac8929d874cbd8616bf8?s=128&d=identicon&r=PG&f=1", "display_name": "fata", "link": "https://stackoverflow.com/users/11233868/fata"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 235, "favorite_count": 1, "accepted_answer_id": 55272830, "answer_count": 3, "score": 4, "last_activity_date": 1553226108, "creation_date": 1553109512, "last_edit_date": 1553183313, "question_id": 55268631, "link": "https://stackoverflow.com/questions/55268631/avoiding-repeated-instance-declarations-in-haskell", "title": "Avoiding repeated instance declarations in Haskell", "body": "<p>My question seems to be closely related to <a href=\"https://stackoverflow.com/questions/42967868/removing-repetitions-from-multiple-instance-declarations\">this</a>\none. </p>\n\n<p>My code parses a yaml file, rearanges the objects and writes a new yaml file. It works perfectly well, but there is a particularly ugly part in it.</p>\n\n<p>I have to declare my data structures as instances of <code>FromJson</code> and <code>ToJson</code> like this:</p>\n\n<pre><code>instance FromJSON Users where\n  parseJSON = genericParseJSON (defaultOptions { fieldLabelModifier = body_noprefix })\ninstance ToJSON Users where\n  toJSON = genericToJSON (defaultOptions { fieldLabelModifier = body_noprefix })\n</code></pre>\n\n<p>The problem is that I have to repeat this for 8 or so other cases:</p>\n\n<pre><code>instance FromJSON Role where\n  parseJSON = genericParseJSON (defaultOptions { fieldLabelModifier = body_noprefix })\ninstance ToJSON Role where\n  toJSON = genericToJSON (defaultOptions { fieldLabelModifier = body_noprefix })\n\n...\n...\n</code></pre>\n\n<p>I could not figure out how to avoid this repetition. Is there some method to declare the two functions just once (for example in a new class) and let all these data types derive from it? </p>\n\n<p><strong>Solution (see also accepted answer by dfeuer):</strong></p>\n\n<p>I personally like this solution. You'll need to add </p>\n\n<pre><code>{-# language DerivingVia #-}\n{-# language UndecidableInstances #-}\n\nnewtype NP a = NP {unNP::a} \n\ninstance (Generic a, GFromJSON Zero (Rep a)) =&gt; FromJSON (NP a) where\n  parseJSON = fmap NP . genericParseJSON \n    (defaultOptions { fieldLabelModifier = body_noprefix })\n\ninstance (Generic a, GToJSON Zero (Rep a)) =&gt; ToJSON (NP a) where\n  toJSON = genericToJSON (defaultOptions { fieldLabelModifier = body_noprefix }) . unNP\n</code></pre>\n\n<p>Then you can declare the types like this:</p>\n\n<pre><code>data User = User { ... } deriving (Show, Generic)\n                         deriving FromJSON via (NP User)\n                         deriving ToJSON via (NP User)\n</code></pre>\n"}, {"tags": ["haskell", "haskell-lens"], "comments": [{"owner": {"reputation": 1835, "user_id": 3907685, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/4a9d7cdfc525e689e6baefb7d2158fb0?s=128&d=identicon&r=PG", "display_name": "Chris Penner", "link": "https://stackoverflow.com/users/3907685/chris-penner"}, "edited": false, "score": 0, "creation_date": 1559435567, "post_id": 55264120, "comment_id": 99419861, "body": "If you don&#39;t care about ordering and are okay dropping duplicate keys you can write a quick Iso: &quot;myAList ^. Iso Map.fromList M.toList . at key&quot;"}], "answers": [{"tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": true, "score": 7, "last_activity_date": 1553098236, "creation_date": 1553098236, "answer_id": 55265375, "question_id": 55264120, "link": "https://stackoverflow.com/questions/55264120/lenses-for-association-list/55265375#55265375", "title": "Lenses for association list", "body": "<p>I don't know of one that's provided for you, but <code>at</code> belongs to the typeclass <code>At</code>, so we could certainly write it ourselves. To avoid having to get our hands dirty with flexible (and possibly overlapping) instance extensions, we'll do this in a newtype.</p>\n\n<pre><code>newtype AList k v = AList [(k, v)]\n</code></pre>\n\n<p>First, we need a couple of family instances.</p>\n\n<pre><code>{-# LANGUAGE TypeFamilies #-}\n\ntype instance IxValue (AList k v) = v\ntype instance Index (AList k v) = k\n</code></pre>\n\n<p>This just defines what the \"key\" and \"value\" is in our new type, which is straightforward. Now, we need to be able to read and write values at a specific key. Haskell already gives us a way to read values (<a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-List.html#v:lookup\" rel=\"noreferrer\"><code>Data.List.lookup</code></a>), but we have to make the writing function ourselves. Nothing fancy or lens-y here: just ordinary old Haskell filters and maps.</p>\n\n<pre><code>replaceAt :: Eq k =&gt; k -&gt; Maybe v -&gt; AList k v -&gt; AList k v\nreplaceAt k Nothing (AList m) = AList $ filter (\\(k', _) -&gt; k /= k') m\nreplaceAt k (Just v) (AList m) =\n    case lookup k m of\n      Nothing -&gt;\n          -- Not present in the list; add it\n          AList ((k, v) : m)\n      Just _ -&gt;\n          -- Present; replace it\n          AList $ map (\\(k', v') -&gt; if k == k' then (k', v) else (k', v')) m\n</code></pre>\n\n<p>Now we need to write the <code>At</code> instance, which depends on the <code>Ixed</code> instance. Fortunately, the lens library provides a default implementation for <code>Ixed</code> as long as we're implementing <code>At</code>, so the first instance declaration is simple.</p>\n\n<pre><code>instance Eq k =&gt; Ixed (AList k v)\n</code></pre>\n\n<p>Writing <code>at</code> is fairly straightforward as well. Just look at the types and follow your nose a bit, and the implementation you arrive at is the one we want.</p>\n\n<pre><code>instance Eq k =&gt; At (AList k v) where\n    at k f (AList m) = fmap (\\v' -&gt; replaceAt k v' (AList m)) $ f (lookup k m)\n</code></pre>\n\n<p>And we're done. Now <code>at</code> will work for <code>AList</code>. If the newtype wrapper bothers you, you could pretty easily make a new function (<code>at'</code>, if you will) that does the newtype wrapping/unwrapping for you.</p>\n\n<p>Proving that this instance satisfies the lens laws is left as an exercise to the reader.</p>\n\n<p><strong>Complete code</strong></p>\n\n<pre><code>{-# LANGUAGE TypeFamilies #-}\n\nimport Control.Lens.At\nimport Data.List(lookup)\n\nnewtype AList k v = AList [(k, v)]\n\ntype instance IxValue (AList k v) = v\ntype instance Index (AList k v) = k\n\nreplaceAt :: Eq k =&gt; k -&gt; Maybe v -&gt; AList k v -&gt; AList k v\nreplaceAt k Nothing (AList m) = AList $ filter (\\(k', _) -&gt; k /= k') m\nreplaceAt k (Just v) (AList m) =\n    case lookup k m of\n      Nothing -&gt;\n          -- Not present in the list; add it\n          AList ((k, v) : m)\n      Just _ -&gt;\n          -- Present; replace it\n          AList $ map (\\(k', v') -&gt; if k == k' then (k', v) else (k', v')) m\n\n-- Just take the default implementation here.\ninstance Eq k =&gt; Ixed (AList k v)\n\ninstance Eq k =&gt; At (AList k v) where\n    at k f (AList m) = fmap (\\v' -&gt; replaceAt k v' (AList m)) $ f (lookup k m)\n</code></pre>\n"}], "owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 158, "favorite_count": 0, "accepted_answer_id": 55265375, "answer_count": 1, "score": 4, "last_activity_date": 1553107445, "creation_date": 1553094596, "last_edit_date": 1553107445, "question_id": 55264120, "link": "https://stackoverflow.com/questions/55264120/lenses-for-association-list", "title": "Lenses for association list", "body": "<p>There is <code>at</code> lens for <code>Map</code>/<code>HashMap</code>/etc in <code>Control.Lens.At</code>. But is any lens similar to <code>at</code> for association list type <code>[(k, v)]</code> (which is convertible to map)?</p>\n"}, {"tags": ["haskell", "monad-transformers", "state-monad"], "comments": [{"owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "edited": false, "score": 2, "creation_date": 1553097431, "post_id": 55264051, "comment_id": 97261551, "body": "It isn&#39;t clear what you&#39;re trying to do. Do you actually intend to use concrete types &#39;A&#39;, &#39;B&#39; and &#39;Err&#39;? If that&#39;s the case, your <code>check</code> function will not type-check."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1553098685, "post_id": 55264051, "comment_id": 97262405, "body": "If you want to get rid of <code>either</code> instead of <code>return</code>, I think <code>check = (return . checkA) &gt;=&gt; checkB</code> is equivalent."}, {"owner": {"reputation": 2273, "user_id": 4407321, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/KHKUZ.png?s=128&g=1", "display_name": "Allan W", "link": "https://stackoverflow.com/users/4407321/allan-w"}, "reply_to_user": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "edited": false, "score": 0, "creation_date": 1553104363, "post_id": 55264051, "comment_id": 97265718, "body": "@theindigamer I will update my question. I do want to use concrete types but they are actually <code>A</code>, <code>B</code>, <code>C</code>, and <code>Err</code>. The use of generics isn&#39;t clear here"}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 2, "creation_date": 1553104392, "post_id": 55264051, "comment_id": 97265733, "body": "Are you looking for Control.Monad.Trans.Except? If you had an <code>ExceptT err (ST s) a</code> instead of composing the monads manually, you could write <code>throwE</code> instead of <code>return . Left</code>."}, {"owner": {"reputation": 2273, "user_id": 4407321, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/KHKUZ.png?s=128&g=1", "display_name": "Allan W", "link": "https://stackoverflow.com/users/4407321/allan-w"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1553105305, "post_id": 55264051, "comment_id": 97266190, "body": "@amalloy that certainly looks better. It just looks to me that whenever I have something like <code>either</code> where I don&#39;t deal with one side, there should be a better way of writing things. Even with <code>either throwE ...</code>, it might be redundant. I&#39;m trying to look for a general solution with nested monads, where the snippet above is my actual usage. Another example is if I had a function dealing with <code>Either a (Maybe b)</code>"}, {"owner": {"reputation": 2273, "user_id": 4407321, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/KHKUZ.png?s=128&g=1", "display_name": "Allan W", "link": "https://stackoverflow.com/users/4407321/allan-w"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1553105457, "post_id": 55264051, "comment_id": 97266266, "body": "@chepner Your solution looks better as well. I will test it out in a bit; didn&#39;t occur to me to use <code>return</code> with <code>checkA</code>."}], "answers": [{"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 4, "last_activity_date": 1553107690, "last_edit_date": 1553107690, "creation_date": 1553107092, "answer_id": 55267978, "question_id": 55264051, "link": "https://stackoverflow.com/questions/55264051/handling-either-and-st-monads/55267978#55267978", "title": "Handling Either and ST monads", "body": "<p>Here's one way to do it with <code>ExceptT</code>:</p>\n\n<pre><code>checkA :: a -&gt; Either err b\ncheckA = undefined\n\ncheckB :: b -&gt; ExceptT err (ST s) c\ncheckB = undefined\n\ncheck :: a -&gt; ExceptT err (ST s) c\ncheck a = except (checkA a) &gt;&gt;= checkB\n-- or\ncheck = except . checkA &gt;=&gt; checkB\n</code></pre>\n\n<p><code>except</code> turns <code>Either err b</code> into <code>Monad m =&gt; ExceptT err m b</code>, and then you can do everything else in the <code>ExceptT err (ST s)</code> monad.</p>\n\n<p>As a general rule, <code>ExceptT</code> is a great way to work with monadic actions that may fail when you <em>usually</em> want to bail on failure. The main exception is when the underlying monad is <code>IO</code>, in which case it's more common to use the built-in exception features from <code>Control.Exception</code>.</p>\n\n<p>Of course, if you only need <em>one</em> monadic bind, <code>ExceptT</code> seems a bit like overkill, but once you need more it definitely makes sense.</p>\n"}], "owner": {"reputation": 2273, "user_id": 4407321, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/KHKUZ.png?s=128&g=1", "display_name": "Allan W", "link": "https://stackoverflow.com/users/4407321/allan-w"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "accepted_answer_id": 55267978, "answer_count": 1, "score": 4, "last_activity_date": 1553107690, "creation_date": 1553094404, "last_edit_date": 1553104506, "question_id": 55264051, "link": "https://stackoverflow.com/questions/55264051/handling-either-and-st-monads", "title": "Handling Either and ST monads", "body": "<p>Let's say I have the following functions:</p>\n\n<pre><code>checkA :: a -&gt; Either err b\ncheckA = undefined\n\ncheckB :: b -&gt; ST s (Either err c)\ncheckB = undefined\n\ncheck :: a -&gt; ST s (Either err c)\ncheck a = either (return . Left) checkB (checkA a)\n</code></pre>\n\n<p>Is there any way to write <code>check</code> such that it doesn't require using <code>return . Left</code>? Usually I'd do something like <code>&gt;&gt;=</code>, but in this case the return of <code>checkB</code> is wrapped inside another state monad, so it doesn't work. The other constraint is that <code>checkB</code> should only run if <code>checkA a</code> evaluates to <code>Right</code>, and should just fail with the error on <code>Left</code></p>\n\n<p>To generalize, are there any standard approaches to using nested monads?</p>\n"}, {"tags": ["haskell", "metaprogramming", "template-haskell"], "comments": [{"owner": {"reputation": 25321, "user_id": 163177, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e811b5337bcad19d52c8fed3a0ea0075?s=128&d=identicon&r=PG", "display_name": "John F. Miller", "link": "https://stackoverflow.com/users/163177/john-f-miller"}, "edited": false, "score": 1, "creation_date": 1553094137, "post_id": 55263688, "comment_id": 97259182, "body": "The tool you are looking for is Template Haskell <a href=\"https://wiki.haskell.org/Template_Haskell\" rel=\"nofollow noreferrer\">wiki.haskell.org/Template_Haskell</a> in which I am not skilled enough to give a proper answer."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1553094243, "post_id": 55263688, "comment_id": 97259277, "body": "Why aren&#39;t you just defining it as an <code>Obj</code> in the first place instead of an <code>Either Err Obj</code> value?"}, {"owner": {"reputation": 12964, "user_id": 704015, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/rpCnn.png?s=128&g=1", "display_name": "Jezen Thomas", "link": "https://stackoverflow.com/users/704015/jezen-thomas"}, "edited": false, "score": 0, "creation_date": 1553094614, "post_id": 55263688, "comment_id": 97259532, "body": "<i>You</i> may be &quot;sure&quot; that the value will always be a <code>Right</code>, but how does the compiler know? It sounds like you&#39;re looking for dependent types."}, {"owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1553103207, "post_id": 55263688, "comment_id": 97265101, "body": "@chepner Because this is just a &quot;metaphore&quot; of a much bigger computation with error handling. I wanted to give a minimal example"}, {"owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "reply_to_user": {"reputation": 12964, "user_id": 704015, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/rpCnn.png?s=128&g=1", "display_name": "Jezen Thomas", "link": "https://stackoverflow.com/users/704015/jezen-thomas"}, "edited": false, "score": 0, "creation_date": 1553103267, "post_id": 55263688, "comment_id": 97265135, "body": "@JezenThomas I am not looking for dependent types, but for a metaprogramming solution"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1553104310, "post_id": 55263688, "comment_id": 97265686, "body": "&quot;Much bigger computation&quot; and &quot;statically defined&quot; is the combination I&#39;m having trouble with."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1553106624, "post_id": 55263688, "comment_id": 97266799, "body": "@radrow You might want to provide more information about the actual problem. For the minimal example I would just say &quot;don&#39;t use an <code>Either</code> at all,&quot; but I take it this is not the case for the larger program? It is probably better if you give more context, rather than us guessing what that context might be."}, {"owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "edited": false, "score": 0, "creation_date": 1553109539, "post_id": 55263688, "comment_id": 97268317, "body": "Okay, updating question"}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 1, "creation_date": 1553109550, "post_id": 55263688, "comment_id": 97268321, "body": "I think your &quot;metaphor&quot; is too simplified. I see what you&#39;re going for, but to me this looks a lot like an XY problem, in which case you&#39;re definitely better off asking about the actual problem you&#39;re having in context."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "reply_to_user": {"reputation": 25321, "user_id": 163177, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e811b5337bcad19d52c8fed3a0ea0075?s=128&d=identicon&r=PG", "display_name": "John F. Miller", "link": "https://stackoverflow.com/users/163177/john-f-miller"}, "edited": false, "score": 0, "creation_date": 1553112304, "post_id": 55263688, "comment_id": 97269666, "body": "Based on your edit, it sounds like you want something like partial evaluation. As @JohnF.Miller said, it does sound like you want Template Haskell. I don&#39;t have much experience with it, but maybe <a href=\"https://www.reddit.com/r/haskell/comments/7yvb43/ghc_compiletime_evaluation/\" rel=\"nofollow noreferrer\">lift</a> is what you want."}], "answers": [{"comments": [{"owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "edited": false, "score": 0, "creation_date": 1553239088, "post_id": 55289931, "comment_id": 97317555, "body": "Could you explain why it must be in different module?"}, {"owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "reply_to_user": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "edited": false, "score": 0, "creation_date": 1553260220, "post_id": 55289931, "comment_id": 97328981, "body": "The <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#template-haskell\" rel=\"nofollow noreferrer\">GHC manual</a> explains &quot;Inside a splice you can only call functions defined in imported modules, not functions defined elsewhere in the same module.&quot;  A &quot;splice&quot; is the <code>$()</code> expression.  I think this simplifies implementation, since GHC can compile one module at a time, as it does without TH.  <a href=\"http://blog.ezyang.com/2016/07/what-template-haskell-gets-wrong-and-racket-gets-right/\" rel=\"nofollow noreferrer\">This blog post by Ed Yang</a> contrasts TH with less restrictive macro systems."}], "tags": [], "owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "is_accepted": true, "score": 1, "last_activity_date": 1553205752, "creation_date": 1553205752, "answer_id": 55289931, "question_id": 55263688, "link": "https://stackoverflow.com/questions/55263688/eval-expression-during-compilation-and-treat-runtime-errors-as-compilation-error/55289931#55289931", "title": "Eval expression during compilation and treat runtime errors as compilation errors", "body": "<p>As suggested in comments, Template Haskell is the way to do this.  The function below handles the two cases:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>compileTime :: Lift a =&gt; Either String a -&gt; Q Exp\ncompileTime (Right a) = lift a\ncompileTime (Left err) = fail err\n</code></pre>\n\n<p>It can be invoked as <code>$(compileTime (typecheck =&lt;&lt; parse stdLibStr))</code>.  Or it's short enough to inline as <code>either fail lift</code> instead.</p>\n\n<p>To use this, any function called in the <code>$()</code> must be defined in a separate module than where it is invoked.</p>\n"}], "owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 124, "favorite_count": 0, "accepted_answer_id": 55289931, "answer_count": 1, "score": 1, "last_activity_date": 1553205752, "creation_date": 1553093429, "last_edit_date": 1553111738, "question_id": 55263688, "link": "https://stackoverflow.com/questions/55263688/eval-expression-during-compilation-and-treat-runtime-errors-as-compilation-error", "title": "Eval expression during compilation and treat runtime errors as compilation errors", "body": "<p>I am working on a simple programming language interpreter in Haskell and I have a bit of trouble while defining standard library. I would like it to be defined as a static string at the toplevel and compiled along with my interpreter:</p>\n\n<pre><code>stdLibStr :: String\nstdLibStr = \"id a := a;;\"\n\nparse :: String -&gt; Either Error UntypedModule\ntypecheck :: UntypedModule -&gt; Either Error TypedModule\n\n-- constexpr\nstdLib :: TypedModule\nstdLib = either (error . show) id $ parse stdLibStr &gt;&gt;= typecheck\n</code></pre>\n\n<p>However, model above won't evaluate <code>stdLib</code> during compilation time. Moreover, it won't give me any feedback on neither parsing nor typechecking error. I would like my interpreter simply not compile if either <code>parse</code> or <code>typecheck</code> returns <code>Left</code> as in the following example:</p>\n\n<pre><code>stdLibString = \"\u2260\u00b2\u00b3\u00a2\u00a9\u0153\u0119\u00e6\u015b\u00f0\"\n\n-- Compilation error: \"cannot parse definition\"\nstdLib = either (error . show) id $ parse stdLibStr &gt;&gt;= typecheck\n</code></pre>\n\n<p>I was trying to achievie this using <code>fail</code> while defining QuasiQuotation for my language, but because of some other problems it is not possible to have such a quotation.</p>\n\n<p>How to do it in most convenient way?</p>\n"}, {"tags": ["haskell", "constructor", "monads", "maybe", "lifting"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1553087632, "post_id": 55261521, "comment_id": 97254547, "body": "<code>\\nn -&gt; Just (SomeData nn)</code> is just <code>Just . SomeData</code>."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1553087633, "post_id": 55261521, "comment_id": 97254549, "body": "<code>let res = liftM (\\nn -&gt; SomeData nn)</code> is identical to <code>liftM SomeData</code>. (Or indeed to <code>fmap SomeData</code> - it&#39;s personal choice but I prefer calling the function <code>fmap</code>.)"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1553088273, "post_id": 55261521, "comment_id": 97254931, "body": "can&#39;t edit now, but I obviously meant &quot;is identical to <code>let res = liftM SomeData</code>&quot; in the above"}, {"owner": {"reputation": 6365, "user_id": 4385532, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/0573709d0b88e4b50af0e28c3e96873b?s=128&d=identicon&r=PG&f=1", "display_name": "gaazkam", "link": "https://stackoverflow.com/users/4385532/gaazkam"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1553088613, "post_id": 55261521, "comment_id": 97255156, "body": "@RobinZigmond Wow, thank you! Didn&#39;t know constructors count as functions."}], "answers": [{"comments": [{"owner": {"reputation": 6365, "user_id": 4385532, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/0573709d0b88e4b50af0e28c3e96873b?s=128&d=identicon&r=PG&f=1", "display_name": "gaazkam", "link": "https://stackoverflow.com/users/4385532/gaazkam"}, "edited": false, "score": 0, "creation_date": 1553088609, "post_id": 55261641, "comment_id": 97255153, "body": "So now you prompted me to check what the hay <code>fmap</code> is :) Dang I know and understand very few about Haskell and yet the esteemed Academy wants me to do quite a large homework involving monads after no more than two months of introduction to this language."}, {"owner": {"reputation": 6365, "user_id": 4385532, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/0573709d0b88e4b50af0e28c3e96873b?s=128&d=identicon&r=PG&f=1", "display_name": "gaazkam", "link": "https://stackoverflow.com/users/4385532/gaazkam"}, "edited": false, "score": 0, "creation_date": 1553088723, "post_id": 55261641, "comment_id": 97255232, "body": "I also don&#39;t know what functors are ;P even though this was skimmed over during one of the lectures, too bad I didn&#39;t pay too much attention. I&#39;m just starting to understand the very basics of monads, that&#39;s where I am."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 6365, "user_id": 4385532, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/0573709d0b88e4b50af0e28c3e96873b?s=128&d=identicon&r=PG&f=1", "display_name": "gaazkam", "link": "https://stackoverflow.com/users/4385532/gaazkam"}, "edited": false, "score": 1, "creation_date": 1553088748, "post_id": 55261641, "comment_id": 97255244, "body": "Either you aren&#39;t paying attention in class, or your class is doing things <i>extremely</i> backwards. You should have learned functors <i>long</i> before being introduced to monads (since every monad <i>is</i> a functor, both by mathematical definition and in Haskell, since a <code>Functor</code> instance is required for every type defining a <code>Monad</code> instance)."}, {"owner": {"reputation": 6365, "user_id": 4385532, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/0573709d0b88e4b50af0e28c3e96873b?s=128&d=identicon&r=PG&f=1", "display_name": "gaazkam", "link": "https://stackoverflow.com/users/4385532/gaazkam"}, "edited": false, "score": 0, "creation_date": 1553088994, "post_id": 55261641, "comment_id": 97255401, "body": "Perhaps both. Please, there&#39;s <i>half a semester</i> for Haskell. I feel this is too short of a time. I feel kind of overwhelmed by lots and lots of new concepts introduced in a very short time."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 2, "creation_date": 1553089077, "post_id": 55261641, "comment_id": 97255447, "body": "totally agree with @chepner that the way you seem to be learning is backwards. If you need a relatively quick and pain-free introduction to these concepts, I would strongly recommend <a href=\"http://learnyouahaskell.com/chapters\" rel=\"nofollow noreferrer\">Learn You a Haskell</a> - especially in this context chapters 11 and 12."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 6365, "user_id": 4385532, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/0573709d0b88e4b50af0e28c3e96873b?s=128&d=identicon&r=PG&f=1", "display_name": "gaazkam", "link": "https://stackoverflow.com/users/4385532/gaazkam"}, "edited": false, "score": 4, "creation_date": 1553095817, "post_id": 55261641, "comment_id": 97260388, "body": "@gaazkam <code>fmap</code> and <code>liftM</code> are exactly the same, except that <code>fmap</code> works on a (very) few more types than <code>liftM</code> does."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 6365, "user_id": 4385532, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/0573709d0b88e4b50af0e28c3e96873b?s=128&d=identicon&r=PG&f=1", "display_name": "gaazkam", "link": "https://stackoverflow.com/users/4385532/gaazkam"}, "edited": false, "score": 0, "creation_date": 1553116126, "post_id": 55261641, "comment_id": 97271579, "body": "@gaazkam I agree with you on a half semester being too short. Learning functional programming, especially with algebraic types, polymorphism, typeclasses, functors, monads, etc. requires more time."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 4, "last_activity_date": 1553088216, "last_edit_date": 1553088216, "creation_date": 1553087767, "answer_id": 55261641, "question_id": 55261521, "link": "https://stackoverflow.com/questions/55261521/is-there-any-way-to-lift-a-constructor/55261641#55261641", "title": "Is there any way to &quot;lift&quot; a constructor?", "body": "<p>You can simply use function composition:</p>\n\n<pre><code>main =\n    let n = Just 15\n        res = n &gt;&gt;= Just . SomeData\n    in print res\n</code></pre>\n\n<p>although as Robin Zigmond points out, you can simply use <code>fmap</code>, since <code>fmap f x</code> is equivalent to <code>x &gt;&gt;= return . f</code>, and <code>return == Just</code> for the <code>Maybe</code> monad.</p>\n\n<pre><code>main = let n = Just 15\n           res = fmap SomeData n  -- or SomeData &lt;$&gt; n\n       in print res\n</code></pre>\n\n<p>Moral of the story: don't use a monad where all you need is a functor.</p>\n"}], "owner": {"reputation": 6365, "user_id": 4385532, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/0573709d0b88e4b50af0e28c3e96873b?s=128&d=identicon&r=PG&f=1", "display_name": "gaazkam", "link": "https://stackoverflow.com/users/4385532/gaazkam"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 95, "favorite_count": 0, "accepted_answer_id": 55261641, "answer_count": 1, "score": 0, "last_activity_date": 1553088216, "creation_date": 1553087358, "question_id": 55261521, "link": "https://stackoverflow.com/questions/55261521/is-there-any-way-to-lift-a-constructor", "title": "Is there any way to &quot;lift&quot; a constructor?", "body": "<p>Assume I have a function (<code>plusOne</code> in the example below) that only accepts and returns an <code>Int</code>. But I don't have an <code>Int</code>; instead, I have a <code>Maybe Int</code>; and if this <code>Maybe Int</code> contains a value then I want to pass it to <code>plusOne</code> and get a <code>Just</code> of whatever <code>plusOne</code> returns, or if its rather a <code>Nothing</code> then I want this <code>Nothing</code> to propagate.</p>\n\n<p>In such a case we have <code>liftM</code> to code this in an elegant way:</p>\n\n<pre><code>import Control.Monad\n\nplusOne :: Int -&gt; Int\nplusOne n =\n    n+1 -- a very complicated computation that is failsafe\n\nmain =\n    let n = Just 15 -- a very complicated computation that can fail\n    in let res = liftM plusOne n\n    in print res\n</code></pre>\n\n<p>So far so good. But, can something like this be done with constructors as well?</p>\n\n<p>Forget about <code>plusOne</code>. Now I have: <code>data SomeData = SomeData Int</code> and want to obtain a <code>Maybe (SomeData Int)</code> from my <code>Maybe Int</code>. The solution seems noticeably less elegant:</p>\n\n<pre><code>import Control.Monad\n\ndata SomeData = SomeData Int\n    deriving Show -- so that print works\n\nmain =\n    let n = Just 15\n    in let res = n &gt;&gt;= (\\nn -&gt; Just (SomeData nn))\n    -- alternatively: in let res = liftM (\\nn -&gt; SomeData nn) n\n    in print res\n</code></pre>\n\n<p>Both solutions above (with <code>&gt;&gt;=</code> or with <code>liftM</code>) require going through an anonymous lambda function which, to my intuition, shouldn't be necessary and only serves to clobber the code. Is there a way to avoid it? Can I somehow \"lift\" the <code>someData</code> constructor just as I could lift <code>plusOne</code> in the first snippet?</p>\n"}, {"tags": ["haskell", "netlink"], "comments": [{"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 1, "creation_date": 1553078290, "post_id": 55256051, "comment_id": 97248808, "body": "Can you include code that&#39;s causing this issue in the question itself, rather than linking to it? (If it&#39;s too big to show here, try making a smaller example with the same problem)."}, {"owner": {"reputation": 269, "user_id": 2789617, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/b18dcd70f6aaecd2bb05a205b454d0ed?s=128&d=identicon&r=PG&f=1", "display_name": "mattator", "link": "https://stackoverflow.com/users/2789617/mattator"}, "reply_to_user": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1554701668, "post_id": 55256051, "comment_id": 97832660, "body": "Is it possible to remove this post ? it seems very specific and endup being solved by an update in the (buggy) library ?"}], "owner": {"reputation": 269, "user_id": 2789617, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/b18dcd70f6aaecd2bb05a205b454d0ed?s=128&d=identicon&r=PG&f=1", "display_name": "mattator", "link": "https://stackoverflow.com/users/2789617/mattator"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 63, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1553230261, "creation_date": 1553069074, "last_edit_date": 1553230261, "question_id": 55256051, "link": "https://stackoverflow.com/questions/55256051/too-short-input-for-last-message-with-the-netlink-library", "title": "&quot;Too short input for last message&quot; with the netlink library", "body": "<p>This issue is a about how to use the haskell <code>netlink</code> library.\nThe casting (?) mechanism I have trouble with might be a more generic haskell problem, which is why I hope it's ok to ask here.</p>\n\n<p>I previously exposed my problem here: <a href=\"https://github.com/Ongy/netlink-hs/issues/5\" rel=\"nofollow noreferrer\">https://github.com/Ongy/netlink-hs/issues/5</a> but here is summary:</p>\n\n<p>I am trying to use the library <code>netlink</code> (<a href=\"https://github.com/Ongy/netlink-hs\" rel=\"nofollow noreferrer\">https://github.com/Ongy/netlink-hs</a>, on hackage too) to communicate with a kernel module via the netlink protocol.\nI receive packets through the <code>recvOne'</code> call (called here <a href=\"https://github.com/teto/netlink_pm/blob/v5/hs/daemon.hs#L502\" rel=\"nofollow noreferrer\">https://github.com/teto/netlink_pm/blob/v5/hs/daemon.hs#L502</a>):</p>\n\n<pre><code>results &lt;- (recvOne' simpleSock) :: IO [Either String MptcpPacket]\n</code></pre>\n\n<p>defined here <a href=\"https://github.com/Ongy/netlink-hs/blob/master/System/Linux/Netlink.hs#L395\" rel=\"nofollow noreferrer\">https://github.com/Ongy/netlink-hs/blob/master/System/Linux/Netlink.hs#L395</a> as:</p>\n\n<pre><code>recvOne' :: (Convertable a, Eq a, Show a) =&gt; NetlinkSocket -&gt; IO [Either String (Packet a)]\nrecvOne' sock = getPackets' &lt;$&gt; recvmsg sock bufferSize\n</code></pre>\n\n<p>but on launch my program stops immediately with </p>\n\n<pre><code>daemon.hs: user error (Too short input for last message =.=)\n</code></pre>\n\n<p>My belief is that my <code>recvOne'</code> call casts everything to a (big) MptcpPacket</p>\n\n<pre><code>type MptcpPacket = Packet GenlData NoDataMptcp\n</code></pre>\n\n<p>straightaway while the stack can send smaller Packets like ErrorMsg/DoneMsg <a href=\"https://github.com/Ongy/netlink-hs/blob/master/System/Linux/Netlink.hs#L115\" rel=\"nofollow noreferrer\">https://github.com/Ongy/netlink-hs/blob/master/System/Linux/Netlink.hs#L115</a> :</p>\n\n<pre><code>data Packet a\n        = Packet -- The \"normal\" message\n    {\n      packetHeader     :: Header -- ^The netlink message header\n    , packetCustom     :: a -- ^The datatype for additional static data for the interface\n    , packetAttributes :: Attributes -- ^The netlink attributes\n    }\n        | ErrorMsg -- The error message\n    {\n      packetHeader     :: Header -- ^The netlink message header\n    , packetError      :: CInt -- ^The error ID for this error message\n    , errorPacket      :: Packet a -- ^The offending message\n    }\n        | DoneMsg -- The done message, this should usually not be seen by a user\n    {\n      packetHeader     :: Header -- ^The header of the done message\n    }\nderiving (Eq)\n</code></pre>\n\n<p>My question thus becomes:\n - with this library, how can I retreive all packets and only afterwards distinguish between ErrorMsg / DoneMsg and the valid netlink packets. Haskell forces me to cast to something but it's weird. Should I use some kind of exception ? am I going to lose packets this way ? and so on.</p>\n\n<p>As I am still a haskell beginner, any kind of example/code is welcome</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 475, "user_id": 3993379, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ac1027ad3128505e2ef6222c4e306e73?s=128&d=identicon&r=PG&f=1", "display_name": "FrownyFrog", "link": "https://stackoverflow.com/users/3993379/frownyfrog"}, "edited": false, "score": 0, "creation_date": 1553059248, "post_id": 55253941, "comment_id": 97240061, "body": "In the second test, it clearly wants you to put &quot;subst&quot; before listing the arguments. The first test is more cryptic, even though you skipped &quot;subst&quot; there as well."}, {"owner": {"reputation": 4113, "user_id": 4601931, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4785004388498e25bc6794fe1d9d4a38?s=128&d=identicon&r=PG&f=1", "display_name": "user4601931", "link": "https://stackoverflow.com/users/4601931/user4601931"}, "edited": false, "score": 0, "creation_date": 1553059736, "post_id": 55253941, "comment_id": 97240203, "body": "Both of those evaluations of the function you posted work for me, except they don&#39;t give the result you expected.  Are you sure you copy/pasted correctly?"}, {"owner": {"reputation": 4113, "user_id": 4601931, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4785004388498e25bc6794fe1d9d4a38?s=128&d=identicon&r=PG&f=1", "display_name": "user4601931", "link": "https://stackoverflow.com/users/4601931/user4601931"}, "edited": false, "score": 3, "creation_date": 1553059856, "post_id": 55253941, "comment_id": 97240245, "body": "Oh...  You might want to try actually applying the function to the given arguments, e.g., <code>subst 0 1 [0, 1, 2, 3]</code> instead of just typing <code>0 1 [0, 1, 2, 3]</code> into GHCI.  Still, the result is not what you want."}, {"owner": {"reputation": 35, "user_id": 6825049, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b9852e926d11812934acfd1cb9f8b968?s=128&d=identicon&r=PG&f=1", "display_name": "Mingo Pan", "link": "https://stackoverflow.com/users/6825049/mingo-pan"}, "edited": false, "score": 0, "creation_date": 1553916641, "post_id": 55253941, "comment_id": 97574473, "body": "Yeah, I have actually fix that, I was confused about why it not working.."}], "answers": [{"tags": [], "owner": {"reputation": 12964, "user_id": 704015, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/rpCnn.png?s=128&g=1", "display_name": "Jezen Thomas", "link": "https://stackoverflow.com/users/704015/jezen-thomas"}, "is_accepted": true, "score": 3, "last_activity_date": 1553062130, "creation_date": 1553062130, "answer_id": 55254521, "question_id": 55253941, "link": "https://stackoverflow.com/questions/55253941/couldnt-match-expected-type-char-char-t-with-actual-type-char/55254521#55254521", "title": "Couldn&#39;t match expected type \u2018Char -&gt; [Char] -&gt; t\u2019 with actual type \u2018Char\u2019", "body": "<p>You aren't using GHCi correctly. You must apply your <code>subst</code> function to some arguments to evaluate it.</p>\n\n<p>Here's how it should work, assuming your code is in a file called <code>main.hs</code>:</p>\n\n<pre><code>GHCi, version 8.4.3: http://www.haskell.org/ghc/  :? for help\nLoaded GHCi configuration from /Users/jgt/.ghci\n\u03bb :l main\n[1 of 1] Compiling Main             ( main.hs, interpreted )\nOk, one module loaded.\n\u03bb subst 0 1 [0,1,2,3]\n[1]\n</code></pre>\n\n<p><em>n.b.</em> You can ignore the fact that my prompt is <code>\u03bb</code>; you can set your own prompt with <code>:set prompt \"\u03bb \"</code>.</p>\n"}], "owner": {"reputation": 35, "user_id": 6825049, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b9852e926d11812934acfd1cb9f8b968?s=128&d=identicon&r=PG&f=1", "display_name": "Mingo Pan", "link": "https://stackoverflow.com/users/6825049/mingo-pan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 73, "favorite_count": 1, "accepted_answer_id": 55254521, "answer_count": 1, "score": -1, "last_activity_date": 1553361031, "creation_date": 1553058801, "last_edit_date": 1553361031, "question_id": 55253941, "link": "https://stackoverflow.com/questions/55253941/couldnt-match-expected-type-char-char-t-with-actual-type-char", "title": "Couldn&#39;t match expected type \u2018Char -&gt; [Char] -&gt; t\u2019 with actual type \u2018Char\u2019", "body": "<p>I wrote a function for replacing the certain elements in a list with giving element.</p>\n\n<pre><code>subst :: Eq t =&gt; t -&gt; t -&gt; [t] -&gt; [t]\nsubst a b [] = []\nsubst a b (x:xs) = if a == x\n                   then b : subst a b xs\n                   else\n                   subst a b xs\n</code></pre>\n\n<p>when I tested it with 0 1 [0,1,2,3], and here is what it showed</p>\n\n<pre><code>*Main&gt; 0 1 [0,1,2,3]\n\n&lt;interactive&gt;:68:1: error:\n    \u2022 Non type-variable argument\n        in the constraint: Num (t1 -&gt; [a] -&gt; t2)\n      (Use FlexibleContexts to permit this)\n    \u2022 When checking the inferred type\n        it :: forall t1 a t2. (Num t1, Num a, Num (t1 -&gt; [a] -&gt; t2)) =&gt; t2\n</code></pre>\n\n<p>When I tested it with 'e' 'a' \"hello\", the feedback as shown follows:</p>\n\n<pre><code>*Main&gt; 'e' 'a' \"hello\"\n\n&lt;interactive&gt;:69:1: error:\n    \u2022 Couldn't match expected type \u2018Char -&gt; [Char] -&gt; t\u2019\n                  with actual type \u2018Char\u2019\n\n    \u2022 The function \u2018'e'\u2019 is applied to two arguments,\n      but its type \u2018Char\u2019 has none\n      In the expression: 'e' 'a' \"hello\"\n      In an equation for \u2018it\u2019: it = 'e' 'a' \"hello\"\n    \u2022 Relevant bindings include it :: t (bound at &lt;interactive&gt;:69:1)\n</code></pre>\n\n<p>Can sombody help me explaining what is happening and why it doesn't work?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1553032170, "post_id": 55250459, "comment_id": 97233519, "body": "There was <a href=\"https://stackoverflow.com/questions/55230741/compiler-doesnt-pick-up-typeclass-for-the-polymorphic-constant-value\">a similar question very recently</a> - does enabling <code>ScopedTypeVariables</code> solve your problem as well?"}, {"owner": {"reputation": 1220, "user_id": 3711976, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/d83e1776e6d29a6e86818109b8ac2104?s=128&d=identicon&r=PG&f=1", "display_name": "Kakaji", "link": "https://stackoverflow.com/users/3711976/kakaji"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1553032277, "post_id": 55250459, "comment_id": 97233552, "body": "@RobinZigmond No, starting ghci with <code>ghci -XScopedTypeVariables</code> does not fix the error."}, {"owner": {"reputation": 1220, "user_id": 3711976, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/d83e1776e6d29a6e86818109b8ac2104?s=128&d=identicon&r=PG&f=1", "display_name": "Kakaji", "link": "https://stackoverflow.com/users/3711976/kakaji"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1553032348, "post_id": 55250459, "comment_id": 97233573, "body": "<code>{-# LANGUAGE ScopedTypeVariables #-}</code> doesn&#39;t help either."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 5, "creation_date": 1553032348, "post_id": 55250459, "comment_id": 97233574, "body": "<code>ScopedTypeVariables</code> only take action if you explicitly quantify the variables, i.e. you need to make the signature <code>heapsort :: \u2200 a . Ord a =&gt; [a] -&gt; [a]</code>. You may also write <code>forall</code> instead of <code>\u2200</code>."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1553032678, "post_id": 55250459, "comment_id": 97233693, "body": "@leftaroundabout I thought <code>\u2200</code> required <code>-XUnicodeSyntax</code> to work. In any case I would be fairly sure that <code>forall a.</code> is more common than <code>\u2200 a.</code> - so that would make <code>heapsort :: forall a. Ord a =&gt; [a] -&gt; [a]</code>."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1553032801, "post_id": 55250459, "comment_id": 97233731, "body": "@bradrn I don&#39;t doubt that <code>forall</code> is more common, just I prefer the Unicode version."}, {"owner": {"reputation": 1220, "user_id": 3711976, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/d83e1776e6d29a6e86818109b8ac2104?s=128&d=identicon&r=PG&f=1", "display_name": "Kakaji", "link": "https://stackoverflow.com/users/3711976/kakaji"}, "edited": false, "score": 0, "creation_date": 1553034761, "post_id": 55250459, "comment_id": 97234392, "body": "I didn&#39;t know <code>forall</code> is a language feature. Yes, <code>forall</code> in the type-signature coupled with <code>{-# LANGUAGE ScopedTypeVariables #-}</code> removes the error."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 1, "creation_date": 1553038859, "post_id": 55250459, "comment_id": 97235625, "body": "You don&#39;t actually need to give the type signature at all in this case, right? Simply <code>heapsort = Heap.toList . Heap.fromList</code> should be all you need, and type inference handles the rest."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 1, "creation_date": 1553043975, "post_id": 55250459, "comment_id": 97236814, "body": "@Kakaji Yes, <code>forall</code> is indeed a language feature - something like <code>a -&gt; a</code> is equivalent within GHC to <code>forall a. a -&gt; a</code>. It&#39;s enabled by extensions such as <code>-XExplicitForall</code>, <code>-XScopedTypeVariables</code> and <code>-XRankNTypes</code>. That last extension in particular is very common in advanced Haskell: if you haven&#39;t heard of it yet, I would recommend looking it up - it&#39;s very interesting!"}, {"owner": {"reputation": 1220, "user_id": 3711976, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/d83e1776e6d29a6e86818109b8ac2104?s=128&d=identicon&r=PG&f=1", "display_name": "Kakaji", "link": "https://stackoverflow.com/users/3711976/kakaji"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1553127657, "post_id": 55250459, "comment_id": 97275238, "body": "@amalloy Heap.fromList has to know if you need a MinHeap or a MaxHeap."}], "answers": [{"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 2, "last_activity_date": 1554514735, "creation_date": 1554514735, "answer_id": 55545126, "question_id": 55250459, "link": "https://stackoverflow.com/questions/55250459/haskell-how-to-use-a-type-parameter-specified-in-type-signature-in-the-functio/55545126#55545126", "title": "Haskell - How to use a type-parameter specified in type-signature in the function body?", "body": "<p>As indicated in the comments, you can do this using the <code>ScopedTypeVariables</code> extension.  This allows type variables used in function bodies to refer to the same variables used in the functions' signatures, but you have to \"opt in\" using the <code>forall</code> keyword:</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables #-}\n\nimport qualified Data.Heap as Heap\n\nheapsort :: forall a . (Ord a) =&gt; [a] -&gt; [a]\nheapsort xs = Heap.toList (Heap.fromList xs :: Heap.MinHeap a)\n</code></pre>\n\n<p>In this particular case, you could do it without any extension by specializing either <code>Heap.fromList</code> or <code>Heap.toList</code> to <code>MinHeap</code>.  For example:</p>\n\n<pre><code>heapsort' :: (Ord a) =&gt; [a] -&gt; [a]\nheapsort' = Heap.toList . minHeapFromList\n  where minHeapFromList :: (Ord a) =&gt; [a] -&gt; Heap.MinHeap a\n        minHeapFromList = Heap.fromList\n</code></pre>\n\n<p>Here, the <code>a</code> type variables in the signatures for <code>heapsort'</code> and <code>minHeapFromList</code> are unrelated but, of course, they unify in the body for <code>heapsort'</code>.</p>\n"}], "owner": {"reputation": 1220, "user_id": 3711976, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/d83e1776e6d29a6e86818109b8ac2104?s=128&d=identicon&r=PG&f=1", "display_name": "Kakaji", "link": "https://stackoverflow.com/users/3711976/kakaji"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 98, "favorite_count": 0, "accepted_answer_id": 55545126, "answer_count": 1, "score": 1, "last_activity_date": 1554514735, "creation_date": 1553031968, "question_id": 55250459, "link": "https://stackoverflow.com/questions/55250459/haskell-how-to-use-a-type-parameter-specified-in-type-signature-in-the-functio", "title": "Haskell - How to use a type-parameter specified in type-signature in the function body?", "body": "<p>I have the following heapsort code. </p>\n\n<pre><code>heapsort :: (Ord a) =&gt; [a] -&gt; [a]\nheapsort xs = Heap.toList (Heap.fromList $ xs :: Heap.MinHeap a)\n</code></pre>\n\n<p>This does not compile with the following error - </p>\n\n<pre><code>mergeLists.hs:32:28: error:\n    \u2022 Couldn't match type \u2018a1\u2019 with \u2018a\u2019\n      \u2018a1\u2019 is a rigid type variable bound by\n        an expression type signature:\n          forall a1. Heap.MinHeap a1\n        at mergeLists.hs:32:50-63\n      \u2018a\u2019 is a rigid type variable bound by\n        the type signature for:\n          heapsort :: forall a. Ord a =&gt; [a] -&gt; [a]\n        at mergeLists.hs:31:1-33\n      Expected type: Heap.MinHeap a1\n        Actual type: Heap.Heap Heap.MinPolicy a\n    \u2022 In the first argument of \u2018Heap.toList\u2019, namely\n        \u2018(Heap.fromList $ xs :: Heap.MinHeap a)\u2019\n      In the expression:\n        Heap.toList (Heap.fromList $ xs :: Heap.MinHeap a)\n      In an equation for \u2018heapsort\u2019:\n          heapsort xs = Heap.toList (Heap.fromList $ xs :: Heap.MinHeap a)\n    \u2022 Relevant bindings include\n        xs :: [a] (bound at mergeLists.hs:32:10)\n        heapsort :: [a] -&gt; [a] (bound at mergeLists.hs:32:1)\n   |\n32 | heapsort xs = Heap.toList (Heap.fromList $ xs :: Heap.MinHeap a)\n   |                            ^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>I think this is because <code>a</code> in function body is not the same as <code>a</code> in the signature of the function. For example, if I enable partial type signatures and do</p>\n\n<pre><code>heapsort :: (Ord a) =&gt; [a] -&gt; [a]\nheapsort xs = Heap.toList (Heap.fromList $ xs :: Heap.MinHeap _)\n</code></pre>\n\n<p>the code compiles with the following warning (but no error).</p>\n\n<pre><code>\u03bb&gt; :load mergeLists\n[1 of 1] Compiling Main             ( mergeLists.hs, interpreted )\n\nmergeLists.hs:32:63: warning: [-Wpartial-type-signatures]\n    \u2022 Found type wildcard \u2018_\u2019 standing for \u2018a\u2019\n      Where: \u2018a\u2019 is a rigid type variable bound by\n               the type signature for:\n                 heapsort :: forall a. Ord a =&gt; [a] -&gt; [a]\n               at mergeLists.hs:31:1-33\n    \u2022 In an expression type signature: Heap.MinHeap _\n      In the first argument of \u2018Heap.toList\u2019, namely\n        \u2018(Heap.fromList $ xs :: Heap.MinHeap _)\u2019\n      In the expression:\n        Heap.toList (Heap.fromList $ xs :: Heap.MinHeap _)\n    \u2022 Relevant bindings include\n        xs :: [a] (bound at mergeLists.hs:32:10)\n        heapsort :: [a] -&gt; [a] (bound at mergeLists.hs:32:1)\n   |\n32 | heapsort xs = Heap.toList (Heap.fromList $ xs :: Heap.MinHeap _)\n   |                                                               ^\nOk, one module loaded.\n</code></pre>\n\n<p>So, how do I make this work with using partial type signatures feature? In general, how do I use a type-parameter from function's signature in the function's definition? </p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 1, "creation_date": 1553024512, "post_id": 55248752, "comment_id": 97230359, "body": "This is easy to do: <code>map read</code> will produce for instance <code>[[6,5,4]]</code> from <code>[&quot;[6,5,4]&quot;]</code>, provided the typing is clear."}, {"owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 1, "creation_date": 1553027269, "post_id": 55248752, "comment_id": 97231593, "body": "<code>read &quot;[3,7,6]&quot; :: [Int]</code> will give <code>[3,7,6]</code>."}, {"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 1, "creation_date": 1553027636, "post_id": 55248752, "comment_id": 97231758, "body": "Note that to use <code>read</code> you will need to use <code>Text.unpack</code> first, or use the <code>String</code> functions to read the file instead of the <code>Text</code> ones."}, {"owner": {"reputation": 17, "user_id": 11223128, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-KQmH9yLBqD0/AAAAAAAAAAI/AAAAAAAAAM0/D5Acg1f8G4U/photo.jpg?sz=128", "display_name": "\uc800Nash", "link": "https://stackoverflow.com/users/11223128/%ec%a0%80nash"}, "reply_to_user": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 0, "creation_date": 1553030851, "post_id": 55248752, "comment_id": 97233061, "body": "@Elmex80s does it work with char? like read &quot;[A,B,C]&quot; :: [Char]"}, {"owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 0, "creation_date": 1553031162, "post_id": 55248752, "comment_id": 97233171, "body": "<code>read &quot;[&#39;A&#39;,&#39;B&#39;,&#39;C&#39;]&quot; :: [Char]</code> will give <code>&quot;ABC&quot;</code>."}], "answers": [{"tags": [], "owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "is_accepted": true, "score": 0, "last_activity_date": 1553049230, "creation_date": 1553049230, "answer_id": 55252727, "question_id": 55248752, "link": "https://stackoverflow.com/questions/55248752/parse-list-of-strings-to-int/55252727#55252727", "title": "Parse list of strings to Int", "body": "<p>Just use <code>read</code>:</p>\n\n<pre><code>l = [\"[6,5,3]\",\"[4,1,4]\",\"[3,7,6]\"]\n[read x :: [Int] | x &lt;- l]\n=&gt; [[6,5,3],[4,1,4],[3,7,6]]\n</code></pre>\n\n<p>If the line <code>[\"[6,5,3]\",\"[4,1,4]\",\"[3,7,6]\"]</code> is a full string you can just read all of it:</p>\n\n<p><code>read line :: [[Int]]</code></p>\n"}], "owner": {"reputation": 17, "user_id": 11223128, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-KQmH9yLBqD0/AAAAAAAAAAI/AAAAAAAAAM0/D5Acg1f8G4U/photo.jpg?sz=128", "display_name": "\uc800Nash", "link": "https://stackoverflow.com/users/11223128/%ec%a0%80nash"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 64, "favorite_count": 0, "accepted_answer_id": 55252727, "answer_count": 1, "score": -2, "last_activity_date": 1553049230, "creation_date": 1553023940, "question_id": 55248752, "link": "https://stackoverflow.com/questions/55248752/parse-list-of-strings-to-int", "title": "Parse list of strings to Int", "body": "<p>I'm reading positions from a file and getting this:</p>\n\n<pre><code>[\"[6,5,3]\",\"[4,1,4]\",\"[3,7,6]\"]\n</code></pre>\n\n<p>and I need a list of Int like: </p>\n\n<pre><code>[[6,5,3],[4,1,4,],[3,7,6]]\n</code></pre>\n\n<p>this is the source code:</p>\n\n<pre><code>import System.IO\nimport qualified Data.Text    as Text\nimport qualified Data.Text.IO as Text\n\nmain = do\n    ls &lt;- fmap Text.lines (Text.readFile \"file.txt\")\n</code></pre>\n"}, {"tags": ["haskell", "numerical-methods", "gradient-descent", "autodiff"], "owner": {"reputation": 463, "user_id": 7342065, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9a47003905491d69d47a261235044a44?s=128&d=identicon&r=PG&f=1", "display_name": "kye", "link": "https://stackoverflow.com/users/7342065/kye"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 84, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1553012808, "creation_date": 1553012808, "question_id": 55245746, "link": "https://stackoverflow.com/questions/55245746/how-can-i-add-custom-gradients-in-the-haskell-autodifferentiation-library-ad", "title": "How can I add custom gradients in the Haskell autodifferentiation library &quot;ad&quot;?", "body": "<p>If I want to give a custom or known gradient for a function, how can I do that in the <code>ad</code> library? (I don't want to autodifferentiate through this function.) I am using the <a href=\"http://hackage.haskell.org/package/ad-4.3.6/docs/Numeric-AD.html#v:grad\" rel=\"nofollow noreferrer\">grad</a> function in this library.</p>\n\n<p>If the library doesn't provide this feature, is there some way I can easily implement this functionality myself, perhaps by changing the definitions of leaf nodes in <code>ad</code> or by editing the dual numbers that presumably carry the numerical gradients?</p>\n\n<p>Here's a concrete example of what I mean:</p>\n\n<p>Say I have some function I want to take the gradient of, say <code>f(x, y) = x^2 + 3 * g(x, y)^2</code>. Then say that <code>g(x, y)</code> is a function whose definition is complicated, but whose gradient I've already calculated analytically and is quite simple. Thus, when I take <code>grad f</code> and evaluate it at a point <code>(x, y)</code>, I'd like to just plug in my custom gradient for <code>g</code>, instead of autodiffing through it: something like <code>my_nice_grad_of_g (x, y)</code>.</p>\n\n<p>I see other autodiff libraries do provide this feature, for example <a href=\"https://github.com/stan-dev/math/wiki/Adding-a-new-function-with-known-gradients\" rel=\"nofollow noreferrer\">Stan</a> and <a href=\"https://www.tensorflow.org/api_docs/python/tf/RegisterGradient\" rel=\"nofollow noreferrer\">Tensorflow</a> both allow users to define gradients of a function.</p>\n"}, {"tags": ["haskell", "typeclass", "rank-n-types"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1553012821, "post_id": 55245480, "comment_id": 97224392, "body": "Not sure what the problem with the explicit type annotation is, but <code>:t on (+) Integer</code> seems to work fine without it."}, {"owner": {"reputation": 5328, "user_id": 325809, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/b858606c4daae58cfdb362bf2fc4caa5?s=128&d=identicon&r=PG", "display_name": "fakedrake", "link": "https://stackoverflow.com/users/325809/fakedrake"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1553021188, "post_id": 55245480, "comment_id": 97228759, "body": "The problem is that without the explicit annotation the type is not <code>(Integral a1, Integral a2) =&gt; a1 -&gt; a2 -&gt; Integer</code> but rather <code>Integral a =&gt; a -&gt; a -&gt; Integer</code>"}, {"owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "edited": false, "score": 0, "creation_date": 1553039206, "post_id": 55245480, "comment_id": 97235713, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/31220903/haskell-how-to-create-most-generic-function-possible-that-applies-a-function-to\">Haskell: How to create most generic function possible that applies a function to tuple items</a>"}, {"owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "edited": false, "score": 0, "creation_date": 1553039310, "post_id": 55245480, "comment_id": 97235733, "body": "tl;dr of dupe: Sorry, Haskell doesn&#39;t have the necessary feature (intersection types) for this to work in general. You can do hacks with type classes to make it work in some special cases though."}], "owner": {"reputation": 5328, "user_id": 325809, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/b858606c4daae58cfdb362bf2fc4caa5?s=128&d=identicon&r=PG", "display_name": "fakedrake", "link": "https://stackoverflow.com/users/325809/fakedrake"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 97, "favorite_count": 1, "answer_count": 0, "score": 8, "last_activity_date": 1553015826, "creation_date": 1553011959, "last_edit_date": 1553015826, "question_id": 55245480, "link": "https://stackoverflow.com/questions/55245480/referential-transparency-of-polymorphic-functions", "title": "Referential transparency of polymorphic functions", "body": "<p>consider this implementation of <code>on</code></p>\n\n<pre><code>on f g = curry $ (. bimap g g) $ uncurry f\n</code></pre>\n\n<p>What is it's type? GHC would say <code>(b -&gt; b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; a -&gt; c</code> and that's a good guess. But it misses the instance <code>on (+) toInteger</code>. Let's try to fix that (using <code>RankNTypes</code>, <code>KindSignatures</code>, <code>AllowAmbiguousTypes</code> and <code>ConstraintKinds</code>):</p>\n\n<pre><code>on :: forall (co :: * -&gt; Constraint) a1 a2 b c . \n      (co a1, co a2) =&gt; \n      (b -&gt; b -&gt; c) \n   -&gt; (forall a . co a =&gt; a -&gt; b)\n   -&gt; a1 -&gt; a2 -&gt; c\n</code></pre>\n\n<p>And that typechecks. But when we try </p>\n\n<pre><code>&gt; :t (+) `on` toInteger\n</code></pre>\n\n<p>We get</p>\n\n<pre><code>\u2022 Couldn't match type \u2018c\u2019 with \u2018Integer\u2019\n    \u2018c\u2019 is untouchable\n      inside the constraints: co a\n      bound by a type expected by the context:\n                 forall a. co a =&gt; a -&gt; c\n      at &lt;interactive&gt;:1:1-18\n  \u2018c\u2019 is a rigid type variable bound by\n    the inferred type of it :: (co a1, co a2, Num c) =&gt; a1 -&gt; a2 -&gt; c\n    at &lt;interactive&gt;:1:1\n  Possible fix: add a type signature for \u2018it\u2019\n  Expected type: a -&gt; c\n    Actual type: a -&gt; Integer\n\u2022 In the second argument of \u2018on\u2019, namely \u2018toInteger\u2019\n  In the expression: (+) `on` toInteger\n</code></pre>\n\n<p>So what does that mean?</p>\n"}, {"tags": ["haskell", "scope", "ghci"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1553007617, "post_id": 55243938, "comment_id": 97220991, "body": "&quot;scope&quot; just means the part of a program from which you can access a particular variable. It exists in every programming language (and is actually usually less visible in Haskell than in other languages, given that Haskell variables are immutable). Anyway, it&#39;s really not clear what you&#39;re trying to output (it appears to be a list of pairs of lists? and <code>[x | x &lt;- numbers]</code> is identical to just <code>numbers</code>) - but the reason your code doesn&#39;t work is that <code>x</code> and <code>y</code> are only in scope inside the list comprehensions you&#39;re using them in."}, {"owner": {"reputation": 1096, "user_id": 6748145, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hladU.jpg?s=128&g=1", "display_name": "SuperHanz98", "link": "https://stackoverflow.com/users/6748145/superhanz98"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1553008532, "post_id": 55243938, "comment_id": 97221626, "body": "@RobinZigmond Yeah I want to output a list of pairs, where the spelling of the first element in the pair is longer than the spelling of the second element in the pair, but also, the first element in the pair as a number, is less than the second element in the pair as a number.  I understand scope in other languages, just not in Haskell. I&#39;m trying to understand how I can use the values from the nested list comprehension, in the overall list comprehension"}], "answers": [{"tags": [], "owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "is_accepted": true, "score": 3, "last_activity_date": 1553009848, "creation_date": 1553009848, "answer_id": 55244761, "question_id": 55243938, "link": "https://stackoverflow.com/questions/55243938/output-all-instances-from-1-to-8-where-the-length-of-the-spelling-of-a-number-is/55244761#55244761", "title": "Output all instances from 1 to 8 where the length of the spelling of a number is greater than the length of the spelling of a value higher than it?", "body": "<p>It sounds like you want something like this:</p>\n\n<pre><code>[(y1, y2) | (x1, y1) &lt;- numbers, (x2, y2) &lt;- numbers, length x1 &gt; length x2, y1 &lt; y2]\n</code></pre>\n\n<p>That is, it's a list of pairs of numbers - with the requirements you specify. I'm not able to test this at a moment, I think it should work but let me know if you have any issues with it.</p>\n\n<p>Your scope issues were because you were trying to do nested comprehensions and access variables from the inner comprehension in the outer one - this is not allowed, because a variable used inside a comprehension is only in scope in that particular comprehension.</p>\n\n<p>I have also replaced your uses of <code>fst</code> and <code>snd</code> by explicit pattern-matching on the elements of the pair, which is almost always preferred because it's more explicit.</p>\n"}], "owner": {"reputation": 1096, "user_id": 6748145, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hladU.jpg?s=128&g=1", "display_name": "SuperHanz98", "link": "https://stackoverflow.com/users/6748145/superhanz98"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 57, "favorite_count": 0, "accepted_answer_id": 55244761, "answer_count": 1, "score": -1, "last_activity_date": 1553009848, "creation_date": 1553007434, "last_edit_date": 1553008789, "question_id": 55243938, "link": "https://stackoverflow.com/questions/55243938/output-all-instances-from-1-to-8-where-the-length-of-the-spelling-of-a-number-is", "title": "Output all instances from 1 to 8 where the length of the spelling of a number is greater than the length of the spelling of a value higher than it?", "body": "<p>I'm a complete Haskell noob and I've been trying to do this for an entire day now. </p>\n\n<p>So one output could be:</p>\n\n<p>Three,Six</p>\n\n<p>(3 is less than 6 but the spelling of it is longer than the spelling of 6)</p>\n\n<p>I came up with this in Haskell but the variables go out of scope, I don't really understand scope in Haskell yet. This might be completely wrong but any help is appreciated.</p>\n\n<pre><code>let numbers = [(\"One\",1),(\"Two\",2),(\"Three\",3),(\"Four\",4),(\"Five\",5),(\"Six\",6),(\"Seven\",7),(\"Eight\",8)]\n\n[([ x | x &lt;- numbers], [y | y &lt;- numbers]) | length (fst x) &gt; length (fst y), snd x &lt; snd y]\n</code></pre>\n\n<p>Can someone help me to correct this nested list comprehension? Or even tell me if I can use a nested list comprehension at all?</p>\n\n<p>To clarify: </p>\n\n<p>I want to output a list of pairs, where the spelling of the first element in the pair is longer than the spelling of the second element in the pair, but also, the first element in the pair as a number, is less than the second element in the pair as a number.</p>\n"}, {"tags": ["parsing", "haskell", "parsec"], "answers": [{"comments": [{"owner": {"reputation": 1306, "user_id": 5664775, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/QqQGd.jpg?s=128&g=1", "display_name": "Luke Collins", "link": "https://stackoverflow.com/users/5664775/luke-collins"}, "edited": false, "score": 0, "creation_date": 1553021316, "post_id": 55244917, "comment_id": 97228832, "body": "I tried adding <code>[</code> and <code>]</code> both to <code>opStart</code> and <code>opLetter</code>, but this did not solve the problem. :/"}], "tags": [], "owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "is_accepted": false, "score": 1, "last_activity_date": 1553010327, "creation_date": 1553010327, "answer_id": 55244917, "question_id": 55242917, "link": "https://stackoverflow.com/questions/55242917/haskell-parsec-touching-operators/55244917#55244917", "title": "Haskell Parsec: Touching Operators", "body": "<p>I am not very familiar with the token side of Parsec, but from <a href=\"http://hackage.haskell.org/package/parsec-3.1.13.0/docs/Text-Parsec-Token.html#t:GenLanguageDef\" rel=\"nofollow noreferrer\">its documentation</a> I think you need to provide <code>opLetter</code> and possibly <code>opStart</code>, since you are providing <code>reservedOp</code>:</p>\n\n<blockquote>\n<pre><code>opLetter :: ParsecT s u m Char    \n</code></pre>\n  \n  <p>This parser should accept any legal tail characters of operators. Note that this parser should even be defined if the language doesn't support user-defined operators, or otherwise the reservedOp parser won't work correctly.</p>\n</blockquote>\n\n<p>In particular the default <code>opLetter</code> doesn't include <code>[</code> or <code>]</code>, so it is behaving erratically when you think one of those should be an op.</p>\n"}, {"comments": [{"owner": {"reputation": 1306, "user_id": 5664775, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/QqQGd.jpg?s=128&g=1", "display_name": "Luke Collins", "link": "https://stackoverflow.com/users/5664775/luke-collins"}, "edited": false, "score": 0, "creation_date": 1553020659, "post_id": 55245357, "comment_id": 97228520, "body": "The example I provided is an MWE of the actual language I&#39;m working with, which allows for formulae of the form <code>[x,c]formula</code> where <code>x</code> and <code>c</code> are parsed by different parsers. How could I do this using your way? Would I have to create a parser to get <code>x</code> and <code>c</code> separately?"}, {"owner": {"reputation": 932, "user_id": 6629874, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/3SUbo.jpg?s=128&g=1", "display_name": "5ndG", "link": "https://stackoverflow.com/users/6629874/5ndg"}, "reply_to_user": {"reputation": 1306, "user_id": 5664775, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/QqQGd.jpg?s=128&g=1", "display_name": "Luke Collins", "link": "https://stackoverflow.com/users/5664775/luke-collins"}, "edited": false, "score": 0, "creation_date": 1553024581, "post_id": 55245357, "comment_id": 97230391, "body": "I might not be understanding you correctly, but I&#39;d go with something like <code>var = some parseXCetc</code> where <code>parseXCetc = (parseX &lt;|&gt; parseC &lt;|&gt; yourOtherParsers) &gt;&gt;= \\xc -&gt; (char &#39;,&#39; &lt;|&gt; (lookAhead $ char &#39;]&#39;)) &gt;&gt; return xc</code>. The lookAhead is so that it doesn&#39;t consume the final bracket. Also, one thing I find useful when debugging parsers is to put <code>parserTraced &quot;nameofparser&quot; $</code> just after the = in each parser definition. It will print out loads of useful info that you can use to work out what went wrong."}], "tags": [], "owner": {"reputation": 932, "user_id": 6629874, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/3SUbo.jpg?s=128&g=1", "display_name": "5ndG", "link": "https://stackoverflow.com/users/6629874/5ndg"}, "is_accepted": false, "score": 1, "last_activity_date": 1553011556, "creation_date": 1553011556, "answer_id": 55245357, "question_id": 55242917, "link": "https://stackoverflow.com/questions/55242917/haskell-parsec-touching-operators/55245357#55245357", "title": "Haskell Parsec: Touching Operators", "body": "<p>I think it doesn't like you having the square brackets as operators. I would try this:</p>\n\n<ol>\n<li>remove <code>\"[\"</code> and <code>\"]\"</code> from <code>Token.reservedOpNames</code></li>\n<li>add another parser to your Trivial Parsers: <code>squareBrackets = Token.brackets lexer</code></li>\n<li><p>change your <code>boundFormula</code> function to:</p>\n\n<pre><code>boundFormula =\n    do v &lt;- squareBrackets var\n       f &lt;- formulaTerm\n       return $ Bound v f\n</code></pre></li>\n</ol>\n"}, {"tags": [], "owner": {"reputation": 14543, "user_id": 235908, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/rTstt.jpg?s=128&g=1", "display_name": "Simon Shine", "link": "https://stackoverflow.com/users/235908/simon-shine"}, "is_accepted": false, "score": 1, "last_activity_date": 1553015203, "last_edit_date": 1553015203, "creation_date": 1553014898, "answer_id": 55246394, "question_id": 55242917, "link": "https://stackoverflow.com/questions/55242917/haskell-parsec-touching-operators/55246394#55246394", "title": "Haskell Parsec: Touching Operators", "body": "<p>Here's how I would write your parser with Megaparsec (<a href=\"http://hackage.haskell.org/package/megaparsec\" rel=\"nofollow noreferrer\">docs</a>, <a href=\"https://markkarpov.com/megaparsec/parsing-simple-imperative-language.html\" rel=\"nofollow noreferrer\">tutorial</a>):</p>\n\n<pre><code>import Text.Megaparsec\nimport qualified Text.Megaparsec.Char as C\nimport qualified Text.Megaparsec.Char.Lexer as L\nimport Control.Monad.Combinators.Expr\nimport Data.Void\n\ntype Parser = Parsec Void String\n\ndata Formula = LVar String\n             | TT\n             | FF\n             | Not Formula -- Added to demonstrate `Prefix` of `makeExprParser`\n             | And Formula Formula\n             | Bound Binder Formula\n             deriving Show\n\ndata Binder = BVar String\n            | FVar String\n            deriving Show\n</code></pre>\n\n<p>Megaparsec also has <code>makeExprParser</code>, but it's moved into a separate <a href=\"https://hackage.haskell.org/package/parser-combinators\" rel=\"nofollow noreferrer\"><code>parser-combinators</code></a> package:</p>\n\n<pre><code>formula :: Parser Formula\nformula = makeExprParser term operators\n  where\n    term = choice\n      [ TT &lt;$ symbol \"true\"\n      , FF &lt;$ symbol \"false\"\n      , LVar &lt;$&gt; var\n      , Bound &lt;$&gt; brackets binder &lt;*&gt; parens formula\n      ]\n\n    binder = choice\n      [ BVar &lt;$&gt; (C.char '$' &gt;&gt; var)\n      , FVar &lt;$&gt; var\n      ]\n\n    var = lexeme $ some C.letterChar\n\n    operators :: [[Operator Parser Formula]]\n    operators =\n      [ [ Prefix (Not &lt;$ symbol \"\u00ac\") ]\n      , [ InfixL (And &lt;$ symbol \"&amp;\") ]\n      ]\n</code></pre>\n\n<p>Some points:</p>\n\n<ul>\n<li>Use applicative style (<code>&lt;$&gt;</code>, <code>&lt;$</code>, <code>$&gt;</code>) when possible.</li>\n<li>Megaparsec renamed some combinators like <code>many1</code> to <code>some</code>. There's a tutorial, <a href=\"https://markkarpov.com/megaparsec/switch-from-parsec-to-megaparsec.html\" rel=\"nofollow noreferrer\">Switch from Parsec to Megaparsec</a> that aids the transition. (It might be a little outdated; I sent a PR in the process of answering this question.)</li>\n<li>You don't need <code>try</code> when <code>BVar</code>s and <code>FVar</code>s are mutually exclusive on the first character, <code>$</code>. Simply listing the <code>BVar</code> parser first is enough. Since you won't find any other valid expression that begins with <code>$</code>, a failed parser that consumed a <code>$</code> is not a problem.</li>\n<li><p>Your grammar doesn't say anything about literal parentheses or literal parentheses after brackets. So in order to parse <code>\"[$x](x &amp; true)\"</code> you need to add explicit parentheses to the grammar, either as</p>\n\n<pre><code>formula ::= ... | '(' formula ')'\n</code></pre>\n\n<p>or as</p>\n\n<pre><code>formula ::= ... | '[' binder ']' '(' formula ')'\n</code></pre>\n\n<p>if they're only allowed there. I've gone with the latter, but this is probably wrong.</p></li>\n</ul>\n\n<p>Continuing, </p>\n\n<pre><code>lexeme :: Parser a -&gt; Parser a\nlexeme = L.lexeme spaceConsumer\n\nsymbol :: String -&gt; Parser String\nsymbol = L.symbol spaceConsumer\n\nspaceConsumer :: Parser ()\nspaceConsumer = L.space C.space1 empty empty\n\nbrackets, parens :: Parser a -&gt; Parser a\nbrackets = between (symbol \"[\") (symbol \"]\")\nparens = between (symbol \"(\") (symbol \")\")\n</code></pre>\n\n<p>Some last points,</p>\n\n<ul>\n<li>Use <code>between</code> to wrap a parser in <code>brackets</code> or <code>braces</code>.</li>\n<li>Parsec token parsers are a little complicated because they require you to specify what a token is and what whitespace is and so on. Megaparsec lexeme parsers have some of that complexity, but you can leave out the parts that are not relevant (e.g. line comments and block comments) by using <code>empty :: Alternative f =&gt; f a</code>.</li>\n<li><p>Whitespace in parser combinators is tricky. Make sure that all parsers are either lexeme parsers (e.g. <code>symbol \"foo\"</code>, <code>lexeme $ some C.letterChar</code>) or combinations of lexeme parsers. If you use <code>lexeme</code> on something that already is a lexeme parser, you're doing something wrong, and if you forget to use <code>lexeme</code> on something, you'll risk disallowing whitespace in places where you want to allow it.</p>\n\n<p>I've not used <code>lexeme</code> around <code>C.char '$'</code>.</p></li>\n<li><p>There are always corner cases, e.g. whitespace at the beginning:</p>\n\n<pre><code>&gt; parseTest formula \" [$x](x &amp; true) \"\n1:1:\n  |\n1 |  [$x](x &amp; true) \n  | ^^^^^\nunexpected \" [$x]\"\nexpecting \"false\", \"true\", '[', '\u00ac', or letter\n</code></pre>\n\n<p>If you want to thoroughly assert that your parser allows whitespace in all the right places, you can build an \"ugly-printer\" that, for arbitrary syntax trees, inserts arbitrary whitespace where allowed. Your property is then that parsing an ugly-printed syntax tree should yield the same syntax tree.</p></li>\n<li><p>Megaparsec parse errors look super nice.</p>\n\n<p>They can look nicer if you use the <a href=\"http://hackage.haskell.org/package/megaparsec/docs/Text-Megaparsec.html#v:-60--63--62-\" rel=\"nofollow noreferrer\"><code>&lt;?&gt;</code></a> operator (also available in Parsec).</p></li>\n</ul>\n"}], "owner": {"reputation": 1306, "user_id": 5664775, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/QqQGd.jpg?s=128&g=1", "display_name": "Luke Collins", "link": "https://stackoverflow.com/users/5664775/luke-collins"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 366, "favorite_count": 0, "answer_count": 3, "score": 1, "last_activity_date": 1553015203, "creation_date": 1553004390, "question_id": 55242917, "link": "https://stackoverflow.com/questions/55242917/haskell-parsec-touching-operators", "title": "Haskell Parsec: Touching Operators", "body": "<p>I have a logical language defined by the following BNF.</p>\n\n<pre><code> formula ::= true\n           | false\n           | var\n           | formula &amp; formula\n           | [binder] formula\n\n binder  ::= var \n           | $var\n</code></pre>\n\n<p>Essentially, this allows for formulae such as <code>x &amp; true</code>, <code>[x]x</code> and <code>[$x](x &amp; true)</code>.  The semantics are not important here; but the essential thing is that I have these square bracketed expressions appearing before formulae, and inside those square bracketed expressions, identifiers may or may not be preceded by a dollar sign (<code>$</code>). Now I have used Haskell's Parsec library to help me construct a parser for this language, detailed below.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>module LogicParser where\n\nimport System.IO\nimport Control.Monad\nimport Text.ParserCombinators.Parsec\nimport Text.ParserCombinators.Parsec.Expr\nimport Text.ParserCombinators.Parsec.Language\nimport qualified Text.ParserCombinators.Parsec.Token as Token\n\n-- Data Structures\ndata Formula = LVar String\n             | TT\n             | FF\n             | And Formula Formula\n             | Bound Binder Formula\n             deriving Show\n\ndata Binder = BVar String\n             | FVar String\n             deriving Show\n\n-- Language Definition\nlang :: LanguageDef st\nlang =\n    emptyDef{ Token.identStart      = letter\n            , Token.identLetter     = alphaNum\n            , Token.reservedOpNames = [\"&amp;\", \"$\", \"[\", \"]\"]\n            , Token.reservedNames   = [\"tt\", \"ff\"]\n            }\n\n\n-- Lexer for langauge\nlexer = \n    Token.makeTokenParser lang\n\n\n-- Trivial Parsers\nidentifier     = Token.identifier lexer\nkeyword        = Token.reserved lexer\nop             = Token.reservedOp lexer\nroundBrackets  = Token.parens lexer\nwhiteSpace     = Token.whiteSpace lexer\n\n-- Main Parser, takes care of trailing whitespaces\nformulaParser :: Parser Formula\nformulaParser = whiteSpace &gt;&gt; formula\n\n-- Parsing Formulas\nformula :: Parser Formula\nformula = andFormula\n        &lt;|&gt; formulaTerm\n\n-- Term in a Formula\nformulaTerm :: Parser Formula\nformulaTerm = roundBrackets formula\n            &lt;|&gt; ttFormula\n            &lt;|&gt; ffFormula\n            &lt;|&gt; lvarFormula\n            &lt;|&gt; boundFormula\n\n-- Conjunction\nandFormula :: Parser Formula\nandFormula = \n    buildExpressionParser [[Infix (op \"&amp;\" &gt;&gt; return And) AssocLeft]] formulaTerm\n\n-- Bound Formula\nboundFormula :: Parser Formula\nboundFormula = \n    do  op \"[\"\n        v &lt;- var\n        op \"]\"\n        f &lt;- formulaTerm\n        return $ Bound v f\n\n-- Truth\nttFormula :: Parser Formula\nttFormula = keyword \"tt\" &gt;&gt; return TT\n\n-- Falsehood\nffFormula :: Parser Formula\nffFormula = keyword \"ff\" &gt;&gt; return FF\n\n-- Logical Variable\nlvarFormula :: Parser Formula\nlvarFormula =\n    do  v &lt;- identifier\n        return $ LVar v\n\n-- Variable\nvar :: Parser Binder\nvar = try bvar &lt;|&gt; fvar\n\n-- Bound Variable\nbvar :: Parser Binder\nbvar =\n    do  op \"$\"\n        v &lt;- identifier\n        return $ BVar v\n\n-- Free Variable\nfvar :: Parser Binder\nfvar =\n    do  v &lt;- identifier\n        return $ FVar v\n\n\n-- For testing\nmain :: IO ()\nmain = interact (unlines . (map stringParser) . lines)\n\nstringParser :: String -&gt; String\nstringParser s = \n    case ret of\n        Left e -&gt;  \"Error: \" ++ (show e)\n        Right n -&gt; \"Interpreted as: \" ++ (show n)\n    where \n        ret = parse formulaParser \"\" s\n</code></pre>\n\n<p>My issue is the following. When the dollar sign operator (<code>$</code>) <em>touches</em> the square bracket, I get an error, whereas if I add a space, the parser works fine:</p>\n\n<p><a href=\"https://i.stack.imgur.com/r8aXK.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/r8aXK.png\" alt=\"enter image description here\"></a></p>\n\n<p>How can I get the parser to recognise <code>[$x](x &amp; true)</code>? Note that it has no issue with <code>&amp;</code> touching its operands, only when the two operators <code>[</code> and <code>$</code> touch.</p>\n"}, {"tags": ["haskell", "scotty"], "answers": [{"tags": [], "owner": {"reputation": 1825, "user_id": 5156709, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/08c6c567409fda82303b32a475c255cf?s=128&d=identicon&r=PG&f=1", "display_name": "Nick Acosta", "link": "https://stackoverflow.com/users/5156709/nick-acosta"}, "is_accepted": true, "score": 1, "last_activity_date": 1553065354, "last_edit_date": 1553065354, "creation_date": 1553062923, "answer_id": 55254666, "question_id": 55240176, "link": "https://stackoverflow.com/questions/55240176/how-to-set-a-header-with-static-middleware-in-scotty/55254666#55254666", "title": "How to set a header with static middleware in Scotty?", "body": "<p>You want the <code>addHeader</code> function from Web.Scotty:</p>\n\n<p><a href=\"http://hackage.haskell.org/package/scotty-0.11.3/docs/Web-Scotty.html\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/scotty-0.11.3/docs/Web-Scotty.html</a></p>\n\n<pre><code>addHeader :: Text -&gt; Text -&gt; ActionM ()\n</code></pre>\n\n<p>Example:</p>\n\n<pre><code>{-#Language OverloadedStrings#-}\nimport           Network.Wai.Middleware.Static\nimport           Web.Scotty\n\nmain :: IO ()\nmain = do\n  scotty 3000 $ do\n    middleware static\n    get \"/some/:file\" $ do\n      f &lt;- param \"file\"\n      addHeader \"Content-Type\" \"image/png\"\n      file f\n\n</code></pre>\n\n<p>A request to <a href=\"http://localhost:3000/some/image\" rel=\"nofollow noreferrer\">http://localhost:3000/some/image</a> yields a file named \"image\" with a content type of <code>image/png</code>:</p>\n\n<p><a href=\"https://i.stack.imgur.com/ZEfnJ.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/ZEfnJ.png\" alt=\"enter image description here\"></a></p>\n"}], "owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 191, "favorite_count": 0, "accepted_answer_id": 55254666, "answer_count": 1, "score": 3, "last_activity_date": 1553065354, "creation_date": 1552995591, "question_id": 55240176, "link": "https://stackoverflow.com/questions/55240176/how-to-set-a-header-with-static-middleware-in-scotty", "title": "How to set a header with static middleware in Scotty?", "body": "<p>Suppose I have a serving of static files, but they are without extension. I want to set header \"Content-Type: image/png\" for all of them <strong>which are serving from \"some/\"</strong> (1st rule). How to do it in this code?</p>\n\n<pre><code>import Network.Wai.Middleware.Static\nimport Web.Scotty\n\nroutes :: Scotty M ()\nroutes = do\n  ...\n  middleware $ staticPolicy $\n    contains \"some/\" &gt;-&gt; (addBase \"/something/files/\")\n    &lt;|&gt;\n    addBase \"/elsewhere/\"\n</code></pre>\n\n<p>I tried this:</p>\n\n<pre><code>setContentType :: Middleware\nsetContentType = modifyResponse $ mapResponseHeaders \n((\"Content-Type\", \"image/png\"):)\n\nreqInfixedWith :: Text -&gt; Request -&gt; Bool\nreqInfixedWith str req =\n  isInfixOf str $ convertString $ rawQueryString req\n\n...\n\n-- in routes\n  middleware $ ifRequest (reqInfixedWith \"some/\") setContentType\n</code></pre>\n\n<p>and checked with <code>Debug.Trace</code> request's path, query string - all are empty, while actual request is \"...:8080/some/somefile\".</p>\n\n<p>What is the correct way to do it?</p>\n"}, {"tags": ["string", "haskell"], "answers": [{"tags": [], "owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "is_accepted": false, "score": 4, "last_activity_date": 1552994234, "creation_date": 1552994234, "answer_id": 55239754, "question_id": 55239588, "link": "https://stackoverflow.com/questions/55239588/converting-a-string-of-characters-into-a-list-with-a-set-layout-in-haskell/55239754#55239754", "title": "Converting a string of characters into a list with a set layout in Haskell", "body": "<p>We need more input-output examples. For example what should happen to <code>\"12z\"</code>? Also it is not really clear what <code>reads</code> means. But I think you want this</p>\n\n<pre><code>[(c, read i :: Int) | [i, c] &lt;- chunksOf 2 xs]\n</code></pre>\n\n<p>Don't forget to import <code>chunksOf</code>, which can be found in <a href=\"https://hackage.haskell.org/package/split-0.2.3.3/docs/Data-List-Split.html\" rel=\"nofollow noreferrer\">Data.List.Split</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 1104, "user_id": 9769772, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Koralp Catalsakal", "link": "https://stackoverflow.com/users/9769772/koralp-catalsakal"}, "is_accepted": true, "score": 5, "last_activity_date": 1552994283, "creation_date": 1552994283, "answer_id": 55239769, "question_id": 55239588, "link": "https://stackoverflow.com/questions/55239588/converting-a-string-of-characters-into-a-list-with-a-set-layout-in-haskell/55239769#55239769", "title": "Converting a string of characters into a list with a set layout in Haskell", "body": "<p>I wrote a recursive code for your request. </p>\n\n<pre><code>enlarge :: String -&gt; [(Char,Int)]\nenlarge [] = []\nenlarge (x:y:ls) = [(y,digitToInt x)] ++ enlarge ls\n</code></pre>\n\n<p>Here, the code assumes that the input length is even. And used <code>digitToInt</code> to convert the Char to Int.</p>\n"}], "owner": {"reputation": 169, "user_id": 7154023, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/224b13f4f5add9892a433551d300dbc0?s=128&d=identicon&r=PG&f=1", "display_name": "Kappa123", "link": "https://stackoverflow.com/users/7154023/kappa123"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 98, "favorite_count": 0, "accepted_answer_id": 55239769, "answer_count": 2, "score": 1, "last_activity_date": 1553002067, "creation_date": 1552993726, "last_edit_date": 1552995872, "question_id": 55239588, "link": "https://stackoverflow.com/questions/55239588/converting-a-string-of-characters-into-a-list-with-a-set-layout-in-haskell", "title": "Converting a string of characters into a list with a set layout in Haskell", "body": "<p>I've got the following function to enlarge, it takes a string such as \"5a\" and it outputs in a list, <em>i.e. <code>[('a',5)]</code></em> . How could I change it so that it allows the input of more than just 1 pair, so if something like \"5a5b\" was input, the output would be <code>[('a',5),('b',5)]</code> ?</p>\n\n<p>The current code that I have for this is here:</p>\n\n<pre><code>enlarge :: String -&gt; [(Char,Int)]\nenlarge [] = []\nenlarge xs = [(a,b) | (b,a:_) &lt;- reads xs]\n</code></pre>\n\n<p>The code above works and it will work for just one pair, <em>i.e. if \"5a\" is input, it will output <code>[('a',5)]</code></em>. However, I'd like to change it so that it will allow more than just one pair, <em>i.e. if \"5a3b\" is input, the output should be <code>[('a',5),('b',3)]</code></em>. Currently, it only takes into consideration the first 2 parts of the string.</p>\n\n<p>My attempt at doing this is here:</p>\n\n<pre><code>enlarge xs = [((a,b),ts) | ((b,a),ts) &lt;- reads xs, reads ts]\n</code></pre>\n\n<p>And what i'm trying to do here, is first get the pair for the first two characters, and then read any more characters and then do the same to those.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14543, "user_id": 235908, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/rTstt.jpg?s=128&g=1", "display_name": "Simon Shine", "link": "https://stackoverflow.com/users/235908/simon-shine"}, "edited": false, "score": 1, "creation_date": 1552980120, "post_id": 55235467, "comment_id": 97204263, "body": "Covariant functors are described <a href=\"https://www.fpcomplete.com/blog/2016/11/covariance-contravariance\" rel=\"nofollow noreferrer\">here</a> (FPComplete.com). There&#39;s an example using <code>Maybe</code>."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1552981763, "post_id": 55235467, "comment_id": 97204977, "body": "This is a question about mathematics primarily. All <code>Functor</code>s in Haskell are covariant. A contravariant functor would be a type <code>f</code> with a function <code>contramap :: (a -&gt; b) -&gt; f b -&gt; f a</code> - note that the resulting function, compared to <code>fmap</code>, has the arrow &quot;reversed&quot;. <a href=\"http://hackage.haskell.org/package/contravariant-1.5/docs/Data-Functor-Contravariant.html\" rel=\"nofollow noreferrer\">This does exist in Haskell</a>, but isn&#39;t nearly so ubiquitous as the (covariant) <code>Functor</code>."}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 2, "creation_date": 1552984189, "post_id": 55235467, "comment_id": 97206164, "body": "<code>This is a question about mathematics primarily</code> that what makes Haskell scared to learn. I am not an mathematician but I would like to understand it. The question is, how to explain to a not mathematician?"}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 5, "creation_date": 1552991902, "post_id": 55235467, "comment_id": 97210725, "body": "@zero_coding I wouldn&#39;t say it&#39;s about mathematics really. The concept does indeed derive from mathematics (specifically, category theory), but you really don&#39;t need to know the maths to understand the concept. I&#39;ve found this to be true of Haskell more generally as well."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 1, "creation_date": 1552996855, "post_id": 55235467, "comment_id": 97213745, "body": "To clarify - I complete agree with @bradrn that you don&#39;t have to understand any deep mathematics to use Haskell. That&#39;s in fact what I was trying to say, in a way - the question &quot;what does covariant mean&quot; is a question about mathematics, and you don&#39;t need to know or understand the term to use Functors in Haskell. I didn&#39;t know how to answer that question without talking about mathematics, rather than Haskell - but clearly 2 people did and wrote great answers. Apologies if it sounded like I was trying to put you off, that was the complete opposite of my intention."}], "answers": [{"comments": [{"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 2, "creation_date": 1552981522, "post_id": 55235806, "comment_id": 97204872, "body": "In general, a co-&#39;something&#39; is a &#39;something&#39; with arrows reversed."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 3, "creation_date": 1552983272, "post_id": 55235806, "comment_id": 97205672, "body": "@bradrn except when the \u201cco\u201d is followed by \u201cvariant\u201d!"}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "reply_to_user": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1552994737, "post_id": 55235806, "comment_id": 97212345, "body": "@bradrn That&#39;s not quite true, for example in graph theory <code>co-</code> as a prefix usually means &quot;complement graph of this graph&quot;, so &quot;cobipartite&quot; would be the class of complement graphs of bipartite graphs. A complement graph is one with a complement edge relation, not one where any arrows are reversed."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "reply_to_user": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1553046538, "post_id": 55235806, "comment_id": 97237304, "body": "@bradrn I&#39;m not really sure I follow. &quot;co-&quot; is being used in a different context here. Also, <a href=\"https://stackoverflow.com/questions/34732571/why-there-is-no-cofunctor-typeclass-in-haskell/34732721\">a &quot;cofunctor&quot; is the same as a functor</a> (Wiktionary claims that &quot;cofunctor&quot; is a synonym for &quot;contravariant functor&quot; but, so far, that is the only place I have seen that claim and it has no citations. Maybe it needs to be updated?)."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 2, "creation_date": 1553060898, "post_id": 55235806, "comment_id": 97240522, "body": "@David Yes, a co-functor is the same as a functor. If you reverse the arrows on <code>fmap :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b</code>, you get <code>co_fmap :: CoFunctor f =&gt; (a &lt;- b) -&gt; (f a &lt;- f b)</code>, which is the same as <code>co_fmap :: CoFunctor f =&gt; (b -&gt; a) -&gt; (f b -&gt; f a)</code> - the same as <code>fmap</code>. (Reflecting on my comment, I&#39;m not even sure why I made it! Co-stuff wasn&#39;t mentioned in either the question or this answer, so the only reasonable explanation was that I was hallucinating at the time...)"}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 4, "last_activity_date": 1553020558, "last_edit_date": 1553020558, "creation_date": 1552981467, "answer_id": 55235806, "question_id": 55235467, "link": "https://stackoverflow.com/questions/55235467/what-is-a-covariant-functor/55235806#55235806", "title": "What is a covariant functor?", "body": "<p>A covariant functor is one where the \u201cinside\u201d and \u201coutside\u201d arrows point in the same direction.</p>\n\n<pre><code>class Functor f where\n  fmap :: (a -&gt; b) -&gt; (f a -&gt; f b)\n</code></pre>\n\n<p>A contravariant functor is one where the \u201cinside\u201d and \u201coutside\u201d arrows point in opposite directions.</p>\n\n<pre><code>class Contravariant f where\n  contramap :: (a -&gt; b) -&gt; (f a &lt;- f b)\n</code></pre>\n\n<p>...or, with proper Haskell syntax,</p>\n\n<pre><code>  contramap :: (a -&gt; b) -&gt; (f b -&gt; f a)\n</code></pre>\n\n<p>That's generally an indication that the parameter-type occurs somewhere as a function-argument in the data type, like</p>\n\n<pre><code>data DepInt x = DepInt (x -&gt; Int)\n\ninstance Contravariant DepInt where\n  contramap f (DepInt g) = DepInt $ g . f\n</code></pre>\n\n<p>Conversely, if the argument only appears as-is or to the right of a function arrow, then it is a covariant functor. This is the case for most functors, which is why the class is simply called <code>Functor</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "edited": false, "score": 0, "creation_date": 1563159353, "post_id": 55235808, "comment_id": 100594339, "body": "Thank you @DamianLattenero! (Although note that the Stack Overflow comments system discourages comments like that; could you please just upvote instead?)"}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "edited": false, "score": 0, "creation_date": 1563159594, "post_id": 55235808, "comment_id": 100594375, "body": "Sorry @DamianLattenero, I must have missed that."}], "tags": [], "owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "is_accepted": true, "score": 15, "last_activity_date": 1552981478, "creation_date": 1552981478, "answer_id": 55235808, "question_id": 55235467, "link": "https://stackoverflow.com/questions/55235467/what-is-a-covariant-functor/55235808#55235808", "title": "What is a covariant functor?", "body": "<p>A <em>covariant</em> functor is just the normal <code>Functor</code> class:</p>\n\n<pre><code>class Functor f where\n    fmap :: (a -&gt; b) -&gt; f a -&gt; f b\n</code></pre>\n\n<p>For instance, <code>Maybe</code> (as you noted):</p>\n\n<pre><code>instance Functor Maybe where\n    fmap _ Nothing = Nothing\n    fmap f (Just a) = Just (f a)\n</code></pre>\n\n<p>However, there is another type of functor: <em>contravariant</em> functors. These are defined as follows:</p>\n\n<pre><code>class Contravariant f where\n    contramap :: (a -&gt; b) -&gt; f b -&gt; f a\n</code></pre>\n\n<p>Note that compared to <code>fmap</code>, <code>contramap</code> has reversed the order of <code>b</code> and <code>a</code>:</p>\n\n<pre><code>fmap      ::       Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b\ncontramap :: Contravariant f =&gt; (a -&gt; b) -&gt; f b -&gt; f a\n                                         --   ^      ^\n                                         --   look!\n</code></pre>\n\n<p>Now, does this crazy <code>Contravariant</code> class even have any instances? Well, yes. For example, here's the definition of a <code>Predicate</code>:</p>\n\n<pre><code>newtype Predicate x = Predicate { decide :: x -&gt; Bool }\n</code></pre>\n\n<p>In other words, a <code>Predicate x</code> is a function which calculates a condition on an <code>x</code>. We can specialise <code>contramap</code> to <code>Predicate</code>s:</p>\n\n<pre><code>contramap :: (a -&gt; b) -&gt; Predicate b -&gt; Predicate a\n</code></pre>\n\n<p>Which is equivalent to:</p>\n\n<pre><code>contramap :: (a -&gt; b) -&gt; (b -&gt; Bool) -&gt; (a -&gt; Bool)\n</code></pre>\n\n<p>Basically, given a <code>Predicate</code> on <code>b</code>s, and a mapping from <code>a</code>s <em>to</em> <code>b</code>s, you can <code>contramap</code> to get a <code>Predicate</code> on <code>a</code>s. (I'll leave the implementation as an exercise.) Here's an example (untested):</p>\n\n<pre><code>hasMultChars :: Predicate String\nhasMultChars = Predicate $ \\x -&gt; length x &gt; 1\n\nshowInt :: Int -&gt; String\nshowInt = show\n\nintHasMultChars :: Predicate Int\nintHasMultChars = contramap showInt hasMultChars\n</code></pre>\n\n<p>As it turns out, contravariant functors are a lot less common - and so a lot less useful - than normal covariant functors. So in practise, we leave out the 'covariant', since it doesn't add anything in most cases.</p>\n"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 592, "favorite_count": 0, "accepted_answer_id": 55235808, "answer_count": 2, "score": 8, "last_activity_date": 1553020558, "creation_date": 1552979862, "question_id": 55235467, "link": "https://stackoverflow.com/questions/55235467/what-is-a-covariant-functor", "title": "What is a covariant functor?", "body": "<p>I would like understand, why for example, the <code>Maybe</code> type is a covariant functor?</p>\n\n<p>What does covariant mean?  </p>\n\n<p>Please provide an example to clarify.  </p>\n"}, {"tags": ["haskell", "functional-programming", "list-comprehension"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1552966372, "post_id": 55233226, "comment_id": 97200335, "body": "What goal are you trying to achieve?"}, {"owner": {"reputation": 111, "user_id": 8163405, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/5yo9V.png?s=128&g=1", "display_name": "Gilbert", "link": "https://stackoverflow.com/users/8163405/gilbert"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 1, "creation_date": 1552966547, "post_id": 55233226, "comment_id": 97200372, "body": "The nested loop, but the second loop will use the first loop variable"}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1552966867, "post_id": 55233226, "comment_id": 97200430, "body": "Your code is trying to use the second variable in the first loop."}, {"owner": {"reputation": 111, "user_id": 8163405, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/5yo9V.png?s=128&g=1", "display_name": "Gilbert", "link": "https://stackoverflow.com/users/8163405/gilbert"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1552966951, "post_id": 55233226, "comment_id": 97200442, "body": "@melpomene Yep, but how?"}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1552966978, "post_id": 55233226, "comment_id": 97200448, "body": "What do you mean, how? You wrote it. It&#39;s right there."}], "answers": [{"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 11, "last_activity_date": 1552966660, "creation_date": 1552966660, "answer_id": 55233270, "question_id": 55233226, "link": "https://stackoverflow.com/questions/55233226/list-comprehension-with-multiple-arguments/55233270#55233270", "title": "list comprehension with multiple arguments", "body": "<p>The \"extractions\" are processed from left to right, so when you try to get a value for <code>a</code>, <code>b</code> <em>isn't</em> defined yet.</p>\n\n<p>A list comprehension is just syntactic sugar for the following monadic code, which makes it easier to see why <code>b</code> isn't in scope yet.</p>\n\n<pre><code>-- [a * b | a &lt;- [0..b], b &lt;- [0..10]]\n[0..b] &gt;&gt;= \\a -&gt; [0..10] &gt;&gt;= \\b -&gt; return (a * b)\n</code></pre>\n\n<p>Flip it around, and <code>b</code> comes into scope:</p>\n\n<pre><code>-- [a * b | b &lt;- [0..10], a &lt;- [0..b]]\n[0..10] &gt;&gt;= \\b -&gt; [0..b] &gt;&gt;= \\a -&gt; return (a*b)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 23600, "user_id": 1695172, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/6319d7eafca7852cf04c88598ca31e75?s=128&d=identicon&r=PG", "display_name": "Netwave", "link": "https://stackoverflow.com/users/1695172/netwave"}, "is_accepted": false, "score": 4, "last_activity_date": 1552980281, "creation_date": 1552980281, "answer_id": 55235560, "question_id": 55233226, "link": "https://stackoverflow.com/questions/55233226/list-comprehension-with-multiple-arguments/55235560#55235560", "title": "list comprehension with multiple arguments", "body": "<p><code>b</code> needs to be in scope before the <code>[0..b]</code> part:</p>\n\n<pre><code>[a * b | b &lt;- [0..10], a &lt;- [0..b]]\n</code></pre>\n"}], "owner": {"reputation": 111, "user_id": 8163405, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/5yo9V.png?s=128&g=1", "display_name": "Gilbert", "link": "https://stackoverflow.com/users/8163405/gilbert"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 118, "favorite_count": 0, "accepted_answer_id": 55233270, "answer_count": 2, "score": 0, "last_activity_date": 1552980281, "creation_date": 1552966257, "last_edit_date": 1552966336, "question_id": 55233226, "link": "https://stackoverflow.com/questions/55233226/list-comprehension-with-multiple-arguments", "title": "list comprehension with multiple arguments", "body": "<p>Why can't I do like this in Haskell? </p>\n\n<pre><code>[a * b | a &lt;- [0..b], b &lt;- [0..10]]\n\nerror: Variable not in scope: b\n</code></pre>\n\n<p>If this is impossible using the list comprehension? Or what else can I do to achieve the goal?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 2, "creation_date": 1552957003, "post_id": 55232026, "comment_id": 97198487, "body": "A 100 field record does not look Haskell. If your data types are well-expressed, your terms will be too.  It&#39;s okay to use a function twice (that&#39;s pretty much the point of it)"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1552964495, "post_id": 55232026, "comment_id": 97199968, "body": "The problem is that the list you need isn&#39;t homogenous. <code>pure Tick</code> has one type; <code>pure Tick &lt;*&gt; toSth</code> has another, and <code>pure Tick &lt;*&gt; toSth &lt;*&gt; toSth</code> has a third. You get the same problem if you wanted to apply <code>Tick</code> to the &quot;list&quot; of arguments <code>[12, True]</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1552985631, "post_id": 55232026, "comment_id": 97206921, "body": "The only solutions I can see require either some nontrivial typeclass machinery, or Template Haskell. Both will be probably longer than writing <code>&lt;*&gt; toSth</code> 100 times."}], "answers": [{"tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": true, "score": 8, "last_activity_date": 1553007692, "last_edit_date": 1553007692, "creation_date": 1552992635, "answer_id": 55239206, "question_id": 55232026, "link": "https://stackoverflow.com/questions/55232026/in-this-case-is-it-possible-to-fold-applicative-to-avoid-repetition/55239206#55239206", "title": "In this case, is it possible to fold Applicative &lt;*&gt; to avoid repetition?", "body": "<p>This can be done with some advanced <a href=\"https://wiki.haskell.org/Generics\" rel=\"noreferrer\">generics</a> libraries, like <a href=\"http://hackage.haskell.org/package/generics-sop\" rel=\"noreferrer\">generics-sop</a>.</p>\n\n<p>Generics libraries translate datatypes from and to some kind of \"uniform\" representation. The libraries also provide functions to create or modify such representation. We can work over the representation and afterwards transform back into the original datatype.</p>\n\n<pre><code>{-# language DeriveGeneric, TypeApplications #-}\n\nimport qualified GHC.Generics\nimport           Generics.SOP (Generic,to,SOP(SOP),NS(Z),hsequence,hcpure)\nimport           Data.Proxy\n\ndata Tick = Tick {n :: Int, bid :: Bool} deriving (Show,GHC.Generics.Generic)\n\ninstance Generic Tick -- this Generic is from generics-sop \n\nres :: (Tick, [Code])\nres = \n  let tickAction :: State [Code] Tick\n      tickAction = to . SOP . Z &lt;$&gt; hsequence (hcpure (Proxy @Read) toSth)\n   in runState tickAction codes\n</code></pre>\n\n<p><a href=\"http://hackage.haskell.org/package/generics-sop-0.4.0.1/docs/Generics-SOP.html#v:hcpure\" rel=\"noreferrer\"><code>hcpure</code></a> creates an <a href=\"http://hackage.haskell.org/package/generics-sop-0.4.0.1/docs/Generics-SOP.html#t:NP\" rel=\"noreferrer\">n-ary product</a> out of an effectful function (here <code>toSth</code>) that knows how to create every member of the product. We have to pass a <code>Proxy</code> with the constraint to convince the compiler. The result is a product where each component is wrapped in <code>State</code>.</p>\n\n<p><a href=\"http://hackage.haskell.org/package/generics-sop-0.4.0.1/docs/Generics-SOP.html#t:HSequence\" rel=\"noreferrer\"><code>hsequence</code></a> is like <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Traversable.html#v:sequenceA\" rel=\"noreferrer\"><code>sequenceA</code></a> but for n-ary products having different types for each component. The result is similar: the <code>Applicative</code> is \"pulled outwards\".</p>\n\n<p><a href=\"http://hackage.haskell.org/package/generics-sop-0.4.0.1/docs/Generics-SOP.html#t:SOP\" rel=\"noreferrer\"><code>SOP</code></a> and <a href=\"http://hackage.haskell.org/package/generics-sop-0.4.0.1/docs/Generics-SOP.html#t:NS\" rel=\"noreferrer\"><code>Z</code></a> are constructors that wrap the product and let us call <a href=\"http://hackage.haskell.org/package/generics-sop-0.4.0.1/docs/Generics-SOP.html#v:to\" rel=\"noreferrer\"><code>to</code></a> to get a value of the original <code>Tick</code> type.</p>\n\n<p><code>res</code> could be given this more general signature to work over any single-constructor record that is an instance of <code>Generics.SOP.Generic</code>:</p>\n\n<pre><code>{-# language DataKinds #-}\n\nres :: (Generic r, Generics.SOP.Code r ~ '[ xs ], Generics.SOP.All Read xs) =&gt; (r,[Code])\nres = \n  let tickAction = to . SOP . Z &lt;$&gt; hsequence (hcpure (Proxy @Read) toSth)\n   in runState tickAction codes\n</code></pre>\n"}], "owner": {"reputation": 143, "user_id": 4077515, "user_type": "registered", "accept_rate": 75, "profile_image": "https://graph.facebook.com/1130100597/picture?type=large", "display_name": "learnereveryday", "link": "https://stackoverflow.com/users/4077515/learnereveryday"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 150, "favorite_count": 0, "accepted_answer_id": 55239206, "answer_count": 1, "score": 2, "last_activity_date": 1553101156, "creation_date": 1552955635, "last_edit_date": 1553101156, "question_id": 55232026, "link": "https://stackoverflow.com/questions/55232026/in-this-case-is-it-possible-to-fold-applicative-to-avoid-repetition", "title": "In this case, is it possible to fold Applicative &lt;*&gt; to avoid repetition?", "body": "<p>In the following code</p>\n\n<pre><code>module Main where\n\nimport Control.Monad.State\nimport Control.Applicative\n\ntype Code = String\n\ntoSth :: Read a =&gt; State [Code] a\ntoSth = state $ \\(c:cs) -&gt; ((read c), cs)\n\ncodes = [\"12\", \"True\", \"\"]\n\ndata Tick = Tick {n :: Int, bid :: Bool} deriving (Show)\n\nres = runState (pure Tick &lt;*&gt; toSth &lt;*&gt; toSth) codes\n\nmain = print res\n</code></pre>\n\n<p>I get the correct results</p>\n\n<pre><code>(Tick {n = 12, bid = True},[\"\"])\n</code></pre>\n\n<p>But my problem is with the repetition of</p>\n\n<pre><code>pure Tick &lt;*&gt; toSth &lt;*&gt; toSth\n</code></pre>\n\n<p>I.e., if the record has 100 fields, then I have to write <code>&lt;*&gt; toSth</code> 100 times, which does not look Haskell.</p>\n\n<p>Is there a way to <code>foldl</code> on <code>&lt;*&gt;</code>? I know the standard <code>foldl :: Foldable t =&gt; (b -&gt; a -&gt; b) -&gt; b -&gt; t a -&gt; b</code> won't work here, because the accumulator type changes in each iteration.</p>\n\n<p>Thanks a lot!</p>\n"}, {"tags": ["haskell", "typeclass"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1552947269, "post_id": 55230741, "comment_id": 97195956, "body": "Not going to put as an answer, because I don&#39;t understand all the ins and outs (someone else can explain it all, who really understands it!) - but it works if you enable the <code>ScopedTypeVariables</code> extension"}], "answers": [{"comments": [{"owner": {"reputation": 95, "user_id": 11223159, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-6uPWLKHGqoI/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rd9EUz55W0QLGhZOufjXY-PZwdRfQ/mo/photo.jpg?sz=128", "display_name": "Anton Savelyev", "link": "https://stackoverflow.com/users/11223159/anton-savelyev"}, "edited": false, "score": 0, "creation_date": 1552949437, "post_id": 55230873, "comment_id": 97196690, "body": "Thanks a lot for your answer @chi, it is up to the point. I just marked Another answer accepted as it&#39;s more elaborate."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 2, "last_activity_date": 1552947772, "last_edit_date": 1552947772, "creation_date": 1552947350, "answer_id": 55230873, "question_id": 55230741, "link": "https://stackoverflow.com/questions/55230741/compiler-doesnt-pick-up-typeclass-for-the-polymorphic-constant-value/55230873#55230873", "title": "Compiler doesn&#39;t pick up typeclass for the polymorphic constant value", "body": "<p>You need to add this line to the top of your file:</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables #-}\n</code></pre>\n\n<p>Without this extension turned on, <code>maxBound :: a</code> does not refer to the same <code>a</code> as in the class.</p>\n\n<p>Essentially, in standard Haskell, each type signature has its own type variables, which are independent from any other variable. For instance, this code</p>\n\n<pre><code>foo :: [a] -&gt; Int\nfoo xs = length ys\n   where\n   ys :: [a]\n   ys = xs\n</code></pre>\n\n<p><em>fails</em>, since <code>ys :: [a]</code> really means <code>ys :: [b]</code> with an independent variable <code>b</code>, and <code>ys = xs</code> does not produce a <code>[b]</code>.</p>\n\n<p>With the extension turned on, this compiles:</p>\n\n<pre><code>foo :: forall a . [a] -&gt; Int\nfoo xs = length ys\n   where\n   ys :: [a]\n   ys = xs\n</code></pre>\n\n<p>Arguably, there should be a different default, e.g. the extension should be on by default. Alternatively, GHC should hint at turning the extension on when the same <code>a</code> is used twice, since often that's the issue.</p>\n"}, {"comments": [{"owner": {"reputation": 95, "user_id": 11223159, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-6uPWLKHGqoI/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rd9EUz55W0QLGhZOufjXY-PZwdRfQ/mo/photo.jpg?sz=128", "display_name": "Anton Savelyev", "link": "https://stackoverflow.com/users/11223159/anton-savelyev"}, "edited": false, "score": 2, "creation_date": 1552948725, "post_id": 55230878, "comment_id": 97196461, "body": "And it works! Thank you! This behaviour seemed so natural that I couldn&#39;t guess it&#39;s not there by default..."}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "reply_to_user": {"reputation": 95, "user_id": 11223159, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-6uPWLKHGqoI/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rd9EUz55W0QLGhZOufjXY-PZwdRfQ/mo/photo.jpg?sz=128", "display_name": "Anton Savelyev", "link": "https://stackoverflow.com/users/11223159/anton-savelyev"}, "edited": false, "score": 1, "creation_date": 1552953626, "post_id": 55230878, "comment_id": 97197766, "body": "@AntonSavelyev I get the feeling it&#39;s not there by default to prevent unwanted behavior in situations where you expect the type variables to be separate. For example, if you define multiple toplevel functions that all use <code>a</code>, you expect them to be different <code>a</code>&#39;s. Similarly, if you define multiple functions in a <code>let ... in</code> that all use <code>a</code>, you probably don&#39;t want them to all mean the same <code>a</code>."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 5, "last_activity_date": 1552947797, "last_edit_date": 1552947797, "creation_date": 1552947383, "answer_id": 55230878, "question_id": 55230741, "link": "https://stackoverflow.com/questions/55230741/compiler-doesnt-pick-up-typeclass-for-the-polymorphic-constant-value/55230878#55230878", "title": "Compiler doesn&#39;t pick up typeclass for the polymorphic constant value", "body": "<p>By default, even though type variables are scoped from the class being defined to the type signatures of the class's methods (i.e., the <code>a</code> in <code>class SafeEnum a</code> is the same <code>a</code> as the <code>a</code> in <code>ssucc :: a -&gt; a</code>), they are <strong>not</strong> scoped from the type signatures of the methods to the method bodies, so in the expression <code>maxBound :: a</code> in the bodies of your functions <code>ssucc</code> and <code>spred</code>, the <code>a</code> has nothing to do with the <code>a</code> in the type signatures for those functions.</p>\n\n<p>You can enable the <code>ScopedTypeVariables</code> extension, like so:</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables #-}\n</code></pre>\n\n<p>after which the class definition will type check.</p>\n\n<p>Note that this extension only applies to \"normal\" function declarations if you use the <code>forall</code> keyword.  So, outside of a class definition, you'd need to enable this extension <em>and</em> write:</p>\n\n<pre><code>ssucc :: forall a. a -&gt; a \nssucc x = ... maxBound :: a ...\n</code></pre>\n\n<p>or actually:</p>\n\n<pre><code>ssucc :: forall a. (Enum a, Bounded a) =&gt; a -&gt; a\nssucc x = ... maxBound :: a ...\n</code></pre>\n\n<p>but the rules are different inside a <code>class</code> clause.</p>\n\n<p>See <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#extension-ScopedTypeVariables\" rel=\"noreferrer\">the GHC docs</a> for details.</p>\n"}], "owner": {"reputation": 95, "user_id": 11223159, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-6uPWLKHGqoI/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rd9EUz55W0QLGhZOufjXY-PZwdRfQ/mo/photo.jpg?sz=128", "display_name": "Anton Savelyev", "link": "https://stackoverflow.com/users/11223159/anton-savelyev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 71, "favorite_count": 0, "accepted_answer_id": 55230878, "answer_count": 2, "score": 1, "last_activity_date": 1552947797, "creation_date": 1552946775, "question_id": 55230741, "link": "https://stackoverflow.com/questions/55230741/compiler-doesnt-pick-up-typeclass-for-the-polymorphic-constant-value", "title": "Compiler doesn&#39;t pick up typeclass for the polymorphic constant value", "body": "<p>I'm new to Haskell, so forgive me in advance. </p>\n\n<p>Why doesn't the following haskell code compile? </p>\n\n<p>It seems like the compiler somehow fails to see that the type of the expression  <code>(maxBound :: a)</code> is <code>a</code> which has an <code>Enum</code> instance provided, not some <code>type variable \u2018a0\u2019</code> which is <code>ambiguous</code>.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>class (Enum a, Bounded a) =&gt; SafeEnum a where\n  ssucc :: a -&gt; a\n  ssucc x = if (fromEnum x) &lt; (fromEnum (maxBound :: a)) then succ x else minBound\n\n  spred :: a -&gt; a\n  spred x = if (fromEnum x) &gt; (fromEnum (minBound :: a)) then pred x else maxBound\n</code></pre>\n\n<pre><code>Stepik.hs:3:32: error:\n    \u2022 Could not deduce (Enum a0) arising from a use of \u2018fromEnum\u2019\n      from the context: SafeEnum a\n        bound by the class declaration for \u2018SafeEnum\u2019\n        at Stepik.hs:(1,1)-(6,82)\n      The type variable \u2018a0\u2019 is ambiguous\n      These potential instances exist:\n        instance Enum Ordering -- Defined in \u2018GHC.Enum\u2019\n        instance Enum Integer -- Defined in \u2018GHC.Enum\u2019\n        instance Enum () -- Defined in \u2018GHC.Enum\u2019\n        ...plus six others\n\n</code></pre>\n"}, {"tags": ["haskell", "io", "functional-programming", "monads", "haskeline"], "answers": [{"comments": [{"owner": {"reputation": 269, "user_id": 4147767, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/e20d2cd614df0b820c4b0389ed011783?s=128&d=identicon&r=PG&f=1", "display_name": "BabaSvoloch", "link": "https://stackoverflow.com/users/4147767/babasvoloch"}, "edited": false, "score": 0, "creation_date": 1553017448, "post_id": 55231071, "comment_id": 97226905, "body": "I tried adding that to my project, before my &quot;writeFile&quot; and &quot;return ()&quot; lines, and I get this error: &quot;Variable not in scope: lift :: IO () -&gt; InputT IO ()&quot;"}, {"owner": {"reputation": 269, "user_id": 4147767, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/e20d2cd614df0b820c4b0389ed011783?s=128&d=identicon&r=PG&f=1", "display_name": "BabaSvoloch", "link": "https://stackoverflow.com/users/4147767/babasvoloch"}, "edited": false, "score": 0, "creation_date": 1553018257, "post_id": 55231071, "comment_id": 97227313, "body": "I thought maybe the error meant I needed to import a library to use &quot;lift&quot;, but I&#39;ve looked everywhere and I can&#39;t find it. There&#39;s libraries I found like Control.Applicative but that&#39;s using something called &quot;LiftA&quot; and I doubt it&#39;s the same thing. Do you have any ideas?"}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "reply_to_user": {"reputation": 269, "user_id": 4147767, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/e20d2cd614df0b820c4b0389ed011783?s=128&d=identicon&r=PG&f=1", "display_name": "BabaSvoloch", "link": "https://stackoverflow.com/users/4147767/babasvoloch"}, "edited": false, "score": 1, "creation_date": 1553031186, "post_id": 55231071, "comment_id": 97233178, "body": "@BabaSvoloch: For <code>lift</code> you want <a href=\"https://hackage.haskell.org/package/transformers-0.5.6.2/docs/Control-Monad-Trans-Class.html#t:MonadTrans\" rel=\"nofollow noreferrer\"><code>Control.Monad.Trans.Class</code></a> from <code>transformers</code>; for <code>liftIO</code> it\u2019s <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad-IO-Class.html#t:MonadIO\" rel=\"nofollow noreferrer\"><code>Control.Monad.IO.Class</code></a> which used to be in <code>transformers</code> but is now in <code>base</code>. You can find these things more easily with <a href=\"https://www.stackage.org/lts-13.13/hoogle?q=lift\" rel=\"nofollow noreferrer\">Hoogle</a>."}], "tags": [], "owner": {"reputation": 25321, "user_id": 163177, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e811b5337bcad19d52c8fed3a0ea0075?s=128&d=identicon&r=PG", "display_name": "John F. Miller", "link": "https://stackoverflow.com/users/163177/john-f-miller"}, "is_accepted": false, "score": 4, "last_activity_date": 1553062315, "last_edit_date": 1553062315, "creation_date": 1552948567, "answer_id": 55231071, "question_id": 55230029, "link": "https://stackoverflow.com/questions/55230029/haskell-how-to-use-haskeline-and-write-to-a-file-in-the-same-program/55231071#55231071", "title": "Haskell: how to use haskeline and write to a file in the same program", "body": "<p>InputT is an instance of MonadTrans so </p>\n\n<pre><code>Just chords -&gt; lift $ do\n</code></pre>\n\n<p>EDIT:</p>\n\n<p><a href=\"https://hackage.haskell.org/package/transformers-0.5.4.0/docs/Control-Monad-Trans-Class.html#v:lift\" rel=\"nofollow noreferrer\"><code>lift</code></a> is in <a href=\"https://hackage.haskell.org/package/transformers-0.5.4.0/docs/Control-Monad-Trans-Class.html\" rel=\"nofollow noreferrer\">Control.Monad.Trans.Class</a>.  (Hat tip: <a href=\"https://stackoverflow.com/users/246886/jon-purdy\">Jon Purdy</a>) </p>\n"}, {"comments": [{"owner": {"reputation": 269, "user_id": 4147767, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/e20d2cd614df0b820c4b0389ed011783?s=128&d=identicon&r=PG&f=1", "display_name": "BabaSvoloch", "link": "https://stackoverflow.com/users/4147767/babasvoloch"}, "edited": false, "score": 0, "creation_date": 1553017859, "post_id": 55237016, "comment_id": 97227111, "body": "Hi @chi , thank you so much for your explanation. I&#39;m still having trouble getting my example from above to run; I think I&#39;m messing up the syntax somehow. If it&#39;s not too much trouble, can you show me how I could incorporate this into my program?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 269, "user_id": 4147767, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/e20d2cd614df0b820c4b0389ed011783?s=128&d=identicon&r=PG&f=1", "display_name": "BabaSvoloch", "link": "https://stackoverflow.com/users/4147767/babasvoloch"}, "edited": false, "score": 0, "creation_date": 1553018488, "post_id": 55237016, "comment_id": 97227420, "body": "@BabaSvoloch You need to check the types of your actions. E.g. <code>writeFile ...</code> returns <code>IO ()</code>, so you need to use <code>liftIO (writeFile ...)</code> to turn it into an <code>InputT IO ()</code>. Instead <code>getInputLine ...</code> should be already OK -- no lifting needed."}, {"owner": {"reputation": 269, "user_id": 4147767, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/e20d2cd614df0b820c4b0389ed011783?s=128&d=identicon&r=PG&f=1", "display_name": "BabaSvoloch", "link": "https://stackoverflow.com/users/4147767/babasvoloch"}, "edited": false, "score": 1, "creation_date": 1553020008, "post_id": 55237016, "comment_id": 97228170, "body": "Thank you, I got it working! My problem was that when I tried using &quot;liftIO&quot;, ghci suggested that I meant &quot;liftIOOp&quot; from the haskeline library, and I thought it was the same function and that the haskeline library had been updated recently. I didn&#39;t realize liftIO wasn&#39;t from the haskeline library and that I needed to import Control.Monad.IO.Class"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 4, "last_activity_date": 1552986048, "creation_date": 1552986048, "answer_id": 55237016, "question_id": 55230029, "link": "https://stackoverflow.com/questions/55230029/haskell-how-to-use-haskeline-and-write-to-a-file-in-the-same-program/55237016#55237016", "title": "Haskell: how to use haskeline and write to a file in the same program", "body": "<p>Since <code>InputT IO</code> is an instance of <code>MonadIO</code>, you can run any IO action by lifting it to a <code>InputT IO</code> action, using</p>\n\n<pre><code>liftIO :: IO a -&gt; InputT IO a\n</code></pre>\n\n<p>Indeed, this is the standard way to \"run IO\" in moands that support IO but aren't <code>IO</code>.</p>\n"}], "owner": {"reputation": 269, "user_id": 4147767, "user_type": "registered", "accept_rate": 47, "profile_image": "https://www.gravatar.com/avatar/e20d2cd614df0b820c4b0389ed011783?s=128&d=identicon&r=PG&f=1", "display_name": "BabaSvoloch", "link": "https://stackoverflow.com/users/4147767/babasvoloch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 304, "favorite_count": 1, "accepted_answer_id": 55237016, "answer_count": 2, "score": 2, "last_activity_date": 1553062315, "creation_date": 1552943092, "question_id": 55230029, "link": "https://stackoverflow.com/questions/55230029/haskell-how-to-use-haskeline-and-write-to-a-file-in-the-same-program", "title": "Haskell: how to use haskeline and write to a file in the same program", "body": "<p>I wrote a program in Haskell that builds a guitar tab as a txt file in the current directory. It gets a String of chords from the user, and then builds the proper output and writes it line by line to a file.</p>\n\n<p>I wasn't able to use the backspace key on my input when I was using getLine, because it would print a bunch of gibberish to the screen.</p>\n\n<p>I'm trying to use haskeline to fix this, and I commented out the bulk of my main method in the meantime so that each change requires less editing (every command I commented out in 'main' is of the same type as the single command I kept, so if I can get this simplified version to work, the whole thing should work). Basically, I need to be able to get the input from the user using haskeline, but then I also need to run some \"side effects\" commands in my \"do\" block after I do that.</p>\n\n<p>I'm new to Haskell and I don't fully understand what is and is not allowed or why. Here's the simplified version of my program:</p>\n\n<pre><code>import Data.List\nimport System.Console.Haskeline\n\nmain = runInputT defaultSettings loop\n where\n   loop :: InputT IO ()\n   loop  = do\n     name &lt;- getInputLine \"Enter name of song: \"\n     case name of\n       Nothing -&gt; return ()\n       Just songName -&gt; return ()\n     chords &lt;- getInputLine \"Enter chords to be tabified \"\n     case chords of\n       Nothing -&gt; do outputStrLn $ \"No chords entered. Exiting.\"\n       Just chords -&gt; do\n                        writeFile \"./test.txt\" \"did it work?\"\n                        return ()\n</code></pre>\n\n<p>I got all of this syntax straight from a Haskeline tutorial. I tried running it without making any changes first and it worked, so I know that it's all correct -except- for the last 3 lines that I edited, where I have the \"do\" block and am trying to call \"writeFile\" before \"return()\".</p>\n\n<p>I know that the type of \"loop\" has to be InputT IO () in order to use getInputLine (the haskeline version of getLine), but I don't know how to accomplish \"side effects\" like writing to a file at the same time.</p>\n\n<p>When I try to load my project in ghci, I get the following error:</p>\n\n<pre><code>error:\n-Couldn't match type 'IO' with 'InputT IO'\n Expected type: InputT IO ()\n   Actual type: IO ()\n- In a stmt of a 'd' block: writeFile \"./test.txt\" \"did it work?\"\n  In the expression:\n    do { writeFile \"./test.txt\" \"did it work?\";\n         return () }\n  In a case alternative:\n    Just chords\n      -&gt; do { writeFile \"./test.txt\" \"did it work?\";\n              return () }\n\nFailed, modules loaded: none.\n</code></pre>\n"}, {"tags": ["haskell", "coq"], "comments": [{"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 4, "creation_date": 1552942253, "post_id": 55229385, "comment_id": 97194116, "body": "This is not a question. What do you hope an answer will contain?"}], "answers": [{"tags": [], "owner": {"reputation": 2570, "user_id": 4142266, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/rMCN5.png?s=128&g=1", "display_name": "mschmidt", "link": "https://stackoverflow.com/users/4142266/mschmidt"}, "is_accepted": true, "score": 9, "last_activity_date": 1552943376, "creation_date": 1552943376, "answer_id": 55230086, "question_id": 55229385, "link": "https://stackoverflow.com/questions/55229385/extracting-coq-to-haskell/55230086#55230086", "title": "Extracting Coq to Haskell", "body": "<p>Regarding your first point - try to add</p>\n\n<pre><code>Require Import ExtrHaskellBasic.\n</code></pre>\n\n<p>to your Coq source. It specifies that the extraction should use Haskell's prelude definitions for some basic types. Documentation can be found <a href=\"https://coq.inria.fr/library/Coq.extraction.ExtrHaskellBasic.html\" rel=\"noreferrer\">here</a>. There is also a similar module for <a href=\"https://coq.inria.fr/library/Coq.extraction.ExtrHaskellString.html\" rel=\"noreferrer\">strings</a>. </p>\n"}, {"comments": [{"owner": {"reputation": 3208, "user_id": 1809211, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf049ef367dd9aa5f7e3220f4bec3ad3?s=128&d=identicon&r=PG", "display_name": "Yves", "link": "https://stackoverflow.com/users/1809211/yves"}, "edited": false, "score": 1, "creation_date": 1553005000, "post_id": 55236487, "comment_id": 97219228, "body": "I don&#39;t think the time difference in your last comment is worth mentioning.  Working with type <code>nat</code> in Coq is only interesting for proof purposes, not for computation purposes."}, {"owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "edited": false, "score": 0, "creation_date": 1553071120, "post_id": 55236487, "comment_id": 97244605, "body": "I get <code>illegal begin of vernac</code> error when I try to compile it"}, {"owner": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "reply_to_user": {"reputation": 3208, "user_id": 1809211, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cf049ef367dd9aa5f7e3220f4bec3ad3?s=128&d=identicon&r=PG", "display_name": "Yves", "link": "https://stackoverflow.com/users/1809211/yves"}, "edited": false, "score": 0, "creation_date": 1555945433, "post_id": 55236487, "comment_id": 98261964, "body": "@Yves I&#39;ve posted a question on estimating running times of extracted code here: <a href=\"https://stackoverflow.com/questions/55796487/predict-running-times-of-extracted-coq-code-to-haskell\" title=\"predict running times of extracted coq code to haskell\">stackoverflow.com/questions/55796487/&hellip;</a> ... I wondered if you could answer it? I think it&#39;s interesting to be able to predict running times somehow from Coq code itself no?"}], "tags": [], "owner": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "is_accepted": false, "score": 2, "last_activity_date": 1552984287, "creation_date": 1552984287, "answer_id": 55236487, "question_id": 55229385, "link": "https://stackoverflow.com/questions/55229385/extracting-coq-to-haskell/55236487#55236487", "title": "Extracting Coq to Haskell", "body": "<p>I'm posting a complete solution here to make this post self contained. Hope others can make use of it.</p>\n\n<pre><code>(***********)\n(* IMPORTS *)\n(***********)\nRequire Import Coq.Arith.PeanoNat.\n\n(************)\n(* helper'' *)\n(************)\nFixpoint helper' (p m n : nat) : bool :=\n  match m,n with\n  | 0,_ =&gt; false\n  | 1,_ =&gt; false\n  | _,0 =&gt; false\n  | _,1 =&gt; false\n  | S m',S n' =&gt; (orb ((mult m n) =? p) (helper' p m' n))\n  end.\n\n(**********)\n(* helper *)\n(**********)\nFixpoint helper (p m : nat) : bool :=\n  match m with\n  | 0 =&gt; false\n  | S m' =&gt; (orb ((mult m m) =? p) (orb (helper' p m' m) (helper p m')))\n  end.\n\n(***********)\n(* isPrime *)\n(***********)\nFixpoint isPrime (p : nat) : bool :=\n  match p with\n  | 0 =&gt; false\n  | 1 =&gt; false\n  | S p' =&gt; (negb (helper p p'))\n  end.\n\nCompute (isPrime 220).\n\n(********************************)\n(* Extraction Language: Haskell *)\n(********************************)\nExtraction Language Haskell.\n\n(***************************)\n(* Use Haskell basic types *)\n(***************************)\nRequire Import ExtrHaskellBasic.\n\n(****************************************)\n(* Use Haskell support for Nat handling *)\n(****************************************)\nRequire Import ExtrHaskellNatNum.\nExtract Inductive Datatypes.nat =&gt; \"Prelude.Integer\" [\"0\" \"succ\"]\n\"(\\fO fS n -&gt; if n Prelude.== 0 then fO () else fS (n Prelude.- 1))\".\n\n(***************************)\n(* Extract to Haskell file *)\n(***************************)\nExtraction \"/home/oren/GIT/CoqIt/Primes.hs\" isPrime helper helper'.  \n</code></pre>\n\n<p>And here is the driver:</p>\n\n<pre><code>module Main( main ) where\n\nimport Primes\nimport Prelude\n\nmain = do\n    if ((isPrime 220) == True)\n    then\n        print \"Prime\"\n    else\n        print \"Non Prime\"\n</code></pre>\n\n<p>It's interesting to mention the huge time difference between Coq's slow <code>Compute (isPrime 220)</code> and Haskell's compiled (and optimized!) super fast version of <code>(is Prime 220)</code>.</p>\n"}], "owner": {"reputation": 3212, "user_id": 3357352, "user_type": "registered", "accept_rate": 97, "profile_image": "https://i.stack.imgur.com/nfb7n.jpg?s=128&g=1", "display_name": "OrenIshShalom", "link": "https://stackoverflow.com/users/3357352/orenishshalom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 597, "favorite_count": 1, "accepted_answer_id": 55230086, "answer_count": 2, "score": 7, "last_activity_date": 1552984287, "creation_date": 1552940144, "last_edit_date": 1552949032, "question_id": 55229385, "link": "https://stackoverflow.com/questions/55229385/extracting-coq-to-haskell", "title": "Extracting Coq to Haskell", "body": "<p>I'm experimenting with Coq's extraction mechanism to Haskell. I wrote a naive predicate for prime numbers in Coq, here it is:</p>\n\n<pre><code>(***********)\n(* IMPORTS *)\n(***********)\nRequire Import Coq.Arith.PeanoNat.\n\n(************)\n(* helper'' *)\n(************)\nFixpoint helper' (p m n : nat) : bool :=\n  match m,n with\n  | 0,_ =&gt; false\n  | 1,_ =&gt; false\n  | _,0 =&gt; false\n  | _,1 =&gt; false\n  | S m',S n' =&gt; (orb ((mult m n) =? p) (helper' p m' n))\n  end.\n\n(**********)\n(* helper *)\n(**********)\nFixpoint helper (p m : nat) : bool :=\n  match m with\n  | 0 =&gt; false\n  | S m' =&gt; (orb ((mult m m) =? p) (orb (helper' p m' m) (helper p m')))\n  end.\n\n(***********)\n(* isPrime *)\n(***********)\nFixpoint isPrime (p : nat) : bool :=\n  match p with\n  | 0 =&gt; false\n  | 1 =&gt; false\n  | S p' =&gt; (negb (helper p p'))\n  end.\n\nCompute (isPrime 220).\n\n(*****************)\n(* isPrimeHelper *)\n(*****************)\nExtraction Language Haskell.\n\n(*****************)\n(* isPrimeHelper *)\n(*****************)\nExtraction \"/home/oren/GIT/CoqIt/Primes.hs\" isPrime helper helper'.\n</code></pre>\n\n<p>And after extracting the Haskell code, I wrote a simple driver to test it. I ran into two issues:</p>\n\n<ol>\n<li>Coq exported its own <code>Bool</code> instead of using Haskell's built in boolean type.</li>\n<li>Coq also used its own <code>nat</code>, so I can't ask <code>isPrime 6</code> and I have to use <code>S (S (...))</code>.</li>\n</ol>\n\n\n\n<pre><code>module Main( main ) where    \nimport Primes    \nmain = do\n    if ((isPrime (\n        Primes.S (\n        Primes.S (\n        Primes.S (\n        Primes.S (\n        Primes.S (\n        Primes.S ( O ))))))))\n        ==\n        Primes.True)\n    then\n        print \"Prime\"\n    else\n        print \"Non Prime\"\n</code></pre>\n"}, {"tags": ["haskell", "case-expression"], "answers": [{"comments": [{"owner": {"reputation": 157, "user_id": 9554272, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bd5984480623d3b06c1b83b9ef3e0d69?s=128&d=identicon&r=PG&f=1", "display_name": "noogler", "link": "https://stackoverflow.com/users/9554272/noogler"}, "edited": false, "score": 0, "creation_date": 1552929923, "post_id": 55226656, "comment_id": 97188396, "body": "Alright this makes sense. I did think case of was like equality. Thank you"}, {"owner": {"reputation": 157, "user_id": 9554272, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bd5984480623d3b06c1b83b9ef3e0d69?s=128&d=identicon&r=PG&f=1", "display_name": "noogler", "link": "https://stackoverflow.com/users/9554272/noogler"}, "edited": false, "score": 0, "creation_date": 1552930492, "post_id": 55226656, "comment_id": 97188720, "body": "Would you also be able to advise me on how can I handle break statements in this? I created a new data type for breaks but I am not sure how to handle it"}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "reply_to_user": {"reputation": 157, "user_id": 9554272, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bd5984480623d3b06c1b83b9ef3e0d69?s=128&d=identicon&r=PG&f=1", "display_name": "noogler", "link": "https://stackoverflow.com/users/9554272/noogler"}, "edited": false, "score": 2, "creation_date": 1552931005, "post_id": 55226656, "comment_id": 97188982, "body": "Sounds like you have a number of questions that you might benefit from asking your professor, or whatever source is giving you this exercise. That would be my recommendation. But, if you have another question, and can ask it well as a separate question (not an edit to this one), Stack Overflow is generally available to answer good questions. Whether I personally can help is immaterial."}], "tags": [], "owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "is_accepted": true, "score": 5, "last_activity_date": 1552929058, "creation_date": 1552929058, "answer_id": 55226656, "question_id": 55226453, "link": "https://stackoverflow.com/questions/55226453/case-of-redundant-pattern-matching/55226656#55226656", "title": "case of redundant pattern matching", "body": "<pre><code>case val of case1\n</code></pre>\n\n<p>does not do what you think it does, namely, check whether val is equal to case1. It introduces a new binding named case1, shadowing the existing binding, whose value is val. You don't get equality comparisons for free: you have to ask for them, by using <code>==</code>, perhaps in a guard clause, or in an <code>if</code> expression. So, you do have two redundant patterns: the <code>_</code> clause will never be entered, because the <code>case1</code> pattern matches all possible inputs.</p>\n\n<p>Instead, write an equality test yourself. There are nicer ways to do it, but a way to do that while making minimal changes to your existing function might be:</p>\n\n<pre><code>... do\n  val &lt;- evaluate var memory\n  if val == case1\n    then interpret ...\n    else interpret ...\n</code></pre>\n"}], "owner": {"reputation": 157, "user_id": 9554272, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bd5984480623d3b06c1b83b9ef3e0d69?s=128&d=identicon&r=PG&f=1", "display_name": "noogler", "link": "https://stackoverflow.com/users/9554272/noogler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 463, "favorite_count": 0, "accepted_answer_id": 55226656, "answer_count": 1, "score": 0, "last_activity_date": 1552931566, "creation_date": 1552928338, "last_edit_date": 1552931566, "question_id": 55226453, "link": "https://stackoverflow.com/questions/55226453/case-of-redundant-pattern-matching", "title": "case of redundant pattern matching", "body": "<p>I am trying to write a haskell interpeter for different kind of statements. One such is a switch statement. I have done the following as of now but I am stuck and I keep getting redundant pattern matching warning for the (  _ -> if length ) line in the case expression. It is passing the test if the first case expression is the right one but if not the test is failing. Any help appreciated, thanks </p>\n\n<pre><code> interpret :: Program -&gt; Memory -&gt; Either Err Memory\n interpret [] memory = Right memory\n interpret (SwitchStmt var c:p) memory = let case1 = fst(c!!0)\n                                            case2 = snd(c!!0)\n                                         in do\n                                           val &lt;- evaluate var memory\n                                           case val of case1 -&gt; (interpret (case2++p) memory)\n                                                        _ -&gt; if length c &gt; 1 then interpret ((SwitchStmt var (tail c)):p) memory\n                                                             else interpret p memory \n</code></pre>\n\n<p>I have defined data types as such : </p>\n\n<pre><code>data Stmt = SwitchStmt{\n                        switchVar  :: Expr,\n                        switchCase :: [(Expr,[Stmt])]\n                        } \n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1552905599, "post_id": 55219311, "comment_id": 97173859, "body": "What do you mean by <code>... : Path A B</code>? Do you mean that <code>p</code> is of type <code>Path A B</code>, in which case it would be <code>... :: Path A B</code>? Or do you mean something else?"}], "answers": [{"comments": [{"owner": {"reputation": 1479, "user_id": 855443, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/d880e98c9fffc6253f3868babc99b8c1?s=128&d=identicon&r=PG", "display_name": "user855443", "link": "https://stackoverflow.com/users/855443/user855443"}, "edited": false, "score": 0, "creation_date": 1552913912, "post_id": 55220650, "comment_id": 97178666, "body": "Thank you. I was obviously confused by the explanation under <code>typeOf</code> which reads <code>Observe a type representation for the type of a value.</code> and is technically correct. Then I picked the function on the next line. Stupid me!"}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "reply_to_user": {"reputation": 1479, "user_id": 855443, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/d880e98c9fffc6253f3868babc99b8c1?s=128&d=identicon&r=PG", "display_name": "user855443", "link": "https://stackoverflow.com/users/855443/user855443"}, "edited": false, "score": 0, "creation_date": 1553031698, "post_id": 55220650, "comment_id": 97233356, "body": "@user855443: The problem was that it was unifying <code>proxy a ~ (Path A) B</code>, giving <code>proxy ~ Path A</code> and <code>a ~ B</code>, so naturally you got the <code>TypeRep</code> for <code>B</code>. <code>proxy</code> is ordinarily intended to be instantiated with something like <code>Data.Proxy.Proxy</code>."}, {"owner": {"reputation": 1479, "user_id": 855443, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/d880e98c9fffc6253f3868babc99b8c1?s=128&d=identicon&r=PG", "display_name": "user855443", "link": "https://stackoverflow.com/users/855443/user855443"}, "edited": false, "score": 0, "creation_date": 1553080847, "post_id": 55220650, "comment_id": 97250321, "body": "Thank you for the clarification. <code>typeOf</code> is the better choice and obviously easier to use in my case."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 4, "last_activity_date": 1552909640, "creation_date": 1552909640, "answer_id": 55220650, "question_id": 55219311, "link": "https://stackoverflow.com/questions/55219311/haskell-how-to-get-the-type-of-a-data-type-with-multiple-parameters-like-path/55220650#55220650", "title": "Haskell: How to get the type of a data type with multiple parameters (like `Path a b = ..`", "body": "<p>Just use <code>typeOf</code> instead of <code>typeRep</code>. Compare:</p>\n\n<pre><code>typeOf  :: Typeable a =&gt;       a -&gt; TypeRep\ntypeRep :: Typeable a =&gt; proxy a -&gt; TypeRep\n</code></pre>\n"}], "owner": {"reputation": 1479, "user_id": 855443, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/d880e98c9fffc6253f3868babc99b8c1?s=128&d=identicon&r=PG", "display_name": "user855443", "link": "https://stackoverflow.com/users/855443/user855443"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 85, "favorite_count": 0, "accepted_answer_id": 55220650, "answer_count": 1, "score": 2, "last_activity_date": 1552909640, "creation_date": 1552905202, "question_id": 55219311, "link": "https://stackoverflow.com/questions/55219311/haskell-how-to-get-the-type-of-a-data-type-with-multiple-parameters-like-path", "title": "Haskell: How to get the type of a data type with multiple parameters (like `Path a b = ..`", "body": "<p>I have a data type like </p>\n\n<pre><code>Path a b = ... \n</code></pre>\n\n<p>with two data types for a and b (all of these have deriving (Typeable)). There is a value </p>\n\n<pre><code>p = ... : Path A B \n</code></pre>\n\n<p>and I need the type of <code>p</code>. I tried </p>\n\n<pre><code>t = typeRep p\n</code></pre>\n\n<p>but obtain only the last type parameter (i.e. B). Is there a way to get the full type parameter, i.e. <code>Path A B</code>? </p>\n"}, {"tags": ["haskell", "sum"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 7, "creation_date": 1552905294, "post_id": 55219297, "comment_id": 97173671, "body": "but to answer the Haskell question, it&#39;s because pairs are defined as an <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/src/Data.Foldable.html#line-339\" rel=\"nofollow noreferrer\">instance</a> of <code>Foldable</code> but triples are not. It doesn&#39;t really make a lot of sense to me (nor does the instance for pairs, which simply ignores the first element), but that&#39;s how it is."}, {"owner": {"reputation": 14543, "user_id": 235908, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/rTstt.jpg?s=128&g=1", "display_name": "Simon Shine", "link": "https://stackoverflow.com/users/235908/simon-shine"}, "edited": false, "score": 4, "creation_date": 1552906378, "post_id": 55219297, "comment_id": 97174302, "body": "You want to try <code>sum [1,2]</code> and <code>sum [1,2,3]</code>."}, {"owner": {"reputation": 29, "user_id": 11220060, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/71bfcbb79496d163e40f9bac2bd6e8c0?s=128&d=identicon&r=PG&f=1", "display_name": "dna", "link": "https://stackoverflow.com/users/11220060/dna"}, "edited": false, "score": 0, "creation_date": 1552907323, "post_id": 55219297, "comment_id": 97174867, "body": "Hey Robin, yes this is specifically a haskell problem. Thank you very much for editing the tags. First time using stack overflow."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1552922483, "post_id": 55219297, "comment_id": 97184160, "body": "The semantics for an <code>n</code>-tuple are that of a <i>single</i> value stored in a context of <code>n-1</code> other values. Something with a <code>Foldable</code> instance has to have kind <code>* -&gt; *</code>, which in the case of product types always means having the first <code>n-1</code> values effectively ignored. <code>Functor</code> and <code>Foldable</code> both do this consistently: <code>fmap (+1) (&#39;a&#39;, 3) == (&#39;a&#39;, 4)</code>, while <code>sum (&#39;a&#39;, 3) == 3</code>. (Each <code>Foldable</code> function does little more than extract a value from its context.) For 2-tuples, the instances are for <code>(,) a</code>, not <code>(a, b)</code>; for 3-tuples, they would be for <code>(,,) a b</code> not <code>(a, b, c)</code>; etc."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1552943993, "post_id": 55219297, "comment_id": 97194807, "body": "@chepner That&#39;s true from a formal point of view, but how often do people actually <i>use</i> tuples like this? (<code>Writer</code> and <code>Control.Comonad.Env</code> aside)"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1552962384, "post_id": 55219297, "comment_id": 97199569, "body": "@bradrn That&#39;s not really relevant to the question of why <code>Foldable</code> et al. are defined the way they are."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1552969865, "post_id": 55219297, "comment_id": 97201024, "body": "@chepner I suppose so. It&#39;s just that it may be a bit confusing from a beginner&#39;s point of view."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1552994343, "post_id": 55219297, "comment_id": 97212091, "body": "Well, yes, it&#39;s confusing if you persist in thinking of a tuple as just a minor variation on a list. It&#39;s not. Maybe it would be better to have <i>no</i> <code>Foldable</code> instances for the partially-applied <code>(,) a</code> types, but ones that make use of anything <i>other</i> than the last element of the tuple simply aren&#39;t an option."}], "answers": [{"comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 2, "creation_date": 1552906223, "post_id": 55219535, "comment_id": 97174213, "body": "&quot;lists are pretty much the same in both languages&quot; - I would dispute that. Haskell&#39;s lists are true &quot;linked lists&quot; whereas I&#39;m pretty sure Python&#39;s &quot;lists&quot; are really arrays. (And therefore more efficient - Haskell lists are pretty inefficient for a lot of things you&#39;d use lists for in Python.)"}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 3, "creation_date": 1552906486, "post_id": 55219535, "comment_id": 97174369, "body": "@RobinZigmond True. I meant that in both languages lists are used for the same concept (that of a list of values), whereas tuples aren&#39;t."}, {"owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 0, "creation_date": 1552908219, "post_id": 55219535, "comment_id": 97175377, "body": "@bradrn Other way around, tuples are used for the same concept, lists are different, however most people use them in the same way: a homogeneous list of items."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 1, "creation_date": 1552909488, "post_id": 55219535, "comment_id": 97176122, "body": "&quot;it doesn&#39;t work properly&quot; it works completely properly, the way it works just isn&#39;t really what most people would expect."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1552909851, "post_id": 55219535, "comment_id": 97176352, "body": "There is another way in which Haskell and Python tuples are closer to each other than Haskell and Python lists are: tuples are immutable in both languages, whereas Python lists are mutable and Haskell lists are immutable."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 0, "creation_date": 1552944094, "post_id": 55219535, "comment_id": 97194843, "body": "@Elmex80s As you may have noticed from this discussion I am <i>not</i> a Python expert. After a bit of research I&#39;ve realised I&#39;m wrong; I&#39;ll edit the mistakes out."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1552944212, "post_id": 55219535, "comment_id": 97194882, "body": "@Cubic I see DanielWagner has edited this in - thanks!"}], "tags": [], "owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "is_accepted": false, "score": 5, "last_activity_date": 1552944193, "last_edit_date": 1552944193, "creation_date": 1552905969, "answer_id": 55219535, "question_id": 55219297, "link": "https://stackoverflow.com/questions/55219297/haskell-differences-between-sumx-y-vs-sumx-y-z/55219535#55219535", "title": "Haskell, differences between sum(x,y) vs sum(x,y,z)", "body": "<p>In both Python and Haskell, <code>(x,y,z)</code> is a tuple whereas <code>[x,y,z]</code> is a list. However, whereas lists are pretty much the same in both languages, <del>tuples are different: Python tuples are similar to Python lists, whereas in Haskell, tuples are a completely different concept</del> (<strong>EDIT:</strong> I was wrong); in Haskell, tuples are like records without field names (e.g. <code>(1, \"foo\", 'b')</code> is of type <code>(Int, String, Char)</code>). Thus in Haskell you can't sum tuples in general (since you can't guarantee each 'field' is of the same type), which is basically what <code>Could not deduce Foldable</code> means. However, a <code>Foldable</code> instance in the Prelude does exist for 2-tuples! As @RobinZigmond commented however, it doesn't work the way you might expect: since it can't guarantee that both fields are of the same type, it just ignores the first element completely:</p>\n\n<pre><code>Prelude&gt; sum (1,2)\n2\n</code></pre>\n"}], "owner": {"reputation": 29, "user_id": 11220060, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/71bfcbb79496d163e40f9bac2bd6e8c0?s=128&d=identicon&r=PG&f=1", "display_name": "dna", "link": "https://stackoverflow.com/users/11220060/dna"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 162, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1552944193, "creation_date": 1552905154, "last_edit_date": 1552906332, "question_id": 55219297, "link": "https://stackoverflow.com/questions/55219297/haskell-differences-between-sumx-y-vs-sumx-y-z", "title": "Haskell, differences between sum(x,y) vs sum(x,y,z)", "body": "<p>I am confused about the differences between <code>sum (x,y)</code> and <code>sum(x,y,z)</code>. The type signature of <code>sum</code> appears to be <code>(Foldable t, Num a) =&gt; t a -&gt; a</code>. What I am getting is that it takes in a foldable <code>t</code> and a typeclass of <code>Num a</code>. Sum(x,y) always outputs y and sum(x,y,z) gives an error:</p>\n\n<pre><code> \"Could not deduce (Foldable ((,,) Integer Integer))\n        arising from a use of `sum'\"\n</code></pre>\n\n<p>So why is sum(x,y) able to output something compared to sum(x,y,z)</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 944, "user_id": 49554, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/02c8ecc24181d171df85a26458b9cd5f?s=128&d=identicon&r=PG", "display_name": "jneira", "link": "https://stackoverflow.com/users/49554/jneira"}, "edited": false, "score": 2, "creation_date": 1552899543, "post_id": 55217443, "comment_id": 97170456, "body": "Unfortunately the error is not clear but the cause is: <code>:</code> is an operator to build lists with the type <code>a -&gt; [a] -&gt; [a]</code> so it needs a list in the right hand: <code>let x:y = 3:[4] in x*x+y*y</code>. Note that you cant use y as a number cause"}, {"owner": {"reputation": 37, "user_id": 10974668, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-bDW-x9h4bAI/AAAAAAAAAAI/AAAAAAAABzk/7WTVolTuYSo/photo.jpg?sz=128", "display_name": "Sushant Pradhan", "link": "https://stackoverflow.com/users/10974668/sushant-pradhan"}, "reply_to_user": {"reputation": 944, "user_id": 49554, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/02c8ecc24181d171df85a26458b9cd5f?s=128&d=identicon&r=PG", "display_name": "jneira", "link": "https://stackoverflow.com/users/49554/jneira"}, "edited": false, "score": 0, "creation_date": 1552900133, "post_id": 55217443, "comment_id": 97170737, "body": "Thanks for the help! I found the answer myself :) It is because: <code>prepend operator</code> adds something to a list. Here there was no list! It can be solved by doing <code>let x:y:[] = 3:4:[] in x*x+y*y OR let x:[y] = 3:[4] in x*x+y*y</code>"}, {"owner": {"reputation": 17170, "user_id": 1671066, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/bd4c9461f2d17a884fba66eeed20e320?s=128&d=identicon&r=PG", "display_name": "Micha Wiedenmann", "link": "https://stackoverflow.com/users/1671066/micha-wiedenmann"}, "edited": false, "score": 1, "creation_date": 1552900340, "post_id": 55217443, "comment_id": 97170843, "body": "Please post an answer to your own question and mark it as accepted (after a wait time). This is how StackOverflow is supposed to work."}], "answers": [{"tags": [], "owner": {"reputation": 2026, "user_id": 1406083, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/1gC8p.jpg?s=128&g=1", "display_name": "Billy Brown", "link": "https://stackoverflow.com/users/1406083/billy-brown"}, "is_accepted": true, "score": 6, "last_activity_date": 1552902933, "last_edit_date": 1552902933, "creation_date": 1552902283, "answer_id": 55218456, "question_id": 55217443, "link": "https://stackoverflow.com/questions/55217443/why-is-there-an-error-for-the-third-let-in-statement/55218456#55218456", "title": "Why is there an error for the third let-in statement?", "body": "<p>In the third example, the right-hand-side of the <code>let</code> assignment is: <code>3:4</code>. The <code>:</code> (cons) operator has the type signature <code>a -&gt; [a] -&gt; [a]</code>: it takes a value on its left side, and a list of that type of value on the right side. In this case, <code>3</code> is an <code>a</code>, but <code>4</code> is not a list of <code>a</code> (<code>[a]</code>); it is also an <code>a</code>. This is invalid.</p>\n\n<p>Given the form of your exercise so far, there are two ways that you can fix this expression: with <code>3:[4]</code> or with <code>3:4:[]</code>.</p>\n\n<p>If you tried running your code now, you would see that it fails on <code>x * x + y * y</code>. This is because your pattern-match assigns <code>x</code> to <code>3</code>, and <code>y</code> to <code>[4]</code> (a singleton list). A list cannot be multiplied by itself, nor can it be added to a number. So once more, we use the solution for the right-hand-side, on the left-hand-side:</p>\n\n<pre><code>let x:y:[] = 3:4:[]\n    in x * x + y * y\n</code></pre>\n\n<p>If we add a few too many type annotations, you can hopefully see where things are going wrong:</p>\n\n<pre><code>-- These work fine\n-- let [x, y] = [3, 4] in ...\nexample1 = let [(x :: a), (y :: a)] :: [a]\n             = [(3 :: a), (4 :: a)] :: [a]\n            in x * x + y * y\n-- let x:[y] = [3, 4] in ...\nexample2 = let ((x :: a) : ([(y :: a)] :: [a])) :: [a]\n            in x * x + y * y\n\n-- This is the incorrect implementation\n-- let x:y = 3:4 in ...\nexample3 :: (Num a) =&gt; a\nexample3 = let (x :: a) : (y :: [a])   -- (:) :: a -&gt; [a] -&gt; [a]\n             = (3 :: a) : (4 :: a)     -- 4 :: a is invalid here: require [a]\n            in (x :: a) * (x :: a)\n             + (y :: [a]) * (y :: [a]) -- Trying to multiply two lists\n\n-- This is the fixed implementation\n-- let x:y:[] = 3:4:[] in ...\nexample3' :: (Num a) =&gt; a\nexample3' = let ((x :: a) : (y :: a) : ([] :: [a])) :: [a]\n              = ((3 :: a) : (4 :: a) : ([] :: [a])) :: [a]\n             in x * x + y * y\n</code></pre>\n"}], "owner": {"reputation": 37, "user_id": 10974668, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-bDW-x9h4bAI/AAAAAAAAAAI/AAAAAAAABzk/7WTVolTuYSo/photo.jpg?sz=128", "display_name": "Sushant Pradhan", "link": "https://stackoverflow.com/users/10974668/sushant-pradhan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 85, "favorite_count": 0, "accepted_answer_id": 55218456, "answer_count": 1, "score": -2, "last_activity_date": 1552902933, "creation_date": 1552898620, "last_edit_date": 1552900191, "question_id": 55217443, "link": "https://stackoverflow.com/questions/55217443/why-is-there-an-error-for-the-third-let-in-statement", "title": "Why is there an error for the third let-in statement?", "body": "<p><code>Prelude&gt; let [x,y] = [3,4] in x*x+y*y</code></p>\n\n<blockquote>\n  <p><code>25</code></p>\n</blockquote>\n\n<p><code>Prelude&gt; let x:[y] = [3,4] in x*x + y*y</code></p>\n\n<blockquote>\n  <p><code>25</code></p>\n</blockquote>\n\n<p><code>Prelude&gt; let x:y = 3:4 in x*x+y*y</code></p>\n\n<blockquote>\n  <p>interactive:6:5: error:<br>\n      * Non type-variable argument in the constraint: Num [a]<br>\n        (Use FlexibleContexts to permit this)<br>\n      * When checking the inferred type<br>\n          x :: forall a. (Num a, Num [a]) => a<br>\n        In the expression: let x : y = 3 : 4 in x * x + y * y<br>\n        In an equation for `it': it = let x : y = 3 : 4 in x * x + y * y</p>\n</blockquote>\n\n<p>Can someone explain what is happening in the first two statements and why is there an error for the third <code>let ... in ..</code> statement.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1552868398, "post_id": 55213250, "comment_id": 97162336, "body": "Looks like some confusion here: <code>z == 400 `mod` 1</code> should be <code>z `mod` 400 == 0</code> surely? Similarly for the others. And why are you using a triple <code>(x,y,z)</code> when you only care about <code>z</code>?"}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 1, "creation_date": 1552868417, "post_id": 55213250, "comment_id": 97162339, "body": "Why does the function even take a tuple if it only needs the last element?"}, {"owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "reply_to_user": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1552868454, "post_id": 55213250, "comment_id": 97162347, "body": "@Cubic It&#39;s probably as if there were a <code>type Date = (Int, Int, Int)</code> for month,day,year or something."}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user9660393"}, "edited": false, "score": 0, "creation_date": 1552868677, "post_id": 55213269, "comment_id": 97162382, "body": "Damn it, I knew it was using <code>mod</code> wrong. Thank you so much! I feel like an idiot."}], "tags": [], "owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "is_accepted": true, "score": 4, "last_activity_date": 1552868420, "creation_date": 1552868420, "answer_id": 55213269, "question_id": 55213250, "link": "https://stackoverflow.com/questions/55213250/checking-divisibility-for-bool-always-results-in-false/55213269#55213269", "title": "Checking divisibility for Bool always results in false", "body": "<p><code>mod</code> is 0 when it's divisible, and it also doesn't go all the way on the end in Haskell. Try this instead:</p>\n\n<pre><code>checkLeap :: (Int, Int, Int) -&gt; Bool\ncheckLeap (x,y,z)\n  | z `mod` 400 == 0                   = True\n  | z `mod` 4 == 0 &amp;&amp; z `mod` 100 /= 0 = True\n  | otherwise                          = False\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user9660393"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "accepted_answer_id": 55213269, "answer_count": 1, "score": -2, "last_activity_date": 1552868420, "creation_date": 1552868198, "question_id": 55213250, "link": "https://stackoverflow.com/questions/55213250/checking-divisibility-for-bool-always-results-in-false", "title": "Checking divisibility for Bool always results in false", "body": "<p>I'm trying to check for leap years, which are \"years either divisible by 400 or divisible by 4 but not divisible by 100.\" Removing one of the conditions still doesn't return a true on actual leap years. Only the z value in the tuple counts toward the divisibility but these conditions never return a True value for an actual leap year.</p>\n\n<pre><code>checkLeap :: (Int, Int, Int) -&gt; Bool\ncheckLeap (x,y,z)\n  | z == 400 `mod` 1                   = True\n  | z == 4 `mod` 1 &amp;&amp; z /= 100 `mod` 1 = True\n  | otherwise                          = False\n</code></pre>\n"}, {"tags": ["loops", "haskell", "recursion", "nested", "counter"], "comments": [{"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 0, "creation_date": 1552942809, "post_id": 55210289, "comment_id": 97194364, "body": "You appear to have the same homework as <a href=\"https://stackoverflow.com/questions/55202475/the-number-of-the-product-n-a2-a3-using-recursion-only-in-haskell\">this guy</a>"}], "answers": [{"comments": [{"owner": {"reputation": 129, "user_id": 11217204, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e21225c0307007ebde12a4211d54013c?s=128&d=identicon&r=PG&f=1", "display_name": "DavidDunn", "link": "https://stackoverflow.com/users/11217204/daviddunn"}, "edited": false, "score": 0, "creation_date": 1552847736, "post_id": 55210483, "comment_id": 97157043, "body": "Great answer , i also thought about finding the length of a list for the counter , but unfortunately i must implement it in haskell WITHOUT any usage of lists and imported code  :-(  . Only recursion left maybe? Like reinventing the wheel ."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1552853363, "post_id": 55210483, "comment_id": 97158725, "body": "Who is telling you to do this without lists? Seems like a pointless exercise."}, {"owner": {"reputation": 129, "user_id": 11217204, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e21225c0307007ebde12a4211d54013c?s=128&d=identicon&r=PG&f=1", "display_name": "DavidDunn", "link": "https://stackoverflow.com/users/11217204/daviddunn"}, "edited": false, "score": 0, "creation_date": 1552854834, "post_id": 55210483, "comment_id": 97159192, "body": "My captors :-(  sorry , haha"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 5, "last_activity_date": 1552847411, "creation_date": 1552847411, "answer_id": 55210483, "question_id": 55210289, "link": "https://stackoverflow.com/questions/55210289/convert-c-code-to-haskell-code-using-recursion-instead-of-loops-no-lists/55210483#55210483", "title": "Convert c code to haskell code using recursion instead of loops (no lists)", "body": "<p>I guess an idiomatic translation would look like this:</p>\n\n<pre><code>n = 46656\ntr = sqrt n\ncounter = length\n    [ ()\n    | i &lt;- [1..tr]\n    , j &lt;- [1..tr]\n    , i*i*j*j*j == n\n    ]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 129, "user_id": 11217204, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e21225c0307007ebde12a4211d54013c?s=128&d=identicon&r=PG&f=1", "display_name": "DavidDunn", "link": "https://stackoverflow.com/users/11217204/daviddunn"}, "edited": false, "score": 0, "creation_date": 1552853654, "post_id": 55210940, "comment_id": 97158800, "body": "I changed the sqrt to a custom sqrtInt function and it worked. You&#39;re a savior man , really thank you from the bottom of my heart!!!"}], "tags": [], "owner": {"reputation": 143, "user_id": 2050162, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/da41badf1bf65b8e0290737c4d707dd4?s=128&d=identicon&r=PG", "display_name": "Boro Sitnikovski", "link": "https://stackoverflow.com/users/2050162/boro-sitnikovski"}, "is_accepted": true, "score": 2, "last_activity_date": 1552850244, "creation_date": 1552850244, "answer_id": 55210940, "question_id": 55210289, "link": "https://stackoverflow.com/questions/55210289/convert-c-code-to-haskell-code-using-recursion-instead-of-loops-no-lists/55210940#55210940", "title": "Convert c code to haskell code using recursion instead of loops (no lists)", "body": "<p>Not that it isn't possible, but definitely not the best looking:</p>\n\n<pre><code>counter n = go (sqrt n) (sqrt n)\n    where\n    go 0 _  = 0\n    go i tr = (go2 tr 0 i) + (go (i - 1) tr)\n    go2 0 c i = c\n    go2 j c i = go2 (j - 1) (if i^2 * j^3 == n then c + 1 else c) i\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": false, "score": 0, "last_activity_date": 1553034095, "creation_date": 1553034095, "answer_id": 55250833, "question_id": 55210289, "link": "https://stackoverflow.com/questions/55210289/convert-c-code-to-haskell-code-using-recursion-instead-of-loops-no-lists/55250833#55250833", "title": "Convert c code to haskell code using recursion instead of loops (no lists)", "body": "<p>A general and relatively straightforward way to translate imperative code is to replace each basic block with a function, and give it a parameter for every piece of state it uses. If it\u2019s a loop, it will repeatedly tail-call itself with different values of those parameters. If you don\u2019t care about printing the intermediate results, this translates straightforwardly:</p>\n\n<p>The main program prints the result of the outer loop, which begins with <code>i</code> = 1 and <code>counter</code> = 0.</p>\n\n<pre><code>main = print (outer 1 0)\n  where\n</code></pre>\n\n<p>These are constants, so we can just bind them outside the loops:</p>\n\n<pre><code>    n = 46656\n    tr = floor (sqrt n)\n</code></pre>\n\n<p>The <code>outer</code> loop tail-calls itself with increasing <code>i</code>, and counter updated by the <code>inner</code> loop, until <code>i &gt; tr</code>, then it returns the final counter.</p>\n\n<pre><code>    outer i counter\n      | i &lt;= tr = outer (i + 1) (inner 1 counter)\n      | otherwise = counter\n      where\n</code></pre>\n\n<p>The <code>inner</code> loop tail-calls itself with increasing <code>j</code>, and its <code>counter</code> (<code>counter'</code>) incremented when <code>i^2 * j^3 == n</code>, until <code>j &gt; tr</code>, then it returns the updated counter back to <code>outer</code>. Note that this is inside the <code>where</code> clause of <code>outer</code> because it uses <code>i</code> to calculate <code>res</code>\u2014you could alternatively make <code>i</code> an additional parameter.</p>\n\n<pre><code>        inner j counter'\n          | j &lt;= tr = inner (j + 1) $ let\n            res = i ^ 2 * j ^ 3\n            in if res == n then counter' + 1 else counter'\n          | otherwise = counter'\n</code></pre>\n"}], "owner": {"reputation": 129, "user_id": 11217204, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e21225c0307007ebde12a4211d54013c?s=128&d=identicon&r=PG&f=1", "display_name": "DavidDunn", "link": "https://stackoverflow.com/users/11217204/daviddunn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 129, "favorite_count": 0, "accepted_answer_id": 55210940, "answer_count": 3, "score": -1, "last_activity_date": 1553034095, "creation_date": 1552846181, "last_edit_date": 1552846954, "question_id": 55210289, "link": "https://stackoverflow.com/questions/55210289/convert-c-code-to-haskell-code-using-recursion-instead-of-loops-no-lists", "title": "Convert c code to haskell code using recursion instead of loops (no lists)", "body": "<p>I want to convert the following c code to haskell code, without using lists. It returns the number of occurrences of two numbers for a given <code>n</code> , where <code>n</code> satisfies <code>n=(a*a)*(b*b*b)</code>.</p>\n\n<pre><code>#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n#include&lt;math.h&gt;\n\nint main(void) {\n\nint n = 46656;\nint i,j,counter=0,res=1;\n\n\nint tr = sqrt(n);\n\n\nfor(i=1; i&lt;=tr; i++) {\n    for(j=1; j&lt;=tr; j++) {\n\n                res = (i*i) * (j*j*j) ;\n                if(res==n) {\n            counter=counter+1;\n        }\n        printf(\"%d\\n\",res);\n    }\n\n}\n\nprintf(\"%d\\n\",counter);\n}\n</code></pre>\n\n<p>I've managed to do something similar in haskell in regarding to loops, but only for finding the overall sum. I find difficult implementing the if part and counter part(see on c code) in haskell also. Any help much appreciated! Heres my haskell code also:</p>\n\n<pre><code>sumF :: (Int-&gt;Int)-&gt;Int-&gt;Int\nsumF f 0 = 0\nsumF f n = sumF f (n-1) + f n\n\n\n\nsumF1n1n :: (Int-&gt;Int-&gt;Int)-&gt;Int-&gt;Int\nsumF1n1n f 0 = 0\nsumF1n1n f n = sumF1n1n f (n-1)\n               +sumF (\\i -&gt; f i n) (n-1)\n               +sumF (\\j -&gt; f n j) (n-1)\n               +f n n\n\nfunc :: Int-&gt;Int-&gt;Int\nfunc 0 0 = 0\nfunc a b = res\n        where\n        res = (a^2 * b^3)\n\ncall :: Int-&gt;Int\ncall n = sumF1n1n func n\n</code></pre>\n"}, {"tags": ["haskell", "recursion", "types", "tuples"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 1, "creation_date": 1552831993, "post_id": 55207952, "comment_id": 97151902, "body": "No, but why don&#39;t you just use <code>++</code>?"}, {"owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 3, "creation_date": 1552832078, "post_id": 55207952, "comment_id": 97151920, "body": "What is wrong with this? <code>let x = [(&#39;h&#39;,7),(&#39;s&#39;,3),(&#39;g&#39;,1)] in concat [replicate n c | (c, n) &lt;- x]</code>."}, {"owner": {"reputation": 3, "user_id": 11216404, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f22a93ec79138f666dedd6a2e6a0781e?s=128&d=identicon&r=PG&f=1", "display_name": "Ali", "link": "https://stackoverflow.com/users/11216404/ali"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1552832107, "post_id": 55207952, "comment_id": 97151935, "body": "@melpomene Was just looking to see if there was a solution that works better in practice, not completely confident in using folds yet either."}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 4, "creation_date": 1552832212, "post_id": 55207952, "comment_id": 97151972, "body": "Why folds? And what is all that <code>(snd (head x))</code> stuff? <code>decode ((c, n) : xs) = replicate n c ++ decode xs</code> seems much simpler to me."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 5, "creation_date": 1552832545, "post_id": 55207952, "comment_id": 97152077, "body": "Yes: almost always, pattern matching is preferrable over <code>fst</code>/<code>snd</code> etc., and in particular <code>head</code> and <code>tail</code> are <a href=\"https://en.wikipedia.org/wiki/Partial_function\" rel=\"nofollow noreferrer\">evil</a>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1552834220, "post_id": 55207952, "comment_id": 97152619, "body": "If you <i>really</i> want to get esoteric, then <code>decode = concatMap  (uncurry (flip replicate))</code>."}, {"owner": {"reputation": 3, "user_id": 11216404, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f22a93ec79138f666dedd6a2e6a0781e?s=128&d=identicon&r=PG&f=1", "display_name": "Ali", "link": "https://stackoverflow.com/users/11216404/ali"}, "edited": false, "score": 1, "creation_date": 1552834425, "post_id": 55207952, "comment_id": 97152698, "body": "Thank you very much for all the help, from what I&#39;ve red on the haskell wiki I would have assumed that it was always better to find a solution that doesn&#39;t involve append."}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1552834443, "post_id": 55207952, "comment_id": 97152704, "body": "What do you mean by &quot;append&quot;?"}, {"owner": {"reputation": 3, "user_id": 11216404, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f22a93ec79138f666dedd6a2e6a0781e?s=128&d=identicon&r=PG&f=1", "display_name": "Ali", "link": "https://stackoverflow.com/users/11216404/ali"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1552835868, "post_id": 55207952, "comment_id": 97153157, "body": "@melpomene The <code>++</code> operation"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 3, "creation_date": 1552838292, "post_id": 55207952, "comment_id": 97153950, "body": "@Ali The problem with <code>(++)</code> occurs when you repeatedly append a short string to a longer string. Here, you&#39;re doing the opposite: adding a long string to the end of a short string."}, {"owner": {"reputation": 1290, "user_id": 5499871, "user_type": "registered", "profile_image": "https://graph.facebook.com/10206799318615183/picture?type=large", "display_name": "Izaak Weiss", "link": "https://stackoverflow.com/users/5499871/izaak-weiss"}, "edited": false, "score": 0, "creation_date": 1552843003, "post_id": 55207952, "comment_id": 97155540, "body": "I think your problem might actually be a parenthesis in the wrong place. Try <code>decode x = concat(replicate (snd (head x)) (fst (head x))) : decode (tail x)</code> instead of what you have right now."}], "answers": [{"comments": [{"owner": {"reputation": 17170, "user_id": 1671066, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/bd4c9461f2d17a884fba66eeed20e320?s=128&d=identicon&r=PG", "display_name": "Micha Wiedenmann", "link": "https://stackoverflow.com/users/1671066/micha-wiedenmann"}, "edited": false, "score": 0, "creation_date": 1552850652, "post_id": 55210385, "comment_id": 97157901, "body": "Your first line is true for all languages in fact for all of life."}], "tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 2, "last_activity_date": 1552846764, "creation_date": 1552846764, "answer_id": 55210385, "question_id": 55207952, "link": "https://stackoverflow.com/questions/55207952/ignore-type-declaration-until-last-recursion/55210385#55210385", "title": "Ignore type declaration until last recursion", "body": "<p>In Haskell we do not suppress errors, we fix them. The minimal edit(s) to fix the problem are:</p>\n\n<pre><code>decode :: [(Char,Int)] -&gt; String\ndecode [] = []\ndecode x = -- concat(replicate (snd (head x)) (fst (head x)) : decode (tail x))  -- BAD\n         =    concat[replicate (snd (head x)) (fst (head x)) , decode (tail x)]   -- OK\n         =    concat(replicate (snd (head x)) (fst (head x)) : [decode (tail x)]) -- OK\n</code></pre>\n\n<p>Of course <code>concat [a,b] == a ++ b</code>, and thus</p>\n\n<pre><code>         =           replicate (snd (head x)) (fst (head x)) ++ decode (tail x)\n</code></pre>\n\n<p>i.e.</p>\n\n<pre><code>decode ((c,i):xs) =  replicate i c ++ decode xs\n</code></pre>\n\n<p>Thus, among many other possibilities suggested in the comments, </p>\n\n<pre><code>decode :: [(Char,Int)] -&gt; String\ndecode xs = [ c | (c,i) &lt;- xs, _ &lt;- [1..i]]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 17170, "user_id": 1671066, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/bd4c9461f2d17a884fba66eeed20e320?s=128&d=identicon&r=PG", "display_name": "Micha Wiedenmann", "link": "https://stackoverflow.com/users/1671066/micha-wiedenmann"}, "edited": false, "score": 3, "creation_date": 1552850821, "post_id": 55210728, "comment_id": 97157952, "body": "What a great first post to StackOverflow. Welcome!"}], "tags": [], "owner": {"reputation": 131, "user_id": 7343224, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39bffe4dd05aecacff7ca6f99a304e69?s=128&d=identicon&r=PG&f=1", "display_name": "Eduardo Hidalgo", "link": "https://stackoverflow.com/users/7343224/eduardo-hidalgo"}, "is_accepted": true, "score": 5, "last_activity_date": 1552848830, "creation_date": 1552848830, "answer_id": 55210728, "question_id": 55207952, "link": "https://stackoverflow.com/questions/55207952/ignore-type-declaration-until-last-recursion/55210728#55210728", "title": "Ignore type declaration until last recursion", "body": "<p>The problem with your code is with the <code>:</code> cons function. it's type is <code>a -&gt; [a] -&gt; [a]</code> which means it puts a <em>single</em> element a list at the beginning. In your case you are trying to add a <em>list</em> (the replicated elements) to the list, that's why <code>++</code> works (it's type is <code>[a] -&gt; [a] -&gt; [a]</code>). There is no way to simply \"ignore the type\" because types are interleaved with how haskell compiles/runs, and that's a good thing, in this case the compiler saved you from a \"type mismatch\" runtime error in other langs.</p>\n\n<p>if you want to write it with <code>:</code>, then you can't use <code>replicate</code>, you will need to make an auxiliary recursive function that repeats the char, and on zero decodes the rest of the list:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>decodeA :: [(Char,Int)] -&gt; String\ndecodeA [] = []\ndecodeA ((c,n):xs) = rep c n\n           where rep ch 0 = decodeA xs\n                 rep ch m = ch : (rep ch (m-1))\n</code></pre>\n\n<p>now a <em>more clear</em> solution arises from using <code>++</code>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>decodeB :: [(Char,Int)] -&gt; String\ndecodeB [] = []\ndecodeB ((c,n):xs) = replicate n c ++ decodeB xs\n</code></pre>\n\n<p>and benchmarking both solutions, the second is not only clearer but also faster:</p>\n\n<p><em>benchmark code</em></p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>t1 = [('h',7),('s',3),('g',1)]\nt2 = [('z',9),('z',1)]\nt3 = [('a',10000), ('b',10000), ('c',10000),('d',10000), ('e',10000), ('f',10000)]\n\nmain = defaultMain [\n  bgroup \"decode\" [ bench \"t1 decodeA\" $ nf decodeA t1\n                  , bench \"t2 decodeA\" $ nf decodeA t2\n                  , bench \"t3 decodeA\" $ nf decodeA t3\n                  , bench \"t1 decodeB\" $ nf decodeB t1\n                  , bench \"t2 decodeB\" $ nf decodeB t2\n                  , bench \"t3 decodeB\" $ nf decodeB t3\n                   ]\n</code></pre>\n\n<p><em>benchmark results</em></p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>benchmarking decode/t1 decodeA\ntime                 7.152 \u03bcs   (7.093 \u03bcs .. 7.225 \u03bcs)\n                     0.999 R\u00b2   (0.998 R\u00b2 .. 1.000 R\u00b2)\nmean                 7.129 \u03bcs   (7.091 \u03bcs .. 7.216 \u03bcs)\nstd dev              190.6 ns   (69.72 ns .. 354.5 ns)\nvariance introduced by outliers: 31% (moderately inflated)\n\nbenchmarking decode/t2 decodeA\ntime                 6.283 \u03bcs   (6.235 \u03bcs .. 6.340 \u03bcs)\n                     0.999 R\u00b2   (0.999 R\u00b2 .. 1.000 R\u00b2)\nmean                 6.268 \u03bcs   (6.239 \u03bcs .. 6.326 \u03bcs)\nstd dev              137.8 ns   (71.41 ns .. 211.7 ns)\nvariance introduced by outliers: 24% (moderately inflated)\n\nbenchmarking decode/t3 decodeA\ntime                 32.67 ms   (32.31 ms .. 33.08 ms)\n                     0.999 R\u00b2   (0.998 R\u00b2 .. 1.000 R\u00b2)\nmean                 32.68 ms   (32.53 ms .. 32.93 ms)\nstd dev              406.7 \u03bcs   (238.0 \u03bcs .. 613.5 \u03bcs)\n\nbenchmarking decode/t1 decodeB\ntime                 1.208 \u03bcs   (1.199 \u03bcs .. 1.220 \u03bcs)\n                     1.000 R\u00b2   (0.999 R\u00b2 .. 1.000 R\u00b2)\nmean                 1.212 \u03bcs   (1.204 \u03bcs .. 1.228 \u03bcs)\nstd dev              34.30 ns   (19.59 ns .. 62.18 ns)\nvariance introduced by outliers: 38% (moderately inflated)\n\nbenchmarking decode/t2 decodeB\ntime                 923.6 ns   (916.9 ns .. 931.6 ns)\n                     0.999 R\u00b2   (0.997 R\u00b2 .. 1.000 R\u00b2)\nmean                 923.8 ns   (917.0 ns .. 950.3 ns)\nstd dev              38.01 ns   (9.440 ns .. 84.90 ns)\nvariance introduced by outliers: 57% (severely inflated)\n\nbenchmarking decode/t3 decodeB\ntime                 1.250 ms   (1.229 ms .. 1.274 ms)\n                     0.997 R\u00b2   (0.995 R\u00b2 .. 0.999 R\u00b2)\nmean                 1.248 ms   (1.239 ms .. 1.269 ms)\nstd dev              47.55 \u03bcs   (32.05 \u03bcs .. 78.69 \u03bcs)\nvariance introduced by outliers: 26% (moderately inflated)\n</code></pre>\n\n<p>in this case, <code>decodeB</code> is 32 times faster than <code>decodeA</code> on the biggest test case</p>\n"}], "owner": {"reputation": 3, "user_id": 11216404, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f22a93ec79138f666dedd6a2e6a0781e?s=128&d=identicon&r=PG&f=1", "display_name": "Ali", "link": "https://stackoverflow.com/users/11216404/ali"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 121, "favorite_count": 0, "accepted_answer_id": 55210728, "answer_count": 2, "score": 0, "last_activity_date": 1552850537, "creation_date": 1552831724, "last_edit_date": 1552850537, "question_id": 55207952, "link": "https://stackoverflow.com/questions/55207952/ignore-type-declaration-until-last-recursion", "title": "Ignore type declaration until last recursion", "body": "<p>I'm trying to write a function which converts data in a tuple into a string for a program that does run length encoding. I've written it previously using append but I've been trying to improve it.</p>\n\n<p>The function decode should take a list of tuples and then return a string.</p>\n\n<p><strong>Examples</strong></p>\n\n<pre><code>&gt; decode [('h',7),('s',3),('g',1)]\n\"hhhhhhhsssg\"\n&gt; decode [('z',9),('z',1)]\n\"zzzzzzzzzz\"\n</code></pre>\n\n<p>I initially wrote it recursively using the append function which works fine but isn't optimal, my current implementation looks this:</p>\n\n<pre><code>decode :: [(Char,Int)] -&gt; String\ndecode [] = []\ndecode x = concat(replicate (snd (head x)) (fst (head x)) : decode (tail x)\n</code></pre>\n\n<p>This then gives me an error on compile as the <code>decode (tail x)</code> part doesn't fit the type declaration I'm not allowed to change. I'm sure it's bad practice but would there be a way to get the program not to conform to the type declaration until it finishes recursing?</p>\n\n<pre><code>    * Couldn't match type `Char' with `[Char]'\n      Expected type: [[Char]]\n        Actual type: String\n    * In the second argument of `(:)', namely `decode (tail x)'\n      In the first argument of `concat', namely\n        `(replicate (snd (head x)) (fst (head x)) : decode (tail x))'\n      In the expression:\n        concat (replicate (snd (head x)) (fst (head x)) : decode (tail x))\n   |\n35 | decode x = concat(replicate (snd (head x)) (fst (head x)) : decode (tail x))\n   |\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1552834963, "post_id": 55207669, "comment_id": 97152866, "body": "I <i>think</i> the idea is that when you attempt to call <code>ask</code> on a <code>String</code>, type inference allows <code>m</code> to be unified with the function monad, so that you end up with <code>ask :: String -&gt; String</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1552835017, "post_id": 55207669, "comment_id": 97152880, "body": "<code>m -&gt; r</code> is a functional dependency; knowing <code>m</code> is enough to infer what <code>r</code> is. In essence, it says that you can&#39;t define multiple <code>MonadReader</code> instances for the same monad but with different <code>r</code>s."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1552835019, "post_id": 55207669, "comment_id": 97152882, "body": "I don&#39;t have the knowledge to put a detailed answer, but in short: <code>m -&gt; r</code> is a <a href=\"https://wiki.haskell.org/Functional_dependencies\" rel=\"nofollow noreferrer\">Functional dependency</a>. And functions are a Monad instance itself, so that&#39;s the Monad that Haskell picks when you do <code>ask &quot;Hello&quot;</code>. (In fact, this is just the Reader Monad itself.)"}], "answers": [{"comments": [{"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1552844663, "post_id": 55208800, "comment_id": 97156075, "body": "I also do not understand <code>ask :: MonadReader r m =&gt; m r</code> type signature. Why is the type signature include <code>=&gt;</code>? What does it mean?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 1, "creation_date": 1552852874, "post_id": 55208800, "comment_id": 97158579, "body": "It means <code>ask</code> is value of type <code>m r</code> for any monad <code>m</code> and type <code>r</code> for which there is a <code>MonadReader</code> instance."}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1552854209, "post_id": 55208800, "comment_id": 97158970, "body": "Does it mean, the monad instance of type <code>r</code>?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1552859511, "post_id": 55208800, "comment_id": 97160467, "body": "No, <code>r</code> is the type &quot;wrapped&quot; by the monad <code>m</code>. For the most part, instances of <code>MonadReader</code> are (loosely speaking) either functions, <code>Reader</code> (itself just a wrapper around a function), or monads built using <code>ReaderT</code>. This means that <code>ask</code> is almost always a value that is, or from which can be extracted, a function."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 5, "last_activity_date": 1552861012, "last_edit_date": 1552861012, "creation_date": 1552837212, "answer_id": 55208800, "question_id": 55207669, "link": "https://stackoverflow.com/questions/55207669/how-to-read-monadreader-and-ask-definition/55208800#55208800", "title": "How to read MonadReader and ask definition?", "body": "<p>The <code>m -&gt; r</code> is a functional dependency, which roughly states that when trying to choose an instance of <code>MonadReader</code> to use, knowing <code>m</code> is sufficient for knowing <code>r</code>. Put another way, you can't define two separate instances with the same <code>m</code> but different <code>r</code>.</p>\n\n<p>Now, to determine which definition of <code>ask</code> to use, we turn to type inference. From its definition, we know <code>ask</code> has type <code>MonadReader r m =&gt; m r</code>. From its use in <code>ask \"Hello\"</code>, we know it also has to have a type like <code>a -&gt; b</code>; more specifically, we know that <code>a</code> unifies with <code>String</code>, since that's the type of <code>\"Hello\"</code>. So our task is to unify <code>MonadReader r m =&gt; m r</code> with <code>String -&gt; b</code>.</p>\n\n<p>This is pretty straightforward. Rewriting <code>String -&gt; b</code> in prefix notation and using explicit parentheses , we can line them up together:</p>\n\n<pre><code>MonadReader r m =&gt; m             r\n                   ((-&gt;) String) b\n</code></pre>\n\n<p>So <code>m ~ ((-&gt;) String)</code> and <code>r ~ b</code> (though we still don't know what <code>r/b</code> should be). Looking at the available instances of <code>MonadReader</code>, we find the (unique) instance for <code>m ~ (-&gt;) String</code> (or more generally, <code>(-&gt;) r</code>):</p>\n\n<pre><code>instance MonadReader r ((-&gt;) r) where\n    ask       = id\n    local f m = m . f\n</code></pre>\n\n<p>So now we know that for our choice of <code>m</code>, <code>ask = id</code>. (This lets us see that <code>r ~ b ~ String</code> as well.)</p>\n\n<p>And so, <code>ask \"Hello\" == id \"Hello\" == \"Hello\"</code>.</p>\n\n<p>Note that <code>ask</code> doesn't necessarily have to be a function. It might also be a value of type <code>Reader r a</code>, in which case <code>runReader</code> has to be used to extract the function.</p>\n\n<pre><code>&gt; :t runReader ask\nrunReader ask :: a -&gt; a\n&gt; runReader ask \"Hello\"\n\"Hello\"\n</code></pre>\n\n<p>It might also be a more complicated monad involving <code>ReaderT</code>:</p>\n\n<pre><code>&gt; :t runReaderT ask\nrunReaderT ask :: Monad m =&gt; a -&gt; m a\n&gt; runReaderT ask \"Hello\" :: Maybe String\nJust \"Hello\"\n&gt; runReaderT ask \"Hello\" :: Either String String\nRight \"Hello\"\n</code></pre>\n"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 108, "favorite_count": 0, "accepted_answer_id": 55208800, "answer_count": 1, "score": 2, "last_activity_date": 1552861012, "creation_date": 1552829960, "question_id": 55207669, "link": "https://stackoverflow.com/questions/55207669/how-to-read-monadreader-and-ask-definition", "title": "How to read MonadReader and ask definition?", "body": "<p>I am trying to figure out, how to read the following class type definition: </p>\n\n<pre><code>Prelude Data.Functor.Identity Control.Monad.Reader&gt; :i ask\nclass Monad m =&gt; MonadReader r (m :: * -&gt; *) | m -&gt; r where\n  ask :: m r\n  ...\n</code></pre>\n\n<p><code>m</code> is a higher kinded type and it has to be a <code>monad</code>.  </p>\n\n<p>But what does <code>m -&gt; r</code> means? </p>\n\n<p>Trying to play a bit with <code>ask</code> as the following:  </p>\n\n<pre><code>Prelude Data.Functor.Identity Control.Monad.Reader&gt; ask \"Hello\"\n\"Hello\"\n</code></pre>\n\n<p>Why can I pass an argument to <code>ask</code>? Looking at the type signature: </p>\n\n<pre><code>ask :: m r\n</code></pre>\n\n<p>I can not recognize, that I can pass an argument to <code>ask</code>.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 3392, "user_id": 7175117, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Tfz44.png?s=128&g=1", "display_name": "freestyle", "link": "https://stackoverflow.com/users/7175117/freestyle"}, "edited": false, "score": 5, "creation_date": 1552817922, "post_id": 55205892, "comment_id": 97148183, "body": "What are Reader and Parser? By default, when you say Reader you mean monad Reader which doesn&#39;t have relation to text reading."}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1552824399, "post_id": 55205892, "comment_id": 97149770, "body": "@WillNess I changed it. Reader does not mean for reading the text? In my case, which one would be the right choice?"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1552824634, "post_id": 55205892, "comment_id": 97149832, "body": "&quot;have the following text&quot; where do you have it?"}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1552824707, "post_id": 55205892, "comment_id": 97149851, "body": "@WillNess The text is below. Can you see it? Or I did something wrong."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1552824750, "post_id": 55205892, "comment_id": 97149863, "body": "is it in an external file? in your source code file? where?"}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1552824794, "post_id": 55205892, "comment_id": 97149872, "body": "Ah sorry. I will receive the text via websocket."}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1552826040, "post_id": 55205892, "comment_id": 97150170, "body": "&quot;<i>What is the difference between Reader and Parser?</i>&quot; What do they have in common?"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1552827053, "post_id": 55205892, "comment_id": 97150471, "body": "can you copy a relevant fragment of your code?"}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1552827646, "post_id": 55205892, "comment_id": 97150610, "body": "At moment, I do not have any code. I just want to know, how to proceed?"}], "answers": [{"comments": [{"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1552827711, "post_id": 55207110, "comment_id": 97150626, "body": "I am confuse about, when to use <code>Reader</code> and when <code>Parser</code>."}, {"owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "reply_to_user": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1552827934, "post_id": 55207110, "comment_id": 97150687, "body": "You need to write a parser. Parser is an English word for a thing which does parsing and you need a thing that does parsing. Reader is a different English word which sometimes describes a thing which does parsing. If you are thinking of specific things in Haskell you will need to be more specific."}, {"owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "reply_to_user": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 1, "creation_date": 1552828018, "post_id": 55207110, "comment_id": 97150716, "body": "What is the Reader?"}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1552828346, "post_id": 55207110, "comment_id": 97150821, "body": "In which situation should I use Reader? I can also use Reader to parse something, but it is the violation."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 3, "creation_date": 1552828508, "post_id": 55207110, "comment_id": 97150861, "body": "<code>Reader</code> simply provides a common, read-only environment to a group of function calls. It has little or no relationship to parsing."}, {"owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "edited": false, "score": 0, "creation_date": 1552828700, "post_id": 55207110, "comment_id": 97150905, "body": "Aha. Ok I&#39;ve got it. Thanks a lot."}], "tags": [], "owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "is_accepted": true, "score": 4, "last_activity_date": 1552827735, "last_edit_date": 1552827735, "creation_date": 1552826198, "answer_id": 55207110, "question_id": 55205892, "link": "https://stackoverflow.com/questions/55205892/what-is-the-difference-between-reader-and-parser/55207110#55207110", "title": "What is the difference between Reader and Parser?", "body": "<p>You probably should be looking for some kind of parser. That is the modern name for a program which does some kind of understanding of text like this.</p>\n\n<p>Sometimes the word reader is used because:</p>\n\n<ul>\n<li>Parser is used to refer to something else </li>\n<li>it is only tokenising (but such a program is normally called a lexer)</li>\n<li>In lisp, the function which parses strings into objects is called the reader</li>\n<li>In Haskell the typeclass <code>Read</code> is implemented to specify how to parse your type from a string </li>\n<li>the words have similar meanings and reader is a much simpler, more common natural language word to think of for this task.</li>\n</ul>\n"}], "owner": {"reputation": 25967, "user_id": 1743843, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/8ea2c1d9051e40332376a07bc166d9d5?s=128&d=identicon&r=PG&f=1", "display_name": "softshipper", "link": "https://stackoverflow.com/users/1743843/softshipper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 219, "favorite_count": 0, "closed_date": 1552843557, "accepted_answer_id": 55207110, "answer_count": 1, "score": -3, "last_activity_date": 1552827735, "creation_date": 1552816974, "last_edit_date": 1552824303, "question_id": 55205892, "link": "https://stackoverflow.com/questions/55205892/what-is-the-difference-between-reader-and-parser", "closed_reason": "Needs details or clarity", "title": "What is the difference between Reader and Parser?", "body": "<p>I would like to know, what is the difference between Reader and Parser? </p>\n\n<p>For example, I have the following text: </p>\n\n<pre><code>pcp-action: MESSAGE\npcp-body-type: text\nfield1:value1\nfield2:value2\n\n\nthis is the body!\n</code></pre>\n\n<p>The double spaces separate head and body. At the end, I would like to have a head and a body datatype to keep them.  </p>\n\n<p>The question is, should I use the Parser or the Reader?</p>\n"}, {"tags": ["haskell", "fold", "zipwith"], "comments": [{"owner": {"reputation": 17170, "user_id": 1671066, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/bd4c9461f2d17a884fba66eeed20e320?s=128&d=identicon&r=PG", "display_name": "Micha Wiedenmann", "link": "https://stackoverflow.com/users/1671066/micha-wiedenmann"}, "edited": false, "score": 0, "creation_date": 1552816451, "post_id": 55204856, "comment_id": 97147832, "body": "In your <code>(+)</code> example, which element gets added to 1? Similarly in your full example, which element gets zipped with <code>repeat []</code>?"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1552818832, "post_id": 55204856, "comment_id": 97148381, "body": "Hopefully the answers given have explained this for you, but I want to add that the &quot;magic&quot; here is the <code>zipWith (:)</code>, which takes a list of elements and a list of lists and prepends each element to the corresponding list. Eg. <code>zipWith (:) [1,2,3] [[4],[5],[6]]</code> is <code>[[1,4],[2,5],[3,6]]</code>"}], "answers": [{"comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1552817733, "post_id": 55205570, "comment_id": 97148138, "body": "I don&#39;t think this is correct. it must follow <code>foldr f z (x:xs) = f x (foldr f z xs)</code>."}, {"owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1552855217, "post_id": 55205570, "comment_id": 97159306, "body": "It is not correct, and I say It in the very first ans last line. My purpose was to give the intuition more than the actual definition which I think It can be missleading. But your answer was approved which doesn&#39;t prove my point at all hahaha"}], "tags": [], "owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "is_accepted": false, "score": 1, "last_activity_date": 1552814419, "creation_date": 1552814419, "answer_id": 55205570, "question_id": 55204856, "link": "https://stackoverflow.com/questions/55204856/how-do-foldr-and-zipwith-work-together/55205570#55205570", "title": "How do foldr and zipWith (:) work together?", "body": "<p>So using the intuition that <code>foldr</code> folds the list from the right (which is not the recursive definition) you get the following in the easy case:</p>\n\n<pre><code>foldr (+) 1 [2,3,4]\nfoldr (+) (4 + 1) [2,3]\nfoldr (+) (3 + 4 + 1) [2]\nfoldr (+) (2 + 3 + 4 + 1) []\n(2 + 3 + 4 + 1)\n10\n</code></pre>\n\n<p>Let's do the same in your example and considering the initial element <code>repeat [] == [[],[],[],[], \u2026]</code></p>\n\n<pre><code>foldr (zipWith (:)) ([[],[],[],[], ...]) [[1,2,3],[4,5,6],[7,8,9,10]] \nfoldr (zipWith (:)) (zipWith (:) [7,8,9,10] [[],[],[],[], ...]) [[1,2,3],[4,5,6]] \n</code></pre>\n\n<p>wait a min. Lets develop <code>zipWith (:) [7,8,9,10] [[],[],[],[], ...]</code></p>\n\n<pre><code>zipWith (:) [7,8,9,10] [[],[],[],[], ...] -- apply the funciton (:) pairwise\n[7:[], 8:[], 9:[], 10:[]]                 -- we get rid of the infinite list at this point.\n[[7],[8],[9],[10]]\n</code></pre>\n\n<p>From here we can easily follow the rest of the code</p>\n\n<pre><code>foldr (zipWith (:)) ([[],[],[],[], ...]) [[1,2,3],[4,5,6],[7,8,9,10]] \nfoldr (zipWith (:)) (zipWith (:) [7,8,9,10] [[],[],[],[], ...]) [[1,2,3],[4,5,6]]\nfoldr (zipWith (:)) ([[7],[8],[9],[10]]) [[1,2,3],[4,5,6]]\nfoldr (zipWith (:)) (zipWith (:) [4,5,6] [[7],[8],[9],[10]]) [[1,2,3]]\nfoldr (zipWith (:)) (zipWith (:) [1,2,3] [[4:7],[5:8],[6:9]) []\nzipWith (:) [1,2,3] [[4:7],[5:8],[6:9]\n[[1,4,7],[2,5,8],[3,6,9]]\n</code></pre>\n\n<p>Notice that this is not the proper definition of <code>foldr</code> and we are evaluating the results inmediately instead of lazily (as haskell does), but this is only for the sake of understanding.</p>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": true, "score": 5, "last_activity_date": 1552826485, "last_edit_date": 1552826485, "creation_date": 1552818132, "answer_id": 55206011, "question_id": 55204856, "link": "https://stackoverflow.com/questions/55204856/how-do-foldr-and-zipwith-work-together/55206011#55206011", "title": "How do foldr and zipWith (:) work together?", "body": "<p>This is very simple. <code>foldr</code> is defined so that</p>\n\n<pre><code>foldr f z [] = z\nfoldr f z (x:xs) = f x (foldr f z xs)\n</code></pre>\n\n<p>thus,</p>\n\n<pre><code>foldr f z [a,b,c,...,n] = f a (f b (f c (...(f n z)...)))\n</code></pre>\n\n<p>Or, here,</p>\n\n<pre><code>foldr (zipWith (:)) (repeat []) [[1,2,3],[4,5,6],[7,8,9,10]]\n=\nzipWith (:) [1,2,3] \n  ( foldr (zipWith (:)) (repeat []) [[4,5,6],[7,8,9,10]] )\n=\n...\n=\nzipWith (:) [1,2,3] \n  ( zipWith (:) [4,5,6]\n      ( zipWith (:) [7,8,9,10] \n          ( foldr (zipWith (:)) (repeat []) [] )))\n=\nzipWith (:) [1,2,3] \n  ( zipWith (:) [4,5,6]\n      ( zipWith (:) [7,8,9,10] \n          ( repeat [] )))\n=\nzipWith (:) [1,2,3] \n  ( zipWith (:) [4,5,6]\n      ( zipWith (:) [ 7, 8, 9,10] \n                    [[],[],[],[],[],[],....] ))\n=\nzipWith (:) [1,2,3] \n  ( zipWith (:) [ 4,  5,  6 ]\n                [[7],[8],[9],[10]] )\n=\nzipWith (:) [ 1   , 2   , 3   ] \n            [[4,7],[5,8],[6,9]] \n</code></pre>\n\n<p>And that's that.</p>\n\n<p><sub><i>(Next on the menu, <code>traverse ZipList [[1,2,3],[4,5,6],[7,8,9,10]]</code>... :) or maybe later.)</i></sub></p>\n\n<hr>\n\n<p>As for the other example, it is</p>\n\n<pre><code>foldr (+) 1 [2,3,4] \n= 2 + foldr (+) 1 [3,4] \n= 2 + (3 + foldr (+) 1 [4]) \n= 2 + (3 + (4 + foldr (+) 1 [])) \n= 2 + (3 + (4 + 1))\n= 2 + (3 + 5)\n= 2 + 8\n= 10\n</code></pre>\n\n<p>because <code>+</code> is <em>strict</em> in both of its arguments. </p>\n\n<p><code>zipWith</code> is not strict in both arguments, nor is the <code>(:)</code>, so the first sequence should be taken as an illustration only. The actual forcing will occur in the top-down order, not bottom-up. For instance,</p>\n\n<pre><code>&gt; map (take 1) . take 1 $ zipWith (:) (1 : undefined) (repeat undefined)\n[[1]]\n</code></pre>\n\n<p>fully in accordance with</p>\n\n<pre><code>map (take 1) . take 1 $ zipWith (:) (1 : undefined) (repeat undefined)\n=\nmap (take 1) . take 1 $ zipWith (:) (1 : undefined) (undefined : repeat undefined)\n=\nmap (take 1) . take 1 $ (1 : undefined) : zipWith (:) undefined (repeat undefined)\n=\nmap (take 1) $ (1 : undefined) : take 0 (zipWith (:) undefined (repeat undefined))\n=\nmap (take 1) $ (1 : undefined) : []\n=\nmap (take 1) [(1 : undefined)]\n=\n[take 1 (1 : undefined)]\n=\n[1 : take 0 undefined]\n=\n[1 : []]\n=\n[[1]]\n</code></pre>\n"}], "owner": {"reputation": 1103, "user_id": 10801098, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/obPLj.png?s=128&g=1", "display_name": "bug_spray", "link": "https://stackoverflow.com/users/10801098/bug-spray"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 352, "favorite_count": 1, "accepted_answer_id": 55206011, "answer_count": 2, "score": 5, "last_activity_date": 1552826485, "creation_date": 1552808352, "last_edit_date": 1552816354, "question_id": 55204856, "link": "https://stackoverflow.com/questions/55204856/how-do-foldr-and-zipwith-work-together", "title": "How do foldr and zipWith (:) work together?", "body": "<p>I'm new to Haskell, and I've come across the following code that baffles me:</p>\n\n<pre><code>foldr (zipWith (:)) (repeat []) [[1,2,3],[4,5,6],[7,8,9,10]]\n</code></pre>\n\n<p>It produces the following result, which after playing around with it, I'm not entirely sure why:</p>\n\n<pre><code>[[1,4,7],[2,5,8],[3,6,9]]\n</code></pre>\n\n<p>I'm under the impression that <code>(:)</code> prepends items to a list, and that <code>(repeat [])</code> produces an endless amount of empty lists <code>[]</code>, and that <code>foldr</code> takes a function, an item, and a list, and condenses the list by consecutively applying the function to each item in the list along with the results.</p>\n\n<p>That is to say, I intuitively understand how the following code produces a result of 10:</p>\n\n<pre><code>foldr (+) 1 [2,3,4]\n</code></pre>\n\n<p>But, I'm not at all sure why <code>foldr (zipWith (:)) (repeat [])</code> takes a list of lists and produces another list of lists with items grouped by their original inner indices.</p>\n\n<p>Any explanation would be enlightening.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "edited": false, "score": 0, "creation_date": 1552792358, "post_id": 55203504, "comment_id": 97143922, "body": "How exactly are you giving your code to GHC?"}, {"owner": {"reputation": 149, "user_id": 9684220, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Jesse", "link": "https://stackoverflow.com/users/9684220/jesse"}, "reply_to_user": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "edited": false, "score": 0, "creation_date": 1552792652, "post_id": 55203504, "comment_id": 97143966, "body": "I first input &quot; :{ &quot;  ,then copy the code, but terminal only shows the first 3 lines , then shows &quot;Display all 518 possibilities? (y or n)&quot;"}, {"owner": {"reputation": 149, "user_id": 9684220, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Jesse", "link": "https://stackoverflow.com/users/9684220/jesse"}, "reply_to_user": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "edited": false, "score": 0, "creation_date": 1552793213, "post_id": 55203504, "comment_id": 97144044, "body": "Let&#39;s ignoring the otherwise code, it may have some problems,  but even if i make it&quot;otherwise     = [1]&quot;, Terminal also warn &quot; &quot;Display all 516 possibilities? (y or n)&quot;"}, {"owner": {"reputation": 7130, "user_id": 10239789, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/YeHJm.png?s=128&g=1", "display_name": "TrebledJ", "link": "https://stackoverflow.com/users/10239789/trebledj"}, "edited": false, "score": 3, "creation_date": 1552793430, "post_id": 55203504, "comment_id": 97144066, "body": "Are you pressing tab? See <a href=\"https://unix.stackexchange.com/questions/171489/shell-display-all-2588-possibilities/171498\">Unix.SE: Shell display all 2588 possibilities</a>. Use spaces instead."}, {"owner": {"reputation": 17170, "user_id": 1671066, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/bd4c9461f2d17a884fba66eeed20e320?s=128&d=identicon&r=PG", "display_name": "Micha Wiedenmann", "link": "https://stackoverflow.com/users/1671066/micha-wiedenmann"}, "edited": false, "score": 0, "creation_date": 1552817004, "post_id": 55203504, "comment_id": 97147966, "body": "Unrelated. Note that <code>foo a [] = []</code> can be written as <code>foo _ [] = []</code> which makes it more clear that <code>a</code> is not used."}, {"owner": {"reputation": 17170, "user_id": 1671066, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/bd4c9461f2d17a884fba66eeed20e320?s=128&d=identicon&r=PG", "display_name": "Micha Wiedenmann", "link": "https://stackoverflow.com/users/1671066/micha-wiedenmann"}, "edited": false, "score": 0, "creation_date": 1552817118, "post_id": 55203504, "comment_id": 97147996, "body": "Unrelated. You are probably missing brackets <code>(</code> around <code>a-length xs</code> in <code>unroll a-length xs xs</code>."}], "answers": [{"comments": [{"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 1, "creation_date": 1552796892, "post_id": 55203644, "comment_id": 97144426, "body": "Could you accept this answer (press the green checkmark next to the voting buttons) so this question appears as &#39;answered&#39;? Otherwise it appears in the list of unanswered questions."}], "tags": [], "owner": {"reputation": 149, "user_id": 9684220, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Jesse", "link": "https://stackoverflow.com/users/9684220/jesse"}, "is_accepted": true, "score": 1, "last_activity_date": 1552794133, "creation_date": 1552794133, "answer_id": 55203644, "question_id": 55203504, "link": "https://stackoverflow.com/questions/55203504/why-does-ghci-show-display-all-516-posibilities-y-or-n-when-i-paste-code-in/55203644#55203644", "title": "Why does GHCi show &quot;Display all 516 posibilities? (y or n)&quot; when I paste code into the terminal?", "body": "<p>Yes, using Spaces instead Tab can solve this problem, thank you! @TrebuchetMS</p>\n"}], "owner": {"reputation": 149, "user_id": 9684220, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Jesse", "link": "https://stackoverflow.com/users/9684220/jesse"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 72, "favorite_count": 0, "accepted_answer_id": 55203644, "answer_count": 1, "score": -2, "last_activity_date": 1552816694, "creation_date": 1552792231, "last_edit_date": 1552816694, "question_id": 55203504, "link": "https://stackoverflow.com/questions/55203504/why-does-ghci-show-display-all-516-posibilities-y-or-n-when-i-paste-code-in", "title": "Why does GHCi show &quot;Display all 516 posibilities? (y or n)&quot; when I paste code into the terminal?", "body": "<p>When I copy and past the following code to my terminal</p>\n\n<pre><code>myCode :: Int -&gt;[a]-&gt;[a]\nmyCode a [] =[]\nmyCode a xs\n    | a &lt; length xs     = take a xs\n    | otherwise = xs :unroll a-length xs xs\n</code></pre>\n\n<p>I get</p>\n\n<blockquote>\n  <p>Display all 516 possibilities? (y or n)</p>\n</blockquote>\n\n<p>I think maybe the operation <code>&lt;</code> is the source of the problem. In this case, <code>a</code> is <code>Int</code>, and <code>length xs</code> is also of type <code>Int</code>. Why can't they be compared?</p>\n\n<p>By the way, the code implements a specified length list. For example:</p>\n\n<pre><code>myCode 5 [2,4,5,3,1,3,6,2,6]   -- returns [2,4,5,3,1]\nmyCode 10 \"my\"                 -- returns \"mymymymymy\"\n</code></pre>\n"}, {"tags": ["loops", "haskell", "recursion", "nested", "iteration"], "answers": [{"tags": [], "owner": {"reputation": 6367, "user_id": 6914441, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bbc12c764b93fa915b8e5384f521fe12?s=128&d=identicon&r=PG&f=1", "display_name": "jferard", "link": "https://stackoverflow.com/users/6914441/jferard"}, "is_accepted": true, "score": 0, "last_activity_date": 1553805032, "last_edit_date": 1553805032, "creation_date": 1553257129, "answer_id": 55299453, "question_id": 55202475, "link": "https://stackoverflow.com/questions/55202475/the-number-of-the-product-n-a2-a3-using-recursion-only-in-haskell/55299453#55299453", "title": "The number of the product n=(a^2) * (a^3) using recursion only in haskell", "body": "<p>You want to do it using recursion only You first have to find a way to enumerate all couples in a range. E.g. for the range <code>(a, b)</code> you want <code>[(0,0), (0,1), ..., (0,a), (1,0), ..., (1,b), ..., (a,b)]</code>. The first idea is to start with <code>(a, b)</code>, decrease <code>a</code> until it reaches <code>0</code> and restart with <code>(a,b-1)</code> etc.</p>\n\n<p>We could try something like that:</p>\n\n<pre><code>-- doesn't work\ncouples 0 0 = [(0,0)]\n-- what to do when a reaches 0?   v\ncouples 0 b = [(0,b)] ++ couples *?* (b-1)\ncouples a b = [(a,b)] ++ couples (a-1) b\n</code></pre>\n\n<p>When <code>a</code> reaches <code>0</code>, we want to restart from the initial value of <code>a</code> and decrease <code>b</code> by one. Hence we have to store the initial value of <code>a</code>:</p>\n\n<pre><code>couples' 0 0 _ = [(0,0)]\n-- use max_a to set the restart\ncouples' 0 b max_a = [(0,b)] ++ couples' max_a (b-1) max_a\ncouples' a b max_a = [(a,b)] ++ couples' (a-1) b max_a\n</code></pre>\n\n<p>It works:</p>\n\n<pre><code>couples a b = couples' a b a\nmain = print $ couples 3 2\n-- [(3,2),(2,2),(1,2),(0,2),(3,1),(2,1),(1,1),(0,1),(3,0),(2,0),(1,0),(0,0)]\n</code></pre>\n\n<p>Now, we don't want all the couples, but only those verifying <code>a*a*b*b*b == n</code>. (Note: I excluded the <code>(0,0)</code> couple since I assume <code>n /= 0</code>. If <code>n==0</code>, then you have a lot of solutions!). </p>\n\n<p>This is simple as:</p>\n\n<pre><code>call' _ 0 0 _ = []\ncall' n 0 b max_a = call' n max_a (b-1) max_a\ncall' n a b max_a = (if n==a*a*b*b*b then [(a,b)] else []) ++ call' n (a-1) b max_a\n</code></pre>\n\n<p>If I write:</p>\n\n<pre><code>call n = call' n max max max\n        where max = (ceiling.sqrt.fromIntegral) n\n</code></pre>\n\n<p>I get the following results:</p>\n\n<pre><code>call 24\n-- []\ncall 72\n-- [(3,2)]\ncall 256\n-- [(2,4),(16,1)]\ncall 4096\n-- [(1,16),(8,4),(64,1)]\ncall 46656\n-- [(1,36),(8,9),(27,4),(216,1)]\n</code></pre>\n\n<p>If you only want the count, use this:</p>\n\n<pre><code>call' _ 0 0 _ = 0\ncall' n 0 b max_a = call' n max_a (b-1) max_a\ncall' n a b max_a = (if n==a*a*b*b*b then 1 else 0) + call' n (a-1) b max_a\n</code></pre>\n\n<p>For the record, you can do this with list comprehensions:</p>\n\n<pre><code>Prelude&gt; couples a b = [(i,j)| i&lt;-[0..a], j&lt;-[0..b]]\nPrelude&gt; couples 3 2\n[(0,0),(0,1),(0,2),(1,0),(1,1),(1,2),(2,0),(2,1),(2,2),(3,0),(3,1),(3,2)]\n</code></pre>\n\n<p>And:</p>\n\n<pre><code>Prelude&gt; call n = [(a,b)| let max = (ceiling.sqrt.fromIntegral) n, a&lt;-[0..max], b&lt;-[0..max], n==a*a*b*b*b]\nPrelude&gt; call 24\n[]\nPrelude&gt; call 72\n[(3,2)]\nPrelude&gt; call 256\n[(2,4),(16,1)]\nPrelude&gt; call 4096\n[(1,16),(8,4),(64,1)]\nPrelude&gt; call 46656\n[(1,36),(8,9),(27,4),(216,1)]\n</code></pre>\n"}], "owner": {"reputation": 109, "user_id": 11013685, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/773f173a3f7dc76afcb72fe015821332?s=128&d=identicon&r=PG&f=1", "display_name": "KevinWendellCrumb", "link": "https://stackoverflow.com/users/11013685/kevinwendellcrumb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 123, "favorite_count": 0, "accepted_answer_id": 55299453, "answer_count": 1, "score": -1, "last_activity_date": 1553805032, "creation_date": 1552778418, "last_edit_date": 1552783630, "question_id": 55202475, "link": "https://stackoverflow.com/questions/55202475/the-number-of-the-product-n-a2-a3-using-recursion-only-in-haskell", "title": "The number of the product n=(a^2) * (a^3) using recursion only in haskell", "body": "<p>In Haskell, I want to find how many pairs a,b there are for a given number n, given <code>n = (a^2) * (a^3)</code>. I must give the numbers and it should return the pairs. For example:</p>\n\n<pre><code>Main&gt; count 24\n0\nMain&gt; count 72\n1\nMain&gt; count 256\n2\nMain&gt; count 4096\n3\nMain&gt; count 46656\n4\n</code></pre>\n\n<p>So far I have only done a program that for a number n, finds the sum of all possible combinations for <code>n = (a^2) * (a^3)</code>. For example, for <code>n=2</code>, <code>(1^2+1^3)+(1^2+2^3)+(2^2+2^3)+(2^2+1^3)</code>. Any suggestions? I am required to implement this program without lists.</p>\n\n<pre><code>sumF :: (Int-&gt;Int)-&gt;Int-&gt;Int\nsumF f 0 = 0\nsumF f n = sumF f (n-1) + f n\n\n\n\nsumF1n1n :: (Int-&gt;Int-&gt;Int)-&gt;Int-&gt;Int\nsumF1n1n f 0 = 0\nsumF1n1n f n = sumF1n1n f (n-1)\n    +sumF (\\i -&gt; f i n) (n-1)\n    +sumF (\\j -&gt; f n j) (n-1)\n    +f n n\n\nfunc :: Int-&gt;Int-&gt;Int\nfunc 0 0 = 0\nfunc a b = res\n    where\n    res = (a^2*b^3)\n\ncall :: Int-&gt;Int\ncall n = sumF1n1n func n\n</code></pre>\n"}, {"tags": ["haskell", "dependencies", "cabal", "haskell-stack"], "comments": [{"owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 1, "creation_date": 1552792264, "post_id": 55201279, "comment_id": 97143908, "body": "I don&#39;t think <code>lens</code> has dependency of <code>cabal</code>. Why do you think so ?"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "reply_to_user": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "edited": false, "score": 1, "creation_date": 1552852718, "post_id": 55201279, "comment_id": 97158516, "body": "@Sibi I assume because lens has a custom setup, see the .cabal&#39;s <code>custom-setup</code> stanza."}], "answers": [{"tags": [], "owner": {"reputation": 30377, "user_id": 369198, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/71596bb1ca3ba3aa4400c3f407baec9f?s=128&d=identicon&r=PG", "display_name": "Michael Snoyman", "link": "https://stackoverflow.com/users/369198/michael-snoyman"}, "is_accepted": true, "score": 4, "last_activity_date": 1552799602, "creation_date": 1552799602, "answer_id": 55204058, "question_id": 55201279, "link": "https://stackoverflow.com/questions/55201279/stack-insists-on-building-cabal-package/55204058#55204058", "title": "Stack insists on building Cabal package", "body": "<p>My guess is that one of your dependencies using a custom setup stanza, where Stack needs to build the <code>Setup.hs</code> file against the <code>Cabal</code> library, thus the implicit dependency. We have a bit of a discussion going already for Stackage as to whether we should provide up to date versions of the Cabal library as we do today\u2014and risk forcing people to build a heavy dependency\u2014versus sticking to the version of Cabal that ships with GHC.</p>\n\n<p>Anyway, you can work around this with a slightly convoluted approach where you create a custom snapshot that drops the Cabal library. It would look something like this:</p>\n\n<pre><code># stack.yaml: point to the custom snapshot\nresolver: snapshot.yaml\n\n# snapshot.yaml: use the original snapshot and add a drop-packages\nresolver: nightly-2019-03-17\nname: drop-cabal\ndrop-packages:\n- Cabal\n</code></pre>\n"}], "owner": {"reputation": 632, "user_id": 2341449, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15e3f14d66ce1f2dca5ca0a02aea25b2?s=128&d=identicon&r=PG", "display_name": "1000000000", "link": "https://stackoverflow.com/users/2341449/1000000000"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 0, "accepted_answer_id": 55204058, "answer_count": 1, "score": 4, "last_activity_date": 1552799602, "creation_date": 1552768681, "question_id": 55201279, "link": "https://stackoverflow.com/questions/55201279/stack-insists-on-building-cabal-package", "title": "Stack insists on building Cabal package", "body": "<p>I am working on a Haskell project using Stack.\nRecently, we started using the <a href=\"https://hackage.haskell.org/package/lens\" rel=\"nofollow noreferrer\">lens</a> package which requires the Cabal package as a dependency, but we switched to <a href=\"https://hackage.haskell.org/package/lens-simple\" rel=\"nofollow noreferrer\">lens-simple</a> because building the Cabal package was too resource intensive for some older machines that we tested building the project on.</p>\n\n<p>However, despite the fact that neither lens-simple nor any of our other packages have a dependency on the Cabal package, Stack continues to try and build it.</p>\n\n<p>Is there anyway to get Stack to stop this? It makes the build process very long on most machines and impossible on weaker machines.</p>\n\n<p>A list of the project's dependencies:</p>\n\n<pre><code>HUnit 1.6.0.0\nQuickCheck 2.12.6.1\nansi-terminal 0.8.2\narray 0.5.3.0\nbase 4.12.0.0\nbinary 0.8.6.0\nbytestring 0.10.8.2\ncall-stack 0.1.0\nclock 0.7.2\ncolour 2.3.4\ncontainers 0.6.0.1\ndeepseq 1.4.4.0\ndirectory 1.3.3.0\nerf 2.0.0.0\nfilepath 1.4.2.1\nghc-boot-th 8.6.3\nghc-prim 0.5.3\nhspec 2.6.1\nhspec-core 2.6.1\nhspec-discover 2.6.1\nhspec-expectations 0.8.2\ninteger-gmp 1.0.2.0\nlens-family 1.2.3\nlens-family-core 1.2.3\nlens-family-th 0.5.0.2\nlens-simple 0.1.0.9\nmtl 2.2.2\nncurses 0.2.16\nnetflak 0.1.0.0\npretty 1.1.3.6\nprimitive 0.6.4.0\nquickcheck-io 0.2.0\nrandom 1.1\nrts 1.0\nsetenv 0.1.1.3\nstm 2.5.0.0\ntemplate-haskell 2.14.0.0\ntext 1.2.3.1\ntf-random 0.5\ntime 1.8.0.2\ntransformers 0.5.5.0\nunbounded-delays 0.1.1.0\nunix 2.7.2.2\n</code></pre>\n"}, {"tags": ["haskell", "aeson"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 1, "creation_date": 1552750624, "post_id": 55198455, "comment_id": 97134350, "body": "<code>arg1 &lt;- pure $ ...</code> can be written as <code>let arg1 = ...</code>."}], "answers": [{"comments": [{"owner": {"reputation": 5335, "user_id": 333763, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/0370dd5155ccb01b88ffee25f2e0f765?s=128&d=identicon&r=PG&f=1", "display_name": "marcin_koss", "link": "https://stackoverflow.com/users/333763/marcin-koss"}, "edited": false, "score": 0, "creation_date": 1552753512, "post_id": 55198559, "comment_id": 97135280, "body": "Thanks for the help. Why is it so challenging to do these kind of conversions in Haskell?... I tried what you suggested, now I&#39;m getting this error <code>Couldn&#39;t match expected type \u2018Data.ByteString.Lazy.Internal.ByteString\u2019                   with actual type \u2018Data.ByteString.Internal.ByteString\u2019</code>"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1552758477, "post_id": 55198559, "comment_id": 97136793, "body": "&quot;Why is it so hard&quot; is in part because you don&#39;t know how and in part because the conversions are provided by libraries instead of built into the language.  If you know how then it becomes easy.  You can <code>pack</code> strings of 8 bit characters into bytestrings.  You can encode them using UTF8 (or other encodings).  Or one of many other solutions."}], "tags": [], "owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "is_accepted": true, "score": 2, "last_activity_date": 1552751453, "last_edit_date": 1552751453, "creation_date": 1552750945, "answer_id": 55198559, "question_id": 55198455, "link": "https://stackoverflow.com/questions/55198455/problem-decoding-json-from-input-args-with-aeson/55198559#55198559", "title": "Problem decoding json from input args with Aeson", "body": "<p>The problem is that <code>getArgs</code> returns a <code>[String]</code>, not a <code>[ByteString]</code>. <code>decode</code> really wants a <code>ByteString</code> as input.</p>\n\n<p><code>OverloadedStrings</code> doesn't help with that; it only affects string literals in your code, not external inputs. That's why the version with the hardcoded argument (<code>let arg1 = \"[{\\\"pName\\\": \\\"James\\\", \\\"pAge\\\": 30}]\"</code>) works: <code>arg1</code> automatically becomes a <code>ByteString</code> to make <code>decode arg1</code> work, but <code>getArgs</code> has an incompatible type.</p>\n\n<p>One possible fix would be to encode the command line strings to bytes somehow, but there seems to be <a href=\"https://hackage.haskell.org/package/unix-2.7.2.2/docs/System-Posix-Env-ByteString.html#v:getArgs\" rel=\"nofollow noreferrer\">an easier alternative</a>:</p>\n\n<pre><code>import System.Posix.Env.ByteString (getArgs)\n</code></pre>\n\n<p>which gives you a</p>\n\n<pre><code>getArgs :: IO [ByteString]\n</code></pre>\n\n<p>(I haven't actually tested this code; you may also have to use <code>decodeStrict</code> instead of <code>decode</code>.)</p>\n"}], "owner": {"reputation": 5335, "user_id": 333763, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/0370dd5155ccb01b88ffee25f2e0f765?s=128&d=identicon&r=PG&f=1", "display_name": "marcin_koss", "link": "https://stackoverflow.com/users/333763/marcin-koss"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82, "favorite_count": 0, "accepted_answer_id": 55198559, "answer_count": 1, "score": 0, "last_activity_date": 1552751453, "creation_date": 1552750248, "question_id": 55198455, "link": "https://stackoverflow.com/questions/55198455/problem-decoding-json-from-input-args-with-aeson", "title": "Problem decoding json from input args with Aeson", "body": "<p>I'm trying to write a Haskell program that expects Json string provided as input. Expected Json is a list of <code>Person</code> objects. I want to handle a case when user did not provide input by defaulting to Json of empty list. \nIt seems like I'm running into type conversion issue between ByteString and String. I do have <code>OverloadedStrings</code> turned on but it doesn't seem to help here. Here's the simplified code.</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\nimport GHC.Generics\nimport System.Environment\nimport Data.Aeson\nimport Data.Maybe (fromMaybe, listToMaybe)\nimport Data.Text (Text)\n\ndata Person = Person { pName :: Text, pAge :: Int } deriving (Show, \nGeneric)\ninstance ToJSON Person\ninstance FromJSON Person\n\nmain :: IO (Maybe [Person])\nmain = do\n  args &lt;- getArgs\n  arg1 &lt;- pure $ (fromMaybe \"[]\" (listToMaybe args))\n  -- let arg1 = \"[{\\\"pName\\\": \\\"James\\\", \\\"pAge\\\": 30}]\"\n  return $ decode arg1 :: IO (Maybe [Person])\n</code></pre>\n\n<p>Error I'm getting is:</p>\n\n<pre><code>\u2022 Couldn't match type \u2018[Char]\u2019\n                 with \u2018Data.ByteString.Lazy.Internal.ByteString\u2019\n  Expected type: Data.ByteString.Lazy.Internal.ByteString\n    Actual type: String\n\u2022 In the first argument of \u2018decode\u2019, namely \u2018arg1\u2019\n  In the second argument of \u2018($)\u2019, namely \u2018decode arg1\u2019\n  In a stmt of a 'do' block:\n      return $ decode arg1 :: IO (Maybe [Person])\n</code></pre>\n\n<p>If I uncomment <code>let arg1</code> to simulate what arg1 should be, then code compiles.</p>\n"}, {"tags": ["haskell", "random", "monads", "lazy-evaluation"], "comments": [{"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 2, "creation_date": 1552745529, "post_id": 55197260, "comment_id": 97132658, "body": "As you may know what you&#39;re trying to do is usually called a &quot;random walk&quot;"}, {"owner": {"reputation": 769, "user_id": 6155692, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/0e4ef26e040c1b1fbc5f10777e5b0649?s=128&d=identicon&r=PG&f=1", "display_name": "Zac", "link": "https://stackoverflow.com/users/6155692/zac"}, "reply_to_user": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1552745799, "post_id": 55197260, "comment_id": 97132737, "body": "Ah, I knew there was a term for it - just couldn&#39;t remember the name!"}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "edited": false, "score": 2, "creation_date": 1552780651, "post_id": 55197260, "comment_id": 97142321, "body": "This remark reflects a misunderstanding: &quot;This is the reason I decided to use <code>iterate&#39;</code> instead of <code>iterate</code>, which says it reduces each iteration to WHNF before continuing, but even still it doesn&#39;t work.&quot; Strictness vs laziness doesn&#39;t change the result unless one option fails to terminate. If you&#39;re getting an <i>incorrect</i> result, you need to look at changing your algorithm, not adding strictness. Worrying about strictness in Haskell is mostly a performance concern."}], "answers": [{"tags": [], "owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "is_accepted": true, "score": 8, "last_activity_date": 1552743695, "creation_date": 1552743695, "answer_id": 55197473, "question_id": 55197260, "link": "https://stackoverflow.com/questions/55197260/random-list-where-each-element-differs-by-at-most-1-from-the-previous-element/55197473#55197473", "title": "Random list where each element differs by at most 1 from the previous element", "body": "<p>You don't need a strict version of the <code>&gt;&gt;=</code>. You need a monadic variant for <code>iterate</code>. After all, you already identified your problem, you're building an infinite number of <em>computations</em>:</p>\n\n<pre><code>[ return x , return x &gt;&gt;= step, return x &gt;&gt;= step &gt;&gt;= step, ... ]\n</code></pre>\n\n<p>You would need a monadic variant of <code>iterate</code>:</p>\n\n<pre><code>-- This function does not work, but shows the principle we would\n-- want from such a function.\niterateM :: Monad m =&gt; (a -&gt; m a) -&gt; a -&gt; m [a]\niterateM f x = do\n     y  &lt;- f x\n     ys &lt;- iterateM f y -- &lt;&lt; this never terminates\n     return (y:ys)\n</code></pre>\n\n<p>However, that variant does not exist*, as it will not terminate, for the same reasons that <code>forM [1..] return</code> does not terminate. We can, however, fix this, if change the algorithm to <em>first</em> generate the differences with <code>replicateM</code> and then <em>sum</em> those differences with <code>scanl</code>:</p>\n\n<pre><code>import Control.Monad (replicateM)\nimport System.Random (randomRIO)\n\nstep :: IO Int\nstep = randomRIO (-1, 1)\n\nsteps :: Int -&gt; Int -&gt; IO [Int]\nsteps n x = scanl (+) x &lt;$&gt; replicateM n step\n</code></pre>\n\n<p>In this case, we have a limited number of <code>step</code>s in <code>IO</code> and use the usual <code>scanl</code> to generate your desired list.</p>\n\n<p><sup>* There are some variants in streaming libraries where the <em>consumer</em> can decide whether a computation can run. <code>iterateM</code> can be implemented there, for example in <code>ConduitM</code>.</sup></p>\n"}], "owner": {"reputation": 769, "user_id": 6155692, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/0e4ef26e040c1b1fbc5f10777e5b0649?s=128&d=identicon&r=PG&f=1", "display_name": "Zac", "link": "https://stackoverflow.com/users/6155692/zac"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 85, "favorite_count": 0, "accepted_answer_id": 55197473, "answer_count": 1, "score": 5, "last_activity_date": 1552743695, "creation_date": 1552742281, "last_edit_date": 1552743644, "question_id": 55197260, "link": "https://stackoverflow.com/questions/55197260/random-list-where-each-element-differs-by-at-most-1-from-the-previous-element", "title": "Random list where each element differs by at most 1 from the previous element", "body": "<p>I'm attempting to write a function which will generate a list, where the first element is specified as an argument to the function, and every element after that has a difference of at most 1 from the previous element. Here's what I have tried:</p>\n\n<pre><code>import Data.List\nimport System.Random\n\nstep :: Int -&gt; IO Int\nstep n = (+n) &lt;$&gt; randomRIO (-1, 1)\n\nsteps :: Int -&gt; Int -&gt; IO [Int]\nsteps n = sequence . take n . iterate' (&gt;&gt;= step) . return\n</code></pre>\n\n<p>(I also tried with the non-strict <code>iterate</code> function, which gave me the same result).</p>\n\n<p>The <code>step</code> function takes an integer and, at random, adds either -1, 0, or 1 to it. The <code>steps</code> function takes an amount of iterations to perform and a starting integer, and applies <code>step</code> the correct amount of times.</p>\n\n<p>The problem is that <code>steps</code> gives me things like <code>[0,1,-1,0,1,1,1,3]</code>, which is wrong. It looks like each element is generated from scratch each time, whereas I want each element to depend on the previous one. This is the reason I decided to use <code>iterate'</code> instead of <code>iterate</code>, which says it reduces each iteration to WHNF before continuing, but even still it doesn't work.</p>\n\n<p>Then I realised that the problem might arise from the fact that it will actually generate a list which looks something like:</p>\n\n<pre><code>[ n,\n  n &gt;&gt;= step,\n  n &gt;&gt;= step &gt;&gt;= step\n  ... ]\n</code></pre>\n\n<p>And then it seems clear why it happens. So my question is, can I prevent this? Can I force Haskell to evaluate each element as it goes along? Is there a strict version of the <code>&gt;&gt;=</code> operator?</p>\n\n<p>(Edit: I thought it might be useful to give an example of the kind of list I'm looking for, instead of just describing one. <code>[0, 1, 2, 1, 2, 1, 0, -1]</code>, for example)</p>\n"}, {"tags": ["haskell", "recursion", "stack", "overflow"], "comments": [{"owner": {"reputation": 362, "user_id": 11176072, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/FndyF.png?s=128&g=1", "display_name": "RmbRT", "link": "https://stackoverflow.com/users/11176072/rmbrt"}, "edited": false, "score": 2, "creation_date": 1552731276, "post_id": 55195540, "comment_id": 97128768, "body": "What values did you call the function with?"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1552732266, "post_id": 55195540, "comment_id": 97128983, "body": "And what actually happened? Your title says stack overflow, but your actual question mentions an endless loop (presumably a non-responses program). These are different things and have different causes."}, {"owner": {"reputation": 11, "user_id": 11212283, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1d5d79c59a81d5e6b2a0fb8bd5cdc7e6?s=128&d=identicon&r=PG&f=1", "display_name": "AngD", "link": "https://stackoverflow.com/users/11212283/angd"}, "edited": false, "score": 0, "creation_date": 1552732379, "post_id": 55195540, "comment_id": 97129020, "body": "it shows C-stack overflow , so i guess the problem is in recursion"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1552732431, "post_id": 55195540, "comment_id": 97129029, "body": "Incidentally, you don&#39;t need the <code>n `mod` d == 0</code> check. If something&#39;s divisible by <code>d^3</code> then it&#39;s automatically divisible by <code>d</code>"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1552732541, "post_id": 55195540, "comment_id": 97129053, "body": "Stack overflows in Haskell are not caused by recursion itself, as they are in imperative languages. Haskell stack overflows are due to too much laziness."}, {"owner": {"reputation": 11, "user_id": 11212283, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1d5d79c59a81d5e6b2a0fb8bd5cdc7e6?s=128&d=identicon&r=PG&f=1", "display_name": "AngD", "link": "https://stackoverflow.com/users/11212283/angd"}, "edited": false, "score": 0, "creation_date": 1552732663, "post_id": 55195540, "comment_id": 97129087, "body": "Thank you for your comment Robin,but it shows the same error again."}], "answers": [{"tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": false, "score": 10, "last_activity_date": 1552732845, "creation_date": 1552732845, "answer_id": 55195842, "question_id": 55195540, "link": "https://stackoverflow.com/questions/55195540/why-we-have-a-stack-overflow-in-a-recursive-function-in-haskell/55195842#55195842", "title": "Why we have a stack overflow in a recursive function in haskell?", "body": "<p>This is a precedence issue. <code>(f2 n d-1)</code> is parsed as <code>(f2 n d) - 1</code>, which leads to infinite recursion because <code>f2</code> is calling itself with the same arguments. You want <code>f2 n (d - 1)</code> instead.</p>\n"}], "owner": {"reputation": 11, "user_id": 11212283, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1d5d79c59a81d5e6b2a0fb8bd5cdc7e6?s=128&d=identicon&r=PG&f=1", "display_name": "AngD", "link": "https://stackoverflow.com/users/11212283/angd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1552774637, "creation_date": 1552730709, "last_edit_date": 1552774637, "question_id": 55195540, "link": "https://stackoverflow.com/questions/55195540/why-we-have-a-stack-overflow-in-a-recursive-function-in-haskell", "title": "Why we have a stack overflow in a recursive function in haskell?", "body": "<p>where do i have an endless loop?</p>\n\n<pre><code> f2 :: Int-&gt;Int-&gt;Int\n f2 n d \n    | d==2\n       = 0 \n    | n `mod` d ==0  &amp;&amp; n`mod` d^3==0\n       = 1 + (f2 n d-1)\n    | otherwise\n       = 0 + (f2 n d-1)\n</code></pre>\n"}, {"tags": ["haskell", "typeclass", "type-level-computation", "clash"], "answers": [{"comments": [{"owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 0, "creation_date": 1552713176, "post_id": 55193656, "comment_id": 97125207, "body": "Unfortunately, the definition of <code>Bundle</code> comes from the CLaSH prelude itself, so I can&#39;t (easily) change that."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": false, "score": 2, "last_activity_date": 1552712998, "creation_date": 1552712998, "answer_id": 55193656, "question_id": 55193324, "link": "https://stackoverflow.com/questions/55193324/using-a-quantified-type-equality-constraint-from-the-instance-constraints/55193656#55193656", "title": "Using a quantified type equality constraint from the instance constraints", "body": "<p>The equality encodes the fact that in both cases <code>'[]</code> and <code>t ': ts</code>, the <code>Unbundled</code> family is defined as a <code>ProductF</code>. A simpler way is to not pattern-match on the list before producing that <code>ProductF</code>. This involves splitting out the <code>Unbundled</code> family of the class:</p>\n\n<pre><code>type family Unbundled dom a = res | res -&gt; dom a\nclass Bundle a where\n    bundle :: Unbundled dom a -&gt; Signal dom a\n    unbundle :: Signal dom a -&gt; Unbundled dom a\n</code></pre>\n\n<p>So you can use a single type instance for both class instances:</p>\n\n<pre><code>type instance Unbundled dom (Product ts) = ProductF (Signal dom) ts\ninstance Bundle (Product '[]) where\n    bundle NilP = pure NilP\n    unbundle _ = NilP\n\ninstance (Bundle (Product ts), forall dom. Unbundled dom (Product ts) ~ ProductF (Signal dom) ts) =&gt; Bundle (Product (t : ts)) where\n    bundle (ConsP x xs) = (::&gt;) &lt;$&gt; x &lt;*&gt; bundle xs\n    unbundle xs = ConsP (headP &lt;$&gt; xs) (unbundle $ tailP &lt;$&gt; xs)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 0, "creation_date": 1552739183, "post_id": 55194318, "comment_id": 97130793, "body": "I thought that because the constructors of <code>ProductF</code> are already in a one-to-one correspondence with the constructors of its index, it can be effectively &quot;its own singleton&quot;.  But of course now I see that the problem is that from a <code>Signal dom (Product ts)</code> we can&#39;t make a <code>Product ts</code>, but we can make an <code>SLength ts</code>."}, {"owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 0, "creation_date": 1552739203, "post_id": 55194318, "comment_id": 97130803, "body": "Note that your implementation of <code>bundle</code> doesn&#39;t typecheck; it needs to be written in the same style as <code>unbundle</code>, i.e. by recursing over an <code>SLength</code>."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 0, "creation_date": 1552788146, "post_id": 55194318, "comment_id": 97143363, "body": "@Cactus Well, <code>bundle</code> does need to be written like <code>unbundle</code>, but not the way you were thinking. Also, no, the <code>SLength</code> is not being made from the <code>Signal dom (Product ts)</code>. It&#39;s given by the superclass."}, {"owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 0, "creation_date": 1552788481, "post_id": 55194318, "comment_id": 97143422, "body": "well it&#39;s made from just the type of the <code>Signal dom (Product ts)</code>, which is what I meant."}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": true, "score": 2, "last_activity_date": 1552787907, "last_edit_date": 1552787907, "creation_date": 1552720024, "answer_id": 55194318, "question_id": 55193324, "link": "https://stackoverflow.com/questions/55193324/using-a-quantified-type-equality-constraint-from-the-instance-constraints/55194318#55194318", "title": "Using a quantified type equality constraint from the instance constraints", "body": "<p>Well, the principled solution would be singletons:</p>\n\n<pre><code>-- | Reifies the length of a list\ndata SLength :: [a] -&gt; Type where\n   SLenNil :: SLength '[]\n   SLenCons :: SLength xs -&gt; SLength (x : xs)\n\n-- | Implicitly provides @kLength@: the length of the list @xs@\nclass KLength xs where kLength :: SLength xs\ninstance KLength '[] where kLength = SLenNil\ninstance KLength xs =&gt; KLength (x : xs) where kLength = SLenCons kLength\n</code></pre>\n\n<p>The core idea (one of them, at least) behind singletons is that the implicit singleton class <code>KLength</code> can factor out the need for ad-hoc classes like yours. The \"classiness\" goes into <code>KLength</code>, where it can be reused; the \"caseiness\" goes into a literal <code>case</code>, and <code>SLength</code> is the data type gluing them together.</p>\n\n<pre><code>instance KLength ts =&gt; Bundle (Product ts) where\n    type Unbundled dom (Product ts) = ProductF (Signal dom) ts\n\n    bundle = impl\n        -- the KLength xs constraint is unnecessary for bundle\n        -- but the recursive call would still need it, and we wouldn't have it\n        -- there's a rather unholy unsafeCoerce trick you can pull\n        -- but it's not necessary yet\n        where impl :: forall dom us. ProductF (Signal dom) us -&gt; Signal dom (Product us)\n              impl NilP = pure NilP\n              impl (ConsP x xs) = (::&gt;) &lt;$&gt; x &lt;*&gt; impl xs\n\n    unbundle = impl kLength\n        -- impl explicitly manages the length of the list\n        -- unbundle just fetches the length of ts from the givens and passes it on\n        where impl :: forall dom us. SLength us -&gt; Signal dom (Product us) -&gt; ProductF (Signal dom) us\n              impl SLenNil _ = NilP\n              impl (SLenCons n) xs = ConsP (headP &lt;$&gt; xs) (impl n $ tailP &lt;$&gt; xs)\n</code></pre>\n"}], "owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 92, "favorite_count": 1, "accepted_answer_id": 55194318, "answer_count": 2, "score": 3, "last_activity_date": 1552787907, "creation_date": 1552708892, "question_id": 55193324, "link": "https://stackoverflow.com/questions/55193324/using-a-quantified-type-equality-constraint-from-the-instance-constraints", "title": "Using a quantified type equality constraint from the instance constraints", "body": "<p>To set the scene, here are a bunch of language extensions we'll use, and some simplified definitions from CLaSH:</p>\n\n<pre><code>{-# LANGUAGE GADTs, StandaloneDeriving #-}\n{-# LANGUAGE TypeOperators, DataKinds, PolyKinds #-}\n{-# LANGUAGE TypeFamilyDependencies, FlexibleContexts, FlexibleInstances #-}\n{-# LANGUAGE PatternSynonyms #-}\n{-# LANGUAGE QuantifiedConstraints #-}\n\ndata Signal dom a\ninstance Functor (Signal dom) where\ninstance Applicative (Signal dom) where\n\nclass Bundle a where\n    type Unbundled dom a = res | res -&gt; dom a\n\n    bundle :: Unbundled dom a -&gt; Signal dom a\n    unbundle :: Signal dom a -&gt; Unbundled dom a\n</code></pre>\n\n<p>I would like to make <code>Bundle</code> instances for an n-ary product type. The type itself is defined as follows:</p>\n\n<pre><code>import Control.Monad.Identity\n\ndata ProductF (f :: * -&gt; *) (ts :: [*]) where\n    NilP :: ProductF f '[]\n    ConsP :: f a -&gt; ProductF f ts -&gt; ProductF f (a : ts)\nderiving instance (Show (f t), Show (ProductF f ts)) =&gt; Show (ProductF f (t : ts))\n\nheadPF :: ProductF f (t : ts) -&gt; f t\nheadPF (ConsP x xs) = x\n\ntailP :: ProductF f (t : ts) -&gt; ProductF f ts\ntailP (ConsP x xs) = xs\n\n-- Utilities for the simple case    \ntype Product = ProductF Identity\n\ninfixr 5 ::&gt;    \npattern (::&gt;) :: t -&gt; Product ts -&gt; Product (t : ts)\npattern x ::&gt; xs = ConsP (Identity x) xs\n\nheadP :: Product (t : ts) -&gt; t\nheadP (x ::&gt; xs) = x\n</code></pre>\n\n<p>What I would like to write is a <code>Bundle</code> instance that simply replaces <code>Identity</code> with <code>Signal dom</code>. Unfortunately, we can't do that in one go:</p>\n\n<pre><code>instance Bundle (Product ts) where\n    type Unbundled dom (Product ts) = ProductF (Signal dom) ts\n\n    bundle NilP = pure NilP\n    bundle (ConsP x xs) = (::&gt;) &lt;$&gt; x &lt;*&gt; bundle xs\n\n    unbundle = _ -- Can't implement this, since it would require splitting on ts\n</code></pre>\n\n<p>Here, <code>unbundle</code> needs to do something different for <code>ts ~ []</code> and for <code>ts ~ t : ts'</code>. OK, so let's try writing it in two instances:</p>\n\n<pre><code>instance Bundle (Product '[]) where\n    type Unbundled dom (Product '[]) = ProductF (Signal dom) '[]\n\n    bundle NilP = pure NilP\n    unbundle _ = NilP\n\ninstance (Bundle (Product ts), forall dom. Unbundled dom (Product ts) ~ ProductF (Signal dom) ts) =&gt; Bundle (Product (t : ts)) where\n    type Unbundled dom (Product (t : ts)) = ProductF (Signal dom) (t : ts)\n\n    bundle (ConsP x xs) = (::&gt;) &lt;$&gt; x &lt;*&gt; bundle xs\n    unbundle xs = ConsP (headP &lt;$&gt; xs) (unbundle $ tailP &lt;$&gt; xs)\n</code></pre>\n\n<p>And so it is in that second instance that the problem arises. Even though we have a (quantified) type equality <code>forall dom. Unbundled dom (Product ts) ~ ProductF (Signal dom) ts</code> in the instance constraints, GHC 8.6.3 doesn't use it during typechecking:</p>\n\n<p>For <code>bundle</code>:</p>\n\n<blockquote>\n<pre><code>\u2022 Couldn't match type \u2018Unbundled dom (Product ts)\u2019\n                 with \u2018ProductF (Signal dom) ts\u2019\n  Expected type: Unbundled dom (Product ts)\n    Actual type: ProductF (Signal dom) ts1\n\u2022 In the first argument of \u2018bundle\u2019, namely \u2018xs\u2019\n  In the second argument of \u2018(&lt;*&gt;)\u2019, namely \u2018bundle xs\u2019\n  In the expression: (::&gt;) &lt;$&gt; x &lt;*&gt; bundle xs\n</code></pre>\n</blockquote>\n\n<p>For <code>unbundle</code>:</p>\n\n<blockquote>\n<pre><code>\u2022 Couldn't match expected type \u2018ProductF (Signal dom) ts\u2019\n              with actual type \u2018Unbundled dom (ProductF Identity ts)\u2019\n\u2022 In the second argument of \u2018ConsP\u2019, namely\n    \u2018(unbundle $ tailP &lt;$&gt; xs)\u2019\n  In the expression: ConsP (headP &lt;$&gt; xs) (unbundle $ tailP &lt;$&gt; xs)\n  In an equation for \u2018unbundle\u2019:\n      unbundle xs = ConsP (headP &lt;$&gt; xs) (unbundle $ tailP &lt;$&gt; xs)\n</code></pre>\n</blockquote>\n\n<h1>A possible workaround</h1>\n\n<p>Of course, we can just take the long road instead: make our own class specifically for <code>Product</code> and delegate all the real work to that. I am presenting that solution here, but I am specifically interested in something that is less verbose and ad-hoc than this.</p>\n\n<pre><code>class IsProduct (ts :: [*]) where\n    type UnbundledProd dom ts = (ts' :: [*]) | ts' -&gt; dom ts\n\n    bundleProd :: Product (UnbundledProd dom ts) -&gt; Signal dom (Product ts)\n    unbundleProd :: Signal dom (Product ts) -&gt; Product (UnbundledProd dom ts)\n\ninstance (IsProduct ts) =&gt; Bundle (Product ts) where\n    type Unbundled dom (Product ts) = Product (UnbundledProd dom ts)\n\n    bundle = bundleProd\n    unbundle = unbundleProd\n</code></pre>\n\n<p>and then <code>IsProduct</code> has the advantage that it can actually be implemented:</p>\n\n<pre><code>type (:::) (name :: k) (a :: k1) = (a :: k1)\n\ninstance IsProduct '[] where\n    type UnbundledProd dom '[] = dom ::: '[]\n\n    bundleProd NilP = pure NilP\n    unbundleProd _ = NilP\n\ninstance (IsProduct ts) =&gt; IsProduct (t : ts) where\n    type UnbundledProd dom (t : ts) = Signal dom t : UnbundledProd dom ts\n\n    bundleProd (x ::&gt; xs) = (::&gt;) &lt;$&gt; x &lt;*&gt; bundleProd xs\n    unbundleProd xs = (headP &lt;$&gt; xs) ::&gt; (unbundleProd $ tailP &lt;$&gt; xs)\n</code></pre>\n"}, {"tags": ["haskell", "ghc"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1552701628, "post_id": 55192668, "comment_id": 97123729, "body": "Can you use <code>StableName</code> and <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/System-Mem-StableName.html#v:eqStableName\" rel=\"nofollow noreferrer\"><code>eqStableName</code></a> instead?"}, {"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 1, "creation_date": 1552704729, "post_id": 55192668, "comment_id": 97124110, "body": "Should be safe... In fact, I&#39;m a bit surprised there isn&#39;t an <code>unsafeCoerceMutVar# :: MutVar# s a -&gt; MutVar# s b</code>..."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1552729735, "post_id": 55192668, "comment_id": 97128375, "body": "I think it would be possible to admit as a primitive <code>sameRef :: IORef a -&gt; IORef b -&gt; Maybe (a :~: b)</code> since if the references are equal, then the types must be the same. I&#39;d expect unsafe coercions could actually be safe in this case, but I can&#39;t back this up."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1552788962, "post_id": 55192668, "comment_id": 97143493, "body": "@chi I don&#39;t think so. Remember the classic <code>polyRef :: IORef [a]; polyRef = unsafePerformIO $ newIORef []; unsafeCoerce :: a -&gt; IO b; unsafeCoerce x = writeIORef polyRef [x] &gt;&gt; head &lt;$&gt; readIORef polyRef</code>. Granted, I feel this behavior is a mistake: <code>polyRef</code> is a <i>function</i>; the two occurrences in <code>unsafeCoerce</code> should be different <code>IORef</code>s, and your <code>sameRef</code> should be fine. However, I&#39;m not in charge, so, in the current situation, your <code>sameRef</code> is probably not the best idea. The <code>Bool</code> version seems OK, however."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1552816267, "post_id": 55192668, "comment_id": 97147787, "body": "@HTNW Yes, polymorphic references already break type safety, using <code>unsafePerformIO</code>. I can&#39;t see how my <code>sameRef</code> would make things worse in such scenario. Arguably, using polymorphic references you can <i>define</i> my <code>sameRef</code> without taking it as a primitive, by coercing <code>IORef b</code> to <code>IORef a</code>, to that it can be compared with the other <code>IORef a</code>. Unless there&#39;s some issue with safe code, I&#39;d still prefer <code>safeRef</code> to return <code>Maybe (a :~: b)</code>."}, {"owner": {"reputation": 43, "user_id": 11210421, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e019280abb75dd218014993b6448990b?s=128&d=identicon&r=PG&f=1", "display_name": "Ben", "link": "https://stackoverflow.com/users/11210421/ben"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1552925039, "post_id": 55192668, "comment_id": 97185674, "body": "@DanielWagner: Thanks, I was not aware of <code>StableName</code>. However, I am indeed using mutable data, so adding an additional layer of indirection with <code>StableName</code> would be less  than ideal."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1552929465, "post_id": 55192668, "comment_id": 97188170, "body": "@HTNW Do you have an example where <code>sameRef</code> would be bad even without <code>unsafePerformIO</code>? It feels a bit weird to claim that feature X breaks things in the presence of <code>unsafePerformIO</code>, since it&#39;s almost never actually feature X&#39;s fault."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1552948132, "post_id": 55192668, "comment_id": 97196258, "body": "@chi, in this case, plain old safe <code>coerce</code> is enough to break everything. <code>oops :: Coercible a b =&gt; IORef a -&gt; a :~: b; oops ref = fromJust (sameRef ref (coerce ref))</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1552949752, "post_id": 55192668, "comment_id": 97196782, "body": "@dfeuer Ah, that&#39;s an excellent point, thanks! I guess it should be something like <code>sameRef :: ... -&gt; Maybe (Dict (Coercible a b))</code> then. (Or changing the role of <code>IORef</code>&#39;s argument, but that&#39;s probably overkill). Still, my point is that I&#39;d rather get a <code>Maybe SomeProof</code> than a boring boolean, if possible."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1552949831, "post_id": 55192668, "comment_id": 97196806, "body": "@chi, I <i>think</i> that would be safe. You&#39;d surely want <code>Coercion a b</code> rather than <code>Dict (Coercible a b)</code>, but that&#39;s a minor quibble."}], "answers": [{"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1552950562, "post_id": 55231127, "comment_id": 97197015, "body": "The last part about the low-level optimization is a bit scary, but OTOH it&#39;s good to know that the runtime can allow values of different type to share their representation."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1553170227, "post_id": 55231127, "comment_id": 97289950, "body": "I suggested <code>StableName</code> because the <code>StableName</code> API <i>already</i> offers heterogeneous equality via <code>eqStableName :: StableName a -&gt; StableName b -&gt; Bool</code>. So getting a <code>Bool</code> out (rather than your proposed coercion) can&#39;t be <i>that</i> dangerous."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 4, "last_activity_date": 1552951051, "last_edit_date": 1552951051, "creation_date": 1552948938, "answer_id": 55231127, "question_id": 55192668, "link": "https://stackoverflow.com/questions/55192668/heterogeneous-reference-equality-in-haskell/55231127#55231127", "title": "Heterogeneous reference equality in Haskell", "body": "<p>It is perfectly safe to write</p>\n\n<pre><code>sameReference :: IORef a -&gt; IORef b -&gt; Bool\nsameReference = unsafeCoerce ((==) :: IORef a -&gt; IORef a -&gt; Bool)\n</code></pre>\n\n<p>It would have been entirely reasonable for the primop to have been given type</p>\n\n<pre><code>sameMutVar# :: MutVar# s a -&gt; MutVar# s b -&gt; Int#\n</code></pre>\n\n<p>but the designers apparently felt that using that function on references of different types was more likely to be a mistake than otherwise.</p>\n\n<p>What you <em>can't</em> do safely is conclude that <code>sameReference (r1 :: IORef a) (r2 :: IORef b) = True</code> implies that <code>a</code> and <code>b</code> are the same. Suppose you had</p>\n\n<pre><code>sameRefSameType :: IORef a -&gt; IORef b -&gt; Maybe (a :~: b)\n</code></pre>\n\n<p>Then you could easily write</p>\n\n<pre><code>oops :: Coercible a b =&gt; IORef a -&gt; a :~: b\noops r = fromJust (sameRefSameType r (coerce r))\n</code></pre>\n\n<p>producing bogus evidence that any two coercible types are equal. You should be able to figure out how to use a GADT to get from there to <code>mkUC :: IO (a -&gt; b)</code>.</p>\n\n<p>I <em>believe</em> that it would be safe to write</p>\n\n<pre><code>sameRefCoercibleTypes :: IORef a -&gt; IORef b -&gt; Maybe (Coercion a b)\n</code></pre>\n\n<p>Since Daniel Wagner mentioned stable names, I should mention that the situation for those is even worse in this context. I'll need to start with a bit of background. Suppose you write</p>\n\n<pre><code>f :: Either x Int -&gt; Either x Bool\nf (Left x) = Left x\nf (Right _) = Right False\n</code></pre>\n\n<p>In the first case, it would be a shame to allocate a fresh <code>Left</code> constructor just to change the type. So GHC has a low-level optimization (after the core-to-core optimization pipeline) that tries to turn this into (essentially)</p>\n\n<pre><code>f p@(Left x) = unsafeCoerce p\nf (Right _) = Right False\n</code></pre>\n\n<p>That means that you could have <code>m :: Either x a</code> and <code>n :: Either x b</code> where <code>m</code> and <code>n</code> refer to the same heap object despite <code>a</code> and <code>b</code> having completely unrelated types. If you create a stable name for <code>m</code> and a stable name for <code>n</code>, then those stable names will compare equal! If you posit even as much as</p>\n\n<pre><code>sameSNCoercibleTypes\n  :: StableName a\n  -&gt; StableName b\n  -&gt; Maybe (Coercion a b)\n</code></pre>\n\n<p>then you can use <code>m</code> and <code>n</code> to \"prove\" <code>Coercible (Either x a) (Either x b)</code> from which you can convert any <code>a</code> into any <code>b</code>. It's a bit delicate, but since it's possible at all, assuming otherwise is rather unsafe.</p>\n"}], "owner": {"reputation": 43, "user_id": 11210421, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e019280abb75dd218014993b6448990b?s=128&d=identicon&r=PG&f=1", "display_name": "Ben", "link": "https://stackoverflow.com/users/11210421/ben"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 201, "favorite_count": 0, "accepted_answer_id": 55231127, "answer_count": 1, "score": 4, "last_activity_date": 1552951051, "creation_date": 1552700341, "last_edit_date": 1552925237, "question_id": 55192668, "link": "https://stackoverflow.com/questions/55192668/heterogeneous-reference-equality-in-haskell", "title": "Heterogeneous reference equality in Haskell", "body": "<p>In GHC, the equality instance for <code>IORef</code> and <code>STRef</code> are based on the following primitive operation:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>sameMutVar# :: MutVar# s a -&gt; MutVar# s a -&gt; Int#\n</code></pre>\n\n<p>I would like to be able to compute a heterogeneous reference equality,</p>\n\n<pre><code>sameReference :: IORef a -&gt; IORef b -&gt; Bool\n</code></pre>\n\n<p>(or similarly for <code>STRef</code>s with potentially different types). Is it okay to just use <code>unsafeCoerce</code> for the purpose of checking the reference equality? Is there a reason that <code>sameMutVar#</code> is not given a heterogenous type signature?</p>\n\n<p>EDIT: To add some context, I would like to have this hetereogenous pointer equality because I want to use the equality method to remove a particular <code>IORef a</code> from a list of <code>IORef</code>s whose types are existentially quantified over.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 35578, "user_id": 3000206, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/BK1fo.jpg?s=128&g=1", "display_name": "Carcigenicate", "link": "https://stackoverflow.com/users/3000206/carcigenicate"}, "edited": false, "score": 3, "creation_date": 1552694362, "post_id": 55192087, "comment_id": 97122540, "body": "Are you just asking if one record can hold an instance of another record. Yes, there&#39;s no reason you can&#39;t. Did you try using this code?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1552729904, "post_id": 55192087, "comment_id": 97128425, "body": "In Haskell all (mono)types are first-class: a record field can be of any type, including functions, pairs, lists, or records (including the record type we are defining right now). Ditto for function arguments."}], "answers": [{"tags": [], "owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "is_accepted": true, "score": 4, "last_activity_date": 1552699562, "last_edit_date": 1552699562, "creation_date": 1552694821, "answer_id": 55192168, "question_id": 55192087, "link": "https://stackoverflow.com/questions/55192087/storing-a-value-from-one-record-in-another-record/55192168#55192168", "title": "Storing a value from one record in another record", "body": "<p>Yes it will work perfectly, however you have to write it like this</p>\n\n<pre><code>data Person = Person { name :: String, \n                       date_of_birth :: Date,\n                       ssn :: Int\n                     } deriving (Show, Eq, Ord)\n\ndata Date = Date { month :: Int,\n                   day :: Int,\n                   year :: Int\n                 } deriving (Show, Eq, Ord)\n</code></pre>\n\n<p>There was a syntax error in your code, I fixed it. I also added <code>Eq</code> so you can test if two persons are equal. I added <code>Ord</code> so you can put them in data-structures which require the content to be ordable. </p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user11034844"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 66, "favorite_count": 0, "accepted_answer_id": 55192168, "answer_count": 1, "score": -1, "last_activity_date": 1552699562, "creation_date": 1552694221, "question_id": 55192087, "link": "https://stackoverflow.com/questions/55192087/storing-a-value-from-one-record-in-another-record", "title": "Storing a value from one record in another record", "body": "<p>So in my Java program, I have these two class declarations. I want to give the equivalent data type definitions in Haskell (or as close as I can get)</p>\n\n<pre><code>class Person {\nString name;\nDate   dob;\nint    ssn;\n}\n\nclass Date {\nint    month; \nint    day;\nint    year;\n}\n</code></pre>\n\n<p>Can I do something like this? Just use two record, but one record holds the value for another record? This is what I think I can do below : </p>\n\n<pre><code>data Person { name :: String, \n              date_of_birth :: Date,\n              ssn :: Int\n            } deriving (Show)\n\ndata Date { month :: Int,\n             day :: Int,\n             year :: Int\n           } deriving (Show)\n</code></pre>\n\n<p>Could something like this work? If not, what would be your suggestion. Thank you.</p>\n"}, {"tags": ["parsing", "haskell"], "answers": [{"comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 2, "creation_date": 1552698615, "post_id": 55191698, "comment_id": 97123309, "body": "The problem is not <code>between</code>, it&#39;s with <code>munch</code>.  From the documentation: &quot;Always succeeds, exactly once having consumed all the characters Hence NOT the same as <code>many (satisfy p)</code>&quot;. That is, it locally disables backtracking, which prevents the correct parse from being found.  If <code>(many.satisfy)</code> is used in place of <code>munch</code> it should work correctly."}, {"owner": {"reputation": 66318, "user_id": 3510736, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/kVtHP.jpg?s=128&g=1", "display_name": "Ami Tavory", "link": "https://stackoverflow.com/users/3510736/ami-tavory"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1552699282, "post_id": 55191698, "comment_id": 97123404, "body": "@luqui Thanks! If you could write that as an answer, I&#39;d gladly accept it."}], "tags": [], "owner": {"reputation": 66318, "user_id": 3510736, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/kVtHP.jpg?s=128&g=1", "display_name": "Ami Tavory", "link": "https://stackoverflow.com/users/3510736/ami-tavory"}, "is_accepted": false, "score": 1, "last_activity_date": 1552690876, "creation_date": 1552690876, "answer_id": 55191698, "question_id": 55191481, "link": "https://stackoverflow.com/questions/55191481/readps-between-returning-an-empty-result/55191698#55191698", "title": "ReadP&#39;s between returning an empty result", "body": "<p>Looking at <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/src/Text.ParserCombinators.ReadP.html#between\" rel=\"nofollow noreferrer\">the source</a></p>\n\n<pre><code>between open close p = do _ &lt;- open\n                          x &lt;- p\n                          _ &lt;- close\n                          return x\n</code></pre>\n\n<p>it seems apparent that the <code>p</code> parser must not consume the characters needed by the <code>close</code> parser (which, to me, was not very intuitive). </p>\n\n<p>This, for example </p>\n\n<pre><code>readP_to_S (between (char '[') (char ']') (munch (/= ']'))) \"[234]\"\n</code></pre>\n\n<p>gives</p>\n\n<pre><code>[(\"234\",\"\")]\n</code></pre>\n"}], "owner": {"reputation": 66318, "user_id": 3510736, "user_type": "registered", "accept_rate": 78, "profile_image": "https://i.stack.imgur.com/kVtHP.jpg?s=128&g=1", "display_name": "Ami Tavory", "link": "https://stackoverflow.com/users/3510736/ami-tavory"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 60, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1552690876, "creation_date": 1552689165, "question_id": 55191481, "link": "https://stackoverflow.com/questions/55191481/readps-between-returning-an-empty-result", "title": "ReadP&#39;s between returning an empty result", "body": "<p>Consider the following snippet using <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Text-ParserCombinators-ReadP.html\" rel=\"nofollow noreferrer\"><code>ReadP</code></a>:</p>\n\n<pre><code>import Text.ParserCombinators.ReadP\n\nreadP_to_S (between (char '[') (char ']') (munch (/= ','))) \"[234]\"\n</code></pre>\n\n<p>It outputs </p>\n\n<pre><code>[]\n</code></pre>\n\n<p>According to the documentation, </p>\n\n<blockquote>\n  <p>between :: ReadP open -> ReadP close -> ReadP a -> ReadP a Source#</p>\n  \n  <p>between open close p parses open, followed by p and finally close. Only the value of p is returned.</p>\n</blockquote>\n\n<p>Consequently, I'd expect the return value to be</p>\n\n<pre><code>[(\"234\", \"\")]\n</code></pre>\n\n<p>as the first parser matches the opening bracket, the second one the closing bracket, and the last matches everything except a comma. Why is it not doing so?</p>\n"}, {"tags": ["haskell", "functor"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1552688291, "post_id": 55191289, "comment_id": 97121091, "body": "The first part is easy: <code>Baz</code> is a product of two types, so you just need to pattern match on <code>Baz s g</code> (where <code>g :: Qux -&gt; Foo a</code>). What to <i>do</i> with <code>g</code> is the tricky part :)"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1552688404, "post_id": 55191289, "comment_id": 97121125, "body": "As often in Haskell, the way to think about this is just to &quot;follow the types&quot;. You have a function <code>f :: a -&gt; b</code>, a function (which I&#39;ll call <code>g</code>) of type <code>Qux -&gt; Foo a</code>, and you want a function of type <code>Qux -&gt; Foo b</code>. I&#39;m pretty sure there&#39;s only one way to do this with what you&#39;ve got here - and to see it, don&#39;t be afraid to use recursion ;)"}], "answers": [{"comments": [{"owner": {"reputation": 519, "user_id": 7147702, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/02f6a9d34a8dade627371f63ef23d3ea?s=128&d=identicon&r=PG&f=1", "display_name": "aphrid", "link": "https://stackoverflow.com/users/7147702/aphrid"}, "edited": false, "score": 0, "creation_date": 1552692410, "post_id": 55191389, "comment_id": 97122143, "body": "Many thanks! This was what I was having problems with. I forgot that I could use lambdas like that."}], "tags": [], "owner": {"reputation": 1290, "user_id": 5499871, "user_type": "registered", "profile_image": "https://graph.facebook.com/10206799318615183/picture?type=large", "display_name": "Izaak Weiss", "link": "https://stackoverflow.com/users/5499871/izaak-weiss"}, "is_accepted": true, "score": 6, "last_activity_date": 1552688556, "creation_date": 1552688556, "answer_id": 55191389, "question_id": 55191289, "link": "https://stackoverflow.com/questions/55191289/haskell-custom-functor-instance-on-data-type-with-function-constructor/55191389#55191389", "title": "Haskell - Custom functor instance on data type with function constructor", "body": "<p>Let's start by completing the left side of this equation. We can write <code>g</code> to bind your function to a variable.</p>\n\n<p><code>fmap f (Baz s g) = Baz s (???)</code></p>\n\n<p>Then, we need to fill in the question marks with another function, that takes a <code>Qux</code> and returns a <code>Foo b</code>.</p>\n\n<p><code>fmap f (Baz s g) = Baz s (\\q -&gt; ???)</code></p>\n\n<p>We can only do one thing with <code>q</code>, which is apply <code>g</code> to it.</p>\n\n<p><code>fmap f (Baz s g) = Baz s (\\q -&gt; g q)</code></p>\n\n<p>However, this gives us a <code>Foo a</code>, but we need a <code>Foo b</code>! We don't have a function to do that. We do, however, have <code>f</code>, which takes an <code>a</code> and returns a <code>b</code>. If only there were a way to take <code>a -&gt; b</code> and turn it into <code>Foo a -&gt; Foo b</code>... oh wait, there is, it's called <code>fmap</code>!</p>\n\n<p><code>fmap f (Baz s g) = Baz s (\\q -&gt; fmap f (g q))</code></p>\n\n<p>If you want to write the function in point free notation (<a href=\"https://wiki.haskell.org/Pointfree\" rel=\"noreferrer\">https://wiki.haskell.org/Pointfree</a>), you can do this instead.</p>\n\n<p><code>fmap f (Baz s g) = Baz s (fmap f . g)</code></p>\n"}, {"tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": false, "score": 4, "last_activity_date": 1552688660, "creation_date": 1552688660, "answer_id": 55191404, "question_id": 55191289, "link": "https://stackoverflow.com/questions/55191289/haskell-custom-functor-instance-on-data-type-with-function-constructor/55191404#55191404", "title": "Haskell - Custom functor instance on data type with function constructor", "body": "<p>Follow the types:</p>\n\n<pre><code>fmap f (Baz s g) = GOAL\n   -- f    :: a -&gt; b\n   -- s    :: String\n   -- g    :: Qux -&gt; Foo a\n   -- GOAL :: Foo b\n</code></pre>\n\n<p>So we're looking for a <code>Foo b</code> (the GOAL line).  We can make one with either <code>Bar</code> or <code>Baz</code>.  <code>fmap</code> should preserve the structure so it ought to be <code>Baz</code>.  The <code>String</code> argument to <code>Baz</code> probably should not change, it's only the second argument that poses the problem.</p>\n\n<pre><code>fmap f (Baz s g) = Baz s GOAL\n   -- f    :: a -&gt; b\n   -- s    :: String\n   -- g    :: Qux -&gt; Foo a\n   -- GOAL :: Qux -&gt; Foo b\n</code></pre>\n\n<p>Now we have to make a <code>Qux -&gt; Foo b</code>.  If you need to make a function, lambda is the essential tool (there are others, but lambda is the granddaddy).  So make a lambda:</p>\n\n<pre><code>fmap f (Baz s g) = Baz s (\\x -&gt; GOAL)\n   -- f    :: a -&gt; b\n   -- s    :: String\n   -- g    :: Qux -&gt; Foo a\n   -- x    :: Qux          &lt;-- NEW\n   -- GOAL :: Foo b\n</code></pre>\n\n<p>Notice that we now have an <code>x :: Qux</code> to work with.  Using <code>g</code> and <code>x</code> we can make a <code>Foo a</code>, and then using <code>fmap f</code> <em>recursively</em><sup>1</sup> we can make the required <code>Foo b</code>.</p>\n\n<p>Notice how I'm just filling out the expression one tiny step at a time, replacing unknown arguments with goals, then taking a step back to consider what variables I have in scope and what their types are.  Continue doing this until a path to the goal is clear.</p>\n\n<hr>\n\n<p><sup>1</sup> A recursive type will usually have a corresponding recursive <code>fmap</code> definition.  The place the recursion happens in <code>fmap</code> corresponds exactly to the way the type is recursive.</p>\n"}], "owner": {"reputation": 519, "user_id": 7147702, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/02f6a9d34a8dade627371f63ef23d3ea?s=128&d=identicon&r=PG&f=1", "display_name": "aphrid", "link": "https://stackoverflow.com/users/7147702/aphrid"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 371, "favorite_count": 0, "accepted_answer_id": 55191389, "answer_count": 2, "score": 1, "last_activity_date": 1552702382, "creation_date": 1552687934, "last_edit_date": 1552702382, "question_id": 55191289, "link": "https://stackoverflow.com/questions/55191289/haskell-custom-functor-instance-on-data-type-with-function-constructor", "title": "Haskell - Custom functor instance on data type with function constructor", "body": "<p>I am having trouble writing my own instance of functor for a custom data type (that I cannot change). The data types are defined as:</p>\n\n<pre><code>data Foo a = Baz String (Qux -&gt; Foo a) | Bar a\ndata Qux = None | Quux String\n</code></pre>\n\n<p>My problem is with writing a functor for the <code>Foo</code> type. Specifically, I'm not sure how to properly apply my functor function <code>f</code> to the function in the <code>Foo</code>. I was thinking of somehow calling the function in the constructor, but since I don't have any <code>Qux</code>'s available for use, I'm stuck.</p>\n\n<pre><code>instance Functor Foo where\n    fmap f (Bar a) = Bar (f a)\n    fmap f (Baz s ???) = Baz s (???) -- What goes here?\n\n    -- Clearly, something like this doesn't work\n    -- fmap f (Baz s g) = Baz s (f g) \n\n    -- I've also tried something like this, but I'm not sure where to go from there\n    -- fmap f (Baz s (None   -&gt; Bar b)) = Baz s (f b) ???\n    -- fmap f (Baz s (Quux x -&gt; Bar b)) = Baz s ???\n</code></pre>\n"}, {"tags": ["haskell", "haskell-lens", "either"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1552688908, "post_id": 55189779, "comment_id": 97121268, "body": "At a glance, it looks like it should be possible to have something like <a href=\"https://www.stackage.org/haddock/lts-13.8/microlens-0.4.10/Lens-Micro.html#v:ix\" rel=\"nofollow noreferrer\">the <code>ix</code> traversal</a>. You&#39;d lose the error messages, but that might not be such a big cost (as far as I can see, they don&#39;t actually bring extra information about the failure)."}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 1, "creation_date": 1552694522, "post_id": 55189779, "comment_id": 97122578, "body": "Related: <a href=\"https://stackoverflow.com/questions/33972337/lens-prism-with-error-handling/\" title=\"lens prism with error handling\">stackoverflow.com/questions/33972337/&hellip;</a>"}, {"owner": {"reputation": 2588, "user_id": 916142, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/cf88a560a7f987712350b7d629ed2bc7?s=128&d=identicon&r=PG", "display_name": "Jeffrey Benjamin Brown", "link": "https://stackoverflow.com/users/916142/jeffrey-benjamin-brown"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1552713053, "post_id": 55189779, "comment_id": 97125187, "body": "@duplode, that was so worth it! Now I&#39;m first using a function to test whether the path is in bounds, and then using ix. I&#39;m going to leave this question open in the hope that someday someone solves the general problem -- since the data in a Left will in some cases be important -- but in my specific case your solution is perfect."}], "answers": [{"tags": [], "owner": {"reputation": 1835, "user_id": 3907685, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/4a9d7cdfc525e689e6baefb7d2158fb0?s=128&d=identicon&r=PG", "display_name": "Chris Penner", "link": "https://stackoverflow.com/users/3907685/chris-penner"}, "is_accepted": false, "score": 1, "last_activity_date": 1559443349, "creation_date": 1559443349, "answer_id": 56411851, "question_id": 55189779, "link": "https://stackoverflow.com/questions/55189779/can-i-build-something-like-a-lens-when-my-getter-and-setter-return-either/56411851#56411851", "title": "Can I build something like a lens when my getter and setter return `Either`?", "body": "<p>You can indeed do this with lenses! Or more specifically; Traversals :)</p>\n\n<p>First some setup:</p>\n\n<pre><code>{-# LANGUAGE OverloadedLists #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE DeriveFunctor #-}\n{-# LANGUAGE TemplateHaskell #-}\n{-# LANGUAGE RankNTypes #-}\nmodule TreeTraversal where\n\nimport qualified Data.Vector as V\nimport Control.Lens hiding (children)\n\ndata Tree a = Tree { _label :: a\n                   , _children :: V.Vector (Tree a) }\n              deriving (Show, Eq, Ord, Functor)\nmakeLenses ''Tree\ntype Path = [Int]\n</code></pre>\n\n<p>From this point on there are two ways to proceed; If you only need to know whether or not the entire traversal succeeded (e.g. any link in the path was inaccessible) then you can use <a href=\"https://hackage.haskell.org/package/lens-4.17.1/docs/Control-Lens-Combinators.html#v:failover\" rel=\"nofollow noreferrer\"><code>failover</code></a>; which takes a traversal and a function, and will try to run the function on the traversal, but which will return the result in an <code>Alternative</code> context; we can choose this context to be 'maybe' so we can detect the failure with pattern matching and return the appropriate <code>Left</code> or <code>Right</code>. I'm not aware of an easy way to traverse a list of indices, so I wrote a quick helper to recurse the list of links and turn them into a traversal using composition.</p>\n\n<pre><code>modSubtreeWithGenericError\n    :: forall a. Show a\n    =&gt; Path -&gt; (Tree a -&gt; Tree a) -&gt; Tree a -&gt; Either String (Tree a)\nmodSubtreeWithGenericError links f =\n    maybe (Left \"out of bounds\") Right . failover (pathOf links) f\n  where\n    pathOf :: [Int] -&gt; Traversal' (Tree a) (Tree a)\n    pathOf [] = id\n    pathOf (p : ps) = children . ix p . pathOf ps\n</code></pre>\n\n<p>That should do the trick if you only care failure in general, but it would be nice to know WHERE it failed right? We can do this by writing a custom traversal which KNOWS it's operating inside <code>Either String</code>; Most traversals must work over ANY applicative, but in our case we KNOW we want our result to be in Either; so we can take advantage of that:</p>\n\n<pre><code>modSubtreeWithExpressiveError\n    :: forall a. Show a\n    =&gt; [Int] -&gt; (Tree a -&gt; Tree a) -&gt; Tree a -&gt; Either String (Tree a)\nmodSubtreeWithExpressiveError links f = pathOf links %%~ (pure . f)\n  where\n    pathOf :: [Int] -&gt; LensLike' (Either String) (Tree a) (Tree a)\n    pathOf [] = id\n    pathOf (x : xs) = childOrFail x . pathOf xs\n    childOrFail :: Show a =&gt; Int -&gt; LensLike' (Either String) (Tree a) (Tree a)\n    childOrFail link f t =\n        if t &amp; has (children . ix link)\n           then t &amp; children . ix link %%~ f\n           else buildError link t\n</code></pre>\n\n<p><code>childOrFail</code> is the interesting bit; The <code>LensLike</code> bit is really just an alias for <code>(Tree a -&gt; Either String (Tree a)) -&gt; Tree a -&gt; Either String (Tree a)</code> which is just <code>traverse</code> specialized to <code>Either String</code>; we can't just use <code>traverse</code> directly though because we only want to traverse a single subtree, and our function runs on <code>Tree a</code> and not just <code>a</code>. I wrote the traversal out manually, first checking if the target exists using <code>has</code> then either failing with a <code>Left</code> with a nice error, or running the <code>f</code> (which represents the rest of the traversal) over the appropriate child using <code>%%~</code>. The <code>%%~</code> combinator is also a little scary; ironically its definition is literally <code>(%%~) = id</code>; Normally we would use <code>%~</code> here instead; but it expects a specific Applicative which doesn't match the <code>Either String</code> one we've specified. <code>%%~</code> happily runs our custom traversal, although we still need to add an extra <code>pure</code> onto our function to get it into the Either context.</p>\n\n<p>This is pretty advanced lens stuff, but at the end of the day it's all just normal traversals (most of lens is).</p>\n\n<p>I've got a guide on writing your own traversals here which might help <a href=\"https://lens-by-example.chrispenner.ca/articles/traversals/writing-traversals\" rel=\"nofollow noreferrer\">https://lens-by-example.chrispenner.ca/articles/traversals/writing-traversals</a></p>\n\n<p>Good luck! Hope that helps :)</p>\n"}], "owner": {"reputation": 2588, "user_id": 916142, "user_type": "registered", "accept_rate": 35, "profile_image": "https://www.gravatar.com/avatar/cf88a560a7f987712350b7d629ed2bc7?s=128&d=identicon&r=PG", "display_name": "Jeffrey Benjamin Brown", "link": "https://stackoverflow.com/users/916142/jeffrey-benjamin-brown"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 196, "favorite_count": 1, "answer_count": 1, "score": 5, "last_activity_date": 1559443349, "creation_date": 1552679371, "last_edit_date": 1552680529, "question_id": 55189779, "link": "https://stackoverflow.com/questions/55189779/can-i-build-something-like-a-lens-when-my-getter-and-setter-return-either", "title": "Can I build something like a lens when my getter and setter return `Either`?", "body": "<h1>In brief</h1>\n\n<p>My getter and setter could both fail, with messages describing how. Therefore they return <code>Either String</code>, which means I can't make lenses out of them in the normal way.</p>\n\n<h1>In detail</h1>\n\n<p>Consider these types:</p>\n\n<pre><code>import qualified Data.Vector as V\n\ndata Tree a = Tree { label :: a\n                   , children :: V.Vector (Tree a) }\n\ntype Path = [Int]\n</code></pre>\n\n<p>Not every <code>Path</code> into a <code>Tree</code> leads to a <code>Tree</code>, so a getter has to have a signature like <code>getSubtree :: Path -&gt; Tree a -&gt; Either String (Tree a)</code>. A setter needs a similar signature (see <code>modSubtree</code> below).</p>\n\n<p>If the getter and setter returned values of type <code>Tree a</code>, I would use them to create a lens, via something like the <code>lens</code> function in <a href=\"https://www.stackage.org/haddock/lts-13.8/microlens-0.4.10/Lens-Micro.html\" rel=\"noreferrer\">Lens.Micro</a>. I can't do that, though, if they return <code>Either</code>. Therefore I can't compose them with other lenses, so I have to do lots of wrapping and unwrapping.</p>\n\n<p>What would be a better way?</p>\n\n<h1>Example code</h1>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables #-}\n\nmodule I_wish_I_could_lens_this_Either where\n\nimport qualified Data.Vector as V\n\ndata Tree a = Tree { label :: a\n                   , children :: V.Vector (Tree a) }\n              deriving (Show, Eq, Ord)\n\ntype Path = [Int]\n\n-- | This is too complicated.\nmodSubtree :: forall a. Show a =&gt;\n  Path -&gt; (Tree a -&gt; Tree a) -&gt; Tree a -&gt; Either String (Tree a)\nmodSubtree [] f t = Right $ f t\nmodSubtree (link:path) f t = do\n  if not $ inBounds (children t) link\n    then Left $ show link ++ \"is out of bounds in \" ++ show t\n    else Right ()\n  let (cs :: V.Vector (Tree a)) = children t\n      (c :: Tree a) = cs V.! link\n  c' &lt;- modSubtree path f c\n  cs' &lt;- let left = Left \"imossible -- link inBounds already checked\"\n         in maybe left Right $ modifyVectorAt link (const c') cs\n  Right $ t {children = cs'}\n\ngetSubtree :: Show a =&gt; Path -&gt; Tree a -&gt; Either String (Tree a)\ngetSubtree [] t = Right t\ngetSubtree (link:path) t =\n  if not $ inBounds (children t) link\n  then Left $ show link ++ \"is out of bounds in \" ++ show t\n  else getSubtree path $ children t V.! link\n\n-- | check that an index into a vector is inbounds\ninBounds :: V.Vector a -&gt; Int -&gt; Bool\ninBounds v i = i &gt;= 0 &amp;&amp;\n               i &lt;= V.length v - 1\n\n-- | Change the value at an index in a vector.\n-- (Data.Vector.Mutable offers a better way.)\nmodifyVectorAt :: Int -&gt; (a -&gt; a) -&gt; V.Vector a -&gt; Maybe (V.Vector a)\nmodifyVectorAt i f v\n  | not $ inBounds v i = Nothing\n  | otherwise = Just ( before\n                       V.++ V.singleton (f $ v V.! i)\n                       V.++ after )\n    where before = V.take i v\n          after = V.reverse $ V.take remaining $ V.reverse v\n            where remaining = (V.length v - 1) - i\n</code></pre>\n"}, {"tags": ["haskell", "ghci"], "comments": [{"owner": {"reputation": 100768, "user_id": 1899640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/47374ccb28e4b0d2454b64f7b975bc66?s=128&d=identicon&r=PG", "display_name": "that other guy", "link": "https://stackoverflow.com/users/1899640/that-other-guy"}, "edited": false, "score": 1, "creation_date": 1552675258, "post_id": 55188787, "comment_id": 97115927, "body": "I can reproduce this with GHCi 8.4.4 as described. <code>ghci</code> does not respond to repeated sigint or sigterm. Similar question <a href=\"https://stackoverflow.com/questions/47188857/ghci-hangs-when-ctrlcing-from-infinite-loop-with-fbreak-on-exception-set\">here</a>"}, {"owner": {"reputation": 7666, "user_id": 1241193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0331e5e748a0ac3860b68f6cac130ef1?s=128&d=identicon&r=PG", "display_name": "Bob Dalgleish", "link": "https://stackoverflow.com/users/1241193/bob-dalgleish"}, "edited": false, "score": 1, "creation_date": 1552676221, "post_id": 55188787, "comment_id": 97116339, "body": "You can open another terminal window, find the process ID of the ghci command that is running and kill it."}, {"owner": {"reputation": 2158, "user_id": 9991455, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2ff5d55afd5d829849efbf27962dd320?s=128&d=identicon&r=PG&f=1", "display_name": "Lorenzo", "link": "https://stackoverflow.com/users/9991455/lorenzo"}, "edited": false, "score": 2, "creation_date": 1552676260, "post_id": 55188787, "comment_id": 97116355, "body": "Also have a look at this: <code>CTRL+Z</code> should work on linux <a href=\"https://stackoverflow.com/questions/30877019/how-to-abort-execution-in-ghci\" title=\"how to abort execution in ghci\">stackoverflow.com/questions/30877019/&hellip;</a>"}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "reply_to_user": {"reputation": 100768, "user_id": 1899640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/47374ccb28e4b0d2454b64f7b975bc66?s=128&d=identicon&r=PG", "display_name": "that other guy", "link": "https://stackoverflow.com/users/1899640/that-other-guy"}, "edited": false, "score": 0, "creation_date": 1552690118, "post_id": 55188787, "comment_id": 97121601, "body": "@thatotherguy The similar question cannot get reproduced in GHC 8.0.1"}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 3, "creation_date": 1552690148, "post_id": 55188787, "comment_id": 97121612, "body": "Can you please add your GHCi version and operating system to the question?"}], "answers": [{"tags": [], "owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "is_accepted": true, "score": 12, "last_activity_date": 1552693085, "last_edit_date": 1552693085, "creation_date": 1552692315, "answer_id": 55191886, "question_id": 55188787, "link": "https://stackoverflow.com/questions/55188787/how-can-i-stop-infinite-evaluation-in-ghci/55191886#55191886", "title": "How can I stop infinite evaluation in GHCi?", "body": "<p>Great question! However, since <a href=\"https://stackoverflow.com/questions/30877019/how-to-abort-execution-in-ghci\">How to abort execution in GHCI?</a> already focuses on your second part, let's not repeat that here. Instead, let's focus on the first.</p>\n\n<blockquote>\n  <p>Why it so?</p>\n</blockquote>\n\n<p>GHC optimizes loops aggressively. It optimizes them even further if there is no allocation <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/bugs.html#bugs-in-ghc\" rel=\"noreferrer\">that it's even a known bug</a>:</p>\n\n<blockquote>\n  <h3>19.2.1. Bugs in GHC</h3>\n  \n  <ul>\n  <li><p>GHC\u2019s runtime system implements cooperative multitasking, with context switching potentially occurring only when a program allocates. <strong>This means that programs that do not allocate may never context switch. This is especially true of programs using STM, which may deadlock after observing inconsistent state.</strong> See <a href=\"https://ghc.haskell.org/trac/ghc/ticket/367\" rel=\"noreferrer\">Trac #367</a> for further discussion. [emphasis mine]</p>\n  \n  <p>If you are hit by this, you may want to compile the affected module with <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/using-optimisation.html#ghc-flag--fomit-yields\" rel=\"noreferrer\"><code>-fno-omit-yields</code></a> (see <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/using-optimisation.html#options-f\" rel=\"noreferrer\"><em>-f*: platform-independent flags</em></a>). This flag ensures that yield points are inserted at every function entrypoint (at the expense of a bit of performance).</p></li>\n  </ul>\n</blockquote>\n\n<p>If we check <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/using-optimisation.html#ghc-flag--fomit-yields\" rel=\"noreferrer\"><code>-fomit-yields</code></a>, we find:</p>\n\n<blockquote>\n  <p><code>-fomit-yields</code></p>\n  \n  <p>Default: yield points enabled</p>\n  \n  <p>Tells GHC to omit heap checks when no allocation is being performed. While this improves binary sizes by about 5%, it also means\n  that threads run in tight non-allocating loops will not get preempted\n  in a timely fashion. <strong>If it is important to always be able to interrupt\n  such threads, you should turn this optimization off. Consider also\n  recompiling all libraries with this optimization turned off, if you\n  need to guarantee interruptibility.</strong> [emphasis mine]</p>\n</blockquote>\n\n<p><code>nub $ cycle \"ab\"</code> is a tight, non-allocating loop, although <code>last $ repeat 1</code> is an even more obvious non-allocating example.</p>\n\n<p>The \"yield points enabled\" is misleading: <code>-fomit-yields</code> is enabled by default. As the standard library is compiled with <code>-fomit-yields</code>, <strong>all functions in the standard library that lead to tight, non-allocating loops</strong> may show that behaviour in GHCi, as you never recompile them.</p>\n\n<p>We can verify that with the following program:</p>\n\n<pre><code>-- Test.hs\nmyLast :: [a] -&gt; Maybe a\nmyLast [x]    = Just x\nmyLast (_:xs) = myLast xs\nmyLast _      = Nothing\n\nmain = print $ myLast $ repeat 1\n</code></pre>\n\n<p>We can use <kbd>C-c</kbd> to quit it if we run it in GHCi <strong>without compiling beforehand</strong>:</p>\n\n<pre><code>$ ghci Test.hs\n[1 of 1] Compiling Main             ( Test.hs, interpreted )\nOk, one module loaded.\n*Main&gt; :main            &lt;pressing C-c after a while&gt;\nInterrupted.\n</code></pre>\n\n<p>If we compile it and then rerun it in GHCi, it will hang:</p>\n\n<pre><code>$ ghc Test.hs\n[1 of 1] Compiling Main             ( Test.hs, Test.o )\nLinking Test.exe ...\n\n$ ghci Test.hs\nOk, one module loaded.\n*Main&gt; :main\n&lt;hangs indefinitely&gt;\n</code></pre>\n\n<p>Note that you need <code>-dynamic</code> if you don't use Windows, as otherwise GHCi will recompile the source file. However, if we use <code>-fno-omit-yield</code>, we suddenly can quit again (in Windows).</p>\n\n<p>We can verify that again with another small snippet:</p>\n\n<pre><code>Prelude&gt; last xs = case xs of [x] -&gt; x ; (_:ys) -&gt; last ys\nPrelude&gt; last $ repeat 1\n^CInterrupted\n</code></pre>\n\n<p>As <code>ghci</code> doesn't use any optimizations, it also doesn't use <code>-fomit-yield</code> (and therefore has <code>-fno-omit-yield</code> enabled). Our new variant of <code>last</code> doesn't yield the same behaviour as <code>Prelude.last</code> as it isn't compiled with <code>fomit-yield</code>.</p>\n\n<p>Now that we know <em>why</em> this happens, we know that we will experience that behaviour throughout the standard library, as the standard library is compiled with <code>-fomit-yield</code>.</p>\n"}], "owner": {"reputation": 2352, "user_id": 4518180, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/HQeHB.png?s=128&g=1", "display_name": "mkUltra", "link": "https://stackoverflow.com/users/4518180/mkultra"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1322, "favorite_count": 2, "accepted_answer_id": 55191886, "answer_count": 1, "score": 17, "last_activity_date": 1552719803, "creation_date": 1552674757, "last_edit_date": 1552719803, "question_id": 55188787, "link": "https://stackoverflow.com/questions/55188787/how-can-i-stop-infinite-evaluation-in-ghci", "title": "How can I stop infinite evaluation in GHCi?", "body": "<p>When I run something like:</p>\n\n<pre><code>Prelude&gt; cycle \"ab\"\n</code></pre>\n\n<p>I can see an infinite printing of \"ab\". To stop it I just use <kbd>Ctrl</kbd>+<kbd>c</kbd>. And it works.</p>\n\n<p>When I run:</p>\n\n<pre><code>Prelude Data.List&gt; nub $ cycle \"ab\"\n</code></pre>\n\n<p>I am not able to stop it.</p>\n\n<p><strong>Question:</strong></p>\n\n<ul>\n<li>Why it so?</li>\n<li>How can I stop this operation?</li>\n</ul>\n\n<p><strong>Update:</strong></p>\n\n<pre><code> Ubuntu: version 18.10  \n GHCi:   version 8.2.2\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 4, "creation_date": 1552655025, "post_id": 55183204, "comment_id": 97104366, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/24391077/why-two-definitions-of-reverse-in-haskells-data-list\">Why two definitions of &#39;reverse&#39; in Haskell&#39;s Data.List</a>"}], "answers": [{"comments": [{"owner": {"reputation": 71, "user_id": 11208629, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/12726b067ca9cc6830a06044d7e56d75?s=128&d=identicon&r=PG&f=1", "display_name": "allmass", "link": "https://stackoverflow.com/users/11208629/allmass"}, "edited": false, "score": 1, "creation_date": 1552655729, "post_id": 55183277, "comment_id": 97104817, "body": "I don&#39;t understand why the second definition is more efficient."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 71, "user_id": 11208629, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/12726b067ca9cc6830a06044d7e56d75?s=128&d=identicon&r=PG&f=1", "display_name": "allmass", "link": "https://stackoverflow.com/users/11208629/allmass"}, "edited": false, "score": 0, "creation_date": 1552656733, "post_id": 55183277, "comment_id": 97105430, "body": "@allmass At each iteration, one definition branches over three possible cases (<code>[x],(x:xs),[]</code>), the other one only two (<code>[],(z:zs)</code>), so -other things being equal- it requires fewer checks/jumps. Further, <code>[x]</code> requires matching two constructors since it&#39;s the same thing as <code>x:[]</code>, which should cost twice, roughly, the cost of matching against <code>[]</code> or <code>z:zs</code>, which have a single constructor. (This is not a completely accurate description, but it&#39;s close enough to understand, I think)"}, {"owner": {"reputation": 71, "user_id": 11208629, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/12726b067ca9cc6830a06044d7e56d75?s=128&d=identicon&r=PG&f=1", "display_name": "allmass", "link": "https://stackoverflow.com/users/11208629/allmass"}, "edited": false, "score": 0, "creation_date": 1552658915, "post_id": 55183277, "comment_id": 97106762, "body": "But I have read that patterns are analysed from top to bottom until the first pattern fits and the rest of patterns are ignored. Why the third pattern in the first definition is checked at each iteration, or maybe I  don&#39;t  understand the rule &quot;from top to bottom&quot; properly?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1552663254, "post_id": 55183277, "comment_id": 97109492, "body": "That analysis holds for generating the code, but the actual code generated may be more efficient (and optimizable) if it only has 2 choices to consider rather than 3."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 71, "user_id": 11208629, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/12726b067ca9cc6830a06044d7e56d75?s=128&d=identicon&r=PG&f=1", "display_name": "allmass", "link": "https://stackoverflow.com/users/11208629/allmass"}, "edited": false, "score": 3, "creation_date": 1552664045, "post_id": 55183277, "comment_id": 97110013, "body": "@allmass it isn&#39;t. checking for <code>[]</code> is part of the <i>first</i> clause&#39;s pattern match, not the third&#39;s: <code>[x]</code> is actually <code>(:) x []</code> (as chi notes), so not only we have to check that it is <code>:</code>, but also that it has <code>[]</code> in its right branch. that&#39;s two checks for one pattern to match."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 71, "user_id": 11208629, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/12726b067ca9cc6830a06044d7e56d75?s=128&d=identicon&r=PG&f=1", "display_name": "allmass", "link": "https://stackoverflow.com/users/11208629/allmass"}, "edited": false, "score": 1, "creation_date": 1552699353, "post_id": 55183277, "comment_id": 97123412, "body": "@allmass, &quot;top-to-bottom&quot; is a good way to think about the <i>semantics</i> of the pattern match, but it&#39;s actually compiled into a tree of jumps.  It doesn&#39;t actually check the patterns one by one, it is just specified to give the same answer as if it did."}, {"owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "edited": false, "score": 0, "creation_date": 1615309794, "post_id": 55183277, "comment_id": 117649324, "body": "Why not more minimally?  <code>ini [x] = []; ini (x:xs) = x:ini xs</code>"}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "reply_to_user": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "edited": false, "score": 1, "creation_date": 1615312197, "post_id": 55183277, "comment_id": 117650340, "body": "@fp_mora That&#39;s the first version if you look closely."}, {"owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "edited": false, "score": 0, "creation_date": 1615320892, "post_id": 55183277, "comment_id": 117653819, "body": "@bartek-banachewicz That is why assumptions are so bad, assuming the 2nd only matters. ugh"}], "tags": [], "owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "is_accepted": false, "score": 12, "last_activity_date": 1552655055, "creation_date": 1552655055, "answer_id": 55183277, "question_id": 55183204, "link": "https://stackoverflow.com/questions/55183204/why-are-there-two-definitions-of-init-function-in-prelude/55183277#55183277", "title": "Why are there two definitions of init function in Prelude?", "body": "<p>You haven't quoted it verbatim. It's actually:</p>\n\n<pre><code>-- | Return all the elements of a list except the last one.\n-- The list must be non-empty.\ninit                    :: [a] -&gt; [a]\n#if defined(USE_REPORT_PRELUDE)\ninit [x]                =  []\ninit (x:xs)             =  x : init xs\ninit []                 =  errorEmptyList \"init\"\n#else\n-- eliminate repeated cases\ninit []                 =  errorEmptyList \"init\"\ninit (x:xs)             =  init' x xs\n  where init' _ []     = []\n        init' y (z:zs) = y : init' z zs\n#endif\n</code></pre>\n\n<p>The <code>USE_REPORT_PRELUDE</code> means that this piece of code adheres to Haskell Report, while the other one is a potentially more efficient implementation. Check out <a href=\"https://stackoverflow.com/questions/24391077/why-two-definitions-of-reverse-in-haskells-data-list\">this thread</a> for similar discussion about <code>reverse</code>.</p>\n"}], "owner": {"reputation": 71, "user_id": 11208629, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/12726b067ca9cc6830a06044d7e56d75?s=128&d=identicon&r=PG&f=1", "display_name": "allmass", "link": "https://stackoverflow.com/users/11208629/allmass"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 260, "favorite_count": 0, "answer_count": 1, "score": 7, "last_activity_date": 1552660605, "creation_date": 1552654815, "last_edit_date": 1552660605, "question_id": 55183204, "link": "https://stackoverflow.com/questions/55183204/why-are-there-two-definitions-of-init-function-in-prelude", "title": "Why are there two definitions of init function in Prelude?", "body": "<p>I found in Prelude two definitions of the function init:</p>\n\n<pre><code>init [x] = []\ninit (x:xs) = x : init xs\ninit [] = errorEmptyList \"init\"\n\ninit [] = errorEmptyList \"init\"\ninit (x:xs) = init' x xs\n  where init' _ [] = []\n        init' y (z:zs) = y : init' z zs\n</code></pre>\n\n<p>What is the reason of the second definition?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "edited": false, "score": 0, "creation_date": 1552651287, "post_id": 55176344, "comment_id": 97102178, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/53904818/weaken-gadts-type-constraints-to-deal-with-unpredictable-data\">Weaken GADTs type constraints to deal with unpredictable data</a>"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1553144133, "post_id": 55176344, "comment_id": 97278656, "body": "You shouldn&#39;t need the <code>Typeable a</code> constraint on the <code>Lit</code> constructor."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1553147594, "post_id": 55176344, "comment_id": 97279426, "body": "Alternatively, you can shove the <code>Eq</code> constraint in there too, and remove both constraints from the <code>ATerm</code> constructor. <a href=\"https://gist.github.com/treeowl/40ff82031132e642faaedac39fed6fb6\" rel=\"nofollow noreferrer\">Example</a>"}, {"owner": {"reputation": 225, "user_id": 9494377, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Don Klein", "link": "https://stackoverflow.com/users/9494377/don-klein"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1553158710, "post_id": 55176344, "comment_id": 97283666, "body": "Thanks @dfeuer for pointing out the extra constraint, code updated."}], "answers": [{"comments": [{"owner": {"reputation": 225, "user_id": 9494377, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Don Klein", "link": "https://stackoverflow.com/users/9494377/don-klein"}, "edited": false, "score": 0, "creation_date": 1552635479, "post_id": 55177192, "comment_id": 97093289, "body": "Thanks, I revised it a bit and then it worked like a charm!"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1552650814, "post_id": 55177192, "comment_id": 97101893, "body": "You may also like <a href=\"http://hackage.haskell.org/package/parameterized-utils-1.0.1/docs/Data-Parameterized-Some.html\" rel=\"nofollow noreferrer\"><code>Some Term</code></a>, not least for the collection of handy utilities you get for reuse."}, {"owner": {"reputation": 225, "user_id": 9494377, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Don Klein", "link": "https://stackoverflow.com/users/9494377/don-klein"}, "edited": false, "score": 0, "creation_date": 1552689029, "post_id": 55177192, "comment_id": 97121308, "body": "@luqui ended up you are correct in that the type will be lost once put inside ATerm, is there any way to retrieve it back since I need to compare the old state to the new state?"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 225, "user_id": 9494377, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Don Klein", "link": "https://stackoverflow.com/users/9494377/don-klein"}, "edited": false, "score": 1, "creation_date": 1552697192, "post_id": 55177192, "comment_id": 97123099, "body": "@DonKlein, I have expanded the answer"}, {"owner": {"reputation": 225, "user_id": 9494377, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Don Klein", "link": "https://stackoverflow.com/users/9494377/don-klein"}, "edited": false, "score": 0, "creation_date": 1552962015, "post_id": 55177192, "comment_id": 97199481, "body": "@luqui I tried your updated example but got some errors as shown <a href=\"https://imgur.com/1wb7AbJ\" rel=\"nofollow noreferrer\">in this screencap</a>, mind having a look?"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 225, "user_id": 9494377, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Don Klein", "link": "https://stackoverflow.com/users/9494377/don-klein"}, "edited": false, "score": 0, "creation_date": 1552967526, "post_id": 55177192, "comment_id": 97200549, "body": "@DonKlein, made a tiny mistake.  Should be <code>t&#39; == u</code> instead of <code>t == u</code>"}, {"owner": {"reputation": 225, "user_id": 9494377, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Don Klein", "link": "https://stackoverflow.com/users/9494377/don-klein"}, "edited": false, "score": 0, "creation_date": 1552983035, "post_id": 55177192, "comment_id": 97205567, "body": "@luqui, actually that&#39;s the first thing I tried but no dice, you could try it here (press &quot;Run&quot; to see the error message on the right): <a href=\"https://repl.it/@coodoo1/OfficialDarkgreyProgramminglanguages\" rel=\"nofollow noreferrer\">repl.it/@coodoo1/OfficialDarkgreyProgramminglanguages</a>"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 225, "user_id": 9494377, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Don Klein", "link": "https://stackoverflow.com/users/9494377/don-klein"}, "edited": false, "score": 1, "creation_date": 1553028234, "post_id": 55177192, "comment_id": 97232044, "body": "@DonKlein you forgot an <code>Eq</code> instance for your <code>Term</code>, and I forgot that we therefore need to close over an <code>Eq</code> dictionary in <code>ATerm</code> (assuming the former is compositional, which it almost surely will be).  <a href=\"https://repl.it/@luqui/OfficialDarkgreyProgramminglanguages-3\" rel=\"nofollow noreferrer\">repl.it/@luqui/OfficialDarkgreyProgramminglanguages-3</a>"}, {"owner": {"reputation": 225, "user_id": 9494377, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Don Klein", "link": "https://stackoverflow.com/users/9494377/don-klein"}, "edited": false, "score": 0, "creation_date": 1553122911, "post_id": 55177192, "comment_id": 97273936, "body": "@luqui Thanks, it worked like a charm this time and I&#39;ve updated the question with full code snippet \ud83d\udc4d\ud83d\udc4d"}], "tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": true, "score": 7, "last_activity_date": 1553028324, "last_edit_date": 1553028324, "creation_date": 1552633077, "answer_id": 55177192, "question_id": 55176344, "link": "https://stackoverflow.com/questions/55176344/is-it-possible-to-store-a-gadt-inside-a-state-monad-transformer/55177192#55177192", "title": "Is it possible to store a GADT inside a State monad transformer?", "body": "<p>Yes, you can use an existential</p>\n\n<pre><code>data ATerm where\n   ATerm :: Term a -&gt; ATerm\n</code></pre>\n\n<p>which is a monotype that stores \"a <code>Term</code> of any type\". </p>\n\n<p>However you should be aware that you will <em>lose</em> the type information, which I have a hunch will not cause a problem in your case.  If you do need to recover it, you will need to add some <code>Typeable</code> constraints or some other trick&mdash;hard to say without more context on what you are doing.</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>To get the type information back, you will need to include it in <code>ATerm</code></p>\n\n<pre><code>data ATerm where\n    ATerm :: (Typeable a, Eq a) =&gt; Term a -&gt; ATerm\n</code></pre>\n\n<p>Sadly, this change might cause the <code>Typeable</code> constraint to infect a fair amount of your code.  That's just how it goes.  We also include <code>Eq a</code>, since if we are comparing <code>ATerms</code> and do find that their types are the same, we will need to compare on that type.</p>\n\n<p>Then to compare two <code>ATerm</code>s, you first need to compare their types, then their values.  This can be done with the <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Typeable.html\" rel=\"nofollow noreferrer\"><code>Typeable</code></a> library.</p>\n\n<pre><code>instance Eq ATerm where\n    ATerm t == ATerm u\n        | Just t' &lt;- cast t = t' == u\n        | otherwise = False\n</code></pre>\n\n<p>Luckily, your <code>Term</code> GADT doesn't hide any types.  If you had a case like, for example</p>\n\n<pre><code>data Term a where\n    ...\n    Apply :: Func a b -&gt; Term a -&gt; Term b\n</code></pre>\n\n<p>you would need to add <code>Typeable</code> also to any hidden variables (variables that don't appear in the result type)</p>\n\n<pre><code>    Apply :: (Typeable a) =&gt; Func a b -&gt; Term a -&gt; Term b\n</code></pre>\n\n<p>Roughly, if you want to compare types, you need to have a <code>Typeable</code> constraint on them somewhere.</p>\n"}], "owner": {"reputation": 225, "user_id": 9494377, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Don Klein", "link": "https://stackoverflow.com/users/9494377/don-klein"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 150, "favorite_count": 2, "accepted_answer_id": 55177192, "answer_count": 1, "score": 5, "last_activity_date": 1553157594, "creation_date": 1552629134, "last_edit_date": 1553157594, "question_id": 55176344, "link": "https://stackoverflow.com/questions/55176344/is-it-possible-to-store-a-gadt-inside-a-state-monad-transformer", "title": "Is it possible to store a GADT inside a State monad transformer?", "body": "<p>Say that I have got a GADT like this:</p>\n\n<pre><code>data Term a where\n  Lit    :: a -&gt; Term a\n  Succ   :: Term Int -&gt; Term Int\n  IsZero :: Term Int -&gt; Term Bool\n  If     :: Term Bool -&gt; Term a -&gt; Term a -&gt; Term a\n</code></pre>\n\n<p>Is it possible to store <code>Succ (Lit 2)</code> and <code>IsZero (Succ (Lit 2))</code> inside the State monad transformer, as a value of the internal state?</p>\n\n<p>The issue here being those two are of different types, and I don't know how the <code>s</code> of <code>StateT s m a</code> should be typed.</p>\n\n<p>Edit: <code>ATerm</code> solved the initial question of how to store different <code>GADT</code> in the state, the issue now is since the type is lost it seemed impossible to compare the old and new state.</p>\n\n<p>Edit: Final answer.</p>\n\n<p>After going back and forth with @luqui, here's the full code snippet that answers this question.</p>\n\n<p>Feel free to fork this <a href=\"https://repl.it/@coodoo1/OfficialDarkgreyProgramminglanguages\" rel=\"nofollow noreferrer\">repl</a> and have a try.</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\n{-# LANGUAGE StandaloneDeriving #-}\n\nimport Data.Typeable\n\ndata Term a where\n  Lit    :: a -&gt; Term a\n  Succ   :: Term Int -&gt; Term Int\n  IsZero :: Term Int -&gt; Term Bool\n  If     :: Term Bool -&gt; Term a -&gt; Term a -&gt; Term a\n\nderiving instance (Eq a) =&gt; Eq (Term a)\n\ndata ATerm where\n  ATerm :: (Typeable a, Eq a) =&gt; Term a -&gt; ATerm\n\ninstance Eq ATerm where\n    ATerm t == ATerm u\n        | Just t' &lt;- cast t = t' == u\n        | otherwise = False\n\nmain :: IO ()\nmain = return ()\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 2, "creation_date": 1552606450, "post_id": 55173500, "comment_id": 97086000, "body": "Why not <code>map maximum</code>?"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 3, "creation_date": 1552606454, "post_id": 55173500, "comment_id": 97086003, "body": "The fact that it says there is a parse error on the <code>f</code> token is mysterious for me - but correctly using parentheses: <code>f (x:xs)</code> makes it work. (Well, it does once you&#39;ve replaced the undefined <code>as</code> by the obviously intended <code>x</code>)"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 2, "creation_date": 1552608268, "post_id": 55173500, "comment_id": 97086438, "body": "@RobinZigmond Recall <code>p:q</code> is a pattern whenever <code>p</code> and <code>q</code> are. Here however <code>p = f x</code> which is not a valid pattern since in patterns you can&#39;t apply variables like <code>f</code>. This is why the error is on <code>f</code>, I think."}, {"owner": {"reputation": 33, "user_id": 11205911, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fe6a51f3f1085b01c64d7ae46c6b639e?s=128&d=identicon&r=PG&f=1", "display_name": "Trevis Liu", "link": "https://stackoverflow.com/users/11205911/trevis-liu"}, "reply_to_user": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 0, "creation_date": 1552616430, "post_id": 55173500, "comment_id": 97088048, "body": "@Elmex80s Sorry that was a mistake."}], "answers": [{"comments": [{"owner": {"reputation": 33, "user_id": 11205911, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fe6a51f3f1085b01c64d7ae46c6b639e?s=128&d=identicon&r=PG&f=1", "display_name": "Trevis Liu", "link": "https://stackoverflow.com/users/11205911/trevis-liu"}, "edited": false, "score": 0, "creation_date": 1552617075, "post_id": 55173965, "comment_id": 97088191, "body": "I corrected that and now it says &quot;unexhausted pattern&quot;. So I added f [[]]=[] but the problem persists."}, {"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "reply_to_user": {"reputation": 33, "user_id": 11205911, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fe6a51f3f1085b01c64d7ae46c6b639e?s=128&d=identicon&r=PG&f=1", "display_name": "Trevis Liu", "link": "https://stackoverflow.com/users/11205911/trevis-liu"}, "edited": false, "score": 1, "creation_date": 1552618797, "post_id": 55173965, "comment_id": 97088617, "body": "@TrevisLiu Use <code>f [] = []</code>"}, {"owner": {"reputation": 33, "user_id": 11205911, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fe6a51f3f1085b01c64d7ae46c6b639e?s=128&d=identicon&r=PG&f=1", "display_name": "Trevis Liu", "link": "https://stackoverflow.com/users/11205911/trevis-liu"}, "reply_to_user": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 1, "creation_date": 1552619481, "post_id": 55173965, "comment_id": 97088773, "body": "@4castle But f takes elements of type [[Int]]? So how would it accept []?"}, {"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 4, "creation_date": 1552619681, "post_id": 55173965, "comment_id": 97088816, "body": "<code>[]</code> can have type <code>[[Int]]</code>. All list types have <code>[]</code> as a constructor."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 33, "user_id": 11205911, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fe6a51f3f1085b01c64d7ae46c6b639e?s=128&d=identicon&r=PG&f=1", "display_name": "Trevis Liu", "link": "https://stackoverflow.com/users/11205911/trevis-liu"}, "edited": false, "score": 4, "creation_date": 1552628267, "post_id": 55173965, "comment_id": 97090796, "body": "@TrevisLiu, more specifically, <code>[[]]</code> is a list with <i>one</i> element, and that element is the empty list. Whereas <code>[]</code> has no elements at all"}], "tags": [], "owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "is_accepted": true, "score": 6, "last_activity_date": 1552610085, "creation_date": 1552610085, "answer_id": 55173965, "question_id": 55173500, "link": "https://stackoverflow.com/questions/55173500/pattern-matching-on-a-list-of-lists-in-haskell/55173965#55173965", "title": "pattern matching on a list of lists in haskell", "body": "<p>In Haskell you may use constructor operator as pattern only when it is surrounded by brackets:</p>\n\n<pre><code>f :: [[Int]] -&gt; [Int]\nf (x:xs) = (maximum as) : f xs\n</code></pre>\n"}], "owner": {"reputation": 33, "user_id": 11205911, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fe6a51f3f1085b01c64d7ae46c6b639e?s=128&d=identicon&r=PG&f=1", "display_name": "Trevis Liu", "link": "https://stackoverflow.com/users/11205911/trevis-liu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 619, "favorite_count": 0, "accepted_answer_id": 55173965, "answer_count": 1, "score": 3, "last_activity_date": 1552650940, "creation_date": 1552606150, "last_edit_date": 1552650940, "question_id": 55173500, "link": "https://stackoverflow.com/questions/55173500/pattern-matching-on-a-list-of-lists-in-haskell", "title": "pattern matching on a list of lists in haskell", "body": "<p>I want a function that takes a list of lists of numbers and computes the maximum of each inner list to return a list of numbers. Here's my implementation:</p>\n\n<pre><code>f :: [[Int]]-&gt;[Int]\nf x:xs = (maximum x) : f xs \n</code></pre>\n\n<p>This results in a parse error:</p>\n\n<pre><code>h.hs:8:1: error: Parse error in pattern: f\n  |\n8 | f x:xs = (maximum x) : f xs\n</code></pre>\n\n<p>What is wrong with my code? What is the right way to implement such a function?</p>\n"}, {"tags": ["haskell", "servant"], "answers": [{"comments": [{"owner": {"reputation": 1147, "user_id": 4918563, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/726bb0a4339cebbfa272e71a51d340f1?s=128&d=identicon&r=PG&f=1", "display_name": "7puns", "link": "https://stackoverflow.com/users/4918563/7puns"}, "edited": false, "score": 0, "creation_date": 1552610043, "post_id": 55173412, "comment_id": 97086826, "body": "Yes. I got it. Thanks."}, {"owner": {"reputation": 1147, "user_id": 4918563, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/726bb0a4339cebbfa272e71a51d340f1?s=128&d=identicon&r=PG&f=1", "display_name": "7puns", "link": "https://stackoverflow.com/users/4918563/7puns"}, "edited": false, "score": 0, "creation_date": 1552614093, "post_id": 55173412, "comment_id": 97087621, "body": "How do you deal with the constructors in the typeclass? In the line that has the fmap, there is a &quot;con&quot; representing a constructor. This type signature could be different for User and for Product (in the original example I provided they are the same but they could be different)."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 1147, "user_id": 4918563, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/726bb0a4339cebbfa272e71a51d340f1?s=128&d=identicon&r=PG&f=1", "display_name": "7puns", "link": "https://stackoverflow.com/users/4918563/7puns"}, "edited": false, "score": 0, "creation_date": 1552614359, "post_id": 55173412, "comment_id": 97087666, "body": "@7puns look at type families.  But be careful not to reach too quickly for these advanced features, there are usually simpler designs nearby, moving the boundary of abstraction a hare this way or that."}], "tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": true, "score": 4, "last_activity_date": 1552605409, "creation_date": 1552605409, "answer_id": 55173412, "question_id": 55173254, "link": "https://stackoverflow.com/questions/55173254/looking-for-a-better-way-to-write-a-function-that-takes-a-type-constructor-as-ar/55173412#55173412", "title": "Looking for a better way to write a function that takes a type constructor as argument", "body": "<p>This is perhaps a good use for typeclasses.  Put the things that vary from one version to the other in a class.   The design could probably be improved, but this is the first step:</p>\n\n<pre><code>class DBItem a where\n    itemList :: IO [a]\n    createItem :: a -&gt; Handler ()\n    listItems :: Handler [Entity a]\n\ninstance DBItems User where\n    itemList = userList\n    createItem = ...\n    listItems = listUsers\n\ninstance DBItems Product where\n    itemList = productList\n    ...\n\nhydrateDB :: (DBItem a) =&gt; Handler [Entity a]\nhydrateDB = do\n    items &lt;- liftIO itemList\n    traverse_ createItem items\n    listItems\n</code></pre>\n\n<p>(I made a few changes to make the types make sense, but you get the idea)</p>\n"}], "owner": {"reputation": 1147, "user_id": 4918563, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/726bb0a4339cebbfa272e71a51d340f1?s=128&d=identicon&r=PG&f=1", "display_name": "7puns", "link": "https://stackoverflow.com/users/4918563/7puns"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 67, "favorite_count": 0, "accepted_answer_id": 55173412, "answer_count": 1, "score": 1, "last_activity_date": 1552638522, "creation_date": 1552604444, "last_edit_date": 1552638522, "question_id": 55173254, "link": "https://stackoverflow.com/questions/55173254/looking-for-a-better-way-to-write-a-function-that-takes-a-type-constructor-as-ar", "title": "Looking for a better way to write a function that takes a type constructor as argument", "body": "<p>I have a Haskell Servant Application. I want to read from a file and populate the database with the contents of the file. What I have is this</p>\n\n<pre><code>userList :: IO [User]\nproductList :: IO [Product]\n\ndata User = User { age :: Int, fname :: String, lname :: String }\ndata Product = Product { title :: String, description :: String }\ndata Item = UserI User | ProductI Product\n\nlistUsers :: Handler [Entity User]\nlistProducts :: Handler [Entity Product]\n\nhydrateUserDB :: Handler [Entity User]\nhydrateUserDB = do\n    items &lt;- liftIO userList\n    let list = fmap User items\n    traverse_ createUser list\n    listUsers\n\nhydrateProductDB :: Handler [Entity Product]\nhydrateProductDB = do\n    items &lt;- liftIO productList\n    let list = fmap Product items\n    traverse_ createProduct list\n    listProducts\n</code></pre>\n\n<p>Now I would like one function that can take either User or Product and yield the similar result as above.\nSomething like:</p>\n\n<pre><code>hydrateDB :: Handler [Entity a]\nhydrateDB =\n    \\alist con createItem listItems -&gt; do\n    items &lt;- liftIO alist\n    let list = fmap con items\n    traverse_ createItem list\n    listItems\n</code></pre>\n"}, {"tags": ["haskell", "haskell-prelude"], "comments": [{"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 2, "creation_date": 1552597066, "post_id": 55171492, "comment_id": 97082984, "body": "You&#39;re missing the point of alternative preludes. They often provide stronger guarantees against runtime errors <i>by choosing different type signatures</i>. If you are changing the types of functions, something is going to break - that&#39;s the point!"}, {"owner": {"reputation": 15339, "user_id": 1052117, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/e087c44c53d1214db5fb37e4c345f533?s=128&d=identicon&r=PG", "display_name": "Mittenchops", "link": "https://stackoverflow.com/users/1052117/mittenchops"}, "reply_to_user": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1552597446, "post_id": 55171492, "comment_id": 97083171, "body": "Hmm, but what about what seem to be common instructional patterns like <code>x:xs &lt;- myList</code> for algorithm design?  Throw these away completely, or these are always happening in the context of having already guaranteed a non-empty list?"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 3, "creation_date": 1552600672, "post_id": 55171492, "comment_id": 97084377, "body": "You might also want to look at liquid haskell, which has enough power to check safety like this without requiring different types."}, {"owner": {"reputation": 15339, "user_id": 1052117, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/e087c44c53d1214db5fb37e4c345f533?s=128&d=identicon&r=PG", "display_name": "Mittenchops", "link": "https://stackoverflow.com/users/1052117/mittenchops"}, "edited": false, "score": 0, "creation_date": 1552602540, "post_id": 55171492, "comment_id": 97084981, "body": "Whoa!  Liquid Haskell looks neat!"}, {"owner": {"reputation": 36, "user_id": 15015691, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fcf101c7cb80a3b6472c4329606b0dff?s=128&d=identicon&r=PG&f=1", "display_name": "ynishi", "link": "https://stackoverflow.com/users/15015691/ynishi"}, "edited": false, "score": 0, "creation_date": 1612585358, "post_id": 55171492, "comment_id": 116819289, "body": "Rio, no export head, is explicitly approach. hiding head and provide headMaybe and fromMaybe. It is easy to check original head using(it might be not work) when rewrite."}], "answers": [{"comments": [{"owner": {"reputation": 15339, "user_id": 1052117, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/e087c44c53d1214db5fb37e4c345f533?s=128&d=identicon&r=PG", "display_name": "Mittenchops", "link": "https://stackoverflow.com/users/1052117/mittenchops"}, "edited": false, "score": 0, "creation_date": 1552597324, "post_id": 55171888, "comment_id": 97083112, "body": "The Protolude approach looked like what I I guess naively expected as a &quot;working&quot; and &quot;safe&quot; version of head.  This seems to be the third bullet point you mention.  Why would <code>tail</code> get different treatment though?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 15339, "user_id": 1052117, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/e087c44c53d1214db5fb37e4c345f533?s=128&d=identicon&r=PG", "display_name": "Mittenchops", "link": "https://stackoverflow.com/users/1052117/mittenchops"}, "edited": false, "score": 1, "creation_date": 1552597952, "post_id": 55171888, "comment_id": 97083412, "body": "@Mittenchops That&#39;s unclear to me. It seems that Protolude wanted to generalize <code>head</code> to Foldables. AFAICS, <code>tail</code> can not be generalized in the same way. I would have included it anyway for basic lists, but the authors appear to have made a different choice."}, {"owner": {"reputation": 15339, "user_id": 1052117, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/e087c44c53d1214db5fb37e4c345f533?s=128&d=identicon&r=PG", "display_name": "Mittenchops", "link": "https://stackoverflow.com/users/1052117/mittenchops"}, "edited": false, "score": 0, "creation_date": 1552621785, "post_id": 55171888, "comment_id": 97089297, "body": "Thanks, I think this was a clear and helpful answer. I\u2019m disappointed this question will probably be closed as \u201cprimarily opinion based,\u201d but you cleared up exactly my misunderstanding."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 12, "last_activity_date": 1552597340, "last_edit_date": 1552597340, "creation_date": 1552597051, "answer_id": 55171888, "question_id": 55171492, "link": "https://stackoverflow.com/questions/55171492/using-alternative-preludes-in-haskell/55171888#55171888", "title": "Using alternative preludes in haskell", "body": "<p>In most cases, they are being introduced because they fail at compile time instead of runtime.</p>\n\n<p>The problem with <code>Prelude.head</code> is not (only) that it can fail. It is that it <em>has</em> to, since there is no way to take a list <code>[a]</code> and always produce an element <code>a</code>, since the input list might be empty. There is no easy fix that is a drop-in replacement, a radical change is needed.</p>\n\n<p>A safer, and arguably better prelude can address this issue in one of the following ways:</p>\n\n<ul>\n<li><p>remove <code>head</code>, so that the programmer won't use a dangerous tool. Any use of <code>head</code> will fail, at compile time. Not great, but OK.</p></li>\n<li><p>restrict the input type, e.g. <code>head :: NonEmptyList a -&gt; a</code>. This will be usable, but the programmer has to adapt the code so to guarantee that the input list is really non empty. Just passing a nonempty list won't do for the compiler -- the compiler wants a <em>proof</em>, and rightly so. The <em>good</em> news is that the previous code will be littered with compile errors, which will help the programmer spot the parts of the program which need to be fixed.</p></li>\n<li><p>restrict the output type, e.g. <code>head :: [a] -&gt; Maybe a</code>. This can be used just fine, but the programmer will need to cope with the different result type, and handle all the potential <code>Nothing</code>s. Again, the compile time errors will help the programmer to identify where some fixes are needed.</p></li>\n</ul>\n\n<p>In any case, the programmer has to modify the code. There's no way around it. However, once the compile time errors are resolved, the program is guaranteed to never produce <code>head: empty list</code> errors at runtime.</p>\n"}, {"tags": [], "owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "is_accepted": false, "score": 2, "last_activity_date": 1606422267, "last_edit_date": 1606422267, "creation_date": 1569094711, "answer_id": 58043527, "question_id": 55171492, "link": "https://stackoverflow.com/questions/55171492/using-alternative-preludes-in-haskell/58043527#58043527", "title": "Using alternative preludes in haskell", "body": "<p>I'm one of the <code>relude</code> authors and I can provide a bit motivation regarding why <code>relude</code> choose this behaviour for <code>head</code>, <code>tail</code>, <code>last</code> and <code>init</code> functions.</p>\n<p>Standard <code>Prelude</code> defines <code>head</code> in the following way:</p>\n<pre><code>head :: [a] -&gt; a\n</code></pre>\n<p>Alternative preludes often define <code>head</code> as follows:</p>\n<pre><code>head :: [a] -&gt; Maybe a\n</code></pre>\n<p>However, <code>relude</code> implements it with the following type signature instead:</p>\n<pre><code>head :: NonEmpty a -&gt; a\n</code></pre>\n<p>This design decision makes the library less beginner-friendly (people might not expect such type of the head function) but on the other hand it makes the interface more type-safe.</p>\n<p>Another reason for this: if you have function of type <code>head :: [a] -&gt; Maybe a</code>, you can't express <code>head :: NonEmpty a -&gt; a</code> using your Maybeised version of <code>head</code>. But if you have <code>head</code> that works with <code>NonEmpty</code> it's quite easy to implement <code>head</code> that returns <code>Maybe a</code>. And <code>relude</code> even has the <code>viaNonEmpty</code> function for that:</p>\n<pre><code>viaNonEmpty :: (NonEmpty a -&gt; b) -&gt; ([a] -&gt; Maybe b)\n</code></pre>\n<p>See the docs with examples here:</p>\n<ul>\n<li><a href=\"http://hackage.haskell.org/package/relude-0.5.0/docs/Relude-List-NonEmpty.html#v:viaNonEmpty\" rel=\"nofollow noreferrer\"><code>viaNonEmpty</code></a></li>\n</ul>\n"}], "owner": {"reputation": 15339, "user_id": 1052117, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/e087c44c53d1214db5fb37e4c345f533?s=128&d=identicon&r=PG", "display_name": "Mittenchops", "link": "https://stackoverflow.com/users/1052117/mittenchops"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 713, "favorite_count": 0, "accepted_answer_id": 55171888, "answer_count": 2, "score": 3, "last_activity_date": 1606422267, "creation_date": 1552595530, "last_edit_date": 1552596895, "question_id": 55171492, "link": "https://stackoverflow.com/questions/55171492/using-alternative-preludes-in-haskell", "title": "Using alternative preludes in haskell", "body": "<p>I'm interested in alternative Preludes.  I understand there are many choices:</p>\n\n<ol>\n<li><a href=\"https://hackage.haskell.org/packages/#cat:Prelude\" rel=\"nofollow noreferrer\">https://hackage.haskell.org/packages/#cat:Prelude</a></li>\n<li><a href=\"https://guide.aelve.com/haskell/alternative-preludes-zr69k1hc\" rel=\"nofollow noreferrer\">https://guide.aelve.com/haskell/alternative-preludes-zr69k1hc</a></li>\n</ol>\n\n<p>I understand one simple thing a lot of them fix is text, and another is in functions like <code>head</code> that error pretty hard when you might prefer they are safer.</p>\n\n<p>However, when I try to use these alternatives, the behavior in <code>head</code>, hmm, just seems to break the function completely, and doesn't look like an improvement to me.  Here are some examples:</p>\n\n<h2>Prelude</h2>\n\n<pre><code>Prelude&gt; head [1]\n1\nPrelude&gt; head []\n*** Exception: Prelude.head: empty list\n</code></pre>\n\n<h2>Foundation</h2>\n\n<pre><code>Foundation&gt; head [1]\n\n&lt;interactive&gt;:6:6: error:\n    \u2022 Couldn't match expected type \u2018NonEmpty c\u2019\n                  with actual type \u2018[Integer]\u2019\n    \u2022 In the first argument of \u2018head\u2019, namely \u2018[1]\u2019\n      In the expression: head [1]\n      In an equation for \u2018it\u2019: it = head [1]\n    \u2022 Relevant bindings include\n        it :: foundation-0.0.21:Foundation.Collection.Element.Element c\n          (bound at &lt;interactive&gt;:6:1)\nFoundation&gt; head []\n\n&lt;interactive&gt;:7:6: error:\n    \u2022 Couldn't match expected type \u2018NonEmpty c\u2019 with actual type \u2018[a0]\u2019\n    \u2022 In the first argument of \u2018head\u2019, namely \u2018[]\u2019\n      In the expression: head []\n      In an equation for \u2018it\u2019: it = head []\n    \u2022 Relevant bindings include\n        it :: foundation-0.0.21:Foundation.Collection.Element.Element c\n          (bound at &lt;interactive&gt;:7:1)\n</code></pre>\n\n<h2>Safe</h2>\n\n<pre><code>Safe&gt; head []\n\n&lt;interactive&gt;:22:1: error: Variable not in scope: head :: [a0] -&gt; t\n</code></pre>\n\n<h2>Classy Prelude</h2>\n\n<pre><code>ClassyPrelude&gt; head [1]\n\n&lt;interactive&gt;:24:6: error:\n    \u2022 Couldn't match expected type \u2018NonNull mono\u2019\n                  with actual type \u2018[Integer]\u2019\n    \u2022 In the first argument of \u2018head\u2019, namely \u2018[1]\u2019\n      In the expression: head [1]\n      In an equation for \u2018it\u2019: it = head [1]\n    \u2022 Relevant bindings include\n        it :: Element mono (bound at &lt;interactive&gt;:24:1)\n</code></pre>\n\n<h2>Relude</h2>\n\n<pre><code>Relude&gt; head [1]\n\n&lt;interactive&gt;:27:6: error:\n    \u2022 Couldn't match expected type \u2018NonEmpty a\u2019\n                  with actual type \u2018[Integer]\u2019\n    \u2022 In the first argument of \u2018head\u2019, namely \u2018[1]\u2019\n      In the expression: head [1]\n      In an equation for \u2018it\u2019: it = head [1]\n    \u2022 Relevant bindings include it :: a (bound at &lt;interactive&gt;:27:1)\n</code></pre>\n\n<h2>Rio</h2>\n\n<pre><code>RIO&gt; head [1]\n\n&lt;interactive&gt;:7:1: error:\n    Variable not in scope: head :: [Integer] -&gt; t\n</code></pre>\n\n<h2>Protolude</h2>\n\n<pre><code>Protolude&gt; head [1]\nJust 1\nProtolude&gt; head []\nNothing\n</code></pre>\n\n<p>This looks good---it also works for tail, right?</p>\n\n<pre><code>Protolude&gt; tail [1]\n\n&lt;interactive&gt;:12:1: error:\n    \u2022 Variable not in scope: tail :: [Integer] -&gt; t\n    \u2022 Perhaps you meant \u2018tails\u2019 (imported from Protolude)\n\nProtolude&gt; tails [1]\n[[1],[]]\n\nProtolude&gt; tails []\n[[]]\n</code></pre>\n\n<p>Well, that's not exactly a drop-in replacement.</p>\n\n<p>What am I missing in why this is better, why these functions have been defined if they're just going to fail?</p>\n"}, {"tags": ["string", "haskell"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1552594894, "post_id": 55171188, "comment_id": 97082000, "body": "What is <code>chomp</code>? What does <code>munch</code> do?"}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1552595151, "post_id": 55171188, "comment_id": 97082111, "body": "Are you sure about that? How is <code>chomp</code> defined? Why do you have to use <code>munch</code>?"}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1552595356, "post_id": 55171188, "comment_id": 97082204, "body": "Your description of what <code>chomp</code> does is wrong."}, {"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 1, "creation_date": 1552595379, "post_id": 55171188, "comment_id": 97082211, "body": "&quot;I need to use the <code>munch</code> function to do this.&quot; Assuming this is a homework assignment, and you were told you need to use the <code>munch</code> function, I doubt you&#39;d get credit for using <code>group</code> instead. In that case, I would recursively use <code>munch</code> to pull off each chunk. You can then <code>drop</code> the <code>length</code> of the chunk to get the rest of the string, to recurse on."}, {"owner": {"reputation": 169, "user_id": 7154023, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/224b13f4f5add9892a433551d300dbc0?s=128&d=identicon&r=PG&f=1", "display_name": "Kappa123", "link": "https://stackoverflow.com/users/7154023/kappa123"}, "reply_to_user": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 0, "creation_date": 1552595604, "post_id": 55171188, "comment_id": 97082328, "body": "@DarthFennec that makes sense. I think it&#39;s a similiar thing as to what I mentioned in one of the ideas I wrote in the post, but yours has more Haskell in it ;d"}], "answers": [{"tags": [], "owner": {"reputation": 2158, "user_id": 9991455, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2ff5d55afd5d829849efbf27962dd320?s=128&d=identicon&r=PG&f=1", "display_name": "Lorenzo", "link": "https://stackoverflow.com/users/9991455/lorenzo"}, "is_accepted": false, "score": 0, "last_activity_date": 1552594789, "creation_date": 1552594789, "answer_id": 55171318, "question_id": 55171188, "link": "https://stackoverflow.com/questions/55171188/shortening-a-string-in-haskell-with-a-condition/55171318#55171318", "title": "Shortening a string in Haskell with a condition", "body": "<p>A quick google gives you exactly what you're looking for.</p>\n\n<p><a href=\"https://codereview.stackexchange.com/questions/158183/string-splitting-function-in-haskell\">https://codereview.stackexchange.com/questions/158183/string-splitting-function-in-haskell</a></p>\n\n<p>If it works consider upvoting their answer as I only copied a link</p>\n"}, {"comments": [{"owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 0, "creation_date": 1552605638, "post_id": 55171406, "comment_id": 97085857, "body": "Can&#39;t you use <code>chunksOf</code> instead of <code>splitn</code>? They have identical signature."}, {"owner": {"reputation": 62252, "user_id": 1435869, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TrEd9.jpg?s=128&g=1", "display_name": "karakfa", "link": "https://stackoverflow.com/users/1435869/karakfa"}, "reply_to_user": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 0, "creation_date": 1552610943, "post_id": 55171406, "comment_id": 97087031, "body": "@Elmex80s Yes of course, if I only remembered that it existed!"}], "tags": [], "owner": {"reputation": 62252, "user_id": 1435869, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TrEd9.jpg?s=128&g=1", "display_name": "karakfa", "link": "https://stackoverflow.com/users/1435869/karakfa"}, "is_accepted": false, "score": 1, "last_activity_date": 1552595992, "last_edit_date": 1552595992, "creation_date": 1552595154, "answer_id": 55171406, "question_id": 55171188, "link": "https://stackoverflow.com/questions/55171188/shortening-a-string-in-haskell-with-a-condition/55171406#55171406", "title": "Shortening a string in Haskell with a condition", "body": "<p>here is another approach</p>\n\n<p>define a split function to break list at fixed size chunks</p>\n\n<pre><code>splitn :: Int -&gt; [a] -&gt; [[a]]\nsplitn _ [] = []\nsplitn n x = take n x : (splitn n $ drop n x)\n</code></pre>\n\n<p>now you can write your function as</p>\n\n<pre><code>runs =  concatMap (splitn 9) . group\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "is_accepted": false, "score": 0, "last_activity_date": 1552667428, "creation_date": 1552667428, "answer_id": 55186948, "question_id": 55171188, "link": "https://stackoverflow.com/questions/55171188/shortening-a-string-in-haskell-with-a-condition/55186948#55186948", "title": "Shortening a string in Haskell with a condition", "body": "<p>The basic strategy here is to take each unique list element to identify successive list elements that are identical. This let you have list elements in any mixed order. There are three functions but no imports. </p>\n\n<p>The first function is <code>rd</code> which creates the list of unique elements.</p>\n\n<p>The second function, <code>t9</code> is because there might be over 18 of the same elements. <code>t9</code> will create 9 character long list segments of identical elements with the remainder as the last list (string).</p>\n\n<p>The final, unnamed function uses <code>rd</code> to compile lists of all elements matching each unique elements. It uses <code>t9</code> to create segments of 9 elements.  </p>\n\n<pre><code>l = \"bbbbbbbbbaaaaaaaaaaaadddadaaaaaaacccccccccc\"\nrd [] = []; rd (x:xs) | elem x xs = rd xs | otherwise = x:rd xs\nt9 [] = []; t9 xs = [take 9 xs] ++ t9 (drop 9 xs)\n[ t | f &lt;- rd l, s &lt;- [[ g | g &lt;- l, f == g ]], t &lt;- t9 s ]\n</code></pre>\n\n<p>[\"bbbbbbbbb\",\"dddd\",\"aaaaaaaaa\",\"aaaaaaaaa\",\"aa\",\"ccccccccc\",\"c\"]</p>\n"}], "owner": {"reputation": 169, "user_id": 7154023, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/224b13f4f5add9892a433551d300dbc0?s=128&d=identicon&r=PG&f=1", "display_name": "Kappa123", "link": "https://stackoverflow.com/users/7154023/kappa123"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 336, "favorite_count": 0, "answer_count": 3, "score": 0, "last_activity_date": 1552667428, "creation_date": 1552594192, "last_edit_date": 1552641723, "question_id": 55171188, "link": "https://stackoverflow.com/questions/55171188/shortening-a-string-in-haskell-with-a-condition", "title": "Shortening a string in Haskell with a condition", "body": "<p>Chomp will take the longest amount of repeated characters from a string and one will limit this to 9, e.g. if given the string \"aaaaabbbcc\" , the answer would be \"aaaaa\"</p>\n\n<p>I need to define a function, runs, which will do a similiar thing but it will put the string into separate lists, e.g. if the given string is <code>\"aaaaabbbccc\"</code> , the answer would be <code>[\"aaaaa\",\"bbb\",\"cc\"]</code>, and I need to use the munch function to do this.</p>\n\n<p>The condition of 9 characters applies too, so if the given string is <code>\"aaaaaaaaaa\"</code> , the answer would be <code>[\"aaaaaaaaa\",\"a\"]</code></p>\n\n<p>I've not actually got any implementation apart from something that I found which does pretty much does the same thing without the limit of 9 characters:</p>\n\n<pre><code>runs :: String -&gt; String\nruns x = group x\n</code></pre>\n\n<p>I thought of 2 ways of doing this, but I have no clue on the actual implementation, with one being to run the munch function for however many unique characters there are, i.e if there is an x amount of a , b , c in the given string, it would run 3 times, and then put those lists together into one list.</p>\n\n<p>Another way that I thought of is to use guards. If the number of any single character in the given string is 9 or less, then just use the group function, otherwise, shorten it down using munch, or something like that.</p>\n\n<p>Is anyone able to tell me if the two ideas I mentioned would work at all or suggest an alternative and how to get started? I'm a bit lost.</p>\n"}, {"tags": ["haskell", "fold", "space-complexity", "short-circuiting"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1552594746, "post_id": 55170949, "comment_id": 97081928, "body": "Just an aside: <code>product</code> doesn&#39;t stack overflow in a compiled program."}], "answers": [{"comments": [{"owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "edited": false, "score": 0, "creation_date": 1553004221, "post_id": 55171116, "comment_id": 97218669, "body": "Something cool I just noticed: if you take this answer, inline the definition of <code>foldM</code>, and simplify, the result is the same as the final result in Daniel Wagner&#39;s answer."}], "tags": [], "owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "is_accepted": true, "score": 2, "last_activity_date": 1552599428, "last_edit_date": 1552599428, "creation_date": 1552593767, "answer_id": 55171116, "question_id": 55170949, "link": "https://stackoverflow.com/questions/55170949/fold-thats-both-constant-space-and-short-circuiting/55171116#55171116", "title": "Fold that&#39;s both constant-space and short-circuiting", "body": "<p>You might be looking for <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#v:foldM\" rel=\"nofollow noreferrer\"><code>foldM</code></a>. Instantiate it with <code>m = Either b</code> and you get short circuiting behavior (or <code>Maybe</code>, depends if you have many possible early exit values, or one known in advance).</p>\n\n<pre><code>foldM :: (Foldable t, Monad m) =&gt; (b -&gt; a -&gt; m b) -&gt; b -&gt; t a -&gt; m b\n</code></pre>\n\n<p>I recall discussions whether there should be <code>foldM'</code>, but IIRC GHC does the right thing most of the time.</p>\n\n<pre><code>import Control.Monad\nimport Data.Maybe\n\nmyProduct :: (Foldable t, Eq n, Num n) =&gt; t n -&gt; n\nmyProduct = fromMaybe 0 . foldM go 1\n  where go acc x = if x == 0 then Nothing else Just $! acc * x\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "edited": false, "score": 0, "creation_date": 1552600678, "post_id": 55171610, "comment_id": 97084381, "body": "I&#39;ve seen the pattern of &quot;foldr to build a function that you then immediately call&quot; before, but this is the first time it&#39;s been clear exactly how/why it works. Thanks!"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 3, "last_activity_date": 1552606892, "last_edit_date": 1552606892, "creation_date": 1552596071, "answer_id": 55171610, "question_id": 55170949, "link": "https://stackoverflow.com/questions/55170949/fold-thats-both-constant-space-and-short-circuiting/55171610#55171610", "title": "Fold that&#39;s both constant-space and short-circuiting", "body": "<p>If you spell your function slightly differently, it's more obvious how to turn it into a <code>foldr</code>. Namely:</p>\n\n<pre><code>myProduct :: (Eq n, Num n) =&gt; [n] -&gt; n\nmyProduct = flip go 1 where\n    go (x:xs) = if x == 0 then \\acc -&gt; 0 else \\acc -&gt; acc `seq` go xs (acc * x)\n    go [] = \\acc -&gt; acc\n</code></pre>\n\n<p>Now <code>go</code> has got that <code>foldr</code> flavor, and we can just fill in the holes.</p>\n\n<pre><code>myProduct :: (Foldable t, Eq n, Num n) =&gt; t n -&gt; n\nmyProduct = flip go 1 where\n    go = foldr\n        (\\x f -&gt; if x == 0 then \\acc -&gt; 0 else \\acc -&gt; acc `seq` f (acc * x))\n        (\\acc -&gt; acc)\n</code></pre>\n\n<p>Hopefully you can see where each of those pieces came from in the previous explicit-recursion style and how mechanical the transformation is. Then I'd make a few aesthetic tweaks:</p>\n\n<pre><code>myProduct :: (Foldable t, Eq n, Num n) =&gt; t n -&gt; n\nmyProduct xs = foldr step id xs 1 where\n    step 0 f acc = 0\n    step x f acc = f $! acc * x\n</code></pre>\n\n<p>And we're all done! A bit of quick testing in ghci reveals that it still short-circuits on <code>0</code> as required and uses constant space.</p>\n"}], "owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 419, "favorite_count": 0, "accepted_answer_id": 55171116, "answer_count": 2, "score": 5, "last_activity_date": 1552606892, "creation_date": 1552593117, "last_edit_date": 1552599892, "question_id": 55170949, "link": "https://stackoverflow.com/questions/55170949/fold-thats-both-constant-space-and-short-circuiting", "title": "Fold that&#39;s both constant-space and short-circuiting", "body": "<p>I'm trying to build a Haskell function that does basically the same thing as Prelude's <code>product</code>. Unlike that function, however, it should have these two properties:</p>\n\n<ol>\n<li>It should operate in constant space (ignoring the fact that some numeric types like <code>Integer</code> aren't). For example, I want <code>myProduct (replicate 100000000 1)</code> to eventually return 1, unlike Prelude's <code>product</code> which uses up all of my RAM and then gives <code>*** Exception: stack overflow</code>.</li>\n<li>It should short-circuit when it encounters a 0. For example, I want <code>myProduct (0:undefined)</code> to return 0, unlike Prelude's <code>product</code> which gives <code>*** Exception: Prelude.undefined</code>.</li>\n</ol>\n\n<p>Here's what I've come up with so far:</p>\n\n<pre><code>myProduct :: (Eq n, Num n) =&gt; [n] -&gt; n\nmyProduct = go 1\n  where go acc (x:xs) = if x == 0 then 0 else acc `seq` go (acc * x) xs\n        go acc []     = acc\n</code></pre>\n\n<p>That works exactly how I want it to for lists, but I'd like to generalize it to have type <code>(Foldable t, Eq n, Num n) =&gt; t n -&gt; n</code>. Is it possible to do this with any of the folds? If I just use <code>foldr</code>, then it will short-circuit but won't be constant-space, and if I just use <code>foldl'</code>, then it will be constant-space but won't short-circuit.</p>\n"}, {"tags": ["haskell", "record", "haskell-lens"], "comments": [{"owner": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 1, "creation_date": 1552580652, "post_id": 55165879, "comment_id": 97074367, "body": "Can\u2019t you make the base record global?"}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 0, "last_activity_date": 1552577299, "last_edit_date": 1552577299, "creation_date": 1552576967, "answer_id": 55166220, "question_id": 55165879, "link": "https://stackoverflow.com/questions/55165879/haskell-a-better-way-of-keeping-track-of-the-initial-state-of-a-record/55166220#55166220", "title": "Haskell - A better way of keeping track of the (initial) state of a record", "body": "<p>Broadly speaking, no, that is not possible: functions must explicitly declare all their inputs. Probably the cleanest way forward would be to use <a href=\"https://hackage.haskell.org/package/monad-loops-0.4.3/docs/Control-Monad-Loops.html#v:concatM\" rel=\"nofollow noreferrer\"><code>concatM</code></a> to combine your functions. You will need to flip their arguments, so that the unmodified record comes last, not first; once you do, then you will have</p>\n\n<pre><code>concatM [f1, f2, f3, f4] :: SomeRecord -&gt; SomeRecord -&gt; SomeRecord\n</code></pre>\n\n<p>as required. For combining just two such functions, there is</p>\n\n<pre><code>(&gt;=&gt;) ::\n    (SomeRecord -&gt; SomeRecord -&gt; SomeRecord) -&gt;\n    (SomeRecord -&gt; SomeRecord -&gt; SomeRecord) -&gt;\n    (SomeRecord -&gt; SomeRecord -&gt; SomeRecord)\n</code></pre>\n\n<p><a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#v:-62--61--62-\" rel=\"nofollow noreferrer\">in <code>base</code></a>; <code>f &gt;=&gt; g</code> will perform the modifications of <code>f</code> first, then those of <code>g</code>. If you prefer the other order, to be closer to the behavior of <code>(.)</code>, there is also a <code>(&lt;=&lt;)</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 3, "last_activity_date": 1552578764, "last_edit_date": 1592644375, "creation_date": 1552578764, "answer_id": 55166878, "question_id": 55165879, "link": "https://stackoverflow.com/questions/55165879/haskell-a-better-way-of-keeping-track-of-the-initial-state-of-a-record/55166878#55166878", "title": "Haskell - A better way of keeping track of the (initial) state of a record", "body": "<p>Sounds like a job for the <code>Reader</code> monad.</p>\n<pre><code>modifyRecord :: SomeRecord -&gt; Reader SomeRecord SomeRecord\nmodifyRecord currentR = do\n     baseR &lt;- ask\n     currentR &amp; thisPart %~ (fmap (someFn someValue))\n        where someValue = baseR ^. thisPart\n</code></pre>\n<p>Instead of passing <code>baseR</code> as an argument to each function explicitly, you access it as part of an environment.</p>\n<p>Then you can write something like</p>\n<pre><code>runReader (foldl (&gt;=&gt;) return [fn1, fn2, ..., fnn] currentR) baseR\n</code></pre>\n<ol>\n<li><p><code>foldl (&gt;=&gt;) return [fn1, fn2, ... fnn]</code> reduces the list of Kleisli arrows to a single arrow, much like <code>foldl (.) id</code> composes a list of ordinary functions into a a single function.</p>\n</li>\n<li><p>Applying the result of <code>foldl</code> to <code>currentR</code> produces a <code>Reader SomeRecord SomeRecord</code> value that only needs a base record to &quot;kick off&quot; the chain of modifications to the original current record and producing the final result.</p>\n<p>(Steps 1 and 2 generalize a fixed length chain like <code>return currentR &gt;&gt;= fn1 &gt;&gt;= fn2 &gt;&gt;= fn3</code>.)</p>\n</li>\n<li><p><code>runReader</code> supplies that base record by extracting the function from the <code>Reader</code> value and applying it to <code>baseR</code>.</p>\n</li>\n</ol>\n"}, {"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1552591617, "post_id": 55170037, "comment_id": 97080329, "body": "And for composition?"}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1552593420, "post_id": 55170037, "comment_id": 97081235, "body": "@DanielWagner <code>Control.Comonad.=&gt;=</code>"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1552594387, "post_id": 55170037, "comment_id": 97081754, "body": "Perhaps you should add that to the answer body itself!"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1552658419, "post_id": 55170037, "comment_id": 97106468, "body": "One might notice the similarity between the <code>Comonad</code> instance for pairs and the <code>Monad</code> instance for functions, which is due to isomorphism between curried and uncurried functions."}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1552676244, "post_id": 55170037, "comment_id": 97116350, "body": "@chepner In this case I prefer the comonadic solution, because it emphasizes that a &quot;value at rest&quot; comes with the original attached."}], "tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": false, "score": 2, "last_activity_date": 1552676092, "last_edit_date": 1552676092, "creation_date": 1552589528, "answer_id": 55170037, "question_id": 55165879, "link": "https://stackoverflow.com/questions/55165879/haskell-a-better-way-of-keeping-track-of-the-initial-state-of-a-record/55170037#55170037", "title": "Haskell - A better way of keeping track of the (initial) state of a record", "body": "<p>Put the initial state and current state in a tuple, and use <code>fmap</code> to lift functions that only care about the current state:</p>\n\n<pre><code>ghci&gt; :set -XTypeApplications\nghci&gt; fmap @((,) SomeRecord) :: (a -&gt; b) -&gt; (SomeRecord, a) -&gt; (SomeRecord, b)\n</code></pre>\n\n<hr>\n\n<p>But what if we are given two functions in the form <code>(SomeRecord,SomeRecord) -&gt; SomeRecord</code> and we need to compose them? We can define an operator easily enough, but does it exist somewhere already?</p>\n\n<p>As it happens, the type <code>((,) e)</code> has a <a href=\"http://hackage.haskell.org/package/comonad-5.0.4/docs/Control-Comonad.html\" rel=\"nofollow noreferrer\"><code>Comonad</code></a> instance. It is a very simple comonad that pairs values with some environment\u2014in our case, the original value that we want to carry around.</p>\n\n<p>The co-kleisli composition operator <a href=\"http://hackage.haskell.org/package/comonad-5.0.4/docs/Control-Comonad.html#v:-61--62--61-\" rel=\"nofollow noreferrer\"><code>=&gt;=</code></a> can be used to chain two <code>(SomeRecord,SomeRecord) -&gt; SomeRecord</code> functions, along with <a href=\"http://hackage.haskell.org/package/comonad-5.0.4/docs/Control-Comonad.html#v:-61--62--62-\" rel=\"nofollow noreferrer\"><code>=&gt;&gt;</code></a> to apply them to an initial paired value.</p>\n\n<pre><code> ghci&gt; import Control.Comonad\n ghci&gt; (1,7) =&gt;&gt; ((\\(o,c) -&gt; c * 2) =&gt;= (\\(o,c) -&gt; o + c))\n (1,15)\n</code></pre>\n\n<p>Or we can use <code>=&gt;&gt;</code> all the way:</p>\n\n<pre><code> ghci&gt; (1,7) =&gt;&gt; (\\(o,c) -&gt; c * 2) =&gt;&gt; (\\(o,c) -&gt; o + c)\n (1,15)\n</code></pre>\n\n<p>Using the flipped <code>fmap</code> operator <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Functor.html#v:-60--38--62-\" rel=\"nofollow noreferrer\"><code>&lt;&amp;&gt;</code></a>, we can even write a pipeline like</p>\n\n<pre><code> ghci&gt; (1,2) =&gt;&gt; (\\(x,y) -&gt; y+2) &lt;&amp;&gt; succ =&gt;&gt; (\\(x,y) -&gt; x + y)\n (1,6)  \n</code></pre>\n\n<p>We can also use <a href=\"http://hackage.haskell.org/package/comonad-5.0.4/docs/Control-Comonad.html#v:extract\" rel=\"nofollow noreferrer\"><code>extract</code></a> to get the current value, which is perhaps better than <code>snd</code> for showing intent. </p>\n"}], "owner": {"reputation": 798, "user_id": 9235239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8579e6ebaa62c34792078b38f18e2866?s=128&d=identicon&r=PG&f=1", "display_name": "atis", "link": "https://stackoverflow.com/users/9235239/atis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 151, "favorite_count": 0, "accepted_answer_id": 55166878, "answer_count": 3, "score": 1, "last_activity_date": 1552676092, "creation_date": 1552575917, "question_id": 55165879, "link": "https://stackoverflow.com/questions/55165879/haskell-a-better-way-of-keeping-track-of-the-initial-state-of-a-record", "title": "Haskell - A better way of keeping track of the (initial) state of a record", "body": "<p>I'm working on some functions that take a record and return a slightly modified record.</p>\n\n<p>For example</p>\n\n<pre><code>import Control.Lens ((%~), (^.), (&amp;))\n\nmodifyRecord :: SomeRecord -&gt; SomeRecord -&gt; SomeRecord\nmodifyRecord baseR currentR = currentR &amp; thisPart %~ (fmap (someFn someValue))\n        where someValue = baseR ^. thisPart\n</code></pre>\n\n<p>The function <code>modifyRecord</code> takes two arguments, both of the same type.</p>\n\n<p><code>currentR</code> is the current state of the record </p>\n\n<p>and </p>\n\n<p><code>baseR</code> is the base state of the record</p>\n\n<p>(i.e. No functions applied, never changed)</p>\n\n<hr>\n\n<p>Composing several functions of this type means I'll have to compose partial functions, make a list of them</p>\n\n<pre><code>[fn1 baseState , fn2 baseState , fn3 baseState ... fnn baseState]\n</code></pre>\n\n<p>and then I'd fold over <code>currentState</code> with function like <code>foldl (flip ($))</code></p>\n\n<p>so each <code>fnn baseState</code> is a function in itself with type\n<code>SomeRecord -&gt; SomeRecord</code></p>\n\n<hr>\n\n<p>What I want to do is write those functions such that they only take the current state of the record and figure out base state on their own.</p>\n\n<p>So</p>\n\n<pre><code>modifyRecord :: SomeRecord -&gt; SomeRecord -&gt; SomeRecord\n</code></pre>\n\n<p>to</p>\n\n<pre><code>modifyRecord :: SomeRecord -&gt; SomeRecord\n</code></pre>\n\n<p>without actually modifying the record itself.</p>\n\n<p>I want to avoid doing this</p>\n\n<pre><code>data SomeRecord = SomeRecord { value1 :: Float\n                             , value1Base :: Float\n                             , value2 :: Float\n                             , value2Base :: Float\n                             ...\n                             ...\n                             , valueN :: Float\n                             , valueNBase :: Float\n                             }\n</code></pre>\n\n<p>where the record itself would hold base values and function applied on it will avoid interacting with <code>*Base</code> items.</p>\n\n<p>Would that be possible? </p>\n"}, {"tags": ["haskell", "haskell-lens"], "answers": [{"tags": [], "owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "is_accepted": true, "score": 3, "last_activity_date": 1552576238, "creation_date": 1552576238, "answer_id": 55165983, "question_id": 55165769, "link": "https://stackoverflow.com/questions/55165769/lens-access-map-key/55165983#55165983", "title": "Lens access Map Key", "body": "<p>It's because <code>ix</code> is a Traversal, but <code>use</code> expects a Lens. The difference is that a Lens always has exactly one target. A Traversal can have zero or more. The combinators that expect lenses when retrieving a value sort of accidentally try to combine multiple values together as a <code>Monoid</code> when given a Traversal. (It comes from the <code>Applicative</code> instance for <code>Const</code>, in particular.) That attempt doesn't type check in your case because no such instance exists for the target type, so you get that error message. </p>\n\n<p>You probably want the <code>preuse</code> combinator instead of <code>use</code>, to account for the value potentially not being there. </p>\n"}], "owner": {"reputation": 639, "user_id": 10654293, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-N3y4b1ilweA/AAAAAAAAAAI/AAAAAAAAAAQ/nO5VTzQiUu0/photo.jpg?sz=128", "display_name": "McBear Holden", "link": "https://stackoverflow.com/users/10654293/mcbear-holden"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 135, "favorite_count": 0, "accepted_answer_id": 55165983, "answer_count": 1, "score": 2, "last_activity_date": 1552594819, "creation_date": 1552575614, "last_edit_date": 1552594819, "question_id": 55165769, "link": "https://stackoverflow.com/questions/55165769/lens-access-map-key", "title": "Lens access Map Key", "body": "<p>I have some problems using Lens library to acces Map Data type.</p>\n\n<pre><code>data Card\n  = Ferme\n  | Boulangerie\n\ndata PlayerState = PlayerState {\n  _psCards      :: Map Card Int,\n  } deriving (Show)\n\n\ndata GameState = GameState {\n  _gsPlayers      :: [PlayerState]\n                 } deriving (Show)\n</code></pre>\n\n<p>I have difficulties accessing the <code>Map</code></p>\n\n<pre><code>step :: (MonadState s m, HasGameState s, MonadIO m) =&gt; m ()\nstep = do\n    i &lt;- use $ gsPlayers . ix 0 . psCards . ix Ferme\n</code></pre>\n\n<p>with the following error:</p>\n\n<pre><code>    \u2022 Could not deduce (Monoid Int) arising from a use of \u2018ix\u2019\n      from the context: (MonadState s m, HasGameState s, MonadIO m)\n        bound by the type signature for:\n                   step :: forall s (m :: * -&gt; *).\n                           (MonadState s m, HasGameState s, MonadIO m) =&gt;\n                           m ()\n</code></pre>\n\n<p>Is this because I use <code>ix</code> with different argument in the same line?</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 1237, "user_id": 3416536, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/33e660f9b48e97aa96c9029e9645f15d?s=128&d=identicon&r=PG&f=1", "display_name": "user3416536", "link": "https://stackoverflow.com/users/3416536/user3416536"}, "edited": false, "score": 0, "creation_date": 1552640470, "post_id": 55171224, "comment_id": 97095637, "body": "Well strike me pink, you&#39;re right!  Many thanks @phadej.  I had seen the comment, but it had caused me cognitive dissonance on the first pass and I had somehow blanked on it."}], "tags": [], "owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "is_accepted": false, "score": 1, "last_activity_date": 1552594326, "creation_date": 1552594326, "answer_id": 55171224, "question_id": 55165302, "link": "https://stackoverflow.com/questions/55165302/haskell-tasty-hunit-how-to-run-multiple-tests-with-io/55171224#55171224", "title": "Haskell Tasty.HUnit : how to run multiple tests with IO", "body": "<p>You are right looking at the </p>\n\n<pre><code>withResource\n  :: IO a -- ^ initialize the resource\n  -&gt; (a -&gt; IO ()) -- ^ free the resource\n  -&gt; (IO a -&gt; TestTree)\n    -- ^ @'IO' a@ is an action which returns the acquired resource.\n    -- Despite it being an 'IO' action, the resource it returns will be\n    -- acquired only once and shared across all the tests in the tree.\n  -&gt; TestTree\n</code></pre>\n\n<p>The idea is that you can write your scenario as:</p>\n\n<pre><code>tests :: IO String -&gt; TestTree\ntests lsIO = testGroup \"tests\"\n    [ testCase \"length\" $ do\n        ls &lt;- lsIO\n        length ls @?= 2\n    , testCase \"foo\"    $ do\n        ls &lt;- lsIO\n        ls !! 0 @?= \"foo\"\n    , testCase \"no io\" $ do\n        return ()\n    ]\n\nmain :: IO ()\nmain = defaultMain (withResource acquire tests)\n\nacquire :: IO [String]\nacquire = read &lt;$&gt; readFile \"/tmp/hunit\"\n</code></pre>\n\n<p>i.e. it looks like you'd read file multiple times, but <code>tasty</code> performs the action only once. That's what the comment says :)\nTry adding <code>putStrLn \"trace debug\"</code> to the <code>acquire</code> to see for sure, that it's run mostly once (i.e. not run if you only ask for <code>no io</code> test).</p>\n"}], "owner": {"reputation": 1237, "user_id": 3416536, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/33e660f9b48e97aa96c9029e9645f15d?s=128&d=identicon&r=PG&f=1", "display_name": "user3416536", "link": "https://stackoverflow.com/users/3416536/user3416536"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 418, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1552594326, "creation_date": 1552574347, "question_id": 55165302, "link": "https://stackoverflow.com/questions/55165302/haskell-tasty-hunit-how-to-run-multiple-tests-with-io", "title": "Haskell Tasty.HUnit : how to run multiple tests with IO", "body": "<p>I'm trying to run multiple tests (that is, multiple Assertions) within a Test.Tasty testGroup; but feeding in a single \"object\" that has been read in from IO.</p>\n\n<p>For example, I read &amp; parse a file; and I want to make multiple assertions against the result of that file.  Something like</p>\n\n<pre><code>tests :: [String] -&gt; TestTree\ntests ls = testGroup \"tests\" [ testCase \"length\" $ length ls @?= 2\n                             , testCase \"foo\"    $ ls !! 0 @?= \"foo\"\n                             ]\n\nmain = do\n  ls :: [String] &lt;- read &lt;$&gt; readFile \"/tmp/hunit\"\n  defaultMain (tests ls)\n</code></pre>\n\n<p>However, the above requires that the IO is performed before calling the tests; and is performed even if only a subset of tests is requested (whether or not that subset actually uses the IO result).</p>\n\n<p>Alternatively, each testCase can perform its own IO (an Assertion is just IO (), after all); but that potentially means IO being performed repeatedly, which is not what I want.</p>\n\n<p>Alternatively again, a testCase can include a <code>do {}</code> block which calls multiple assertions; but this will mean that individual tests are not selectable, and won't get verbose output to confirm which tests were run.</p>\n\n<p><code>Test.Tasty.withResource</code> looks hopeful; and if its third argument were <code>a -&gt; TestTree</code>, I could work with that; however, it isn't, it's <code>IO a -&gt; TestTree</code>, and I'm struggling to work out how to safely extract the <code>a</code> to use in my test cases.</p>\n\n<p>I've tried playing with this, but I fear I'm missing something fundamental...</p>\n\n<p>Any help gratefully received.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 4, "creation_date": 1552571221, "post_id": 55163795, "comment_id": 97067399, "body": "<code>listTuples x = filter (\\(p,_,_) -&gt; x == p)</code>?"}], "answers": [{"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1552570982, "post_id": 55163868, "comment_id": 97067191, "body": "Actually the timestamps suggest <i>you</i> were 5 seconds earlier! Unfortunately though,  both answer don&#39;t seem to be what the OP wants..."}], "tags": [], "owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "is_accepted": false, "score": 3, "last_activity_date": 1552571451, "last_edit_date": 1552571451, "creation_date": 1552570330, "answer_id": 55163868, "question_id": 55163795, "link": "https://stackoverflow.com/questions/55163795/use-int-to-return-specific-tuples-in-list-causes-overflow/55163868#55163868", "title": "Use Int to return specific tuples in list causes overflow", "body": "<p>You can do it using <code>filter</code> </p>\n\n<pre><code>listTuples' :: Int -&gt; [(Int, Int, Int)] -&gt; [(Int, Int, Int)]  \nlistTuples' x ls = filter (\\(p, _, _) -&gt; p == x) ls\n</code></pre>\n"}, {"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user9660393"}, "edited": false, "score": 0, "creation_date": 1552570826, "post_id": 55163869, "comment_id": 97067060, "body": "It works but it only returns one of the tuples in the list instead of a list where every tuple x == p."}, {"owner": {"user_type": "does_not_exist", "display_name": "user9660393"}, "edited": false, "score": 0, "creation_date": 1552570980, "post_id": 55163869, "comment_id": 97067189, "body": "It seems to only check the first tuple in the list as opposed to every tuple in the list."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1552571060, "post_id": 55163869, "comment_id": 97067265, "body": "Well, it&#39;s hard to understand what result you want; please add proper complete examples."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1552571195, "post_id": 55163869, "comment_id": 97067377, "body": "At a guess: they&#39;re hoping for <code>otherwise = listTuples x ys</code>."}, {"owner": {"user_type": "does_not_exist", "display_name": "user9660393"}, "edited": false, "score": 0, "creation_date": 1552571367, "post_id": 55163869, "comment_id": 97067502, "body": "I added a test case with result."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1552573004, "post_id": 55163869, "comment_id": 97068707, "body": "Aha, so you want the behaviour of <code>filter</code> rather than <code>takeWhile</code>."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 4, "last_activity_date": 1552572964, "last_edit_date": 1552572964, "creation_date": 1552570335, "answer_id": 55163869, "question_id": 55163795, "link": "https://stackoverflow.com/questions/55163795/use-int-to-return-specific-tuples-in-list-causes-overflow/55163869#55163869", "title": "Use Int to return specific tuples in list causes overflow", "body": "<p>This is not \u201coverflow\u201d, it's infinite recursion. note that</p>\n\n<pre><code>listTuples x ((p,q,r) : ys)\n    = listTuples x ((p,q,r) : ys)\n    = listTuples x ((p,q,r) : ys)\n    = ...\n</code></pre>\n\n<p>I reckon what you want it this:</p>\n\n<pre><code>listTuples x ((p,q,r) : ys)\n | x == p    = (p,q,r) : listTuples x ys\n | otherwise = listTuples x ys\n</code></pre>\n\n<p>As Daniel Wagner commented, a better way of writing this function is</p>\n\n<pre><code>   filter (\\(p,_,_) -&gt; x==p)\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user9660393"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 48, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1552572964, "creation_date": 1552570084, "last_edit_date": 1552571336, "question_id": 55163795, "link": "https://stackoverflow.com/questions/55163795/use-int-to-return-specific-tuples-in-list-causes-overflow", "title": "Use Int to return specific tuples in list causes overflow", "body": "<p>The code should take an Int and compare it to the first Int in listed tuple (the other Ints don't matter) so Int x should compare to the p in ((p,q,r) : ys) and return a list [(p,q,r),(p,q,r)] so long as x == p. The code compiles but it overflows when tested and I'm not sure if it's a syntax issue or if I'm not compensating for the full list.</p>\n\n<pre><code>listTuples :: Int -&gt; [(Int, Int, Int)] -&gt; [(Int,Int,Int)]\nlistTuples x [] = []\nlistTuples x ((p,q,r) : ys)\n | x == p    = listTuples x ((p,q,r) : ys)\n | otherwise = []\n</code></pre>\n\n<p>The test:</p>\n\n<pre><code> listTuples 3 [(3,4,5),(4,3,5),(3,6,7)]\n</code></pre>\n\n<p>Return:</p>\n\n<pre><code> [(3,4,5),(3,6,7)]\n</code></pre>\n"}, {"tags": ["haskell", "path"], "comments": [{"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1552563957, "post_id": 55160781, "comment_id": 97062327, "body": "The point of <code>path</code> is that you care about whether or not a path is relative or absolute. If you don&#39;t, then don&#39;t use it (although most of the time you probably do care, I really can&#39;t think of many scenarios where you genuinely want a mix of relative and absolute paths)"}, {"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "reply_to_user": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1552564636, "post_id": 55160781, "comment_id": 97062786, "body": "Use-case is: I retrieve from some DB path which is Dir, but it can be relative or absolute. So, if I want more special type than FilePath/Text I need some info that it&#39;s a dir and not file, so I&#39;ve remembered that <code>Path</code> keeps such information (<code>Dir</code>/<code>File</code>) to distinguish files from dirs. But No type <code>Path {Dir|File}</code> there. And if i need it, I get this useless parameter"}, {"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "reply_to_user": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1552564824, "post_id": 55160781, "comment_id": 97062906, "body": "May be it&#39;s even theoretical question: if you have phantom type <code>T a b c d e</code> and you need some subtype like <code>T a b e</code> in some record with a lot of such fields, what is the most good solution (to avoid boilerplate code and similar problems)?"}, {"owner": {"reputation": 12941, "user_id": 292731, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/e3f90adedab79538799e2375a9731920?s=128&d=identicon&r=PG", "display_name": "Justin L.", "link": "https://stackoverflow.com/users/292731/justin-l"}, "edited": false, "score": 0, "creation_date": 1552966608, "post_id": 55160781, "comment_id": 97200385, "body": "Note that I have a fork of path, with <code>SomeBase</code> that does what you are looking for, <a href=\"https://mstksg.github.io/path/Path-Posix.html#t:SomeBase\" rel=\"nofollow noreferrer\">mstksg.github.io/path/Path-Posix.html#t:SomeBase</a> .  It&#39;s essentially @bergey&#39;s answer.  The fork is here <a href=\"https://github.com/mstksg/path/tree/somebase\" rel=\"nofollow noreferrer\">github.com/mstksg/path/tree/somebase</a>"}, {"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "reply_to_user": {"reputation": 12941, "user_id": 292731, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/e3f90adedab79538799e2375a9731920?s=128&d=identicon&r=PG", "display_name": "Justin L.", "link": "https://stackoverflow.com/users/292731/justin-l"}, "edited": false, "score": 0, "creation_date": 1552980860, "post_id": 55160781, "comment_id": 97204582, "body": "@JustinL. would you explain what is the difference from the original Path?"}, {"owner": {"reputation": 12941, "user_id": 292731, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/e3f90adedab79538799e2375a9731920?s=128&d=identicon&r=PG", "display_name": "Justin L.", "link": "https://stackoverflow.com/users/292731/justin-l"}, "edited": false, "score": 0, "creation_date": 1553581327, "post_id": 55160781, "comment_id": 97425764, "body": "@Paul-AG it&#39;s essentially just an Either between the two paths.  <code>type SomeBase a = Either (Path Abs a) (Path Rel a)</code>"}], "answers": [{"tags": [], "owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "is_accepted": false, "score": 0, "last_activity_date": 1552569334, "creation_date": 1552569334, "answer_id": 55163540, "question_id": 55160781, "link": "https://stackoverflow.com/questions/55160781/how-to-use-well-typed-path-in-some-record/55163540#55163540", "title": "How to use well-typed Path in some record", "body": "<p>If you definitely want to use <code>Path</code>, you can define each field as </p>\n\n<p><code>p1 :: Either (Path Rel Dir) (Path Abs Dir)</code>.</p>\n\n<p>I'd be inclined to define my own <code>newtype Dir = Dir String</code> instead, and move the code to check which it is to the use sites.  Or else to normalize paths sooner.</p>\n"}], "owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 57, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1552569334, "creation_date": 1552561218, "question_id": 55160781, "link": "https://stackoverflow.com/questions/55160781/how-to-use-well-typed-path-in-some-record", "title": "How to use well-typed Path in some record", "body": "<p>I have some record where should be multiple paths/files. Let's suppose I want to use <a href=\"http://hackage.haskell.org/package/path-0.6.1/docs/Path.html\" rel=\"nofollow noreferrer\">Path</a> type for them and they can be relative and absolute in the same time. I can do:</p>\n\n<pre><code>data SomeRecord = SomeRecord {\n  p1 :: forall a. Path a Dir\n ,p2 :: forall a. Path a Dir\n , ...\n}\n</code></pre>\n\n<p>but how to assign some concrete <code>Path</code> to p1, p2, pN when I'll get error about rigid type error. Also I'll need to add different constraints to these p1, p2 declarations (for example, Show...). Another way is:</p>\n\n<pre><code>data SomeRecord a b c d e ... z = SomeRecord {\n  p1  :: Path a Dir\n ,p2  :: Path b Dir\n ...\n ,p26 :: Path z Dir\n}\n</code></pre>\n\n<p>which:</p>\n\n<ul>\n<li>extracts all type parameters to <code>SomeRecord</code></li>\n<li>usage of several <code>SomeRecord</code> in one list now is impossible, so I'll need again to add <code>forall</code> clauses for such lists and to play with constraints</li>\n</ul>\n\n<p>What is the canonical way to do it? To avoid well-typed <code>Path</code> in such context? If it is, does it mean that such types (like <code>Path</code>) are not good for multiple fields in records?</p>\n"}, {"tags": ["haskell", "type-level-computation", "servant"], "comments": [{"owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "edited": false, "score": 0, "creation_date": 1552562361, "post_id": 55155766, "comment_id": 97061339, "body": "What is the compilation error message?"}, {"owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "edited": false, "score": 0, "creation_date": 1552564022, "post_id": 55155766, "comment_id": 97062360, "body": "Btw, please edit your post&#39;a title to express the actual problem"}], "answers": [{"comments": [{"owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "reply_to_user": {"reputation": 1147, "user_id": 4918563, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/726bb0a4339cebbfa272e71a51d340f1?s=128&d=identicon&r=PG&f=1", "display_name": "7puns", "link": "https://stackoverflow.com/users/4918563/7puns"}, "edited": false, "score": 0, "creation_date": 1552597423, "post_id": 55161446, "comment_id": 97083162, "body": "I don&#39;t understand what are you going to achieve at this moment. I thought you were going to generalize the route path"}, {"owner": {"reputation": 1147, "user_id": 4918563, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/726bb0a4339cebbfa272e71a51d340f1?s=128&d=identicon&r=PG&f=1", "display_name": "7puns", "link": "https://stackoverflow.com/users/4918563/7puns"}, "edited": false, "score": 0, "creation_date": 1552598880, "post_id": 55161446, "comment_id": 97083795, "body": "I have edited the original question. I hope it is clearer now. Yes I want to generalize the route path. Your solution is what I used which compiles fine. The problem is that I have to repeat several of these AppRoutes and I am looking for a way to eliminate this duplication."}, {"owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "reply_to_user": {"reputation": 1147, "user_id": 4918563, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/726bb0a4339cebbfa272e71a51d340f1?s=128&d=identicon&r=PG&f=1", "display_name": "7puns", "link": "https://stackoverflow.com/users/4918563/7puns"}, "edited": false, "score": 0, "creation_date": 1552599733, "post_id": 55161446, "comment_id": 97084075, "body": "I think my solution actually solves your problem. <code>Capture</code> will take any path in its place (preceded by <code>:</code>) and pass it as an argument to your endpoint \u2013 which may ignore it. You don&#39;t need to replicate this <code>AppRoute</code>. I have edited my answer to show the example. Please tell me whether this works for you."}, {"owner": {"reputation": 1147, "user_id": 4918563, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/726bb0a4339cebbfa272e71a51d340f1?s=128&d=identicon&r=PG&f=1", "display_name": "7puns", "link": "https://stackoverflow.com/users/4918563/7puns"}, "edited": false, "score": 0, "creation_date": 1552601366, "post_id": 55161446, "comment_id": 97084622, "body": "So now I can confirm that you are right. Thanks a lot. Yours has been very helpful."}, {"owner": {"reputation": 1147, "user_id": 4918563, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/726bb0a4339cebbfa272e71a51d340f1?s=128&d=identicon&r=PG&f=1", "display_name": "7puns", "link": "https://stackoverflow.com/users/4918563/7puns"}, "edited": false, "score": 0, "creation_date": 1552601762, "post_id": 55161446, "comment_id": 97084735, "body": "The only reason I didn&#39;t use a type alias is because it didn&#39;t occur to me. I am still learning."}], "tags": [], "owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "is_accepted": true, "score": 2, "last_activity_date": 1552599540, "last_edit_date": 1552599540, "creation_date": 1552563140, "answer_id": 55161446, "question_id": 55155766, "link": "https://stackoverflow.com/questions/55155766/how-to-create-route-that-will-trigger-on-any-path-in-servant/55161446#55161446", "title": "How to create route that will trigger on any path in Servant?", "body": "<p>You may use <code>Capture</code> to capture any path. However, it will need to be preceded by <code>:</code> char. So for example</p>\n\n<pre><code>type AppRoute = Capture \"routePath\" String :&gt; Get '[HTML] RawHtml\n\ntype ServerAPI =\n    Get '[HTML] RawHtml\n    :&lt;|&gt; UserAPI\n    :&lt;|&gt; AdminAPI\n    :&lt;|&gt; AppRoute\n</code></pre>\n\n<p>Now, <code>AppRoute</code> will trigger on <code>yourserver.com/:thisIsMyPath/</code> and pass <code>\"thisIsMyPath\"</code> as an argument for the endpoint. I have currently no idea how to bypass this <code>:</code>. Assuming that <code>html</code> is an endpoint that won't depend on given path at this moment, you may define your whole server as</p>\n\n<pre><code>server :: Server ServerAPI\nserver = html\n  :&lt;|&gt; userServer\n  :&lt;|&gt; adminServer\n  :&lt;|&gt; const html\n</code></pre>\n\n<p>You may read about it <a href=\"https://haskell-servant.readthedocs.io/en/stable/tutorial/ApiType.html\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<hr>\n\n<p>Btw, why not use <code>type</code> alias instead of taking tanky type families? In my Servant apps I usually do</p>\n\n<pre><code>type AppRoute (x :: Symbol) = x :&gt; Get '[HTML] RawHtml\n</code></pre>\n\n<p>Which works perfectly.</p>\n"}, {"tags": [], "owner": {"reputation": 104, "user_id": 3185654, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/33cod.jpg?s=128&g=1", "display_name": "Twizty", "link": "https://stackoverflow.com/users/3185654/twizty"}, "is_accepted": false, "score": 0, "last_activity_date": 1565548001, "creation_date": 1565548001, "answer_id": 57452515, "question_id": 55155766, "link": "https://stackoverflow.com/questions/55155766/how-to-create-route-that-will-trigger-on-any-path-in-servant/57452515#57452515", "title": "How to create route that will trigger on any path in Servant?", "body": "<p>In case someone is still looking for an answere, there is another way to capture any route. Take a look at <a href=\"http://hackage.haskell.org/package/servant-0.16.2/docs/Servant-API-Capture.html#t:CaptureAll\" rel=\"nofollow noreferrer\">CaptureAll</a> type</p>\n"}], "owner": {"reputation": 1147, "user_id": 4918563, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/726bb0a4339cebbfa272e71a51d340f1?s=128&d=identicon&r=PG&f=1", "display_name": "7puns", "link": "https://stackoverflow.com/users/4918563/7puns"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 142, "favorite_count": 0, "accepted_answer_id": 55161446, "answer_count": 2, "score": 3, "last_activity_date": 1565548001, "creation_date": 1552542660, "last_edit_date": 1552629072, "question_id": 55155766, "link": "https://stackoverflow.com/questions/55155766/how-to-create-route-that-will-trigger-on-any-path-in-servant", "title": "How to create route that will trigger on any path in Servant?", "body": "<p>I have a type level function (aka type family) in a Haskell Servant App which takes a Symbol and produces a Type (Route) i.e.</p>\n\n<pre><code>type family AppRoute (x :: Symbol) where\n    AppRoute x = x :&gt; Get '[HTML] RawHtml\n</code></pre>\n\n<p>This is expected to be used in an API:</p>\n\n<pre><code>type ServerAPI = \n    Get '[HTML] RawHtml \n    :&lt;|&gt; UserAPI\n    :&lt;|&gt; AdminAPI\n    :&lt;|&gt; AppRoute \"about\" \n    :&lt;|&gt; AppRoute \"contact\" \n    :&lt;|&gt; AppRoute \"services\"\n    :&lt;|&gt; AppRoute \"blog\"\n    :&lt;|&gt; AppRoute \"products\"\n</code></pre>\n\n<p>The corresponding server function is</p>\n\n<pre><code>server :: Server ServerAPI\nserver = \n    html\n    :&lt;|&gt; userServer\n    :&lt;|&gt; adminServer\n    :&lt;|&gt; html\n    :&lt;|&gt; html\n    :&lt;|&gt; html\n    :&lt;|&gt; html\n    :&lt;|&gt; html\n</code></pre>\n\n<p>Essentially all the AppRoutes go to the same endpoint (raw html file). Is there a way to eliminate the duplication (referring to the last five routes) by writing something like (this does not compile)</p>\n\n<pre><code>type family AppRoute where\n    AppRoute = String :&gt; Get '[HTML] RawHtml\n\ntype ServerAPI =\n    Get '[HTML] RawHtml\n    :&lt;|&gt; UserAPI\n    :&lt;|&gt; AdminAPI\n    :&lt;|&gt; AppRoute _  -- * the problem is here. One function is needed here\n</code></pre>\n\n<p>with a corresponding server</p>\n\n<pre><code>server :: Server ServerAPI\nserver = \n    html\n    :&lt;|&gt; userServer\n    :&lt;|&gt; adminServer\n    :&lt;|&gt; html\n</code></pre>\n\n<p>So in effect, AppRoutes is a type level function that takes any string and returns a route.</p>\n\n<p>In summary, instead of writing</p>\n\n<pre><code>:&lt;|&gt; AppRoute \"about\" :&lt;|&gt; AppRoute \"contact\" :&lt;|&gt; AppRoute \"services\" :&lt;|&gt; AppRoute \"products\"\n</code></pre>\n\n<p>I want to be able to write just\n    :&lt;|> AppRoute _</p>\n"}, {"tags": ["typescript", "haskell", "types"], "comments": [{"owner": {"reputation": 431, "user_id": 3042847, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/20812bf59589551344aeae214de49f6a?s=128&d=identicon&r=PG&f=1", "display_name": "xgrommx", "link": "https://stackoverflow.com/users/3042847/xgrommx"}, "edited": false, "score": 1, "creation_date": 1552551709, "post_id": 55155151, "comment_id": 97054806, "body": "As some idea you can use this one <a href=\"https://github.com/gcanti/newtype-ts\" rel=\"nofollow noreferrer\">github.com/gcanti/newtype-ts</a>"}], "answers": [{"comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 2, "creation_date": 1552565234, "post_id": 55159223, "comment_id": 97063188, "body": "Calling those &quot;implementation details&quot; is understating the situation.  There is a real operational difference between a pattern match on a newtype constructor and a data constructor that follows directly from the semantic differences. A case match on a newtype constructor is a no-op.  A case match on a data constructor forces evaluation, even if there&#39;s only a single constructor for the type.  This difference is huge for getting the evaluation properties correct in cases that care about them."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1552565373, "post_id": 55159223, "comment_id": 97063274, "body": "@Carl That&#39;s a detail relevant in some circumstances in Haskell. It&#39;s not really relevant to a discussion about how to do the same thing in Typescript."}, {"owner": {"reputation": 441, "user_id": 7919572, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c7180a29a1e3cbca63bc706c4c7414a6?s=128&d=identicon&r=PG&f=1", "display_name": "Marc", "link": "https://stackoverflow.com/users/7919572/marc"}, "edited": false, "score": 0, "creation_date": 1552578973, "post_id": 55159223, "comment_id": 97073181, "body": "I suppose that&#39;s the best way. Too bad that it all has to be hidden behind a class so you have to mix up modules and classes when doing functional programming in Javascript. I&#39;d rather skip classes altogether there."}, {"owner": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "edited": false, "score": 0, "creation_date": 1615281251, "post_id": 55159223, "comment_id": 117636194, "body": "&quot;a class with a single private field is more or less the same thing&quot; - that&#39;s glossing over the fact that the most common use of newtypes is for numbers (e.g. for units or different ID types) and using a struct gives up value semantics and arithmetic operators which is a pretty huge disadvantage."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "reply_to_user": {"reputation": 67096, "user_id": 265521, "user_type": "registered", "accept_rate": 58, "profile_image": "https://www.gravatar.com/avatar/34a66330977044d70165288c56740d4b?s=128&d=identicon&r=PG", "display_name": "Timmmm", "link": "https://stackoverflow.com/users/265521/timmmm"}, "edited": false, "score": 0, "creation_date": 1615284763, "post_id": 55159223, "comment_id": 117637666, "body": "@Timmmm You do have value semantics if you do it right, and lack of infix operators is, at worst, a minor nuisance. Especially since in many cases (such as IDs) you&#39;ll normally not want most of them anyway."}], "tags": [], "owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "is_accepted": true, "score": 3, "last_activity_date": 1552556922, "last_edit_date": 1552556922, "creation_date": 1552556508, "answer_id": 55159223, "question_id": 55155151, "link": "https://stackoverflow.com/questions/55155151/haskells-newtypes-in-typescript/55159223#55159223", "title": "Haskell&#39;s newtypes in Typescript?", "body": "<p>FWIW a class with a single private field is more or less the same thing, so it\u2019s not like a keyword is strictly <em>needed</em> for this.</p>\n\n<p>Also note that the point of <code>newtype</code> in Haskell isn\u2019t really encapsulation, although you can use it that way - it\u2019s to enable having different types for the same structural representation, to prevent accidental misuse and to allow type based ad hoc polymorphism via type classes. Haskell\u2019s <code>data</code> works pretty much the same way, other than implementation details the difference between <code>newtype A = A X</code> and <code>data A = A X</code> is more philosophical than technical.</p>\n"}], "owner": {"reputation": 441, "user_id": 7919572, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c7180a29a1e3cbca63bc706c4c7414a6?s=128&d=identicon&r=PG&f=1", "display_name": "Marc", "link": "https://stackoverflow.com/users/7919572/marc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 712, "favorite_count": 1, "accepted_answer_id": 55159223, "answer_count": 1, "score": 6, "last_activity_date": 1552556922, "creation_date": 1552539068, "question_id": 55155151, "link": "https://stackoverflow.com/questions/55155151/haskells-newtypes-in-typescript", "title": "Haskell&#39;s newtypes in Typescript?", "body": "<p>In Haskell we can declare newtypes that allow us to hide access to the underlying data types. This allows us to create safer APIs in modules by not exposing things like the underlying array (making it impossible for the user of the library to get something out of bounds).</p>\n\n<p>Is there something similar to newtypes in Typescript?</p>\n"}]