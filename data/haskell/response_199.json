[{"tags": ["haskell", "applicative"], "comments": [{"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 1, "creation_date": 1541025072, "post_id": 53092246, "comment_id": 93082369, "body": "Wouldn&#39;t <code>Prod</code> need to be a monad for you to use it with <code>WrappedMonad</code>?"}, {"owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 0, "creation_date": 1541036441, "post_id": 53092246, "comment_id": 93084935, "body": "Isn&#39;t everything already an iterator in Haskell? For example <code>last [1 .. n]</code> will iterate over the list and not generate the entire list."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 1, "creation_date": 1541082189, "post_id": 53092246, "comment_id": 93101768, "body": "@Elmex80s I think you are confusing two different concepts, what Python would call an iterable and an iterator. Once contains values that can be iterated over; the other provides the interface for actually doing the iteration. For example, <code>x = list(range(100))</code> is an iterable, but <code>i1 = iter(x)</code> and <code>i2 = iter(x)</code> are two independent iterators. The number of times you call <code>next(i1)</code> does not affect the return value of the next call to <code>next(i2)</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1541082313, "post_id": 53092246, "comment_id": 93101827, "body": "(It&#39;s a subtle distinction, as there are many examples in Python where you get an iterator for an iterable implicitly. <code>for i in x</code> first creates a new iterator for <code>x</code>, then uses that to iterate over the values in <code>x</code>.)"}], "answers": [{"comments": [{"owner": {"reputation": 125, "user_id": 9854808, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/SOLEI.jpg?s=128&g=1", "display_name": "Thomas Mahler", "link": "https://stackoverflow.com/users/9854808/thomas-mahler"}, "edited": false, "score": 0, "creation_date": 1541082553, "post_id": 53092963, "comment_id": 93101967, "body": "Thanks a ton! You were right, I got confused about the precedence of \ud835\udd44. In addition I also confused the \u22a1 (composition) operator with \u22a0 (product)"}], "tags": [], "owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "is_accepted": true, "score": 10, "last_activity_date": 1541026733, "last_edit_date": 1541026733, "creation_date": 1541025865, "answer_id": 53092963, "question_id": 53092246, "link": "https://stackoverflow.com/questions/53092246/trying-to-implement-the-essence-of-the-iterator-pattern/53092963#53092963", "title": "Trying to implement &quot;the essence of the iterator pattern&quot;", "body": "<p>I think you may be mis-translating between the infix type operators used in the paper with the prefix type constructors in your definitions. I say this because the paper contains</p>\n\n<pre><code>wciBody :: Char \u2192 (\ud835\udd44 (State Bool) \u22a1 Count) a\n</code></pre>\n\n<p>You have translated this as </p>\n\n<pre><code>wciBody :: Char -&gt; (WrappedMonad (Prod (State Bool) Count)) a\n</code></pre>\n\n<p>which I don't think makes sense: <code>Prod x y</code> has no Monad instance, so it makes no sense to wrap it in WrapMonad. Rather, you are intended to read the \u22a1 character as separating its entire left half (<code>\ud835\udd44 (State Bool)</code>) from its right half (<code>Count</code>), similar to how value-level operators in Haskell parse:</p>\n\n<pre><code>wciBody :: Char -&gt; Prod (WrappedMonad (State Bool)) Count a\n</code></pre>\n\n<p>This makes more sense, doesn't it? Prod now takes three arguments, the first two of which are each of kind <code>* -&gt; *</code>, and WrappedMonad's argument is clearly a monad. Does this change get you back on track?</p>\n"}, {"tags": [], "owner": {"reputation": 125, "user_id": 9854808, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/SOLEI.jpg?s=128&g=1", "display_name": "Thomas Mahler", "link": "https://stackoverflow.com/users/9854808/thomas-mahler"}, "is_accepted": false, "score": 1, "last_activity_date": 1541150749, "last_edit_date": 1541150749, "creation_date": 1541090957, "answer_id": 53105754, "question_id": 53092246, "link": "https://stackoverflow.com/questions/53092246/trying-to-implement-the-essence-of-the-iterator-pattern/53105754#53105754", "title": "Trying to implement &quot;the essence of the iterator pattern&quot;", "body": "<p>Thanks to the hint by amalloy I finally got the example code working.</p>\n\n<p>Here is what I came up with:</p>\n\n<pre><code>module Iterator where\nimport Data.Functor.Product             -- Product of Functors\nimport Data.Functor.Compose             -- Composition of Functors\nimport Data.Functor.Const               -- Const Functor\nimport Data.Functor.Identity            -- Identity Functor (needed for coercion)\nimport Data.Monoid (Sum (..), getSum)   -- Sum Monoid for Integers\nimport Control.Monad.State.Lazy         -- State Monad\nimport Control.Applicative              -- WrappedMonad\nimport Data.Coerce (coerce)             -- Coercion magic\n\n-- Functor Product\n(&lt;#&gt;) :: (Functor m, Functor n) =&gt; (a -&gt; m b) -&gt; (a -&gt; n b) -&gt; (a -&gt; Product m n b)\n(f &lt;#&gt; g) y = Pair (f y) (g y) \n\n-- Functor composition\n(&lt;.&gt;) :: (Functor m, Functor n) =&gt; (b -&gt; n c) -&gt; (a -&gt; m b) -&gt; (a -&gt; (Compose m n) c)\nf &lt;.&gt; g = Compose . fmap f . g\n\ntype Count = Const (Sum Integer)\n\ncount :: a -&gt; Count b\ncount _ = Const 1\n\ncciBody :: Char -&gt; Count a\ncciBody = count\n\ncci :: String -&gt; Count [a]\ncci = traverse cciBody\n\nlciBody :: Char -&gt; Count a\nlciBody c = Const $ test (c == '\\n')\n\ntest :: Bool -&gt; Sum Integer\ntest b = Sum $ if b then 1 else 0\n\nlci :: String -&gt; Count [a]\nlci = traverse lciBody\n\nclci :: String -&gt; Product Count Count [a]\nclci = traverse (cciBody &lt;#&gt; lciBody)\n\nwciBody :: Char -&gt; Compose (WrappedMonad (State Bool)) Count a\nwciBody c =  coerce (updateState c) where\n    updateState :: Char -&gt; Bool -&gt; (Sum Integer, Bool)\n    updateState c w = let s = not(isSpace c) in (test (not w &amp;&amp; s), s)\n    isSpace :: Char -&gt; Bool\n    isSpace c = c == ' ' || c == '\\n' || c == '\\t'\n\nwci :: String -&gt; Compose (WrappedMonad (State Bool)) Count [a]\nwci = traverse wciBody\n\nclwci :: String -&gt; (Product (Product Count Count) (Compose (WrappedMonad (State Bool)) Count)) [a]\nclwci = traverse (cciBody &lt;#&gt; lciBody &lt;#&gt; wciBody)\n\n-- | the actual wordcount implementation. \n--   for any String a triple of linecount, wordcount, charactercount is returned\nwc :: String -&gt; (Integer, Integer, Integer)\nwc str = \n    let raw = clwci str\n        cc  = coerce $ pfst (pfst raw)\n        lc  = coerce $ psnd (pfst raw)\n        wc  = coerce $ evalState (unwrapMonad (getCompose (psnd raw))) False\n    in (lc,wc,cc)\n\npfst :: Product f g a -&gt; f a\npfst (Pair fst _) = fst\npsnd :: Product f g a -&gt; g a\npsnd (Pair _ snd) = snd\n\nmain = do\n    putStrLn \"computing three counters in one go\"\n    print $ wc \"hello \\n world\"\n</code></pre>\n"}], "owner": {"reputation": 125, "user_id": 9854808, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/SOLEI.jpg?s=128&g=1", "display_name": "Thomas Mahler", "link": "https://stackoverflow.com/users/9854808/thomas-mahler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 247, "favorite_count": 0, "accepted_answer_id": 53092963, "answer_count": 2, "score": 4, "last_activity_date": 1541150749, "creation_date": 1541021600, "last_edit_date": 1541022873, "question_id": 53092246, "link": "https://stackoverflow.com/questions/53092246/trying-to-implement-the-essence-of-the-iterator-pattern", "title": "Trying to implement &quot;the essence of the iterator pattern&quot;", "body": "<p>I came across the paper \"<a href=\"https://www.cs.ox.ac.uk/jeremy.gibbons/publications/iterator.pdf\" rel=\"nofollow noreferrer\">https://www.cs.ox.ac.uk/jeremy.gibbons/publications/iterator.pdf</a>\" which has code examples in quite an abstract pseudo haskell syntax.</p>\n\n<p>I'm struggeling to implement the example from section 6.2. in real haskell.\nThis is how far I came:</p>\n\n<pre><code>module Iterator where\nimport Data.Functor.Const               -- for Const\nimport Data.Monoid (Sum (..), getSum)   -- for Sum\nimport Control.Monad.State.Lazy         -- for State\nimport Control.Applicative              -- for WrappedMonad\n\n\ndata Prod m n a = Prod {pfst:: m a, psnd:: n a} deriving (Show)\n\ninstance (Functor m, Functor n) =&gt; Functor (Prod m n) where    \nfmap f (Prod m n) = Prod (fmap f m) (fmap f n)\n\ninstance (Applicative m, Applicative n) =&gt; Applicative (Prod m n) where\n    pure x = Prod (pure x) (pure x)\n    mf &lt;*&gt; mx = Prod (pfst mf &lt;*&gt; pfst mx) (psnd mf &lt;*&gt; psnd mx)\n\n-- Functor Product\nx :: (Functor m, Functor n) =&gt; (a -&gt; m b) -&gt; (a -&gt; n b) -&gt; (a -&gt; Prod m n b)\n(f `x` g) y = Prod (f y) (g y) \n\n\ntype Count = Const (Sum Integer)\ncount :: a -&gt; Count b\ncount _ = Const 1\n\ncciBody :: Char -&gt; Count a\ncciBody = count\n\ncci :: String -&gt; Count [a]\ncci = traverse cciBody\n\nlciBody :: Char -&gt; Count a\nlciBody c = Const (Sum $ test (c == '\\n'))\n\ntest :: Bool -&gt; Integer\ntest b = if b then 1 else 0\n\nlci :: String -&gt; Count [a]\nlci = traverse lciBody\n\nclci :: String -&gt; Prod Count Count [a]\nclci = traverse (cciBody `x` lciBody)\n-- up to here the code is working\n\n-- can't get this to compile:\nwciBody :: Char -&gt; (WrappedMonad (Prod (State Bool) Count)) a\nwciBody c =  pure $ state (updateState c) where\n    updateState :: Char -&gt; Bool -&gt; (Integer, Bool)\n    updateState c w = let s = c /= ' ' in (test (not(w &amp;&amp; s)), s)\n\nwci :: String -&gt; (WrappedMonad (Prod (State Bool) Count)) [a]\nwci = traverse wciBody\n\nclwci :: String -&gt; (Prod (Prod Count Count) (WrappedMonad (Prod (State Bool) Count))) [a]\nclwci = traverse (cciBody `x` lciBody `x` wciBody)\n\nstr :: [Char]\nstr = \"hello \\n nice \\t and \\n busy world\"\n\niteratorDemo = do\n    print $ clci str\n    print $ clwci str\n</code></pre>\n\n<p>The problematic spot is wciBody where I have no idea how to implement the \u21d1 function from the paper.\nAny ideas?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 8, "creation_date": 1541017779, "post_id": 53091462, "comment_id": 93079862, "body": "You can add a filter by using a comma, like <code>[x | x &lt;- [0..n], mod x 3 == 0]</code>, but here you can write it like <code>[0, 3 .. n]</code>."}], "answers": [{"tags": [], "owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "is_accepted": false, "score": 8, "last_activity_date": 1541017832, "creation_date": 1541017832, "answer_id": 53091489, "question_id": 53091462, "link": "https://stackoverflow.com/questions/53091462/create-a-list-of-divisible-integers-in-haskell/53091489#53091489", "title": "Create a list of divisible integers in haskell", "body": "<p><code>where</code> doesn't work like that. It's not a filter -- it's locally-scoped definitions.</p>\n\n<p>However, a list comprehension does <em>allow</em> for filters, you've just not put it in the right place.</p>\n\n<pre><code>zeroto :: Int -&gt; [Int]\nzeroto n = [x | x &lt;- [0..n], x `mod` 3 == 0]\n</code></pre>\n\n<p>Alternatively, you could define a filter function in the where block and filter afterwards, but this is kind of silly.</p>\n\n<pre><code>zeroto :: Int -&gt; [Int]\nzeroto n = divisibleByThree [0..n]\n  where divisibleByThree = filter (\\x -&gt; x `mod` 3 == 0)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 3063, "user_id": 439578, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e032fbe640b2234c8dce244907b99eab?s=128&d=identicon&r=PG", "display_name": "Manoj R", "link": "https://stackoverflow.com/users/439578/manoj-r"}, "is_accepted": false, "score": 1, "last_activity_date": 1541050318, "creation_date": 1541050318, "answer_id": 53095663, "question_id": 53091462, "link": "https://stackoverflow.com/questions/53091462/create-a-list-of-divisible-integers-in-haskell/53095663#53095663", "title": "Create a list of divisible integers in haskell", "body": "<p>This is not the best way but using simple recursion it can be done as </p>\n\n<p><code>mod3Arr :: Int -&gt; [Int]\n mod3Arr 0 = [0]<br>\n mod3Arr n | n</code>mod<code>3 == 0 = smallerArr ++ [n]\n           | otherwise = smallerArr\n           where smallerArr = mod3Arr ( n - 1)\n</code></p>\n"}], "owner": {"reputation": 21, "user_id": 10587959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e806b3b8baf41b200287c2eeb544cc2d?s=128&d=identicon&r=PG&f=1", "display_name": "Mr.Hazl", "link": "https://stackoverflow.com/users/10587959/mr-hazl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 90, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1541050318, "creation_date": 1541017682, "last_edit_date": 1541018215, "question_id": 53091462, "link": "https://stackoverflow.com/questions/53091462/create-a-list-of-divisible-integers-in-haskell", "title": "Create a list of divisible integers in haskell", "body": "<p>I'm new to haskell and I'm trying to create an expression, that gives a list of integers from 0 to n, which are divisible by 3. The script I wrote doesn't work and I'm not sure for what reason.  </p>\n\n<pre><code>zeroto :: Int -&gt; [Int]\nzeroto n = [x | x &lt;- [0..n]]\n           where\n             x \"mod\" 3 == 0\n</code></pre>\n"}, {"tags": ["haskell", "types"], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1541029477, "post_id": 53092088, "comment_id": 93083554, "body": "I still have grave reservations about instance resolution for constraint implications. Lots of things that the syntax suggests should work end up not working because GHC reduces the constraint the &quot;wrong&quot; way (for that particular situation)."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 4, "last_activity_date": 1541020696, "creation_date": 1541020696, "answer_id": 53092088, "question_id": 53091011, "link": "https://stackoverflow.com/questions/53091011/why-does-ghci-report-a-constraint-must-be-a-monotype-on-this-instance-declarat/53092088#53092088", "title": "Why does GHCi report &quot;A constraint must be a monotype&quot; on this instance declaration?", "body": "<p>The issue is that, for that to work, the type <code>x</code> in the context should be universally quantified, as in</p>\n\n<pre><code>data I f m = forall x. f x =&gt; I (m x)\n\nderiving instance (forall x. Show x =&gt; Show (m x)) =&gt; Show (I Show m)\n</code></pre>\n\n<p>So, on the left of <code>=&gt;</code> we need a <code>forall x . ...</code>. This was not allowed by GHC, until recently with GHC 8.6.1 and the <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#extension-QuantifiedConstraints\" rel=\"nofollow noreferrer\"><code>QuantifiedConstraints</code> extension</a>.</p>\n"}], "owner": {"reputation": 1474, "user_id": 8025936, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/Kue08.png?s=128&g=1", "display_name": "schuelermine", "link": "https://stackoverflow.com/users/8025936/schuelermine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 120, "favorite_count": 0, "accepted_answer_id": 53092088, "answer_count": 1, "score": 2, "last_activity_date": 1541020696, "creation_date": 1541015625, "question_id": 53091011, "link": "https://stackoverflow.com/questions/53091011/why-does-ghci-report-a-constraint-must-be-a-monotype-on-this-instance-declarat", "title": "Why does GHCi report &quot;A constraint must be a monotype&quot; on this instance declaration?", "body": "<p>I've written the following code</p>\n\n<pre><code>data I f m = forall x. f x =&gt; I (m x)\n\nderiving instance (Show x =&gt; Show (m x)) =&gt; Show (I Show m)\n</code></pre>\n\n<p>with the following extensions:</p>\n\n<pre><code>-XConstrainedClassMethods\n-XConstraintKinds\n-XDataKinds\n-XNoDatatypeContexts\n-XExistentialQuantification\n-XExplicitForAll\n-XExplicitNamespaces\n-XFlexibleInstances\n-XGADTSyntax\n-XGADTs\n-XKindSignatures\n-XMonoLocalBinds\n-XMultiParamTypeClasses\n-XNondecreasingIndentation\n-XPolyKinds\n-XPolymorphicComponents\n-XRank2Types\n-XRankNTypes\n-XStandaloneDeriving\n-XTypeInType\n-XTypeFamilies\n-XTypeOperators\n-XTypeSynonymInstances\n-XUndecidableInstances\n</code></pre>\n\n<p>However, GHCi complains with this error message:</p>\n\n<pre><code>&lt;interactive&gt;:192:19: error:\n    \u2022 Illegal qualified type: Show x =&gt; Show (m x)\n      A constraint must be a monotype\n    \u2022 In the context: (Show x =&gt; Show (m x))\n      While checking an instance declaration\n      In the stand-alone deriving instance for\n        \u2018(Show x =&gt; Show (m x)) =&gt; Show (I Show m)\u2019\n</code></pre>\n\n<p>I find that this should be possible, as it seems to be equivalent to the following:</p>\n\n<pre><code>data I f = forall x. f x =&gt; I x\n\nderiving instance Show (I Show)\n\ninstance Show x =&gt; Show (m x) ...\n</code></pre>\n\n<p>So therefore</p>\n\n<pre><code>instance Show [I Show]\n</code></pre>\n"}, {"tags": ["haskell", "matrix"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1541013263, "post_id": 53090302, "comment_id": 93077858, "body": "Something like <code>createMatrix n xs = take n xs : createMatrix n (drop n xs)</code> would suffice. You don&#39;t need two counters; the other counter is internal to <code>take</code> and <code>drop</code>."}, {"owner": {"reputation": 31, "user_id": 9479606, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d02589d35c70b30e7d2b4865f50066b0?s=128&d=identicon&r=PG&f=1", "display_name": "Fcr", "link": "https://stackoverflow.com/users/9479606/fcr"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1541014187, "post_id": 53090302, "comment_id": 93078271, "body": "Hey! Thanks but I have to solve it without using take and drop!"}], "answers": [{"comments": [{"owner": {"reputation": 31, "user_id": 9479606, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d02589d35c70b30e7d2b4865f50066b0?s=128&d=identicon&r=PG&f=1", "display_name": "Fcr", "link": "https://stackoverflow.com/users/9479606/fcr"}, "edited": false, "score": 0, "creation_date": 1541014582, "post_id": 53090483, "comment_id": 93078479, "body": "Something like this? createMatrix (i, n, (x:y)) = if (i &lt; n) then x : createMatrix (i+1, n, (y)) else [] : createMatrix (0, n, (x:y))"}, {"owner": {"reputation": 1290, "user_id": 5499871, "user_type": "registered", "profile_image": "https://graph.facebook.com/10206799318615183/picture?type=large", "display_name": "Izaak Weiss", "link": "https://stackoverflow.com/users/5499871/izaak-weiss"}, "reply_to_user": {"reputation": 31, "user_id": 9479606, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d02589d35c70b30e7d2b4865f50066b0?s=128&d=identicon&r=PG&f=1", "display_name": "Fcr", "link": "https://stackoverflow.com/users/9479606/fcr"}, "edited": false, "score": 0, "creation_date": 1541089392, "post_id": 53090483, "comment_id": 93105872, "body": "So in this case, you&#39;re adding prepending both x and [] to the beginning of the result list. IF haskell supported heterogeneous lists, you would end up with: <code>[1,2,3,4,5,6,[],7,8,9,10,11,12,[],13,14,15,16,17,18,[]]</code>, but it doesn&#39;t, so this will type error. You need to get the first list out of the recursive result, add x to it, and put it back into the result."}], "tags": [], "owner": {"reputation": 1290, "user_id": 5499871, "user_type": "registered", "profile_image": "https://graph.facebook.com/10206799318615183/picture?type=large", "display_name": "Izaak Weiss", "link": "https://stackoverflow.com/users/5499871/izaak-weiss"}, "is_accepted": false, "score": 2, "last_activity_date": 1541013220, "creation_date": 1541013220, "answer_id": 53090483, "question_id": 53090302, "link": "https://stackoverflow.com/questions/53090302/convert-list-to-matrix-haskell/53090483#53090483", "title": "Convert List to Matrix (Haskell)", "body": "<p>You're always adding an entire new list to your output when you write <code>[x]:createMatrix (...)</code>. And when you do <code>[] ++ createMatrix (...)</code>, you aren't doing anything to your result; <code>concat</code>ing an empty list does nothing.</p>\n\n<p>You want to prepend <code>x</code> to the first list in the result of <code>createMatrix (...)</code>, instead of prepending <code>[x]</code> to the entire result.</p>\n\n<p>In the <code>else</code> case, you want to prepend a new empty list, rather than trying to use <code>++</code>, which concatenates two lists.</p>\n"}, {"tags": [], "owner": {"reputation": 1598, "user_id": 1905334, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/oy40i.png?s=128&g=1", "display_name": "cmdv", "link": "https://stackoverflow.com/users/1905334/cmdv"}, "is_accepted": false, "score": 1, "last_activity_date": 1541015851, "creation_date": 1541015851, "answer_id": 53091059, "question_id": 53090302, "link": "https://stackoverflow.com/questions/53090302/convert-list-to-matrix-haskell/53091059#53091059", "title": "Convert List to Matrix (Haskell)", "body": "<p>An alternate solution that does without the <code>counter</code> and simply splits your list every given <code>n</code>:</p>\n\n<pre><code>matrixEvery :: Int -&gt; [a] -&gt; [[a]]\nmatrixEvery _ [] = []\nmatrixEvery n xs = as : matrixEvery n bs\n  where (as,bs) = matrixEvery n xs\n</code></pre>\n\n<p>Recursion is being used instead of passing around a counter.\nThe only downfall is you if you want to make your matrices all of equal sizes this won't work but get's you closer :)</p>\n"}], "owner": {"reputation": 31, "user_id": 9479606, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d02589d35c70b30e7d2b4865f50066b0?s=128&d=identicon&r=PG&f=1", "display_name": "Fcr", "link": "https://stackoverflow.com/users/9479606/fcr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 641, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1541015851, "creation_date": 1541012447, "question_id": 53090302, "link": "https://stackoverflow.com/questions/53090302/convert-list-to-matrix-haskell", "title": "Convert List to Matrix (Haskell)", "body": "<p>I'm trying to convert a list to an array (list of lists) from a function that receives an Int (i) that is a counter that always starts at 0, another Int (n) that is the length of each row and the list that I have to convert to matrix.</p>\n\n<pre><code>createMatrix :: (Int, Int, [Int]) -&gt; [[Int]]\ncreateMatrix (i, n, ([])) = []\ncreateMatrix (i, n, (x:y)) = if (i &lt; n) then [x] : createMatrix (i+1, n, (y))\n                            else  [] ++ createMatrix (0, n, (x:y))\n</code></pre>\n\n<p>This gives me as output:\n\u00a0</p>\n\n<pre><code>[[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18]]\n</code></pre>\n\n<p>when it should be something like:\n\u00a0</p>\n\n<pre><code>[[1,2,3,4,5,6],[7,8,9,10,11,12],[13,14,15,16,17,18]]\n</code></pre>\n\n<p>in case n is 6</p>\n\n<p>Does anyone have an idea that I may be failing? I tried several things and found no solution.</p>\n\n<p>Thanks</p>\n"}, {"tags": ["haskell", "types", "binary-tree", "graph-theory"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 2, "creation_date": 1541006101, "post_id": 53088261, "comment_id": 93074511, "body": "It is not a tree ora non-tree because a picture on a piece of paper insinuates so. Why do you think you can use a2 just once in the picture? If you change your program such that all your nodes contain the number 42, would you draw 42 once or 4 times? There&#39;s no substantial difference between built-in and user-defined data types, so 42 is on equal standing with Leaf 42. In order to demonstrate that this is not a tree, you need to produce <i>a Haskell program</i> that detects this &quot;cycle&quot;. And you simply can&#39;t. The semantics of Haskell doesn&#39;t allow such a program to exist."}, {"owner": {"reputation": 549, "user_id": 7826146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a95fdc5b2dadeccfd1047ab1dc58c8b5?s=128&d=identicon&r=PG&f=1", "display_name": "Vladimir", "link": "https://stackoverflow.com/users/7826146/vladimir"}, "reply_to_user": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1541049882, "post_id": 53088261, "comment_id": 93087434, "body": "thanks a lot, guys! I can see now what was my misunderstanding!"}], "answers": [{"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 8, "last_activity_date": 1541004728, "creation_date": 1541004728, "answer_id": 53088469, "question_id": 53088261, "link": "https://stackoverflow.com/questions/53088261/tree-or-not-haskell-type-understanding/53088469#53088469", "title": "Tree or not (Haskell type understanding)", "body": "<p>The short answer is that conceptually, <code>a2</code> \"is\" a <code>Tree a</code>, not a reference to a <code>Tree a</code>. In that sense, <code>a6</code> really looks like</p>\n\n<pre><code>          a6\n       /      \\\n     a4        a5\n    /   \\    /    \\\n  a1   a2   a2    a3\n</code></pre>\n\n<p>that is, there are two \"copies\" of <code>a2</code> in the tree.</p>\n\n<p>Practically speaking, since all the values are immutable, the implementation can use the same memory to represent both the right child of <code>a4</code> and the left child of <code>a5</code>, but the two nodes remain distinct at the level of abstraction represented by the <code>Tree a</code> type.</p>\n\n<p>In order to actually have a cycle, there needs to be some notion of being able to reach both <code>a4</code> and <code>a5</code> from <code>a2</code>, and this type doesn't provide a representation for any such child-to-parent links, which makes it impossible to tell if <code>a4</code>'s left child and <code>a5</code>'s right child are the <em>same</em> node, or two different nodes that look exactly alike. For this data type, the distinction simply does not exist.</p>\n"}, {"comments": [{"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1541011782, "post_id": 53088939, "comment_id": 93077259, "body": "The A in DAG is &quot;acyclic&quot; - you don&#39;t mean it&#39;s a DAG with a cycle, but rather a DAG wherein one node has two parents. Its memory representation is probably not a tree, but its semantic value is of course still a tree, as you say. At any rate neither of them has a cycle."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1541012026, "post_id": 53088939, "comment_id": 93077361, "body": "@amalloy Good point. I mean that the DAG, when transformed into an <i>undirected</i> graph, has a cycle. I used the term &quot;cycle&quot; since the OP did that in the question for the same notion, so to be more understandable to the OP. I&#39;ll add more detail."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 5, "last_activity_date": 1541012136, "last_edit_date": 1541012136, "creation_date": 1541006545, "answer_id": 53088939, "question_id": 53088261, "link": "https://stackoverflow.com/questions/53088261/tree-or-not-haskell-type-understanding/53088939#53088939", "title": "Tree or not (Haskell type understanding)", "body": "<p>We should distinguish between the <em>value</em> of an expression, and its memory representation.</p>\n\n<p>For instance, both these expressions have the same <em>value</em>:</p>\n\n<pre><code>e1 = (\"Hello\", \"Hello\")\ne2 = let s = \"Hello\" in (s, s)\n</code></pre>\n\n<p>Indeed, in Haskell there is no way to distinguish between the results of the evaluation of the expressions above. They are semantically equivalent.</p>\n\n<p>A Haskell implementation (e.g. GHC) is free to represent those values in memory in any way that does not break the semantics. For instance:</p>\n\n<ol>\n<li>It might store the string <code>\"Hello\"</code> twice in memory, and then use a pair of pointers <code>(p1, p2)</code>. </li>\n<li>It might store the string <code>\"Hello\"</code> once in memory, and then use a pair of pointers <code>(p, p)</code>.</li>\n</ol>\n\n<p>Note that both representations could, in theory, be used for any one of the expressions <code>e1,e2</code> above. In practice, GHC will use the former for <code>e2</code> and the latter for <code>e1</code>, but that's not important.</p>\n\n<p>In your trees, the same issue arises. The value of your <code>a6</code> is a tree. GHC probably represents that tree as a non-tree DAG (i.e. a DAG which, if transformed into an undirected graph, has a cycle), but it does not matter, it's only an implementation detail. The important aspect is that such representation respects the semantics of a tree.</p>\n\n<p>One might then wonder why a DAG representation is sound if the value is a tree. This holds because in Haskell we can not compare the underlying \"references\" <code>p</code> used by GHC. If we had a function <code>comparePtr :: a -&gt; a -&gt; Bool</code> which compares such references we could distinguish between <code>e1</code> and <code>e2</code> by using <code>comparePtr (fst e) (snd e)</code> for <code>e</code> between <code>e1</code>,<code>e2</code>. That would horribly break the soundness of the implementation. In Haskell we do not have that, though.</p>\n\n<p>(Well, technically, there is an <code>unsafe</code> function doing that, but <code>unsafe</code> functions should never be used in \"normal\" code. We usually pretend those do not exist.)</p>\n"}], "owner": {"reputation": 549, "user_id": 7826146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a95fdc5b2dadeccfd1047ab1dc58c8b5?s=128&d=identicon&r=PG&f=1", "display_name": "Vladimir", "link": "https://stackoverflow.com/users/7826146/vladimir"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 173, "favorite_count": 0, "accepted_answer_id": 53088469, "answer_count": 2, "score": 4, "last_activity_date": 1541096597, "creation_date": 1541003960, "last_edit_date": 1541096597, "question_id": 53088261, "link": "https://stackoverflow.com/questions/53088261/tree-or-not-haskell-type-understanding", "title": "Tree or not (Haskell type understanding)", "body": "<p>In \"A Gentle Introduction to Haskell\" we have such declaration of Tree's type:</p>\n\n<pre><code>data Tree a = Leaf a | Branch (Tree a) (Tree a)\n     deriving (Eq,Ord,Show,Read)\n</code></pre>\n\n<p>Let's to make some values of this type:</p>\n\n<pre><code>a1 = Leaf 1\na2 = Leaf 2\na3 = Leaf 3\na4 = a1 `Branch` a2\na5 = a2 `Branch` a3\na6 = a4 `Branch` a5\n</code></pre>\n\n<p>in ghci:</p>\n\n<pre><code>*Main&gt; :t a6\na6 :: Tree Integer\n</code></pre>\n\n<p>But <code>a6</code> is not Tree at all, see:</p>\n\n<pre><code>      a6\n     / \\\n   a4   a5\n  / \\  /  \\\na1   a2    a3\n</code></pre>\n\n<p>There is a cycle in this graph!\nWhat is wrong? Is type definition of Tree correct?\nOr maybe, I can't catch some mistake in understanding of this example...</p>\n"}, {"tags": ["haskell", "functor"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1540999939, "post_id": 53086998, "comment_id": 93070901, "body": "Because, the <code>&gt;&gt;?</code> operator &quot;unboxes&quot; the value. It does not call <code>f</code> on the <code>Maybe a</code> value, but on <code>v</code> which is &quot;unwrapped&quot; out of the <code>Just</code> constructor."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1541000358, "post_id": 53086998, "comment_id": 93071202, "body": "This is a motivating example for monads (which are introduced in chapter 14; this example comes from chapter 10), since <code>(&gt;&gt;?) :: Maybe a -&gt; (a -&gt; Maybe b) -&gt; Maybe b</code> is just <code>(&gt;&gt;?) = (&gt;&gt;=)</code>, a restriction of the general bind operator to the <code>Maybe</code> type class."}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1541000510, "post_id": 53086998, "comment_id": 93071306, "body": "This indeed taken from <code>chapter 10</code> but what confuses me is that the <code>&gt;&gt;?</code> does not return the unboxed value but returns still a <code>boxed</code> value.So the next method that uses the result has to somehow unbox it."}], "answers": [{"comments": [{"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1541000653, "post_id": 53087214, "comment_id": 93071417, "body": "But you just said that <code>&gt;&gt;?</code> returns a <code>Maybe b</code> and <code>getNat</code> takes a <code>L.ByteString</code> and not a <code>Maybe L.ByteString</code>."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 2, "creation_date": 1541000796, "post_id": 53087214, "comment_id": 93071502, "body": "@BercoviciAdrian: but your <code>getNat</code> does <i>not</i> get the result of the <code>&gt;&gt;?</code>, it is the &quot;second operand&quot;."}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "reply_to_user": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 1, "creation_date": 1541000821, "post_id": 53087214, "comment_id": 93071524, "body": "@BercoviciAdrian Yes, but when you compose the return value with <code>&gt;&gt;? getNat</code>, then <code>getNat</code> sits on the right-hand side of the operator."}], "tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": false, "score": 2, "last_activity_date": 1541000494, "creation_date": 1541000494, "answer_id": 53087214, "question_id": 53086998, "link": "https://stackoverflow.com/questions/53086998/how-is-functor-chaining-done/53087214#53087214", "title": "How is functor chaining done", "body": "<p><code>(&gt;&gt;?)</code> is an <em>infix</em> operator. When used as such, it takes a <code>Maybe a</code> on the left-hand side, and a <code>(a -&gt; Maybe b)</code> function on the right-hand side.</p>\n\n<p><code>getNat</code> fits the right-hand side because it has the type <code>L.ByteString -&gt; Maybe (Int, L.ByteString)</code>. Here, <code>a</code> is <code>L.ByteString</code>, and <code>b</code> is <code>(Int, L.ByteString)</code>.</p>\n\n<p><code>skipSpace</code> also fits the right-hand side of <code>(&gt;&gt;?)</code>. Here, <code>a</code> is <code>(a1, L.ByteString)</code>, and <code>b</code> is <code>(a1, L.ByteString)</code>. (I renamed the type argument in the function to <code>a1</code> as to not confuse it with the <code>a</code> and <code>b</code> from the <code>(&gt;&gt;?)</code> type definition.</p>\n\n<p>Since the return value of the <code>(&gt;&gt;?)</code> operator is <code>Maybe b</code>, you can keep chaining the return value with more <code>(&gt;&gt;?)</code> operators, which is what the example does; it just breaks that chain over multiple lines.</p>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 2, "last_activity_date": 1541002565, "creation_date": 1541002565, "answer_id": 53087841, "question_id": 53086998, "link": "https://stackoverflow.com/questions/53086998/how-is-functor-chaining-done/53087841#53087841", "title": "How is functor chaining done", "body": "<p>Here's a different approach to explain why <code>&gt;&gt;?</code> is useful.</p>\n\n<p>If these were ordinary functions of type <code>a -&gt; b</code>, we could just chain them together using function composition.</p>\n\n<pre><code>f :: a -&gt; b\ng :: b -&gt; c\nh :: c -&gt; d\n\nh . g . f :: a -&gt; d\n</code></pre>\n\n<p>Or introducing a new operator <code>f &gt;&gt;&gt; g = g . f</code> as \"reverse composition\",</p>\n\n<pre><code>f &gt;&gt;&gt; g &gt;&gt;&gt; h :: a -&gt; d\n</code></pre>\n\n<p>However, the <code>Maybe</code> complicates things, because now the return type of one function does not match the input of the next:</p>\n\n<pre><code>f' :: a -&gt; Maybe b\ng' :: b -&gt; Maybe c\nh' :: c -&gt; Maybe d\n\nf' &gt;&gt;&gt; g' &gt;&gt;&gt; h'  -- type check errors\n</code></pre>\n\n<p>However, since <code>Maybe</code> is a functor, we can use <code>fmap</code> to apply <code>g'</code> to the return value of <code>f'</code>.</p>\n\n<pre><code>x :: a\nf' x :: Maybe b\nfmap g' (f' x) :: Maybe (Maybe c)\nfmap h' (fmap g' (f' x)) :: Maybe (Maybe (Maybe d))\n</code></pre>\n\n<p>But the more we do this, the more the wrappers pile up; eventually, we need to try to get the value of type <code>d</code> out from under all the wrappers.</p>\n\n<p>Certain functors allow us to write a function I'll call <code>join</code> that \"reduces\" a layer of wrappers by \"joining\" them together. <code>Maybe</code> is one of those functors:</p>\n\n<pre><code>join :: Maybe (Maybe a) -&gt; Maybe a\njoin Nothing = Nothing\njoin (Just Nothing) = Nothing\njoin (Just (Just x)) = Just x\n</code></pre>\n\n<p>Here, if both wrappers are <code>Just</code>, we eliminate one. If <code>Nothing</code> appears in the pile at all, we return `Nothing. Now, we could write our chained function like</p>\n\n<pre><code>fmap g' (f' x) :: Maybe (Maybe c)\njoin (fmap g' (f' x)) :: Maybe c\nfmap h' (join (fmap g' (f' x))) :: Maybe (Maybe d)\njoin (fmap h' (join (fmap g' (f' x)))) :: Maybe d\n</code></pre>\n\n<p>That's still a bit of boiler plate, but notice that after each call to <code>fmap</code>,\nwe call <code>join</code> on the return value. We can abstract that away using a new operator <code>&gt;&gt;?</code>, which simply maps its right-hand operand over the left-hand operand, then reduces the result.</p>\n\n<pre><code>&gt;&gt;? :: Maybe a -&gt; (a -&gt; Maybe b) -&gt; Maybe b\nm &gt;&gt;? f = join (fmap f m)\n</code></pre>\n\n<p>Using the new operator, we can simplify the long chain of calls to <code>fmap</code> and <code>join</code> to</p>\n\n<pre><code>f' x &gt;&gt;? g' &gt;&gt;? h'\n</code></pre>\n\n<p>It should be easy enough to convince yourself that  <code>Just (f' x) == fmap f' (Just x)</code>, so we can further smooth our chain out to look like</p>\n\n<pre><code>Just x &gt;&gt;? f' &gt;&gt;? g' &gt;&gt;? h'\n</code></pre>\n\n<p>which now looks a <em>lot</em> more like our original composition. </p>\n\n<hr>\n\n<p>When you read Chapter 14 and learn about monads, you'll discover that monads are just the special functors, like <code>Maybe</code>, for which you can implement <code>join</code>. Further, though here we defined <code>&gt;&gt;?</code> in terms of <code>join</code>, the convention in Haskell is to define <code>&gt;&gt;=</code> (<code>??&gt;</code> for <em>any</em> monad, not just <code>Maybe</code>) directly and then define <code>join</code> in terms of <code>&gt;&gt;=</code>. With <code>Maybe</code>, that looks like</p>\n\n<pre><code>&gt;&gt;? :: Maybe a -&gt; (a -&gt; Maybe b) -&gt; Maybe b\nNothing &gt;&gt;? _ = Nothing\n(Just x) &gt;&gt;? f = f x\n\njoin :: Maybe (Maybe a) -&gt; Maybe a\njoin m = m &gt;&gt;? id\n-- join Nothing = Nothing &gt;&gt;? id = Nothing\n-- join (Just Nothing) = (Just Nothing) &gt;&gt;? id = id Nothing = Nothing\n-- join (Just (Just x)) = (Just (Just x)) &gt;&gt;? id = id (Just x) = Just x\n</code></pre>\n"}], "owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 532, "favorite_count": 0, "accepted_answer_id": 53087841, "answer_count": 2, "score": 2, "last_activity_date": 1541002565, "creation_date": 1540999827, "last_edit_date": 1541000684, "question_id": 53086998, "link": "https://stackoverflow.com/questions/53086998/how-is-functor-chaining-done", "title": "How is functor chaining done", "body": "<p>Hello i am reading Real World Haskell and i have stumbled upon this example from <code>Chapter 10 - Parsing a raw PGM file</code> where it explains how to eliminate boilerplate code using functor chaining:</p>\n\n<pre><code>(&gt;&gt;?) :: Maybe a -&gt; (a -&gt; Maybe b) -&gt; Maybe b\nNothing &gt;&gt;? _ = Nothing\nJust v  &gt;&gt;? f = f v\n\n-- L.ByteString -&gt; Maybe (Int, L.ByteString)\ngetNat s = case L8.readInt s of\n             Nothing -&gt; Nothing\n             Just (num,rest)\n                 | num &lt;= 0    -&gt; Nothing\n                 | otherwise -&gt; Just (fromIntegral num, rest)\n\nparseP5_take2 :: L.ByteString -&gt; Maybe (Greymap, L.ByteString)\nparseP5_take2 s =\n    matchHeader (L8.pack \"P5\") s       &gt;&gt;?\n    \\s -&gt; skipSpace ((), s)           &gt;&gt;?\n    (getNat . snd)                    &gt;&gt;?\n    skipSpace                         &gt;&gt;?\n    \\(width, s) -&gt;   getNat s         &gt;&gt;?\n    skipSpace                         &gt;&gt;?\n    \\(height, s) -&gt;  getNat s         &gt;&gt;?\n    \\(maxGrey, s) -&gt; getBytes 1 s     &gt;&gt;?\n    (getBytes (width * height) . snd) &gt;&gt;?\n    \\(bitmap, s) -&gt; Just (Greymap width height maxGrey bitmap, s)\n\nskipSpace :: (a, L.ByteString) -&gt; Maybe (a, L.ByteString)\nskipSpace (a, s) = Just (a, L8.dropWhile isSpace s)\n</code></pre>\n\n<p>I do not understand the following: If the <code>&gt;&gt;?</code> operator takes a <code>Maybe a</code> and applies a method but returns a <code>Maybe b</code> then how come the <code>skipSpace</code> and <code>getNat</code> fit in since both accept an unboxed (non-maybe) <code>argument</code>.<br>So you have a <code>Maybe a</code> and you pass it through a <code>&gt;&gt;?</code> ,it means you will have a <code>Maybe b</code>...when is this <code>Maybe b</code> unboxed to be given to the next method ? ( in our case <code>getNat</code> or <code>skipSpace</code> ?</p>\n\n<p>What i mean is that after each <code>&gt;&gt;?</code> and before each method what you have is a <code>Maybe something</code> ,while the next method is of type  <code>nextmethod::something-&gt;Maybe somethingElse</code>. When is the <code>Maybe something</code> unboxed into <code>something</code> for the method that uses it ?</p>\n\n<p><br><code>method_0   &gt;&gt;? [Maybe something]    method_1 &gt;&gt;? [Maybe somethingElse]  method_2</code><br></p>\n\n<p>So in the <code>[ ]</code> i have written the types that result from <code>&gt;&gt;?</code> just before being given to the methods.<br><code>method_1</code> accepts a <code>something</code> while <code>method_2</code> accepts a <code>somethingElse</code>. Who does the unboxing for these 2 methods?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 25, "user_id": 10438762, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-3w_mOC8QerY/AAAAAAAAAAI/AAAAAAAAAAA/AAN31DWqBKDcCpug3betOpVEt-ioYwfQ_g/mo/photo.jpg?sz=128", "display_name": "Code365", "link": "https://stackoverflow.com/users/10438762/code365"}, "reply_to_user": {"reputation": 35578, "user_id": 3000206, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/BK1fo.jpg?s=128&g=1", "display_name": "Carcigenicate", "link": "https://stackoverflow.com/users/3000206/carcigenicate"}, "edited": false, "score": 0, "creation_date": 1541000626, "post_id": 53086495, "comment_id": 93071392, "body": "@Carcigenicate check the edited code now"}, {"owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "edited": false, "score": 0, "creation_date": 1541013656, "post_id": 53086495, "comment_id": 93078027, "body": "<code>let k = input &lt;- getLine</code> is sintactically wrong. just <code>k &lt;- getLine</code>"}], "answers": [{"comments": [{"owner": {"reputation": 25, "user_id": 10438762, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-3w_mOC8QerY/AAAAAAAAAAI/AAAAAAAAAAA/AAN31DWqBKDcCpug3betOpVEt-ioYwfQ_g/mo/photo.jpg?sz=128", "display_name": "Code365", "link": "https://stackoverflow.com/users/10438762/code365"}, "edited": false, "score": 0, "creation_date": 1541003220, "post_id": 53087308, "comment_id": 93073034, "body": "There is some kind of parse error. That is what I have been getting. parse error on input `=&#39;"}, {"owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "reply_to_user": {"reputation": 25, "user_id": 10438762, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-3w_mOC8QerY/AAAAAAAAAAI/AAAAAAAAAAA/AAN31DWqBKDcCpug3betOpVEt-ioYwfQ_g/mo/photo.jpg?sz=128", "display_name": "Code365", "link": "https://stackoverflow.com/users/10438762/code365"}, "edited": false, "score": 0, "creation_date": 1541013532, "post_id": 53087308, "comment_id": 93077969, "body": "@Code365 when compiling or executing?"}], "tags": [], "owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "is_accepted": true, "score": 2, "last_activity_date": 1541000808, "creation_date": 1541000808, "answer_id": 53087308, "question_id": 53086495, "link": "https://stackoverflow.com/questions/53086495/getting-iput-from-the-user-haskell/53087308#53087308", "title": "Getting iput from the user: Haskell", "body": "<p>Just use <code>getLine</code> as many times you want.</p>\n\n<pre><code>main :: IO ()\nmain = do\n  putStrLn \"Enter a number:\"\n  k &lt;- read &lt;$&gt; getLine \n  putStrLn \"Enter a list of numbers (separated by comma):\"\n  input &lt;- toList &lt;$&gt; getLine\n  print $ check k input  \n</code></pre>\n"}], "owner": {"reputation": 25, "user_id": 10438762, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-3w_mOC8QerY/AAAAAAAAAAI/AAAAAAAAAAA/AAN31DWqBKDcCpug3betOpVEt-ioYwfQ_g/mo/photo.jpg?sz=128", "display_name": "Code365", "link": "https://stackoverflow.com/users/10438762/code365"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 94, "favorite_count": 0, "accepted_answer_id": 53087308, "answer_count": 1, "score": -2, "last_activity_date": 1541000808, "creation_date": 1540998386, "last_edit_date": 1541000587, "question_id": 53086495, "link": "https://stackoverflow.com/questions/53086495/getting-iput-from-the-user-haskell", "title": "Getting iput from the user: Haskell", "body": "<p>This is haskell. The program is alright. I need to do one more thing but I am unable to. In my code the input lets say 17 does not come from the user I initialized it. I have been unable to input the number from the user. That is my specific query</p>\n\n<p><strong>Question is</strong>\nGiven a list of numbers and a number k, return whether any two numbers from the list add up to k. For example, given [10, 15, 3, 7] and k of 17, return true since 10 + 7 is 17.    </p>\n\n<p><strong>Here is the code. I tried something like this</strong></p>\n\n<pre><code>toList :: String -&gt; [Integer]\ntoList input = read (\"[\" ++ input ++ \"]\")\n\n\n\ncheck :: Integer -&gt; [Integer] -&gt; Bool \ncheck k (x:xs) = if ((k-x) `elem` xs) \n         then True\n         else (check k xs)\ncheck k x = False \n\nmain = do\n let k = input &lt;- getLine\n putStrLn \"Enter a list of numbers (separated by comma):\"\n input &lt;- getLine\n print $  (check k  (toList input))\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1540990954, "post_id": 53083848, "comment_id": 93064569, "body": "What you here describe is known as the &quot;Expression problem&quot;: <a href=\"https://en.wikipedia.org/wiki/Expression_problem\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/Expression_problem</a> For a solution in Haskell, see <a href=\"https://people.cs.kuleuven.be/~tom.schrijvers/Research/talks/lhug2.pdf\" rel=\"nofollow noreferrer\">people.cs.kuleuven.be/~tom.schrijvers/Research/talks/lhug2.p&zwnj;&#8203;df</a>"}, {"owner": {"reputation": 3148, "user_id": 2693928, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/f4c1419246c9c4d03a08f7c5db65303e?s=128&d=identicon&r=PG&f=1", "display_name": "user2693928", "link": "https://stackoverflow.com/users/2693928/user2693928"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1540991288, "post_id": 53083848, "comment_id": 93064840, "body": "I understood you type all types and what to do. But this not solve the problem. I want more types to be added from outside the module. I create the library, you use it and you can add more types. Maybe I&#39;m missing something"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1540991368, "post_id": 53083848, "comment_id": 93064889, "body": "well here we add an extra level of &quot;indirection&quot; such that people can plug in their own type with ADTs."}, {"owner": {"reputation": 3148, "user_id": 2693928, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/f4c1419246c9c4d03a08f7c5db65303e?s=128&d=identicon&r=PG&f=1", "display_name": "user2693928", "link": "https://stackoverflow.com/users/2693928/user2693928"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1540991557, "post_id": 53083848, "comment_id": 93065043, "body": "Can you describe it with simple sudo code, I dont understand fully monads, functors and etc. Can you describe the main idea - you can use javacsript code if it is appropriate."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1540992943, "post_id": 53083848, "comment_id": 93066063, "body": "<code>Apple</code>, <code>Orange</code>, and <code>Tomato</code> aren&#39;t types; they are data constructors for a <i>single</i> type. Developers cannot add their own constructors to an existing type."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1540993024, "post_id": 53083848, "comment_id": 93066126, "body": "The only thing resembling the problem you describe would be the case where <code>x</code> is a value of a type that implements a particular type class, but then you can&#39;t pattern match on the value itself; you can only work with it via the methods defined by the type class."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1540993035, "post_id": 53083848, "comment_id": 93066134, "body": "@user2693928: The idea is basically that instead of making a <code>data Fruit = Apple | Orange | Tomato</code>, etc. you make simple types <code>data Apple = Apple</code>, <code>data Orange = Orange</code>, etc. and then you define a &quot;sum type&quot;, so for example <code>Apple + Orange</code>, the advantage is that you can define functions over <i>simply</i> types. So you &quot;lift&quot; the problem one meta-level up. You can make individual <code>instance SomeOperation SomeType</code> objects, and by defining an <code>instance SomeOperation (a + b)</code> that performs the &quot;routing&quot;, you do not have to care much about that anymore. Haskell itself will make sure it is &quot;routed&quot;"}], "answers": [{"comments": [{"owner": {"reputation": 3148, "user_id": 2693928, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/f4c1419246c9c4d03a08f7c5db65303e?s=128&d=identicon&r=PG&f=1", "display_name": "user2693928", "link": "https://stackoverflow.com/users/2693928/user2693928"}, "edited": false, "score": 0, "creation_date": 1541062446, "post_id": 53085120, "comment_id": 93091731, "body": "If this is anti pattern how would I make for example this task. I have some form functions and i have different type of fields (TextField, DropdownField). You can imagine django forms if you like. How would I make another type of field which is not in the framework - for example Autocompleter field or Google Map field. If i use cases in the function i should change the code on the framework. How is the best way to make this work?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 3148, "user_id": 2693928, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/f4c1419246c9c4d03a08f7c5db65303e?s=128&d=identicon&r=PG&f=1", "display_name": "user2693928", "link": "https://stackoverflow.com/users/2693928/user2693928"}, "edited": false, "score": 0, "creation_date": 1541076186, "post_id": 53085120, "comment_id": 93098396, "body": "@user2693928 that it&#39;s an \u201canti-pattern\u201d does not mean you <i>should never use it</i>. Widgets like <code>TextField</code> etc. are indeed something that&#39;s often best represented with covariant-polymorphic OO objects, and thus in Haskell with existentials. But if the class that all those objects belong to has only a method like <code>Int -&gt; IO ()</code>, then there&#39;s not really any use for making different \u201csubclasses\u201d at all \u2013 just make the \u201csuperclass\u201d a <code>data Foo = Foo {execFoo :: Int -&gt; IO ()}</code> structure."}, {"owner": {"reputation": 3148, "user_id": 2693928, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/f4c1419246c9c4d03a08f7c5db65303e?s=128&d=identicon&r=PG&f=1", "display_name": "user2693928", "link": "https://stackoverflow.com/users/2693928/user2693928"}, "edited": false, "score": 0, "creation_date": 1541076359, "post_id": 53085120, "comment_id": 93098491, "body": "Ok, how to solve the issue I described. How to make that new types can be added outside the library. So developer A can add Google Map field with own behaviour, developer B can add ColorField for example ?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 3148, "user_id": 2693928, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/f4c1419246c9c4d03a08f7c5db65303e?s=128&d=identicon&r=PG&f=1", "display_name": "user2693928", "link": "https://stackoverflow.com/users/2693928/user2693928"}, "edited": false, "score": 0, "creation_date": 1541076538, "post_id": 53085120, "comment_id": 93098583, "body": "That&#39;s something you should ask properly in a separate question. Be sure to describe the use-case clear enough, with good, complete code examples."}, {"owner": {"reputation": 3148, "user_id": 2693928, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/f4c1419246c9c4d03a08f7c5db65303e?s=128&d=identicon&r=PG&f=1", "display_name": "user2693928", "link": "https://stackoverflow.com/users/2693928/user2693928"}, "edited": false, "score": 0, "creation_date": 1541079219, "post_id": 53085120, "comment_id": 93100223, "body": "The question is exactly about that"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 3148, "user_id": 2693928, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/f4c1419246c9c4d03a08f7c5db65303e?s=128&d=identicon&r=PG&f=1", "display_name": "user2693928", "link": "https://stackoverflow.com/users/2693928/user2693928"}, "edited": false, "score": 0, "creation_date": 1541079749, "post_id": 53085120, "comment_id": 93100503, "body": "Then it&#39;s not written explicitly enough to make that clear. Do ask another question that focuses on a particular use case."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 3, "last_activity_date": 1540994653, "last_edit_date": 1540994653, "creation_date": 1540994186, "answer_id": 53085120, "question_id": 53083848, "link": "https://stackoverflow.com/questions/53083848/haskell-polymorhpism-problem-in-modules-extending/53085120#53085120", "title": "Haskell polymorhpism problem in modules extending", "body": "<h2>If this were C++ / Java /etc.</h2>\n\n<p>I assume what you mean by all this is the kind of thing OO programmers would solve with a base class and inheritance:</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>class Food {\n private: int i;\n public: virtual void eat() = 0;\n};\n\nclass Apple: public Food {public: void eat(){crunch(i);}};\nclass Orange: public Food {public: void eat(){squeek(i);}};\nclass Tomato: public Food {public: void eat(){splosh(i);}};\n...\nclass Meat: public Food {public: void eat(){malm(i);}};  // added by other developer\n...\n</code></pre>\n\n<p>Now, as a general rule, you should keep in mind that such OO classes are different from Haskell classes and are better represented by variant types instead \u2013 like you assume in your answer.</p>\n\n<h2>The variant type solution</h2>\n\n<pre><code>data Food = Apple Int | Orange Int | Tomato Int\neat :: Food -&gt; IO ()\neat (Apple i) = crunch i\neat (Orange i) = squeek i\neat (Tomato i) = splosh i\n</code></pre>\n\n<p>Variant types are usually easier and safer to work with than inheritance hierarchies, precisely because it is exactly <em>known</em> what constructors may be encountered.</p>\n\n<p>However, the opposite of an \u201copen world\u201d where different new types of objects <em>can</em> be added is definitely a realistic requirement, and this <em>can</em> be done with classes</p>\n\n<h2>The typeclass solution / existentials</h2>\n\n<pre><code>class Edible f where\n  eat :: f -&gt; IO ()\n\ndata Apple = Apple Int\ninstance Edible Apple where eat (Apple i) = crunch i\ndata Orange = Orange Int\ninstance Edible Orange where eat (Orange i) = squeek i\ndata Tomato = Tomato Int\ninstance Edible Tomato where eat (Tomato i) = splosh i\n...\ndata Meat = Meat Int      --- added by other developer\ninstance Edible Meat where eat (Meat i) = malm i\n...\n</code></pre>\n\n<p>The main difference to the variant type is that all the different kinds of <code>Edible</code>s actually have different types, so you can't pass around a list containing, say, both <code>Apple</code>s and <code>Orange</code>s. Well, <em>you can't comp...</em></p>\n\n<p>In OO they're different types as well, however there you can have <em>base class references</em> that actually point to a derived object. Haskell doesn't support this directly, but it there is a GHC extension that does: this is called an <em>existential type</em>, and can be written either</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\ndata Food where\n  Food :: Edible f =&gt; f -&gt; Food\n</code></pre>\n\n<p>or</p>\n\n<pre><code>{-# LANGUAGE ExistentialQuantification, UnicodeSyntax #-}\ndata Food = \u2200 f . Edible f =&gt; Food f\n</code></pre>\n\n<p>Note that this is <a href=\"https://lukepalmer.wordpress.com/2010/01/24/haskell-antipattern-existential-typeclass/\" rel=\"nofollow noreferrer\">somewhat frowned upon</a>, only do it if you're sure it's a good idea for your application.</p>\n\n<h2>The \u201cplain-data object\u201d solution</h2>\n\n<p>If you don't actually need the type distinction, then you should consider whether you actually need any different labels <em>at all</em>. Why not just make it</p>\n\n<pre><code>data Food = Food {eat :: IO ()}\n\napple :: Int -&gt; Food\napple i = Food $ crunch i\norange :: Int -&gt; Food\norange i = Food $ squeek i\ntomato :: Int -&gt; Food\ntomato i = Food $ splosh i\n...\nmeat :: Int -&gt; Food   -- added by other developer\nmeat i = Food $ malm i\n</code></pre>\n\n<p>You could still add another field that says what kind of food you're dealing with</p>\n\n<pre><code>data Food = Food {foodVariety :: String, eat :: IO ()}\n\napple :: Int -&gt; Food\napple i = Food \"apple\" $ crunch i\n</code></pre>\n"}], "owner": {"reputation": 3148, "user_id": 2693928, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/f4c1419246c9c4d03a08f7c5db65303e?s=128&d=identicon&r=PG&f=1", "display_name": "user2693928", "link": "https://stackoverflow.com/users/2693928/user2693928"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 75, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1540994653, "creation_date": 1540990469, "question_id": 53083848, "link": "https://stackoverflow.com/questions/53083848/haskell-polymorhpism-problem-in-modules-extending", "title": "Haskell polymorhpism problem in modules extending", "body": "<p>In Functional programming and Haskell big amount of code is inside functions.</p>\n\n<p>There with if statements (or case):</p>\n\n<p>This is part of the code in some function:</p>\n\n<pre><code>case x of\n    Apple i -&gt; ...\n    Orange i -&gt; ...\n    Tomato i -&gt; ....\n</code></pre>\n\n<p>This works fine but I have a question.</p>\n\n<p>How to solve this problem.</p>\n\n<p>In case this code is used in libraries and every developer can add their own types. </p>\n\n<p>Like Meat, Banana and whatever.</p>\n\n<p>In Haskell way all the types should be descriped in this function.</p>\n\n<p>But that's not possible since I don't know what the developers will add.</p>\n\n<p>Since in haskell I dont have methods in object I cannot put the method on the object itself.</p>\n\n<p>How can this problem be solved. </p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 2194, "user_id": 7940614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b697c574cc5dfb3a4d5e4aff46a1721a?s=128&d=identicon&r=PG&f=1", "display_name": "assembly.jc", "link": "https://stackoverflow.com/users/7940614/assembly-jc"}, "edited": false, "score": 0, "creation_date": 1540970042, "post_id": 53076966, "comment_id": 93053647, "body": "Tips: 1. the input of palindrome function is String not Char, so the type signature is palindrome::String-&gt;[String]. 2. String is not number, cannot compare to Num, you may be need length function. 3. you have defined the ispalindrome funcion, but has not  used in the your code."}, {"owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "edited": false, "score": 0, "creation_date": 1540971008, "post_id": 53076966, "comment_id": 93054039, "body": "Another hint: to test for equality in <code>ispalindrome</code> use <code>==</code> not <code>=</code>. Also you need to pay attention to indentation."}], "answers": [{"comments": [{"owner": {"reputation": 9, "user_id": 10584081, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-nKNzKEnAi5M/AAAAAAAAAAI/AAAAAAAAA9Q/7yQgftkdKyQ/photo.jpg?sz=128", "display_name": "George Brussel", "link": "https://stackoverflow.com/users/10584081/george-brussel"}, "edited": false, "score": 0, "creation_date": 1540972380, "post_id": 53078488, "comment_id": 93054628, "body": "there some issue about in line 3: .hs:3:1: error: parse error on input \u2018where\u2019   | 3 | where   | ^^^^^"}, {"owner": {"reputation": 9, "user_id": 10584081, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-nKNzKEnAi5M/AAAAAAAAAAI/AAAAAAAAA9Q/7yQgftkdKyQ/photo.jpg?sz=128", "display_name": "George Brussel", "link": "https://stackoverflow.com/users/10584081/george-brussel"}, "edited": false, "score": 0, "creation_date": 1540972947, "post_id": 53078488, "comment_id": 93054893, "body": "ok, this issue above fixed by indetation, but here something with &#39;if&#39;-function:        6:59: error: parse error on input \u2018if\u2019   | 6 |         isPalindrome&#39; (x:xs) (y:ys) = isPalindrome&#39; xs ys if x == y else false   |"}, {"owner": {"reputation": 521, "user_id": 6487607, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/uxjSW.jpg?s=128&g=1", "display_name": "ozata", "link": "https://stackoverflow.com/users/6487607/ozata"}, "reply_to_user": {"reputation": 9, "user_id": 10584081, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-nKNzKEnAi5M/AAAAAAAAAAI/AAAAAAAAA9Q/7yQgftkdKyQ/photo.jpg?sz=128", "display_name": "George Brussel", "link": "https://stackoverflow.com/users/10584081/george-brussel"}, "edited": false, "score": 0, "creation_date": 1540973191, "post_id": 53078488, "comment_id": 93054998, "body": "you should change the if-then-else sugar syntax as above"}, {"owner": {"reputation": 9, "user_id": 10584081, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-nKNzKEnAi5M/AAAAAAAAAAI/AAAAAAAAA9Q/7yQgftkdKyQ/photo.jpg?sz=128", "display_name": "George Brussel", "link": "https://stackoverflow.com/users/10584081/george-brussel"}, "edited": false, "score": 0, "creation_date": 1540973454, "post_id": 53078488, "comment_id": 93055093, "body": "and the same put &#39;then&#39; in this line?: split&#39; delim [] substr splittedStr     = splittedStr if substr == [] else reverse substr ++ splittedStr   -- coz the same parse error with &#39;if&#39;?"}, {"owner": {"reputation": 9, "user_id": 10584081, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-nKNzKEnAi5M/AAAAAAAAAAI/AAAAAAAAA9Q/7yQgftkdKyQ/photo.jpg?sz=128", "display_name": "George Brussel", "link": "https://stackoverflow.com/users/10584081/george-brussel"}, "edited": false, "score": 0, "creation_date": 1540974073, "post_id": 53078488, "comment_id": 93055385, "body": "error: parse error on input \u2018if\u2019    | 13 |         split&#39; delim [] substr splittedStr     = splittedStr if substr == [] else reverse substr ++ splittedStr    | tried to put &#39;then&#39; after reverse, but it&#39;s the same wrong"}, {"owner": {"reputation": 521, "user_id": 6487607, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/uxjSW.jpg?s=128&g=1", "display_name": "ozata", "link": "https://stackoverflow.com/users/6487607/ozata"}, "reply_to_user": {"reputation": 9, "user_id": 10584081, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-nKNzKEnAi5M/AAAAAAAAAAI/AAAAAAAAA9Q/7yQgftkdKyQ/photo.jpg?sz=128", "display_name": "George Brussel", "link": "https://stackoverflow.com/users/10584081/george-brussel"}, "edited": false, "score": 0, "creation_date": 1540974274, "post_id": 53078488, "comment_id": 93055482, "body": "My main intent was go give you a basic idea on your solution. Since I get the feeling that you are not trying to learn but only trying to get your work done by other people&#39;s, I will stop helping you any further.  I suggest you use this answer as pseudo code and write your own function, or wait for another answer."}], "tags": [], "owner": {"reputation": 521, "user_id": 6487607, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/uxjSW.jpg?s=128&g=1", "display_name": "ozata", "link": "https://stackoverflow.com/users/6487607/ozata"}, "is_accepted": true, "score": 1, "last_activity_date": 1540973169, "last_edit_date": 1540973169, "creation_date": 1540971643, "answer_id": 53078488, "question_id": 53076966, "link": "https://stackoverflow.com/questions/53076966/palindroms-monads/53078488#53078488", "title": "Palindroms &amp; Monads", "body": "<p><strong>isPalindrome</strong></p>\n\n<p>My haskell is a bit rusty so I don't promise the code below will work %100 yet I tried to stick to the main idea.I hope this answer helps. If you think anything is wrong both logically and syntactically, just write a comment and I will fix it asap. </p>\n\n<pre><code>isPalindrome :: [Char] -&gt; Boolean\nisPalindrome w = isPalindrome' w reverse w\n    where\n        isPalindrome' :: [Char] -&gt; [Char] -&gt; Boolean\n        isPalindrome' [] []         = true\n        isPalindrome' (x:xs) (y:ys) = if x == y then isPalindrome' xs ys  else false\n        isPalindrome' _ _           = false\n</code></pre>\n\n<p>function above should be fine for checking for palindromes.</p>\n\n<p>for writing to file part, you can create a list of palindromes first, then write all palindromes to a file in another function. so basically, first you split your string into words, then for words in given string you find palindromes, then you write the palindromes into a file.</p>\n\n<p><strong>how to read string from user?</strong></p>\n\n<pre><code>main = do \n        userInput &lt;- getLine\n</code></pre>\n\n<p><strong>how to split word with delimiter?</strong></p>\n\n<pre><code>split :: Char -&gt; [Char] -&gt; [[Char]]\nsplit delimiter string = split' delimiter string [] []\n    where\n        split' :: Char -&gt; [Char] -&gt; [Char] -&gt; [[Char]] -&gt; [[Char]]\n        split' delim [] substr splittedStr     = splittedStr if substr == [] else reverse substr ++ splittedStr\n        split' delim (x:xs) substr splittedStr = if x == delim then split' delim xs [] (reverse substr) ++ splittedSubstr else split' delim xs (x ++ substr) splittedSubstr\n</code></pre>\n\n<p>main idea is you stack characters until you see your delimeter and store them in a list when you see a delimiter.</p>\n\n<p><strong>how to filter palindromes in list?</strong></p>\n\n<p>to filter palindromes in list you use haskell's filter function as</p>\n\n<pre><code>filter isPalindrome (split ' ' userInput)\n</code></pre>\n\n<p>In the end, you can write a main block to run all of this in right order</p>\n\n<pre><code>main = do\n        userInput &lt;- getLine\n        let splittedInput = split ' ' userInput\n        let palindromes   = filter isPalindrome splittedInput\n        let output        = concat (intersperse \"\\n\" palindromes)\n        writeFile \"file.txt\" output\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 9, "user_id": 10584081, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-nKNzKEnAi5M/AAAAAAAAAAI/AAAAAAAAA9Q/7yQgftkdKyQ/photo.jpg?sz=128", "display_name": "George Brussel", "link": "https://stackoverflow.com/users/10584081/george-brussel"}, "edited": false, "score": 0, "creation_date": 1540974252, "post_id": 53078944, "comment_id": 93055467, "body": "I didn&#39;t even knew about stdin, I thought it is in C++ only"}, {"owner": {"reputation": 3063, "user_id": 439578, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e032fbe640b2234c8dce244907b99eab?s=128&d=identicon&r=PG", "display_name": "Manoj R", "link": "https://stackoverflow.com/users/439578/manoj-r"}, "reply_to_user": {"reputation": 9, "user_id": 10584081, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-nKNzKEnAi5M/AAAAAAAAAAI/AAAAAAAAA9Q/7yQgftkdKyQ/photo.jpg?sz=128", "display_name": "George Brussel", "link": "https://stackoverflow.com/users/10584081/george-brussel"}, "edited": false, "score": 1, "creation_date": 1540974911, "post_id": 53078944, "comment_id": 93055754, "body": "@GeorgeBrussel stdin, stdout and stderr are standard terminology, when working with console."}], "tags": [], "owner": {"reputation": 3063, "user_id": 439578, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e032fbe640b2234c8dce244907b99eab?s=128&d=identicon&r=PG", "display_name": "Manoj R", "link": "https://stackoverflow.com/users/439578/manoj-r"}, "is_accepted": false, "score": 1, "last_activity_date": 1540973638, "creation_date": 1540973638, "answer_id": 53078944, "question_id": 53076966, "link": "https://stackoverflow.com/questions/53076966/palindroms-monads/53078944#53078944", "title": "Palindroms &amp; Monads", "body": "<p>So this is basically consists of 4 things. </p>\n\n<ol>\n<li>Read Input from the stdin</li>\n<li>Convert input string into list of strings</li>\n<li>From the above list find out the strings which are palindromes</li>\n<li>print these palindromes into file. </li>\n</ol>\n\n<p>If you convert above into functions the signatures of these will be. </p>\n\n<ol start=\"2\">\n<li><code>String -&gt; [String]</code></li>\n<li><code>[String] -&gt; [String]</code></li>\n</ol>\n\n<p>Don't bother about the signature of 1st and 4th for now. These are anyways one line code readily available on internet. </p>\n\n<p>2 is a single function available in Data.List called <code>words</code>. </p>\n\n<p>3 can be again in two parts. A function which find out if a given string is palindrome. Signature will be </p>\n\n<p><code>String -&gt; Bool</code> </p>\n\n<p>This is also one line code. </p>\n\n<p>Once you have above function the only part remaining is filtering out the strings which are palindromes in given list of strings. </p>\n"}], "owner": {"reputation": 9, "user_id": 10584081, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-nKNzKEnAi5M/AAAAAAAAAAI/AAAAAAAAA9Q/7yQgftkdKyQ/photo.jpg?sz=128", "display_name": "George Brussel", "link": "https://stackoverflow.com/users/10584081/george-brussel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 133, "favorite_count": 0, "accepted_answer_id": 53078488, "answer_count": 2, "score": -2, "last_activity_date": 1540977420, "creation_date": 1540964396, "last_edit_date": 1540977420, "question_id": 53076966, "link": "https://stackoverflow.com/questions/53076966/palindroms-monads", "title": "Palindroms &amp; Monads", "body": "<p>I'm new to the Haskell. I am finding following task difficult:</p>\n\n<blockquote>\n  <p>Enter a string of characters. Output all palindromes to the file (use the IO monad to work with the file system and input / output, use the list monad to work with the strings).`</p>\n</blockquote>\n\n<p>Any code is may be helpful. Thank you in advance!</p>\n\n<p>This is what I have tried so far:</p>\n\n<pre><code>palindrome :: Char -&gt; [String]\npalindrome n\n    | n &lt; 0  = []\n    | even n = map (\\front -&gt; front ++ reverse front) fronts\n    | odd n  = map (\\front -&gt; front ++ tail (reverse front)) fronts\n    where ispalindrome :: (Integral a, Show a) =&gt; a -&gt; Bool\n    ispalindrome x = show x = reverse (show x)\n\nmain = do\n    input &lt;- getline\n    putStrLn print :: IO ()\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1540960896, "post_id": 53076316, "comment_id": 93050657, "body": "Have you tried <code>import qualified Data.Text as T</code>?"}, {"owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1540963104, "post_id": 53076316, "comment_id": 93051174, "body": "@melpomene, yes and that does not work either"}, {"owner": {"reputation": 2194, "user_id": 7940614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b697c574cc5dfb3a4d5e4aff46a1721a?s=128&d=identicon&r=PG&f=1", "display_name": "assembly.jc", "link": "https://stackoverflow.com/users/7940614/assembly-jc"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1540964666, "post_id": 53076316, "comment_id": 93051683, "body": "According to the source of [link] (<a href=\"https://hackage.haskell.org/package/mime-mail-0.4.11/docs/src/Network-Mail-Mime.html#Address\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/mime-mail-0.4.11/docs/src/&hellip;</a>), Address use strict version of Text (Data.text), @melpomene suggestion seems work."}], "answers": [{"tags": [], "owner": {"reputation": 1598, "user_id": 1905334, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/oy40i.png?s=128&g=1", "display_name": "cmdv", "link": "https://stackoverflow.com/users/1905334/cmdv"}, "is_accepted": false, "score": 1, "last_activity_date": 1541002927, "last_edit_date": 1541002927, "creation_date": 1540981984, "answer_id": 53081301, "question_id": 53076316, "link": "https://stackoverflow.com/questions/53076316/haskell-how-to-pack-text-for-data-text-intertnal-text/53081301#53081301", "title": "Haskell: How to pack text for Data.Text.Intertnal.Text", "body": "<p>you seem to be using <code>Data.Text.Lazy</code> but after testing it out, as recommended by @melpomene you need to change:</p>\n\n<p><code>--import qualified Data.Text.Lazy as T\nimport qualified Data.Text as T\n</code></p>\n\n<p>if you look at the <code>Address</code> definition it expects a <code>Text</code> to be from <code>Data.Text</code> <a href=\"https://hackage.haskell.org/package/smtp-mail-0.1.4.6/docs/Network-Mail-SMTP-Types.html#t:Address\" rel=\"nofollow noreferrer\">https://hackage.haskell.org/package/smtp-mail-0.1.4.6/docs/Network-Mail-SMTP-Types.html#t:Address</a></p>\n"}], "owner": {"reputation": 1376, "user_id": 5200466, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/abb1362cec6e1f0a2416a6d98a93cd6c?s=128&d=identicon&r=PG&f=1", "display_name": "matt", "link": "https://stackoverflow.com/users/5200466/matt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 167, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1541002927, "creation_date": 1540960179, "question_id": 53076316, "link": "https://stackoverflow.com/questions/53076316/haskell-how-to-pack-text-for-data-text-intertnal-text", "title": "Haskell: How to pack text for Data.Text.Intertnal.Text", "body": "<p>I am trying to use the <a href=\"https://hackage.haskell.org/package/smtp-mail\" rel=\"nofollow noreferrer\">smtp-mail</a> module. </p>\n\n<p>I am trying to construct the <code>Address</code> data type which is of:</p>\n\n<pre><code>Address  \naddressName  :: Maybe Text   \naddressEmail :: Text\n</code></pre>\n\n<p>with overloaded strings I can construct the <code>Address</code> no problem. However when I try to pass a String to it and <code>pack</code> it, I cannot seem to find the correct <code>pack</code> function.</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\n\nimport qualified Data.Text.Lazy as T\nimport Network.Mail.SMTP\n\ntestAddress :: String\ntestAddress = \"me@email.com\"\n\n-- this works fine\nmyAddress1 :: Address\nmyAddress1 = Address Nothing (\"me@email.com\")\n\nmyAddress2 :: Address\nmyAddress2 = Address Nothing (T.pack testAddress)\n</code></pre>\n\n<p>gives error:</p>\n\n<pre><code>* Couldn't match expected type `Data.Text.Internal.Text'\n              with actual type `T.Text'\n  NB: `T.Text' is defined in `Data.Text.Internal.Lazy'\n      `Data.Text.Internal.Text' is defined in `Data.Text.Internal'\n* In the second argument of `Address', namely\n    `(T.pack testAddress)'\n  In the expression: Address Nothing (T.pack testAddress)\n  In an equation for `myAddress2':\n      myAddress2 = Address Nothing (T.pack testAddress)\n</code></pre>\n"}, {"tags": ["haskell", "type-mismatch", "quickcheck"], "answers": [{"tags": [], "owner": {"reputation": 21417, "user_id": 925978, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/06e4467a5bd1538a92cefb20db07897a?s=128&d=identicon&r=PG&f=1", "display_name": "crockeea", "link": "https://stackoverflow.com/users/925978/crockeea"}, "is_accepted": true, "score": 2, "last_activity_date": 1541011492, "last_edit_date": 1541011492, "creation_date": 1540966066, "answer_id": 53077247, "question_id": 53075768, "link": "https://stackoverflow.com/questions/53075768/couldnt-match-type-int-with-a0-b0-c0-what-does-the-trigger-of-quick/53077247#53077247", "title": "Couldn&#39;t match type \u2018Int\u2019 with \u2018(a0, b0, c0)\u2019 -- What does the trigger of `quickBatch` expect?", "body": "<p>Check out the signatures of <code>functor</code>, <code>applicative</code>, and <code>monad</code> from the <a href=\"http://hackage.haskell.org/package/checkers-0.4.11/docs/Test-QuickCheck-Classes.html#v:functor\" rel=\"nofollow noreferrer\">checkers package</a>:</p>\n\n<p><code>functor :: (Functor m, ...) =&gt; m (a, b, c) -&gt; TestBatch</code></p>\n\n<p><code>applicative</code> and <code>monad</code> are similar: they all require the a functor over a triple. You are trying to use <code>trigger::Sum Int Int</code>. This means <code>m~Sum Int</code>, but the error is telling you that <code>Int</code> (the second one) cannot be unified with <code>(a,b,c)</code> as required by the signature of <code>functor</code>.</p>\n"}], "owner": {"reputation": 1528, "user_id": 1516794, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/0aa31034e2c59f34d63141791746ec35?s=128&d=identicon&r=PG", "display_name": "cmal", "link": "https://stackoverflow.com/users/1516794/cmal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 84, "favorite_count": 0, "accepted_answer_id": 53077247, "answer_count": 1, "score": 1, "last_activity_date": 1541011492, "creation_date": 1540955806, "last_edit_date": 1540968087, "question_id": 53075768, "link": "https://stackoverflow.com/questions/53075768/couldnt-match-type-int-with-a0-b0-c0-what-does-the-trigger-of-quick", "title": "Couldn&#39;t match type \u2018Int\u2019 with \u2018(a0, b0, c0)\u2019 -- What does the trigger of `quickBatch` expect?", "body": "<p>I want to quickcheck on this <code>Sum</code> type and I wrote the following code:</p>\n\n<pre><code>data Sum a b =\n  First a\n  | Second b\n  deriving (Eq, Show)\n\ninstance Functor (Sum a) where\n  fmap _ (First x) = First x\n  fmap f (Second y) = Second (f y)\n\ninstance Applicative (Sum a) where\n  pure = Second\n  First x &lt;*&gt; _ = First x\n  Second _ &lt;*&gt; First y = First y\n  Second x &lt;*&gt; Second y = Second (x y)\n\ninstance Monad (Sum a) where\n  return = pure\n  First x &gt;&gt;= _ = First x\n  Second x &gt;&gt;= f = f x\n\ninstance (Arbitrary a, Arbitrary b) =&gt; Arbitrary (Sum a b) where\n  arbitrary = do\n    x &lt;- arbitrary\n    y &lt;- arbitrary\n    frequency [(1, return $ First x)\n              ,(1, return $ Second y)]\n\ninstance (Eq a, Eq b) =&gt; EqProp (Sum a b) where (=-=) = eq\n\n\nmain :: IO ()\nmain = do\n  let trigger = undefined :: Sum Int Int\n  quickBatch $ functor trigger\n  quickBatch $ applicative trigger\n  quickBatch $ monad trigger\n</code></pre>\n\n<p>The compiler complains:</p>\n\n<pre><code>src/eithermonad.hs:100:24: error:\n    \u2022 Couldn't match type \u2018Int\u2019 with \u2018(a0, b0, c0)\u2019\n      Expected type: Sum Int (a0, b0, c0)\n        Actual type: Sum Int Int\n    \u2022 In the first argument of \u2018functor\u2019, namely \u2018trigger\u2019\n      In the second argument of \u2018($)\u2019, namely \u2018functor trigger\u2019\n      In a stmt of a 'do' block: quickBatch $ functor trigger\n    |\n100 |   quickBatch $ functor trigger\n    |                        ^^^^^^^\n\nsrc/eithermonad.hs:101:28: error:\n    \u2022 Couldn't match type \u2018Int\u2019 with \u2018(a1, b1, c1)\u2019\n      Expected type: Sum Int (a1, b1, c1)\n        Actual type: Sum Int Int\n    \u2022 In the first argument of \u2018applicative\u2019, namely \u2018trigger\u2019\n      In the second argument of \u2018($)\u2019, namely \u2018applicative trigger\u2019\n      In a stmt of a 'do' block: quickBatch $ applicative trigger\n    |\n101 |   quickBatch $ applicative trigger\n    |                            ^^^^^^^\n\nsrc/eithermonad.hs:102:22: error:\n    \u2022 Couldn't match type \u2018Int\u2019 with \u2018(a2, b2, c2)\u2019\n      Expected type: Sum Int (a2, b2, c2)\n        Actual type: Sum Int Int\n    \u2022 In the first argument of \u2018monad\u2019, namely \u2018trigger\u2019\n      In the second argument of \u2018($)\u2019, namely \u2018monad trigger\u2019\n      In a stmt of a 'do' block: quickBatch $ monad trigger\n    |\n102 |   quickBatch $ monad trigger\n    |                      ^^^^^^^\n</code></pre>\n\n<p>And after I changed to </p>\n\n<pre><code>let trigger = undefined :: Sum (Int, String, Int) (Int, String, Int)\n</code></pre>\n\n<p>the code can be compiled and the <code>main</code> function can run.</p>\n\n<p>The question:</p>\n\n<p>What does the trigger of <code>quickBatch</code> expect? Why I must change the type <code>Int</code> to something like <code>(Int, String, Int)</code> to make it compile?</p>\n"}, {"tags": ["haskell", "recursion", "types"], "comments": [{"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 7, "creation_date": 1540952766, "post_id": 53075377, "comment_id": 93048927, "body": "Look at the spelling of the function name: deocde vs. decode."}, {"owner": {"reputation": 9547, "user_id": 46279, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/df9614769cb56c2cc06330efa2599e3f?s=128&d=identicon&r=PG", "display_name": "coder_bro", "link": "https://stackoverflow.com/users/46279/coder-bro"}, "reply_to_user": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "edited": false, "score": 0, "creation_date": 1540952977, "post_id": 53075377, "comment_id": 93048963, "body": "damn, such a simple mistake. Is there anyway to avoid such mistakes?"}, {"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 1, "creation_date": 1540954892, "post_id": 53075377, "comment_id": 93049377, "body": "We all make mistakes like that, this is why ghc is a great pair programming partner."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1540982812, "post_id": 53075377, "comment_id": 93060107, "body": "@Ngm Yes, there is a way -- turn on warnings with <code>-Wall</code>! GHC should warn you about 1) the non-exhaustive match and 2) a function <code>deocde</code> begin defined without a type annotation <code>deocde :: ...</code>. The second one should point out the issue."}], "answers": [{"tags": [], "owner": {"reputation": 21417, "user_id": 925978, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/06e4467a5bd1538a92cefb20db07897a?s=128&d=identicon&r=PG&f=1", "display_name": "crockeea", "link": "https://stackoverflow.com/users/925978/crockeea"}, "is_accepted": true, "score": 3, "last_activity_date": 1541011526, "last_edit_date": 1541011526, "creation_date": 1540966429, "answer_id": 53077309, "question_id": 53075377, "link": "https://stackoverflow.com/questions/53075377/haskell-non-exhaustive-patterns-in-function-using-data-type/53077309#53077309", "title": "Haskell - Non-exhaustive patterns in function using data type", "body": "<p>This is indeed a difficult type of error to catch. Notice that if you had a typo on either the signature or the first pattern for <code>decodelens</code>, GHC would have complained because the signature must be \"adjacent\" to the function definition.</p>\n\n<p>I think the best you can do here is turn on <code>-Wmissing-signatures</code>. For the code above, this will trigger a warning about the top-level function <code>deocdelens</code> not having a signature. Of course this means you have to explicitly write signatures for all top-level functions, but this is generally encouraged anyway.</p>\n"}, {"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 0, "last_activity_date": 1540968991, "creation_date": 1540968991, "answer_id": 53077876, "question_id": 53075377, "link": "https://stackoverflow.com/questions/53075377/haskell-non-exhaustive-patterns-in-function-using-data-type/53077876#53077876", "title": "Haskell - Non-exhaustive patterns in function using data type", "body": "<p>Regardless of Haskell vs other languages, one thing that does prevent this kind of problem is to make it a habit <em>never to type out</em> names with more than three letters (except when writing it the first time, usually for the signature). That's what autocompletion is there for.</p>\n\n<p>Of course this has its own problems \u2013 I have more than once found myself typing a name wrong <em>the first time</em> and then autocomplete-\u201cpasting\u201d it across my program. Which will then work just fine, it's just a bit embarrassing when reading the code...</p>\n"}], "owner": {"reputation": 9547, "user_id": 46279, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/df9614769cb56c2cc06330efa2599e3f?s=128&d=identicon&r=PG", "display_name": "coder_bro", "link": "https://stackoverflow.com/users/46279/coder-bro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 86, "favorite_count": 0, "closed_date": 1540993363, "accepted_answer_id": 53077309, "answer_count": 2, "score": 2, "last_activity_date": 1541011526, "creation_date": 1540952431, "last_edit_date": 1540953677, "question_id": 53075377, "link": "https://stackoverflow.com/questions/53075377/haskell-non-exhaustive-patterns-in-function-using-data-type", "closed_reason": "Not suitable for this site", "title": "Haskell - Non-exhaustive patterns in function using data type", "body": "<p>I was trying to solve this question on Haskell wiki: <a href=\"https://wiki.haskell.org/99_questions/11_to_20\" rel=\"nofollow noreferrer\">https://wiki.haskell.org/99_questions/11_to_20</a> (problem 12)</p>\n\n<p>My solution is as follows:</p>\n\n<pre><code>data Repeats a = Single a | Multiple Int a deriving Show\n\nencodelens :: Eq a =&gt; [a] -&gt; [Repeats a]\nencodelens xs = foldr (\\x acc -&gt; case acc of\n                                  [] -&gt; [Single x]\n                                  (l:ls) -&gt; case l of\n                                             (Single x') -&gt; if x == x'\n                                                             then [(Multiple 2 x)] ++ ls\n                                                             else [(Single x)] ++ (l:ls)\n                                             (Multiple c x') -&gt; if x == x'\n                                                                 then [(Multiple (c+1) x)] ++ ls\n                                                                 else [(Single x)] ++ (l:ls)\n                      ) [] xs\n\ndecodelens :: Eq a =&gt; [Repeats a] -&gt; [a]\ndecodelens [] = []\ndeocdelens (r:rs) = case r of\n                     (Single x) -&gt; [x] ++ decodelens rs\n                     (Multiple c x) -&gt; take c (repeat x) ++ decodelens rs\n</code></pre>\n\n<p><code>decodelens</code> does not work, it fails with:</p>\n\n<pre><code>decodelens [Multiple 4 'a',Multiple 2 'b',Multiple 2 'c',Multiple 2 'd',Single 'e',Multiple 3 'f']\n\n\"*** Exception: encode-len-with-cardinality.hs:(17,1)-(19,47): Non-exhaustive patterns in function decodelens\n</code></pre>\n\n<p>I am not sure how it is unable to pattern match. </p>\n\n<p><em>Update</em>:</p>\n\n<p>As pointed out in comments below, the mistake is in the function name for the second pattern match <code>deocdelens</code>. <em>I wonder is there is a way to avoid such mistakes?</em></p>\n"}, {"tags": ["haskell", "text", "symbols", "template-haskell", "singleton-type"], "owner": {"reputation": 4870, "user_id": 403875, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/439b8283080e4e2255205993da9de9ca?s=128&d=identicon&r=PG", "display_name": "dspyz", "link": "https://stackoverflow.com/users/403875/dspyz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 108, "favorite_count": 1, "answer_count": 0, "score": 2, "last_activity_date": 1540948424, "creation_date": 1540948424, "question_id": 53074944, "link": "https://stackoverflow.com/questions/53074944/building-singleton-types-involving-text-symbols-using-templatehaskell", "title": "Building Singleton types involving Text/Symbols using TemplateHaskell", "body": "<p>I find that I can't use the functions from <code>Data.Singletons.TH</code> to create singletons for any types involving <code>Text</code>/<code>Symbol</code>s in them.</p>\n\n<p><code>Demote Symbol = Text</code> so this is clearly meant to be an intended use-case for <code>singletons</code>, but regardless of which one I try to use, I get an error (below). When I replace <code>Text</code> with <code>Symbol</code> or <code>String</code> the error message is the same but with <code>Text</code> replaced with <code>Symbol</code> or <code>String</code>.</p>\n\n<pre><code>{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE ExistentialQuantification #-}\n{-# LANGUAGE GADTs #-}\n{-# LANGUAGE KindSignatures #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE TemplateHaskell #-}\n{-# LANGUAGE TypeFamilies #-}\n\nmodule Lib where\n\nimport Data.Singletons.TH\nimport Data.Text (Text)\n\n$(singletons [d|\n  data MyType = MyType Text Text\n  |])\n</code></pre>\n\n<p>results in:</p>\n\n<pre><code>src/Lib.hs:14:3: error:\n    \u2022 Could not deduce: Demote Text ~ Text\n      from the context: a ~ 'MyType n n1\n        bound by a pattern with constructor:\n                   SMyType :: forall (n1 :: Text) (n2 :: Text).\n                              Sing n1 -&gt; Sing n2 -&gt; Sing ('MyType n1 n2),\n                 in an equation for \u2018fromSing\u2019\n        at src/Lib.hs:(14,3)-(16,4)\n    \u2022 In the first argument of \u2018MyType\u2019, namely \u2018(fromSing b_a7ip)\u2019\n      In the expression: (MyType (fromSing b_a7ip)) (fromSing b_a7iq)\n      In an equation for \u2018fromSing\u2019:\n          fromSing (SMyType b_a7ip b_a7iq)\n            = (MyType (fromSing b_a7ip)) (fromSing b_a7iq)\n   |\n14 | $(singletons [d|\n   |   ^^^^^^^^^^^^^^...\n\nsrc/Lib.hs:14:3: error:\n    \u2022 Couldn't match expected type \u2018Text\u2019\n                  with actual type \u2018Demote Text\u2019\n    \u2022 When checking that the pattern signature: Demote Text\n        fits the type of its context: Text\n      In the pattern: b_a7is :: Demote Text\n      In the pattern:\n        MyType (b_a7is :: Demote Text) (b_a7it :: Demote Text)\n   |\n14 | $(singletons [d|\n   |   ^^^^^^^^^^^^^^...\n</code></pre>\n"}, {"tags": ["haskell", "closures", "anonymous-function"], "comments": [{"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 1, "creation_date": 1540944569, "post_id": 53074450, "comment_id": 93047393, "body": "<code>getAtrribute obj == obj (\\x -&gt; x) == (simpleObject 5) (\\x -&gt; x) == (\\message -&gt; message 5) (\\x -&gt; x) == (\\x -&gt; x) 5 == 5</code>"}, {"owner": {"reputation": 3, "user_id": 10583042, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b6b12136237ac3d857f6cf1528a2bcbc?s=128&d=identicon&r=PG&f=1", "display_name": "min_2_max", "link": "https://stackoverflow.com/users/10583042/min-2-max"}, "reply_to_user": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1540946314, "post_id": 53074450, "comment_id": 93047761, "body": "Ahh...that helps a lot! I was getting hung up on the second to last transition.  Thank you so much!"}, {"owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "edited": false, "score": 0, "creation_date": 1540984552, "post_id": 53074450, "comment_id": 93061005, "body": "This is the second time I\u2019ve seen this weird technique recently (first at <a href=\"https://stackoverflow.com/q/53023885/4942760\">stackoverflow.com/q/53023885/4942760</a> ). I think this specific case makes no sense at all. The only semi-sensical usage I can think of is a record of closures to either implement poor mans gadts (not necessary as gadts exist) or allowing some kind of oo like objects/interface (but why not use typeclasses?) This technique is no different from just using the value directly (isomorphism is <code>($id)</code> in one way and <code>flip ($)</code> the other). What is this supposed to be useful for?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "edited": false, "score": 0, "creation_date": 1541011846, "post_id": 53074450, "comment_id": 93077283, "body": "@DanRobertson I don&#39;t think it has any purpose, but it&#39;s merely an exercise about closures. Realizing that such isomorphism exists can also be another exercise. It&#39;s mostly about learning/understanding than being really useful on its own (IMO)."}], "answers": [{"comments": [{"owner": {"reputation": 3, "user_id": 10583042, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b6b12136237ac3d857f6cf1528a2bcbc?s=128&d=identicon&r=PG&f=1", "display_name": "min_2_max", "link": "https://stackoverflow.com/users/10583042/min-2-max"}, "edited": false, "score": 0, "creation_date": 1541011167, "post_id": 53081639, "comment_id": 93077009, "body": "Thank you! Commenter Alec posted above a similar technique which clarified the code also."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 1, "last_activity_date": 1540983141, "creation_date": 1540983141, "answer_id": 53081639, "question_id": 53074450, "link": "https://stackoverflow.com/questions/53074450/using-anonymous-functions-in-haskell/53081639#53081639", "title": "Using anonymous functions in Haskell", "body": "<p>We can evaluate the expression substituting each defined identifier with its own definition.</p>\n\n<pre><code>getAtrribute obj\n= { def. getAttribute }\nobj (\\x -&gt; x)\n= { def. obj. }\nsimpleObject 5 (\\x -&gt; x)\n= { def. simpleObject }\n(\\message -&gt; message 5) (\\x -&gt; x)\n= { beta reduction }\n(\\x -&gt; x) 5\n= { beta reduction }\n5\n</code></pre>\n"}], "owner": {"reputation": 3, "user_id": 10583042, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b6b12136237ac3d857f6cf1528a2bcbc?s=128&d=identicon&r=PG&f=1", "display_name": "min_2_max", "link": "https://stackoverflow.com/users/10583042/min-2-max"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 225, "favorite_count": 0, "accepted_answer_id": 53081639, "answer_count": 1, "score": 0, "last_activity_date": 1540983141, "creation_date": 1540943724, "question_id": 53074450, "link": "https://stackoverflow.com/questions/53074450/using-anonymous-functions-in-haskell", "title": "Using anonymous functions in Haskell", "body": "<p>I am reading <em>Get Programming with Haskell</em> to gain an understanding of functional programming. In Lesson 10, the author discusses using functional programming to create simple objects using closures. Up to this point in the book, the topics have included higher order functions, lambda functions, and closures.</p>\n\n<p>He describes something along the lines of:</p>\n\n<pre><code>simpleObject intAttribute= \\message -&gt; message intAttribute\n</code></pre>\n\n<p>simpleObject returns a closure which in effects stores the intAttribute.  The closure takes a function as an argument and supplies the intAttribute as the parameter. For example (mine):</p>\n\n<pre><code>obj = simpleObject 5\ndoubleIt x = 2 * x\nobj doubleIt (returns 10)\n</code></pre>\n\n<p>I think I am pretty clear up to this point.</p>\n\n<p>The author then describes an accessor similar to:</p>\n\n<pre><code>getAttribute y = y (\\x -&gt; x)\ngetAtrribute obj (returns 5)\n</code></pre>\n\n<p>The code works as expected returning the captured intAttribute.  This is where I get lost. How does the getAttribute code work?</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 45741, "user_id": 744178, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a3193139ea494c45e63752504f5ff1f2?s=128&d=identicon&r=PG", "display_name": "jwodder", "link": "https://stackoverflow.com/users/744178/jwodder"}, "is_accepted": false, "score": 3, "last_activity_date": 1540931624, "creation_date": 1540931624, "answer_id": 53072484, "question_id": 53072433, "link": "https://stackoverflow.com/questions/53072433/haskell-instance-of-num-char-required-for-definition-of-a-function/53072484#53072484", "title": "Haskell - Instance of Num Char required for definition of a function", "body": "<p><code>!!</code> has higher priority than <code>+</code>, so <code>n!!i+1</code> is parsed as <code>(n !! i) + 1</code>, which tries to add one to an element of a string, which only works if <code>Char</code> is a number.  You should instead write <code>n !! (i+1)</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 35, "user_id": 8500045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5cb7437321e2b50315e96a65eef87aa5?s=128&d=identicon&r=PG&f=1", "display_name": "Georg Natter", "link": "https://stackoverflow.com/users/8500045/georg-natter"}, "edited": false, "score": 0, "creation_date": 1540932333, "post_id": 53072505, "comment_id": 93043669, "body": "Thanks! n!!(i+1) fixed my problem. Apart from that, the function works just as I need it to."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 35, "user_id": 8500045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5cb7437321e2b50315e96a65eef87aa5?s=128&d=identicon&r=PG&f=1", "display_name": "Georg Natter", "link": "https://stackoverflow.com/users/8500045/georg-natter"}, "edited": false, "score": 0, "creation_date": 1540935993, "post_id": 53072505, "comment_id": 93044890, "body": "@GeorgNatter: what if you input <code>&quot;123&quot;</code>?"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 2, "last_activity_date": 1540941849, "last_edit_date": 1540941849, "creation_date": 1540931707, "answer_id": 53072505, "question_id": 53072433, "link": "https://stackoverflow.com/questions/53072433/haskell-instance-of-num-char-required-for-definition-of-a-function/53072505#53072505", "title": "Haskell - Instance of Num Char required for definition of a function", "body": "<p>Because it interprets:</p>\n\n<pre><code>n!!i+1\n</code></pre>\n\n<p>as:</p>\n\n<pre><code>(n!!i) + 1\n</code></pre>\n\n<p>It thus first obtains the <code>i</code>-th character of the string, and then aims to add <code>1</code> to it. Now in Haskell one can define a custom number type. So here you <em>could</em> add that character and <code>1</code> together, but only if that character is a number.</p>\n\n<p>But that being said, the above will not work even by fixing the brackets. You did not instruct when to <em>stop</em> iterating: for the string <code>\"123\"</code>, it would eventually obtain the last character, and then raise an \"index too large\" error when it reaches the end of the string. Furthermore <code>!!</code> is <em>not</em> efficient: it requires <em>O(k)</em> to access the <em>k</em>-th element, making this algorithm a quadratic one.</p>\n\n<p>What you here can use is <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:takeWhile\" rel=\"nofollow noreferrer\"><strong><code>takeWhile :: (a -&gt; Bool) -&gt; [a] -&gt; [a]</code></strong></a> and <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:length\" rel=\"nofollow noreferrer\"><strong><code>length :: [a] -&gt; Int</code></strong></a>: first take the longest prefix of character, and then take the length of that list, like:</p>\n\n<pre><code>getLengthOfNumber :: String -&gt; Int\ngetLengthOfNumber = length . takeWhile isCharDigit\n</code></pre>\n"}], "owner": {"reputation": 35, "user_id": 8500045, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5cb7437321e2b50315e96a65eef87aa5?s=128&d=identicon&r=PG&f=1", "display_name": "Georg Natter", "link": "https://stackoverflow.com/users/8500045/georg-natter"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 234, "favorite_count": 0, "accepted_answer_id": 53072505, "answer_count": 2, "score": 2, "last_activity_date": 1540941849, "creation_date": 1540931384, "question_id": 53072433, "link": "https://stackoverflow.com/questions/53072433/haskell-instance-of-num-char-required-for-definition-of-a-function", "title": "Haskell - Instance of Num Char required for definition of a function", "body": "<p>I want to write a simple recursive function with 3 input parameters and 1 output parameter:</p>\n\n<pre><code>getLengthOfNumber :: (String, Int, Int) -&gt; Int\ngetLengthOfNumber (n, i, res)\n    | isCharDigit(n!!i+1) = getLengthOfNumber (n, i+1, res+1)\n    | otherwise = res\n</code></pre>\n\n<p>Why does Hugs throw me the Error \"Instance of Num Char required for definition of getLengthOfNumber\"?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1540930930, "post_id": 53072261, "comment_id": 93043060, "body": "Personally I have the impression that this is easier with functional programming. Perhaps it might be better to first design a function signature, and the for example solve a base case (like hardcoding a few examples, looking for patterns)."}, {"owner": {"reputation": 23, "user_id": 10582544, "user_type": "registered", "profile_image": "https://graph.facebook.com/1851717401616497/picture?type=large", "display_name": "Justas Tvarijonas", "link": "https://stackoverflow.com/users/10582544/justas-tvarijonas"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1540931279, "post_id": 53072261, "comment_id": 93043209, "body": "My basic idea was to check all for variants and if any succeed then do the same for them e.g. if I&#39;m checking for coord (&#39;C&#39;, 5), I would check if coords (&#39;D&#39;, 5), (&#39;B&#39;, 5), (&#39;C&#39;, 4), (&#39;C&#39;, 6) are in the list I&#39;ve got and if they are I would add them to new list and then do the same check for these coords. But didn&#39;t yet come up with a way to write that."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1540931959, "post_id": 53072261, "comment_id": 93043525, "body": "perhaps it is worth first developing a function that takes two coordinates, and returns a <code>Bool</code> that specifies if the two are &quot;neighbors&quot;."}], "answers": [{"comments": [{"owner": {"reputation": 23, "user_id": 10582544, "user_type": "registered", "profile_image": "https://graph.facebook.com/1851717401616497/picture?type=large", "display_name": "Justas Tvarijonas", "link": "https://stackoverflow.com/users/10582544/justas-tvarijonas"}, "edited": false, "score": 0, "creation_date": 1540937895, "post_id": 53073231, "comment_id": 93045629, "body": "In a result I need neighbors of (&#39;D&#39;, 5) and (&#39;D&#39;, 6) and so on. but thank you, that&#39;s a good start for me"}, {"owner": {"reputation": 62252, "user_id": 1435869, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TrEd9.jpg?s=128&g=1", "display_name": "karakfa", "link": "https://stackoverflow.com/users/1435869/karakfa"}, "reply_to_user": {"reputation": 23, "user_id": 10582544, "user_type": "registered", "profile_image": "https://graph.facebook.com/1851717401616497/picture?type=large", "display_name": "Justas Tvarijonas", "link": "https://stackoverflow.com/users/10582544/justas-tvarijonas"}, "edited": false, "score": 0, "creation_date": 1540945963, "post_id": 53073231, "comment_id": 93047694, "body": "but you wrote <i>&quot;should return [(&#39;C&#39;, 5), (&#39;D&#39;, 5), (&#39;D&#39;, 6)]&quot;</i>.  If you don&#39;t need self change <code>&lt;=1</code> to <code>==1</code>"}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 0, "creation_date": 1540951228, "post_id": 53073231, "comment_id": 93048638, "body": "<code>liftA2 (,) id (dist p)</code> can also be written <code>id &amp;&amp;&amp; dist p</code> using <code>&amp;&amp;&amp;</code> from <code>Control.Arrow</code>, here specialised to the function arrow <code>(a -&gt; b) -&gt; (a -&gt; c) -&gt; a -&gt; (b, c)</code>. But I think point-free is the wrong approach in this case; it seems clearer to me as a list comprehension: <code>connected p0 ps = [p | p &lt;- ps, dist p0 p &lt;= 1] where dist (a, x) (b, y) = (a `delta` b) `max` (x `delta` y); delta = fmap abs . ((-) `on` fromEnum)</code>"}], "tags": [], "owner": {"reputation": 62252, "user_id": 1435869, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TrEd9.jpg?s=128&g=1", "display_name": "karakfa", "link": "https://stackoverflow.com/users/1435869/karakfa"}, "is_accepted": true, "score": 1, "last_activity_date": 1540935891, "last_edit_date": 1540935891, "creation_date": 1540935249, "answer_id": 53073231, "question_id": 53072261, "link": "https://stackoverflow.com/questions/53072261/count-continuous-squares-from-a-certain-square/53073231#53073231", "title": "count continuous squares from a certain square", "body": "<p>something like this?</p>\n\n<pre><code>connected p = map fst . filter ((&lt;=1).snd) . map (liftA2 (,) id (dist p))\n          where dist (a,x) (b,y) = max (abs (fromEnum a - fromEnum b)) (abs (y-x))\n</code></pre>\n\n<p>find the elements where max axis distance is less or equal to one, that is the cell itself or immediate neighbors. Perhaps can be written in a shorter way.</p>\n\n<pre><code>&gt; connected ('C',5) [('C', 5), ('D', 5), ('D', 6), ('A', 4)]\n</code></pre>\n\n<p>should return</p>\n\n<pre><code>[('C',5), ('D',5), ('D',6)]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 1197, "user_id": 4051020, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/42660a4e623fd8d2c850081291bcb585?s=128&d=identicon&r=PG&f=1", "display_name": "dopamane", "link": "https://stackoverflow.com/users/4051020/dopamane"}, "is_accepted": false, "score": 0, "last_activity_date": 1540957259, "last_edit_date": 1540957259, "creation_date": 1540954057, "answer_id": 53075576, "question_id": 53072261, "link": "https://stackoverflow.com/questions/53072261/count-continuous-squares-from-a-certain-square/53075576#53075576", "title": "count continuous squares from a certain square", "body": "<p>It's possible to use applicative style to generate the neighborhood then <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:filter\" rel=\"nofollow noreferrer\"><code>filter</code></a> with <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:elem\" rel=\"nofollow noreferrer\"><code>elem</code></a>. I used <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:pred\" rel=\"nofollow noreferrer\"><code>pred</code></a> and <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:succ\" rel=\"nofollow noreferrer\"><code>succ</code></a> to handle <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Enum\" rel=\"nofollow noreferrer\"><code>Enum</code></a> instances (e.g. <code>Integer</code>, and <code>Char</code>):</p>\n\n<pre><code>filterConn :: (Char,Integer) -&gt; [(Char,Integer)] -&gt; [(Char,Integer)]\nfilterConn (r,c) = filter (`elem` genNeighborhood)                  \n  where\n    genNeighborhood = (,) &lt;$&gt; [pred r, r, succ r] &lt;*&gt; [pred c, c, succ c]  \n</code></pre>\n\n<p>Furthermore, to obey bounds like a <code>10x10</code> board, I would define custom <code>myPred</code>, <code>mySucc</code> functions that only increment or decrement while obeying the bounds (note there will be duplicates when near a bound):</p>\n\n<pre><code>myPred :: (Enum a, Ord a) =&gt; a -&gt; a -&gt; a\nmyPred bound val = if pred val &gt;= bound then pred val else val\n\nmySucc :: (Enum a, Ord a) =&gt; a -&gt; a -&gt; a \nmySucc bound val = if succ val &lt;= bound then succ val else val\n</code></pre>\n\n<p>Then just drop in <code>myPred</code> and <code>mySucc</code> to <code>genNeighborhood</code> with their respective bounds like so:</p>\n\n<pre><code>genNeighborhood = (,) &lt;$&gt; [myPred 'A' r, r, mySucc 'J' r] &lt;*&gt; [myPred 1 c, c, mySucc 10 c]         \n</code></pre>\n\n<p>Finally, use <code>length</code> to count how many squares are connected:</p>\n\n<pre><code>countConn s sqs = length $ filterConn s sqs\n</code></pre>\n\n<p>References: <a href=\"http://learnyouahaskell.com/functors-applicative-functors-and-monoids#applicative-functors\" rel=\"nofollow noreferrer\">LYAH</a>, <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html\" rel=\"nofollow noreferrer\">Prelude</a></p>\n"}], "owner": {"reputation": 23, "user_id": 10582544, "user_type": "registered", "profile_image": "https://graph.facebook.com/1851717401616497/picture?type=large", "display_name": "Justas Tvarijonas", "link": "https://stackoverflow.com/users/10582544/justas-tvarijonas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 82, "favorite_count": 0, "accepted_answer_id": 53073231, "answer_count": 2, "score": 2, "last_activity_date": 1540986912, "creation_date": 1540930625, "last_edit_date": 1540986912, "question_id": 53072261, "link": "https://stackoverflow.com/questions/53072261/count-continuous-squares-from-a-certain-square", "title": "count continuous squares from a certain square", "body": "<p>First of all, I have a board (10 x 10) and a list of specific coordinates, I'm trying to write a function that gets a certain coordinate and a list of specific coordinates and counts how many squares from that list is connected. e.g. let's say I send coordinate <code>('C', 5)</code> and list <code>[('C', 5), ('D', 5), ('D', 6), ('A', 4)]</code>, the function should return <code>[('C', 5), ('D', 5), ('D', 6)]</code> because all of the coordinates are connected. It would seem easy at object orientated programming but I cant figure a way to do that in functional programming.  </p>\n"}, {"tags": ["haskell", "ghc"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1540993837, "post_id": 53072255, "comment_id": 93066683, "body": "The would make a very good GHC feature request. There&#39;s no inherent reason not to let the threshold be changed by a compiler flag. The main goal of this strategy is to deal with <code>Ord</code> instances, since those have N^2 cases for N constructors. I&#39;m not really sure why this is used for <code>Eq</code>, but it might be to let the optimizer be a bit more clever when <code>Eq</code> and <code>Ord</code> code are used together."}], "answers": [{"tags": [], "owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "is_accepted": true, "score": 5, "last_activity_date": 1540932399, "creation_date": 1540932399, "answer_id": 53072667, "question_id": 53072255, "link": "https://stackoverflow.com/questions/53072255/is-there-any-way-to-control-how-ghc-derives-eq-instances/53072667#53072667", "title": "Is there any way to control how GHC derives `Eq` instances?", "body": "<p>If you care enough about this, you could write yourself some TH to generate the \"prettier\" <code>Eq</code> instances. You can take inspiration from Ryan's <code>deriving-compat</code> package, which has <a href=\"http://hackage.haskell.org/package/deriving-compat-0.5.2/docs/Data-Eq-Deriving.html#v:deriveEq\" rel=\"noreferrer\"><code>deriveEq :: Name -&gt; Q [Dec]</code></a> (you can't use it directly because Ryan, thorough as ever, made sure to port over exactly the same special logic for datatypes with more than 10 constructors).</p>\n\n<blockquote>\n  <p>What I'm hoping is that there is a flag that forces GHC to always produce the pretty instances (even if the code that is actually run is secretly using the ugly ones under the hood).</p>\n</blockquote>\n\n<p>No. Looks like 10 is a constant hardcoded into how the code for <code>Eq</code> is generated (<a href=\"https://github.com/ghc/ghc/blob/c1db1eb028b6962bac904975a6730edc6935ca8f/compiler/typecheck/TcGenDeriv.hs#L173\" rel=\"noreferrer\">source</a>).</p>\n"}], "owner": {"reputation": 132, "user_id": 4614475, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a4d6a64b3933ddea2ef5c18a82c88019?s=128&d=identicon&r=PG&f=1", "display_name": "user4614475", "link": "https://stackoverflow.com/users/4614475/user4614475"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 87, "favorite_count": 0, "accepted_answer_id": 53072667, "answer_count": 1, "score": 1, "last_activity_date": 1540932399, "creation_date": 1540930603, "question_id": 53072255, "link": "https://stackoverflow.com/questions/53072255/is-there-any-way-to-control-how-ghc-derives-eq-instances", "title": "Is there any way to control how GHC derives `Eq` instances?", "body": "<p>Suppose I have a simple enumerated type with 10 elements:</p>\n\n<pre><code>data Test = A | B  | C | D | E | F | G | H | I | J\n  deriving Eq\n</code></pre>\n\n<p>GHC derives the <code>Eq</code> instance as you'd expect:</p>\n\n<pre><code>==================== Derived instances ====================\nDerived class instances:\n  instance GHC.Classes.Eq Test.Test where\n    (GHC.Classes.==) (Test.A) (Test.A) = GHC.Types.True\n    (GHC.Classes.==) (Test.B) (Test.B) = GHC.Types.True\n    (GHC.Classes.==) (Test.C) (Test.C) = GHC.Types.True\n    (GHC.Classes.==) (Test.D) (Test.D) = GHC.Types.True\n    (GHC.Classes.==) (Test.E) (Test.E) = GHC.Types.True\n    (GHC.Classes.==) (Test.F) (Test.F) = GHC.Types.True\n    (GHC.Classes.==) (Test.G) (Test.G) = GHC.Types.True\n    (GHC.Classes.==) (Test.H) (Test.H) = GHC.Types.True\n    (GHC.Classes.==) (Test.I) (Test.I) = GHC.Types.True\n    (GHC.Classes.==) (Test.J) (Test.J) = GHC.Types.True\n    (GHC.Classes.==) _ _ = GHC.Types.False\n</code></pre>\n\n<p>However, once you add an 11th constructor <code>K</code>, GHC changes the way the instance is derived (ostensibly for efficiency reasons):</p>\n\n<pre><code>==================== Derived instances ====================\nDerived class instances:\n  instance GHC.Classes.Eq Test.Test where\n    (GHC.Classes.==) a_a1uD b_a1uE\n      = case (Test.$con2tag_7MvV0ZqFtYZ8X4oGLC1npJ a_a1uD) of {\n          a#_a1uF\n            -&gt; case (Test.$con2tag_7MvV0ZqFtYZ8X4oGLC1npJ b_a1uE) of {\n                 b#_a1uG -&gt; (GHC.Prim.tagToEnum# (a#_a1uF GHC.Prim.==# b#_a1uG)) } }\n\n  Test.$con2tag_7MvV0ZqFtYZ8X4oGLC1npJ :: Test.Test -&gt; GHC.Prim.Int#\n  Test.$con2tag_7MvV0ZqFtYZ8X4oGLC1npJ a_a1uC\n    = GHC.Base.getTag a_a1uC\n</code></pre>\n\n<p><strong>The issue</strong></p>\n\n<p>I'm using a tool that consumes Haskell source code and it can easily handle the former pretty-looking instances but not the latter ugly ones.  What I'm hoping is that there is a flag that forces GHC to always produce the pretty instances (even if the code that is actually run is secretly using the ugly ones under the hood).  Ideally, I would not have to modify the source code (otherwise, I'd probably just bite the bullet and hand-write the pretty instances myself).</p>\n\n<p>Is this currently possible?</p>\n"}, {"tags": ["haskell", "runtime-error", "non-exhaustive-patterns"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 5, "creation_date": 1540922315, "post_id": 53070194, "comment_id": 93038900, "body": "You haven&#39;t included a case for the empty string"}, {"owner": {"reputation": 315, "user_id": 10553912, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9f00c8ffb0cb3b02b08b70ce031bd004?s=128&d=identicon&r=PG&f=1", "display_name": "racherb", "link": "https://stackoverflow.com/users/10553912/racherb"}, "edited": false, "score": 0, "creation_date": 1540922589, "post_id": 53070194, "comment_id": 93039023, "body": "You need to incorporate the ending criteria in the foo function. For example, for when you consume the entire tail of the list. It would also be useful to add when you only have one element."}, {"owner": {"reputation": 62252, "user_id": 1435869, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TrEd9.jpg?s=128&g=1", "display_name": "karakfa", "link": "https://stackoverflow.com/users/1435869/karakfa"}, "edited": false, "score": 0, "creation_date": 1540923361, "post_id": 53070194, "comment_id": 93039419, "body": "Also, single element list case need to be handled."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 62252, "user_id": 1435869, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TrEd9.jpg?s=128&g=1", "display_name": "karakfa", "link": "https://stackoverflow.com/users/1435869/karakfa"}, "edited": false, "score": 2, "creation_date": 1540923848, "post_id": 53070194, "comment_id": 93039624, "body": "@karakfa I&#39;m very far from a Haskell expert, but I&#39;m sure that&#39;s not the case. <code>x:xs</code> covers all non-empty lists. If it is a singleton list, <code>x</code> is that one element and <code>xs</code> is the empty list."}, {"owner": {"reputation": 62252, "user_id": 1435869, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TrEd9.jpg?s=128&g=1", "display_name": "karakfa", "link": "https://stackoverflow.com/users/1435869/karakfa"}, "edited": false, "score": 2, "creation_date": 1540924233, "post_id": 53070194, "comment_id": 93039828, "body": "Test with odd number of elements, <code>tail xs</code> will fail with empty list error.  Perhaps your input is sanitized already but what if it&#39;s not."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1540924406, "post_id": 53070194, "comment_id": 93039916, "body": "Oh good point, I hadn&#39;t seen the <code>tail xs</code>"}, {"owner": {"reputation": 315, "user_id": 10553912, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9f00c8ffb0cb3b02b08b70ce031bd004?s=128&d=identicon&r=PG&f=1", "display_name": "racherb", "link": "https://stackoverflow.com/users/10553912/racherb"}, "edited": false, "score": 0, "creation_date": 1540927584, "post_id": 53070194, "comment_id": 93041501, "body": "Caution, the case &quot;00004a5b10c&quot; may not work as expected. Could you specify what output you expect to get for that input?"}], "answers": [{"comments": [{"owner": {"reputation": 45741, "user_id": 744178, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a3193139ea494c45e63752504f5ff1f2?s=128&d=identicon&r=PG", "display_name": "jwodder", "link": "https://stackoverflow.com/users/744178/jwodder"}, "edited": false, "score": 0, "creation_date": 1540952905, "post_id": 53074356, "comment_id": 93048950, "body": "This doesn&#39;t answer the question of what case the OP&#39;s code missed."}, {"owner": {"reputation": 315, "user_id": 10553912, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9f00c8ffb0cb3b02b08b70ce031bd004?s=128&d=identicon&r=PG&f=1", "display_name": "racherb", "link": "https://stackoverflow.com/users/10553912/racherb"}, "reply_to_user": {"reputation": 45741, "user_id": 744178, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a3193139ea494c45e63752504f5ff1f2?s=128&d=identicon&r=PG", "display_name": "jwodder", "link": "https://stackoverflow.com/users/744178/jwodder"}, "edited": false, "score": 1, "creation_date": 1540953212, "post_id": 53074356, "comment_id": 93049015, "body": "I will edit the answer addressing the reason for the error."}], "tags": [], "owner": {"reputation": 315, "user_id": 10553912, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9f00c8ffb0cb3b02b08b70ce031bd004?s=128&d=identicon&r=PG&f=1", "display_name": "racherb", "link": "https://stackoverflow.com/users/10553912/racherb"}, "is_accepted": true, "score": 0, "last_activity_date": 1540956180, "last_edit_date": 1540956180, "creation_date": 1540942810, "answer_id": 53074356, "question_id": 53070194, "link": "https://stackoverflow.com/questions/53070194/non-exhaustive-patterns-in-function-exception-in-haskell/53074356#53074356", "title": "Non-exhaustive patterns in function Exception in haskell", "body": "<p><strong>Non-exhaustive patterns in function foo</strong></p>\n\n<p>This error occurs at runtime because the function has not been declared according to the pattern given in the evaluation. This particular case does not consider the end of the tail of a list.</p>\n\n<p>The solution that I present below is an intention to generalize the use case presented. </p>\n\n<p>Note the definition of the function <code>reproduce</code>.</p>\n\n<pre><code>reproduce []        .. --Empty list\nreproduce (x:[])    .. --A single value in the list\nreproduce (x:y:[])  .. --A list with only two elements x and y\nreproduce (x:y:xs)  .. --A list with the first two elements x and y and the rest of the list xs\n</code></pre>\n\n<blockquote>\n  <p>Here is a solution to the problem presented considering a\n  generalization of the foo function.</p>\n</blockquote>\n\n<p><strong>The code</strong>:</p>\n\n<pre><code>--We import the functions to use\nimport Data.List (replicate, group, groupBy, all)\nimport Data.Char (isDigit)\n\n--Grouping by digits\ngbDigit :: String -&gt; [String]\ngbDigit = groupBy (\\x y -&gt; (isDigit x) &amp;&amp; (isDigit y)) --ETA reduce form\n\n--Grouping by nor digits\ngbNoDigit :: String -&gt; [String]\ngbNoDigit s = fmap concat $ groupBy (\\x y -&gt; not (all isDigit x) &amp;&amp; not (all isDigit y)) (gbDigit s)\n\n--Prepare applying grouping \n--by digit first and not by digit afterwards, therefore:\nprepare = gbNoDigit\n\nfoo :: String -&gt; String\nfoo x = concat $ reproduce (prepare x)\n\nreproduce :: [String] -&gt; [String]\nreproduce [] = []        --Empty list, nothing to do\nreproduce (x:[]) = []    --A numerical value and nothing to replicate, nothing to do\nreproduce (x:y:[]) = (replicate (read x::Int)) y --A numeric value and a string to replicate, so we replicate\nreproduce (x:y:xs) = (replicate (read x::Int)) y &lt;&gt; reproduce xs --A numeric value, a string to replicate, and a tail to continue\n</code></pre>\n\n<p><strong>Step by step</strong>:</p>\n\n<ul>\n<li>Given an entry <strong>\"003aA3b4vX10z\"</strong></li>\n<li>Group by Digits: <code>[\"003\",\"a\",\"A\",\"3\",\"b\",\"4\",\"v\",\"X\",\"10\",\"z\"]</code></li>\n<li>Group by NoDigits: <code>[\"003\",\"aA\",\"3\",\"b\",\"4\",\"vX\",\"10\",\"z\"]</code></li>\n<li>Reproduce &amp; Concat: <code>\"aAaAaAbbbvXvXvXvXzzzzzzzzzz\"</code></li>\n</ul>\n\n<p><strong>Test cases</strong>:</p>\n\n<pre><code>Prelude&gt; foo \"00004a5b\"\nPrelude&gt; \"aaaabbbbb\"\n\nPrelude&gt; foo \"4a\"\nPrelude&gt; \"aaaa\"\n\nPrelude&gt; foo \"4a10B\"\nPrelude&gt; \"aaaaBBBBBBBBBB\"\n\nPrelude&gt; foo \"3w1.1w6o1l4y1.1com\"\nPrelude&gt; \"www.woooooolyyyy.com\"\n</code></pre>\n"}], "owner": {"reputation": 3, "user_id": 10581778, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3c33def2432b76d57ef7cbf81edeab3c?s=128&d=identicon&r=PG&f=1", "display_name": "nEYncI", "link": "https://stackoverflow.com/users/10581778/neynci"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1315, "favorite_count": 0, "closed_date": 1540997647, "accepted_answer_id": 53074356, "answer_count": 1, "score": -2, "last_activity_date": 1540976942, "creation_date": 1540922176, "last_edit_date": 1540976942, "question_id": 53070194, "link": "https://stackoverflow.com/questions/53070194/non-exhaustive-patterns-in-function-exception-in-haskell", "closed_reason": "Duplicate", "title": "Non-exhaustive patterns in function Exception in haskell", "body": "<p>I have this code: </p>\n\n<pre><code>import Data.Char\nfoo  :: String -&gt; String\nfoo (x:xs) = if (digitToInt(x)) == 0 \n                     then foo xs\n                     else if (digitToInt(x)) /= 0   \n                          then replicate (digitToInt(x)) (head $ take 1 xs) ++ foo (tail xs )\n                     else \"\"    \n</code></pre>\n\n<p>input:   <code>foo \"4a5b\"</code> </p>\n\n<p>output:  <code>\"aaaabbbbb\"</code></p>\n\n<p>this line <code>if (digitToInt(x)) == 0</code> checks if the number is 0 if so then it will expand with the rest of the string:</p>\n\n<p>Example:</p>\n\n<p>input:   <code>foo \"00004a5b\"</code> </p>\n\n<p>output:  <code>\"aaaabbbbb\"</code></p>\n\n<p>and I added  <code>else if (digitToInt(x)) /= 0</code> to check for the other cases.</p>\n\n<p>However it gives me:</p>\n\n<pre><code>*Main&gt; foo \"4a5b\"\n\"aaaabbbbb*** Exception: test.hs:(89,1)-(93,28): Non-exhaustive patterns in function foo\n</code></pre>\n\n<p>error. Which cases did I miss here?</p>\n"}, {"tags": ["haskell", "recursion", "minimum", "type-mismatch"], "comments": [{"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 1, "creation_date": 1540915091, "post_id": 53068186, "comment_id": 93034890, "body": "I think you just need parentheses. <code>shortest (y:[list])</code> and the same for the x case. The precedence of <code>:</code> makes it read like <code>(shortest y) : [list]</code>"}, {"owner": {"reputation": 243, "user_id": 9972832, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1844102880c776923b8cc41aa0c4f2f0?s=128&d=identicon&r=PG&f=1", "display_name": "Chilly", "link": "https://stackoverflow.com/users/9972832/chilly"}, "reply_to_user": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 0, "creation_date": 1540915174, "post_id": 53068186, "comment_id": 93034952, "body": "@jkeuhlen thank you! I literally just spotted that myself, been looking at it so long I wasn&#39;t seeing the obvious!"}, {"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 0, "creation_date": 1540915342, "post_id": 53068186, "comment_id": 93035057, "body": "glad that helped. I added it as an answer since that&#39;s the more permanent place for these kinds of things rather than comments."}], "answers": [{"comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1540915841, "post_id": 53068369, "comment_id": 93035354, "body": "right, although, <code>(y:[list])</code> is also wrong. you need to correct that. ( <code>(1:[2]) == [1,2]</code> )."}, {"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1540927622, "post_id": 53068369, "comment_id": 93041523, "body": "@WillNess Thanks! Fixed now. I just threw this together as a quick comment and moved it to an answer when the OP said it worked for them. I probably should have done more due diligence in the comment-&gt;answer transition."}], "tags": [], "owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "is_accepted": false, "score": 2, "last_activity_date": 1540927585, "last_edit_date": 1540927585, "creation_date": 1540915315, "answer_id": 53068369, "question_id": 53068186, "link": "https://stackoverflow.com/questions/53068186/finding-the-shortest-list-in-a-list-of-lists-in-haskell/53068369#53068369", "title": "Finding the shortest list in a list of lists in Haskell", "body": "<p>I think you just need parentheses: <code>shortest (y:list)</code> and the same for the <code>x</code> case. </p>\n\n<p>The precedence of <code>:</code> makes it read like <code>(shortest y) : list</code></p>\n"}, {"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1540918357, "post_id": 53068442, "comment_id": 93036863, "body": "Your final solution has the downside that it requires an <code>Ord a</code> constraint, and with many lists of the same length may do much more work. Consider using <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Semigroup.html#t:Arg\" rel=\"nofollow noreferrer\"><code>Arg</code></a> instead of a tuple to alleviate these two problems (note its <code>instance Ord a =&gt; Ord (Arg a b)</code> which does not require <code>Ord b</code> in its context)."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1540918952, "post_id": 53068442, "comment_id": 93037181, "body": "Yes, that&#39;s a bigger issue than the one I pointed out. Is there a better way to unwrap the <code>Arg</code> value in the end? Also, is there a way to simplify that using <code>ArgMin</code>?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1540921231, "post_id": 53068442, "comment_id": 93038343, "body": "For a complete worked solution, consider <code>shortest xs = x where Arg _ x = minimum [Arg (length x) x | x &lt;- xs]</code>. You can use <code>ArgMin</code>, but it&#39;s a bit noisier syntactically."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 5, "last_activity_date": 1540922496, "last_edit_date": 1540922496, "creation_date": 1540915564, "answer_id": 53068442, "question_id": 53068186, "link": "https://stackoverflow.com/questions/53068186/finding-the-shortest-list-in-a-list-of-lists-in-haskell/53068442#53068442", "title": "Finding the shortest list in a list of lists in Haskell", "body": "<p><code>list</code> is already the tail of your input; you don't need to (nor should you) wrap it in another list.</p>\n\n<pre><code>shortest (x:y:list) = shortest $ (if length x &gt; length y then y else x) : list\n</code></pre>\n\n<p>At each step, it's just a question of which element, <code>x</code> or <code>y</code>, you remove from the input to the recursive call.</p>\n\n<p>Another way, which doesn't require two base cases, is to just compare the head of the list to the result of recursing on the tail.</p>\n\n<pre><code>shortest [] = []\nshortest (x:xs) = let s = shortest xs\n                  in if length s &lt; length x then s else x\n</code></pre>\n\n<p>Finally, tuples compare lexicographically, so you can also dispense with explicit recursion by tagging each list with its length, finding the smallest tagged value, then extracting the original list.</p>\n\n<pre><code>shortest = snd . minimum . map (\\x -&gt; (length x, x))\n</code></pre>\n\n<p>Using <code>Control.Arrow</code>, you can write the argument to <code>map</code> as <code>(length &amp;&amp;&amp; id)</code>.</p>\n\n<p>Caveat for the last approach: since lists also compare lexicographically, the final result if you have multiple lists with the shortest length will depend on how the list values themselves compare. The first two examples, by contrast, are stable; the first such shortest list is returned.</p>\n\n<hr>\n\n<p>Daniel Wagner points out a better solution for using <code>minimum</code>, which is to wrap each element in an <code>Arg</code> value which lets two lists be compared <em>solely</em> on their lengths, without considering the lists' contents.</p>\n\n<pre><code>import Data.Semigroup\nshortest xs = x where Arg _ x = minimum [Arg (length x) x | x &lt;- xs]\n</code></pre>\n\n<p><code>Arg</code> is basically a 2-element product type which <em>only</em> uses the first element for its <code>Ord</code> instance, unlike <code>(,)</code> which uses both.</p>\n"}, {"tags": [], "owner": {"reputation": 71, "user_id": 8658248, "user_type": "registered", "profile_image": "https://graph.facebook.com/1512880645455403/picture?type=large", "display_name": "Erik H Nguyen", "link": "https://stackoverflow.com/users/8658248/erik-h-nguyen"}, "is_accepted": false, "score": 4, "last_activity_date": 1540918685, "creation_date": 1540918685, "answer_id": 53069347, "question_id": 53068186, "link": "https://stackoverflow.com/questions/53068186/finding-the-shortest-list-in-a-list-of-lists-in-haskell/53069347#53069347", "title": "Finding the shortest list in a list of lists in Haskell", "body": "<pre><code>  shortest []=[]\n  shortest [y] = y\n  shortest (x:y:list)\n   |length x &gt; length y = shortest (y:list)            \n   |otherwise = shortest (x:list)\n</code></pre>\n\n<p>This works :), also worth mentioning is if you have 2 or several elements in the list which are \"shortest\" the first element will always pop out.</p>\n\n<p>i.e.</p>\n\n<pre><code>   Prelude&gt;shortest[[1],[2],[3]]\n   [1]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 2, "creation_date": 1588270017, "post_id": 61529488, "comment_id": 108841570, "body": "Or even <code>minimumBy $ comparing length</code>."}], "tags": [], "owner": {"reputation": 51, "user_id": 13442778, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AOh14Ggp7LSwt0Zzi32h3pDf3RrHgWg9bRWCDy4yXgwacA=k-s128", "display_name": "Russell Emerine", "link": "https://stackoverflow.com/users/13442778/russell-emerine"}, "is_accepted": false, "score": 3, "last_activity_date": 1588268335, "creation_date": 1588268335, "answer_id": 61529488, "question_id": 53068186, "link": "https://stackoverflow.com/questions/53068186/finding-the-shortest-list-in-a-list-of-lists-in-haskell/61529488#61529488", "title": "Finding the shortest list in a list of lists in Haskell", "body": "<pre><code>import Data.List\nimport Data.Ord\nshortest list = minimumBy (comparing length) list\n</code></pre>\n\n<p>point-free:</p>\n\n<pre><code>shortest = minimumBy (comparing length)\n</code></pre>\n\n<p>These libraries are included with GHC. Their names say what they do pretty well. Perhaps add in a separate case for empty list.</p>\n"}], "owner": {"reputation": 243, "user_id": 9972832, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1844102880c776923b8cc41aa0c4f2f0?s=128&d=identicon&r=PG&f=1", "display_name": "Chilly", "link": "https://stackoverflow.com/users/9972832/chilly"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1029, "favorite_count": 0, "accepted_answer_id": 53068442, "answer_count": 4, "score": 2, "last_activity_date": 1588268335, "creation_date": 1540914643, "last_edit_date": 1540915964, "question_id": 53068186, "link": "https://stackoverflow.com/questions/53068186/finding-the-shortest-list-in-a-list-of-lists-in-haskell", "title": "Finding the shortest list in a list of lists in Haskell", "body": "<p>I am having some difficulty with a program I've written using Haskell. The idea behind it is to recursively find the shortest list in a list of lists and return that. I've managed to write the program okay but I can't seem to figure out what I've done wrong in it. These are the errors that I get when I try to compile it:</p>\n\n<ul>\n<li>Couldn't match type \u2018a\u2019 with \u2018[[a]]\u2019, \u2018a\u2019 is a rigid type variable bound by the type signature for: shortest :: forall a. [[a]] -> [a] at shortest.hs:1:13. Expected type: [[[a]]], Actual type: [a]</li>\n<li>In the first argument of \u2018shortest\u2019, namely \u2018y\u2019. In the first argument of \u2018(:)\u2019, namely \u2018shortest y\u2019. In the expression: shortest y : [list]</li>\n<li>Relevant bindings include list :: [[a]] (bound at shortest.hs:4:15), y :: [a] (bound at shortest.hs:4:13), x :: [a] (bound at shortest.hs:4:11), shortest :: [[a]] -> [a] (bound at shortest.hs:2:1).</li>\n</ul>\n\n<p>Here is the code I'm using:</p>\n\n<pre><code>shortest :: [[a]] -&gt; [a]\nshortest [] = []\nshortest [y] = y\nshortest (x:y:list)\n   | length x &gt; length y = shortest y:[list]\n   | otherwise = shortest x:[list]\n</code></pre>\n\n<p>If anyone could give me any pointers as to where I'm going wrong it would be much appreciated!</p>\n"}, {"tags": ["haskell", "xmonad"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1540912667, "post_id": 53067280, "comment_id": 93033360, "body": "Using <code>visudo</code> to allow your account to execute specific commands should be enough. Cf. the &quot;enable explicitly defined commands&quot; examples <a href=\"https://wiki.archlinux.org/index.php/sudo#Example_entries\" rel=\"nofollow noreferrer\">in the relevant Arch Wiki page</a>. Alternatively, use a tool that doesn&#39;t require elevated permissions, such as <a href=\"https://wiki.archlinux.org/index.php/backlight#xbacklight\" rel=\"nofollow noreferrer\">xbacklight</a>."}], "answers": [{"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 2, "last_activity_date": 1540917201, "creation_date": 1540917201, "answer_id": 53068976, "question_id": 53067280, "link": "https://stackoverflow.com/questions/53067280/xmonad-brightness-and-file-permissions/53068976#53068976", "title": "Xmonad: brightness and file permissions", "body": "<p>I have this in in my <code>sudoers</code> configuration:</p>\n\n\n\n<pre class=\"lang-sh prettyprint-override\"><code># /etc/sudoers.d/brightness-mod</code></pre>\n\n<pre class=\"lang-sh prettyprint-override\"><code>ALL ALL = (ALL) NOPASSWD: /usr/bin/tee /sys/class/backlight/intel_backlight/brightness\n</code></pre>\n\n<p>This allows you to execute, from user mode, commands like</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>echo 200 | sudo tee /sys/class/backlight/intel_backlight/brightness\n</code></pre>\n\n<p>Always use <code>visudo</code> to edit sudoers configuration stuff.</p>\n"}], "owner": {"reputation": 185, "user_id": 2568297, "user_type": "registered", "accept_rate": 50, "profile_image": "https://graph.facebook.com/1539093610/picture?type=large", "display_name": "Julian Sutherland", "link": "https://stackoverflow.com/users/2568297/julian-sutherland"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 298, "favorite_count": 0, "accepted_answer_id": 53068976, "answer_count": 1, "score": 0, "last_activity_date": 1540917201, "creation_date": 1540911842, "question_id": 53067280, "link": "https://stackoverflow.com/questions/53067280/xmonad-brightness-and-file-permissions", "title": "Xmonad: brightness and file permissions", "body": "<p>I'm trying to setup my Xmonad to change the back-light intensity on my laptop.</p>\n\n<p>However, to do so, I have to be able to write to the file <code>/sys/class/backlight/intel_backlight/brightness</code>, which requires the application performing the update to be sudoed (all other suggestions I have tried to use to change the back-light intensity seems to \"simulate\" it by reducing the brightness of the pixels rather than the back-light).</p>\n\n<p>I've written the necessary code to perform this update and tested it using a sudoed ghci instance, however, when I add this to my Xmonad config, I get a permission denied error.</p>\n\n<p>My question is, what are the usual methodologies for giving window managers extra permissions where required? (I'd ideally not want to change the permissions of this file)</p>\n"}, {"tags": ["haskell", "syntax", "syntax-error", "type-mismatch", "function-call"], "comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1540915077, "post_id": 53067134, "comment_id": 93034884, "body": "you &quot;tested function fooHelp and it works fine&quot;? if you&#39;d <i>actually tested calling the function</i> instead of trying out it parts, you&#39;d see the problem right away, by yourself. for quick-n-dirty testing, you can enter your function definitions in GHCi multi-line mode, between the <code>:{</code> and <code>:}</code> commands."}], "answers": [{"tags": [], "owner": {"reputation": 45741, "user_id": 744178, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a3193139ea494c45e63752504f5ff1f2?s=128&d=identicon&r=PG", "display_name": "jwodder", "link": "https://stackoverflow.com/users/744178/jwodder"}, "is_accepted": false, "score": 4, "last_activity_date": 1540912014, "creation_date": 1540912014, "answer_id": 53067343, "question_id": 53067134, "link": "https://stackoverflow.com/questions/53067134/haskell-couldnt-match-type-char-int-with-char-error/53067343#53067343", "title": "haskell - Couldn&#39;t match type \u2018(Char, Int)\u2019 with \u2018[Char]\u2019 error", "body": "<p>The expression <code>fooHelp(x, read $ charToString( xs !! 0  ) :: Int)</code> tries to pass a single argument \u2014 a <code>(Char, Int)</code> pair \u2014 to <code>fooHelp</code>, which is wrong.  Presumably, you want to instead write:</p>\n\n<pre><code>fooHelp (charToString x) (read $ charToString( xs !! 0  ) :: Int)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 4, "last_activity_date": 1540912439, "last_edit_date": 1540912439, "creation_date": 1540912114, "answer_id": 53067379, "question_id": 53067134, "link": "https://stackoverflow.com/questions/53067134/haskell-couldnt-match-type-char-int-with-char-error/53067379#53067379", "title": "haskell - Couldn&#39;t match type \u2018(Char, Int)\u2019 with \u2018[Char]\u2019 error", "body": "<p>A classic mistake is to call a function like <code>f (x1, x2)</code>. In Haskell functions have <em>one</em> parameter, and often this is <em>not</em> a tuple.</p>\n\n<p>Your <code>fooHelper</code> function has type:</p>\n\n<pre><code>fooHelp :: String -&gt; (Int -&gt; String)\n</code></pre>\n\n<p>so it is a function that takes a <code>String</code>, and the returns a function that maps <code>Int</code>s on <code>String</code>s. You thus should call the function like:</p>\n\n<pre><code>(fooHelp x) (read $ charToString( xs !! 0  ) :: Int)\n</code></pre>\n\n<p>or less verbose:</p>\n\n<pre><code>(fooHelp x) (read $ charToString( xs !! 0  ) :: Int)\n</code></pre>\n\n<p>But now the types still not match: <code>x</code> is a <code>Char</code>, not a <code>String</code>, you can wrap it in a list, like:</p>\n\n<pre><code>fooHelp [x] (read $ charToString( xs !! 0  ) :: Int)\n</code></pre>\n\n<p>like:</p>\n\n<pre><code>foo :: String -&gt; String\nfoo (x:xs) = let curent = fooHelp [x] (read $ charToString( xs !! 0  ) :: Int)\n             in x : (curent) ++ foo (tail xs)</code></pre>\n\n<p>But still this function has a problem: we iterate over the string, so eventually we will reach an empty string, and <code>foo</code> has no case for that. We need to return the empty string in that case, like:</p>\n\n<pre><code>foo :: String -&gt; String\nfoo (x:xs) = let curent = fooHelp [x] (read $ charToString( xs !! 0  ) :: Int)\n             in x : (curent) ++ foo (tail xs)\nfoo [] = \"\"</code></pre>\n\n<p>But it is still not very elegant. We here perform a lot of unnecessary operations, like wrapping characters to strings, etc.</p>\n\n<p>We can make use of the <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:replicate\" rel=\"nofollow noreferrer\"><strong><code>replicate :: Int -&gt; a -&gt; [a]</code></strong></a> function to repeat a character a given number of times. For example:</p>\n\n<pre><code>Prelude&gt; replicate 3 'a'\n\"aaa\" \n</code></pre>\n\n<p>Furthermore the <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Char.html#v:digitToInt\" rel=\"nofollow noreferrer\"><strong><code>digitToInt :: Char -&gt; Int</code></strong></a> function can parse a digit character to the corresponding <code>Int</code>:</p>\n\n<pre><code>Prelude Data.Char&gt; digitToInt '3'\n3 \n</code></pre>\n\n<p>So we here can use these two to each time take the first two characters of the string, and use <code>replicate (digitToInt k) x</code> to generate a string where <code>x</code> si repeated the requested amount of time, and perform recursion on the rest of the string, like:</p>\n\n<pre><code>import Data.Char(digitToInt)\n\nfoo :: String -&gt; String\nfoo (x:k:xs) = replicate (digitToInt k) x ++ foo xs\nfoo _ = \"\"\n</code></pre>\n"}], "owner": {"reputation": 105, "user_id": 6096729, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/029b459c6b382344dfff47179b6d9a91?s=128&d=identicon&r=PG&f=1", "display_name": "vucko95", "link": "https://stackoverflow.com/users/6096729/vucko95"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 238, "favorite_count": 0, "accepted_answer_id": 53067379, "answer_count": 2, "score": 1, "last_activity_date": 1540914617, "creation_date": 1540911373, "last_edit_date": 1540914617, "question_id": 53067134, "link": "https://stackoverflow.com/questions/53067134/haskell-couldnt-match-type-char-int-with-char-error", "title": "haskell - Couldn&#39;t match type \u2018(Char, Int)\u2019 with \u2018[Char]\u2019 error", "body": "<p>I am writing a function to expand a String </p>\n\n<p>Example: </p>\n\n<pre><code>foo \"a4b4\"\n</code></pre>\n\n<p>should give back:</p>\n\n<pre><code>\"aaaabbbb\"\n</code></pre>\n\n<p>Here is my code: </p>\n\n<pre><code>foo :: String -&gt; String\nfoo (x:xs) = let curent = fooHelp(x, read $ charToString( xs !! 0  ) :: Int)\n             in x : (curent) ++ foo (tail xs)\n</code></pre>\n\n<p>fooHelp: </p>\n\n<pre><code>fooHelp :: String -&gt; Int -&gt; String\nfooHelp x n \n             | n &gt;= 3 = x ++ fooHelp x (n - 1) \n             | n == 2 = x\n             | n == 1 = \"\"\n</code></pre>\n\n<p>and charToString: </p>\n\n<pre><code>charToString :: Char -&gt; String\ncharToString c = [c]\n</code></pre>\n\n<p>it takes x and appends it to the current. In current fooHelp will give back expanded String</p>\n\n<p>example : <code>foo \"a4b4\"</code> then <code>x = \"a\"</code>, <code>xs = \"4b4\"</code>, <code>xs !! 0 = '4'</code>\n<code>read $ charToString( xs !! 0 ) :: Int)</code> will convert char <code>'4'</code> to int <code>4</code> and pass it to fooHelp alongside with x(\"a\") -> <code>fooHelp(x, 4)</code> and give back \"aaa\". Then <code>x : current</code> should give back <code>\"aaaa\"</code>because <code>x = \"a\"</code> and current <code>\"aaa\"</code> and then recursive call with <code>++ foo tail xs</code> where <code>xs =\"b4\"</code>  and it should repeat the process. </p>\n\n<p>I am getting the error: </p>\n\n<pre><code>test.hs:173:34: error:\n    \u2022 Couldn't match type \u2018(Char, Int)\u2019 with \u2018[Char]\u2019\n      Expected type: String\n        Actual type: (Char, Int)\n    \u2022 In the first argument of \u2018fooHelp\u2019, namely\n        \u2018(x, read $ charToString (xs !! 0) :: Int)\u2019\n      In the expression:\n        fooHelp (x, read $ charToString (xs !! 0) :: Int)\n      In an equation for \u2018curent\u2019:\n          curent = fooHelp (x, read $ charToString (xs !! 0) :: Int)\n    |\n173 | foo (x:xs) = let curent = fooHelp(x, read $ charToString( xs !! 0  ) :: Int)\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>Where did I make mistake? I tested function fooHelp and it works fine with such arguments as in foo. </p>\n\n<p>Testing fooHelp: </p>\n\n<pre><code>xs = \"4b4\"\n\ntest =  read $ charToString( xs !!0 ) :: Int\n\n*Main&gt; test\n4\n</code></pre>\n"}, {"tags": ["haskell", "ghc"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 2, "creation_date": 1540910818, "post_id": 53066871, "comment_id": 93032198, "body": "Have you tried <code>:t readPrec</code>? The result of that should be answer enough..."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1540910867, "post_id": 53066871, "comment_id": 93032218, "body": "It is <code>readsPrec</code> (with an <code>s</code>), not <code>readPrec</code>."}, {"owner": {"reputation": 4390, "user_id": 5978, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/f17c0b98ba353560769ef225c5c5c9fe?s=128&d=identicon&r=PG", "display_name": "luntain", "link": "https://stackoverflow.com/users/5978/luntain"}, "edited": false, "score": 0, "creation_date": 1540911061, "post_id": 53066871, "comment_id": 93032350, "body": "<code>:t readPrec</code> -&gt; var not in scope"}, {"owner": {"reputation": 4390, "user_id": 5978, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/f17c0b98ba353560769ef225c5c5c9fe?s=128&d=identicon&r=PG", "display_name": "luntain", "link": "https://stackoverflow.com/users/5978/luntain"}, "edited": false, "score": 0, "creation_date": 1540911144, "post_id": 53066871, "comment_id": 93032402, "body": "<code>readsPrec</code> is the one using <code>ReadS</code>"}], "answers": [{"tags": [], "owner": {"reputation": 4390, "user_id": 5978, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/f17c0b98ba353560769ef225c5c5c9fe?s=128&d=identicon&r=PG", "display_name": "luntain", "link": "https://stackoverflow.com/users/5978/luntain"}, "is_accepted": false, "score": 5, "last_activity_date": 1540911582, "creation_date": 1540911582, "answer_id": 53067202, "question_id": 53066871, "link": "https://stackoverflow.com/questions/53066871/readprec-is-not-a-visible-method-of-class-read/53067202#53067202", "title": "\u2018readPrec\u2019 is not a (visible) method of class \u2018Read\u2019", "body": "<p>Apparently <code>readPrec</code> is not exported from <code>Prelude</code>... I had to import <code>Text.Read</code>. Thanks to leftaroundabout for the hint.</p>\n"}], "owner": {"reputation": 4390, "user_id": 5978, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/f17c0b98ba353560769ef225c5c5c9fe?s=128&d=identicon&r=PG", "display_name": "luntain", "link": "https://stackoverflow.com/users/5978/luntain"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 475, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1540911582, "creation_date": 1540910605, "last_edit_date": 1540911282, "question_id": 53066871, "link": "https://stackoverflow.com/questions/53066871/readprec-is-not-a-visible-method-of-class-read", "title": "\u2018readPrec\u2019 is not a (visible) method of class \u2018Read\u2019", "body": "<p>The docs suggest <code>ReadPrec</code> is the more efficient representation for parsers than <code>ReadS</code> and say it is the one ghc uses to define derived <code>Read</code> instances. However, ghc gives the error that the method is not visible when I try to implement a <code>Read</code> with it.</p>\n\n<pre><code>instance Read PosTag where\n   readPrec = mconcat . map posTagFromChar &lt;$&gt; lift (many (satisfy (`elem` \"nva\")))\n</code></pre>\n\n<p><a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Text-Read.html\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/base-4.12.0.0/docs/Text-Read.html</a></p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1540905369, "post_id": 53065105, "comment_id": 93028512, "body": "That is because here your <code>y</code> is <i>not</i> interpreted as an <code>Int</code> but as a <code>Floating</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1540905503, "post_id": 53065105, "comment_id": 93028576, "body": "In Haskell there are no implicit numeric type conversions, you have to be explicit about them, e.g. by using <code>fromIntegral</code> and similar conversion functions."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 5, "last_activity_date": 1540905694, "creation_date": 1540905694, "answer_id": 53065261, "question_id": 53065105, "link": "https://stackoverflow.com/questions/53065105/how-to-use-haskell-ceiling-function/53065261#53065261", "title": "How to use Haskell ceiling function", "body": "<blockquote>\n  <p>But if I try this function by simply using a real number:</p>\n\n<pre><code>test = 5 * 10 ^ (ceiling ( logBase 10 1000 ) )  + 100\n</code></pre>\n</blockquote>\n\n<p>Here <code>1000</code> is <em>not</em> interpreted as an <code>Int</code>, but as a <code>Floating</code> type. This is necessary, since the type of <code>logBase</code> has type <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:logBase\" rel=\"noreferrer\"><strong><code>logBase :: Floating a =&gt; a -&gt; a -&gt; a</code></strong></a>.</p>\n\n<p>You can convert an <code>Integral</code> type like an <code>Int</code> to a <code>Num</code> type with <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:fromIntegral\" rel=\"noreferrer\"><strong><code>fromIntegral :: (Integral a, Num b) =&gt; a -&gt; b</code></strong></a>:</p>\n\n<pre><code>test_1 :: Int -&gt; Int\ntest_1 y = 5 * 10 ^ ceiling (logBase 10 <b>(fromIntegral y)</b>) + 100</code></pre>\n\n<p>But perhaps it makes more sense to perform the log10 in integer space instead.</p>\n"}], "owner": {"reputation": 1417, "user_id": 5432156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72991dcaeb7a19e585f4f07cb503783d?s=128&d=identicon&r=PG&f=1", "display_name": "ganidat", "link": "https://stackoverflow.com/users/5432156/ganidat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1407, "favorite_count": 0, "accepted_answer_id": 53065261, "answer_count": 1, "score": 3, "last_activity_date": 1540905694, "creation_date": 1540905231, "question_id": 53065105, "link": "https://stackoverflow.com/questions/53065105/how-to-use-haskell-ceiling-function", "title": "How to use Haskell ceiling function", "body": "<pre><code>test_1 :: Int -&gt; Int\ntest_1 y = 5 * 10 ^ (ceiling ( logBase 10 y  ) )  + 100\n</code></pre>\n\n<p>Here is the error message: </p>\n\n<pre><code>parse.hs:23:22: error:\n    \u2022 No instance for (RealFrac Int) arising from a use of \u2018ceiling\u2019\n    \u2022 In the second argument of \u2018(^)\u2019, namely\n        \u2018(ceiling (logBase 10 y))\u2019\n      In the second argument of \u2018(*)\u2019, namely\n        \u201810 ^ (ceiling (logBase 10 y))\u2019\n      In the first argument of \u2018(+)\u2019, namely\n        \u20185 * 10 ^ (ceiling (logBase 10 y))\u2019\n\nparse.hs:23:32: error:\n    \u2022 No instance for (Floating Int) arising from a use of \u2018logBase\u2019\n    \u2022 In the first argument of \u2018ceiling\u2019, namely \u2018(logBase 10 y)\u2019\n      In the second argument of \u2018(^)\u2019, namely \u2018(ceiling (logBase 10 y))\u2019\n      In the second argument of \u2018(*)\u2019, namely\n        \u201810 ^ (ceiling (logBase 10 y))\u2019\nFailed, modules loaded: none.\n</code></pre>\n\n<p>But if I try this function by simply using a real number:</p>\n\n<pre><code>test = 5 * 10 ^ (ceiling ( logBase 10 1000 ) )  + 100\n</code></pre>\n\n<p>It works fine.</p>\n"}, {"tags": ["parsing", "haskell", "abstract-syntax-tree"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1540896659, "post_id": 53062580, "comment_id": 93023655, "body": "A list can not contain elements of a different type, so the proposed lists <code>a</code> and <code>b</code> are not possible. You can of course <i>parse</i> a <i>string</i> (or another stream) that has such nested lists."}, {"owner": {"reputation": 1598, "user_id": 1905334, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/oy40i.png?s=128&g=1", "display_name": "cmdv", "link": "https://stackoverflow.com/users/1905334/cmdv"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1540897551, "post_id": 53062580, "comment_id": 93024152, "body": "ah ok, what if that was a JSON response from an API then I assume I&#39;d have to use something like Aeson to convert it to an AST?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1540897608, "post_id": 53062580, "comment_id": 93024193, "body": "The I would do the parsing with <code>aeson</code>: <a href=\"https://hackage.haskell.org/package/aeson-1.4.1.0/docs/Data-Aeson.html\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/aeson-1.4.1.0/docs/Data-Aeson.ht&zwnj;&#8203;ml</a> This is an efficient JSON parsers."}, {"owner": {"reputation": 1598, "user_id": 1905334, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/oy40i.png?s=128&g=1", "display_name": "cmdv", "link": "https://stackoverflow.com/users/1905334/cmdv"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1540900721, "post_id": 53062580, "comment_id": 93025972, "body": "was linked to this great gist but guess I would have to create my own parser to be able to convert it into the ADT given in the gist <a href=\"https://gist.github.com/joashc/38f0f94a4a168b78229a6b31dc7fa506#file-flatten-hs\" rel=\"nofollow noreferrer\">gist.github.com/joashc/&hellip;</a>"}, {"owner": {"reputation": 3063, "user_id": 439578, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e032fbe640b2234c8dce244907b99eab?s=128&d=identicon&r=PG", "display_name": "Manoj R", "link": "https://stackoverflow.com/users/439578/manoj-r"}, "edited": false, "score": 0, "creation_date": 1540907663, "post_id": 53062580, "comment_id": 93030115, "body": "Are you working on JavaScript?"}], "answers": [{"tags": [], "owner": {"reputation": 2863, "user_id": 2297560, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/948d4a17494b3c616a0873453b74670c?s=128&d=identicon&r=PG", "display_name": "user2297560", "link": "https://stackoverflow.com/users/2297560/user2297560"}, "is_accepted": true, "score": 3, "last_activity_date": 1540906083, "last_edit_date": 1540906083, "creation_date": 1540905237, "answer_id": 53065107, "question_id": 53062580, "link": "https://stackoverflow.com/questions/53062580/flatten-randomly-nested-list-into-a-non-nested-list-using-haskell/53065107#53065107", "title": "Flatten randomly nested list into a non nested list using Haskell", "body": "<p>An arbitrarily nested list won't type check. Each element of a list has to have the same type, but lists with different nesting levels have different types. The trick to get around this is to wrap a list into a new data type that hides the number of nested levels. But this is just a tree.</p>\n\n<pre><code>data Tree a = Root a | Branches [Tree a]\n</code></pre>\n\n<p>Then you can implement <code>flatten</code> as a traversal of the tree.</p>\n\n<pre><code>flatten :: Tree a -&gt; [a]\nflatten (Root a)          = [a]\nflatten (Branches (t:ts)) = flatten t ++ (concat (fmap flatten ts))\n</code></pre>\n\n<p>See <code>Data.Tree</code> in the containers package for a ready-to-use version.</p>\n\n<p>For parsing, I would recommend using aeson. <code>Data.Aeson.Types</code> defines the instance <code>FromJSON v =&gt; FromJSON (Tree v)</code>, so you should just be able to use <code>decode</code> on the json string and tell it you want a <code>Tree Int</code>.</p>\n\n<pre><code>decode rawJson :: Maybe (Tree Int)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 2, "last_activity_date": 1540906805, "creation_date": 1540906805, "answer_id": 53065638, "question_id": 53062580, "link": "https://stackoverflow.com/questions/53062580/flatten-randomly-nested-list-into-a-non-nested-list-using-haskell/53065638#53065638", "title": "Flatten randomly nested list into a non nested list using Haskell", "body": "<p>Unclear what you're actually trying to achieve, but there is a syntax hack that actually <em>allows</em> you to write differently-nested list syntax in Haskell and have it flattened automatically:</p>\n\n<pre><code>{-# LANGUAGE TypeFamilies #-}\n\nimport GHC.Exts (IsList(..))\n\nnewtype AutoflatList a = AutoflatList {getFlatList :: [a]}\n   deriving (Show)\n\ninstance IsList (AutoflatList a) where\n  type Item (AutoflatList a) = AutoflatList a\n  fromList segs = AutoflatList $ getFlatList =&lt;&lt; segs\n  toList = pure\n\ninstance Num a =&gt; Num (AutoflatList a) where\n  fromInteger = AutoflatList . pure . fromInteger\n</code></pre>\n\n<pre>*Main> :set <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html?highlight=overloadedlists#extension-OverloadedLists\" rel=\"nofollow noreferrer\">-XOverloadedLists</a>\n*Main> [1, 2, [3, 4]] :: AutoflatList Int\nAutoflatList {getFlatList = [1,2,3,4]}\n*Main> [[1,2,[3]],4] :: AutoflatList Int\nAutoflatList {getFlatList = [1,2,3,4]}</pre>\n\n<p>This solution not recommended except for recreational purposes.</p>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 3, "last_activity_date": 1540912397, "creation_date": 1540912397, "answer_id": 53067471, "question_id": 53062580, "link": "https://stackoverflow.com/questions/53062580/flatten-randomly-nested-list-into-a-non-nested-list-using-haskell/53067471#53067471", "title": "Flatten randomly nested list into a non nested list using Haskell", "body": "<p>This is already done for you by the GHC. Flattening is folding.</p>\n\n<pre><code>&gt; :set -XDeriveFoldable\n\n&gt; data NList a = A a | N [NList a] deriving (Show, Functor, Foldable)\ndata NList a = A a | N [NList a]\n\n&gt; foldMap pure (N[ A 1, N[ A 2], A 3]) :: [Int]\n[1,2,3]\n\n&gt; foldMap pure (N[ N[ N[ N[ A 1]]], N[ A 2], A 3]) :: [Int]\n[1,2,3]\n</code></pre>\n"}], "owner": {"reputation": 1598, "user_id": 1905334, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/oy40i.png?s=128&g=1", "display_name": "cmdv", "link": "https://stackoverflow.com/users/1905334/cmdv"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 210, "favorite_count": 0, "accepted_answer_id": 53065107, "answer_count": 3, "score": 1, "last_activity_date": 1540927002, "creation_date": 1540896301, "last_edit_date": 1540927002, "question_id": 53062580, "link": "https://stackoverflow.com/questions/53062580/flatten-randomly-nested-list-into-a-non-nested-list-using-haskell", "title": "Flatten randomly nested list into a non nested list using Haskell", "body": "<p>I have an imaginary list with different levels of nesting, or ignoring the ugly types a API response ie:</p>\n\n<pre><code>a ::(Num a, Num [a], Num [[a]]) =&gt; [[a]]\na = [1, 2, [3, 4]]\n\nb :: (Num a, Num [a], Num [[a]], Num [[[a]]]) =&gt; [[[[a]]]]\nb = [[1,2,[3]],4]\n</code></pre>\n\n<p>The function I'm trying to create should do the following:</p>\n\n<pre><code>myFunc a == [1,2,3,4]\nmyFunc b == [1,2,3,4]\n</code></pre>\n\n<p>My initial thought was I'd have to parse the list into an AST (Abstract syntax tree) <code>--&gt;</code> use recursion to flatten all the branches &amp; leaves into a single branch <code>--&gt;</code> parse the result back into a list.</p>\n\n<p>I'm unsure how to parse the list into AST? or is there a better solution?</p>\n\n<p>edit -- I think I was trying to be too literal, in that representing <code>[1, 2, [3, 4]]</code> is actually part of the problem, so realistically for things to work better they would need to be represented as an ADT/AST. So if this was an API response or reading a file how would I parse that data into it's AST/ADT?</p>\n"}, {"tags": ["haskell", "fold", "foldleft"], "comments": [{"owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "edited": false, "score": 2, "creation_date": 1540879081, "post_id": 53057923, "comment_id": 93015244, "body": "This is mindbending for me, but the long and short of it is that there <i>aren&#39;t</i> 4 arguments for foldr. This is <code>(foldr step id xs) $ z</code> where the <code>foldr</code> builds a chain of functions applied to each other."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 6, "creation_date": 1540879241, "post_id": 53057923, "comment_id": 93015305, "body": "Well, it&#39;s Haskell.  There&#39;s no difference between a 4-argument function and a 3-argument function that returns a 1-argument function."}, {"owner": {"reputation": 2194, "user_id": 7940614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b697c574cc5dfb3a4d5e4aff46a1721a?s=128&d=identicon&r=PG&f=1", "display_name": "assembly.jc", "link": "https://stackoverflow.com/users/7940614/assembly-jc"}, "edited": false, "score": 0, "creation_date": 1540884185, "post_id": 53057923, "comment_id": 93017155, "body": "The id function is initial case of foldr, that is, say, when xs is [], then give me a id function."}, {"owner": {"reputation": 1141, "user_id": 1367497, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/c1ab83696683e53a9940cd2a8c480894?s=128&d=identicon&r=PG", "display_name": "peeyush singh", "link": "https://stackoverflow.com/users/1367497/peeyush-singh"}, "edited": false, "score": 2, "creation_date": 1540886786, "post_id": 53057923, "comment_id": 93018245, "body": "same question: <a href=\"https://stackoverflow.com/questions/6172004/writing-foldl-using-foldr\" title=\"writing foldl using foldr\">stackoverflow.com/questions/6172004/writing-foldl-using-fold&zwnj;&#8203;r</a>"}, {"owner": {"reputation": 2280, "user_id": 1442575, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fd9a74eef0b1c8e998edf3891cb6ed2e?s=128&d=identicon&r=PG", "display_name": "Jorge Adriano", "link": "https://stackoverflow.com/users/1442575/jorge-adriano"}, "edited": false, "score": 0, "creation_date": 1543003813, "post_id": 53057923, "comment_id": 93777395, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/6172004/writing-foldl-using-foldr\">Writing foldl using foldr</a>"}], "answers": [{"tags": [], "owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "is_accepted": false, "score": 1, "last_activity_date": 1540886278, "last_edit_date": 1540886278, "creation_date": 1540885474, "answer_id": 53059520, "question_id": 53057923, "link": "https://stackoverflow.com/questions/53057923/defining-foldl-in-terms-of-foldr/53059520#53059520", "title": "Defining foldl in terms of foldr", "body": "<p>As <a href=\"https://stackoverflow.com/users/3058609/adam-smith\">Adam Smith</a> says in the comments, there are only three arguments to <code>foldr</code>. The line in question gets parsed like this:</p>\n\n<pre><code>myFoldl f z xs = (foldr step id xs) z\n</code></pre>\n\n<p>There are other implicit brackets too of course, but these are the important ones.</p>\n\n<p>Here is a rewrite with the type annotations, assuming scoped type variables (i.e. <code>a</code> and <code>b</code> mean the same types throughout this definition).</p>\n\n<pre><code>myFoldl :: (a -&gt; b -&gt; a) -&gt; a -&gt; [b] -&gt; a\nmyFoldl f z xs =  goFold z\n   where\n      goFold :: a -&gt; a\n      goFold = foldr step id xs\n      step :: b -&gt; (a -&gt; a) -&gt; (a -&gt; a)  -- Last brackets are redundant\n      step x g a = g (f a x)\n</code></pre>\n\n<p>I've moved the <code>foldr</code> invocation into a separate value <code>goFold</code> so you can see its type and how it gets applied to the <code>z</code> value. The <code>step</code> function accumulates the <code>b</code> values into a function of type <code>(a -&gt; a)</code>. Each <code>b</code> value processed by <code>goFold</code> adds an extra one of these. The \"zero\" for functions is of course <code>id</code> from the Prelude:</p>\n\n<pre><code>id :: a -&gt; a\nid x = x\n</code></pre>\n\n<p>The <code>-&gt;</code> function operator in the types is right associative, so the last pair of brackets in the <code>step</code> type are redundant. But I've written it like that because it higlights the way in which <code>step</code> is being used; it takes a value and a function and returns a new function.</p>\n"}, {"tags": [], "owner": {"reputation": 2194, "user_id": 7940614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b697c574cc5dfb3a4d5e4aff46a1721a?s=128&d=identicon&r=PG&f=1", "display_name": "assembly.jc", "link": "https://stackoverflow.com/users/7940614/assembly-jc"}, "is_accepted": false, "score": 3, "last_activity_date": 1540890054, "creation_date": 1540890054, "answer_id": 53060635, "question_id": 53057923, "link": "https://stackoverflow.com/questions/53057923/defining-foldl-in-terms-of-foldr/53060635#53060635", "title": "Defining foldl in terms of foldr", "body": "<p>The thing will be become obvious when to expand the expression of <code>foldr step id xs z</code>:</p>\n\n<p>As Adam Smith said in the comments: </p>\n\n<blockquote>\n  <p>foldr step id xs z = (foldr step id xs) z</p>\n</blockquote>\n\n<p>Consider <code>foldr step id xs</code> firstly</p>\n\n<pre><code>foldr step id xs\n= x1 `step` (foldr step id xs1)\n= x1 `step` (x2 `step` (foldr step id xs2))\n...\n= x1 `step` (x2 `step` ... (xn `step` (foldr step id []))...)\n= x1 `step` (x2 `step` ... (xn `step` id)...)\n</code></pre>\n\n<p>where </p>\n\n<pre><code>xs = (x1:xs1)\nxs1 = (x2:xs2), xs = (x1:x2:xs2) \n....\nxsn = (xn:[]), xs = (x1:x2...xsn) respectively \n</code></pre>\n\n<p>Now, apply above function with argument z, i.e.</p>\n\n<pre><code>(x1 `step` (x2 `step` ... (xn `step` id)...)) z\n</code></pre>\n\n<p>and let </p>\n\n<pre><code>g = (x2 `step` ... (xn `step` id)...) \n</code></pre>\n\n<p>gives</p>\n\n<pre><code>(x1 `step` g) z\n</code></pre>\n\n<p>i.e.</p>\n\n<pre><code>(step x1 g) z\n</code></pre>\n\n<p>and now apply the where part of foldl:</p>\n\n<blockquote>\n  <p>where step x g a = g (f a x)</p>\n</blockquote>\n\n<p>gives</p>\n\n<pre><code>(step x1 g) z = step x1 g z = g (step z x1)\n</code></pre>\n\n<p>where</p>\n\n<pre><code>g (step z x1) = (x2 `step` (x3 step ... (xn `step` id)...) (step z x1)\n</code></pre>\n\n<p>let </p>\n\n<pre><code>g' = (x3 step ... (xn `step` id)...)\n</code></pre>\n\n<p>gives</p>\n\n<pre><code>(x2 `step` g') (step z x1)\n= step x2 g' (step z x1)\n= g' (step (step z x1) x2))\n= (x3 step ... (xn `step` id)...) (step (step z x1) x2))\n</code></pre>\n\n<p>repeats the same steps, finally we have,</p>\n\n<pre><code>(xn `step` id) (step ....(step (step z x1) x2)....)\n= step xn id (step ....(step (step z x1) x2)....)\n= id (step (step ....(step (step z x1) x2)....) xn)\n= (step (step ....(step (step z x1) x2)....) xn)\n= foldl step z xs\n</code></pre>\n\n<p>and now, it is obvious that why use id function. finally, see why</p>\n\n<pre><code>foldl step z xs = (step (step ....(step (step z x1) x2)....) xn)\n</code></pre>\n\n<p>initial case:</p>\n\n<pre><code>foldl step z' [] = z'\n</code></pre>\n\n<p>recursive case:</p>\n\n<pre><code>foldl step z (x1:xs1) \n= foldl step (step z x1) xs1\n= foldl step (step (step z x1) x2) xs2\n...\n= foldl step (step (step ....(step (step z x1) x2)....) xn) []\n= (step (step ....(step (step z x1) x2)....) xn)\n</code></pre>\n\n<p>where</p>\n\n<pre><code>z' = (step (step ....(step (step z x1) x2)....) xn) in initial case\n</code></pre>\n\n<p>Just same as above.</p>\n"}], "owner": {"reputation": 1417, "user_id": 5432156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72991dcaeb7a19e585f4f07cb503783d?s=128&d=identicon&r=PG&f=1", "display_name": "ganidat", "link": "https://stackoverflow.com/users/5432156/ganidat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 323, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1540934018, "creation_date": 1540877142, "last_edit_date": 1540934018, "question_id": 53057923, "link": "https://stackoverflow.com/questions/53057923/defining-foldl-in-terms-of-foldr", "title": "Defining foldl in terms of foldr", "body": "<pre><code>myFoldl :: (a -&gt; b -&gt; a) -&gt; a -&gt; [b] -&gt; a\n\nmyFoldl f z xs = foldr step id xs z\n    where step x g a = g (f a x)\n</code></pre>\n\n<p>I am currently reading a book on Haskell. And in it, it wrote its own version of the foldl function, but in terms of foldr. I do not follow.</p>\n\n<ol>\n<li>Why are there 4 arguments for foldr?</li>\n<li>What does the id function do? </li>\n</ol>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 0, "creation_date": 1540864264, "post_id": 53056242, "comment_id": 93011759, "body": "If oyu are allowed to use Data.List take a look at <code>group</code> and <code>length</code>."}, {"owner": {"reputation": 54864, "user_id": 404970, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/o6X94.jpg?s=128&g=1", "display_name": "molbdnilo", "link": "https://stackoverflow.com/users/404970/molbdnilo"}, "edited": false, "score": 0, "creation_date": 1540893986, "post_id": 53056242, "comment_id": 93022076, "body": "The filter` doesn&#39;t do what you want - it will break on, for instance, <code>&quot;aba&quot;</code>. If this was given as an exercise, I suspect that you&#39;re expected to discover <code>takeWhile</code> and <code>dropWhile</code>, if you haven&#39;t already."}], "answers": [{"comments": [{"owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "edited": false, "score": 0, "creation_date": 1541017262, "post_id": 53056566, "comment_id": 93079686, "body": "This might look cleaner as <code>compress = concat . fmap (\\x -&gt; head x : show (length x)) . group</code>. You can even use arrows to abstract away the lambda expression, but it&#39;s even uglier that way."}, {"owner": {"reputation": 315, "user_id": 10553912, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9f00c8ffb0cb3b02b08b70ce031bd004?s=128&d=identicon&r=PG&f=1", "display_name": "racherb", "link": "https://stackoverflow.com/users/10553912/racherb"}, "reply_to_user": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "edited": false, "score": 0, "creation_date": 1541018118, "post_id": 53056566, "comment_id": 93079980, "body": "I agree with you @Adam, <b>point-free</b> notation is much more legible and elegant."}], "tags": [], "owner": {"reputation": 315, "user_id": 10553912, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9f00c8ffb0cb3b02b08b70ce031bd004?s=128&d=identicon&r=PG&f=1", "display_name": "racherb", "link": "https://stackoverflow.com/users/10553912/racherb"}, "is_accepted": false, "score": 4, "last_activity_date": 1540870002, "last_edit_date": 1540870002, "creation_date": 1540866669, "answer_id": 53056566, "question_id": 53056242, "link": "https://stackoverflow.com/questions/53056242/haskell-beginner-strings/53056566#53056566", "title": "haskell beginner strings", "body": "<p><strong>A simple solution</strong></p>\n\n<p>A simple way to solve this case would be to apply the following function:</p>\n\n<pre><code>Prelude&gt; let str = \"aaabbbAAAcccc\"\nPrelude&gt; concat $ fmap (\\x -&gt; [head x]&lt;&gt;show(length x)) (group str)\nPrelude&gt; \"a3b3A3c4\"\n</code></pre>\n\n<p>So your compression function would be: </p>\n\n<pre><code>compress :: String -&gt; String\ncompress str = concat $ fmap (\\x -&gt; [head x]&lt;&gt;show(length x)) (group str)\n</code></pre>\n\n<p><strong>Suggestions</strong></p>\n\n<blockquote>\n  <p>Adopting a more functional way of thinking would help when solving\n  problems with Haskell. If-then-else sentences are rarely seen, the use\n  of lambdas functions is convenient, in many cases, for simplification\n  and readability of the code, function mapping and recursion are a\n  classic of the Haskell world.</p>\n</blockquote>\n\n<p><strong>How it works</strong>\nThe compress function described performs the following operations:</p>\n\n<ul>\n<li>Grouping of elements: <code>group str</code></li>\n<li>The grouped elements are mapped, one by one,\ncarrying out the lambda calculation that, for each character,\ncomputes its quantity:  <code>fmap (\\x -&gt; [head x]&lt;&gt;show(length x))</code></li>\n<li>Finally, the result is concatenated: <code>concat</code></li>\n</ul>\n\n<p><strong>Why doesn't the original code work?</strong></p>\n\n<p>The code presented in the problem does not work basically because the algorithm enters a recursion that runs through the list of characters and, for each character, counts again and again on the same characters, advancing in the position of the string and without considering that similar characters were partially computed. </p>\n\n<p>On the other hand, the list pattern (x:xs) could have been used properly to scroll through the list. x for the head and xs to get the tail of the list in the recursion. </p>\n"}, {"tags": [], "owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "is_accepted": true, "score": 4, "last_activity_date": 1540870373, "creation_date": 1540870373, "answer_id": 53056996, "question_id": 53056242, "link": "https://stackoverflow.com/questions/53056242/haskell-beginner-strings/53056996#53056996", "title": "haskell beginner strings", "body": "<p><code>group</code> is a natural winner here, taking a string like <code>\"Mississippi\"</code> and turning it into <code>[\"M\", \"i\", \"ss\", \"i\", \"ss\", \"i\", \"pp\", \"i\"]</code>, but let's imagine you don't want to do this. How could you implement this with more primitive explicit recursion?</p>\n\n<p>Well you've got <code>takeWhile</code>, to start.</p>\n\n<pre><code>takeWhile :: (a -&gt; Bool) -&gt; [a] -&gt; [a]\n</code></pre>\n\n<p>Given a predicate and a list, take as many consecutive elements from the left as you can as long as they all satisfy the predicate</p>\n\n<pre><code>takeWhile (&gt;3) [4, 5, 6, 9, 9, 5, 3, 5, 4] = [4, 5, 6, 9, 9, 5]  -- loses [3, 5, 4]\n</code></pre>\n\n<p>and even better, you can have <code>span</code>, which does all that <em>and</em> gives you back the remainder.</p>\n\n<pre><code>span :: (a -&gt; Bool) -&gt; [a] -&gt; ([a], [a])\nspan (&gt;3) [4, 5, 6, 9, 9, 5, 3, 5, 4] = ([4, 5, 6, 9, 9, 5], [3, 5, 4])\n</code></pre>\n\n<p>This should let you pull out each section that has the same letter.</p>\n\n<pre><code>-- here I'm using the @ notation to pattern match on `x` without losing the larger pattern that I'm naming xss\ncompress (xss@(x:_)) = let (cur, rest) = span (==x) xss\n</code></pre>\n\n<p>What now? We know both <code>cur</code> and <code>rest</code> will be strings, and that <code>cur</code> is all the consecutive letters from the left that are equal. Well I suppose we can sum them and put one of them up front.</p>\n\n<pre><code>compress (xss@(x:_)) = let (cur, rest) = span (==x) xss\n                       in x:(show . length $ cur) ++ ???\n</code></pre>\n\n<p>What do we do with those question marks? What's the rest of our code? Well we'll have to handle the <code>rest</code> somehow. What do we want to happen with <code>rest</code>? Well we want it to be compressed too. Let's try just recursing here.</p>\n\n<pre><code>compress (xss@(x:_)) = let (cur, rest) = span (==x) xss\n                       in x:(show . length $ cur) ++ compress rest\n</code></pre>\n\n<p>This looks promising, but we're missing the Secret Sauce of recursion -- the base case. What do we do when we run out of elements? We need to do <em>something</em> when we call <code>compress []</code>, and that thing should end up on the end of our chain of <code>(:)</code>s. The natural thing is a <code>[]</code>.</p>\n\n<pre><code>compress :: String -&gt; String\ncompress (xss@(x:_)) = let (cur, rest) = span (==x) xss\n                       in x:(show . length $ cur) ++ compress rest\ncompress []          = []\n</code></pre>\n"}], "owner": {"reputation": 996, "user_id": 7907300, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1e028848530c7b0b75a1142879de5a48?s=128&d=identicon&r=PG&f=1", "display_name": "cheshire", "link": "https://stackoverflow.com/users/7907300/cheshire"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 690, "favorite_count": 0, "accepted_answer_id": 53056996, "answer_count": 2, "score": 1, "last_activity_date": 1540924971, "creation_date": 1540863927, "last_edit_date": 1540924971, "question_id": 53056242, "link": "https://stackoverflow.com/questions/53056242/haskell-beginner-strings", "title": "haskell beginner strings", "body": "<p>I want to write a simple string function: </p>\n\n<pre><code>input:    aaabbbAAAcccc \noutput:   a3b3A3c4\n</code></pre>\n\n<p>All I have now it this code: </p>\n\n<pre><code>compress :: String -&gt; String \ncompress  x = if length x &gt; 1 \n            then do take 1 x ++ show ( length $ filter (==head x) x) ++ compress (drop 1 x)\n            else x \n</code></pre>\n\n<p>This will obviously not work. Here is the output:</p>\n\n<pre><code>*Main&gt; compress \"aaaaaaaaabbbbbbb\"\n\"a9a8a7a6a5a4a3a2a1b7b6b5b4b3b2b\"\n</code></pre>\n\n<p>I am taking 1 out of the x string applying filter to take out how many \"head x\" I have in the string and outputing it for every Character and then calling it recursively after I drop 1 out of the x.</p>\n\n<p>I understand that this is wrong approach and that this way I cant write it. But how can I keep track how many equal chars do I have in String and how to compare them recursively? Do I have to use something like:</p>\n\n<pre><code>compress :: String -&gt; String \ncompress (x:xs) = \n</code></pre>\n\n<p>and then calling xs and somehow compare it to x, or do I have no other choise other than trying to understand Data.List. </p>\n"}, {"tags": ["haskell", "yesod", "blaze-html", "haskell-lucid"], "answers": [{"tags": [], "owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "is_accepted": true, "score": 0, "last_activity_date": 1540885741, "creation_date": 1540885741, "answer_id": 53059590, "question_id": 53055515, "link": "https://stackoverflow.com/questions/53055515/i-would-like-to-add-lucid-into-yesods-defaultlayout/53059590#53059590", "title": "I would like to add Lucid into Yesod&#39;s defaultLayout", "body": "<p>Since lucid <code>Html</code> and blaze <code>Html</code> are completely different types, your only way is to render one as text and insert it as pre-escaped HTML to another one. Something like <code>Blaze.preEscapedToHtml . Lucid.renderText</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 197, "user_id": 2994769, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NrJZ6.jpg?s=128&g=1", "display_name": "hhefesto", "link": "https://stackoverflow.com/users/2994769/hhefesto"}, "is_accepted": false, "score": 2, "last_activity_date": 1541021559, "creation_date": 1541021559, "answer_id": 53092237, "question_id": 53055515, "link": "https://stackoverflow.com/questions/53055515/i-would-like-to-add-lucid-into-yesods-defaultlayout/53092237#53092237", "title": "I would like to add Lucid into Yesod&#39;s defaultLayout", "body": "<p>Just for completeness, this is arrowd's answer integrated to the code:</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE NoImplicitPrelude #-}\n{-# LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE TemplateHaskell #-}\n{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE TypeFamilies #-}\n\nmodule Handler.Support where\n\nimport           Import hiding\nimport           Yesod.Lucid\nimport           Lucid hiding (Html)\nimport qualified Lucid as L\nimport           Text.Blaze.Html\n\ngetSupportR :: CustomerId -&gt; Handler Html\ngetSupportR customerId = do\n  lucidHtml &lt;- lucid $ \\url -&gt;\n    p_ $ a_ [href_ \"\\\\\"] \"link to root\"\n  defaultLayout $ do\n    setTitle \"Your Licenses\"\n    toWidget . preEscapedToHtml . renderText $ lucidHtml\n</code></pre>\n"}], "owner": {"reputation": 197, "user_id": 2994769, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NrJZ6.jpg?s=128&g=1", "display_name": "hhefesto", "link": "https://stackoverflow.com/users/2994769/hhefesto"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 132, "favorite_count": 1, "accepted_answer_id": 53059590, "answer_count": 2, "score": 2, "last_activity_date": 1554646661, "creation_date": 1540857289, "last_edit_date": 1554646661, "question_id": 53055515, "link": "https://stackoverflow.com/questions/53055515/i-would-like-to-add-lucid-into-yesods-defaultlayout", "title": "I would like to add Lucid into Yesod&#39;s defaultLayout", "body": "<p>I am trying to have a dynamic HTML id for modals usage.</p>\n\n<p>Basically my problems would be solved if Hamlet accepted something like <code>[hamlet| &lt;div .modal .fade ##{modalIdFunction i}&gt; |]</code> </p>\n\n<p>Since I haven't been able to do that in Hamlet, I am trying to do it with Lucid, but it is incompatible with Yesod's defaultLayout.</p>\n\n<p>here is my intent:</p>\n\n<pre><code>getSupportR :: CustomerId -&gt; Handler LucidHtml\ngetSupportR customerId = do\n defaultLayout $ do\n    setTitle \"Your Licenses\"\n    toWidget . lucid $ \\url -&gt;\n      p_ $ a_ [href_ \"\\\\\"] \"Link to root\"\n</code></pre>\n\n<p>this is the error msg:</p>\n\n<pre><code>\u2022 Couldn't match type \u2018blaze-markup-0.8.2.1:Text.Blaze.Internal.MarkupM\n                             ()\u2019\n                     with \u2018HtmlT Identity ()\u2019\n      Expected type: HandlerFor App LucidHtml\n        Actual type: HandlerFor App Html\n</code></pre>\n\n<p>Is there a way to convert Lucid's LucidHtml to Blaze's Html? </p>\n\n<p>my whole code is at: <a href=\"https://github.com/hhefesto/laurus-nobilis\" rel=\"nofollow noreferrer\">https://github.com/hhefesto/laurus-nobilis</a>\nand the pertinent files are /src/Yesod/Lucid.hs and /src/Handler/Support.hs</p>\n"}, {"tags": ["haskell", "algebraic-data-types"], "comments": [{"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 3, "creation_date": 1540858187, "post_id": 53055487, "comment_id": 93010602, "body": "Please include a self-contained example that others can run, as well as the error you&#39;re getting and what you don&#39;t understand about the error message. It looks like you have a syntax error (read about layout of <code>do</code> blocks; each line should have the same indentation), as well as a lot of misunderstandings (e.g. <code>[rules]</code> on the lefthand-side of <code>=</code> matches <i>a list with a single element</i> and binds it to <code>rules</code>)"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1540858195, "post_id": 53055487, "comment_id": 93010605, "body": "The following things are missing from your problem statement: <code>Patt</code>, <code>Expr</code>, <code>evalMatch</code>, and the exact error or behavior that you are currently stuck in debugging."}, {"owner": {"reputation": 85, "user_id": 7691624, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7741834aff85d3babca94b873f7fc436?s=128&d=identicon&r=PG&f=1", "display_name": "Eilleen", "link": "https://stackoverflow.com/users/7691624/eilleen"}, "reply_to_user": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1540858334, "post_id": 53055487, "comment_id": 93010629, "body": "The datatypes that are missing are irrelevant for the error I am stuck, otherwise, I would have to provide the entire tree. @jberryman I will edit with the error message"}], "answers": [{"tags": [], "owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "is_accepted": false, "score": 0, "last_activity_date": 1540921046, "creation_date": 1540921046, "answer_id": 53069922, "question_id": 53055487, "link": "https://stackoverflow.com/questions/53055487/function-that-take-2-data-types-parameters-prints-one-and-iterates-for-the-next/53069922#53069922", "title": "Function that take 2 data types parameters, prints one and iterates for the next one", "body": "<p>The error you're getting says:</p>\n\n<blockquote>\n<pre><code>Couldn't match expected type `Match -&gt; [Rules] -&gt; String' with actual type `[Char]'\n</code></pre>\n</blockquote>\n\n<p>This tells you what's wrong: The expected type of <code>evalRules</code> is <code>Rules -&gt; Match -&gt; [Rules] -&gt; String</code> (this is according to the type signature you wrote), but the actual type of the function as implemented is <code>Rules -&gt; [Char]</code> (or equivalently, <code>Rules -&gt; String</code>). In other words, your type signature states that the function should take three arguments, but your implementation only takes one:</p>\n\n<pre><code>evalRules :: Rules -&gt; Match -&gt; [Rules] -&gt; String -- three arguments\nevalRules (Ruling match [rules]) = ...           -- (Ruling match [rules]) is one argument of type `Rules`\n</code></pre>\n\n<p>You'll need to either add the other two arguments to your implementation, or remove them from your type signature. From what I can tell, you probably want the latter.</p>\n\n<hr>\n\n<p>There are a number of other problems with this code as well:</p>\n\n<h3>Do notation</h3>\n\n<p>When using <code>do</code> notation, actions must be indented properly so that they line up:</p>\n\n<pre><code>-- incorrect\nevalRules (Ruling match [rules]) = do evalMatch match\n                                   listRules [rules]\n-- correct\nevalRules (Ruling match [rules]) = do evalMatch match\n                                      listRules [rules]\n-- also correct\nevalRules (Ruling match [rules]) = do\n    evalMatch match\n    listRules [rules]\n</code></pre>\n\n<p>As you can see, the calls to <code>evalMatch</code> and <code>listRules</code> need to start in the same column. Otherwise you'll get parse errors.</p>\n\n<h3>Monads</h3>\n\n<p>You can only use <code>do</code> blocks in the context of monads. A monad is any type that implements the <code>Monad</code> typeclass, such as <code>IO</code> or <code>Maybe</code>. Say you're creating an <code>IO</code> action: in this case, your function must return an <code>IO &lt;something&gt;</code> type, and every action in the <code>do</code> block must be of type <code>IO &lt;something&gt;</code>. But your <code>evalRules</code> returns a type <code>String</code> and each action in the <code>do</code> block is also type <code>String</code>. There's no monadic context here.</p>\n\n<p>(As it turns out, <code>String</code> is equivalent to <code>[Char]</code>, and <code>[&lt;something&gt;]</code> is a monad, so your function as-is will typecheck ... but it probably won't behave the way you expect.)</p>\n\n<p>Right now, the <code>evalMatch</code> call in that <code>do</code> block doesn't appear to be doing anything (it returns a <code>String</code> result which is promptly ignored). If you want to return the <code>String</code> result from it alongside the result from <code>listRules</code>, you can use the <code>++</code> operator to concatenate the strings, instead of using the <code>do</code> block. So your comment here is the correct implementation:</p>\n\n<pre><code>--also tried = evalMatch match ++ listRules [rules]\n</code></pre>\n\n<h3>Lists in patterns</h3>\n\n<p>You use a pattern <code>(Ruling match [rules])</code>, which doesn't do what you probably think it does. When matching a list, you have the following options:</p>\n\n<ul>\n<li><code>(Ruling match [])</code> matches an empty list on the second argument of <code>Ruling</code>.</li>\n<li><code>(Ruling match (r:rs))</code> matches a non-empty list, binding the first element to <code>r</code> and the rest of the list to <code>rs</code>.</li>\n<li><code>(Ruling match [rule1, rule2, rule3])</code> matches a list with exactly three elements, and binds each element to <code>rule1</code>, <code>rule2</code>, and <code>rule3</code>, respectively.</li>\n<li><code>(Ruling match [rule1])</code> matches a list with <strong>exactly one element</strong>, and binds that element to <code>rule1</code>.</li>\n<li><code>(Ruling match rules)</code> matches any list, and binds the list to <code>rules</code>. This is probably what you want.</li>\n</ul>\n\n<p>As-is, <code>evalRules</code> will only work if the rules list has exactly one element, and will throw an exception otherwise. Removing the brackets will fix this.</p>\n"}], "owner": {"reputation": 85, "user_id": 7691624, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7741834aff85d3babca94b873f7fc436?s=128&d=identicon&r=PG&f=1", "display_name": "Eilleen", "link": "https://stackoverflow.com/users/7691624/eilleen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 58, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1540921046, "creation_date": 1540857022, "last_edit_date": 1540858472, "question_id": 53055487, "link": "https://stackoverflow.com/questions/53055487/function-that-take-2-data-types-parameters-prints-one-and-iterates-for-the-next", "title": "Function that take 2 data types parameters, prints one and iterates for the next one", "body": "<p>I am designing an interpreter from my AST and I am stuck on one part of this where I have to evaluate and print one datatype and iterate on the list of the other. </p>\n\n<p>Here are the datatypes based on the AST. </p>\n\n<pre><code>data Match = Matching Patt Expr deriving (Eq,Show,Read)\n\ndata Rules = Ruling Match [Rules] deriving (Eq,Show,Read)\n</code></pre>\n\n<p>The rules function is supposed to evaluate Match and iterate over the rules to print them too. Here is the function and what I have tried with no luck</p>\n\n<pre><code>evalMatch::Match -&gt; String\nevalMatch (Matching patt expr) = evalPatt patt ++ evalExpr expr\n\nevalRules::Rules -&gt; Match -&gt; [Rules] -&gt; String\nevalRules (Ruling match [rules]) = do evalMatch match \n                                  listRules [rules]\nevalRules::Rules -&gt; Match -&gt; [Rules] -&gt; String\nevalRules (Ruling match [rules]) = do evalMatch match \n                                   listRules [rules]\n                                   --also tried = evalMatch match ++ listRules [rules]\n\nlistRules::[Rules] -&gt; String\nlistRules [] = []\nlistRules (x:xs) = show x ++ listRules xs\n</code></pre>\n\n<p>I am new to Haskell to any help greatly appreciated. </p>\n\n<p>The compiler error I am getting is </p>\n\n<blockquote>\n  <ul>\n  <li>Couldn't match expected type <code>Match -&gt; [Rules] -&gt; String'\n                with actual type</code>[Char]'\n  \n  <ul>\n  <li>In a stmt of a 'do' block: evalMatch match\n  In the expression:\n  do evalMatch match\n     listRules [rules]\n  In an equation for `evalRules':\n    evalRules (Ruling match [rules])\n      = do evalMatch match\n           listRules [rules]</li>\n  </ul></li>\n  </ul>\n</blockquote>\n"}, {"tags": ["list", "haskell"], "comments": [{"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 0, "creation_date": 1540847463, "post_id": 53053864, "comment_id": 93007316, "body": "Please format your code."}, {"owner": {"reputation": 71, "user_id": 8658248, "user_type": "registered", "profile_image": "https://graph.facebook.com/1512880645455403/picture?type=large", "display_name": "Erik H Nguyen", "link": "https://stackoverflow.com/users/8658248/erik-h-nguyen"}, "reply_to_user": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 0, "creation_date": 1540847783, "post_id": 53053864, "comment_id": 93007460, "body": "Sry hope this is better"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1540892492, "post_id": 53053864, "comment_id": 93021172, "body": "I like that you posted your own version, however to be honest, this is awkward, inefficient and unsafe. Avoid using <code>!!</code>, <code>head</code> or <code>tail</code>, these will crash your program when given empty lists or something outside the range. Prefer safe library functions ot pattern-matching, then the compiler can warn you if you&#39;ve missed some edge case."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1540892818, "post_id": 53053864, "comment_id": 93021367, "body": "<a href=\"https://wiki.haskell.org/Avoiding_partial_functions\" rel=\"nofollow noreferrer\">wiki.haskell.org/Avoiding_partial_functions</a>"}], "answers": [{"comments": [{"owner": {"reputation": 71, "user_id": 8658248, "user_type": "registered", "profile_image": "https://graph.facebook.com/1512880645455403/picture?type=large", "display_name": "Erik H Nguyen", "link": "https://stackoverflow.com/users/8658248/erik-h-nguyen"}, "edited": false, "score": 0, "creation_date": 1540850709, "post_id": 53054469, "comment_id": 93008565, "body": "Would&#39;nt the list be inside a tuple then? I want them to be in a list?"}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "reply_to_user": {"reputation": 71, "user_id": 8658248, "user_type": "registered", "profile_image": "https://graph.facebook.com/1512880645455403/picture?type=large", "display_name": "Erik H Nguyen", "link": "https://stackoverflow.com/users/8658248/erik-h-nguyen"}, "edited": false, "score": 0, "creation_date": 1540852558, "post_id": 53054469, "comment_id": 93009166, "body": "@ErikHNguyen Where did you get the idea that this would be inside a tuple? There are no tuples returned in the above function <code>groupUp</code>. Try it for yourself. The function <code>span</code> was used as a stepping stone to the function <code>groupUp</code>."}, {"owner": {"reputation": 71, "user_id": 8658248, "user_type": "registered", "profile_image": "https://graph.facebook.com/1512880645455403/picture?type=large", "display_name": "Erik H Nguyen", "link": "https://stackoverflow.com/users/8658248/erik-h-nguyen"}, "edited": false, "score": 0, "creation_date": 1540891518, "post_id": 53054469, "comment_id": 93020539, "body": "Hi, thanks for the help. I am just not familiar with the &quot;case&quot; &quot;of&quot; example. Where can i read more about it? I did another another fuction wich proably is exactly the same as yours."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 71, "user_id": 8658248, "user_type": "registered", "profile_image": "https://graph.facebook.com/1512880645455403/picture?type=large", "display_name": "Erik H Nguyen", "link": "https://stackoverflow.com/users/8658248/erik-h-nguyen"}, "edited": false, "score": 0, "creation_date": 1540891847, "post_id": 53054469, "comment_id": 93020758, "body": "@ErikHNguyen <code>case...of</code> is explained in any general Haskell tutorial. It does help to read one of the standard books... <a href=\"http://learnyouahaskell.com/\" rel=\"nofollow noreferrer\">LYAH</a>, albeit a bit outdated by now, is still my recommendation."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 6, "last_activity_date": 1540850311, "creation_date": 1540850311, "answer_id": 53054469, "question_id": 53053864, "link": "https://stackoverflow.com/questions/53053864/beginner-haskell-group-list-of-ints/53054469#53054469", "title": "Beginner Haskell | Group List of Ints", "body": "<p>Instead of laborously comparing single elements, use a function that compares elements <em>until some condition</em>.</p>\n\n<pre><code>Prelude&gt; span (==2) [2,2,3,3,3,4,4,4,4]\n([2,2],[3,3,3,4,4,4,4])\n</code></pre>\n\n<p>Then, recurse, using the remainder of that:</p>\n\n<pre><code>groupUp [] = [[]]   -- This should probably just be [], not [[]].\ngroupUp (x:xs) = case span (==x) xs of\n     (thisGroup, others) -&gt; (x:thisGroup) : groupUp others\n</code></pre>\n\n<p>Of course you can also define a version of <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:span\" rel=\"noreferrer\">span</a> yourself if you prefer.</p>\n"}], "owner": {"reputation": 71, "user_id": 8658248, "user_type": "registered", "profile_image": "https://graph.facebook.com/1512880645455403/picture?type=large", "display_name": "Erik H Nguyen", "link": "https://stackoverflow.com/users/8658248/erik-h-nguyen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 92, "favorite_count": 0, "accepted_answer_id": 53054469, "answer_count": 1, "score": 1, "last_activity_date": 1540891924, "creation_date": 1540847351, "last_edit_date": 1540891924, "question_id": 53053864, "link": "https://stackoverflow.com/questions/53053864/beginner-haskell-group-list-of-ints", "title": "Beginner Haskell | Group List of Ints", "body": "<p>I'm trying to make a function that makes a list of list of ints, can you lend a hand?</p>\n\n<pre><code>groupUp :: [Int] -&gt; [[Int]]\n</code></pre>\n\n<p>example:</p>\n\n<pre><code>groupUp [1,2,2,3,3,3] == [[1],[2,2],[3,3,3]]\n</code></pre>\n\n<p>The closest I could come was:</p>\n\n<pre><code>groupUp [] = [[]]\ngroupUp (x:[]) = []            \ngroupUp(x:y:xs)\n | x==y       = [x,y] : groupUp (xs)\n | otherwise  = [x] : groupUp (y:xs)\n</code></pre>\n\n<p>But this limits the list to a group of maximum 2 (pairs) and not more. What should I change?</p>\n\n<p>Edit: this one works, thx for the help!                                                                                                                 </p>\n\n<pre><code>  groupUp xs= helper 0 xs\n        where helper _ []=[] \n              helper i xs= takeWhile (==(xs!!i))xs: helper (i) (dropWhile (==(xs!!i))xs)\n</code></pre>\n"}, {"tags": ["haskell", "opengl", "module", "cabal"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1540845843, "post_id": 53053368, "comment_id": 93006604, "body": "You do try this <i>in the sandbox</i>, right?"}, {"owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "edited": false, "score": 0, "creation_date": 1540847229, "post_id": 53053368, "comment_id": 93007212, "body": "How are you invoking ghc &amp; ghci?"}, {"owner": {"reputation": 125, "user_id": 9419947, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78daa77f0251eb5ac51d0dd69995d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "UnseenElder", "link": "https://stackoverflow.com/users/9419947/unseenelder"}, "edited": false, "score": 0, "creation_date": 1540849981, "post_id": 53053368, "comment_id": 93008272, "body": "import Graphics.Rendering.OpenGL import Graphics.UI.GLUT  main = do   getArgsAndInitialize   createWindow &quot;Abdel&quot;   mainLoop"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 2, "creation_date": 1540859423, "post_id": 53053368, "comment_id": 93010825, "body": "@UnseenElder Those appear to be the commands once you are in the GHCi repl.  What command do you use to start the GHCi repl?  cabal repl?  ghci? Something else?  The sandbox installs packages in its own directory and ghci needs to be told how to find those packages - if you don&#39;t then it will behave as though they aren&#39;t installed."}], "answers": [{"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1540982947, "post_id": 53076601, "comment_id": 93060173, "body": "If you make this an answer, you could certainly add some full example, and perhaps also mention that a sandbox isn&#39;t <i>needed</i> (in fact, I&#39;d say sandboxes are obsolete now thanks to Cabal&#39;s Nix-style mode)."}], "tags": [], "owner": {"reputation": 37486, "user_id": 371753, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/znFEK.jpg?s=128&g=1", "display_name": "sclv", "link": "https://stackoverflow.com/users/371753/sclv"}, "is_accepted": false, "score": 0, "last_activity_date": 1540962150, "creation_date": 1540962150, "answer_id": 53076601, "question_id": 53053368, "link": "https://stackoverflow.com/questions/53053368/ghc-does-not-see-cabal-package/53076601#53076601", "title": "GHC does not see cabal package", "body": "<p>As the comments say, when you install into a sandbox, you need to run ghc and ghci <em>in the sandbox</em> (i.e. via cabal commands like <code>cabal repl</code> or <code>cabal build</code>) to have access to the packages you have installed into a sandbox.</p>\n"}], "owner": {"reputation": 125, "user_id": 9419947, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78daa77f0251eb5ac51d0dd69995d2a1?s=128&d=identicon&r=PG&f=1", "display_name": "UnseenElder", "link": "https://stackoverflow.com/users/9419947/unseenelder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 205, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1540962150, "creation_date": 1540845054, "last_edit_date": 1540846528, "question_id": 53053368, "link": "https://stackoverflow.com/questions/53053368/ghc-does-not-see-cabal-package", "title": "GHC does not see cabal package", "body": "<p>This is my algorithm, which I have followed on my Mac to work with OpenGL.</p>\n\n<pre><code>$ cabal init sandbox\n$ cabal install OpenGL\n</code></pre>\n\n<p>All done. They I import the module Graphics.Rendering.OpenGL and neither ghc or ghci see the module.</p>\n\n<p>What have I done wrong?</p>\n"}, {"tags": ["list", "haskell", "functional-programming", "nested-lists"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1540842671, "post_id": 53052753, "comment_id": 93005188, "body": "Hint: use <code>zipWith</code> <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:zipWith\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/base-4.12.0.0/docs/&hellip;</a>"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1540843103, "post_id": 53052753, "comment_id": 93005363, "body": "do you have any code that you tried to write? anything at all."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1540843220, "post_id": 53052753, "comment_id": 93005433, "body": "Can you write a <code>(a -&gt; b -&gt; c) -&gt; [a] -&gt; [b] -&gt; [c]</code>? And can you change a <code>x -&gt; a -&gt; y -&gt; z</code> to <code>x -&gt; [a] -&gt; y -&gt; [z]</code>?"}, {"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 1, "creation_date": 1540843232, "post_id": 53052753, "comment_id": 93005438, "body": "Yes you are right. It is a simple combination of <code>map</code> and <code>zipWith (*)</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1540844504, "post_id": 53052753, "comment_id": 93006008, "body": "Observe the values of <code>zipWith (*) [1,2,3] [1,2,3]</code> and <code>zipWith (*) [1,2,3] [4,5,6]</code>. With that knowledge, do you see how <code>map</code> could be used?"}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 0, "creation_date": 1540844843, "post_id": 53052753, "comment_id": 93006164, "body": "What should happen if the first list is empty? What if the next list is empty? What if the lists or sublists have different lengths?"}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 1, "creation_date": 1540850950, "post_id": 53052753, "comment_id": 93008646, "body": "I would suggest (and I think this is good general advice while you&#39;re learning):1) start by stating the problem very clearly (I should be able to understand what you&#39;re asking without looking at an example; sometimes this is half the work of writing the algorithm), 2) write a solution using recursion, 3) try refactoring using higher-order functions"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1540918832, "post_id": 53052753, "comment_id": 93037115, "body": "@jberryman another approach is to provide a comprehensive set of examples so that we can understand the problem just by looking at the examples alone. that could be half of the work of designing the algorithm, as well.  :)  and then the solution can be derived by a straightforward  generalization."}], "answers": [{"tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": false, "score": 2, "last_activity_date": 1540885564, "last_edit_date": 1540885564, "creation_date": 1540853129, "answer_id": 53054990, "question_id": 53052753, "link": "https://stackoverflow.com/questions/53052753/combine-a-list-of-lists-with-a-list-using-a-function-in-haskell/53054990#53054990", "title": "Combine a list of lists with a list using a function in Haskell", "body": "<blockquote>\n  <p>I know it probably requires a combination of <code>zipWith</code> and <code>map</code></p>\n</blockquote>\n\n<p>You\u2019re on the right track.</p>\n\n<p>Given two lists <code>xss</code> and <code>ys</code>, you want to take each element of <code>xss :: [[a]]</code>, being a list <code>xs :: [a]</code>, and zip it with <code>ys :: [b]</code> using <code>f :: a -&gt; b -&gt; c</code>. \u201cEach element\u201d suggests <code>map</code> (or a list comprehension), so you can make a guess containing a \u201chole\u201d which the compiler will report the type of:</p>\n\n<pre><code>mapFunc :: (a -&gt; b -&gt; c) -&gt; [[a]] -&gt; [b] -&gt; [[c]]\nmapFunc f xss ys = map (\\xs -&gt; _) xss\n\n-- or,\nmapFunc f xss ys = [_ | xs &lt;- xss]\n</code></pre>\n\n<p>The type of this hole is <code>[c]</code> in either case; the compiler also gives us a list of things in scope that may be useful for filling the hole:</p>\n\n<pre><code>xs :: [a]\nys :: [b]\nxss :: [[a]]\nf :: a -&gt; b -&gt; c\nmapFunc :: (a -&gt; b -&gt; c) -&gt; [[a]] -&gt; [b] -&gt; [[c]]\n</code></pre>\n\n<p>Looking at the type of <code>zipWith</code> should then make it clear how to fill in this hole, i.e. how to construct a value with the type <code>[c]</code> by combining the values you have in scope:</p>\n\n<pre><code>zipWith :: (a -&gt; b -&gt; c) -&gt; [a] -&gt; [b] -&gt; [c]\n</code></pre>\n\n<p>As an exercise, you can also manually inline the definitions of <code>map</code> and <code>zipWith</code> to understand how you would write this using manual recursion. A useful extension here is <code>{-# LANGUAGE ScopedTypeVariables #-}</code>, which allows you to define the scope of the types <code>a</code>, <code>b</code>, and <code>c</code> using a <code>forall</code> quantifier, so that you can break the problem down into local definitions and give type signatures for each part such that those type signatures could reuse the same type variables <code>a</code>, <code>b</code> and <code>c</code>. Try it yourself starting with this signature:</p>\n\n<pre><code>mapFunc :: forall a b c. (a -&gt; b -&gt; c) -&gt; [[a]] -&gt; [b] -&gt; [[c]]\n</code></pre>\n\n<p>And if you get stuck, there\u2019s a hint below for how I would structure a solution.</p>\n\n<blockquote class=\"spoiler\">\n  <p> Fill in the blanks:\n\n<pre><code>mapFunc :: forall a b c. (a -> b -> c) -> [[a]] -> [b] -> [[c]]\nmapFunc f xss ys = mapping xss\n  where\n    mapping :: [[a]] -> [[c]]\n    mapping (xs : xss') = _\n    mapping []          = _\n\n    zipping :: [a] -> [b] -> [c]\n    zipping (x : xs) (y : ys) = _\n    zipping []       _        = _\n    zipping _        []       = _</code></pre></p>\n</blockquote>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 0, "last_activity_date": 1540918625, "creation_date": 1540918625, "answer_id": 53069333, "question_id": 53052753, "link": "https://stackoverflow.com/questions/53052753/combine-a-list-of-lists-with-a-list-using-a-function-in-haskell/53069333#53069333", "title": "Combine a list of lists with a list using a function in Haskell", "body": "<p>So we must have</p>\n\n<pre><code>mapFunc (*)  [[1,2,3], [4, 5, 6]]    [1,2,3] \n     ==      [[1,4,9], [4,10,18]]\n</code></pre>\n\n<p>and so, also</p>\n\n<pre><code>mapFunc (*)  [[1,2,3], [4, 5, 6], [7, 8, 9, 10]]     [1,2,3]\n     ==      [[1,4,9], [4,10,18], [7, 14, 27]  ]\n-- and\nmapFunc (*)  [[1,2,3]]                               [1,2,3] \n     ==      [[1,4,9]]\n-- and\nmapFunc (*)           [[4, 5, 6], [7, 8, 9, 10]]     [1,2,3]\n     ==               [[4,10,18], [7, 14, 27]  ]\n</code></pre>\n\n<p>Thus,</p>\n\n<pre><code>mapFunc (*) ([[1,2,3]] ++ [[4, 5, 6], [7, 8, 9, 10]])    [1,2,3]\n     == (mapFunc (*) \n             [[1,2,3]]                                   [1,2,3])\n                       ++\n             (mapFunc (*) [[4, 5, 6], [7, 8, 9, 10]]     [1,2,3])\n</code></pre>\n\n<p>There's nothing special about these specific numbers though, so we must necessarily have</p>\n\n<pre><code>mapFunc (*) (    [xs]      ++              xss       )     ys   =\n  = (mapFunc (*) [xs]  ys  ++  mapFunc (*) xss  ys)\n  = ([g           xs  ys]  ++  mapFunc (*) xss  ys)\n</code></pre>\n\n<p>because as we see from our examples, <code>(\\xss -&gt; mapFunc (*) xss ys)</code> is a length-preserving transformation.</p>\n\n<p>So what should this <code>g</code> function be?</p>\n\n<p><em>Lather, rinse, repeat:</em></p>\n\n<p>We must have</p>\n\n<pre><code>g   [1,2,3]   [1,2,3] == [1,4,9]\ng   [4,5,6]   [1,2,3] == [4,10,18]\ng   [7,8,9,10]  [1,2,3] == [7,14,27]\n</code></pre>\n\n<p>and thus, again generalizing as the numbers are nothing special in themselves,</p>\n\n<pre><code>g  xs  ys  =  [ (*) x y | x &lt;- xs | y &lt;- ys ]\n</code></pre>\n\n<p>and that's that.</p>\n"}], "owner": {"reputation": 141, "user_id": 10394930, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f5fc94932382e087ae14e58bade83cbc?s=128&d=identicon&r=PG&f=1", "display_name": "newb346", "link": "https://stackoverflow.com/users/10394930/newb346"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 200, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1540918625, "creation_date": 1540842439, "last_edit_date": 1540862374, "question_id": 53052753, "link": "https://stackoverflow.com/questions/53052753/combine-a-list-of-lists-with-a-list-using-a-function-in-haskell", "title": "Combine a list of lists with a list using a function in Haskell", "body": "<p>I want to be able to apply a function between each element of an input list and each element of each sublist in a list of lists like so:</p>\n\n<pre><code>mapFunc :: (a -&gt; b -&gt; c) -&gt; [[a]] -&gt; [b] -&gt; [[c]]\n</code></pre>\n\n<p>For instance: <code>mapFunc (*) [[1,2,3],[4,5,6]] [1,2,3]</code> should give me: <code>[[1,4,9],[4,10,18]]</code>. </p>\n\n<p>Is there a specific way to do this in Haskell?</p>\n\n<p>I know it probably requires a combination of <code>zipWith</code> and <code>map</code> in some manner and I have been trying them but not really been able to make any head way into my problem</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 1118, "user_id": 6373949, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh4.googleusercontent.com/-EYY_IdaEeaU/AAAAAAAAAAI/AAAAAAAAAfs/feCbMbQ8tZ4/photo.jpg?sz=128", "display_name": "Aipi", "link": "https://stackoverflow.com/users/6373949/aipi"}, "edited": false, "score": 0, "creation_date": 1540839765, "post_id": 53052046, "comment_id": 93003851, "body": "Thank you for your answer. Now it is clarified for me!"}], "tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": false, "score": 1, "last_activity_date": 1540839212, "creation_date": 1540839212, "answer_id": 53052046, "question_id": 53051974, "link": "https://stackoverflow.com/questions/53051974/functions-whats-is-the-difference-below-using-and-not-using-the-where-clause/53052046#53052046", "title": "Functions: Whats is the difference below using and not using the where clause?", "body": "<p>In the first version <code>bmi</code> is local to <code>calcBmis</code> and could (but doesn't) use the parameter <code>xs</code> if it wanted to.</p>\n\n<p>In the second version <code>bmi</code> is a global function just like <code>calcBmis</code>, so you could call it from anywhere.</p>\n\n<p>So if you enter <code>bmi 1 2</code> into GHCi after entering the first code, you'd get an error about <code>bmi</code> not being defined, but after the second code, it would work fine.</p>\n"}, {"comments": [{"owner": {"reputation": 1118, "user_id": 6373949, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh4.googleusercontent.com/-EYY_IdaEeaU/AAAAAAAAAAI/AAAAAAAAAfs/feCbMbQ8tZ4/photo.jpg?sz=128", "display_name": "Aipi", "link": "https://stackoverflow.com/users/6373949/aipi"}, "edited": false, "score": 0, "creation_date": 1540839824, "post_id": 53052064, "comment_id": 93003883, "body": "Thank you for your answer. Now it is clarified for me! It was so good that I do not have more questions. XD"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 6, "last_activity_date": 1540839281, "creation_date": 1540839281, "answer_id": 53052064, "question_id": 53051974, "link": "https://stackoverflow.com/questions/53051974/functions-whats-is-the-difference-below-using-and-not-using-the-where-clause/53052064#53052064", "title": "Functions: Whats is the difference below using and not using the where clause?", "body": "<p>There are two key differences between using a <code>where</code> block and making a new top-level declaration.</p>\n\n<ol>\n<li><p>Scoping of the new defined variable. A <code>where</code> block has a more limited scope than a top-level declaration: in your example, with the <code>where</code> block, I cannot call <code>bmi</code> from outside the implementation of <code>calcBmis</code>, but with the additional top-level declaration I can.</p></li>\n<li><p>Scoping of the variables usable inside the definition. A definition made in a <code>where</code> block can see variable names that are local to the function being defined. In your example, although you didn't use this fact, <code>bmi</code> can see the name <code>xs</code> in the <code>where</code>-block version; the new top-level declaration does not have <code>xs</code> in scope. Consequently, when lifting <code>where</code>-block definitions to the top-level, it is sometimes necessary to add extra parameters to them, and pass in the local variables as arguments when calling them.</p></li>\n</ol>\n"}], "owner": {"reputation": 1118, "user_id": 6373949, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh4.googleusercontent.com/-EYY_IdaEeaU/AAAAAAAAAAI/AAAAAAAAAfs/feCbMbQ8tZ4/photo.jpg?sz=128", "display_name": "Aipi", "link": "https://stackoverflow.com/users/6373949/aipi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 55, "favorite_count": 0, "accepted_answer_id": 53052064, "answer_count": 2, "score": 0, "last_activity_date": 1540839281, "creation_date": 1540838893, "question_id": 53051974, "link": "https://stackoverflow.com/questions/53051974/functions-whats-is-the-difference-below-using-and-not-using-the-where-clause", "title": "Functions: Whats is the difference below using and not using the where clause?", "body": "<p>I am a newbie with Haskell and implemented a function to calculate BMI (\u200eBody Mass Index). But I got to make it of two ways:</p>\n\n<pre><code>-- Calculate BMI using where clause\n:{\ncalcBmis :: (RealFloat a) =&gt; [(a, a)] -&gt; [a]  \ncalcBmis xs = [bmi w h | (w, h) &lt;- xs]  \n    where bmi weight height = weight / height ^ 2\n:}\n-- Input: calcBmis [(70, 1.7), (90, 1.89)]\n-- Output: [24.221453287197235, 25.195263290501387]\n</code></pre>\n\n<p>and</p>\n\n<pre><code>-- Calculate BMI using just list comprehension\n:{\ncalcBmis :: (RealFloat a) =&gt; [(a, a)] -&gt; [a] \ncalcBmis xs = [bmi w h | (w, h) &lt;- xs]\nbmi weight height = weight / height ^ 2\n:}\n-- Input: calcBmis [(70, 1.7), (90, 1.89)]\n-- Output: [24.221453287197235, 25.195263290501387]\n</code></pre>\n\n<p>Both work perfectly! The only difference is the use of <code>where</code> at the first one. I have seen which <code>where</code> is good if I had to declare constants or more than one function. I do not know if exist another way to use it for a while, but until now I learn something like this.</p>\n\n<p>Would I want to know if the difference between both functions is just about clean code, or there is something more special behind it in this case?</p>\n"}, {"tags": ["haskell", "types", "gadt", "existential-type"], "comments": [{"owner": {"reputation": 123, "user_id": 4385153, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-EMFaalZS9Rg/AAAAAAAAAAI/AAAAAAAAAFE/ENKQkp5KoQE/photo.jpg?sz=128", "display_name": "phi16", "link": "https://stackoverflow.com/users/4385153/phi16"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1540831639, "post_id": 53049277, "comment_id": 93000054, "body": "there a certain type what <code>f&#39;</code> accepts. I expect <code>d</code> to be such a type, so it looks no problem. especially <code>undefined</code>-ness is not concerned because <code>V :: (c -&gt; (c,a)) -&gt; V a</code> will cause the same, in spite of it accepts a sane value <code>\\y -&gt; (y,x)</code> for <code>x :: a</code>."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1540831820, "post_id": 53049277, "comment_id": 93000117, "body": "If you have some kind of extra constraints in your GADT, which <i>might</i> allow this to be written, you should add them to the question."}, {"owner": {"reputation": 123, "user_id": 4385153, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-EMFaalZS9Rg/AAAAAAAAAAI/AAAAAAAAAFE/ENKQkp5KoQE/photo.jpg?sz=128", "display_name": "phi16", "link": "https://stackoverflow.com/users/4385153/phi16"}, "edited": false, "score": 0, "creation_date": 1540832196, "post_id": 53049277, "comment_id": 93000301, "body": "in fact my original case was <code>V :: (c -&gt; (c,a)) -&gt; V a</code>, but the essential point is not  changed by simplication. so if the simplified code was prohibited, then original case must be prohibited."}, {"owner": {"reputation": 123, "user_id": 4385153, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-EMFaalZS9Rg/AAAAAAAAAAI/AAAAAAAAAFE/ENKQkp5KoQE/photo.jpg?sz=128", "display_name": "phi16", "link": "https://stackoverflow.com/users/4385153/phi16"}, "edited": false, "score": 0, "creation_date": 1540832415, "post_id": 53049277, "comment_id": 93000398, "body": "ah, <code>\\y -&gt; (y,x)</code> wasn&#39;t correct response... <code>\\f -&gt; let (x,c) = f c in x</code> is."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1540832609, "post_id": 53049277, "comment_id": 93000514, "body": "There is no guarantee that <code>f&#39;</code> can be applied <code>d</code>, so it&#39;s not just a matter of the type remaining hidden."}], "answers": [{"comments": [{"owner": {"reputation": 123, "user_id": 4385153, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-EMFaalZS9Rg/AAAAAAAAAAI/AAAAAAAAAFE/ENKQkp5KoQE/photo.jpg?sz=128", "display_name": "phi16", "link": "https://stackoverflow.com/users/4385153/phi16"}, "edited": false, "score": 1, "creation_date": 1540834001, "post_id": 53050585, "comment_id": 93001168, "body": "ah, your <code>v</code> example is perfect for me to understand... thanks!"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1540851917, "post_id": 53050585, "comment_id": 93008968, "body": "In Coq, with full dependent types, I was able to define a (very messy) <code>down</code> without relying on such uninhabited type as <code>Forall</code>, instead requiring <code>(c,d_)</code> to be a dependent pair so that <code>d_</code> can be passed to <code>f&#39;</code>. I&#39;m not posting the code since it&#39;s autogenerated with tactics, hence it&#39;s unreadable. Still, it&#39;s interesting (for me at least) to know that it can be done."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1540902322, "post_id": 53050585, "comment_id": 93026826, "body": "I managed to find a clean solution in Coq, closer to the OP&#39;s code. We can&#39;t translate it in Haskell (can we?), but at least we can see how it could be done with full dependent types."}, {"owner": {"reputation": 189, "user_id": 8179137, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46b43fe26a1b6191280614f56683525d?s=128&d=identicon&r=PG&f=1", "display_name": "Potato44", "link": "https://stackoverflow.com/users/8179137/potato44"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1540955140, "post_id": 53050585, "comment_id": 93049420, "body": "@chi You should be able to translate it to Haskell using singletons, may not be very pretty though"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 3, "last_activity_date": 1540833162, "creation_date": 1540833162, "answer_id": 53050585, "question_id": 53049277, "link": "https://stackoverflow.com/questions/53049277/unpack-existentials-in-existential-type/53050585#53050585", "title": "Unpack Existentials in Existential Type", "body": "<p>Here's the fundamental problem: <code>f</code> can have a peek at <code>c</code> and use the value of <code>c</code> to determine which type to hide in its existential. For example:</p>\n\n<pre><code>v :: V (V Int)\nv = V $ \\p -&gt; case p of\n     False -&gt; V (id :: Int -&gt; Int)\n     True  -&gt; V (fromEnum :: Char -&gt; Int)\n</code></pre>\n\n<p>So <code>d</code> would need to be both a valid <code>Int</code> and a valid <code>Char</code> if we called <code>down v</code>! To be able to feed an existential that can be so variable, you'll need to ensure that its argument can take on all the types it may demand.</p>\n\n<pre><code>newtype Forall = Forall (forall a. a)\n\ndown :: V (V a) -&gt; V a\ndown (V f) = V $ \\(c, d_) -&gt; case f c of\n    V f' -&gt; case d_ of\n        Forall d -&gt; f' d\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 2, "last_activity_date": 1540902184, "creation_date": 1540902184, "answer_id": 53064233, "question_id": 53049277, "link": "https://stackoverflow.com/questions/53049277/unpack-existentials-in-existential-type/53064233#53064233", "title": "Unpack Existentials in Existential Type", "body": "<p>In Haskell, I can't find a simple way to make your code work.</p>\n\n<p>I find it interesting though, that your idea does work in a language with full dependent types like Coq (and likely Agda, Idris, etc.).</p>\n\n<p>The main crux, as Daniel Wagner points out, is that the type resulting from <code>f</code> can depend on the value of <code>c</code>, so the pair <code>(c,d)</code> in the original code should be a <em>dependent pair</em>.</p>\n\n<p>For what it is worth, here's how we can do it in Coq.</p>\n\n<p>Note that this does not involve an uninhabited type like <code>forall a. a</code>.</p>\n\n<pre><code>(* An existential type, under an impredicative encoding *)\nInductive V (A: Type): Type :=\n  Vk : forall (B: Type), (B -&gt; A) -&gt; V A\n.\n\n(* The usual \"identity to equivalence\" *)\nDefinition subst {A B: Type} (p: A = B) (x: A): B :=\n   match p with\n   | eq_refl =&gt; x\n   end .\n\n(* The main function.\n\n   Essentially, we want to turn\n     Vk B (fun b =&gt; Vk C g)\n   into\n     Vk (B*C) (fun (b,c) =&gt; g c)\n   but both C and g can depend on (b:B), so (B*C)\n   should be a Sigma type {b:B &amp; ty b}.\n\n*)\nDefinition down (A: Type) (x: V (V A)): V A :=\n   match x with\n   | Vk B f =&gt; let\n      ty (z: V A): Type := match z with | Vk C g =&gt; C end\n      in Vk A {b:B &amp; ty (f b)} (fun w =&gt;\n         match w with\n         | existT b y =&gt;\n            match f b as o return ty (f b) = ty o-&gt; A with\n            | Vk C g =&gt; fun (h: ty (f b) = C) =&gt;\n               g (subst h y)\n            end eq_refl\n         end )\n   end .\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 123, "user_id": 4385153, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-EMFaalZS9Rg/AAAAAAAAAAI/AAAAAAAAAFE/ENKQkp5KoQE/photo.jpg?sz=128", "display_name": "phi16", "link": "https://stackoverflow.com/users/4385153/phi16"}, "is_accepted": false, "score": 2, "last_activity_date": 1541356854, "last_edit_date": 1541356854, "creation_date": 1541313858, "answer_id": 53138417, "question_id": 53049277, "link": "https://stackoverflow.com/questions/53049277/unpack-existentials-in-existential-type/53138417#53138417", "title": "Unpack Existentials in Existential Type", "body": "<p>Thanks for another great answer, chi!</p>\n\n<p>I rewrote the code for Agda and actually it does compile. As an additional note for the above answer, I place my code here.</p>\n\n<pre><code>module down where\n\nopen import Level\nopen import Data.Product\n\ndata V {\u2113} (A : Set \u2113) : Set (suc \u2113) where\n  Vk : {B : Set} \u2192 (B \u2192 A) \u2192 V A\n\ndown : \u2200 {\u2113} {A : Set \u2113} \u2192 V (V A) \u2192 V A\ndown {\u2113} {A} (Vk {B} f) = Vk go where\n  ty : V A \u2192 Set\n  ty (Vk {C} _) = C\n  go : \u03a3 B (\u03bb b \u2192 ty (f b)) \u2192 A\n  go (b , c) with f b\n  go (b , c) | Vk {C} g = g c\n</code></pre>\n"}], "owner": {"reputation": 123, "user_id": 4385153, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-EMFaalZS9Rg/AAAAAAAAAAI/AAAAAAAAAFE/ENKQkp5KoQE/photo.jpg?sz=128", "display_name": "phi16", "link": "https://stackoverflow.com/users/4385153/phi16"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 231, "favorite_count": 3, "accepted_answer_id": 53050585, "answer_count": 3, "score": 2, "last_activity_date": 1541356854, "creation_date": 1540828447, "question_id": 53049277, "link": "https://stackoverflow.com/questions/53049277/unpack-existentials-in-existential-type", "title": "Unpack Existentials in Existential Type", "body": "<p>I tried to write the following code:</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\n\nmodule V where\n\ndata V a where\n  V :: (c -&gt; a) -&gt; V a\n\ndown :: V (V a) -&gt; V a\ndown (V f) = V $ \\(c,d) -&gt; case f c of\n  V f' -&gt; f' d\n</code></pre>\n\n<p>Then GHC answered <code>type variable `c' would escape its scope</code>.</p>\n\n<p>I understand why it doesn't compile: it uses hidden type of existential <strong>out of <code>case</code></strong>.</p>\n\n<p>But actually the type is still <strong>hidden</strong> by <code>V</code>. so essentially function <code>down</code> has no problem I think.</p>\n\n<p>Is there a way to write a compilable <code>down</code> function?</p>\n"}, {"tags": ["haskell", "search", "functional-programming", "caesar-cipher"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1540828513, "post_id": 53049055, "comment_id": 92998286, "body": "You are looking for <code>lookup :: Eq =&gt; a -&gt; [(a, b)] -&gt; Maybe b</code>."}, {"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 0, "creation_date": 1540832843, "post_id": 53049055, "comment_id": 93000638, "body": "If this is an exercise then fine but under normal conditions this is an inefficient way of constructing a table. Just use the <code>Data.Map</code> package."}], "answers": [{"tags": [], "owner": {"reputation": 62252, "user_id": 1435869, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TrEd9.jpg?s=128&g=1", "display_name": "karakfa", "link": "https://stackoverflow.com/users/1435869/karakfa"}, "is_accepted": false, "score": 2, "last_activity_date": 1540829045, "creation_date": 1540829045, "answer_id": 53049481, "question_id": 53049055, "link": "https://stackoverflow.com/questions/53049055/searching-item-in-a-table-in-haskell/53049481#53049481", "title": "Searching item in a table in haskell", "body": "<p>you cannot be certain that you'll find the value you're looking for in the table, something like this should work</p>\n\n<pre><code>find :: Eq a =&gt; a -&gt; [(a,b)] -&gt; Maybe b\nfind c [] = Nothing\nfind c ((k,v):xs) | c==k = Just v\n                  | otherwise = find c xs\n</code></pre>\n"}], "owner": {"reputation": 21, "user_id": 4734423, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-H2i6p9Vm_kI/AAAAAAAAAAI/AAAAAAAACeU/zQ2Pe6mg2bM/photo.jpg?sz=128", "display_name": "Attila Fodor", "link": "https://stackoverflow.com/users/4734423/attila-fodor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 201, "favorite_count": 0, "closed_date": 1540838958, "answer_count": 1, "score": -3, "last_activity_date": 1540829045, "creation_date": 1540827698, "last_edit_date": 1540828079, "question_id": 53049055, "link": "https://stackoverflow.com/questions/53049055/searching-item-in-a-table-in-haskell", "closed_reason": "Duplicate", "title": "Searching item in a table in haskell", "body": "<p>I am currently working in an exercise to make a caesar cipher, but for to finish that i need to find items in a table. It's a table which is offset to right by 3 elements. </p>\n\n<p>There is my table:</p>\n\n<pre><code>table :: [(Char, Char)]\ntable = zip ['a'..'z'] (['d'..'z'] ++ ['a'..'c'])\n[('a','d'),('b','e'),('c','f'),('d','g'),('e','h'),('f','i'),('g','j'),('h','k'),('i','l'),('j','m'),('k','n'),('l','o'),('m','p'),('n','q'),('o','r'),('p','s'),('q','t'),('r','u'),('s','v'),('t','w'),('u','x'),('v','y'),('w','z'),('x','a'),('y','b'),('z','c')]\n</code></pre>\n\n<p>And I need to find an alphabetic character to give back it's pair. Like:</p>\n\n<pre><code>shift :: [(Char, Char)] -&gt; Char -&gt; Char \nshift table 'z' ...\n</code></pre>\n\n<p>result:</p>\n\n<pre><code>shift table 'y'\n'b'\n</code></pre>\n\n<p>I haven't find anything on books or on the internet, that's why i am asking.\nThank you for your help! </p>\n"}, {"tags": ["haskell", "syntax"], "comments": [{"owner": {"reputation": 1519, "user_id": 1486848, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/KNtLf.jpg?s=128&g=1", "display_name": "ShamPooSham", "link": "https://stackoverflow.com/users/1486848/shampoosham"}, "edited": false, "score": 1, "creation_date": 1540806338, "post_id": 53042637, "comment_id": 92984721, "body": "Please make your post a bit more readable with formatting"}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1540825632, "post_id": 53042637, "comment_id": 92996450, "body": "By the way, it&#39;s inherently dangerous to use record syntax with multiple constructors. It makes the record accessors into partial functions."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 11, "last_activity_date": 1540806465, "creation_date": 1540806465, "answer_id": 53042731, "question_id": 53042637, "link": "https://stackoverflow.com/questions/53042637/record-syntax-is-illegal-binary-tree-in-haskell/53042731#53042731", "title": "Record syntax is illegal. Binary Tree in haskell", "body": "<p>The <code>a</code> should also be part of the record syntax, for example:</p>\n\n<pre><code>data Tree a = Null | Node {<b>valTree :: a</b>, lTree:: Tree a, rTree :: Tree a}</code></pre>\n\n<p>You can not \"mix\" record syntax with positional syntax as is specified by the <a href=\"https://www.haskell.org/onlinereport/syntax-iso.html\" rel=\"noreferrer\">Haskell grammar in the Haskell '98 report</a>:</p>\n\n<blockquote>\n<pre><code>constr  -&gt; con [!] atype1 ... [!] atypek  (arity con = k, k&gt;=0)\n        |  (btype | ! atype) conop (btype | ! atype)  (infix conop)\n        |  con { fielddecl1 , ... , fielddecln }  (n&gt;=0)\n</code></pre>\n</blockquote>\n"}], "owner": {"reputation": 35, "user_id": 10400661, "user_type": "registered", "profile_image": "https://graph.facebook.com/711687962557096/picture?type=large", "display_name": "Frederick LI", "link": "https://stackoverflow.com/users/10400661/frederick-li"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 385, "favorite_count": 1, "accepted_answer_id": 53042731, "answer_count": 1, "score": 1, "last_activity_date": 1605660284, "creation_date": 1540806125, "last_edit_date": 1605660284, "question_id": 53042637, "link": "https://stackoverflow.com/questions/53042637/record-syntax-is-illegal-binary-tree-in-haskell", "title": "Record syntax is illegal. Binary Tree in haskell", "body": "<p>I defined the tree type with record syntax way.</p>\n\n<pre><code>data Tree a = Null | Node a {lTree:: Tree a, rTree :: Tree a}\n</code></pre>\n\n<p>However, when I load it, it shows an error:</p>\n\n<pre><code>\u2022 Record syntax is illegal here: {lTree :: Tree a, rTree :: Tree a}\n    \u2022 In the type \u2018{lTree :: Tree a, rTree :: Tree a}\u2019\n      In the definition of data constructor \u2018Node\u2019\n      In the data declaration for \u2018Tree\u2019\n  |\n2 | data Tree a = Null | Node a {lTree:: Tree a, rTree :: Tree a}\n  |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["haskell", "logic", "ocaml", "type-systems"], "answers": [{"tags": [], "owner": {"reputation": 28350, "user_id": 2625442, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3a48a497d3aae41354bc1189d57db2c3?s=128&d=identicon&r=PG", "display_name": "ivg", "link": "https://stackoverflow.com/users/2625442/ivg"}, "is_accepted": true, "score": 9, "last_activity_date": 1540830662, "last_edit_date": 1540830662, "creation_date": 1540830038, "answer_id": 53049761, "question_id": 53039099, "link": "https://stackoverflow.com/questions/53039099/why-are-there-flexible-and-rigid-bounds-in-mlf/53049761#53049761", "title": "Why are there flexible and rigid bounds in MLF?", "body": "<p>It is described in detail in the \"Our track\" section of the paper. I will try to provide a different and less formal explanation that will hopefully help you to build your own intuition. </p>\n\n<p>Basically, the rigidly bound type variable is the MLF version of an ML weak variable. It could be illustrated using the examples from the paper. Given the function </p>\n\n<pre><code>choose x y = if true then x else y\n</code></pre>\n\n<p>we can assign two different types <code>s1</code> and <code>s2</code> to the expression <code>choose id</code>, that differ only in the way how we quantify the type variables, </p>\n\n<pre><code> s1 = \\forall a. ((a -&gt; a) -&gt; (a -&gt; a))\n s2 = (\\forall a. (a -&gt; a)) -&gt; (\\forall a. (a -&gt; a))\n</code></pre>\n\n<p>Apparently, neither type is more general than another in MLF, so we have to delay the choice of one or another by introducing a flexible type, and giving <code>choose id</code> the following type </p>\n\n<pre><code> s3 = (\\forall a. a &gt;= (\\forall a. a -&gt; a)). (a -&gt; a) \n</code></pre>\n\n<p>We can easily see that both <code>s1</code> and <code>s2</code> are instances of <code>s3</code>. </p>\n\n<p>The <code>auto (x : \\forall a. a -&gt; a) = x x</code> function is used as a litmus test that shows an example of a function that could not be given the flexible type, since it could be given the <code>s2</code> type, which types well <code>auto succ</code> as <code>(int -&gt; int) -&gt; (int -&gt; int)</code> which obviously leads to a breach of our type system (i.e., we would be able to apply <code>succ succ</code>). Thus we need to give a weaker type with a rigid bound, </p>\n\n<pre><code> s4 = (\\forall a. a = (\\forall a. a -&gt; a)). (a -&gt; a) \n</code></pre>\n\n<p>So if your implementation allows <code>auto succ</code> then it is not sound. If it doesn't allow <code>choose id succ</code> or <code>choose id auto</code> then it is incomplete wrt to the paper. </p>\n\n<p>P.S. Other sources of intuition: this problem basically corresponds to the shift/reduce conflicts in parsing, or to the lazy/eager evaluation. Indeed, we need to decide whether we shall instantiate type application right now or delay it further, and neither choice is more general than another. As sometimes eager instantiation enables typing of an expression (e.g., ascribing <code>s1</code> to <code>auto</code>) and sometimes delaying breaches the type system (by ascribing <code>s2</code> to <code>auto</code> which enables <code>auto succ</code>) </p>\n"}], "owner": {"reputation": 2197, "user_id": 1568890, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e1743a48fc43aeab957da6d5d53e36c5?s=128&d=identicon&r=PG", "display_name": "Calebmer", "link": "https://stackoverflow.com/users/1568890/calebmer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 118, "favorite_count": 0, "accepted_answer_id": 53049761, "answer_count": 1, "score": 7, "last_activity_date": 1540830662, "creation_date": 1540790054, "question_id": 53039099, "link": "https://stackoverflow.com/questions/53039099/why-are-there-flexible-and-rigid-bounds-in-mlf", "title": "Why are there flexible and rigid bounds in MLF?", "body": "<p>I\u2019m working on an implementation of MLF based on the paper <a href=\"http://pauillac.inria.fr/~remy/work/mlf/icfp.pdf\" rel=\"noreferrer\">Raising ML to the Power of System F</a>. In the paper types are defined as:</p>\n\n<pre><code>t ::= a | g t1 ... tn\no ::= t | \u22a5 | \u2200(a \u2265 o) o | \u2200(a = o) o\n</code></pre>\n\n<p>I\u2019m having trouble understanding what the difference between \u2265 and = is in the construction of the types? Specifically for the unification algorithm.</p>\n\n<p>I\u2019ve implemented the unification and inference algorithms in the Appendix in a way which seems to maintain all invariants for those algorithms without ever reading from the bound kind in a meaningful way.</p>\n\n<p>I\u2019d like an example of when the result of unification changes based on the bound kind.</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 4471, "user_id": 3858142, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/4c27dead2edf0b6dc28833a694c42ba1?s=128&d=identicon&r=PG&f=1", "display_name": "sevo", "link": "https://stackoverflow.com/users/3858142/sevo"}, "edited": false, "score": 0, "creation_date": 1540834637, "post_id": 53037635, "comment_id": 93001482, "body": "Can you elaborate a bit further? There&#39;s <code>(RandomGen g, Monad m) =&gt; MonadRandom (RandT g m)</code> but won&#39;t that create another layer on top on existing <code>MonadRandom</code>? Or did you mean to propose signature change? I suspect that there are implications of having <code>MonadRandom</code> as the interface, which I&#39;m not so sure about."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 4471, "user_id": 3858142, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/4c27dead2edf0b6dc28833a694c42ba1?s=128&d=identicon&r=PG&f=1", "display_name": "sevo", "link": "https://stackoverflow.com/users/3858142/sevo"}, "edited": false, "score": 1, "creation_date": 1540836231, "post_id": 53037635, "comment_id": 93002242, "body": "@sevo Since we know <code>RandomGen StdGen</code> and <code>Monad Identity</code>, and <code>Rand g ~ RandT g Identity</code>, that instance tells us that <code>MonadRandom (Rand StdGen)</code>. So if you have an action of type <code>MonadRandom m =&gt; ...</code>, you can in particular choose <code>m ~ Rand StdGen</code> in your test harness. (And even if you only know the weaker <code>(MonadRandom m, MonadSomethingElse m) =&gt; ...</code>, you can choose <code>m ~ RandT StdGen SomethingElse</code> to get an action whose random behavior is made deterministic/seedable.)"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 2, "last_activity_date": 1540776339, "creation_date": 1540776339, "answer_id": 53037635, "question_id": 53037115, "link": "https://stackoverflow.com/questions/53037115/testing-functions-that-use-monadrandom-class/53037635#53037635", "title": "Testing functions that use MonadRandom class", "body": "<p>The existing <code>Rand</code> instance is already law-abiding and accepts a seed for deterministic behavior. Take a look:</p>\n\n<pre><code>&gt; act = replicateM 10 getRandom :: Rand StdGen [Bool]\n&gt; runRand act (mkStdGen 1000)\n([True,True,False,True,True,False,True,False,False,False],988833273 1336516156)\n&gt; runRand act (mkStdGen 1000)\n([True,True,False,True,True,False,True,False,False,False],988833273 1336516156)\n&gt; runRand act (mkStdGen 1000)\n([True,True,False,True,True,False,True,False,False,False],988833273 1336516156)\n</code></pre>\n"}], "owner": {"reputation": 4471, "user_id": 3858142, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/4c27dead2edf0b6dc28833a694c42ba1?s=128&d=identicon&r=PG&f=1", "display_name": "sevo", "link": "https://stackoverflow.com/users/3858142/sevo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 76, "favorite_count": 0, "accepted_answer_id": 53037635, "answer_count": 1, "score": 1, "last_activity_date": 1540776339, "creation_date": 1540770622, "question_id": 53037115, "link": "https://stackoverflow.com/questions/53037115/testing-functions-that-use-monadrandom-class", "title": "Testing functions that use MonadRandom class", "body": "<p>Is it possible to implement lawful, deterministic <a href=\"http://hackage.haskell.org/package/MonadRandom-0.5.1.1/docs/Control-Monad-Random-Class.html#t:MonadRandom\" rel=\"nofollow noreferrer\"><code>MonadRandom</code></a> that takes seed or predefined results as argument for the purposes of testing?</p>\n\n<p>Given</p>\n\n<pre><code>yesOrNo :: (MonadRandom m) -&gt; m Bool\n</code></pre>\n\n<p>Conceptually, during test, such function might be resolved to:</p>\n\n<pre><code>yesOrNo :: Bool -&gt; Bool\nyesOrNo = id\n</code></pre>\n\n<p>I thought I could implement</p>\n\n<pre><code>instance (MonadRandom ((-&gt;) StdGen))\n</code></pre>\n\n<p>or </p>\n\n<pre><code>instance (Random a) =&gt; (MonadRandom ((-&gt;) [a]))\n</code></pre>\n\n<p>But I'm starting to realize that such instance would be probably useless because I cannot thread StdGen this way.</p>\n\n<p>Maybe I need a way to extend <code>MonadRandom</code> with additional operations so tests could control its behavior? Maybe State? I'm not sure what approach should I take.</p>\n"}, {"tags": ["haskell", "functional-programming", "currying", "partial-application"], "comments": [{"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 2, "creation_date": 1540784231, "post_id": 53036870, "comment_id": 92976607, "body": "Please do not use jpegs, formatted text only."}], "answers": [{"comments": [{"owner": {"reputation": 2845, "user_id": 7884542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IHDzC.jpg?s=128&g=1", "display_name": "nyarian", "link": "https://stackoverflow.com/users/7884542/nyarian"}, "edited": false, "score": 0, "creation_date": 1540811364, "post_id": 53037089, "comment_id": 92987675, "body": "I think I&#39;ve get &quot;what is going on&quot;, but not &quot;why is it so&quot;... But thanks, that&#39;s the halfway!"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 2845, "user_id": 7884542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IHDzC.jpg?s=128&g=1", "display_name": "nyarian", "link": "https://stackoverflow.com/users/7884542/nyarian"}, "edited": false, "score": 0, "creation_date": 1540811843, "post_id": 53037089, "comment_id": 92987967, "body": "@AndreyIlyunin It&#39;s not obvious at all. If you are a little confused, I think that&#39;s normal :)"}, {"owner": {"reputation": 2845, "user_id": 7884542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IHDzC.jpg?s=128&g=1", "display_name": "nyarian", "link": "https://stackoverflow.com/users/7884542/nyarian"}, "edited": false, "score": 0, "creation_date": 1540812154, "post_id": 53037089, "comment_id": 92988115, "body": "Yes, it&#39;s kinda magical after imperative world with just cycles."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 3, "last_activity_date": 1540770680, "last_edit_date": 1540770680, "creation_date": 1540770378, "answer_id": 53037089, "question_id": 53036870, "link": "https://stackoverflow.com/questions/53036870/cant-understand-the-result-of-the-high-order-function-invocation-provided-with/53037089#53037089", "title": "Can&#39;t understand the result of the high-order function invocation provided with not partially applied function as an argument", "body": "<p>With Church numerals, the application of two numerals <code>a b</code> is equivalent to the exponential <code>b^a</code>. So, <code>_4 _4</code> corresponds to <code>4^4=256</code>, not <code>16</code>.</p>\n\n<p>Roughly: <code>_4 f</code> means <code>f . f . f . f</code>, i.e. \"doing <code>f</code> four times, or \"multiplying <code>f</code> by four\". So, <code>_4 _4 f</code> means \"multiplying <code>f</code> by four, four times\", hence <code>4^4</code>.</p>\n\n<p>Indeed:</p>\n\n<pre><code>&gt; 2^256 * 2 :: Integer\n231584178474632390847141970017375815706539969331281128078915168015826259279872\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2845, "user_id": 7884542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IHDzC.jpg?s=128&g=1", "display_name": "nyarian", "link": "https://stackoverflow.com/users/7884542/nyarian"}, "edited": false, "score": 0, "creation_date": 1540811463, "post_id": 53038478, "comment_id": 92987742, "body": "Seems I&#39;ve got it, finally. We&#39;ll get <code>twice^8</code>, which is equal to <code>16 times f(x)</code>, where <code>f = (*2)</code> and the argument is <code>2</code>. Thanks! This description it clear enough for a newbie like me!"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 2845, "user_id": 7884542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IHDzC.jpg?s=128&g=1", "display_name": "nyarian", "link": "https://stackoverflow.com/users/7884542/nyarian"}, "edited": false, "score": 0, "creation_date": 1540811756, "post_id": 53038478, "comment_id": 92987916, "body": "@AndreyIlyunin no, <code>16 times (*2) is (* (2^16)) = (* 65536)</code>"}, {"owner": {"reputation": 2845, "user_id": 7884542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IHDzC.jpg?s=128&g=1", "display_name": "nyarian", "link": "https://stackoverflow.com/users/7884542/nyarian"}, "edited": false, "score": 0, "creation_date": 1540812099, "post_id": 53038478, "comment_id": 92988082, "body": "Oops, yes, messed up with numbers. From the last reducing step it is clear that <code>twice</code> will be applied at eight levels, so twice will be invoked <code>2^8</code> times. So with the argument we&#39;ll get <code>2^(2^8)</code> with a single <code>*2</code> added from the argument itself. Thus, we&#39;ll have <code>2^257</code>"}], "tags": [], "owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "is_accepted": true, "score": 3, "last_activity_date": 1540787226, "last_edit_date": 1540787226, "creation_date": 1540784696, "answer_id": 53038478, "question_id": 53036870, "link": "https://stackoverflow.com/questions/53036870/cant-understand-the-result-of-the-high-order-function-invocation-provided-with/53038478#53038478", "title": "Can&#39;t understand the result of the high-order function invocation provided with not partially applied function as an argument", "body": "<p>Looking at a reducing <code>__16 2</code> a bit:</p>\n\n<pre><code>__16 2 = _4 __4 2\n       = (twice twice) (twice twice (*2)) 2\n       = twice (twice (twice twice (*2)) 2\n       = twice (twice (twice (twice (*2)) 2\n</code></pre>\n\n<p>compared to</p>\n\n<pre><code>_16 (*2) 2 = _4 _4 (*2) 2\n           = (twice twice) (twice twice) (*2) 2\n           = twice (twice (twice twice)) (*2) 2\n</code></pre>\n\n<p>Notice with the <code>__16</code> version, you are just directly doubling the number of times you apply <code>(*2)</code> with each <code>twice</code>. If you look carefully, you will see that the <code>_16</code> version is parenthesized slightly differently. You are first doubling <em>the doubling operation itself</em>, and then you are applying <em>that</em> to <code>(*2)</code> and <code>2</code>.</p>\n\n<p>The first few steps of reducing <code>_16 (*2) 2</code> might look like this, following from above</p>\n\n<pre><code>     twice (twice (twice twice)) (*2) 2\n   = twice (twice (\\x -&gt; twice (twice x))) (*2) 2\n   = twice (\\z -&gt; (\\x -&gt; twice (twice x)) ((\\y -&gt; twice (twice y)) z)) (*2) 2\n   = twice (\\z -&gt; (\\x -&gt; twice (twice x)) (twice (twice z))) (*2) 2\n   = twice (\\z -&gt; twice (twice (twice (twice z)))) (*2) 2\n   = (\\z -&gt; twice (twice (twice (twice z)))) ((\\w -&gt; twice (twice (twice (twice w)))) (*2)) 2\n   = ((\\z -&gt; twice (twice (twice (twice z)))) (twice (twice (twice (twice (*2)))))) 2\n   = twice (twice (twice (twice (twice (twice (twice (twice (*2)))))))) 2\n   = ...\n</code></pre>\n\n<p>The innermost <code>twice (*2)</code> gives you two <code>(*2)</code>s. The next <code>twice</code> doubles that to 4 <code>(*2)</code>s, the one after that doubles that again to 8 <code>(*2)</code>s and so on. There are eight <code>twice</code>s in the above expression, so you end up with 2^8 = 256 <code>(*2)</code>s, so the result is <code>2 * (2^(2^8)) = 2 * (2^256) = 231584178474632390847141970017375815706539969331281128078915168015826259279872</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 2845, "user_id": 7884542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IHDzC.jpg?s=128&g=1", "display_name": "nyarian", "link": "https://stackoverflow.com/users/7884542/nyarian"}, "edited": false, "score": 0, "creation_date": 1540809588, "post_id": 53043198, "comment_id": 92986633, "body": "the answer itself seems to be more complicated than the question :D"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 2845, "user_id": 7884542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IHDzC.jpg?s=128&g=1", "display_name": "nyarian", "link": "https://stackoverflow.com/users/7884542/nyarian"}, "edited": false, "score": 0, "creation_date": 1540809996, "post_id": 53043198, "comment_id": 92986882, "body": "hmm. I thought it was illuminating. :)"}, {"owner": {"reputation": 2845, "user_id": 7884542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IHDzC.jpg?s=128&g=1", "display_name": "nyarian", "link": "https://stackoverflow.com/users/7884542/nyarian"}, "edited": false, "score": 0, "creation_date": 1540810105, "post_id": 53043198, "comment_id": 92986947, "body": "I&#39;m learning Haskell for about 3 days, and I&#39;ve seen hell just now xD I&#39;ll try to understand it... after a year of practicing, maybe :D"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 2845, "user_id": 7884542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IHDzC.jpg?s=128&g=1", "display_name": "nyarian", "link": "https://stackoverflow.com/users/7884542/nyarian"}, "edited": false, "score": 0, "creation_date": 1540810131, "post_id": 53043198, "comment_id": 92986965, "body": "notice in <code>(^. m) (^. n) f = f ^. (n^m)</code> <code>n, m</code> are <i>regular</i> numbers. Are you familiar with operator sections?"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 2845, "user_id": 7884542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IHDzC.jpg?s=128&g=1", "display_name": "nyarian", "link": "https://stackoverflow.com/users/7884542/nyarian"}, "edited": false, "score": 0, "creation_date": 1540810188, "post_id": 53043198, "comment_id": 92987000, "body": "I think that might be your difficulty here. Operator sections: <code>(+ 2) 3 == (3 +) 2 == (+) 3 2 = 3 + 2</code>."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 2845, "user_id": 7884542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IHDzC.jpg?s=128&g=1", "display_name": "nyarian", "link": "https://stackoverflow.com/users/7884542/nyarian"}, "edited": false, "score": 0, "creation_date": 1540810212, "post_id": 53043198, "comment_id": 92987010, "body": "Let us <a href=\"https://chat.stackoverflow.com/rooms/182714/discussion-between-will-ness-and-andrey-ilyunin\">continue this discussion in chat</a>."}], "tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 2, "last_activity_date": 1540881169, "last_edit_date": 1540881169, "creation_date": 1540807882, "answer_id": 53043198, "question_id": 53036870, "link": "https://stackoverflow.com/questions/53036870/cant-understand-the-result-of-the-high-order-function-invocation-provided-with/53043198#53043198", "title": "Can&#39;t understand the result of the high-order function invocation provided with not partially applied function as an argument", "body": "<h3><code>twice</code> isn't \"twice\", it's <em>\"squared\"</em>&hairsp;:</h3>\n\n<pre><code>(^.) :: (a -&gt; a) -&gt; Int -&gt; (a -&gt; a)\n(f^.n) x = foldr ($) x [f | _ &lt;- [1..n]]   \n\n((^.m) . (^.n)) f x = ((f^.n)^.m) x     \n                  = foldr ($) x [f^.n | _ &lt;- [1..m]]\n                  = (f^.(m * n)) x\n                  = (^.(m * n)) f x      \n\ntwice = (^.2)      -- f^.2 = f . f      f squared\n\n_4   = twice twice\n_4 f = (^.2) (^.2) f = ((^.2) . (^.2)) f = (f^.2)^.2 = f^.4    \n_4   = (^.4)\n\n       (^.3) (^.3) f = ((^.3) . (^.3) . (^.3)) f =\n                     = ((^.3) . (^.3)) (f^.3)\n                     =  (^.3) ((f^.3)^.3)\n                     =   ((f^.3)^.3)^.3 = f^.(3*3*3) = f^.(3^3) = f^27 \n\n       (^.4) (^.3) f = (((f^.3)^.3)^.3)^.3 = f^.(3*3*3*3) = f^.(3^4) = f^81\n</code></pre>\n\n<p>And in general,</p>\n\n<pre><code>       (^.m) (^.n) f = f^.(n^m)     \n</code></pre>\n\n<p>Functional composition is multiplication, and application is (reverse) exponentiation.</p>\n\n<p>Thus we have</p>\n\n<pre><code>_16 f x = _4 _4 f x = (^.4) (^.4) f x = (f^.(4^4)) x = (f^.256) x\n\n_16 (*2) 2 = ((*2)^.256) 2 = (* (2^256)) 2 = 2^257\n\n*Main&gt; _16 (*2) 2\n231584178474632390847141970017375815706539969331281128078915168015826259279872\n\n*Main&gt; 2^257\n231584178474632390847141970017375815706539969331281128078915168015826259279872\n</code></pre>\n"}], "owner": {"reputation": 2845, "user_id": 7884542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IHDzC.jpg?s=128&g=1", "display_name": "nyarian", "link": "https://stackoverflow.com/users/7884542/nyarian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 53038478, "answer_count": 3, "score": 2, "last_activity_date": 1540881169, "creation_date": 1540768248, "last_edit_date": 1540794851, "question_id": 53036870, "link": "https://stackoverflow.com/questions/53036870/cant-understand-the-result-of-the-high-order-function-invocation-provided-with", "title": "Can&#39;t understand the result of the high-order function invocation provided with not partially applied function as an argument", "body": "<p>I have a high-order function declaration to apply a function given as an argument twice:</p>\n\n<pre><code>twice :: (a -&gt; a) -&gt; a -&gt; a\ntwice f x = f (f x)\n</code></pre>\n\n<p>The confusion comes from this GHCi session:</p>\n\n<pre><code>*Main&gt; let _4 = twice twice\n*Main&gt; let __4 = twice twice (*2)\n*Main&gt; let _16 = _4 _4\n*Main&gt; let __16 = _4 __4\n*Main&gt; _16 (*2) 2\n231584178474632390847141970017375815706539969331281128078915168015826259279872\n*Main&gt; __16 2\n131072\n</code></pre>\n\n<p>It is kinda clear with <code>__16</code>, because what's going on is just \"multiplying\" of this function call, so we'll actually get <code>(2 ^ 16) * 2</code> after it's invocation. As far as I can understood it happens because function given as a parameter is already partially applied, so the type of either __4 and __16 is <code>(Num a) =&gt; a -&gt; a</code>.</p>\n\n<p>But the result of invocation of <code>_16</code> with given function and integer arguments just leads me into confusion. I can understand that the type of either <code>_4</code> and <code>_16</code> are raw (are equal to <code>twice</code> function's signature, but are nested under the hood), but it gives me no clue about why the results differ so much. I just can't get program's semantics after providing a function that is not partially applied as an argument.\nCan somebody please explain why is this number just SO GREAT?</p>\n"}, {"tags": ["function", "haskell", "input"], "comments": [{"owner": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "edited": false, "score": 0, "creation_date": 1540767639, "post_id": 53036807, "comment_id": 92973767, "body": "Can you please provide a complete program to illustrate what you are asking about?"}, {"owner": {"reputation": 1264, "user_id": 7813290, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/dcbe552141510b2f519018d4cf1a5ae4?s=128&d=identicon&r=PG&f=1", "display_name": "Jamin", "link": "https://stackoverflow.com/users/7813290/jamin"}, "reply_to_user": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "edited": false, "score": 0, "creation_date": 1540767838, "post_id": 53036807, "comment_id": 92973811, "body": "I updated with my main for more clarity hopefully."}], "answers": [{"tags": [], "owner": {"reputation": 1155, "user_id": 962394, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/97268298c366b07e5556567639105ee1?s=128&d=identicon&r=PG", "display_name": "codeshot", "link": "https://stackoverflow.com/users/962394/codeshot"}, "is_accepted": true, "score": 4, "last_activity_date": 1540769904, "last_edit_date": 1540769904, "creation_date": 1540768019, "answer_id": 53036852, "question_id": 53036807, "link": "https://stackoverflow.com/questions/53036807/haskell-getline-in-a-functions-otherwise/53036852#53036852", "title": "Haskell getLine in a function&#39;s otherwise", "body": "<p>You would have to change the return type to be IO String instead of String.</p>\n\n<p>However, probably you want to return Either String String so the function indicates that it's returned the game progression text <code>Right \"You do something\"</code> or a failure with an explanation of the failure <code>Left \"Not an option\"</code>.</p>\n\n<p>Then in the caller you loop until you get a <code>Right</code> value and each time you get a <code>Left</code> value you print the text and ask again.</p>\n\n<p>I'm sure there's a slightly better way but here's some quickly fixed up code:</p>\n\n<pre><code>module Main where\n\nplayerChoice :: String -&gt; Either String String\nplayerChoice option\n    | option == \"1\" = Right \"Sword - 50gp\\nShield - 100gp\"\n    | option == \"2\" = Right \"You go fight some monsters outside town.\"\n    | option == \"3\" = Right \"You go to the town Inn.\"\n    | option == \"4\" = Right \"You go see the holy monk.\"\n    | otherwise = Left \"You entered invalid information...\"\n\ndisplayOptions :: Int -&gt; String\ndisplayOptions option\n    | option == 0 = \"1 - Shop\\n2 - Fight Monsters\\n3 - Inn\\n4 - Monk\\n\"\n    | otherwise = \"invalid\"\n\nmain = do\n    let progress whathappens = do\n        putStrLn whathappens\n        let tryAsk prompt = do\n            putStrLn prompt\n            choice &lt;- getLine\n            either tryAsk progress $ playerChoice(choice)\n        tryAsk $ displayOptions(0) ++ \"What would you like to do?\"\n    progress \"The king has sent you on the journey to become a master.\"\n</code></pre>\n\n<p>if you <code>import Data.Function</code> then you can also write it like the following - which in this case probably isn't better but it's a nice shallow step into a fascinating part of haskell:</p>\n\n<pre><code>fix (\\moreProgress whathappens -&gt; do\n    putStrLn whathappens\n    fix (\\askAgain prompt -&gt; do\n        putStrLn prompt\n        choice &lt;- getLine\n        either askAgain moreProgress $ playerChoice(choice))\n        $ displayOptions(0) ++ \"What would you like to do?\")\n    $ \"The king has sent you on the journey to become a master.\"\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "is_accepted": false, "score": 2, "last_activity_date": 1540768229, "creation_date": 1540768229, "answer_id": 53036864, "question_id": 53036807, "link": "https://stackoverflow.com/questions/53036807/haskell-getline-in-a-functions-otherwise/53036864#53036864", "title": "Haskell getLine in a function&#39;s otherwise", "body": "<ol>\n<li><p>You should change the return type to <code>Either String String</code> in order to provide an error message. For more details, look at the docs for the <code>Either</code> type.</p></li>\n<li><p>In Haskell, we don't have traditional looping structures like <code>for</code> or <code>while</code> instead we use recursive calls. See <a href=\"https://stackoverflow.com/questions/17719620/while-loop-in-haskell-with-a-condition\">While loop in Haskell with a condition</a> for an example.</p></li>\n</ol>\n"}], "owner": {"reputation": 1264, "user_id": 7813290, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/dcbe552141510b2f519018d4cf1a5ae4?s=128&d=identicon&r=PG&f=1", "display_name": "Jamin", "link": "https://stackoverflow.com/users/7813290/jamin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 443, "favorite_count": 0, "accepted_answer_id": 53036852, "answer_count": 2, "score": 0, "last_activity_date": 1540769904, "creation_date": 1540767524, "last_edit_date": 1540767789, "question_id": 53036807, "link": "https://stackoverflow.com/questions/53036807/haskell-getline-in-a-functions-otherwise", "title": "Haskell getLine in a function&#39;s otherwise", "body": "<p>I'm really new to Haskell and am trying to learn some simple functions.</p>\n\n<p>I made some option choices through functions like so:</p>\n\n<pre><code>displayOptions :: Int -&gt; String\ndisplayOptions option\n    | option == 0 = \"1 - Shop\\n2 - Fight Monsters\\n3 - Inn\\n4 - Monk\"\n    | otherwise = \"invalid\"\n</code></pre>\n\n<p>I then get the user input with <code>getLine</code></p>\n\n<pre><code>choice &lt;- getLine\n</code></pre>\n\n<p>And then I display a second option box for example,</p>\n\n<pre><code>playerChoice :: String -&gt; String\nplayerChoice option\n    | option == \"1\" = \"Sword - 50gp\\nShield - 100gp\"\n    | option == \"2\" = \"You go fight some monsters outside town.\"\n    | option == \"3\" = \"You go to the town Inn.\"\n    | option == \"4\" = \"You go see the holy monk.\"\n    | otherwise = \"You entered invalid information...\\n\" ++ displayOptions(0)\n</code></pre>\n\n<p>What I'm confused about is how I can get the user's choice again within a function.  I want my <code>otherwise =</code> to say invalid information, display the options, get the input again and then display the choice they made.</p>\n\n<p>So my main program would look something like this:</p>\n\n<pre><code>main = do\n    putStrLn \"The king has sent you on the journey to become a master.\"\n    putStrLn $ \"What would you like to do?\"\n    putStrLn $ displayOptions(0)\n    choice &lt;- getLine\n    putStrLn $ playerChoice(choice)\n</code></pre>\n"}, {"tags": ["haskell", "haskell-stack"], "answers": [{"tags": [], "owner": {"reputation": 43759, "user_id": 1651941, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/a513bc1fa519d2fcf5e4e0d9b5500101?s=128&d=identicon&r=PG", "display_name": "Sibi", "link": "https://stackoverflow.com/users/1651941/sibi"}, "is_accepted": false, "score": 1, "last_activity_date": 1540799380, "creation_date": 1540799380, "answer_id": 53040967, "question_id": 53036125, "link": "https://stackoverflow.com/questions/53036125/stack-hdevtools-is-a-library-dependency-but-the-package-provides-no-library-n/53040967#53040967", "title": "Stack: &#39;hdevtools is a library dependency, but the package provides no library needed since my-app is a build target.&#39;", "body": "<blockquote>\n  <p>How can I declare hdevtools as a dependency of my project?</p>\n</blockquote>\n\n<p><code>hdevtool</code> is an executable and cabal doesn't have a concept of development dependencies (like in other package managers like npm etc).  So, all you can do is install <code>hdevtools</code> globally and make it work.</p>\n"}, {"tags": [], "owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "is_accepted": true, "score": 3, "last_activity_date": 1540827442, "creation_date": 1540827442, "answer_id": 53048966, "question_id": 53036125, "link": "https://stackoverflow.com/questions/53036125/stack-hdevtools-is-a-library-dependency-but-the-package-provides-no-library-n/53048966#53048966", "title": "Stack: &#39;hdevtools is a library dependency, but the package provides no library needed since my-app is a build target.&#39;", "body": "<p>@alexis-king recommends using <code>stack build --copy-compiler-tool hdevtools</code> in <a href=\"https://lexi-lambda.github.io/blog/2018/02/10/an-opinionated-guide-to-haskell-in-2018/\" rel=\"nofollow noreferrer\">this guide</a>, in the section titled <strong>Setting up editor integration</strong>.</p>\n\n<p>This works for the current project, and other projects using the same GHC version, but you will need to run it again when you upgrade to a new GHC version.</p>\n\n<p>More context from King's guide:</p>\n\n<blockquote>\n  <p>As mentioned above, stack install is not what you want. Tools like ghc-mod, hlint, hoogle, weeder, and intero work best when installed as part of the sandbox, not globally, since that ensures they will match the current GHC version your project is using.</p>\n</blockquote>\n"}], "owner": {"reputation": 2279, "user_id": 7028216, "user_type": "registered", "accept_rate": 93, "profile_image": "https://i.stack.imgur.com/ggYcQ.jpg?s=128&g=1", "display_name": "tcelferact", "link": "https://stackoverflow.com/users/7028216/tcelferact"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 338, "favorite_count": 0, "accepted_answer_id": 53048966, "answer_count": 2, "score": 2, "last_activity_date": 1540827442, "creation_date": 1540761151, "last_edit_date": 1540814800, "question_id": 53036125, "link": "https://stackoverflow.com/questions/53036125/stack-hdevtools-is-a-library-dependency-but-the-package-provides-no-library-n", "title": "Stack: &#39;hdevtools is a library dependency, but the package provides no library needed since my-app is a build target.&#39;", "body": "<p>I was trying to add <code>hdevtools</code> to my stack project, so I ran <code>stack build hdevtools</code>. The install seemed to work successfully, and my text editor stopped reporting imported libraries installed via stack (like aeson and tasty) as missing.</p>\n\n<p>However, things went wrong when I added this line to the <code>dependencies</code> section of my <code>package.yaml</code> file:</p>\n\n<pre><code>- hdevtools &gt;= 0.1 &amp;&amp; &lt; 1\n</code></pre>\n\n<p>And then tried to run <code>stack build</code> again. I received the following error output:</p>\n\n<pre><code>Error: While constructing the build plan, the following exceptions were encountered:\n\nIn the dependencies for my-app-name-0.1.0.0:\n    hdevtools is a library dependency, but the package provides no library\nneeded since my-app-name is a build target.\n\nSome different approaches to resolving this:\n\n  * Consider trying 'stack solver', which uses the cabal-install solver to attempt\n    to find some working build configuration. This can be convenient when dealing\n    with many complicated constraint errors, but results may be unpredictable.\n\n\nPlan construction failed.\n</code></pre>\n\n<p>I tried running <code>stack solver</code>, but that threw the exception documented <a href=\"https://github.com/commercialhaskell/stack/issues/3453\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>How can I declare hdevtools as a dependency of my project?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 2, "creation_date": 1540765134, "post_id": 53036072, "comment_id": 92973302, "body": "Well what is wrong with just saying <code>x = [4,6..22]</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 9, "last_activity_date": 1540766151, "last_edit_date": 1540766151, "creation_date": 1540760826, "answer_id": 53036085, "question_id": 53036072, "link": "https://stackoverflow.com/questions/53036072/haskell-map-function-return-a-list-without-zeroes/53036085#53036085", "title": "Haskell map function, return a list without zeroes", "body": "<p>You can use a <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:filter\" rel=\"noreferrer\"><strong><code>filter :: (a -&gt; Bool) -&gt; [a] -&gt; [a]</code></strong></a> for this. This function takes a function (of type <code>a -&gt; Bool</code> called the \"predicate\") and a list, and it generates a list of values where the predicate is satisfied (returns <code>True</code> for that element).</p>\n\n<p>So you can filter out zeros with:</p>\n\n<pre><code>filter (0 /=) mylist\n</code></pre>\n\n<p>For your sample list, this generates:</p>\n\n<pre><code>Prelude&gt; filter (0 /=) [0,4,0,6,0,8,0,10,0,12,0,14,0,16,0,18,0,20,0,22]\n[4,6,8,10,12,14,16,18,20,22]\n</code></pre>\n\n<p>That being said, for this <em>specific</em> case, you can save yourself the trouble from generating such elements in the first place by making \"hops of 2\":</p>\n\n<pre><code>x = map classify <b>[2, 4..20]</b></code></pre>\n\n<p>This thus will <code>map</code> a list that contains <code>[2,4,6,8,10,12,14,16,18,20]</code>, all the elements in between will - given your function - be mapped to zero. By making hops of two, we avoid calculating these values in the first place. But this of course only works for this specific case.</p>\n"}], "owner": {"reputation": 996, "user_id": 7907300, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1e028848530c7b0b75a1142879de5a48?s=128&d=identicon&r=PG&f=1", "display_name": "cheshire", "link": "https://stackoverflow.com/users/7907300/cheshire"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 449, "favorite_count": 0, "accepted_answer_id": 53036085, "answer_count": 1, "score": 2, "last_activity_date": 1540766151, "creation_date": 1540760691, "last_edit_date": 1540760821, "question_id": 53036072, "link": "https://stackoverflow.com/questions/53036072/haskell-map-function-return-a-list-without-zeroes", "title": "Haskell map function, return a list without zeroes", "body": "<p>Here is my code: </p>\n\n<pre><code>x = map classify[1..20] \n\nclassify :: Int -&gt; Int \nclassify n \n         | n `mod` 2 == 0 = n + 2\n         | otherwise = 0\n</code></pre>\n\n<p>When calling x it returns a list </p>\n\n<pre><code>[0,4,0,6,0,8,0,10,0,12,0,14,0,16,0,18,0,20,0,22]\n</code></pre>\n\n<p><strong>How can I specify that I want just numbers that are not 0 is list:</strong> </p>\n\n<pre><code>[4,6,8,10,12,14,16,18,20,22]\n</code></pre>\n"}, {"tags": ["sql-server", "haskell"], "answers": [{"comments": [{"owner": {"reputation": 21, "user_id": 10571022, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88ed5b34fca796d619fb44ac3108c17f?s=128&d=identicon&r=PG&f=1", "display_name": "LCochranBjerke", "link": "https://stackoverflow.com/users/10571022/lcochranbjerke"}, "edited": false, "score": 0, "creation_date": 1540744310, "post_id": 53033675, "comment_id": 92967507, "body": "I need to have only one backslash that is my problem. sorry if my question was poorly worded."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 21, "user_id": 10571022, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88ed5b34fca796d619fb44ac3108c17f?s=128&d=identicon&r=PG&f=1", "display_name": "LCochranBjerke", "link": "https://stackoverflow.com/users/10571022/lcochranbjerke"}, "edited": false, "score": 0, "creation_date": 1540745197, "post_id": 53033675, "comment_id": 92967760, "body": "@LCochranBjerke Your Haskell string currently has exactly one backslash. I wonder if <code>connect</code> for some reason expects some quoting, so we need to double that. Did you try using two backslashes in the string (four in Haskell), to see what happens, anyway?"}, {"owner": {"reputation": 21, "user_id": 10571022, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88ed5b34fca796d619fb44ac3108c17f?s=128&d=identicon&r=PG&f=1", "display_name": "LCochranBjerke", "link": "https://stackoverflow.com/users/10571022/lcochranbjerke"}, "edited": false, "score": 1, "creation_date": 1540746821, "post_id": 53033675, "comment_id": 92968176, "body": "this is what I get when I try the string above &quot;DRIVER={ODBC Driver 17 for SQL Server};SERVER=example;Uid=domain\\\\test;Pwd=test&quot; UnsuccessfulReturnCode &quot;odbc_SQLDriverConnect&quot; (-1) &quot;[Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Login failed for user &#39; domain\\\\test&#39;.[Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Login failed for user &#39;domain\\\\test&#39;.&quot; and here is what I get when I do 4 slashes Login failed for user &#39;domain\\\\\\\\test&#39;"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 21, "user_id": 10571022, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88ed5b34fca796d619fb44ac3108c17f?s=128&d=identicon&r=PG&f=1", "display_name": "LCochranBjerke", "link": "https://stackoverflow.com/users/10571022/lcochranbjerke"}, "edited": false, "score": 0, "creation_date": 1540747539, "post_id": 53033675, "comment_id": 92968375, "body": "@LCochranBjerke OK. I think the log message is re-escaping the username, so it actually has one and two backslashes, even if it&#39;s printed with two and four.  My guess is that the issue lies somewhere else, not in the backslashes."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 1, "last_activity_date": 1540744185, "creation_date": 1540744185, "answer_id": 53033675, "question_id": 53033399, "link": "https://stackoverflow.com/questions/53033399/haskell-odbc-driver-failing-to-connect-due-to-backslash-in-domain/53033675#53033675", "title": "Haskell odbc driver failing to connect due to backslash in domain", "body": "<p>If you need two backslashes in a string, you have to escape them both in Haskell (as in C, and most programming languages). Try using</p>\n\n<pre><code>\"...;Uid=domain\\\\\\\\test;...\"\n</code></pre>\n"}], "owner": {"reputation": 21, "user_id": 10571022, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/88ed5b34fca796d619fb44ac3108c17f?s=128&d=identicon&r=PG&f=1", "display_name": "LCochranBjerke", "link": "https://stackoverflow.com/users/10571022/lcochranbjerke"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 103, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1540751841, "creation_date": 1540742348, "last_edit_date": 1540751841, "question_id": 53033399, "link": "https://stackoverflow.com/questions/53033399/haskell-odbc-driver-failing-to-connect-due-to-backslash-in-domain", "title": "Haskell odbc driver failing to connect due to backslash in domain", "body": "<p>I am having an issue trying to connect to a Microsoft sql server using Haskell and the obdc driver. here is the code I have </p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\n\nmodule Lib\n  ( someFunc\n  ) where\n\nimport Data.Text (Text, pack, singleton, snoc)\nimport qualified Data.Text.IO as T\nimport Database.ODBC.SQLServer\n\nsomeFunc :: IO ()\nsomeFunc = do\n  conn &lt;-\n    connect\n      (\"DRIVER={ODBC Driver 17 for SQL Server};SERVER=example;Uid=domain\\\\test;Pwd=test\")\n  rows &lt;- query conn \"SELECT TOP 100 * FROM test with (nolock)\" :: IO [[Value]]\n  print rows\n  close conn\n</code></pre>\n\n<p>when I run the program it trys to connect to the database with the Uid = domain\\\\test instead of what I want which is domain\\test, I tried alot of different things to try and build the connection string and they all end up with a \\\\ between the domain and the username. I was wondering if anyone has dealt with this before?</p>\n\n<p>Note: if the user id does not have a backslash in it it does work.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1540735362, "post_id": 53032326, "comment_id": 92964976, "body": "Well there are some warnings printed in the console, and <code>-Werror</code> says that if there are warnings, then this should be considered a (fatal) error by the compiler. So you need to solve the warnings above."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 2, "creation_date": 1540736762, "post_id": 53032326, "comment_id": 92965325, "body": "Except for [haskell], the tags you had added were not relevant to the question. Please read the tag descriptions before adding them."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 4, "creation_date": 1540741433, "post_id": 53032326, "comment_id": 92966666, "body": "When I google <i>&quot;ghc werror&quot;</i>, the very first result tells me exactly the answer you need. I strongly recommend doing at least minimal research before asking a question here."}, {"owner": {"reputation": 51262, "user_id": 208257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8d59503078761ba50620cbee4348882e?s=128&d=identicon&r=PG", "display_name": "Dan Burton", "link": "https://stackoverflow.com/users/208257/dan-burton"}, "edited": false, "score": 3, "creation_date": 1540744507, "post_id": 53032326, "comment_id": 92967563, "body": "To get a good answer, provide more context. For example: what source code is in what files?"}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 3, "last_activity_date": 1540735784, "creation_date": 1540735784, "answer_id": 53032395, "question_id": 53032326, "link": "https://stackoverflow.com/questions/53032326/cannot-understand-error-message-haskell/53032395#53032395", "title": "Cannot understand error message -- Haskell", "body": "<p>If you compile with the <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/flags.html#ghc-flag--Werror\" rel=\"nofollow noreferrer\"><strong><code>-Werror</code></strong> flag</a> then this means that warnings are treated like (fatal) errors, as specified in the documentation:</p>\n\n<blockquote>\n  <p>make warnings fatal</p>\n</blockquote>\n\n<p>So from the moment the compiler emits a warning (you can look for warnings in the output by the compiler), then the compilation is considered non-successful.</p>\n\n<p>Usually warnings by the compiler denote something that does not look right, but is not fatal in the sense that the compiler <em>can</em> produce a binary. For example if you define a function like:</p>\n\n<pre><code>f :: Int -&gt; Int\nf x = 0\n</code></pre>\n\n<p>then Haskell can - if the <code>-Wunused-matches</code> is enabled - produce a warning saying that the <code>x</code> in the head of the function is not used in the body. This is odd, perhaps you forgot to use <code>x</code>. We can however use a wildcard pattern in case we do not need this:</p>\n\n<pre><code>f :: Int -&gt; Int\nf _ = 0  -- no warning\n</code></pre>\n\n<p>Some projects thus use this to \"prevent\" letting pass such warnings unnoticed.</p>\n"}], "owner": {"reputation": 23, "user_id": 9543629, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8e12e381f55e2a477eaf70a5829fe09?s=128&d=identicon&r=PG&f=1", "display_name": "learner", "link": "https://stackoverflow.com/users/9543629/learner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "answer_count": 1, "score": -4, "last_activity_date": 1540736724, "creation_date": 1540735262, "last_edit_date": 1540736724, "question_id": 53032326, "link": "https://stackoverflow.com/questions/53032326/cannot-understand-error-message-haskell", "title": "Cannot understand error message -- Haskell", "body": "<p>when I tried to use cabal run to test my code there is an error message </p>\n\n<p>\"  no location info : error:\nFailing due to -Werror.\"</p>\n\n<p>Can anyone explain to me what this mean and what may cause this error?</p>\n"}, {"tags": ["haskell", "io", "ghci", "non-deterministic", "monadplus"], "answers": [{"tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 4, "last_activity_date": 1540733805, "last_edit_date": 1540733805, "creation_date": 1540733098, "answer_id": 53032009, "question_id": 53031608, "link": "https://stackoverflow.com/questions/53031608/what-is-the-default-type-evaluation-of-monadplus-in-haskell/53032009#53032009", "title": "What is the default type evaluation of MonadPlus in Haskell?", "body": "<p>GHCi (but not GHC in general) will, in the absence of a signature specifying otherwise, specialise polymorphic type constructors to <code>IO</code> whenever possible. <code>IO</code> actions at the prompt, in turn, are executed and have their results monadically bound to the <code>it</code> variable, which is then printed (i.e. <code>do { it &lt;- action; print it }</code>) as long as there is a <code>Show</code> instance for the result type (cf. <a href=\"https://stackoverflow.com/a/53032030/2751851\">Daniel Wagner's answer</a>). For more details, have a look at the <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/ghci.html#i-o-actions-at-the-prompt\" rel=\"nofollow noreferrer\"><em>I/O actions at the prompt</em></a> and <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/ghci.html#the-it-variable\" rel=\"nofollow noreferrer\"><em>The it variable</em></a> sections of the User's Guide.</p>\n\n<p>In your specific case, it happens that <a href=\"https://stackoverflow.com/q/4504489/2751851\">there is a <code>MonadPlus</code> instance for <code>IO</code></a>. You get <code>return 0</code> from it because <code>mplus</code> for <code>IO</code> only executes the second action if the first one throws an exception. One demonstration:</p>\n\n<pre><code>GHCi&gt; readLn `mplus` readLn :: IO Integer\n0\n0\nGHCi&gt; readLn `mplus` readLn :: IO Integer\nfoo\n1\n1\nGHCi&gt; readLn `mplus` readLn :: IO Integer\nfoo\nbar\n*** Exception: user error (Prelude.readIO: no parse)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 8, "last_activity_date": 1558619112, "last_edit_date": 1558619112, "creation_date": 1540733298, "answer_id": 53032030, "question_id": 53031608, "link": "https://stackoverflow.com/questions/53031608/what-is-the-default-type-evaluation-of-monadplus-in-haskell/53032030#53032030", "title": "What is the default type evaluation of MonadPlus in Haskell?", "body": "<p>Yeah, this is a not super-well documented corner of ghci. When you enter an expression into ghci, it uses the expression's type to decide what to do:</p>\n\n<ol>\n<li><code>IO ()</code>: Run the action, do nothing further.</li>\n<li><code>Show a =&gt; IO a</code>: Run the action and <code>print</code> the result.</li>\n<li>any other <code>IO a</code>: Run the action, do nothing further.</li>\n<li>anything else: wrap the whole expression with <code>print</code>.</li>\n</ol>\n\n<p>How does it decide which of these types a thing has? Easy: it tries to unify the type of your expression which each of the above signatures in turn and solve all resulting constraints. (For the cognoscenti: this is <em>in addition</em> to the extended defaulting rules! This explains why it appears to be defaulting the <code>m</code>, even though neither the standard defaulting rules nor the extended defaulting rules say what default to use.)</p>\n\n<p>So, since your expression does not unify with <code>IO ()</code> but does unify with <code>Show a =&gt; IO a</code>, ghci finds <code>m ~ IO</code> (and <code>a ~ Int</code>) during unification, discovers that there is a <code>MonadPlus IO</code> (and a <code>Show Int</code>) instance to resolve the constraints, runs your action, and prints the result.</p>\n"}], "owner": {"reputation": 125, "user_id": 10570008, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c48c6704b2d47633b66cca730fc5c50?s=128&d=identicon&r=PG&f=1", "display_name": "ManuelVS", "link": "https://stackoverflow.com/users/10570008/manuelvs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 157, "favorite_count": 1, "accepted_answer_id": 53032030, "answer_count": 2, "score": 6, "last_activity_date": 1613795161, "creation_date": 1540730307, "last_edit_date": 1613795161, "question_id": 53031608, "link": "https://stackoverflow.com/questions/53031608/what-is-the-default-type-evaluation-of-monadplus-in-haskell", "title": "What is the default type evaluation of MonadPlus in Haskell?", "body": "<p>I have the following code:</p>\n\n<pre><code>import Control.Monad\n\ncoin :: MonadPlus m =&gt; m Int\ncoin = return 0 `mplus` return 1\n</code></pre>\n\n<p>If I evaluate <code>coin :: Maybe Int</code> on the interpreter, it prits <code>Just 0</code>. That's normal because of the implementation of Maybe as instance of MonadPlus.</p>\n\n<p>If I evaluate <code>coin :: [Int]</code>on the interpreter, it prints <code>[0, 1]</code>, because the implementation of <code>mplus</code> on list is an <code>append</code>.</p>\n\n<p>But if I evaluate <code>coin</code>, without any type decorators, it prints <code>0</code>. Why? What type does the interpreter 'converts' <code>coin</code> to evaluate it?</p>\n\n<p>This code is extracted from: <a href=\"http://homes.sice.indiana.edu/ccshan/rational/S0956796811000189a.pdf\" rel=\"noreferrer\">http://homes.sice.indiana.edu/ccshan/rational/S0956796811000189a.pdf</a></p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1540733568, "post_id": 53031219, "comment_id": 92964515, "body": "Unrelated: you should not be using the pattern <code>(x:xs)</code> above unless you also want to define another case for <code>[]</code>. Use <code>xs</code> instead."}], "answers": [{"tags": [], "owner": {"reputation": 551, "user_id": 6558211, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c035b043b8c00a7e512b0a3f920c9f4b?s=128&d=identicon&r=PG&f=1", "display_name": "Cepheus", "link": "https://stackoverflow.com/users/6558211/cepheus"}, "is_accepted": false, "score": 4, "last_activity_date": 1540729053, "last_edit_date": 1540729053, "creation_date": 1540728537, "answer_id": 53031351, "question_id": 53031219, "link": "https://stackoverflow.com/questions/53031219/running-a-function-n-times-with-incrementally-different-arguments-in-haskell/53031351#53031351", "title": "Running a function n times with incrementally different arguments in Haskell", "body": "<p>The counter can be implemented by a list <code>[1..n]</code>. The loop body can be implemented using the <code>map</code> function. Combine both and you get:</p>\n\n<pre><code>f xs n = map (usum xs) [1..n]\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>&gt; f [1,2,3] 10\n[1,3,6,10,15,21,28,36,45,55]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 2, "last_activity_date": 1540733725, "creation_date": 1540733725, "answer_id": 53032090, "question_id": 53031219, "link": "https://stackoverflow.com/questions/53031219/running-a-function-n-times-with-incrementally-different-arguments-in-haskell/53032090#53032090", "title": "Running a function n times with incrementally different arguments in Haskell", "body": "<p>You used a list comprehension for <code>usum</code> to iterate on all values of <code>k</code>. You can use a similar approach to iterate on <code>n</code> as well:</p>\n\n<pre><code>foo xs n = [usum xs m | m &lt;- [1..n]]\n</code></pre>\n"}], "owner": {"reputation": 437, "user_id": 2441615, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e22651679ce216dc2e20778a92b68a08?s=128&d=identicon&r=PG", "display_name": "K. Claesson", "link": "https://stackoverflow.com/users/2441615/k-claesson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 532, "favorite_count": 0, "accepted_answer_id": 53032090, "answer_count": 2, "score": 1, "last_activity_date": 1540733725, "creation_date": 1540727617, "question_id": 53031219, "link": "https://stackoverflow.com/questions/53031219/running-a-function-n-times-with-incrementally-different-arguments-in-haskell", "title": "Running a function n times with incrementally different arguments in Haskell", "body": "<p>I have a simple Haskell function that computes a specific type of sum:</p>\n\n<pre><code>usum :: Integral a =&gt; [a] -&gt; a -&gt; a\nusum (x:xs) max = sum (nub [num*k | num &lt;- (x:xs), k &lt;- [1..div max num]])\n</code></pre>\n\n<p>How can I run this function <em>n</em> times where <code>x:xs</code> is kept constant but <code>max</code> gets incremented by +1 as it goes from 1 to some upper limit?</p>\n\n<p>If <code>usum</code> was implemented in an object-oriented language like Java I would do the following:</p>\n\n<pre><code>for (int i = 0; i &lt; limit; i++)\n{\n   System.out.println(usum(i));\n}\n</code></pre>\n\n<p>How can an equivalent of this for loop be achieved in Haskell?</p>\n"}, {"tags": ["haskell", "caching", "memoization"], "comments": [{"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 7, "creation_date": 1540723239, "post_id": 53030497, "comment_id": 92961953, "body": "The short version is that <a href=\"https://wiki.haskell.org/Constant_applicative_form\" rel=\"nofollow noreferrer\">Constant Applicative Forms</a> (CAFs) are memoised. (Leaving this as a comment since it\u2019s not a complete answer.)"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1540724557, "post_id": 53030497, "comment_id": 92962277, "body": "if it takes 3 seconds for 30, it&#39;s not memoized at all. i.e. you do build a cache of results, but the function itself does not use that cache. for an example of memoized Fibonacci, see e.g. <a href=\"https://stackoverflow.com/questions/11466284/how-is-this-fibonacci-function-memoized\">this</a>."}], "answers": [{"comments": [{"owner": {"reputation": 125, "user_id": 10570008, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c48c6704b2d47633b66cca730fc5c50?s=128&d=identicon&r=PG&f=1", "display_name": "ManuelVS", "link": "https://stackoverflow.com/users/10570008/manuelvs"}, "edited": false, "score": 0, "creation_date": 1540730585, "post_id": 53031016, "comment_id": 92963770, "body": "This answer and Jon Purdy&#39;s comment resolved my question. Thanks!"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 4, "last_activity_date": 1540726569, "last_edit_date": 1540726569, "creation_date": 1540726253, "answer_id": 53031016, "question_id": 53030497, "link": "https://stackoverflow.com/questions/53030497/what-functions-are-cached-in-haskell/53031016#53031016", "title": "What functions are cached in Haskell?", "body": "<p>Essentially, the functions you defined behave as the following ones:</p>\n\n<pre><code>fibMemo n = let m = map fib' [0..] in m !! n\nfibMemo'  = let m = map fib' [0..] in (m !!)\n</code></pre>\n\n<p>Why is <code>fibMmemo'</code> more efficient? Well, we can rewrite it as</p>\n\n<pre><code>fibMemo'  = let m = map fib' [0..] in \\n -&gt; m !! n\n</code></pre>\n\n<p>which makes it more clear that the single list <code>m</code> gets created before <code>n</code> is taken as input. This means that all the calls to <code>fibMemo'</code> will use the same <code>m</code>. The first call evaluates a part of <code>m</code> slowly, and the successive calls will reuse that cached result (assuming the call hits the cache, of course, otherwise another part of <code>m</code> is evaluated and cached).</p>\n\n<p>Instead, <code>fibMemo</code> is equivalent to</p>\n\n<pre><code>fibMemo = \\n -&gt; let m = map fib' [0..] in m !! n\n</code></pre>\n\n<p>which takes the input <code>n</code> before the list <code>m</code> gets created. So, each call gets a new cache, which is pointless, since the whole purpose of a cache is that it is reused later.</p>\n\n<p>The order of the lambda <code>\\n -&gt;</code> vs the <code>let m = ..</code> matters a lot in terms of the performance. Since <code>m = ..</code> does not use <code>n</code>, technically the <code>let m = ..</code> can be floated outwards, essentially turning <code>fibMemo</code> into <code>fibMemo'</code>, without affecting the semantics. However, as you discovered, this does not preserve performance, in general!</p>\n\n<p>This is indeed an optimization that GHC could perform, but does not, because it can easily make the performance significantly worse.</p>\n"}], "owner": {"reputation": 125, "user_id": 10570008, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c48c6704b2d47633b66cca730fc5c50?s=128&d=identicon&r=PG&f=1", "display_name": "ManuelVS", "link": "https://stackoverflow.com/users/10570008/manuelvs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 190, "favorite_count": 0, "accepted_answer_id": 53031016, "answer_count": 1, "score": 6, "last_activity_date": 1540726569, "creation_date": 1540722580, "last_edit_date": 1540724738, "question_id": 53030497, "link": "https://stackoverflow.com/questions/53030497/what-functions-are-cached-in-haskell", "title": "What functions are cached in Haskell?", "body": "<p>I have the following code:</p>\n\n<pre><code>memoize f = (map f [0 ..] !!)\n\nfib' 0 = 1\nfib' 1 = 1\nfib' n = fib' (n - 1) + fib' (n - 2)\n\nfibMemo n = memoize fib' n\nfibMemo'  = memoize fib'\n</code></pre>\n\n<p>(I am aware of that fibonacci implementation has exponential time complexity and does not use the cache)</p>\n\n<p>The first time I execute <code>fibmemo' 30</code> it takes 3 seconds, and the second time it takes ~0 seconds, because the result is cached. But the first version, <code>fibmemo</code>, does not get the result cached, it always takes 3 seconds to execute. The only difference is the definition (which as far as I know are equivalent).</p>\n\n<p>So my question is, what functions are cached in Haskell?</p>\n\n<p>I have already read <a href=\"https://wiki.haskell.org/Memoization\" rel=\"nofollow noreferrer\">https://wiki.haskell.org/Memoization</a> and does not resolve my question.</p>\n"}, {"tags": ["haskell", "constraint-kinds", "type-synonyms"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1540720793, "post_id": 53028773, "comment_id": 92961384, "body": "Haskell type aliases must be fully applied at each use. Partial application is not supported. Otherwise we would effectively be able to write <code>instance Baz (\\a -&gt; (Foo a, Bar a))</code> but type level lambdas are not supported (type checking and inference become way more complex). AFAIK, a type class is the only solution."}], "answers": [{"tags": [], "owner": {"reputation": 831, "user_id": 3371760, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/09370cd5d499c9f0f75b54aa1b4daa17?s=128&d=identicon&r=PG", "display_name": "Fried Brice", "link": "https://stackoverflow.com/users/3371760/fried-brice"}, "is_accepted": true, "score": 0, "last_activity_date": 1540946270, "last_edit_date": 1540946270, "creation_date": 1540840071, "answer_id": 53052239, "question_id": 53028773, "link": "https://stackoverflow.com/questions/53028773/haskell-interaction-between-constraintkinds-and-typesynonyminstances/53052239#53052239", "title": "Haskell: interaction between ConstraintKinds, and TypeSynonymInstances", "body": "<p>Turns out, Ed Kmett answered my question a year ago. I can't do it with type aliases, but using <code>UndecidableInstances</code> should be benign for this particular situation: </p>\n\n<p><a href=\"https://www.reddit.com/r/haskell/comments/5zjwym/when_is_undecidableinstances_okay_to_use/\" rel=\"nofollow noreferrer\">https://www.reddit.com/r/haskell/comments/5zjwym/when_is_undecidableinstances_okay_to_use/</a></p>\n\n<p>Here's how Kmett might suggest fixing the above example:</p>\n\n<pre><code>{-# LANGUAGE ConstraintKinds, FlexibleInstances,\n             KindSignatures, UndecidableInstances #-}\n\nmodule NotTypeAlias where\n\nimport Data.Kind\n\nclass Foo a\nclass Bar a\n\nclass Baz (c :: * -&gt; Constraint)\n\ninstance Baz Foo -- compiles\ninstance Baz Bar -- compiles\n\nclass (Foo a, Bar a) =&gt; FooBar a\ninstance (Foo a, Bar a) =&gt; FooBar a -- compiles\n\ninstance Baz FooBar -- compiles\n</code></pre>\n\n<p>Kmett argues that if the instance of <code>FooBar</code> we provide is the <em>sole</em> instance ever in scope, then the type checker won't fall into an infinite loop from our use of <code>UndecidableInstances</code>. I'm satisfied to take him at his word.</p>\n"}], "owner": {"reputation": 831, "user_id": 3371760, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/09370cd5d499c9f0f75b54aa1b4daa17?s=128&d=identicon&r=PG", "display_name": "Fried Brice", "link": "https://stackoverflow.com/users/3371760/fried-brice"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 114, "favorite_count": 0, "accepted_answer_id": 53052239, "answer_count": 1, "score": 0, "last_activity_date": 1540946270, "creation_date": 1540706119, "question_id": 53028773, "link": "https://stackoverflow.com/questions/53028773/haskell-interaction-between-constraintkinds-and-typesynonyminstances", "title": "Haskell: interaction between ConstraintKinds, and TypeSynonymInstances", "body": "<p>I'm getting an unexpected error when trying to compile a small Haskell file with GHC 8.6.1 when using ConstraintKinds and TypeSynonymInstances.</p>\n\n<p>I'd like to make a class that takes a class as a parameter, and I'd like to use an alias when writing an instance. Here's the code:</p>\n\n<pre><code>{-# LANGUAGE ConstraintKinds, KindSignatures, TypeSynonymInstances #-}\n\nmodule TypeAlias where\n\nimport Data.Kind\n\nclass Foo a\nclass Bar a\n\nclass Baz (c :: * -&gt; Constraint)\n\ninstance Baz Foo -- compiles\ninstance Baz Bar -- compiles\n\ntype FooBar a = (Foo a, Bar a) -- compiles\n\ninstance Baz FooBar -- fails!\n-- TypeAlias.hs:17:10-19: error:\n--     \u2022 The type synonym \u2018FooBar\u2019 should have 1 argument, but has been given none\n--     \u2022 In the instance declaration for \u2018Baz FooBar\u2019\n--    |\n-- 17 | instance Baz FooBar\n--    |          ^^^^^^^^^^\n</code></pre>\n\n<p>The error is surprising because, as far as I can tell, <code>FooBar</code> has the expected kind, namely <code>* -&gt; Constraint</code>, but the compiler says it should be fed an argument.</p>\n\n<p>Is it even possible to use a constraint alias in an instance declaration as I am trying here? If so, how do I make sense of the seemingly contradictory error message?</p>\n\n<p>(I know I can simply declare <code>FooBar</code> as a class instead of an alias, but I really don't want to because I'd also want an instance and at that point I'd have to pull in <code>UndecidableInstances</code>.)</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 1417, "user_id": 5432156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72991dcaeb7a19e585f4f07cb503783d?s=128&d=identicon&r=PG&f=1", "display_name": "ganidat", "link": "https://stackoverflow.com/users/5432156/ganidat"}, "edited": false, "score": 0, "creation_date": 1540704416, "post_id": 53028601, "comment_id": 92958337, "body": "Then shouldn&#39;t [1,2,3]:[4,5]:[[]] evaluate to [[1,2,3],[4,5]] by similar logic?"}, {"owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "reply_to_user": {"reputation": 1417, "user_id": 5432156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72991dcaeb7a19e585f4f07cb503783d?s=128&d=identicon&r=PG&f=1", "display_name": "ganidat", "link": "https://stackoverflow.com/users/5432156/ganidat"}, "edited": false, "score": 0, "creation_date": 1540704472, "post_id": 53028601, "comment_id": 92958346, "body": "@oahz I suppose my contrast is wrong: hang on I&#39;ll edit"}, {"owner": {"reputation": 1417, "user_id": 5432156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72991dcaeb7a19e585f4f07cb503783d?s=128&d=identicon&r=PG&f=1", "display_name": "ganidat", "link": "https://stackoverflow.com/users/5432156/ganidat"}, "edited": false, "score": 1, "creation_date": 1540704822, "post_id": 53028601, "comment_id": 92958394, "body": "I accept your second explanation. The logic now makes sense to me."}], "tags": [], "owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "is_accepted": true, "score": 4, "last_activity_date": 1540704489, "last_edit_date": 1540704489, "creation_date": 1540704125, "answer_id": 53028601, "question_id": 53028530, "link": "https://stackoverflow.com/questions/53028530/in-haskell-why-is-this-a-valid-expression/53028601#53028601", "title": "In Haskell, why is this a valid expression?", "body": "<p>Consider: the following appears to be invalid because the first three elements are ints, while the last is a list:</p>\n\n<pre><code>1 : 2 : 3 : []\n</code></pre>\n\n<p>But in fact, it does evaluate!</p>\n\n<pre><code>[1, 2, 3]\n</code></pre>\n\n<p>Or, more directly, and with the same result:</p>\n\n<pre><code>1 : 2 : [3]\n</code></pre>\n\n<hr>\n\n<p><code>[1,2,3]:[4,5]:[[]]</code> is just <code>[1,2,3] : [4,5] : [] : []</code></p>\n"}, {"comments": [{"owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "edited": false, "score": 0, "creation_date": 1540704760, "post_id": 53028643, "comment_id": 92958387, "body": "Perhaps with even more of a &quot;eureka,&quot; note that <code>:t []</code> is <code>[a]</code>. <code>a</code> in this case is <code>[Int]</code>, so <code>a:a:[a] = [a]</code>"}], "tags": [], "owner": {"reputation": 2194, "user_id": 7940614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b697c574cc5dfb3a4d5e4aff46a1721a?s=128&d=identicon&r=PG&f=1", "display_name": "assembly.jc", "link": "https://stackoverflow.com/users/7940614/assembly-jc"}, "is_accepted": false, "score": 1, "last_activity_date": 1540704687, "creation_date": 1540704687, "answer_id": 53028643, "question_id": 53028530, "link": "https://stackoverflow.com/questions/53028530/in-haskell-why-is-this-a-valid-expression/53028643#53028643", "title": "In Haskell, why is this a valid expression?", "body": "<p>If you try</p>\n\n<pre><code>:t [[]]\n</code></pre>\n\n<p>in GHCI</p>\n\n<p>it give</p>\n\n<blockquote>\n  <p>[[a]]</p>\n</blockquote>\n\n<p>And <code>[1,2,3], [4,5]</code> is <code>[Int]</code>,</p>\n\n<p>and so Haskell infer the type of <code>[[a]]</code> is <code>[[Int]]</code></p>\n\n<p>therefore, <code>[Int]:[Int]:[[Int]]</code> = <code>[[Int]]</code> </p>\n\n<p>corresponding, <code>[1,2,3]:[4,5]:[[]]</code> = <code>[[1,2,3],[4,5],[]]</code></p>\n"}, {"tags": [], "owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "is_accepted": false, "score": 0, "last_activity_date": 1540814395, "creation_date": 1540814395, "answer_id": 53045063, "question_id": 53028530, "link": "https://stackoverflow.com/questions/53028530/in-haskell-why-is-this-a-valid-expression/53045063#53045063", "title": "In Haskell, why is this a valid expression?", "body": "<p>This is because <code>:</code> does not separate elements, it is the constructor to prepend an item onto a list (known as <a href=\"https://en.wikipedia.org/wiki/Cons\" rel=\"nofollow noreferrer\">cons</a> in lisp tradition).</p>\n\n<pre><code>Prelude&gt; :i (:)\ndata [] a = ... | a : [a]       -- Defined in \u2018GHC.Types\u2019\ninfixr 5 :\nPrelude&gt; :t (:)\n(:) :: a -&gt; [a] -&gt; [a]\n</code></pre>\n\n<p>So the value on the right is already the list type that <code>:</code> returns. In this case, those are both <code>[[Int]]</code>, and there just happens to be an empty list as the last element in the outer list. Because <code>:</code> is right associative, <code>[1,2,3]:[4,5]:[[]]</code> is equivalent with <code>[1,2,3]:([4,5]:[[]])</code> or <code>[[1,2,3], [4,5], []]</code>. </p>\n\n<p>The prelude list type has two constructors, <code>[]</code> (empty list) and <code>:</code> (the prepend constructor). The <code>[a,b,c]</code> form is syntactic sugar, as specified in the Translation box in <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-340003.7\" rel=\"nofollow noreferrer\">Haskell 2010 Languare Report sections 3.7, Lists</a>. </p>\n\n<blockquote>\n  <p><code>[e1, \u2026, ek]  =   e1 : (e2 : ( \u2026 (ek : [])))</code></p>\n</blockquote>\n"}], "owner": {"reputation": 1417, "user_id": 5432156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72991dcaeb7a19e585f4f07cb503783d?s=128&d=identicon&r=PG&f=1", "display_name": "ganidat", "link": "https://stackoverflow.com/users/5432156/ganidat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 168, "favorite_count": 0, "accepted_answer_id": 53028601, "answer_count": 3, "score": 2, "last_activity_date": 1540814395, "creation_date": 1540703095, "question_id": 53028530, "link": "https://stackoverflow.com/questions/53028530/in-haskell-why-is-this-a-valid-expression", "title": "In Haskell, why is this a valid expression?", "body": "<p>This expression appears to be invalid because the first two elements are lists while the last element is a list of list.    </p>\n\n<pre><code>[1,2,3]:[4,5]:[[]]\n</code></pre>\n\n<p>But in fact, it does evaluate and is equal to:</p>\n\n<pre><code>[[1,2,3],[4,5],[]]\n</code></pre>\n\n<p>How come?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 2194, "user_id": 7940614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b697c574cc5dfb3a4d5e4aff46a1721a?s=128&d=identicon&r=PG&f=1", "display_name": "assembly.jc", "link": "https://stackoverflow.com/users/7940614/assembly-jc"}, "edited": false, "score": 5, "creation_date": 1540698333, "post_id": 53027959, "comment_id": 92957702, "body": "What is the definition of Poli and X?"}, {"owner": {"reputation": 3, "user_id": 10494759, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/500e0a2da2e41b2befa40a946845ef88?s=128&d=identicon&r=PG&f=1", "display_name": "Yorkman", "link": "https://stackoverflow.com/users/10494759/yorkman"}, "reply_to_user": {"reputation": 2194, "user_id": 7940614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b697c574cc5dfb3a4d5e4aff46a1721a?s=128&d=identicon&r=PG&f=1", "display_name": "assembly.jc", "link": "https://stackoverflow.com/users/7940614/assembly-jc"}, "edited": false, "score": 0, "creation_date": 1540735041, "post_id": 53027959, "comment_id": 92964896, "body": "Y is Y, there is no value for Y, like the input is (Y 0 1) where 0 is the exponent, 1 is the coefficient"}, {"owner": {"reputation": 3, "user_id": 10494759, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/500e0a2da2e41b2befa40a946845ef88?s=128&d=identicon&r=PG&f=1", "display_name": "Yorkman", "link": "https://stackoverflow.com/users/10494759/yorkman"}, "reply_to_user": {"reputation": 2194, "user_id": 7940614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b697c574cc5dfb3a4d5e4aff46a1721a?s=128&d=identicon&r=PG&f=1", "display_name": "assembly.jc", "link": "https://stackoverflow.com/users/7940614/assembly-jc"}, "edited": false, "score": 0, "creation_date": 1540735099, "post_id": 53027959, "comment_id": 92964910, "body": "oh I realized I have a typo &quot;data Poly&quot; should be written as &quot;data Poli&quot;"}, {"owner": {"reputation": 3, "user_id": 10494759, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/500e0a2da2e41b2befa40a946845ef88?s=128&d=identicon&r=PG&f=1", "display_name": "Yorkman", "link": "https://stackoverflow.com/users/10494759/yorkman"}, "reply_to_user": {"reputation": 2194, "user_id": 7940614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b697c574cc5dfb3a4d5e4aff46a1721a?s=128&d=identicon&r=PG&f=1", "display_name": "assembly.jc", "link": "https://stackoverflow.com/users/7940614/assembly-jc"}, "edited": false, "score": 0, "creation_date": 1540735663, "post_id": 53027959, "comment_id": 92965049, "body": "oh I realized I have a typo &quot;data Poly&quot; should be written as &quot;data Poli&quot; and &quot;X&quot; is actually &quot;Y&quot;"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1540746980, "post_id": 53027959, "comment_id": 92968214, "body": "@Yorkman can&#39;t you edit your own question and correct those typos?"}, {"owner": {"reputation": 2194, "user_id": 7940614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b697c574cc5dfb3a4d5e4aff46a1721a?s=128&d=identicon&r=PG&f=1", "display_name": "assembly.jc", "link": "https://stackoverflow.com/users/7940614/assembly-jc"}, "edited": false, "score": 0, "creation_date": 1540747009, "post_id": 53027959, "comment_id": 92968226, "body": "@Yorkman Okay, I see, it may clear for other readers by correct the typo of your question. Otherwise, just a suggestion, see the answer as below, simplify the design using list instead of recursive type"}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1540817998, "post_id": 53027959, "comment_id": 92991480, "body": "How exactly is it not working? What is the actual result? What is the expected result?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1540826913, "post_id": 53027959, "comment_id": 92997246, "body": "@Yorkman now after this edit, it&#39;s outright impossible to see what you&#39;re asking."}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1540840640, "post_id": 53027959, "comment_id": 93004252, "body": "You have removed all content from the question. Voting to close."}], "answers": [{"comments": [{"owner": {"reputation": 3, "user_id": 10494759, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/500e0a2da2e41b2befa40a946845ef88?s=128&d=identicon&r=PG&f=1", "display_name": "Yorkman", "link": "https://stackoverflow.com/users/10494759/yorkman"}, "edited": false, "score": 0, "creation_date": 1540757965, "post_id": 53034051, "comment_id": 92971600, "body": "Thanks that&#39;s a great idea in your solution and I agree with your comment that whether this custom data type Poli is suitable for recursive type. Having said that, unfortunately, I have been given with this custom data type to begin with so I need to keep on thinking how to make it work if there is a way. Hope later you can figure out or someone will step in to give me an advice / solution."}, {"owner": {"reputation": 2194, "user_id": 7940614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b697c574cc5dfb3a4d5e4aff46a1721a?s=128&d=identicon&r=PG&f=1", "display_name": "assembly.jc", "link": "https://stackoverflow.com/users/7940614/assembly-jc"}, "reply_to_user": {"reputation": 3, "user_id": 10494759, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/500e0a2da2e41b2befa40a946845ef88?s=128&d=identicon&r=PG&f=1", "display_name": "Yorkman", "link": "https://stackoverflow.com/users/10494759/yorkman"}, "edited": false, "score": 0, "creation_date": 1540781270, "post_id": 53034051, "comment_id": 92976123, "body": "However, besides the typos, your original coding seems work with pattern: (Add (Y 0 3) (Add (Y 1 1) (Y 2 1))) (Add (Y 0 3) (Add (Y 1 1) (Y 2 1))). It gives the answer as: Add (Y 0 9) (Add (Add (Y 1 3) (Y 2 3)) (Add (Add (Y 1 3) (Y 2 3)) (Add (Y 2 1) (Add (Y 3 1) (Add (Y 3 1) (Y 4 1)))))), when I try it in GHCI"}, {"owner": {"reputation": 3, "user_id": 10494759, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/500e0a2da2e41b2befa40a946845ef88?s=128&d=identicon&r=PG&f=1", "display_name": "Yorkman", "link": "https://stackoverflow.com/users/10494759/yorkman"}, "edited": false, "score": 0, "creation_date": 1540787545, "post_id": 53034051, "comment_id": 92977227, "body": "Yeah it looks like working but if u take a closer look , there is a \u201c Add ( Add (Y 1 3) ....\u201d which I should not have \u201cAdd\u201d alone without following (Y ...)"}, {"owner": {"reputation": 2194, "user_id": 7940614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b697c574cc5dfb3a4d5e4aff46a1721a?s=128&d=identicon&r=PG&f=1", "display_name": "assembly.jc", "link": "https://stackoverflow.com/users/7940614/assembly-jc"}, "reply_to_user": {"reputation": 3, "user_id": 10494759, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/500e0a2da2e41b2befa40a946845ef88?s=128&d=identicon&r=PG&f=1", "display_name": "Yorkman", "link": "https://stackoverflow.com/users/10494759/yorkman"}, "edited": false, "score": 0, "creation_date": 1540798215, "post_id": 53034051, "comment_id": 92980586, "body": "Since the Poli data type at most have two terms, how does you want to express a polynomial has 9 terms with it? Does It should be: Add ((Y..) (Add (Y..) Add (Y..) ..., The left value of Poli data type must be (Y...)?"}, {"owner": {"reputation": 3, "user_id": 10494759, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/500e0a2da2e41b2befa40a946845ef88?s=128&d=identicon&r=PG&f=1", "display_name": "Yorkman", "link": "https://stackoverflow.com/users/10494759/yorkman"}, "edited": false, "score": 0, "creation_date": 1540814522, "post_id": 53034051, "comment_id": 92989456, "body": "may be I provide the proper output then it will explain what I mean...so to my output above, as said although it looks correct, the problem is with the &quot;Add&quot; did not bracket properly. So the output should be like Add (X 0 9) (Add (X 1 3) (Add (X 2 3) (Add (X 1 3) (Add (X 2 3) (Add (X 2 1) (Add (X 3 1) (Add (X 3 1) (X 4 1))))))))                                                                                             here is simple one that my coding works: Input : (Add (X 0 3) (X 2 1)) (Add (X 1 1) (X 2 1)) Output: Add (X 1 3) (Add (X 2 3) (Add (X 3 1) (X 4 1)))"}, {"owner": {"reputation": 2194, "user_id": 7940614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b697c574cc5dfb3a4d5e4aff46a1721a?s=128&d=identicon&r=PG&f=1", "display_name": "assembly.jc", "link": "https://stackoverflow.com/users/7940614/assembly-jc"}, "reply_to_user": {"reputation": 3, "user_id": 10494759, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/500e0a2da2e41b2befa40a946845ef88?s=128&d=identicon&r=PG&f=1", "display_name": "Yorkman", "link": "https://stackoverflow.com/users/10494759/yorkman"}, "edited": false, "score": 0, "creation_date": 1540820750, "post_id": 53034051, "comment_id": 92993201, "body": "That is mean that the left value of Add always be (X e c)? just said as forth comment, the output should be the pattern as:  Add (X e c) (Add (X e c) (Add (X e c) ...(Add (X..) (X..)))..),. Right?"}, {"owner": {"reputation": 2194, "user_id": 7940614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b697c574cc5dfb3a4d5e4aff46a1721a?s=128&d=identicon&r=PG&f=1", "display_name": "assembly.jc", "link": "https://stackoverflow.com/users/7940614/assembly-jc"}, "reply_to_user": {"reputation": 3, "user_id": 10494759, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/500e0a2da2e41b2befa40a946845ef88?s=128&d=identicon&r=PG&f=1", "display_name": "Yorkman", "link": "https://stackoverflow.com/users/10494759/yorkman"}, "edited": false, "score": 0, "creation_date": 1540823843, "post_id": 53034051, "comment_id": 92995289, "body": "If the data type of Poli cannot be modified, the simpler but not efficient way to do that is flatten the Poli to list of (X c e) and reconstruct as deserved output as your want."}, {"owner": {"reputation": 3, "user_id": 10494759, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/500e0a2da2e41b2befa40a946845ef88?s=128&d=identicon&r=PG&f=1", "display_name": "Yorkman", "link": "https://stackoverflow.com/users/10494759/yorkman"}, "edited": false, "score": 0, "creation_date": 1540824857, "post_id": 53034051, "comment_id": 92995936, "body": "yeah I agree with you and thanks for all your help, appreciate that."}, {"owner": {"reputation": 2194, "user_id": 7940614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b697c574cc5dfb3a4d5e4aff46a1721a?s=128&d=identicon&r=PG&f=1", "display_name": "assembly.jc", "link": "https://stackoverflow.com/users/7940614/assembly-jc"}, "reply_to_user": {"reputation": 3, "user_id": 10494759, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/500e0a2da2e41b2befa40a946845ef88?s=128&d=identicon&r=PG&f=1", "display_name": "Yorkman", "link": "https://stackoverflow.com/users/10494759/yorkman"}, "edited": false, "score": 0, "creation_date": 1540826346, "post_id": 53034051, "comment_id": 92996904, "body": "As a example, see the EDIT of my answer, there is a quite easy but not efficient way to do that."}, {"owner": {"reputation": 3, "user_id": 10494759, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/500e0a2da2e41b2befa40a946845ef88?s=128&d=identicon&r=PG&f=1", "display_name": "Yorkman", "link": "https://stackoverflow.com/users/10494759/yorkman"}, "edited": false, "score": 0, "creation_date": 1540831575, "post_id": 53034051, "comment_id": 93000018, "body": "thanks so much, will take a closer look to your latest solution."}], "tags": [], "owner": {"reputation": 2194, "user_id": 7940614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b697c574cc5dfb3a4d5e4aff46a1721a?s=128&d=identicon&r=PG&f=1", "display_name": "assembly.jc", "link": "https://stackoverflow.com/users/7940614/assembly-jc"}, "is_accepted": false, "score": 0, "last_activity_date": 1540827058, "last_edit_date": 1540827058, "creation_date": 1540746453, "answer_id": 53034051, "question_id": 53027959, "link": "https://stackoverflow.com/questions/53027959/what-change-is-needed-to-make-my-haskell-code-to-take-more-generic-pattern/53034051#53034051", "title": "what change is needed to make my Haskell code to take more generic pattern?", "body": "<p>There may not has a standard answer for design question. Just a suggestion, I suspect   whether is suitable to define <code>data Poli</code> as a recursive type. </p>\n\n<p>In mathematics, polynomial just a summation of terms, so, we may define polynomial as </p>\n\n<pre><code>data PolyTerm = X Exponent Coefficient deriving Show\ndata Poli = Term PolyTerm | Add [PolyTerm] deriving Show\n</code></pre>\n\n<p>and the product of two terms just as before:</p>\n\n<pre><code>termMultiple ::PolyTerm -&gt; PolyTerm -&gt; PolyTerm\ntermMultiple (X e1 c1) (X e2 c2) = (X (e1+e2) (c1*c2)\n</code></pre>\n\n<p>and the product of two polynomial can be as a list comprehension:</p>\n\n<pre><code>poliMultiple :: Poli -&gt; Poli -&gt; Poli\npoliMultiple (Add ps1) (Add ps2)  = \n        Add [ termMultiple t1 t2 | t1 &lt;- ps1, t2 &lt;- ps2]\n</code></pre>\n\n<p>and the other 3 cases can be wrapped</p>\n\n<pre><code>poliMultiple (Term t1) (Term t2) = Term (termMultiple t1 t2)\npoliMultiple (Term p1) ps2@(Add ps) = poliMultiple (Add [p1]) ps2\npoliMultiple ps1@(Add ps) (Term p2) = poliMultiple ps1 (Add [p2])\n</code></pre>\n\n<p>EDIT:\nAs the data type of Poli cannot be modified, the Poli may need to be flatten and reconstruct to the deserved output pattern as:\nAdd (X e c (Add (X e c) ... Add (X e c) (X e c)))..)</p>\n\n<pre><code>flatten::Poli-&gt;[Poli]\nflatten t@(Y _ _) = [t]\nflatten (Add t@(Y _ _) p) = [t] ++ flatten p\nflatten (Add p t@(Y _ _)) = flatten p ++ [t]\nflatten (Add p1 p2) = flatten p1 ++ flatten p2\n\nconstruct::[Poli]-&gt;Poli\nconstruct [t]  = t\nconstruct (t:ts) = Add t (construct ts)\n</code></pre>\n\n<p>and the poliMultiple as</p>\n\n<pre><code>poliMultiple (Add p1 p2) (Add p3 p4) = \n    simplify $\n        Add (poliMultiple p1 p3) \n            (Add (poliMultiple p1 p4) \n                (Add (poliMultiple p2 p3) (poliMultiple p2 p4)))\n    where simplify = construct . flatten\n</code></pre>\n\n<p>The usage of (++) above is a most inefficient way, use stack or view Poli data type as a binary tree to traverse and construct it may be better. </p>\n"}], "owner": {"reputation": 3, "user_id": 10494759, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/500e0a2da2e41b2befa40a946845ef88?s=128&d=identicon&r=PG&f=1", "display_name": "Yorkman", "link": "https://stackoverflow.com/users/10494759/yorkman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 117, "favorite_count": 0, "answer_count": 1, "score": -3, "last_activity_date": 1540840820, "creation_date": 1540694612, "last_edit_date": 1540825082, "question_id": 53027959, "link": "https://stackoverflow.com/questions/53027959/what-change-is-needed-to-make-my-haskell-code-to-take-more-generic-pattern", "title": "what change is needed to make my Haskell code to take more generic pattern?", "body": "<p>Here is my coding in Haskell:</p>\n\n<pre><code>(Add (Y 0 3) (Add (Y 1 1) (Y 2 1))) (Add (Y 0 3) (Add (Y 1 1) (Y 2 1)))\n</code></pre>\n\n<p>How do I make my code more generic pattern from the input so it is not as restricted as per my coding?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 3, "creation_date": 1540682470, "post_id": 53027091, "comment_id": 92955873, "body": "It forces you to choose what you want to do with <code>Nothing</code>."}, {"owner": {"reputation": 1417, "user_id": 5432156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72991dcaeb7a19e585f4f07cb503783d?s=128&d=identicon&r=PG&f=1", "display_name": "ganidat", "link": "https://stackoverflow.com/users/5432156/ganidat"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1540682587, "post_id": 53027091, "comment_id": 92955897, "body": "Like this: &quot;if Nothing then do something else do another thing instead&quot;?"}, {"owner": {"reputation": 1417, "user_id": 5432156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72991dcaeb7a19e585f4f07cb503783d?s=128&d=identicon&r=PG&f=1", "display_name": "ganidat", "link": "https://stackoverflow.com/users/5432156/ganidat"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1540682618, "post_id": 53027091, "comment_id": 92955903, "body": "But what about the fact that you can no longer add two &quot;Maybe Int&quot;?"}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 1, "creation_date": 1540682620, "post_id": 53027091, "comment_id": 92955904, "body": "Yes, like that. Maybe you want to propagate it, like <code>(1+) &lt;$&gt; safeHead l</code>. Maybe you want to produce a better error message. That kind of thing. You can get an <code>Int</code> back out of a <code>Maybe Int</code>; there wouldn\u2019t be much point in <code>Maybe</code> if you couldn\u2019t."}, {"owner": {"reputation": 64542, "user_id": 10008173, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e3ea5d6d5d63e054acb8cfa95a39240d?s=128&d=identicon&r=PG&f=1", "display_name": "David Maze", "link": "https://stackoverflow.com/users/10008173/david-maze"}, "edited": false, "score": 3, "creation_date": 1540692376, "post_id": 53027091, "comment_id": 92957085, "body": "You can still add two <code>Maybe Int</code>, for instance as <code>(+) &lt;$&gt; mx &lt;*&gt; my</code> (you&#39;d get <code>Nothing</code> if either <code>mx</code> or <code>my</code> is <code>Nothing</code>, and <code>Just</code> the sum if both have values)."}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1540724725, "post_id": 53027091, "comment_id": 92962319, "body": "Two relevant blog posts: <a href=\"http://www.parsonsmatt.org/2017/10/11/type_safety_back_and_forth.html\" rel=\"nofollow noreferrer\">parsonsmatt.org/2017/10/11/type_safety_back_and_forth.html</a> <a href=\"http://www.parsonsmatt.org/2018/10/02/small_types.html\" rel=\"nofollow noreferrer\">parsonsmatt.org/2018/10/02/small_types.html</a>"}], "answers": [{"comments": [{"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1540714786, "post_id": 53027204, "comment_id": 92960075, "body": "<code>Maybe</code> doesn\u2019t have a <code>Comonad</code> instance (since the methods would need to be partial functions)."}, {"owner": {"reputation": 1155, "user_id": 962394, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/97268298c366b07e5556567639105ee1?s=128&d=identicon&r=PG", "display_name": "codeshot", "link": "https://stackoverflow.com/users/962394/codeshot"}, "reply_to_user": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1540719524, "post_id": 53027204, "comment_id": 92961083, "body": "@David Young, very true. I&#39;d gotten my thoughts into a generalised mindset. updated to remove that bit."}, {"owner": {"reputation": 1155, "user_id": 962394, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/97268298c366b07e5556567639105ee1?s=128&d=identicon&r=PG", "display_name": "codeshot", "link": "https://stackoverflow.com/users/962394/codeshot"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1541867039, "post_id": 53027204, "comment_id": 93367547, "body": "@dfeuer, the <code>if</code> example might not be advisable but it&#39;s certainly a classic that should be listed for some learners to be comfortable with <code>Maybe</code>. BTW <code>fromMaybe</code> is already listed and it&#39;s better than <code>maybe</code> because <code>maybe a b c</code> is just <code>fromMaybe a (b &lt;$&gt; c)</code> and the <code>fromMaybe</code> way uses more general purpose concepts so less knowledge is needed for overall effectiveness if people use that. So listing <code>maybe</code> isn&#39;t really useful for people."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1541874578, "post_id": 53027204, "comment_id": 93369780, "body": "@codeshot, I disagree about <code>maybe</code> vs. <code>fromMaybe</code>. <code>maybe</code> is a simple example of a <i>catamorphism</i>. These show up all over too: <code>either</code>, <code>bool</code>, <code>uncurry</code>, <code>foldr</code>, <code>foldTree</code>, etc."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1541874659, "post_id": 53027204, "comment_id": 93369806, "body": "The <code>if</code> example is especially bad to show beginners who may think it&#39;s the right way to write Haskell."}, {"owner": {"reputation": 1155, "user_id": 962394, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/97268298c366b07e5556567639105ee1?s=128&d=identicon&r=PG", "display_name": "codeshot", "link": "https://stackoverflow.com/users/962394/codeshot"}, "edited": false, "score": 0, "creation_date": 1541883009, "post_id": 53027204, "comment_id": 93372028, "body": "it&#39;s okay and they will learn better, but if they don&#39;t see it they will only ever be beginners - the current Haskell failure."}], "tags": [], "owner": {"reputation": 1155, "user_id": 962394, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/97268298c366b07e5556567639105ee1?s=128&d=identicon&r=PG", "display_name": "codeshot", "link": "https://stackoverflow.com/users/962394/codeshot"}, "is_accepted": false, "score": 8, "last_activity_date": 1540733118, "last_edit_date": 1540733118, "creation_date": 1540683484, "answer_id": 53027204, "question_id": 53027091, "link": "https://stackoverflow.com/questions/53027091/in-haskell-if-a-function-returns-a-maybe-a-type-just-so-it-is-safe-and-total/53027204#53027204", "title": "In Haskell, if a function returns a &quot;Maybe a&quot; type just so it is safe and total, how is it useful anymore?", "body": "<p>\"Just\" is one such function. Here's how you can use its result (for the ghci REPL):</p>\n\n<pre><code>import Data.Foldable (sequenceA_)\n\nlet writeLn            = putStrLn . show\n\nlet supposedlyUnusable = writeLn &lt;$&gt; Just 0 \nsequenceA_ supposedlyUnusable\n</code></pre>\n\n<p>which prints <code>1</code> or we can continue to try the other interesting example - using the <code>Nothing</code> case</p>\n\n<pre><code>let supposedlyUnusable = writeLn &lt;$&gt; Nothing \nsequenceA_ supposedlyUnusable\n</code></pre>\n\n<p>which doesn't print anything.</p>\n\n<p>That's a complete program which works even for other instances of <code>Traversable</code> or <code>Foldable</code> where you couldn't do a case analysis on the <code>Maybe</code> value. <code>&lt;$&gt;</code> is the key that lets you apply a function to whatever's contained in the <code>Maybe</code> or any <code>Functor</code> and if you have two <code>Maybe</code>s (or two of the same <code>Applicative</code>) you can use the pattern <code>fn &lt;$&gt; applicative_a &lt;*&gt; applicative_b</code> which is like <code>fn a b</code> but where <code>a</code> and <code>b</code> are wrapped up things like <code>Maybe</code> values.</p>\n\n<p>So that leaves a couple of remaining ways to use a <code>Maybe</code> that I can think of, all of which use case analysis:</p>\n\n<pre><code>let {fn (Just n) = Just $ 1 + n; fn Nothing  = Nothing}\nfn v\n-- but that was just a messy way of writing (1+) &lt;$&gt; v\n</code></pre>\n\n<p>...</p>\n\n<pre><code>let fn v = case v of {Just n -&gt; Just $ 1 + n; Nothing -&gt; Nothing}\n-- and that's the same program with a different syntax\n</code></pre>\n\n<p>...</p>\n\n<pre><code>import Data.Maybe (fromMaybe)\nfromMaybe someDefault v\n-- and that extracted the `value` from `v` if we had `Just value` or else gave us `someDefault`\n</code></pre>\n\n<p>...</p>\n\n<pre><code>let {fn (Just n) = writeLn n; fn Nothing = putStrLn \"No answer\"}\n-- this one extracts an action but also provides an action when there's nothing\n-- it can be done using &lt;$&gt; and fromMaybe instead, but beginners tend to\n-- find it easier because of the tutorials that resulted from the history\n-- of the base library's development\nlet fn v = fromMaybe (putStrLn \"No answer\") (writeLn &lt;$&gt; v)\n</code></pre>\n\n<p>oooh, oooh! This one's neato:</p>\n\n<pre><code>import Control.Applicative\nlet v = Just 0 -- or Nothing, if you want\nlet errorcase = pure $ putStrLn \"No answer\"\nlet successcase = writeLn &lt;$&gt; v\nsequenceA_ $ successcase &lt;|&gt; errorcase\n-- that uses Alternative in which Maybe tries to give an answer preferring the earliest if it can\n</code></pre>\n\n<p>of course we also have the classic:</p>\n\n<pre><code>maybe (putStrLn \"No answer\") writeLn v\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "is_accepted": false, "score": 8, "last_activity_date": 1540698517, "creation_date": 1540698517, "answer_id": 53028227, "question_id": 53027091, "link": "https://stackoverflow.com/questions/53027091/in-haskell-if-a-function-returns-a-maybe-a-type-just-so-it-is-safe-and-total/53028227#53028227", "title": "In Haskell, if a function returns a &quot;Maybe a&quot; type just so it is safe and total, how is it useful anymore?", "body": "<p>As it was mentioned in comments, you can actually add two <code>Maybe</code>s. I just wanted to give another point of view on that.</p>\n\n<p>Yes, you can't directly apply <code>(+)</code> to <code>Maybe Int</code>s, but you can <strong>upgrade</strong> it to another function that is able to do so automatically.</p>\n\n<p>To upgrade <strong>unary</strong> function (like <code>(+1)</code>) you write <code>fmap (+1) maybeInt</code> or <code>(+1) &lt;$&gt; maybeInt</code>. If <code>(+1)</code> had type <code>Int -&gt; Int</code>, the <code>fmap (+1)</code> expression has type <code>Maybe Int -&gt; Maybe Int</code>.</p>\n\n<p>Upgrading bin-or-more-ary functions is a bit more complex syntax-wise: <code>(+) &lt;$&gt; maybeInt &lt;*&gt; maybeInt</code> or <code>liftA2 (+) maybeInt maybeInt</code>. Again, here we promote <code>(+) :: Int -&gt; Int -&gt; Int</code> to <code>liftA2 (+) :: Maybe Int -&gt; Maybe Int -&gt; Maybe Int</code>.</p>\n\n<p>Handling <code>Maybe</code>s this way allows you to build up a computation that works with <code>Maybe</code>s out of pure functions and defer checking for <code>Nothing</code>. Or even avoid that if you eventually plug it into another function that takes <code>Maybe</code> as argument.</p>\n\n<p>Of course, you can use <code>fmap</code> and <code>liftA</code>s on any <code>Applicative</code>, not just <code>Maybe</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 3063, "user_id": 439578, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e032fbe640b2234c8dce244907b99eab?s=128&d=identicon&r=PG", "display_name": "Manoj R", "link": "https://stackoverflow.com/users/439578/manoj-r"}, "is_accepted": false, "score": 1, "last_activity_date": 1540894723, "last_edit_date": 1540894723, "creation_date": 1540793958, "answer_id": 53039786, "question_id": 53027091, "link": "https://stackoverflow.com/questions/53027091/in-haskell-if-a-function-returns-a-maybe-a-type-just-so-it-is-safe-and-total/53039786#53039786", "title": "In Haskell, if a function returns a &quot;Maybe a&quot; type just so it is safe and total, how is it useful anymore?", "body": "<p>Safety comes with a cost. The cost is normally extra code, for avoiding error situations. Haskell has given us the way to avoid this at the compile time rather than at run time. </p>\n\n<p>Let me explain with examples from other languages. Though I won't name any language, but it would be apparent which languages I am talking about. Please be sure that all languages are great in their ways, so do not take this as I am finding fault in other language. </p>\n\n<p>In some languages you have pointers and the way you will do <code>safeHead</code> is to return either int pointer or null pointer. You will have to de-reference pointer to get the value and when you de-reference null pointer you will get error. To avoid this, extra code will be needed to check for null pointer, and do something when it is null. </p>\n\n<p>In some dynamic languages, you have variables assigned to null. So in above example your variable could be type int or it could be null. And what will happen if you add null to int? Most probably undefined situation. Again special handling needs to be done for the null case. </p>\n\n<p>In Haskell too you will have to do the same, you will have to guard the null situation with extra code. So what's the difference? The difference in Haskell is doing it at the compile time and not at the run time.*  i.e. the moment you have this kind of code along with your definition of safeHead, <code>p = safeHead xs + safeHead ys</code>, the code will give error at the compile time. You will have to do something more for addition if type Maybe Int. You can write your function for adding two or multiple Maybe Ints or create newype for Maybe Int and <a href=\"https://stackoverflow.com/questions/8308015/can-you-overload-in-haskell\">overload +</a> or do something as mentioned in other answers. </p>\n\n<p>But whatever you do, you do it before unit testing. Definitely much before it goes on production. And earlier the error is caught lesser is the cost. That's where the advantage of type safe Haskell comes in handy. </p>\n\n<p><code>* There could be mechanism in other languages to handle this at compile time.</code> </p>\n"}], "owner": {"reputation": 1417, "user_id": 5432156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72991dcaeb7a19e585f4f07cb503783d?s=128&d=identicon&r=PG&f=1", "display_name": "ganidat", "link": "https://stackoverflow.com/users/5432156/ganidat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 868, "favorite_count": 0, "answer_count": 3, "score": 1, "last_activity_date": 1540894723, "creation_date": 1540682136, "question_id": 53027091, "link": "https://stackoverflow.com/questions/53027091/in-haskell-if-a-function-returns-a-maybe-a-type-just-so-it-is-safe-and-total", "title": "In Haskell, if a function returns a &quot;Maybe a&quot; type just so it is safe and total, how is it useful anymore?", "body": "<p>So I have to define a safe version of the head function that would not throw an error when [] is passed as the argument. Here it is:</p>\n\n<pre><code>safeHead :: [a] -&gt; Maybe a\nsafeHead [] = Nothing\nsafeHead (x:_) = Just x\n</code></pre>\n\n<p>But now, is this function still of any use? Because suppose that type \"a\" is a Int, then you can add two objects of type Int, but you can't add two objects of type \"Maybe Int\".</p>\n"}, {"tags": ["haskell", "lazy-evaluation"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 7, "creation_date": 1540675297, "post_id": 53026381, "comment_id": 92954509, "body": "Because this is a <i>type error</i>. The compiler is <i>not</i> lazy, and performs type checks."}, {"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 0, "creation_date": 1540675715, "post_id": 53026381, "comment_id": 92954592, "body": "You can not construct a list with two different types in the first place."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 1, "creation_date": 1540677114, "post_id": 53026381, "comment_id": 92954911, "body": "Just in case you&#39;ve never used a language with compile-time types before: types are <i>not</i> tags on values that are computed as the program runs. Types are static restrictions on what values can possibly show up someplace."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 0, "creation_date": 1540714727, "post_id": 53026381, "comment_id": 92960057, "body": "@Redu <code>4</code> and <code>[]</code> not necessarily have two different types. can have same type."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1540714856, "post_id": 53026381, "comment_id": 92960088, "body": "@WillemVanOnsem is this a <i>type</i> error though? <code>:t safeHead (4:5:3:[]:[])</code> reports a type, so perhaps not."}, {"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1540715631, "post_id": 53026381, "comment_id": 92960249, "body": "@Will Ness I guess you mean the curious type check <code>[4,5,6,[]] :: Num [a] =&gt; [[a]]</code>.    It reports a type but you can not even run <code>id</code> function on that supposedly list. What is happening there..?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 0, "creation_date": 1540715955, "post_id": 53026381, "comment_id": 92960312, "body": "@Redu: it looks for a <code>Num</code> type that is at the same type an item of type <code>[a]</code>, but fails to find one (or at least not a straightforward one). The function itself can be defined, but not &quot;used&quot;, at least not without introducing non-sensical types and enabling some extensions that are not standard Haskell iirc."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1540716285, "post_id": 53026381, "comment_id": 92960389, "body": "@WillemVanOnsem I didn&#39;t use any extensions in my answer. (but I did use an outdated GHCi)."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 0, "creation_date": 1540719967, "post_id": 53026381, "comment_id": 92961181, "body": "@Redu numeric literals are polymorphic definitions, not values; <code>4</code> is actually read as <code>(fromInteger (4 :: Integer)) :: Num a =&gt; a</code> and so a specific <code>fromInteger</code> does its specific job according to the specific type it actually has."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 9, "last_activity_date": 1540716474, "last_edit_date": 1540716474, "creation_date": 1540675476, "answer_id": 53026414, "question_id": 53026381, "link": "https://stackoverflow.com/questions/53026381/since-haskell-is-lazily-evaluated-why-doesnt-this-code-work/53026414#53026414", "title": "Since Haskell is lazily evaluated, why doesn&#39;t this code work?", "body": "<blockquote>\n  <p>it should not throw an error since this part is not even evaluated.</p>\n</blockquote>\n\n<p>The fact that it is not evaluated is irrelevant. Haskell is a statically typed language, and the compiler checks the types. It does not have to calculate the result in order to typecheck the value: the input and output type of all functions are known (well calculated), and the Haskell compiler verifies that type of the output of one function is the same as the input of the function that is called to process that output.</p>\n\n<p>The typechecking is done at <em>compile time</em>, and the Haskell compiler is <em>not</em> lazy (in the sense that it performs these checks before generating the binary, not just before running the code). The compiler eagerly checks the types and guarantees that the program is sensical from a type system perspective.</p>\n\n<p>For example the following expression will typecheck:</p>\n\n<pre><code>1 : 2 : undefined\n</code></pre>\n\n<p>but <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:undefined\" rel=\"nofollow noreferrer\"><strong><code>undefined :: a</code></strong></a> will raise an error in case it is evaluated.</p>\n\n<p>Haskell allows to define new types of <code>Num</code>bers, so you could make a typeclass that parses the numbers <code>4</code>, <code>5</code> and <code>3</code> into numbers of your own type. That type could, strictly speaking be a list.</p>\n\n<p>But Haskell will, if you evaluate this, not find a type to use, and will raise an error:</p>\n\n<pre><code>Prelude&gt; safeHead (4:5:3:[]:[])\n\n&lt;interactive&gt;:6:1: error:\n    \u2022 Non type-variable argument in the constraint: Num [t]\n      (Use FlexibleContexts to permit this)\n    \u2022 When checking the inferred type\n        it :: forall t. Num [t] =&gt; Maybe [t]\n</code></pre>\n\n<p>So here it is looking for a type for the elements of the list, and it finds out that these should be lists, due to the <code>[]</code> element (the one but last element), but at the same time these should be <code>Num</code>s, now it fails to find such a type, hence the error.</p>\n\n<p>We can strictly speaking construct such a type, such that we can <em>use</em> the function in a proper way:</p>\n\n<pre><code>Prelude&gt; data A = A deriving Show\nPrelude&gt; :{\nPrelude| instance Num [A] where\nPrelude|     (+) = undefined\nPrelude|     (*) = undefined\nPrelude|     abs = undefined\nPrelude|     fromInteger _ = [A]\nPrelude|     negate = undefined\nPrelude|     signum = undefined\nPrelude| :}\nPrelude&gt; :{\nPrelude| safeHead :: [a] -&gt; Maybe a\nPrelude| safeHead [] = Nothing\nPrelude| safeHead (x:_) = Just x\nPrelude| :}\nPrelude&gt; safeHead (4:5:3:[]:[]) :: Maybe [A]\nJust [A]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 51262, "user_id": 208257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8d59503078761ba50620cbee4348882e?s=128&d=identicon&r=PG", "display_name": "Dan Burton", "link": "https://stackoverflow.com/users/208257/dan-burton"}, "is_accepted": false, "score": 3, "last_activity_date": 1540712938, "creation_date": 1540712938, "answer_id": 53029419, "question_id": 53026381, "link": "https://stackoverflow.com/questions/53026381/since-haskell-is-lazily-evaluated-why-doesnt-this-code-work/53029419#53029419", "title": "Since Haskell is lazily evaluated, why doesn&#39;t this code work?", "body": "<p>It takes a bit of massaging, but you can sometimes get ghc to <em>defer</em> type errors such as this, and give you an answer regardless.</p>\n\n<pre><code>-- defer.hs\nsafeHead :: [a] -&gt; Maybe a\nsafeHead [] = Nothing\nsafeHead (x:_) = Just x\n\nn :: Int\nn = []\n\nnonsense :: [Int]\nnonsense = (4 : 5 : 3 : n : [])\n\nr :: Maybe Int\nr = safeHead nonsense\n</code></pre>\n\n<p>Given the above file, if you load this into ghc or ghci using the <code>-fdefer-type-errors</code> flag...</p>\n\n<pre><code>$ ghci -fdefer-type-errors defer.hs\n\ndefer.hs:6:5: warning: [-Wdeferred-type-errors]\n    \u2022 Couldn't match expected type \u2018Int\u2019 with actual type \u2018[a0]\u2019\n    \u2022 In the expression: []\n      In an equation for \u2018n\u2019: n = []\n  |\n6 | n = []\n  |     ^^\n\nghci&gt; r\nJust 4\n\nghci&gt; nonsense !! 3\n*** Exception: defer.hs:6:5: error:\n    \u2022 Couldn't match expected type \u2018Int\u2019 with actual type \u2018[a0]\u2019\n    \u2022 In the expression: []\n      In an equation for \u2018n\u2019: n = []\n(deferred type error)\n</code></pre>\n\n<p>Normally, type errors are <em>fatal</em> for Haskell programs, preventing them from being compiled. However <em>some</em> such errors can be deferred. This is usually <strong>not</strong> a good idea, and the feature for deferring type errors is somewhat limited in what it can defer.</p>\n\n<p>So to answer your question, Haskell was not designed to let type errors slide, even if said type error does not actually impact any live code path. However, you can sometimes opt in to this dubious behavior, if you so choose.</p>\n"}, {"comments": [{"owner": {"reputation": 51262, "user_id": 208257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8d59503078761ba50620cbee4348882e?s=128&d=identicon&r=PG", "display_name": "Dan Burton", "link": "https://stackoverflow.com/users/208257/dan-burton"}, "edited": false, "score": 1, "creation_date": 1540744898, "post_id": 53029546, "comment_id": 92967678, "body": "If you <i>must</i> use such an instance for list-y numbers, I&#39;d recommend using <code>Data.ANum</code> and <code>Control.Applicative.ZipList</code> instead. <code>ANum (ZipList [1,2,3]) + 1 == ANum (ZipList [2,3,4])</code>"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 51262, "user_id": 208257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8d59503078761ba50620cbee4348882e?s=128&d=identicon&r=PG", "display_name": "Dan Burton", "link": "https://stackoverflow.com/users/208257/dan-burton"}, "edited": false, "score": 0, "creation_date": 1540745022, "post_id": 53029546, "comment_id": 92967717, "body": "I was just reaching for something that works here, after everyone assumed that it doesn&#39;t. :) I didn&#39;t care whether it does a sensible thing or not. thanks for the reference though, will look into it."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 51262, "user_id": 208257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8d59503078761ba50620cbee4348882e?s=128&d=identicon&r=PG", "display_name": "Dan Burton", "link": "https://stackoverflow.com/users/208257/dan-burton"}, "edited": false, "score": 0, "creation_date": 1540746025, "post_id": 53029546, "comment_id": 92967966, "body": "@DanBurton  lists-of-digits in some base seems like a sensible thing to have a Num instance for."}, {"owner": {"reputation": 51262, "user_id": 208257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8d59503078761ba50620cbee4348882e?s=128&d=identicon&r=PG", "display_name": "Dan Burton", "link": "https://stackoverflow.com/users/208257/dan-burton"}, "edited": false, "score": 1, "creation_date": 1540746484, "post_id": 53029546, "comment_id": 92968073, "body": "I agree that &quot;list-of-digits in some base&quot; could be a sensible thing to have a Num instance for, <i>if it is newtyped</i>. When OP wrote <code>(4:5:3:[]:[])</code>, I&#39;m fairly certain they did <i>not</i> mean for it to be a list of lists. Better for this to be a type error than for it to silently do something unexpected and bizarre."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 51262, "user_id": 208257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8d59503078761ba50620cbee4348882e?s=128&d=identicon&r=PG", "display_name": "Dan Burton", "link": "https://stackoverflow.com/users/208257/dan-burton"}, "edited": false, "score": 1, "creation_date": 1540746765, "post_id": 53029546, "comment_id": 92968158, "body": "I don&#39;t think I advocated nor recommended doing this. If they didn&#39;t intend it, they didn&#39;t have the instance and indeed got the error. So all is well. For me, a truly bizarre thing to do is the deferring of type errors. :)"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 51262, "user_id": 208257, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/8d59503078761ba50620cbee4348882e?s=128&d=identicon&r=PG", "display_name": "Dan Burton", "link": "https://stackoverflow.com/users/208257/dan-burton"}, "edited": false, "score": 0, "creation_date": 1540776224, "post_id": 53029546, "comment_id": 92975253, "body": "but of course you&#39;re right about the newtype, if to have this at all then certainly be explicit about it. I was just concentrating more on what a language can do in general."}], "tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 1, "last_activity_date": 1540722400, "last_edit_date": 1540722400, "creation_date": 1540714262, "answer_id": 53029546, "question_id": 53026381, "link": "https://stackoverflow.com/questions/53026381/since-haskell-is-lazily-evaluated-why-doesnt-this-code-work/53029546#53029546", "title": "Since Haskell is lazily evaluated, why doesn&#39;t this code work?", "body": "<p>Every bit in a Haskell program must have a type. <em>Upfront</em>.</p>\n\n<p>The term <code>(4:5:3:[]:[])</code> actually has a type.</p>\n\n<pre><code>&gt; :t safeHead (4:5:3:[]:[])\nsafeHead (4:5:3:[]:[]) :: Num [t] =&gt; Maybe [t]\n\n&gt; safeHead (4:5:3:[]:[])\n\n&lt;interactive&gt;:10:1:\n    No instance for (Num [t0]) arising from a use of `it'\n    In a stmt of an interactive GHCi command: print it\n</code></pre>\n\n<p>It's just the instance that is missing.</p>\n\n<pre><code>&gt; instance (Num a) =&gt; Num [a] where\n    a + b = a\n    a - b = a\n    a * b = a\n    abs a = a\n    signum a = a\n    fromInteger x = [fromInteger x]\n\n&gt; safeHead (4:5:3:[]:[])\nJust [4]\nit :: Num t =&gt; Maybe [t]\n</code></pre>\n\n<p>Numeric literals are polymorphic definitions, not concrete values; <code>4</code> is actually read as <code>(fromInteger 4) :: Num a =&gt; a</code> and so a specific <code>fromInteger</code> does its specific job according to the specific type it actually has. Here, it's </p>\n\n<pre><code>four :: Num t =&gt; Num [t]\nfour = fromInteger 4         -- according to our definition, it's\n     = [fromInteger 4]\n</code></pre>\n\n<p>Turns out it's not a <em>complete</em> nonsense after all. :)</p>\n"}], "owner": {"reputation": 1417, "user_id": 5432156, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72991dcaeb7a19e585f4f07cb503783d?s=128&d=identicon&r=PG&f=1", "display_name": "ganidat", "link": "https://stackoverflow.com/users/5432156/ganidat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 140, "favorite_count": 0, "answer_count": 3, "score": 1, "last_activity_date": 1540722400, "creation_date": 1540675195, "question_id": 53026381, "link": "https://stackoverflow.com/questions/53026381/since-haskell-is-lazily-evaluated-why-doesnt-this-code-work", "title": "Since Haskell is lazily evaluated, why doesn&#39;t this code work?", "body": "<pre><code>--defining function\nsafeHead :: [a] -&gt; Maybe a\nsafeHead [] = Nothing\nsafeHead (x:_) = Just x\n\n--calling function\nsafeHead (4:5:3:[]:[])\n</code></pre>\n\n<p>When I call safeHead with the argument (4:5:3:[]:[]) the pattern only evaluates the argument to see if either it is empty or if it has a head. So despite the nonsensical bit \"[]:[]\" it should not throw an error since this part is not even evaluated.</p>\n"}, {"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 944, "user_id": 49554, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/02c8ecc24181d171df85a26458b9cd5f?s=128&d=identicon&r=PG", "display_name": "jneira", "link": "https://stackoverflow.com/users/49554/jneira"}, "edited": false, "score": 0, "creation_date": 1540665772, "post_id": 53024969, "comment_id": 92952122, "body": "Have you considered use a http session to keep the state? See <a href=\"http://hackage.haskell.org/package/scotty-session\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/scotty-session</a>"}, {"owner": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "reply_to_user": {"reputation": 944, "user_id": 49554, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/02c8ecc24181d171df85a26458b9cd5f?s=128&d=identicon&r=PG", "display_name": "jneira", "link": "https://stackoverflow.com/users/49554/jneira"}, "edited": false, "score": 0, "creation_date": 1540666143, "post_id": 53024969, "comment_id": 92952231, "body": "I&#39;m afraid for a CircuitBreaker I cannot attach a state to a user, but to a backend. So all request need to share the latest state."}, {"owner": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "reply_to_user": {"reputation": 944, "user_id": 49554, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/02c8ecc24181d171df85a26458b9cd5f?s=128&d=identicon&r=PG", "display_name": "jneira", "link": "https://stackoverflow.com/users/49554/jneira"}, "edited": false, "score": 0, "creation_date": 1540666269, "post_id": 53024969, "comment_id": 92952261, "body": "It would blow my mind if is not other more standard way to keep state between request"}], "answers": [{"comments": [{"owner": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "edited": false, "score": 0, "creation_date": 1540668061, "post_id": 53025258, "comment_id": 92952698, "body": "I was reading this blog <a href=\"https://github.com/yesodweb/yesod/wiki/Keeping-(in-memory)-state-with-warp\" rel=\"nofollow noreferrer\">github.com/yesodweb/yesod/wiki/&hellip;</a> which is exactly same example using IOref as you&#39;re doing here, thanks a lot for the code base!"}, {"owner": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "edited": false, "score": 0, "creation_date": 1540672568, "post_id": 53025258, "comment_id": 92953885, "body": "Hi I&#180;m trying to understand this section (let y = x + 1     y <code>seq</code> liftIO (writeIORef ref y)     pure y) are you updating the ref and returning the request data ?"}, {"owner": {"reputation": 944, "user_id": 49554, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/02c8ecc24181d171df85a26458b9cd5f?s=128&d=identicon&r=PG", "display_name": "jneira", "link": "https://stackoverflow.com/users/49554/jneira"}, "edited": false, "score": 0, "creation_date": 1540675253, "post_id": 53025258, "comment_id": 92954502, "body": "Consider use a thread safe mvar instead if you are going to run it in a multithreaded env: <a href=\"https://stackoverflow.com/a/5545599/49554\">stackoverflow.com/a/5545599/49554</a>"}], "tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": true, "score": 3, "last_activity_date": 1540666444, "creation_date": 1540666444, "answer_id": 53025258, "question_id": 53024969, "link": "https://stackoverflow.com/questions/53024969/keep-state-between-http-request/53025258#53025258", "title": "Keep state between http request", "body": "<p>In situations like this partial application is your friend.  Where you might, in C, use a sinful global variable you could instead declare your value (a reference) explicitly in the parent (main) routine then pass that via partial application to your web route handlers.</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\nimport Web.Scotty\nimport Control.Monad.IO.Class\nimport Data.IORef\n\nport = 8080\n\nscottyServer :: IO ()\nscottyServer = do\n    print (\"Starting Server at port \" ++ show port)\n    ref &lt;- newState initialState\n    scotty port (routes ref)\n\nroutes :: MyStateRef -&gt; ScottyM()\nroutes ref = get \"/users\" (responseUsers ref)\n\nresponseUsers :: MyStateRef -&gt; ActionM ()\nresponseUsers ref = do x &lt;- statefulStuff ref\n                       json (show x)\n\n--------------------------------------------------------------------------------\n--  Stateful things\n\ninitialState :: Int\ninitialState = 0\ntype MyState = Int\ntype MyStateRef = IORef Int -- Could be TVar, MVar, DB address, etc\n\nnewState :: MonadIO m =&gt; MyState -&gt; m MyStateRef\nnewState = liftIO . newIORef\n\nstatefulStuff :: MonadIO m =&gt; MyStateRef -&gt; m MyState\nstatefulStuff ref =\n do x &lt;- liftIO (readIORef ref)\n    -- N.B. lack of atomicity - that isn't the point of this answer\n    let y = x + 1\n    y `seq` liftIO (writeIORef ref y)\n    pure y\n</code></pre>\n"}], "owner": {"reputation": 10216, "user_id": 854207, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/R6DhK.jpg?s=128&g=1", "display_name": "paul", "link": "https://stackoverflow.com/users/854207/paul"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 181, "favorite_count": 0, "accepted_answer_id": 53025258, "answer_count": 1, "score": 0, "last_activity_date": 1540671598, "creation_date": 1540664410, "last_edit_date": 1540671598, "question_id": 53024969, "link": "https://stackoverflow.com/questions/53024969/keep-state-between-http-request", "title": "Keep state between http request", "body": "<p>Let's say that I have an http server based in Scotty</p>\n\n<pre><code>scottyServer :: IO ()\nscottyServer = do\n    print (\"Starting Server at port \" ++ show port)\n    scotty port routes\n\nroutes :: ScottyM()\nroutes = do get \"/service\" responseService\n            get \"/users\" responseUsers\n</code></pre>\n\n<p>And then I have a circuit breaker which I want to keep state <code>CircuitBreakerType</code></p>\n\n<pre><code>data CircuitBreakerType\n  = Close {users::[User], error:: Integer}\n  | Open {users::[User], error:: Integer}\n  | HalfOpen {users::[User], error:: Integer}\n  deriving (Show)\n\nresponseUsers :: ActionM ()\nresponseUsers = do users &lt;- liftAndCatchIO $ searchAllCassandraUsersCB $ Close [] 0\n                   json (show users)\n\nsearchAllCassandraUsersCB :: CircuitBreakerType -&gt;  IO CircuitBreakerType\nsearchAllCassandraUsersCB (Close users errors)= do result &lt;- selectAllCassandraUserCB $ Close users errors\n                                                   return result\n</code></pre>\n\n<p>Using Haskell how can I keep the state of the CircuitBreakerType between request/response of Scootty</p>\n\n<p>All the examples of state machine that I did was passing the state in the IO monad one to another, but with a Http server I dont have a clue how to keep the state. Hopefully nothing related with persistance in database since the performance would suck.</p>\n\n<p>Regards</p>\n"}, {"tags": ["haskell", "package"], "answers": [{"comments": [{"owner": {"reputation": 35444, "user_id": 656912, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ce95c01cbd4f90f014d988ae5c8a422d?s=128&d=identicon&r=PG", "display_name": "orome", "link": "https://stackoverflow.com/users/656912/orome"}, "edited": false, "score": 0, "creation_date": 1540661351, "post_id": 53024485, "comment_id": 92950910, "body": "So, though in general one approach here might be to <a href=\"https://stackoverflow.com/a/47065610/656912\">conditionally exclude it</a> for later GHC, in this case that&#39;s unnecessary (since all the import is doing is grabbing the same implementation that&#39;s already there from <code>GHC.Base</code>?"}, {"owner": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "reply_to_user": {"reputation": 35444, "user_id": 656912, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ce95c01cbd4f90f014d988ae5c8a422d?s=128&d=identicon&r=PG", "display_name": "orome", "link": "https://stackoverflow.com/users/656912/orome"}, "edited": false, "score": 0, "creation_date": 1540661460, "post_id": 53024485, "comment_id": 92950935, "body": "Yes, you could simply leave the <code>import Data.Monoid ((&lt;&gt;))</code> in your code."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1540672657, "post_id": 53024485, "comment_id": 92953901, "body": "May I suggest you make headings a bit less in-the-face in the future? (<code>###</code> instead of <code>#</code>.)"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1540673268, "post_id": 53024485, "comment_id": 92954039, "body": "@leftaroundabout Arguably, that&#39;s an issue for the Markdown renderer; top-level headers <i>should</i> be used before lower-level headers."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1540673409, "post_id": 53024485, "comment_id": 92954081, "body": "@chepner Top-level headers should be used for the main page layout. <code>&lt;h1&gt;</code> for the question title and... well, that&#39;s basically it; then <code>&lt;h2&gt;</code> would introduce the individual answers and each answer is subdivided with <code>&lt;h3&gt;</code>s and <code>&lt;h4&gt;</code>s. What you could argue is that <code>#</code> and <code>===</code> should translate straight to <code>&lt;h3&gt;</code> rather than <code>&lt;h1&gt;</code>, but here we are. For a really long answer it could make sense to use <code>&lt;h1&gt;</code> and <code>&lt;h2&gt;</code> to divide it into \u201cchapters\u201d, but not for one like this."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1540673670, "post_id": 53024485, "comment_id": 92954133, "body": "The other option would be to simply use <code>**...**</code> to add some formatting, but I wouldn&#39;t skip a level of headings just to tweak the appearance."}, {"owner": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "edited": false, "score": 1, "creation_date": 1540674049, "post_id": 53024485, "comment_id": 92954223, "body": "Better with the headings now?"}], "tags": [], "owner": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "is_accepted": true, "score": 8, "last_activity_date": 1540673833, "last_edit_date": 1540673833, "creation_date": 1540661029, "answer_id": 53024485, "question_id": 53024461, "link": "https://stackoverflow.com/questions/53024461/why-do-i-need-data-monoid-only-for-older-ghc/53024485#53024485", "title": "Why do I need Data.Monoid.(&lt;&gt;) only for older GHC?", "body": "<h3>Why is this?</h3>\n\n<p>Because of the <a href=\"https://prime.haskell.org/wiki/Libraries/Proposals/SemigroupMonoid\" rel=\"nofollow noreferrer\">Semigroup Monoid Proposal</a></p>\n\n<h3>Has <code>(&lt;&gt;)</code> been implemented elsewhere?</h3>\n\n<p>Yes it got defined in <code>GHC.Base</code>:</p>\n\n<pre><code>[nix-shell:~]$ ghci\nGHCi, version 8.4.3: http://www.haskell.org/ghc/  :? for help\nPrelude&gt; :t (&lt;&gt;)\n(&lt;&gt;) :: Semigroup a =&gt; a -&gt; a -&gt; a\nPrelude&gt; :info (&lt;&gt;)\nclass Semigroup a where\n  (&lt;&gt;) :: a -&gt; a -&gt; a\n  ...\n        -- Defined in \u2018GHC.Base\u2019\ninfixr 6 &lt;&gt;\nPrelude&gt;\n</code></pre>\n\n<h3>What are the consequences of doing this import for later GHC, where it is unnecessary?</h3>\n\n<p>As of now, there are none, as <code>Data.Monoid</code> reexports <code>(&lt;&gt;)</code>. If I read the proposal correctly, there are no plans of removing that reexport.</p>\n\n<h3>Can one do this import conditionally for older GHC only?</h3>\n\n<p>Yes, via CPP see here <a href=\"https://stackoverflow.com/a/47065610/656912\">conditional exclude it</a> thanks to orome.</p>\n\n<p>As <code>Semigroup</code> became a superclass of <code>Monoid</code> in Phase 2b of the proposal and that was done in GHC 8.4, you can check for the version of base being bigger than 4.11.0.0, as you can look up <a href=\"https://wiki.haskell.org/Base_package\" rel=\"nofollow noreferrer\">here</a>.</p>\n"}], "owner": {"reputation": 35444, "user_id": 656912, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ce95c01cbd4f90f014d988ae5c8a422d?s=128&d=identicon&r=PG", "display_name": "orome", "link": "https://stackoverflow.com/users/656912/orome"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 121, "favorite_count": 0, "accepted_answer_id": 53024485, "answer_count": 1, "score": 0, "last_activity_date": 1540673833, "creation_date": 1540660865, "question_id": 53024461, "link": "https://stackoverflow.com/questions/53024461/why-do-i-need-data-monoid-only-for-older-ghc", "title": "Why do I need Data.Monoid.(&lt;&gt;) only for older GHC?", "body": "<p>In my <a href=\"https://hackage.haskell.org/package/crypto-enigma\" rel=\"nofollow noreferrer\">Haskell package</a> <a href=\"https://travis-ci.org/orome/crypto-enigma-hs/builds/447136359\" rel=\"nofollow noreferrer\">builds</a> prior to GHC 8.4, I need to</p>\n\n<pre><code>import Data.Monoid ((&lt;&gt;))\n</code></pre>\n\n<p>to <a href=\"https://travis-ci.org/orome/crypto-enigma-hs/jobs/447136365#L479\" rel=\"nofollow noreferrer\">avoid</a></p>\n\n<pre><code>\u2022 Variable not in scope:\n    (&lt;&gt;)\n</code></pre>\n\n<p>while from GHC 8.4 on, I get no error of I exclude this import.</p>\n\n<p>Why is this? Has <code>(&lt;&gt;)</code> been implemented elsewhere? What are the consequences of doing this import for later GHC, where it is unnecessary? Can conditional import this for only for older GHC?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 4, "creation_date": 1540657486, "post_id": 53023885, "comment_id": 92949888, "body": "Tip: write out the types of the functions you want to write before you write them."}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 2, "creation_date": 1540657825, "post_id": 53023885, "comment_id": 92949976, "body": "I can only make this code work by explicitly giving <code>fight</code> a rank-2 type. The code works, but Haskell can&#39;t automatically derive a type for it."}, {"owner": {"reputation": 333, "user_id": 1285245, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e317ba4a8b9c7283005e70d8b598a5df?s=128&d=identicon&r=PG", "display_name": "user1285245", "link": "https://stackoverflow.com/users/1285245/user1285245"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1541001411, "post_id": 53023885, "comment_id": 93071908, "body": "@melpomene  how do you give &quot;fight&quot; a rank-2 type? I tried but GHC still complains about some type error."}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1541026273, "post_id": 53023885, "comment_id": 93082725, "body": "@user1285245 See Dan Robertson&#39;s answer with <code>type Robot = forall a. (RobotInfo -&gt; a) -&gt; a</code>."}], "answers": [{"tags": [], "owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "is_accepted": true, "score": 8, "last_activity_date": 1540680178, "last_edit_date": 1540680178, "creation_date": 1540661942, "answer_id": 53024604, "question_id": 53023885, "link": "https://stackoverflow.com/questions/53023885/haskell-cannot-construct-the-infinite-type/53024604#53024604", "title": "Haskell - cannot construct the infinite type", "body": "<p>Let\u2019s try to add type signatures and see if we can work out what is going on:</p>\n\n<pre><code>type RobotInfo = (String,Int,Int)\ntype Robot = forall a. (RobotInfo -&gt; a) -&gt; a\n-- robot has 3 properties: name/attack/hp\nrobot :: RobotInfo -&gt; Robot\nrobot (name,attack,hp)  = \\message -&gt; message (name,attack,hp)\n\n-- getters\nname :: RobotInfo -&gt; String\nname (n,_,_) = n\nattack, hp :: RobotInfo -&gt; Int\nattack (_,a,_) = a\nhp (_,_,hp) = hp\ngetName :: Robot -&gt; String\ngetName aRobot = aRobot name\ngetAttack, getHP :: Robot -&gt; Int\ngetAttack aRobot = aRobot attack\ngetHP aRobot = aRobot hp\n\n-- setters\nsetName :: Robot -&gt; String -&gt; Robot\nsetName aRobot newName = aRobot (\\(n,a,h) -&gt; robot (newName,a,h))\nsetAttack, setHP :: Robot -&gt; Int -&gt; Robot\nsetAttack aRobot newAttack = aRobot (\\(n,a,h) -&gt; robot (n,newAttack,h))\nsetHP aRobot newHP = aRobot (\\(n,a,h) -&gt; robot (n,a,newHP))\n\nprintRobot :: Robot -&gt; String\nprintRobot aRobot = aRobot (\\(n,a,h) -&gt; n ++ \" attack:\" ++ (show a) ++ \" hp:\"++ (show h))\nfight :: Robot -&gt; Robot -&gt; Robot\nfight aRobot1 aRobot2 = setHP aRobot2 (getHP aRobot2 - getAttack aRobot1)\n</code></pre>\n\n<p>So we look at the types and see a few things</p>\n\n<ol>\n<li>If we give types names then it can be easier to understand what functions are supposed to do</li>\n<li>The type <code>Robot</code> is very weird. Why is a robot a function that gives you the state of the robot and then returns whatever you return? Instead, why is a robot not just the state of the robot, which is almost exactly the same but a lot less stupid.</li>\n<li>If one looks at the type of <code>fight</code> it is unclear what this means. I have to read the function to determine that the result is the new state of the second Robot after being hit by the first.</li>\n</ol>\n\n<p>What was your type error from?</p>\n\n<p>Well without type signatures Haskell infers some types (which aren\u2019t higher ranked):</p>\n\n<pre><code>robot :: (a,b,c) -&gt; ((a,b,c) -&gt; d) -&gt; d\nhp :: (a,b,c) -&gt; c\ngetAttack :: ((a,b,c) -&gt; b) -&gt; b\ngetHP :: ((a,b,c) -&gt; c) -&gt; c\nsetHP :: ((a,b,c) -&gt; ((a,b,g) -&gt; h) -&gt; h) -&gt; g -&gt; ((a,b,g) -&gt; h) -&gt; h\n</code></pre>\n\n<p>This type already looks crazy but note that Haskell has inferred that <code>setHP</code> does not take a general robot but rather a specialised robot that can only give you back a new sort-of-robot with whatever you give it. What about when it tries to work out the type of <code>fight</code>?</p>\n\n<pre><code>fight aRobot1 aRobot2 =\n  setHP aRobot2 (getHP aRobot2 - getAttack aRobot1)\n</code></pre>\n\n<ul>\n<li>Well because of the call to <code>getAttack</code>, we infer that <code>aRobot1 :: (x,y,z) -&gt; y</code>.</li>\n<li>Because of <code>getHP</code> we get <code>aRobot2 :: (a,b,c) -&gt; c</code></li>\n<li>Because of <code>-</code> we get that <code>c~y</code> (they are the same type) and that <code>Num c</code>. So we now have <code>aRobot1 :: (x,c,z) -&gt; c</code></li>\n<li>Now we have the call to <code>setHP</code> and that suggests that <code>Robot2 :: (p,q,r) -&gt; ((p,q,c) -&gt; h) -&gt; h</code> and we need to reconcile these types.</li>\n<li>So we match up the first arguments: <code>p~a</code>, <code>q~b</code>, <code>r~c</code>. Now we need to unify the results: <code>c</code> from the use of <code>getHP</code> with <code>(a,b,c) -&gt; h</code>.</li>\n<li>So <code>c</code> is the same as <code>(a,b,c) -&gt; h</code> is the same as <code>(a,b,(a,b,c) -&gt; h) -&gt; h</code> and so on.</li>\n</ul>\n\n<p>I don\u2019t have ghc to hand but I don\u2019t really understand why you didn\u2019t get a type error when you tried to define <code>fight</code>. (Does anyone else know?)</p>\n\n<p>Anyway here is how I would recommend that you write your program (in a non bizarre weird way):</p>\n\n<pre><code>data Robot = Robot { name :: String, attack :: Int, hp :: Int }\n-- no need to define getters because we get them for free and no setters because we don\u2019t use them\nrobot (name,attack,hp) = Robot name attack hp\n\ninstance (Show Robot) where\n  show (Robot n a h) = n ++ \" attack:\" ++ (show a) ++ \" hp:\"++ (show h)\n\n-- fight r1 r2 returns r2 after being attacked by r1\nfights robot1 robot2 = robot2 { hp = hp robot2 - attack robot1 }\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2139, "user_id": 465100, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/debe4d3217980e495cf1f15e7e4b4c9f?s=128&d=identicon&r=PG", "display_name": "Artem Pelenitsyn", "link": "https://stackoverflow.com/users/465100/artem-pelenitsyn"}, "is_accepted": false, "score": 2, "last_activity_date": 1541004782, "creation_date": 1541004782, "answer_id": 53088487, "question_id": 53023885, "link": "https://stackoverflow.com/questions/53023885/haskell-cannot-construct-the-infinite-type/53088487#53088487", "title": "Haskell - cannot construct the infinite type", "body": "<p>This example is taken from Lesson 10 (Unit 1) of Will Kurt's \u201cGet Programming With Haskell\u201d. The task there is to fake the object-oriented programming languages model of \u201csending messages\u201d to objects with a kind of CPS'ed approach: an object is a function which receives continuation and feeds it with the values of the object's fields:</p>\n\n<pre><code>type ObjectProperties = (Prop1, Prop2, ...)\nobject_constructor objprops = \\message -&gt; message objprops\n</code></pre>\n\n<p>As it is just first unit of the book, no type features besides functons and tuples are used. So, solving the puzzle with a data type is a bit of cheating.</p>\n\n<p>The code provided by OP is almost just to the source with one exception: the implementation of <code>fight</code> function. In the book it looks like this:</p>\n\n<pre><code>damage aRobot attackDamage = aRobot (\\(n,a,h) -&gt;\n                                      robot (n,a,h-attackDamage))\n\nfight aRobot defender = damage defender attack\n  where attack = if (getHP aRobot) &gt; 10\n                 then getAttack aRobot\n                 else 0\n</code></pre>\n\n<p>(The full source code of the example can be downloaded from the <a href=\"https://www.manning.com/books/get-programming-with-haskell\" rel=\"nofollow noreferrer\">book's webpage</a>.)</p>\n\n<p>The example typechecks and works as expected. I agree that it is a bit uncomfortable to read this without the type annotations, but I think that the idea should be clear.</p>\n"}], "owner": {"reputation": 333, "user_id": 1285245, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e317ba4a8b9c7283005e70d8b598a5df?s=128&d=identicon&r=PG", "display_name": "user1285245", "link": "https://stackoverflow.com/users/1285245/user1285245"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 807, "favorite_count": 0, "accepted_answer_id": 53024604, "answer_count": 2, "score": 1, "last_activity_date": 1541004782, "creation_date": 1540656874, "question_id": 53023885, "link": "https://stackoverflow.com/questions/53023885/haskell-cannot-construct-the-infinite-type", "title": "Haskell - cannot construct the infinite type", "body": "<p>I am following the Manning Haskell book to compose functions of robots fighting with lamdas: </p>\n\n<pre><code>-- robot has 3 properties: name/attack/hp\nrobot (name,attack,hp)  = \\message -&gt; message (name,attack,hp)\n\n-- getters\nname (n,_,_) = n\nattack (_,a,_) = a\nhp (_,_,hp) = hp\ngetName aRobot = aRobot name\ngetAttack aRobot = aRobot attack\ngetHP aRobot = aRobot hp\n\n-- setters\nsetName aRobot newName = aRobot (\\(n,a,h) -&gt; robot (newName,a,h))\nsetAttack aRobot newAttack = aRobot (\\(n,a,h) -&gt; robot (n,newAttack,h))\nsetHP aRobot newHP = aRobot (\\(n,a,h) -&gt; robot (n,a,newHP))\n\nprintRobot aRobot = aRobot (\\(n,a,h) -&gt; n ++ \" attack:\" ++ (show a) ++ \" hp:\"++ (show h))\nfight aRobot1 aRobot2 = setHP aRobot2 (getHP aRobot2 - getAttack aRobot1)\n</code></pre>\n\n<p>The fight funciton returns a copy of aRobot2(the defender) with deducted HP.\nNow load the code in GHCi and get this:</p>\n\n<pre><code>*Main&gt; robot1 = robot (\"aaa\", 20, 100)\n*Main&gt; robot2 = robot (\"bbb\", 15, 120)\n*Main&gt; robot2AfterAttack = fight robot1 robot2\n\n&lt;interactive&gt;:36:34: error:\n    \u2022 Occurs check: cannot construct the infinite type:\n        c1 ~ (([Char], Integer, c1) -&gt; t0) -&gt; t0\n      Expected type: (([Char], Integer,\n                       (([Char], Integer, c1) -&gt; t0) -&gt; t0)\n                      -&gt; (([Char], Integer, c1) -&gt; t0) -&gt; t0)\n                     -&gt; c1\n        Actual type: (([Char], Integer,\n                       (([Char], Integer, c1) -&gt; t0) -&gt; t0)\n                      -&gt; c1)\n                     -&gt; c1\n    \u2022 In the second argument of \u2018fight\u2019, namely \u2018robot2\u2019\n      In the expression: fight robot1 robot2\n      In an equation for \u2018robot2AfterAttack\u2019:\n          robot2AfterAttack = fight robot1 robot2\n    \u2022 Relevant bindings include\n        robot2AfterAttack :: c1 (bound at &lt;interactive&gt;:36:1)\n</code></pre>\n\n<p>I cannot figure out what goes wrong here.</p>\n"}, {"tags": ["haskell", "applicative"], "comments": [{"owner": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "edited": false, "score": 3, "creation_date": 1540654565, "post_id": 53023475, "comment_id": 92949047, "body": "Of course, just provide a named concatenation function for your <code>List</code> type and use that instead of <code>&lt;&gt;</code>. But why?"}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 2, "last_activity_date": 1540658406, "last_edit_date": 1540658406, "creation_date": 1540656480, "answer_id": 53023818, "question_id": 53023475, "link": "https://stackoverflow.com/questions/53023475/instance-applicative-on-datatype-list/53023818#53023818", "title": "Instance applicative on datatype `List`", "body": "<p><strong>Yes</strong>. You here use the <code>(&lt;&gt;)</code> function in your definition:</p>\n\n<pre><code>instance Applicative List where\n    pure x = Cons x Nil\n    Nil &lt;*&gt; _ = Nil\n    _ &lt;*&gt; Nil = Nil\n    Cons f fs &lt;*&gt; Cons x xs = Cons (f x) ((fmap f xs) <b>&lt;&gt;</b> (fs &lt;*&gt; xs))\n    --                                               ^ call to the (&lt;&gt;) function</code></pre>\n\n<p>so you can replace this with a call to another function:</p>\n\n<pre><code>instance Applicative List where\n    pure x = Cons x Nil\n    Nil &lt;*&gt; _ = Nil\n    _ &lt;*&gt; Nil = Nil\n    Cons f fs &lt;*&gt; Cons x xs = Cons (f x) (<b>append</b> (fmap f xs) (fs &lt;*&gt; xs))\n        where append = ...</code></pre>\n\n<p>Note however that here you probably have implement a different function than the one you intend here. Here you implemented a function that for two lists <code>[f1, f2, f3]</code> and <code>[x1, x2, x3, x4]</code>, will calculate a list with the \"upper triangle\" of the matrix of <code>fs</code> and <code>xs</code>, so this will result in <code>[f1 x1, f1 x2, f1 x3, f1 x4, f2 x2, f2 x3, f2 x4, f3 x3, f3 x4]</code>. Note that here <code>f2 x1</code>, <code>f3 x1</code> and <code>f3 x2</code> are missing.</p>\n"}, {"tags": [], "owner": {"reputation": 4234, "user_id": 4942760, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f322d06b4f3e34278f29a954e0f38cb1?s=128&d=identicon&r=PG&f=1", "display_name": "Dan Robertson", "link": "https://stackoverflow.com/users/4942760/dan-robertson"}, "is_accepted": false, "score": 0, "last_activity_date": 1540659097, "creation_date": 1540659097, "answer_id": 53024208, "question_id": 53023475, "link": "https://stackoverflow.com/questions/53023475/instance-applicative-on-datatype-list/53024208#53024208", "title": "Instance applicative on datatype `List`", "body": "<p>Well you use something called <code>&lt;&gt;</code> and Haskell knows that this thing (specifically the definition of <code>&lt;&gt;</code> that you have imported as you haven\u2019t defined the operator anywhere) requires a semigroup. The solution is to use a different name or define it locally:</p>\n\n<pre><code>Cons f fs &lt;*&gt; xs = (f &lt;$&gt; xs) &lt;&gt; (fs &lt;*&gt; xs)\n    where xs &lt;&gt; Nil = xs\n          Nil &lt;&gt; xs = xs\n          Cons x xs &lt;&gt; ys = Cons x (xs &lt;&gt; ys)\n</code></pre>\n"}], "owner": {"reputation": 1528, "user_id": 1516794, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/0aa31034e2c59f34d63141791746ec35?s=128&d=identicon&r=PG", "display_name": "cmal", "link": "https://stackoverflow.com/users/1516794/cmal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 431, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1540659097, "creation_date": 1540654241, "question_id": 53023475, "link": "https://stackoverflow.com/questions/53023475/instance-applicative-on-datatype-list", "title": "Instance applicative on datatype `List`", "body": "<p>The Haskell book Haskell Programming from First Principles has an exercise which asks me to instance <code>Applicative</code> on the datatype <code>List</code>:</p>\n\n<pre><code>data List a =\n  Nil\n  | Cons a (List a)\n  deriving (Eq, Show)\n\ninstance Functor List where\n  fmap _ Nil = Nil\n  fmap f (Cons x xs) = Cons (f x) (fmap f xs)\n\ninstance Applicative List where\n  pure x = Cons x Nil\n  Nil &lt;*&gt; _ = Nil\n  _ &lt;*&gt; Nil = Nil\n  Cons f fs &lt;*&gt; Cons x xs = Cons (f x) ((fmap f xs) &lt;&gt; (fs &lt;*&gt; xs))\n</code></pre>\n\n<p>I wrote the above code and found I must first instance <code>Semigroup</code> to let the <code>&lt;&gt;</code> operator work.</p>\n\n<p>Can this be implemented without instance <code>Semigroup</code> first?</p>\n"}, {"tags": ["haskell", "haskell-time"], "answers": [{"comments": [{"owner": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "edited": false, "score": 1, "creation_date": 1540654454, "post_id": 53023463, "comment_id": 92949018, "body": "You should probably use <a href=\"https://hackage.haskell.org/package/time-1.9.2/docs/Data-Time-Clock.html#v:secondsToDiffTime\" rel=\"nofollow noreferrer\">secondsToDiffTime</a> or <a href=\"https://hackage.haskell.org/package/time-1.9.2/docs/Data-Time-Clock.html#v:picosecondsToDiffTime\" rel=\"nofollow noreferrer\">picosecondsToDiffTime</a> instead <code>toEnum</code>."}], "tags": [], "owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "is_accepted": true, "score": 2, "last_activity_date": 1540654657, "last_edit_date": 1540654657, "creation_date": 1540654188, "answer_id": 53023463, "question_id": 53023462, "link": "https://stackoverflow.com/questions/53023462/how-do-i-create-a-utctime-value-using-the-time-library-in-haskell/53023463#53023463", "title": "How do I create a UTCTime value using the time library in Haskell?", "body": "<pre><code>import Data.Time.Calendar\nimport Data.Time\n\nexample :: UTCTime\nexample = UTCTime (fromGregorian 2018 10 27) (secondsToDiffTime 0)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 3063, "user_id": 439578, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e032fbe640b2234c8dce244907b99eab?s=128&d=identicon&r=PG", "display_name": "Manoj R", "link": "https://stackoverflow.com/users/439578/manoj-r"}, "is_accepted": false, "score": 2, "last_activity_date": 1540817827, "creation_date": 1540817827, "answer_id": 53046014, "question_id": 53023462, "link": "https://stackoverflow.com/questions/53023462/how-do-i-create-a-utctime-value-using-the-time-library-in-haskell/53046014#53046014", "title": "How do I create a UTCTime value using the time library in Haskell?", "body": "<p>Putting it here for reference. Check two methods parseTimeM and parseTimeOnError. Both you can get from <a href=\"https://hackage.haskell.org/package/time-1.8.0.3/docs/Data-Time-Format.html\" rel=\"nofollow noreferrer\">here</a>.\nparseTimeM is safe version while parseTimeOnError is unsafe (throws exception). </p>\n\n<p>I had used parseTimeOnError before. You will need to convert the given information in string in specific format and call the function with format and the string as input. </p>\n\n<pre><code>import Data.Time\nimport Data.Time.Format\nimport Data.Time.Clock\nimport Text.Printf\n\ngetDateString :: Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int -&gt; String\ngetDateString year month day hour minute = (printf \"%02d\" month) ++ \"/\" ++ (printf \"%02d\" day) ++ \"/\" ++ show year ++ \" \" ++ show hour ++ \":\" ++ show minute\n\ngetTheUTCDate :: String -&gt; UTCTime \ngetTheUTCDate strDate = parseTimeOrError True defaultTimeLocale \"%D %R\" strDate\n\nmain = do \n          let p = getDateString 12 7 6 23 45 \n          print (\"Hello \", \" \", getTheUTCDate p)\n</code></pre>\n"}], "owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 391, "favorite_count": 0, "accepted_answer_id": 53023463, "answer_count": 2, "score": 0, "last_activity_date": 1540817827, "creation_date": 1540654175, "question_id": 53023462, "link": "https://stackoverflow.com/questions/53023462/how-do-i-create-a-utctime-value-using-the-time-library-in-haskell", "title": "How do I create a UTCTime value using the time library in Haskell?", "body": "<p>I've got a year, month, day, hour and minute value (all of them are of type Int) - how can I convert these to a <code>UTCTime</code>?</p>\n\n<p>Just as <a href=\"https://stackoverflow.com/questions/51465700/how-do-i-create-a-utctime-from-int-values-using-the-thyme-library-in-haskell\">How do I create a UTCTime from Int values, using the thyme library in Haskell?</a> but using the <code>time</code> library instead.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 4, "creation_date": 1540652863, "post_id": 53023006, "comment_id": 92948598, "body": "I would say the <code>-XSafe</code> syntax is <i>a way to emulate a <code>{-# LANGUAGE Safe #-}</code> pragma from the GHC command line</i>. Thus <code>{-# OPTIONS_GHC -XSafe #-}</code> seems pretty silly."}], "answers": [{"comments": [{"owner": {"reputation": 35444, "user_id": 656912, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ce95c01cbd4f90f014d988ae5c8a422d?s=128&d=identicon&r=PG", "display_name": "orome", "link": "https://stackoverflow.com/users/656912/orome"}, "edited": false, "score": 0, "creation_date": 1540656382, "post_id": 53023368, "comment_id": 92949572, "body": "And is this generally preferred over, say <code>library.default-extensions: Safe</code> in a project&#39;s <code>.cabal</code>?"}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 4, "last_activity_date": 1540653523, "creation_date": 1540653523, "answer_id": 53023368, "question_id": 53023006, "link": "https://stackoverflow.com/questions/53023006/what-is-the-preferred-idiom-in-haskell-for-language-options-vs-command-line/53023368#53023368", "title": "What is the preferred idiom in Haskell for language options vs command line?", "body": "<p><code>{-# LANGUAGE ... #-}</code> is the <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch12.html#x19-19100012.3\" rel=\"nofollow noreferrer\">standard</a> way to specify language extensions.</p>\n"}], "owner": {"reputation": 35444, "user_id": 656912, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ce95c01cbd4f90f014d988ae5c8a422d?s=128&d=identicon&r=PG", "display_name": "orome", "link": "https://stackoverflow.com/users/656912/orome"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 60, "favorite_count": 2, "closed_date": 1540710715, "accepted_answer_id": 53023368, "answer_count": 1, "score": 0, "last_activity_date": 1540656430, "creation_date": 1540651396, "last_edit_date": 1540656430, "question_id": 53023006, "link": "https://stackoverflow.com/questions/53023006/what-is-the-preferred-idiom-in-haskell-for-language-options-vs-command-line", "closed_reason": "Opinion-based", "title": "What is the preferred idiom in Haskell for language options vs command line?", "body": "<p>Is there a preferred idiom in Haskell for expressing language options or other features that can be expressed on the command line? For example, should one use</p>\n\n<pre><code>{-# OPTIONS_GHC -XSafe #-}\n</code></pre>\n\n<p>or</p>\n\n<pre><code>{-# LANGUAGE Safe #-}\n</code></pre>\n\n<p>Are there any material difference between these or similar options?</p>\n"}, {"tags": ["haskell", "ghci", "haddock"], "owner": {"reputation": 4761, "user_id": 2277395, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/09841ca82e49f998ea0b8f159dea87c1?s=128&d=identicon&r=PG", "display_name": "Martin Drautzburg", "link": "https://stackoverflow.com/users/2277395/martin-drautzburg"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 65, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1540647671, "creation_date": 1540647671, "question_id": 53022461, "link": "https://stackoverflow.com/questions/53022461/ghci-info-and-haddock-on-type-synonyms", "title": "ghci :info and haddock on type synonyms", "body": "<p>I have a type synonym like</p>\n\n<pre><code>type Events t b = Tb.T t b\n</code></pre>\n\n<p>The underlying type <code>Tb.T</code> is an instance of many typeclasses, e.g.</p>\n\n<pre><code>instance [safe] (Eq time, Eq body) =&gt; Eq (Tb.T time body)\ninstance [safe] Functor (Tb.T time)\n..\n</code></pre>\n\n<p>My type synonym (of course) inherits all these instances. E.g. it is also a Functor:</p>\n\n<pre><code>\u03bb&gt; :t flip fmap (undefined :: Events Int String)\nflip fmap (undefined :: Events Int String)\n  :: (String -&gt; b) -&gt; Tb.T Int b\n</code></pre>\n\n<p>but this fact is not shown in ghci's <code>:info</code> command nor in the generated haddock documentation. Also, I'd rather see the return type as <code>Events Int b</code> instead of <code>Tb.T Int b</code>.</p>\n\n<p>Is there a way to circumvent this?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 1528, "user_id": 1516794, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/0aa31034e2c59f34d63141791746ec35?s=128&d=identicon&r=PG", "display_name": "cmal", "link": "https://stackoverflow.com/users/1516794/cmal"}, "edited": false, "score": 0, "creation_date": 1540647627, "post_id": 53022425, "comment_id": 92947125, "body": "I added <code>instance Semigroup Bull where _ &lt;&gt; _ = Fools</code> above the <code>Monoid</code> instantiation and the first error disappeared. But how to fix the second error?"}, {"owner": {"reputation": 1528, "user_id": 1516794, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/0aa31034e2c59f34d63141791746ec35?s=128&d=identicon&r=PG", "display_name": "cmal", "link": "https://stackoverflow.com/users/1516794/cmal"}, "edited": false, "score": 0, "creation_date": 1540647744, "post_id": 53022425, "comment_id": 92947153, "body": "Sorry I lost a line <code>instance EqProp Bull where (=-=) = eq</code>"}], "answers": [{"tags": [], "owner": {"reputation": 1528, "user_id": 1516794, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/0aa31034e2c59f34d63141791746ec35?s=128&d=identicon&r=PG", "display_name": "cmal", "link": "https://stackoverflow.com/users/1516794/cmal"}, "is_accepted": false, "score": 0, "last_activity_date": 1540647828, "creation_date": 1540647828, "answer_id": 53022484, "question_id": 53022425, "link": "https://stackoverflow.com/questions/53022425/data-constructor-not-in-scope-monoid-bull-testbatch/53022484#53022484", "title": "Data constructor not in scope: Monoid :: Bull -&gt; TestBatch", "body": "<p>Sorry for the second error:</p>\n\n<p>I lost a line </p>\n\n<pre><code>instance EqProp Bull where (=-=) = eq\n</code></pre>\n\n<p>The first error:</p>\n\n<p>I added </p>\n\n<pre><code>instance Semigroup Bull where _ &lt;&gt; _ = Fools\n</code></pre>\n\n<p>above the <code>Monoid</code> instantiation and the first error disappeared. </p>\n"}, {"tags": [], "owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "is_accepted": true, "score": 2, "last_activity_date": 1540648079, "creation_date": 1540648079, "answer_id": 53022508, "question_id": 53022425, "link": "https://stackoverflow.com/questions/53022425/data-constructor-not-in-scope-monoid-bull-testbatch/53022508#53022508", "title": "Data constructor not in scope: Monoid :: Bull -&gt; TestBatch", "body": "<p>Looks like the definition of <code>Monoid</code> has changed since the book was written. As <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Monoid.html#t:Monoid\" rel=\"nofollow noreferrer\">the documentation states</a>:</p>\n\n<blockquote>\n  <p><strong>NOTE</strong>: <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Semigroup\" rel=\"nofollow noreferrer\">Semigroup</a> is a superclass of <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Monoid.html#t:Monoid\" rel=\"nofollow noreferrer\">Monoid</a> since <em>base-4.11.0.0</em>.</p>\n</blockquote>\n\n<p>The instance should now look like this:</p>\n\n<pre><code>instance Monoid Bull where\n  mempty = Fools\n\ninstance Semigroup Bull where\n  _ &lt;&gt; _ = Fools\n</code></pre>\n\n<p>(<code>mappend</code> now simply calls <code>&lt;&gt;</code>.)</p>\n\n<p>As for the <code>EqProp</code> instance, it can be derived from <code>Eq</code> as follows:</p>\n\n<pre><code>instance EqProp Bull where\n  (=-=) = eq\n</code></pre>\n"}], "owner": {"reputation": 1528, "user_id": 1516794, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/0aa31034e2c59f34d63141791746ec35?s=128&d=identicon&r=PG", "display_name": "cmal", "link": "https://stackoverflow.com/users/1516794/cmal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 97, "favorite_count": 0, "accepted_answer_id": 53022508, "answer_count": 2, "score": 0, "last_activity_date": 1540648079, "creation_date": 1540647474, "question_id": 53022425, "link": "https://stackoverflow.com/questions/53022425/data-constructor-not-in-scope-monoid-bull-testbatch", "title": "Data constructor not in scope: Monoid :: Bull -&gt; TestBatch", "body": "<p>The Haskell book Haskell Programming From First Principles page 1086 has an example to demonstrate <code>False</code> should not be used as <code>mempty</code> of <code>Monoid</code>, but the code on this page does not compile, and I cannot figure out why. The code is here:</p>\n\n<pre><code>module BadMonoid where\n\nimport Data.Monoid\nimport Test.QuickCheck\nimport Test.QuickCheck.Checkers\nimport Test.QuickCheck.Classes\n\ndata Bull =\n  Fools\n  | Twoo\n  deriving (Eq, Show)\n\ninstance Arbitrary Bull where\n  arbitrary =\n    frequency [(1, return Fools)\n              ,(1, return Twoo)]\n\ninstance Monoid Bull where\n  mempty = Fools\n  mappend _ _ = Fools\n\nmain :: IO ()\nmain = do\n  quickBatch (monoid Twoo)\n</code></pre>\n\n<p>The syntax checker shows two errors of this code:</p>\n\n<pre><code>\u2022 No instance for (Semigroup Bull)\n    arising from the superclasses of an instance declaration\n\u2022 In the instance declaration for \u2018Monoid Bull\u2019\n</code></pre>\n\n<p>and</p>\n\n<pre><code>\u2022 No instance for (EqProp Bull) arising from a use of \u2018monoid\u2019\n\u2022 In the first argument of \u2018quickBatch\u2019, namely \u2018(monoid Twoo)\u2019\n  In a stmt of a 'do' block: quickBatch (monoid Twoo)\n  In the expression: do quickBatch (monoid Twoo)\n</code></pre>\n\n<p>loading this in <code>stack ghci</code> repl shows:</p>\n\n<pre><code>[1 of 1] Compiling BadMonoid        ( src/Main.hs, interpreted )\n\nsrc/Main.hs:18:10: error:\n    \u2022 No instance for (Semigroup Bull)\n        arising from the superclasses of an instance declaration\n    \u2022 In the instance declaration for \u2018Monoid Bull\u2019\n   |\n18 | instance Monoid Bull where\n   |          ^^^^^^^^^^^\n\nsrc/Main.hs:39:15: error:\n    \u2022 No instance for (EqProp Bull) arising from a use of \u2018monoid\u2019\n    \u2022 In the first argument of \u2018quickBatch\u2019, namely \u2018(monoid Twoo)\u2019\n      In a stmt of a 'do' block: quickBatch (monoid Twoo)\n      In the expression: do quickBatch (monoid Twoo)\n   |\n39 |   quickBatch (monoid Twoo)\n   |               ^^^^^^^^^^^\n</code></pre>\n\n<p>Can you help me to fix this code? According to the book, the actual result should be:</p>\n\n<pre><code>Prelude&gt; main\nmonoid:\n  left  identity: *** Failed! Falsifiable (after 1 test):\nTwoo\n  right identity: *** Failed! Falsifiable (after 2 tests):\nTwoo\n  associativity:  +++ OK, passed 500 tests.\n</code></pre>\n\n<p>Thanks!</p>\n"}, {"tags": ["haskell", "category-theory"], "answers": [{"comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1540646433, "post_id": 53022213, "comment_id": 92946822, "body": "I am not sure I am satisfied with this, since <code>fmap</code> appears in the join laws.  Imagine back in the days when <code>Functor</code> was not a superclass of <code>Monad</code>.  That is, I suspect &quot;the laws .. correspond to those above&quot; elides some technical dragons which undermine this argument."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1540646734, "post_id": 53022213, "comment_id": 92946899, "body": "@luqui I used that to sweep parametricity under the rug :-P. The OP explicitly mentions &quot;It is well known that every monad is also a functor&quot;, so I only focused on &quot;real&quot; monads, in the mathematical sense. I actually prefer your approach to mine since it clearly shows parametricity in action, and avoids passing through an equivalent axiomatization."}, {"owner": {"reputation": 9111, "user_id": 90088, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/c018f213204496b4bbf481e7c8e6c15c?s=128&d=identicon&r=PG", "display_name": "Bartosz Milewski", "link": "https://stackoverflow.com/users/90088/bartosz-milewski"}, "edited": false, "score": 2, "creation_date": 1541845273, "post_id": 53022213, "comment_id": 93362039, "body": "You are answering a slightly different question. The definition of a monad using <code>join</code> and <code>return</code> also requires <code>fmap</code>. On the other hand, using those three you can define <code>liftM</code>. You&#39;re showing that this <code>liftM</code> is the same as the original <code>fmap</code>. This doesn&#39;t require parametricity. It is true in any category."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1541878498, "post_id": 53022213, "comment_id": 93370795, "body": "this answer answers the question exactly as asked, &quot;how the equivalence of <code>fmap</code> and <code>liftM</code> (<i>defined</i> as <code>liftM f x = x &gt;&gt;= (return . f)</code>) can be derived from [the laws]&quot;. the other question answers a wider question, &quot;is the function <code>liftM</code> with <code>fmap</code>&#39;s type necessarily equivalent to <code>fmap</code>&quot;."}, {"owner": {"reputation": 3875, "user_id": 777775, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/53770527d89baf4424ddc7cbe05707ea?s=128&d=identicon&r=PG", "display_name": "Tom", "link": "https://stackoverflow.com/users/777775/tom"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1542316439, "post_id": 53022213, "comment_id": 93536297, "body": "Thanks, @chi, for showing another useful way to look at it. As opposed to the rules for <code>&gt;&gt;=</code>, the rules for <code>join</code> do tie it to <code>fmap</code>, which makes reaching what we wanted more straightforward, but, as I think @luqui was trying to say, using the equivalence of the two representations here assumes the conclusion (or something equivalent or stronger, e.g. parametricity). Would be nice to see a proof of this equivalence :-)"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 6, "last_activity_date": 1540645950, "creation_date": 1540645950, "answer_id": 53022213, "question_id": 53022087, "link": "https://stackoverflow.com/questions/53022087/do-the-monadic-liftm-and-the-functorial-fmap-have-to-be-equivalent/53022213#53022213", "title": "Do the monadic liftM and the functorial fmap have to be equivalent?", "body": "<p>For this exercise, I found it easier to work with <code>join</code> rather than <code>&gt;&gt;=</code>. A monad can be equivalently defined through <code>return</code> and <code>join</code>, satisfying</p>\n\n<pre><code>1) join . join = join . fmap join\n2) join . return = join . fmap return = id\n</code></pre>\n\n<p>Indeed, <code>join</code> and <code>&gt;&gt;=</code> are inter-definable:</p>\n\n<pre><code>x &gt;&gt;= f = join (fmap f x)\njoin x = x &gt;&gt;= id\n</code></pre>\n\n<p>And the laws you mentioned correspond to those above (I won't prove this).</p>\n\n<p>Then, we have:</p>\n\n<pre><code>liftM f x\n= { def liftM }\nx &gt;&gt;= return . f \n= { def &gt;&gt;= }\njoin (fmap (return . f) x)\n= { def . and $ }\njoin . fmap (return . f) $ x\n= { fmap law }\njoin . fmap return . fmap f $ x\n= { join law 2 }\nid . fmap f $ x\n= { def id, ., $ }\nfmap f x\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 6, "creation_date": 1540653768, "post_id": 53022254, "comment_id": 92948848, "body": "Yup. Parametricity means that functions with the <code>fmap</code> type that take <code>id</code> to <code>id</code> are unique, and from the definition of <code>liftM</code> it follows that <code>liftM id = id</code>, therefore <code>liftM = fmap</code>. Cf. <a href=\"https://stackoverflow.com/a/44106008/2751851\">my answer to a very similar question</a>."}, {"owner": {"reputation": 9111, "user_id": 90088, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/c018f213204496b4bbf481e7c8e6c15c?s=128&d=identicon&r=PG", "display_name": "Bartosz Milewski", "link": "https://stackoverflow.com/users/90088/bartosz-milewski"}, "edited": false, "score": 2, "creation_date": 1541846274, "post_id": 53022254, "comment_id": 93362244, "body": "So, just to clarify: You can define a monad as a type constructor <code>m</code>, with two polymorphic functions <code>&gt;&gt;=</code> and <code>return</code>; and it is automatically a functor, with the action on morphisms defined by <code>liftM</code>. The question is: What if I define another functor, whose action on objects (the type constructor <code>m</code>) is the same, but whose action on morphisms (<code>fmap</code>) is different? You are free to do that in category theory, but if you try to do it in Haskell, you&#39;re limited by parametricity, which tells you that <code>fmap</code> for a given type constructor is unique, as long as it maps identity to identity."}, {"owner": {"reputation": 3875, "user_id": 777775, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/53770527d89baf4424ddc7cbe05707ea?s=128&d=identicon&r=PG", "display_name": "Tom", "link": "https://stackoverflow.com/users/777775/tom"}, "edited": false, "score": 0, "creation_date": 1542317212, "post_id": 53022254, "comment_id": 93536606, "body": "Thanks, @luqui. I was not aware of the law of parametricity, which is quite different in its nature to the laws I mentioned in the question: whereas those &quot;laws&quot; are axioms type constructors are expected to fulfil in order to be functors and monads, this one is actually a theorem, bound to hold regardless of how we define our specific types. I&#39;m quite baffled by all this."}], "tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": false, "score": 10, "last_activity_date": 1541844515, "last_edit_date": 1541844515, "creation_date": 1540646208, "answer_id": 53022254, "question_id": 53022087, "link": "https://stackoverflow.com/questions/53022087/do-the-monadic-liftm-and-the-functorial-fmap-have-to-be-equivalent/53022254#53022254", "title": "Do the monadic liftM and the functorial fmap have to be equivalent?", "body": "<p>What you have missed is the parametericity law, otherwise known as the free theorem. One of the consequences of parametricity is that all polymorphic functions are natural transformations.  Naturality says that any polymorphic function of the form</p>\n\n<pre><code>t :: F a -&gt; G a\n</code></pre>\n\n<p>where <code>F</code> and <code>G</code> are functors, commutes with <code>fmap</code>:</p>\n\n<pre><code>t . fmap f = fmap f . t\n</code></pre>\n\n<p>If we can make something involving <code>liftM</code> that has the form of a natural transformation, then we will have an equation relating <code>liftM</code> and <code>fmap</code>. <code>liftM</code> itself doesn't produce a natural transformation:</p>\n\n<pre><code>liftM :: (a -&gt; b) -&gt; m a -&gt; m b\n              --       ^______^\n              -- these need to be the same\n</code></pre>\n\n<p>But here's an idea, since <code>(a -&gt;)</code> is a functor:</p>\n\n<pre><code>as :: m a\nflip liftM as :: (a -&gt; b) -&gt; m b\n              --  F    b  -&gt; G b\n</code></pre>\n\n<p>Let's try using parametericity on <code>flip liftM m</code>:</p>\n\n<pre><code>flip liftM m . fmap f = fmap f . flip liftM m\n</code></pre>\n\n<p>The former <code>fmap</code> is on the <code>(a -&gt;)</code> functor, where <code>fmap = (.)</code>, so</p>\n\n<pre><code>flip liftM m . (.) f = fmap f . flip liftM m\n</code></pre>\n\n<p>Eta expand</p>\n\n<pre><code>(flip liftM m . (.) f) g = (fmap f . flip liftM m) g\nflip liftM m (f . g)     = fmap f (flip liftM m g)\nliftM (f . g) m          = fmap f (liftM g m)\n</code></pre>\n\n<p>This is promising.  Take <code>g = id</code>:</p>\n\n<pre><code>liftM (f . id) m = fmap f (liftM id m)\nliftM f m        = fmap f (liftM id m)\n</code></pre>\n\n<p>It would suffice to show <code>liftM id = id</code>.  That probably follows from its definition:</p>\n\n<pre><code>liftM id m\n   = m &gt;&gt;= return . id\n   = m &gt;&gt;= return\n   = m\n</code></pre>\n\n<p>Yep!  Qed.</p>\n"}], "owner": {"reputation": 3875, "user_id": 777775, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/53770527d89baf4424ddc7cbe05707ea?s=128&d=identicon&r=PG", "display_name": "Tom", "link": "https://stackoverflow.com/users/777775/tom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 232, "favorite_count": 3, "answer_count": 2, "score": 7, "last_activity_date": 1541844515, "creation_date": 1540644869, "question_id": 53022087, "link": "https://stackoverflow.com/questions/53022087/do-the-monadic-liftm-and-the-functorial-fmap-have-to-be-equivalent", "title": "Do the monadic liftM and the functorial fmap have to be equivalent?", "body": "<p>(Note: I'm phrasing the question using Haskell terminology; answers are welcome to use the same terminology and/or the mathematical language of category theory, including proper mathematical definitions and axioms where I speak of functor and monad laws.)</p>\n\n<p>It is well known that every monad is also a functor, with the functor's <code>fmap</code> equivalent to the monad's <code>liftM</code>. This makes sense, and of course holds for all common/reasonable monad instances.</p>\n\n<p>My question is whether this equivalence of <code>fmap</code> and <code>liftM</code> provably follows from the functor and monad laws. If so it will be nice to see how, and if not it will be nice to see a counterexample.</p>\n\n<p>To clarify, the functor and monad laws I know are the following:</p>\n\n<ul>\n<li><code>fmap id</code> \u2261 <code>id</code></li>\n<li><code>fmap f . fmap g</code> \u2261 <code>fmap (f . g)</code></li>\n<li><code>return x &gt;&gt;= f</code> \u2261 <code>f x</code></li>\n<li><code>x &gt;&gt;= return</code> \u2261 <code>x</code></li>\n<li><code>(x &gt;&gt;= f) &gt;&gt;= g</code> \u2261 <code>x &gt;&gt;= (\\x -&gt; f x &gt;&gt;= g)</code></li>\n</ul>\n\n<p>I don't see anything in these laws which relates the functor functionality (<code>fmap</code>) to the monad functionality (<code>return</code> and <code>&gt;&gt;=</code>), and so I find it hard to see how the equivalence of <code>fmap</code> and <code>liftM</code> (defined as <code>liftM f x = x &gt;&gt;= (return . f)</code>) can be derived from them. Maybe there is an argument for it which is just not straightforward enough for me to spot? Or maybe I'm missing some laws?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1540645131, "post_id": 53022071, "comment_id": 92946529, "body": "Variadic functions in Haskell can&#39;t be implemented without jumping through a lot of hoops. Instead, you should define <code>union&#39; :: Eq a =&gt; [[a]] -&gt; [a]</code>, and pass a single list of lists as the argument."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1540645343, "post_id": 53022071, "comment_id": 92946575, "body": "Consider what the type of <code>union&#39; [1,2,3] [1,4]</code> would be: is it a list, or is it a function that you can apply to <code>[2,6]</code>?"}, {"owner": {"reputation": 437, "user_id": 2441615, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e22651679ce216dc2e20778a92b68a08?s=128&d=identicon&r=PG", "display_name": "K. Claesson", "link": "https://stackoverflow.com/users/2441615/k-claesson"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1540645705, "post_id": 53022071, "comment_id": 92946648, "body": "I would think that <code>union&#39;</code> would be a list, but I&#39;m a complete noob at coding in Haskell so don&#39;t take my word for it. I need to get the union of an arbitrary number of lists of numbers and then add together all numbers in the list. Do you have any tips on how to go about creating the <code>union&#39;</code> function, cause I am quite lost?"}, {"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 1, "creation_date": 1540645822, "post_id": 53022071, "comment_id": 92946679, "body": "<a href=\"http://hackage.haskell.org/package/containers-0.6.0.1/docs/Data-Set.html#v:unions\" rel=\"nofollow noreferrer\"><code>unions</code> function from <code>Data.Set</code></a> module simplifies the job. <code>toList . unions $ Data.List.map fromList [[1,2,3,3,4],[2,2,3,4,4,5,6],[4,5,5,6,6,7]]</code> would return <code>[1,2,3,4,5,6,7]</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1540646103, "post_id": 53022071, "comment_id": 92946736, "body": "@K.Claesson That&#39;s the problem. If it&#39;s a list, you can&#39;t call it on further values. If it&#39;s a function, you can&#39;t treat it as a list. The &quot;solutions&quot; all involve typeclasses implemented by types that are neither lists <i>nor</i> functions, which is why you should do the idiomatic thing in Haskell and only worry about a function that takes a list of lists, rather than an arbitrary number of lists. (Strictly speaking, <i>every</i> function in Haskell takes a single argument; a function like <code>unionOfTwo :: Eq a =&gt; [a] -&gt; [a] -&gt; [a]</code> takes one argument, and returns a function that takes one argument.)"}], "answers": [{"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 3, "last_activity_date": 1540646545, "creation_date": 1540646545, "answer_id": 53022301, "question_id": 53022071, "link": "https://stackoverflow.com/questions/53022071/the-union-of-an-arbitrary-number-of-lists-in-haskell/53022301#53022301", "title": "The union of an arbitrary number of lists in Haskell", "body": "<p>A function in Haskell only takes <em>one</em> argument. A \"two\"-argument function is really a function that returns another function that returns the ultimate return value. As such, there is no way for a function to take a variable number of arguments, because the return type of such a function wouldn't be well defined.</p>\n\n<p>If you want to take the union of an arbitrary number of lists, your function should take a <em>list</em> of lists, since a list can contain an arbitrary number of elements.</p>\n\n<pre><code>union' :: Eq a =&gt; [[a]] -&gt; [a]\nunion' = foldr unionOfTwo []\n  where unionOfTwo :: Eq a =&gt; [a] -&gt; [a] -&gt; [a]\n        unionOfTwo xs ys = ...  -- left as an exercise\n</code></pre>\n\n<p>where <code>unionOfTwo</code> knows how to compute the union of <em>exactly</em> two lists. Effectively, <code>union'</code> sets aside the first list in the input, recursively computes the union of the remaining inputs, then computes the union of that result and the original first list. Put another way,</p>\n\n<pre><code>union' []  = []\nunion' (xs:xss) = unionOfTwo xs (union' xss)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "is_accepted": false, "score": 2, "last_activity_date": 1540649739, "creation_date": 1540649739, "answer_id": 53022755, "question_id": 53022071, "link": "https://stackoverflow.com/questions/53022071/the-union-of-an-arbitrary-number-of-lists-in-haskell/53022755#53022755", "title": "The union of an arbitrary number of lists in Haskell", "body": "<p>First a working code example:</p>\n\n<pre><code>{-# LANGUAGE MultiParamTypeClasses, FlexibleInstances #-}\nmodule Main where\nimport Data.List (union)\n\nclass Unionable a t where\n  union' :: [a] -&gt; t\n\ninstance  Unionable a [a] where\n  union' = id\n\ninstance  (Eq a, Unionable a t) =&gt; Unionable a ([a] -&gt; t) where\n  union' xs ys = union' (union xs ys)\n\nmain = do\n  print $ (union' [1::Integer,2,3] [1::Integer,5,6] [1::Integer,7,3] :: [Integer])\n</code></pre>\n\n<p>mimiced from <a href=\"https://hackage.haskell.org/package/shake-0.17/docs/src/Development.Shake.Command.html#cmd\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>You probably want to use such a function with literals and sadly, as you can see here, it will not be convienent to use it with polymorphic literals, as you will need to specify the type of every argument.</p>\n\n<p>In other contexts, the types of the arguments have to be clear and the expected type of the result must be clear too, otherwise, you will need to add such type annotations.</p>\n\n<p>For normal code it probably isn't worth the effort.</p>\n\n<p>Let's explain what happens here, the compiler sees:</p>\n\n<pre><code>(union' [1::Integer,2,3] [1::Integer,5,6] [1::Integer,7,3] :: [Integer])\n</code></pre>\n\n<p>and it thinks, we need</p>\n\n<pre><code>union' :: [Integer] -&gt; [Integer] -&gt; [Integer] -&gt; [Integer]\n</code></pre>\n\n<p>do we have such a <code>union'</code>? A candidate for that would be provided by the second instance declaration</p>\n\n<pre><code>a ~ Integer\nt ~ [Integer] -&gt; [Integer] -&gt; [Integer]\n</code></pre>\n\n<p>but for that instance to be applicable, we need an instance of <code>(Unionable a t)</code> with those assignments. Do we have such an instance? Again the second instance declaration is a candidate, this time with</p>\n\n<pre><code>a ~ Integer\nt ~ [Integer] -&gt; [Integer]\n</code></pre>\n\n<p>but for that instance to be applicable, we need an instance of <code>(Unionable a t)</code> with those assignments. Do we have such an instance? Again the second instance declaration is a candidate, this time with</p>\n\n<pre><code>a ~ Integer\nt ~ [Integer]\n</code></pre>\n\n<p>This time, we get such an instance from the first instance declaration with \nno additional constraints needed.</p>\n\n<p>This means (ommitting the type annotations for clarity)</p>\n\n<pre><code>union' [1,2,3] [1,5,6] [1,7,3]\n= unions' (union [1,2,3] [1,5,6]) [1,7,3]\n= unions' (union (union [1,2,3] [1,5,6]) [1,7,3])\n= id (union (union [1,2,3] [1,5,6]) [1,7,3])\n= (union (union [1,2,3] [1,5,6]) [1,7,3])\n= [1,2,3,5,6,7]\n</code></pre>\n"}], "owner": {"reputation": 437, "user_id": 2441615, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e22651679ce216dc2e20778a92b68a08?s=128&d=identicon&r=PG", "display_name": "K. Claesson", "link": "https://stackoverflow.com/users/2441615/k-claesson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 533, "favorite_count": 0, "accepted_answer_id": 53022301, "answer_count": 2, "score": 0, "last_activity_date": 1540649739, "creation_date": 1540644720, "question_id": 53022071, "link": "https://stackoverflow.com/questions/53022071/the-union-of-an-arbitrary-number-of-lists-in-haskell", "title": "The union of an arbitrary number of lists in Haskell", "body": "<p>How can I get the union of an arbitrary number of lists in Haskell. For example, I would like a function that behaves like the one below:</p>\n\n<pre><code>example1 = union' [1,2,3] [1,4]\nexample2 = union' [1,2,3] [1,4] [2,6]\nexample1\n[1,2,3,4]\nexample2\n[1,2,3,4,6]\n</code></pre>\n"}, {"tags": ["haskell", "pattern-matching", "guard-clause"], "comments": [{"owner": {"reputation": 17293, "user_id": 736162, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/eb6854f56cb2aa14ce798b53ea667639?s=128&d=identicon&r=PG", "display_name": "Andrea", "link": "https://stackoverflow.com/users/736162/andrea"}, "edited": false, "score": 0, "creation_date": 1540641829, "post_id": 53021655, "comment_id": 92945693, "body": "I suspect this is wrong, but maybe that guard needs a final case (maybe just <code>| _ = error &quot;something wrong&quot;</code>)? I think it looks like a complete set of patterns so I&#39;m confused myself."}], "answers": [{"comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 1, "creation_date": 1540642238, "post_id": 53021697, "comment_id": 92945802, "body": "It can actually happen if someone implements <code>Ord</code> improperly. For example, <code>Ord Double</code> is implemented in a way that makes <code>nan &gt;= nan</code> and <code>nan &lt; nan</code> both <code>False</code>. (Of course it can&#39;t happen in this specific case because <code>snd x :: Int</code>, but the compiler doesn&#39;t take that into account.)"}], "tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": true, "score": 7, "last_activity_date": 1540641672, "creation_date": 1540641672, "answer_id": 53021697, "question_id": 53021655, "link": "https://stackoverflow.com/questions/53021655/patterns-not-matched/53021697#53021697", "title": "Patterns not matched: (_:_:_)", "body": "<p>All your cases for <code>x:y:xs</code> have a condition and the compiler is warning you that you didn't cover the case where all the conditions are false. That is, the compiler is warning about the case where both <code>snd x &gt;= snd y</code> and <code>snd x &lt; snd y</code> are false.</p>\n\n<p>Of course that can't actually happen, but the compiler does not realize that. To get rid of the warning, you can just replace the second condition with <code>otherwise</code>.</p>\n"}], "owner": {"reputation": 13, "user_id": 6137400, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2587c3f5082c1f5d7a62d4b5fb0b5a12?s=128&d=identicon&r=PG&f=1", "display_name": "F.Lachlan", "link": "https://stackoverflow.com/users/6137400/f-lachlan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 825, "favorite_count": 0, "accepted_answer_id": 53021697, "answer_count": 1, "score": 1, "last_activity_date": 1540642269, "creation_date": 1540641340, "last_edit_date": 1540642269, "question_id": 53021655, "link": "https://stackoverflow.com/questions/53021655/patterns-not-matched", "title": "Patterns not matched: (_:_:_)", "body": "<p>So I'm trying to build a function that takes a list of tuples and finds the tuple with the biggest second element. But I'm getting a pattern match error.     </p>\n\n<p>This is my code.</p>\n\n<pre><code>    resultTuple :: [((Int,Int),Int)] -&gt; (Int,Int)\n    resultTuple [] = error \"something wrong\"\n    resultTuple [x] = fst(x)\n    resultTuple (x:y:xs)\n        | snd(x) &gt;= snd(y) = resultTuple(x:xs)\n        | snd(x) &lt; snd(y) = resultTuple(y:xs)\n</code></pre>\n\n<p>This is my error.</p>\n\n<pre><code>Pattern match(es) are non-exhaustive\nIn an equation for \u2018resultTuple\u2019: Patterns not matched: (_:_:_)\n</code></pre>\n"}, {"tags": ["haskell", "types", "constraints", "type-families"], "answers": [{"tags": [], "owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "is_accepted": true, "score": 3, "last_activity_date": 1540643485, "creation_date": 1540643485, "answer_id": 53021924, "question_id": 53021311, "link": "https://stackoverflow.com/questions/53021311/why-cant-i-use-the-constraint-kind-in-type-family-declarations/53021924#53021924", "title": "Why can&#39;t I use the Constraint kind in type family declarations?", "body": "<p>The problem is because <code>Constraint</code> is not exported by default from <code>Prelude</code>. You can hoogle <code>Constraint</code> to find where it is:</p>\n\n<ul>\n<li><a href=\"https://hoogle.haskell.org/?hoogle=Constraint\" rel=\"nofollow noreferrer\">https://hoogle.haskell.org/?hoogle=Constraint</a></li>\n</ul>\n\n<p>Try adding the following to your module:</p>\n\n<pre><code>import Data.Kind (Constraint)\n</code></pre>\n\n<p>It solves the problem for me.</p>\n"}], "owner": {"reputation": 1474, "user_id": 8025936, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/Kue08.png?s=128&g=1", "display_name": "schuelermine", "link": "https://stackoverflow.com/users/8025936/schuelermine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 50, "favorite_count": 0, "accepted_answer_id": 53021924, "answer_count": 1, "score": 3, "last_activity_date": 1540647095, "creation_date": 1540638629, "last_edit_date": 1540647095, "question_id": 53021311, "link": "https://stackoverflow.com/questions/53021311/why-cant-i-use-the-constraint-kind-in-type-family-declarations", "title": "Why can&#39;t I use the Constraint kind in type family declarations?", "body": "<p>I'm using</p>\n\n<pre><code>{-# LANGUAGE TypeFamilies, DataKinds, ConstraintKinds, ExistentialQuantification #-}\n</code></pre>\n\n<p>and have typed the following code:</p>\n\n<pre><code>class NoConstraint x where {}\ninstance forall x. NoConstraint x where {}\n\ntype family Classes (c :: [* -&gt; Constraint]) (x :: *) :: Constraint\ntype instance Classes [] x = NoConstraint x\ntype instance Classes (h : t) x = (h x, Classes t x)\n</code></pre>\n\n<p>However, GHC(i) rejects this with:</p>\n\n<pre><code>Not in scope: type constructor or class `Constraint'\n</code></pre>\n\n<p>It seems to be, however, that this should be completely possible.</p>\n\n<hr>\n\n<p>Edit: I've now found out that there are also other problems with the above code.<br>\nHowever, this remains a valid question.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1540638038, "post_id": 53021213, "comment_id": 92944689, "body": "Please post the error as text, not as an image."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1540638091, "post_id": 53021213, "comment_id": 92944703, "body": "This is not really an error that arises from the program. Haskell is simply unsure what type to pick in order to <i>print</i> the results. Furthermore you make it close to impossible to print this, since your function requires the output type to be both <code>Integral</code>, and <code>RealFrac</code> at the same time."}], "answers": [{"comments": [{"owner": {"reputation": 437, "user_id": 2441615, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e22651679ce216dc2e20778a92b68a08?s=128&d=identicon&r=PG", "display_name": "K. Claesson", "link": "https://stackoverflow.com/users/2441615/k-claesson"}, "edited": false, "score": 0, "creation_date": 1540640725, "post_id": 53021326, "comment_id": 92945428, "body": "Does <code>div</code> truncating the result toward negative infinity mean the same thing as the result of the division being rounded to the nearest integer that is less than or equal to the result?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 437, "user_id": 2441615, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e22651679ce216dc2e20778a92b68a08?s=128&d=identicon&r=PG", "display_name": "K. Claesson", "link": "https://stackoverflow.com/users/2441615/k-claesson"}, "edited": false, "score": 1, "creation_date": 1540640895, "post_id": 53021326, "comment_id": 92945473, "body": "@K.Claesson: yes, and in case of negative numbers <code>div (-3) 2</code> is <code>-2</code>."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 2, "last_activity_date": 1540638795, "creation_date": 1540638795, "answer_id": 53021326, "question_id": 53021213, "link": "https://stackoverflow.com/questions/53021213/why-does-multiplesof-num-max-numk-k-1-floor-max-num-throw-an-erro/53021326#53021326", "title": "Why does multiplesOf num max = [num*k | k &lt;- [1..floor (max/num)]] throw an error?", "body": "<p>There is no error in <em>defining</em> the function. The error is more when you want to <em>use</em> the function.</p>\n\n<p>If we take a look at the type of the function you have constructed, we see:</p>\n\n<pre><code>multiplesOf :: (RealFrac t, Integral t) =&gt; t -&gt; t -&gt; [t]\n</code></pre>\n\n<p>So here the type of input and output values should both be <code>Integral</code>, and <code>RealFrac</code>. So that means that number should be <code>Integral</code>, but at the same time support real division. There are not much types that would fit these requirements.</p>\n\n<p>This problem arises from the fact that you use <code>(/)</code> and <code>floor</code> here, which hints that <code>max</code> and <code>num</code> are <code>RealFrac</code>s, but the result of <code>floor</code> is an <code>Integral</code>, and then you mulitply numbers out of this range again with <code>num</code>.</p>\n\n<p>You can however reduce the amount of type constraints, by making use of <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:div\" rel=\"nofollow noreferrer\"><strong><code>div :: Integral a =&gt; a -&gt; a -&gt; a</code></strong></a>. This is thus integer division, and the result is truncated towards negative infinity, so we can implement the function like:</p>\n\n<pre><code>multiplesOf :: Integral i =&gt; i -&gt; i -&gt; [i]\nmultiplesOf num max = [num*k | k &lt;- [1..div max num]]\n</code></pre>\n\n<p>or we can even save us the trouble of making divisions, multiplications, etc. and work with a range expression that does the work for us:</p>\n\n<pre><code>multiplesOf :: (Num n, Enum n) =&gt; n -&gt; n -&gt; [n]\nmultiplesOf num max = [num, (num+num) .. max]\n</code></pre>\n\n<p>The latter is even less constraint, since <code>Integral i</code> implies <code>Real i</code> and <code>Enum i</code>.</p>\n"}], "owner": {"reputation": 437, "user_id": 2441615, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e22651679ce216dc2e20778a92b68a08?s=128&d=identicon&r=PG", "display_name": "K. Claesson", "link": "https://stackoverflow.com/users/2441615/k-claesson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 36, "favorite_count": 0, "accepted_answer_id": 53021326, "answer_count": 1, "score": 1, "last_activity_date": 1540640904, "creation_date": 1540637882, "last_edit_date": 1540640904, "question_id": 53021213, "link": "https://stackoverflow.com/questions/53021213/why-does-multiplesof-num-max-numk-k-1-floor-max-num-throw-an-erro", "title": "Why does multiplesOf num max = [num*k | k &lt;- [1..floor (max/num)]] throw an error?", "body": "<p>I am trying to create a set of all the multiples of a number <code>num</code> under an upper limit <code>max</code>. I have written the following function in Haskell:</p>\n\n<pre><code>multiplesOf num max = [num*k | k &lt;- [1..floor (max/num)]]\n</code></pre>\n\n<p>Why does this function throw the following error during run-time and how can it be fixed?</p>\n\n<pre><code>&lt;interactive&gt;:26:1: error:\n\u2022 Ambiguous type variable \u2018a0\u2019 arising from a use of \u2018print\u2019\n  prevents the constraint \u2018(Show a0)\u2019 from being solved.\n  Probable fix: use a type annotation to specify what \u2018a0\u2019 should be.\n  These potential instances exist:\n    instance Show Ordering -- Defined in \u2018GHC.Show\u2019\n    instance Show Integer -- Defined in \u2018GHC.Show\u2019\n    instance Show a =&gt; Show (Maybe a) -- Defined in \u2018GHC.Show\u2019\n    ...plus 22 others\n    ...plus 18 instances involving out-of-scope types\n    (use -fprint-potential-instances to see them all)\n\u2022 In a stmt of an interactive GHCi command: print it\n</code></pre>\n\n<p>This error was thrown when, for example, entering <code>multiplesOf 3 1000</code>.</p>\n"}, {"tags": ["haskell", "applicative"], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 5, "last_activity_date": 1540638228, "last_edit_date": 1540638228, "creation_date": 1540637769, "answer_id": 53021192, "question_id": 53021094, "link": "https://stackoverflow.com/questions/53021094/why-the-pure-of-applicative-maybe-be-defined-as-pure-just-and-ignores-n/53021192#53021192", "title": "Why the `pure` of `Applicative Maybe` be defined as `pure = Just` and ignores `Nothing`?", "body": "<p>It does <em>not</em> ignore <code>Nothing</code>, but you need to specify for <em>which</em> <code>Applicative</code> you run the <code>pure</code> function, if we run this with <code>-XTypeApplications</code>, we can specify the type of the <code>Applicative</code>, and then we obtain:</p>\n\n<pre><code>$ ghci -XTypeApplications\nGHCi, version 8.0.2: http://www.haskell.org/ghc/  :? for help\nPrelude&gt; pure @Maybe Nothing\nJust Nothing\n</code></pre>\n\n<p>If you do not specify the type, the interpreter will \"default\" to a certain <code>Applicative</code> (in this case the the <code>IO</code>) variant, so that means that it will return the value, and the standard behavior of the interpreter is to print the value \"wrapped\" in the <code>IO</code> shell.</p>\n\n<p>The reason why <code>Applicative</code> takes <code>pure = Just</code>, is because it has to be consistent with the <code>Functor</code> instance. This functor instance is defined as:</p>\n\n<blockquote>\n<pre><code>instance Functor Maybe where\n    fmap f (Just x) = Just (f x)\n    fmap _ Nothing = Nothing\n</code></pre>\n</blockquote>\n\n<p>Now one of the laws that needs to be satisfied is:</p>\n\n<blockquote>\n<pre><code>fmap f x = pure f &lt;*&gt; x\n</code></pre>\n</blockquote>\n\n<p>So if we would define <code>pure _ = Nothing</code>, then this would mean <code>fmap f x = Nothing &lt;*&gt; x</code> which means that we \"lost information\" about <code>f</code>. As a result probably the only reasonable solution would be that <code>fmap</code> always returns <code>Nothing</code>, but that would not make much sense as a functor. It will furthermore violate another constraint at the functor level that says that <code>fmap id x</code> should always return <code>x</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": false, "score": 4, "last_activity_date": 1540637791, "creation_date": 1540637791, "answer_id": 53021197, "question_id": 53021094, "link": "https://stackoverflow.com/questions/53021094/why-the-pure-of-applicative-maybe-be-defined-as-pure-just-and-ignores-n/53021197#53021197", "title": "Why the `pure` of `Applicative Maybe` be defined as `pure = Just` and ignores `Nothing`?", "body": "<p><code>pure</code> is overloaded. When you just type <code>pure Nothing</code> on its own, you don\u2019t specify which version of <code>pure</code> to call. On its own, it actually has type</p>\n\n<pre><code>pure Nothing :: Applicative f =&gt; f (Maybe a)\n</code></pre>\n\n<p>If you specifically say you want <code>Maybe (Maybe a)</code>, you\u2019ll get what you expect:</p>\n\n<pre><code>ghci&gt; pure Nothing :: Maybe (Maybe a)\nJust Nothing\n</code></pre>\n\n<p>When you type <code>pure Nothing</code> into GHCi, though, it actually chooses to make a <code>IO (Maybe a)</code>. This is because GHCi tries to <em>run</em> any <code>IO</code> action it can. When it executes the action <code>pure Nothing :: IO (Maybe a)</code>, then you get back <code>Nothing</code>. You can also give a type signature:</p>\n\n<pre><code>ghci&gt; pure Nothing :: IO (Maybe a)\nNothing\n</code></pre>\n\n<p>That is, you never called the <code>pure = Just</code> version of <code>pure</code>. You called a different function, also named <code>pure</code>. This is why you got some interesting behavior.</p>\n"}], "owner": {"reputation": 1528, "user_id": 1516794, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/0aa31034e2c59f34d63141791746ec35?s=128&d=identicon&r=PG", "display_name": "cmal", "link": "https://stackoverflow.com/users/1516794/cmal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 180, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1540638228, "creation_date": 1540637108, "question_id": 53021094, "link": "https://stackoverflow.com/questions/53021094/why-the-pure-of-applicative-maybe-be-defined-as-pure-just-and-ignores-n", "title": "Why the `pure` of `Applicative Maybe` be defined as `pure = Just` and ignores `Nothing`?", "body": "<p>In the <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.Base.html#\" rel=\"nofollow noreferrer\">source code of GHC.Base</a>, <code>Applicative Maybe</code> is defined as:</p>\n\n<pre><code>instance Applicative Maybe where\n    pure = Just\n    ...\n</code></pre>\n\n<p>I am wondering why the pure's definition ignores <code>Nothing</code>?</p>\n\n<p>According to this definition, I am expecting that </p>\n\n<p><code>pure Nothing</code> should reduce to <code>Just Nothing</code> because <code>pure = Just</code> and</p>\n\n<pre><code>Prelude&gt; Just Nothing\nJust Nothing\n</code></pre>\n\n<p>rather than actually:</p>\n\n<pre><code>Prelude&gt; pure Nothing\nNothing\n</code></pre>\n\n<p>Why is this magic? What is my wrong? Thanks!</p>\n"}, {"tags": ["haskell", "haskell-time"], "answers": [{"tags": [], "owner": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "is_accepted": true, "score": 1, "last_activity_date": 1540635643, "creation_date": 1540635643, "answer_id": 53020901, "question_id": 53020538, "link": "https://stackoverflow.com/questions/53020538/how-do-i-get-the-amount-of-seconds-from-nominaldifftime-in-the-time-library-v1/53020901#53020901", "title": "How do I get the amount of seconds from NominalDiffTime in the time library &lt; v1.9.1?", "body": "<p>First a working code example:</p>\n\n<pre><code>module Main where\n\nimport Control.Concurrent\nimport Data.Time.Clock\n\nseeIntegersAreSeconds :: Integer -&gt; String\nseeIntegersAreSeconds = show\n\nmain = do\n  t1 &lt;- getCurrentTime\n  threadDelay 2000000\n  t2 &lt;- getCurrentTime\n  let myNominalDiffTime = diffUTCTime t2 t1\n  let (myNominalDiffTimeInSeconds, _) = properFraction myNominalDiffTime\n  putStrLn $ \"diff: \" ++ seeIntegersAreSeconds myNominalDiffTimeInSeconds\n</code></pre>\n\n<p><code>NominalDiffTime</code> is documentend like <a href=\"https://hackage.haskell.org/package/time-1.8.0.4/docs/Data-Time-Clock.html#t:NominalDiffTime\" rel=\"nofollow noreferrer\">\"Conversion functions will treat it as seconds.\"</a> and is of typeclass <a href=\"https://hackage.haskell.org/package/base-4.10.1.0/docs/Prelude.html#t:RealFrac\" rel=\"nofollow noreferrer\">RealFrac</a> which hands you the \"conversion\" functions <code>properFraction</code>, <code>ceiling</code>, <code>floor</code>, <code>round</code>, <code>truncate</code>, which you could use, as you like it to be rounded.</p>\n"}], "owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 334, "favorite_count": 0, "accepted_answer_id": 53020901, "answer_count": 1, "score": 1, "last_activity_date": 1540635643, "creation_date": 1540632800, "last_edit_date": 1540633356, "question_id": 53020538, "link": "https://stackoverflow.com/questions/53020538/how-do-i-get-the-amount-of-seconds-from-nominaldifftime-in-the-time-library-v1", "title": "How do I get the amount of seconds from NominalDiffTime in the time library &lt; v1.9.1?", "body": "<p>It seems there is a function for this in time v1.9.1 (<a href=\"http://hackage.haskell.org/package/time-1.9.2/docs/Data-Time-Clock.html#v:nominalDiffTimeToSeconds\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/time-1.9.2/docs/Data-Time-Clock.html#v:nominalDiffTimeToSeconds</a>) but my stack configuration is not compatible with this version. </p>\n\n<p>I've tried <code>stack solver</code> with adding <code>- time-1.9.2</code> as a stack <code>extra-dep</code> but it outputs:</p>\n\n<pre><code> stack solver\nUsing configuration file: stack.yaml\nUsing cabal packages:\n- ./\n\nUsing resolver: lts-12.12\nUsing compiler: ghc-8.4.3\nAsking cabal to calculate a build plan...\nTrying with packages from lts-12.12 and 4 external packages as hard constraints...\ncabal: Could not resolve dependencies:\nnext goal: time (dependency of app-0.1.0.0)\nrejecting: time-1.8.0.2/installed-1.8... (constraint from main config\n/tmp/cabal-solver30194/cabal.config requires ==1.9.2)\ntrying: time-1.9.2\nnext goal: conduit (dependency of yaml-0.8.32)\nrejecting: conduit-1.3.1 (constraint from main config\n/tmp/cabal-solver30194/cabal.config requires ==1.3.0.3)\ntrying: conduit-1.3.0.3\nnext goal: unix (dependency of conduit-1.3.0.3)\nrejecting: unix-2.7.2.2/installed-2.7... (conflict: time==1.9.2, unix =&gt;\ntime==1.8.0.2/installed-1.8...)\nrejecting: unix-2.7.2.2 (conflict: time==1.9.2, unix =&gt; time&gt;=1.2 &amp;&amp; &lt;1.9)\nrejecting: unix-2.7.2.1, unix-2.7.2.0, unix-2.7.1.0, unix-2.7.0.1,\nunix-2.7.0.0, unix-2.6.0.1, unix-2.6.0.0, unix-2.5.1.1, unix-2.5.1.0,\nunix-2.5.0.0, unix-2.4.2.0, unix-2.4.1.0, unix-2.4.0.2, unix-2.4.0.1,\nunix-2.4.0.0, unix-2.3.2.0, unix-2.3.1.0, unix-2.3.0.0, unix-2.2.0.0, unix-2.0\n(constraint from main config /tmp/cabal-solver30194/cabal.config requires\n==2.7.2.2)\nDependency tree exhaustively searched.\nCould not parse cabal-install errors:\n\n&gt;&gt;&gt;&gt; Cabal errors begin\n&lt;&lt;&lt;&lt; Cabal errors end\n\nCallStack (from HasCallStack):\n  error, called at src/Stack/Solver.hs:130:25 in stack-1.7.1-JqFYW3fz7If7um4NzPRwPj:Stack.Solver\n</code></pre>\n\n<p>I see it is defined (in v1.8.0.2 <a href=\"http://hackage.haskell.org/package/time-1.8.0.2/docs/src/Data.Time.Clock.Internal.NominalDiffTime.html#NominalDiffTime\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/time-1.8.0.2/docs/src/Data.Time.Clock.Internal.NominalDiffTime.html#NominalDiffTime</a>) as: </p>\n\n<pre><code>-- | This is a length of time, as measured by UTC.\n-- Conversion functions will treat it as seconds.\n-- It has a precision of 10^-12 s.\n-- It ignores leap-seconds, so it's not necessarily a fixed amount of clock time.\n-- For instance, 23:00 UTC + 2 hours of NominalDiffTime = 01:00 UTC (+ 1 day),\n-- regardless of whether a leap-second intervened.\nnewtype NominalDiffTime = MkNominalDiffTime Pico deriving (Eq,Ord\n#if LANGUAGE_DeriveDataTypeable\n#if LANGUAGE_Rank2Types\n#if HAS_DataPico\n    ,Data, Typeable\n#endif\n#endif\n#endif\n    )\n</code></pre>\n\n<p>But the <code>MkNominalDiffTime</code> constructor is not exported, which I would assume means I would need to fork the library to modify this? </p>\n"}, {"tags": ["haskell", "functional-programming", "elm"], "comments": [{"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 0, "creation_date": 1540636031, "post_id": 53020500, "comment_id": 92944196, "body": "If I understand this question correctly, it&#39;s about how to do Dependency Injection in FP. If so, you may find my article series on the topic relevant: <a href=\"http://blog.ploeh.dk/2017/01/27/from-dependency-injection-to-dependency-rejection\" rel=\"nofollow noreferrer\">From dependency injection to dependency rejection</a>. In summary, in Haskell one would either use free monads, or alternatively type classes."}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 1, "creation_date": 1540636134, "post_id": 53020500, "comment_id": 92944222, "body": "Perhaps this F# question, and its answers, could be illuminating as well: <a href=\"https://stackoverflow.com/q/34011895/126014\">stackoverflow.com/q/34011895/126014</a>"}], "answers": [{"comments": [{"owner": {"reputation": 1301, "user_id": 1675615, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/bfec4932bd0fcbbc24be6ffbbbed3968?s=128&d=identicon&r=PG", "display_name": "Krever", "link": "https://stackoverflow.com/users/1675615/krever"}, "edited": false, "score": 0, "creation_date": 1540635767, "post_id": 53020749, "comment_id": 92944133, "body": "Sadly Reader monad comes with the standard problem of monads -&gt; they don&#39;t compose. So I either have to keep all my code in the context of <code>Reader Client</code> or use things like <code>ReaderT</code>. In either case, I&#39;m limited in comparison to OOP. But thanks for a detailed answer anyway, you confirmed my understanding of the topic :)"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 1301, "user_id": 1675615, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/bfec4932bd0fcbbc24be6ffbbbed3968?s=128&d=identicon&r=PG", "display_name": "Krever", "link": "https://stackoverflow.com/users/1675615/krever"}, "edited": false, "score": 0, "creation_date": 1540636382, "post_id": 53020749, "comment_id": 92944281, "body": "@Krever <code>ReaderT</code> is how monads <b>do</b> compose. This isn&#39;t limited in comparison to OO (I like to say: OO languages are more limited since they have only exactly one monad, <code>StateT This IO</code>, whereas Haskell and Elm allow you to choose the appropriate monad for every situation)."}, {"owner": {"reputation": 1301, "user_id": 1675615, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/bfec4932bd0fcbbc24be6ffbbbed3968?s=128&d=identicon&r=PG", "display_name": "Krever", "link": "https://stackoverflow.com/users/1675615/krever"}, "edited": false, "score": 0, "creation_date": 1540636689, "post_id": 53020749, "comment_id": 92944363, "body": "Constraints liberate and liberties constraints. Being constrained to exactly one monad gives a lot of liberty when writing code, e.g. by not having to care about proper transformer stack. Nevertheless, I think I see the point now and passing a record to function is not really different from calling function on an object - the number of moving parts is the same."}, {"owner": {"reputation": 106013, "user_id": 633183, "user_type": "registered", "accept_rate": 66, "profile_image": "https://i.stack.imgur.com/RHeN9.png?s=128&g=1", "display_name": "Thank you", "link": "https://stackoverflow.com/users/633183/thank-you"}, "edited": false, "score": 0, "creation_date": 1540657123, "post_id": 53020749, "comment_id": 92949777, "body": "found this \u2013 <a href=\"https://gist.github.com/jliuhtonen/189facfd3841e0c1888b58caf4bfb9aa\" rel=\"nofollow noreferrer\"><code>Reader.elm</code></a>"}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 5, "last_activity_date": 1540634427, "creation_date": 1540634427, "answer_id": 53020749, "question_id": 53020500, "link": "https://stackoverflow.com/questions/53020500/how-to-share-data-between-functions-in-elm-or-haskell/53020749#53020749", "title": "How to share data between functions in Elm (or Haskell)", "body": "<p>Remeber that OO method calling<sup>\u2020</sup> is nothing but syntactic sugar for supplying an extra <code>this</code> / <code>self</code> argument to the function:</p>\n\n<pre><code>--  OO                       \u2503      functional/procedural\nClient c = ...;              \u2502     c = ... :: Client\n...                          \u2502     ...\nmain() {print(c.getFoo());}  \u2502     main = print(getFoo c)\n</code></pre>\n\n<p>It is thus quite possible, and often useful, to go this route, both in a procedural language like C and in an FP language.</p>\n\n<pre><code>data Client {\n    url :: String\n  , ...\n  }\n\ngetFoo :: Client -&gt; String\ngetFoo (Client{url = u}) = ...\n</code></pre>\n\n<p>Yes, that requires you to explicitly pass the <code>Client</code> object around, but this isn't necessarily a bad thing \u2013 provided you have properly distinguished types, it can be pretty obvious what needs to be passed as which argument of what function, and this approach actually scales better than OO methods because you can have multiple objects as arguments, and each function can take just those that it needs.</p>\n\n<p>Of course, there are situation where you do have a whole bunch of functions that all need the same object, and would like to have it happen under the hood without explicitly passing it everywhere. That can be done by hiding it in the <em>result</em> type. </p>\n\n<pre><code>type Reader c r = c -&gt; r\n\ngetFoo :: Reader Client String\ngetBar :: Reader Client Int\ngetBaz :: Reader Client Double\n</code></pre>\n\n<p>This <a href=\"http://learnyouahaskell.com/for-a-few-monads-more#reader\" rel=\"noreferrer\">reader monad</a> can be used with standard monad combinators:</p>\n\n<pre><code> quun = (`runReader`c) $ do\n   foo &lt;- getFoo     -- `c` argument implicitly passed\n   bar &lt;- getBar\n   baz &lt;- getBaz\n   return (calcQuun foo bar (2*baz))\n</code></pre>\n\n<p>This approach is particularly useful if you also have <em>mutation</em> in your methods, as is commonplace in OO. With explicit passing, this becomes very cumbersome indeed as you need to work with <em>updated copies</em> and need to be careful to pass the correct version to each function. With the <a href=\"https://package.elm-lang.org/packages/folkertdev/elm-state/latest/State\" rel=\"noreferrer\">state monad</a>, this is handled automatically as if it were true mutation.</p>\n\n<hr>\n\n<p><sup>\u2020</sup><sub>I disregard inheritance here. If you call a method through a superclass pointer, there's an extra vtable lookup, but that can be modelled as just another field in the record type that tells you what subclass this object belongs to.</sub></p>\n"}], "owner": {"reputation": 1301, "user_id": 1675615, "user_type": "registered", "accept_rate": 65, "profile_image": "https://www.gravatar.com/avatar/bfec4932bd0fcbbc24be6ffbbbed3968?s=128&d=identicon&r=PG", "display_name": "Krever", "link": "https://stackoverflow.com/users/1675615/krever"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 174, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1540634427, "creation_date": 1540632525, "question_id": 53020500, "link": "https://stackoverflow.com/questions/53020500/how-to-share-data-between-functions-in-elm-or-haskell", "title": "How to share data between functions in Elm (or Haskell)", "body": "<p>I would like to create an http client in elm for external api. In scala, which is OO/FP mix, I would express this (forgetting about async for now) simply as:</p>\n\n<pre><code>class Client(url: String) {\n    def getFoo(): String = ???\n}\n</code></pre>\n\n<p>but in Elm Im a bit lost. The obvious solution is to pass url directly to the function</p>\n\n<pre><code>module Client\n\ngetFoo : String -&gt; String\n</code></pre>\n\n<p>but this is extremely painful to use because it complicates every call, so the burden grows with both the number of functions defined and the number of calls to these functions.</p>\n\n<p>I tried to use records with functions, like:</p>\n\n<pre><code>type alias Client = { getFoo: String }\n\ncreateClient : String -&gt; Client\n</code></pre>\n\n<p>but it feels like a poor imitation of OOP. AFAIU this is solved by Functors in Ocaml and objects in OOP. </p>\n\n<p>What is a canonical way to do this in Elm (or Haskell if Elm is lacking some particular feature here)?</p>\n"}, {"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 84731, "user_id": 510937, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/70b13a9ae1aae1ca1aa6ac8dab4643f2?s=128&d=identicon&r=PG", "display_name": "Bakuriu", "link": "https://stackoverflow.com/users/510937/bakuriu"}, "edited": false, "score": 2, "creation_date": 1540631334, "post_id": 53020348, "comment_id": 92943045, "body": "What you want is a <a href=\"https://wiki.haskell.org/Type_synonym\" rel=\"nofollow noreferrer\">type <i>synonym</i></a>. I don&#39;t think it&#39;s possible (or easy) to achieve exactly what you want. You could easily do: <code>type Distance a = Vector a -&gt; Vector a -&gt; a</code> and use <code>taxicab :: Num a =&gt; Distance a</code> though. If you want the dirty way you could use <a href=\"https://guide.aelve.com/haskell/cpp-vww0qd72\" rel=\"nofollow noreferrer\"><code>LANGUAGE CPP</code></a> to define <code>Distance</code> as a macro but this should be avoided at all costs..."}, {"owner": {"user_type": "does_not_exist", "display_name": "user9145571"}, "reply_to_user": {"reputation": 84731, "user_id": 510937, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/70b13a9ae1aae1ca1aa6ac8dab4643f2?s=128&d=identicon&r=PG", "display_name": "Bakuriu", "link": "https://stackoverflow.com/users/510937/bakuriu"}, "edited": false, "score": 0, "creation_date": 1540631445, "post_id": 53020348, "comment_id": 92943068, "body": "Parameterize the type <code>Distance</code> is a good idea indeed."}], "answers": [{"tags": [], "owner": {"reputation": 84731, "user_id": 510937, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/70b13a9ae1aae1ca1aa6ac8dab4643f2?s=128&d=identicon&r=PG", "display_name": "Bakuriu", "link": "https://stackoverflow.com/users/510937/bakuriu"}, "is_accepted": false, "score": 2, "last_activity_date": 1540632283, "last_edit_date": 1540632283, "creation_date": 1540631727, "answer_id": 53020415, "question_id": 53020348, "link": "https://stackoverflow.com/questions/53020348/alias-for-a-function-signature/53020415#53020415", "title": "Alias for a function signature", "body": "<p>You probably want to define a <a href=\"https://wiki.haskell.org/Type_synonym\" rel=\"nofollow noreferrer\">type synonymn</a> (or see <a href=\"http://downloads.haskell.org/~ghc/7.8.3/docs/html/users_guide/data-type-extensions.html\" rel=\"nofollow noreferrer\">this other page</a>). It is not directly possible to include the class constraint <em>without a parameter</em>\u00b9, but you can have a parametrized type synonym:</p>\n\n<pre><code>type Distance a = Vector a -&gt; Vector a -&gt; a\n\ntaxicab :: Num a =&gt; Distance a\n</code></pre>\n\n<p>This allows you to have define <code>Distance</code>s with different constraints.</p>\n\n<hr>\n\n<p>\u00b9 <sub>I was initially mistaken: you can if you add a parameter.</sub></p>\n"}, {"comments": [{"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 0, "creation_date": 1540676238, "post_id": 53020442, "comment_id": 92954706, "body": "With <code>RankNTypes</code> you can move the type parameter: <code>type Distance = forall a. Num a =&gt; Vector a -&gt; Vector a -&gt; a</code>, giving the desired <code>taxicab :: Distance</code>."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 2, "last_activity_date": 1540631982, "creation_date": 1540631982, "answer_id": 53020442, "question_id": 53020348, "link": "https://stackoverflow.com/questions/53020348/alias-for-a-function-signature/53020442#53020442", "title": "Alias for a function signature", "body": "<p>Just like you create a type alias for another type:</p>\n\n<pre><code>type Distance a = Num a =&gt; Vector a -&gt; Vector a -&gt; a\n</code></pre>\n\n<p>In fact functions are \"type constructors\": if you write <code>a -&gt; b</code>, you have, in a more canonical form, written <code>(-&gt;) a b</code>, so that means that you have basically written:</p>\n\n<pre><code>type Distance a = Num a =&gt; (-&gt;) (Vector a) ((-&gt;) (Vector a) a)\n</code></pre>\n\n<p>Note however that we need to add a type parameter <code>a</code> here, so your <code>taxicab</code> is of type:</p>\n\n<pre><code>taxicab :: Distance <b>a</b></code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user9145571"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 100, "favorite_count": 0, "accepted_answer_id": 53020442, "answer_count": 2, "score": 3, "last_activity_date": 1540632283, "creation_date": 1540631164, "question_id": 53020348, "link": "https://stackoverflow.com/questions/53020348/alias-for-a-function-signature", "title": "Alias for a function signature", "body": "<p>I am implementing the kNN algorithm in Haskell. I therefore need distance functions.\nThe first one works well </p>\n\n<pre><code>import Data.Composition\nimport Data.Vector\n\ntaxicab :: Num a =&gt; Vector a -&gt; Vector a -&gt; a\ntaxicab = Data.Vector.sum .: Data.Vector.zipWith (\\ x y -&gt; abs $ x - y)\n</code></pre>\n\n<p>How can I create an alias <code>Distance</code> for <code>Num a =&gt; Vector a -&gt; Vector a -&gt; a</code>?</p>\n\n<p>I could so write:</p>\n\n<pre><code>taxicab :: Distance\n</code></pre>\n"}, {"tags": ["haskell", "zeromq", "haskell-pipes"], "comments": [{"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1540600687, "post_id": 53015583, "comment_id": 92938723, "body": "I suggest not using the monadic zmq API and rolling your own Monad if needed.  That or consider having an indirection to zmq via a Chan and worker thread that just transfers data to/from zmq."}, {"owner": {"reputation": 51, "user_id": 5086956, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6490a2a538b9fe0035df23e086c9efa0?s=128&d=identicon&r=PG&f=1", "display_name": "Stuart", "link": "https://stackoverflow.com/users/5086956/stuart"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1540637734, "post_id": 53015583, "comment_id": 92944623, "body": "Thank you @Thomas for the suggestion to investigate Chan.  As I think zeroMQ provides the buffering that Chan provides, I was able to get something to run using MVar which seems to neatly resolve the underlying issue I was wrestling with, ie. how to update a representation of state without getting the &lt;&lt;loop&gt;&gt; runtime error. Code below, in case it helps someone else."}], "answers": [{"tags": [], "owner": {"reputation": 51, "user_id": 5086956, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6490a2a538b9fe0035df23e086c9efa0?s=128&d=identicon&r=PG&f=1", "display_name": "Stuart", "link": "https://stackoverflow.com/users/5086956/stuart"}, "is_accepted": false, "score": 0, "last_activity_date": 1540638549, "creation_date": 1540638549, "answer_id": 53021295, "question_id": 53015583, "link": "https://stackoverflow.com/questions/53015583/how-to-use-a-zmq-subscriber-in-haskell-with-pipes/53021295#53021295", "title": "How to use a ZMQ subscriber in Haskell with pipes", "body": "<p>Working off Thomas' suggestion of using Chan, I adapted the MVar example (link below) to accumulate the strings received and a count of them to demonstrate updating and reading state</p>\n\n<p><a href=\"https://www.oreilly.com/library/view/parallel-and-concurrent/9781449335939/ch07.html\" rel=\"nofollow noreferrer\">https://www.oreilly.com/library/view/parallel-and-concurrent/9781449335939/ch07.html</a> </p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\n\nmodule Main where\n\nimport Control.Concurrent  \nimport Control.Monad\nimport System.ZMQ4.Monadic\nimport qualified Data.ByteString.Char8 as CS\n\nnewtype State = State (MVar (Int, [CS.ByteString]) ) --(count, list of strings received over zmq)\n\nnewState :: IO State\nnewState = do\n  m &lt;- newMVar (0, [])\n  return (State m)\n\nupdateState :: State -&gt; CS.ByteString -&gt; IO ()\nupdateState (State m) newString = do\n  (count,strList) &lt;- takeMVar m\n  putMVar m ( count + 1 , strList ++ [newString] )\n\nshowState :: State -&gt; IO String\nshowState (State m) = do\n  count &lt;- takeMVar m\n  putMVar m count  --return the lock; no changes\n  return (show count)\n\nmain = runZMQ $ do\n    sub &lt;- socket Sub\n    subscribe sub \"\"\n    connect sub \"tcp://127.0.0.1:4998\"\n    s &lt;- liftIO newState \n    forever $ do\n      receive sub &gt;&gt;= liftIO . updateState s \n      liftIO $ updateState s \"hello\"  --'manually' add an additional string on each iteration\n      op &lt;- liftIO $ showState s\n      liftIO $ print op \n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 12035, "user_id": 603094, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/325af9a946cb4337c6640f0e95044be1?s=128&d=identicon&r=PG", "display_name": "kirelagin", "link": "https://stackoverflow.com/users/603094/kirelagin"}, "is_accepted": false, "score": 0, "last_activity_date": 1552789547, "creation_date": 1552789547, "answer_id": 55203324, "question_id": 53015583, "link": "https://stackoverflow.com/questions/53015583/how-to-use-a-zmq-subscriber-in-haskell-with-pipes/55203324#55203324", "title": "How to use a ZMQ subscriber in Haskell with pipes", "body": "<p>The only problem in your code is the last line.</p>\n\n<p>You have a \u201cpipe\u201d there:</p>\n\n<pre class=\"lang-haskell prettyprint-override\"><code>fromZMQ subSock &gt;-&gt; P.take 3 &gt;-&gt; P.print :: Effect (ZMQ z) ()\n</code></pre>\n\n<p>and when you apply <code>forever</code> to it, the type remains the same. But what you need there is a simple <code>ZMQ z</code>, in other words, you need to actually perform the <code>pipes</code> computation and you use the <code>runEffect</code> function for this. As a side note, you don\u2019t really need the <code>forever</code> as the stream will never end anyway.</p>\n\n<p>So, all you have to do, really, is replace <code>forever</code> with <code>runEffect</code> in the last line.</p>\n"}], "owner": {"reputation": 51, "user_id": 5086956, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6490a2a538b9fe0035df23e086c9efa0?s=128&d=identicon&r=PG&f=1", "display_name": "Stuart", "link": "https://stackoverflow.com/users/5086956/stuart"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 138, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1552789547, "creation_date": 1540584131, "last_edit_date": 1592644375, "question_id": 53015583, "link": "https://stackoverflow.com/questions/53015583/how-to-use-a-zmq-subscriber-in-haskell-with-pipes", "title": "How to use a ZMQ subscriber in Haskell with pipes", "body": "<p>I can get a ZMQ subscriber to work in Haskell, but would appreciate guidance on how to use that data with Pipes.  My attempt at writing a Producer fails at 'stack build' with the following error:</p>\n<blockquote>\n<p>Couldn't match type \u2018Proxy X () c'0 c0 (ZMQ z)\u2019 with \u2018ZMQ z\u2019</p>\n<p>Expected type: ZMQ z ()</p>\n<p>Actual type: Proxy X () c'0 c0 (ZMQ z) ()</p>\n</blockquote>\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\nmodule Main where\nimport Control.Monad\nimport Pipes\nimport qualified Pipes.Prelude as P\nimport System.ZMQ4.Monadic\nimport qualified Data.ByteString.Char8 as CS\n\nfromZMQ :: (Receiver r) =&gt; Socket z r -&gt; Producer String (ZMQ z) ()\nfromZMQ sock = do\n    msg &lt;- lift $ receive sock\n    yield (CS.unpack msg)\n    fromZMQ sock\n\nmain :: IO ()\nmain = --do\n  runZMQ $ do\n    subSock &lt;- socket Sub  ---subscriptionSocket\n    subscribe subSock &quot;&quot;\n    connect subSock &quot;tcp://127.0.0.1:4998&quot; \n    forever $ fromZMQ subSock &gt;-&gt; P.take 3 &gt;-&gt; P.print\n</code></pre>\n<p>Note, I want to consume data being published on ZMQ by a python script.</p>\n"}, {"tags": ["haskell", "haskell-lens"], "comments": [{"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1540587393, "post_id": 53015272, "comment_id": 92936003, "body": "The lens you&#39;ve described is not lawful. Perhaps that is why you are having trouble expressing it within <code>lens</code>? Maybe you can write your own function to put the stages, which you think are ugly, into a single function. You can also write the unlawful optic by hand, but you&#39;ll need to be a little careful with it."}], "owner": {"reputation": 4471, "user_id": 3858142, "user_type": "registered", "accept_rate": 46, "profile_image": "https://www.gravatar.com/avatar/4c27dead2edf0b6dc28833a694c42ba1?s=128&d=identicon&r=PG&f=1", "display_name": "sevo", "link": "https://stackoverflow.com/users/3858142/sevo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 61, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1540582471, "creation_date": 1540582471, "question_id": 53015272, "link": "https://stackoverflow.com/questions/53015272/can-we-query-and-update-structure-at-different-levels-with-lens", "title": "Can we query and update structure at different levels with lens?", "body": "<p>I often use lens when dealing with nested structures (JSON from various APIs), and I'm worried that nontrivial data manipulations with lens are somewhat complicated.</p>\n\n<p>By nontrivial I mean performing update on different node than the node I query for.</p>\n\n<p>For example, I would:</p>\n\n<ul>\n<li>Drill down to obtain a foldable list of interesting values (like <code>price</code>)</li>\n<li>Apply a criteria on that list (like <code>max</code>) to identify the \"owning\" entity of the result (like <code>order</code>)</li>\n<li>Drill down again for some interesting value (say, <code>vip</code> flag of a customer)</li>\n<li>Finally, update yet another value in that structure (say add a new <code>item</code> free of charge to latest order)</li>\n</ul>\n\n<p>A somewhat reliable strategy is to use \"stages\" where simple lens are used to extract interim results and apply new lens to narrow down further or update the result. But this is somewhat against the spirit of lens, where I should be able to update the whole structure.</p>\n\n<p>Other times I'm lucky to find combinators like <code>maximumByOf</code>, <code>aside</code> but I feel that I lack vocabulary and understanding of the problem - what kind of combinators are sufficient for this kind of tasks?</p>\n\n<p>Is there idiomatic way to to this with <code>lens</code>?</p>\n"}, {"tags": ["haskell", "stream"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1540571754, "post_id": 53012859, "comment_id": 92929248, "body": "I think this is an almost-duplicate of <a href=\"https://stackoverflow.com/questions/23515191/how-to-enumerate-a-recursive-datatype-in-haskell\">this question</a>. Using strings or an ADT makes no significant difference. (I&#39;m waiting a bit to mark this as a duplicate since my vote would close this instantly.)"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1540572942, "post_id": 53012859, "comment_id": 92929745, "body": "Note there&#39;s a simple answer that is technically correct, but fails to generate certain elements in a finite number of steps. <code>makeInfiniteStream = atomic ++ [plus x y | x &lt;- makeInfiniteStream, y &lt;- makeInfiniteStream]</code>. (Posting as a comment because it&#39;s not really useful in practice.)"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1540573846, "post_id": 53012859, "comment_id": 92930151, "body": "Besides @chi&#39;s proposed dupe, see <a href=\"https://stackoverflow.com/q/23923229/791604\">this related question</a> from the same asker. (It assumes the step of enumerating terms is too easy and asks you to give an efficient way to jump around in that list.)"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1540575861, "post_id": 53012859, "comment_id": 92931077, "body": "<a href=\"https://cs.stackexchange.com/questions/97539/lambda-calculus-generator/97610#97610\">related</a>. it diagonalizes the product. ( @chepner )"}], "owner": {"reputation": 289, "user_id": 2965071, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/ylMpw.png?s=128&g=1", "display_name": "HoopsMcCann", "link": "https://stackoverflow.com/users/2965071/hoopsmccann"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 56, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1540571261, "creation_date": 1540571261, "question_id": 53012859, "link": "https://stackoverflow.com/questions/53012859/haskell-generating-infinite-stream-based-off-grammar", "title": "Haskell Generating Infinite Stream Based Off Grammar", "body": "<p>Suppose we have the following grammar:<br/></p>\n\n<p>#x = INT | (#x + #x) <br/>\nINT = 0 | 1</p>\n\n<p>Suppose now I would like to make an infinite stream that \"contains\" every possible form of #x. </p>\n\n<p>Here's what I can think of so far: <br/></p>\n\n<pre><code>atomic :: [String]\natomic = [\"0\", \"1\"]\n--------------------\nplus :: String -&gt; String -&gt; String\nplus x1 x2 = \"(\" ++ x1 ++ \"+\" ++ x2 ++ \")\"\n--------------------\nmakeInfiniteStream :: [String]\nmakeInfiniteStream = atomic : --something\n</code></pre>\n\n<p>I'm not quite sure what goes on the other other side of the colon. I assume it has to involve a function call, but I don't quite see it yet.</p>\n\n<p>Thanks.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 2194, "user_id": 7940614, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b697c574cc5dfb3a4d5e4aff46a1721a?s=128&d=identicon&r=PG&f=1", "display_name": "assembly.jc", "link": "https://stackoverflow.com/users/7940614/assembly-jc"}, "edited": false, "score": 3, "creation_date": 1540563978, "post_id": 53010386, "comment_id": 92925134, "body": "It seems no need to use (:) concat the list:                                                  splitEv n xs = [take n xs] ++ [(take n(drop n xs))]"}, {"owner": {"reputation": 81, "user_id": 6919456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78b6094b3396750e31b59c661285db9e?s=128&d=identicon&r=PG&f=1", "display_name": "Akos Fajszi", "link": "https://stackoverflow.com/users/6919456/akos-fajszi"}, "edited": false, "score": 0, "creation_date": 1540564745, "post_id": 53010386, "comment_id": 92925540, "body": "Yes, but I want it to work at the end of the list like this splitEv 3 [0..7] == [[0,1,2],[3,4,5], [6,7]]"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1540565094, "post_id": 53010386, "comment_id": 92925743, "body": "<code>[something] ++ [something]</code> is a list of length two. Your function returns either an empty list, or a list of length two."}, {"owner": {"reputation": 1403, "user_id": 1748746, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/ZMrp9.png?s=128&g=1", "display_name": "Anthony Raimondo", "link": "https://stackoverflow.com/users/1748746/anthony-raimondo"}, "edited": false, "score": 1, "creation_date": 1540566937, "post_id": 53010386, "comment_id": 92926796, "body": "splitAt is just as easy as take and drop, they do nearly the same things?"}], "answers": [{"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1540565039, "post_id": 53011101, "comment_id": 92925708, "body": "I think you need <code>:</code> instead of  <code>++</code>. Further, I&#39;d remove parentheses for readability, except in <code>(drop n xs)</code> where they are needed."}, {"owner": {"reputation": 81, "user_id": 6919456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78b6094b3396750e31b59c661285db9e?s=128&d=identicon&r=PG&f=1", "display_name": "Akos Fajszi", "link": "https://stackoverflow.com/users/6919456/akos-fajszi"}, "edited": false, "score": 0, "creation_date": 1540566033, "post_id": 53011101, "comment_id": 92926264, "body": "Thanks it works now. Altough I don&#39;t really understand what is the difference between : and ++. I know the first one is able to concat an element to the list and the second one can concat two list."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 81, "user_id": 6919456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78b6094b3396750e31b59c661285db9e?s=128&d=identicon&r=PG&f=1", "display_name": "Akos Fajszi", "link": "https://stackoverflow.com/users/6919456/akos-fajszi"}, "edited": false, "score": 2, "creation_date": 1540566359, "post_id": 53011101, "comment_id": 92926467, "body": "@AkosFajszi That... would be the difference. <code>(:) :: a -&gt; [a] -&gt; [a]</code> and <code>(++) :: [a] -&gt; [a] -&gt; [a]</code>. Further, <code>(++)</code> is defined <i>in terms of</i> <code>(:)</code>, something like <code>[] ++ ys = ys; (x:xs) ++ ys = x: (xs ++ ys)</code>."}, {"owner": {"reputation": 1403, "user_id": 1748746, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/ZMrp9.png?s=128&g=1", "display_name": "Anthony Raimondo", "link": "https://stackoverflow.com/users/1748746/anthony-raimondo"}, "edited": false, "score": 1, "creation_date": 1540566706, "post_id": 53011101, "comment_id": 92926661, "body": "Using take and drop like this, isnt it no better then splitAt? Equally trivial."}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 1, "creation_date": 1540627766, "post_id": 53011101, "comment_id": 92942361, "body": "As a matter of style, you can remove a level of nesting by writing <code>take n xs : splitEV n (drop n xs)</code>. You can also use the worker-wrapper pattern since <code>n</code> is constant for every recursive call: <code>splitEV n = go where go xs = take n xs : go (drop n xs)</code>. There\u2019s still a bit of redundant work (you traverse each split twice) which could be remedied with <code>splitAt</code>, but this method is perfectly readable and fine for what I presume is a homework or self-study assignment."}], "tags": [], "owner": {"reputation": 3063, "user_id": 439578, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e032fbe640b2234c8dce244907b99eab?s=128&d=identicon&r=PG", "display_name": "Manoj R", "link": "https://stackoverflow.com/users/439578/manoj-r"}, "is_accepted": true, "score": 2, "last_activity_date": 1540566918, "last_edit_date": 1540566918, "creation_date": 1540564794, "answer_id": 53011101, "question_id": 53010386, "link": "https://stackoverflow.com/questions/53010386/haskell-how-to-split-a-list-into-n-long-subparts-with-recursion/53011101#53011101", "title": "Haskell - How to split a list into n long subparts with recursion", "body": "<p>Last line should be </p>\n\n<pre><code> splitEv n xs = [take n xs] ++ (splitEv n (drop n xs))\n</code></pre>\n\n<p>In the later part of equation splitEv is called for rest of the list, other than first n elements of the list. This will continue until the list is empty.</p>\n\n<p><strong>Edited</strong> using @chi comment<br>\nFew optimizations are possible.<br>\nIn second line n is not necessary it can be replaced by _. <br>\nIn Third line : can be used instead of ++. It's more optimized. Also brackets can be reduced. </p>\n\n<pre><code>splitEV  _ [] = []\nsplitEV n xs = take n xs:(splitEV n $ drop n xs) \n</code></pre>\n\n<p><strong>Difference between : and ++</strong> (with help of @chepner comment). <br>\nSignature of :</p>\n\n<pre><code>  (:) :: a -&gt; [a] -&gt; [a]\n</code></pre>\n\n<p>while that of ++ is </p>\n\n<pre><code>  (++) :: [a] -&gt; [a] -&gt; [a]\n</code></pre>\n\n<p>: is used to add single element at the head while ++ is used to concatenate two lists. Whenever possible : is used as it is more optimized. Think it as adding an element at the beginning of linked list. You only need to adjust the head element. <br>\nThis is only for the metaphor and under the hood more things could be happening. </p>\n"}], "owner": {"reputation": 81, "user_id": 6919456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/78b6094b3396750e31b59c661285db9e?s=128&d=identicon&r=PG&f=1", "display_name": "Akos Fajszi", "link": "https://stackoverflow.com/users/6919456/akos-fajszi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 481, "favorite_count": 0, "accepted_answer_id": 53011101, "answer_count": 1, "score": 2, "last_activity_date": 1540566918, "creation_date": 1540562261, "last_edit_date": 1540562933, "question_id": 53010386, "link": "https://stackoverflow.com/questions/53010386/haskell-how-to-split-a-list-into-n-long-subparts-with-recursion", "title": "Haskell - How to split a list into n long subparts with recursion", "body": "<p>The following code gives a basic idea. I would like to extend it to the rest of the list with recursion, but using where syntax simply gives no capable code. I tried to name the rest of the list with @done, with no success. I'm still learning Haskell through this code so I'd rather not use any easy solutions like splitAt function etc.</p>\n\n<pre><code>splitEv :: Int -&gt; [a] -&gt; [[a]]\nsplitEv n [] = []\nsplitEv n (x:xs) = [take n (x:xs)] ++ [(take n(drop n (x:xs)))]\n</code></pre>\n"}, {"tags": ["haskell", "deriving"], "answers": [{"comments": [{"owner": {"reputation": 160, "user_id": 5539934, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f988622fe10024b8d52cc99a3bab343a?s=128&d=identicon&r=PG&f=1", "display_name": "Guillaum", "link": "https://stackoverflow.com/users/5539934/guillaum"}, "edited": false, "score": 0, "creation_date": 1540742804, "post_id": 53012658, "comment_id": 92967061, "body": "The second solution appears to needs <code>UndecidableInstances</code>."}, {"owner": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "reply_to_user": {"reputation": 160, "user_id": 5539934, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f988622fe10024b8d52cc99a3bab343a?s=128&d=identicon&r=PG&f=1", "display_name": "Guillaum", "link": "https://stackoverflow.com/users/5539934/guillaum"}, "edited": false, "score": 1, "creation_date": 1540744338, "post_id": 53012658, "comment_id": 92967514, "body": "Don&#39;t they both? UndecidableInstances are harmless, so I wouldn&#39;t worry about it."}], "tags": [], "owner": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "is_accepted": true, "score": 5, "last_activity_date": 1540570422, "creation_date": 1540570422, "answer_id": 53012658, "question_id": 53009549, "link": "https://stackoverflow.com/questions/53009549/haskell-derivingvia-on-multi-param-type-classes-with-fun-deps/53012658#53012658", "title": "Haskell DerivingVia on multi param type classes with fun deps", "body": "<p>So first of all, let's repeat that the instance you want to be derived for you is this one:</p>\n\n<pre><code>instance MyEq (Wrapper Int) Wrapper where\n  eq (Wrapper t) (Wrapper t') = Wrapper (t == t')\n</code></pre>\n\n<p>I cannot see a way to derive the class in exactly the way you want, because as you observe yourself, this requires you to change both class parameters, but we can currently only derive through the last.</p>\n\n<p>One possibility is to flip the class arguments, so that the \"important\" class parameter (the one that determines the other) becomes the last, and then tweak the wrapper type you derive via to include some helpful information, like this:</p>\n\n<pre><code>class MyEq f a | a -&gt; f where\n  aeq :: a -&gt; a -&gt; f Bool\n</code></pre>\n\n<p>Function <code>aeq</code> retains the same type, but the class arguments of <code>MyEq</code> are flipped.\nNow <code>Wrapper2</code> gets an extra parameter to let us specify the desired value of <code>f</code> when deriving:</p>\n\n<pre><code>newtype Wrapper2 (f :: Type -&gt; Type) t = Wrapper2 t\n</code></pre>\n\n<p>Now the instance for <code>Wrapper2</code> can be defined without explicitly specifying <code>f</code>:</p>\n\n<pre><code>instance (Eq t, Coercible Bool (f Bool)) =&gt; MyEq f (Wrapper2 f t) where\n  eq (Wrapper2 t) (Wrapper2 t') = coerce (t == t')\n</code></pre>\n\n<p>The extra parameter in <code>Wrapper2</code> is necessary here to satisfy the functional dependency.</p>\n\n<p>Now we can derive the desired instance as follows:</p>\n\n<pre><code>deriving via Wrapper2 Wrapper Int instance MyEq Wrapper (Wrapper Int)\n</code></pre>\n\n<p>This works because now, GHC is looking for\nan <code>instance MyEq Wrapper (Wrapper2 Wrapper Int)</code>, and this matches the one we have\nprovided.</p>\n\n<hr>\n\n<p>You can achieve the same using an associated type:</p>\n\n<pre><code>class MyEq a where\n  type Result a :: Type -&gt; Type\n  eq :: a -&gt; a -&gt; Result a Bool\n</code></pre>\n\n<p>Same definition of <code>Wrapper2</code> with the extra argument. The instance becomes</p>\n\n<pre><code>instance (Eq t, Coercible Bool (f Bool)) =&gt; MyEq (Wrapper2 f t) where\n  type Result (Wrapper2 f t) = f\n  eq (Wrapper2) (Wrapper2 t') = coerce (t == t')\n\nderiving via Wrapper2 Wrapper Int instance MyEq (Wrapper Int)\n</code></pre>\n"}], "owner": {"reputation": 160, "user_id": 5539934, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f988622fe10024b8d52cc99a3bab343a?s=128&d=identicon&r=PG&f=1", "display_name": "Guillaum", "link": "https://stackoverflow.com/users/5539934/guillaum"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 416, "favorite_count": 4, "accepted_answer_id": 53012658, "answer_count": 1, "score": 4, "last_activity_date": 1540570422, "creation_date": 1540559580, "question_id": 53009549, "link": "https://stackoverflow.com/questions/53009549/haskell-derivingvia-on-multi-param-type-classes-with-fun-deps", "title": "Haskell DerivingVia on multi param type classes with fun deps", "body": "<p>I'm trying to use <code>DerivingVia</code> to cut the boilerplate on instance definitions for a multi parameter type class with functional dependencies.</p>\n\n<p>I have these types and class:</p>\n\n<pre><code>{-# LANGUAGE FunctionalDependencies #-}\n{-# LANGUAGE StandaloneDeriving #-}\n{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE DerivingVia #-}\n\nnewtype Wrapper t = Wrapper t  \nnewtype Wrapper2 t = Wrapper2 t\n\nclass MyEq a f | a -&gt; f where\n  eq :: a -&gt; a -&gt; f Bool\n\n-- Instance for 'Wrapper2'\ninstance Eq t =&gt; MyEq (Wrapper2 t) Wrapper2 where\n  eq (Wrapper2 t) (Wrapper2 t') = Wrapper2 (t == t')\n</code></pre>\n\n<p>I want to derive <code>MyEq (Wrapper Int) Wrapper</code> using <code>deriving via</code>.</p>\n\n<p>My first attempt was to use:</p>\n\n<pre><code>deriving via Wrapper2 instance MyEq (Wrapper Int) Wrapper\n</code></pre>\n\n<p>As discussed in the paper section 6.2, <a href=\"https://www.kosmikus.org/DerivingVia/deriving-via-paper.pdf\" rel=\"nofollow noreferrer\">https://www.kosmikus.org/DerivingVia/deriving-via-paper.pdf</a>, this looks for a <code>MyEq (Wrapper Int) Wrapper2</code> instance, the second argument was \"changed\" but the first one is still <code>Wrapper Int</code>.</p>\n\n<p>Obviously <code>instance MyEq (Wrapper Int) Wrapper2</code> does not exists because I implemented <code>instance MyEq (Wrapper2 Int) Wrapper2</code>.</p>\n\n<p>I cannot \"cheat\" by creating (see <code>Wrapper</code> as first type argument):</p>\n\n<pre><code>-- Instance for 'Wrapper2'\ninstance Eq t =&gt; MyEq (Wrapper t) Wrapper2 where\n  eq (Wrapper2 t) (Wrapper2 t') = Wrapper2 (t == t')\n</code></pre>\n\n<p>Because in this case the functional dependency <code>Wrapper t -&gt; Wrapper2</code> is not respected.</p>\n\n<p>I can easily solve the issue by rewriting <code>eq :: f a -&gt; f a -&gt; f Bool</code> and removing the functional dependency, but I'd like to avoid changing this API.</p>\n"}, {"tags": ["haskell", "applicative"], "comments": [{"owner": {"reputation": 240688, "user_id": 14955, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/5DblQ.png?s=128&g=1", "display_name": "Thilo", "link": "https://stackoverflow.com/users/14955/thilo"}, "edited": false, "score": 2, "creation_date": 1540538929, "post_id": 53003469, "comment_id": 92911142, "body": "Can you include the compilation error message?"}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 3, "creation_date": 1540539901, "post_id": 53003469, "comment_id": 92911652, "body": "&quot;in this example f is just <code>Constant</code>&quot; - no, this is where you&#39;re wrong and what&#39;s causing you trouble. <code>f</code> is <code>Constant a</code>, and so you need <code>pure :: b -&gt; Constant a b</code>."}, {"owner": {"reputation": 1528, "user_id": 1516794, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/0aa31034e2c59f34d63141791746ec35?s=128&d=identicon&r=PG", "display_name": "cmal", "link": "https://stackoverflow.com/users/1516794/cmal"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1540541451, "post_id": 53003469, "comment_id": 92912432, "body": "Thanks for that, I&#39;ve made a lot of such mistakes. @amalloy"}], "answers": [{"comments": [{"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 1, "creation_date": 1540629774, "post_id": 53004462, "comment_id": 92942724, "body": "<code>*</code> can also be written as <code>Type</code> if you import it from <code>GHC.Types</code> (in <code>ghc-prim</code>), which seems to me more readable, and will probably become standard when Dependent Haskell rolls around. E.g., <code>Either :: Type -&gt; Type -&gt; Type</code>, <code>Monad :: (Type -&gt; Type) -&gt; Constraint</code>, and so on."}], "tags": [], "owner": {"reputation": 2578, "user_id": 395863, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/d694caab02e48b350c52fda041cc75cf?s=128&d=identicon&r=PG", "display_name": "Raveline", "link": "https://stackoverflow.com/users/395863/raveline"}, "is_accepted": false, "score": 6, "last_activity_date": 1540542428, "last_edit_date": 1540542428, "creation_date": 1540542118, "answer_id": 53004462, "question_id": 53003469, "link": "https://stackoverflow.com/questions/53003469/how-to-define-the-pure-function-on-applicative/53004462#53004462", "title": "How to define the `pure` function on `Applicative`?", "body": "<p>Your main trouble here is with kinds. I'm going to try and give you an explanation on why your code doesn't work, but for more details I recommend reading <a href=\"https://diogocastro.com/blog/2018/10/17/haskells-kind-system-a-primer/\" rel=\"noreferrer\">this excellent post on kinds</a>.</p>\n\n<p>Consider the first line returned when you ask for information about Applicative in ghci:</p>\n\n<pre><code>\u03bb&gt; :info Applicative\nclass Functor f =&gt; Applicative (f :: * -&gt; *) where\n</code></pre>\n\n<p>See that <code>f :: * -&gt; *</code> bit ? It tells you the expected kind. Know nothing about kinds ? I'll give you the simplest exaplanation I can. Everytime you add a parametric type, you are basically telling you need \"another type to build the type\".</p>\n\n<p>For instance, when you say <code>Maybe a</code>, you say \"To have a Maybe, I need an a\". Or when you write <code>Either a b</code>, you say \"My Either type depends on type a and type b\". You can get information about kind by using <code>:kind</code> or <code>:k</code> for short in ghci. Consider:</p>\n\n<pre><code>\u03bb&gt; :kind Bool\nBool :: *\n\n\u03bb&gt; :kind Maybe\nMaybe :: * -&gt; *\n\n\u03bb&gt; :kind Either\nEither :: * -&gt; * -&gt; *\n</code></pre>\n\n<p>Each \"*\" represents a type. <code>Bool</code> is a simple type. <code>Maybe</code> all alone expects another type. <code>Either</code> all alone expects yet another type. Note the difference when I type:</p>\n\n<pre><code>\u03bb&gt; :kind Maybe Bool\nMaybe Bool :: *\n</code></pre>\n\n<p>And now consider:</p>\n\n<pre><code>\u03bb&gt; :kind Either Bool\nEither Bool :: * -&gt; *\n</code></pre>\n\n<p>See this <code>* -&gt; *</code> kind ? It's exactly the one we've seeen when the asked info about <code>Applicative</code>. (It's also the same kind expect for <code>Functor</code> and <code>Monad</code>).</p>\n\n<p>This means that the typeclass will only operate on the <em>latest</em> parametric type. It's true for <code>Either</code> also. As you can see:</p>\n\n<pre><code>\u03bb&gt; let fun = (++ \" !\")\n\u03bb&gt; fun &lt;$&gt; Left \"Oops\"\nLeft \"Oops\"\n</code></pre>\n\n<p>This does nothing, because the <code>Functor</code> for <code>Either</code> is not a functor on both types of either: it's a functor only on its last type (the <code>b</code> of <code>Either a b</code>). Using a simple <code>Functor</code> and <code>fmap</code> (or here the infix version <code>&lt;$&gt;</code>), I can only operate on the b of <code>Either a b</code>, which is why this one will work:</p>\n\n<pre><code>\u03bb&gt; fun &lt;$&gt; Right \"Oops\"\nRight \"Oops !\"\n</code></pre>\n\n<p>Now, back to what you are trying to do. You have a <code>newtype Constant a b</code>, so <code>Constant</code> has kind <code>* -&gt; * -&gt; *</code>. And let's now look at the the second line from <code>:info Applicative</code> this time, that will give us the signature for <code>pure</code>:</p>\n\n<pre><code>class Functor f =&gt; Applicative (f :: * -&gt; *) where\n  pure :: a -&gt; f a\n</code></pre>\n\n<p>Now always take into account this: the <code>a</code> in the signature of <code>pure</code> <em>is not</em> the <code>a</code> of <code>Constant a b</code>. Worse than that, in this very example, the <code>a</code> in <code>pure</code> is the <code>b</code> of your <code>Constant</code>. Because if you take into account kindness, and if you specialize this signature you get:</p>\n\n<pre><code>  pure :: b -&gt; Constant a b\n</code></pre>\n\n<p>But that is not what you are doing, isn't it ? What is store in your newtype is the type <code>a</code>. And you're trying to put inside the type <code>b</code>. Since <code>a</code> and <code>b</code> can be different, it won't work.</p>\n\n<p>As for \"the big question\" of \"what pure does\", that is indeed quite a question, and I'll give you the beginning of an answer.</p>\n\n<p><code>pure</code> is a way of making a naive value <code>a</code> enter an <code>Applicative f</code>. As the signature says: <code>a -&gt; f a</code>. That doesn't help ? Ok, consider your <code>Applicative</code> as \"a context\" (I use a very general word, because applicatives are a very general notion). \"Context\" could be: I'm working in a world where things could fail (that is <code>Maybe</code>). It could be: I'm working in a world where there are many answers to one question (that is <code>List</code> or <code>[]</code>). It can be many, many things - in your example, it is a context where nothing is ever computed and a constant will always be returned. The issue is that, in your example, it is impossible to \"guess\" what is the constant.</p>\n\n<p>As we've seen the constant (your context) is not <em>the value</em>. It is not the <code>a</code> of <code>pure</code>. It is a part of the <code>f</code>. This is why the implementation uses <code>Monoid</code> and <code>mempty</code>: you need a way of getting a default context, and <code>Monoid</code>s have always a default value available.</p>\n\n<p>Finally, <code>Applicative</code> are <em>hard</em>. So it's perfectly normal not to understand them immediately. Focus on reading the types, trying to understand what the compiler is telling you, and it will get easier. Reread the chapter slowly, take your time.</p>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 0, "last_activity_date": 1540578143, "creation_date": 1540578143, "answer_id": 53014334, "question_id": 53003469, "link": "https://stackoverflow.com/questions/53003469/how-to-define-the-pure-function-on-applicative/53014334#53014334", "title": "How to define the `pure` function on `Applicative`?", "body": "<p>Look at the type. <i>(the eternal advice!)</i></p>\n\n<pre><code>data Const a b = MkConst a\n</code></pre>\n\n<p>For example,</p>\n\n<pre><code>&gt; MkConst 1 :: Const Int Bool\n&gt; MkConst 1 :: Const Int Float\n&gt; MkConst 1 :: Const Int [(Integer, Maybe [()])]\n</code></pre>\n\n<p>Next,</p>\n\n<pre><code>instance Functor (Const a) where\n  fmap f (MkConst x) = MkConst x       \n</code></pre>\n\n<p>What? .... but wait; it's actually</p>\n\n<pre><code>instance Functor (Const a) where\n -- fmap :: (b -&gt; c) -&gt; (Const   a b) -&gt; (Const   a c)\n    fmap    f           (MkConst x  ) =  (MkConst x  )\n</code></pre>\n\n<p>Now it's much clearer, isn't it? <code>Const a</code> is a Functor. Under the container paradigm, in <code>Functor f =&gt; f b</code> the <code>f</code> is the shell and <code>b</code> is the stuff inside. And <code>f ~ Const a</code> is the <em>empty</em> shell. With a whiff of what   could have been there, but isn't. But that's just literature. Things do not have to make sense under everyday paradigms and metaphors. The only thing that matters is <em>that - the - types - fit.</em></p>\n\n<p>Don't try making it all out in your head; put it down on paper.  This is a very important advice that I wish I got much earlier, myself. Don't skip over things; repeat stuff as many times as need be. </p>\n\n<p>Similarly,</p>\n\n<pre><code>instance Monoid a =&gt; Applicative (Const a) where\n  -- pure :: Applicative f         =&gt; b -&gt;  f         b\n  -- pure :: Applicative (Const a) =&gt; b -&gt; (Const   a b)\n  pure                                x =  (MkConst x  )\n</code></pre>\n\n<p>Wait, what? Is <code>x :: a</code>, or is it <code>x :: b</code>? Therein lies the rub. It is the latter, but you make it be the former. </p>\n\n<p><code>Const</code> is the <em>empty</em> shell, remember? Putting <code>x</code> in there still leaves it empty, even if it records the attempt. In other words the <code>x</code> itself is ignored, only its type comes into play:</p>\n\n<pre><code>  -- pure :: (Monoid a, Applicative (Const a)) =&gt; \n  --          b -&gt; (Const   a      b)\n  pure        x =  (MkConst mempty  )\n</code></pre>\n\n<p>(I'm using different names for the type and the data constructor here, to remove ambiguity, which can be confusing at first).</p>\n"}], "owner": {"reputation": 1528, "user_id": 1516794, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/0aa31034e2c59f34d63141791746ec35?s=128&d=identicon&r=PG", "display_name": "cmal", "link": "https://stackoverflow.com/users/1516794/cmal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 311, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1540578143, "creation_date": 1540538370, "last_edit_date": 1540538503, "question_id": 53003469, "link": "https://stackoverflow.com/questions/53003469/how-to-define-the-pure-function-on-applicative", "title": "How to define the `pure` function on `Applicative`?", "body": "<p>The book Haskell Programming from First Principles has an exercise which asks me to instance <code>Applicative</code> on <code>Constant a</code>. </p>\n\n<p>I tried this:</p>\n\n<pre><code>newtype Constant a b =\n  Constant { getConstant :: a }\n  deriving (Eq, Ord, Show)\n\ninstance Functor (Constant a) where\n  fmap f (Constant x) = Constant x\n\ninstance Monoid a =&gt; Applicative (Constant a) where\n  pure x = Constant { getConstant = x }\n  Constant { getConstant = x } &lt;*&gt; Constant { getConstant = y } =\n    Constant { getConstant = x &lt;&gt; y }\n</code></pre>\n\n<p>This does not compile. I sneaked the <a href=\"https://hackage.haskell.org/package/transformers-0.3.0.0/docs/src/Data-Functor-Constant.html\" rel=\"nofollow noreferrer\">source code</a> of <code>Data.Functor.Constant</code> and it has the following definition:</p>\n\n<pre><code>pure _ = Constant mempty\n</code></pre>\n\n<p>I do not really understand <code>Applicative</code> and its <code>pure</code> function, even after read the Chapter of Applicative in this book.</p>\n\n<p>I know this may be a big question, but can someone explain what the pure does, and why they just define <code>pure</code> use some <code>mempty</code> on a <code>Monoid</code>? And why this one:</p>\n\n<pre><code>pure x = Constant { getConstant = x }\n</code></pre>\n\n<p>does not compile? I thought the <code>pure</code> just transform some value of type <code>a</code> to some value of type <code>f a</code>, and in this example <code>f</code> is just <code>Constant</code>. Why is it different from <a href=\"https://hackage.haskell.org/package/transformers-0.4.1.0/docs/src/Data-Functor-Identity.html#Identity\" rel=\"nofollow noreferrer\">the pure of <code>Identity a</code></a>?</p>\n"}, {"tags": ["haskell", "ghc", "type-parameter"], "answers": [{"comments": [{"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 1, "creation_date": 1540630063, "post_id": 53003045, "comment_id": 92942776, "body": "To be explicit, the solution is to either provide the polymorphic type signature (<code>s :: (Show a) =&gt; a -&gt; String</code>) or add the pragma <code>{-# LANGUAGE NoMonomorphismRestriction #-}</code> at the top of the file (or equivalently <code>-XNoMonomorphismRestriction</code> on the command line or <code>NoMonomorphismRestriction</code> in the <code>extensions</code> field in a Cabal file or <code>package.yaml</code>)."}], "tags": [], "owner": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "is_accepted": true, "score": 5, "last_activity_date": 1540536767, "creation_date": 1540536767, "answer_id": 53003045, "question_id": 53002848, "link": "https://stackoverflow.com/questions/53002848/ghc-8-constrained-type-parameterization-rules-with-renamed-functions/53003045#53003045", "title": "GHC 8 - Constrained type parameterization rules with renamed functions", "body": "<p>You are bitten by the <a href=\"https://wiki.haskell.org/Monomorphism_restriction\" rel=\"noreferrer\">monomorphism restriction</a> and its not a bug. The first two paragraphs of that page:</p>\n\n<blockquote>\n  <p>The \"monomorphism restriction\" is a counter-intuitive rule in Haskell\n  type inference. If you forget to provide a type signature, sometimes\n  this rule will fill the free type variables with specific types using\n  \"type defaulting\" rules. The resulting type signature is always less\n  polymorphic than you'd expect, so often this results in the compiler\n  throwing type errors at you in situations where you expected it to\n  infer a perfectly sane type for a polymorphic expression.</p>\n  \n  <p>A simple example is plus = (+). Without an explicit signature for\n  plus, the compiler will not infer the type (+) :: (Num a) => a -> a ->\n  a for <code>plus</code>, but will apply defaulting rules to specify plus ::\n  Integer -> Integer -> Integer. When applied to plus 3.5 2.7, GHCi will\n  then produce the somewhat-misleading-looking error, No instance for\n  (Fractional Integer) arising from the literal \u20183.5\u2019.</p>\n</blockquote>\n\n<p>Simply replace <code>(+)</code> here with <code>show</code> and it is your example.</p>\n\n<p>With this code for example:</p>\n\n<pre><code>import System.IO\noutput :: [String] -&gt; IO()\noutput stringList = sequence_ $ map putStrLn stringList\n\nmain :: IO ()\n\ns = show\n\ns2 x = show x\n\nmain = do\n  output [\n    s False,\n    s True\n   ]\n  output [\n    s2 42,\n    s2 True\n    ]\n</code></pre>\n\n<p>You get this result in ghci after loading the file containing this:</p>\n\n<pre><code>Prelude&gt; :l test.hs\n[1 of 1] Compiling Main             ( test.hs, interpreted )\nOk, one module loaded.\n*Main&gt; :t s\ns :: Bool -&gt; String\n*Main&gt; :t s2\ns2 :: Show a =&gt; a -&gt; String\n*Main&gt;\n</code></pre>\n\n<p>So in your first example the type deduced for <code>s</code> doesn't allow you to use it with a number.</p>\n\n<p>The exact rules, when the monomorphism restriction applies are defined here <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch4.html#x10-930004.5.5\" rel=\"noreferrer\">Section 4.5.5 of Haskell Report 2010</a>, but are fairly technical.</p>\n\n<p>Also pay attention that the monomorphism restriction is deactivated at the ghci prompt and only applies to compiled modules.</p>\n"}], "owner": {"reputation": 1351, "user_id": 2514354, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/PiwJY.png?s=128&g=1", "display_name": "loxaxs", "link": "https://stackoverflow.com/users/2514354/loxaxs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 54, "favorite_count": 0, "accepted_answer_id": 53003045, "answer_count": 1, "score": 2, "last_activity_date": 1540536767, "creation_date": 1540535938, "question_id": 53002848, "link": "https://stackoverflow.com/questions/53002848/ghc-8-constrained-type-parameterization-rules-with-renamed-functions", "title": "GHC 8 - Constrained type parameterization rules with renamed functions", "body": "<p>I'm puzzled by a seemingly buggy behavior of GHC happening with rather simple Haskell programs.</p>\n\n<p>Consider the following code:</p>\n\n\n\n<pre class=\"lang-hs prettyprint-override\"><code>import System.IO\noutput :: [String] -&gt; IO()\noutput stringList = sequence_ $ map putStrLn stringList\n\nmain :: IO ()\n\ns = show\n\nmain = output [\n    s 42,\n    s True\n  ]\n</code></pre>\n\n<p>In GHC 8.4.3 produces the following output:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>$ runghc parameterize.hs\n.hs:9:7: error:\n    \u2022 No instance for (Num Bool) arising from the literal \u201842\u2019\n    \u2022 In the first argument of \u2018s\u2019, namely \u201842\u2019\n      In the expression: s 42\n      In the first argument of \u2018output\u2019, namely \u2018[s 42, s True]\u2019\n  |\n9 |     s 42,\n  |\n</code></pre>\n\n<p>GHC 8.0.2 produces the same error.</p>\n\n<p>This also happens with the following variations:</p>\n\n<ul>\n<li><p>Using <code>where</code></p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>main :: IO ()\nmain = output [\n    s 42,\n    s True\n  ]\n  where s = show\n</code></pre></li>\n<li><p>Using <code>let ... in</code></p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>main :: IO ()\nmain = let s = show in output [\n    s 42,\n    s True\n  ]\n</code></pre></li>\n</ul>\n\n<p>But in the three cases, replacing <code>s = show</code> by <code>s x = show x</code> solves the problem:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>main :: IO ()\n\ns x = show x\n\nmain = output [\n    s 42,\n    s True\n  ]\n</code></pre>\n\n<p></p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>$ runghc u.hs\n42\nTrue\n</code></pre>\n\n<p>This is not specific to <code>show</code>. Here is one which fails with the <code>succ</code> function operating on <code>Enum</code> elements:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>main :: IO ()\nmain = let s = succ in putStrLn $ showList [\n    show $ s 41,\n    show $ s False\n  ] \"\"\n</code></pre>\n\n<p>Replacing <code>s = succ</code> by <code>s x = succ x</code> still fixes the thing.</p>\n\n<p>I haven't been able to find an explanation for this unexpected behavior. Is it a bug ? If it isn't, please explain what is happening.</p>\n"}, {"tags": ["loops", "haskell", "types", "monads", "higher-order-functions"], "comments": [{"owner": {"reputation": 240688, "user_id": 14955, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/5DblQ.png?s=128&g=1", "display_name": "Thilo", "link": "https://stackoverflow.com/users/14955/thilo"}, "edited": false, "score": 2, "creation_date": 1540534889, "post_id": 53002212, "comment_id": 92909144, "body": "The type of <code>(print)</code> is <code>Show a =&gt; a -&gt; IO ()</code>, not <code>Show a =&gt; a -&gt; IO a</code>. You need to combine it with something else to make it return the input back."}], "answers": [{"comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1540548023, "post_id": 53005341, "comment_id": 92916137, "body": "you meant &quot;<code>ioFn</code> which returns <code>IO a</code>&quot;."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1540548434, "post_id": 53005341, "comment_id": 92916364, "body": "also, your indentation is wrong. you need either to correct it, or add explicit <code>{ ; }</code> delimiters, or <i>both</i>."}], "tags": [], "owner": {"reputation": 3063, "user_id": 439578, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/e032fbe640b2234c8dce244907b99eab?s=128&d=identicon&r=PG", "display_name": "Manoj R", "link": "https://stackoverflow.com/users/439578/manoj-r"}, "is_accepted": false, "score": 0, "last_activity_date": 1540560011, "last_edit_date": 1540560011, "creation_date": 1540545205, "answer_id": 53005341, "question_id": 53002212, "link": "https://stackoverflow.com/questions/53002212/haskell-no-instance-of-num-defining-my-own-monadic-loop/53005341#53005341", "title": "Haskell: No instance of (Num ()) - defining my own monadic loop", "body": "<p>sequenceIO return type is IO [a], but ioFn (as in the definition of for') is \"print\" which returns IO(). You need ioFn to return IO a, so that return of sequenceIO will be IO [a].  </p>\n\n<p>e.g. try \"return\" instead of \"print\" and then print the value. \"return\" is a function in haskell which simply converts the argument passed into monad, in this case IO monad.  </p>\n\n<pre><code>main = do p &lt;- for' 1 (\\i-&gt;i==10) (\\i-&gt;i+1) (return) \n         print(p) \n</code></pre>\n\n<p>This will print simply list of 1 to 9 numbers. </p>\n\n<p>Or </p>\n\n<pre><code>p :: Int -&gt; IO [Int]\np x =  for' 1 (\\i-&gt;i==x) (\\i-&gt;i+1) (return)\n\nmain = do y &lt;- p 10\n         print (y)  \n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1540569460, "post_id": 53006574, "comment_id": 92928230, "body": "@luqui thanks; white space is an important tool. In Lisp, too."}], "tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": true, "score": 3, "last_activity_date": 1540650555, "last_edit_date": 1540650555, "creation_date": 1540549224, "answer_id": 53006574, "question_id": 53002212, "link": "https://stackoverflow.com/questions/53002212/haskell-no-instance-of-num-defining-my-own-monadic-loop/53006574#53006574", "title": "Haskell: No instance of (Num ()) - defining my own monadic loop", "body": "<p>Here's what you wrote:</p>\n\n<pre><code>    for' :: a -&gt; (a -&gt; Bool) -&gt; (a -&gt; a ) -&gt; (a -&gt; IO a ) -&gt; IO [a]\n    for'    s    cnd            incr         ioFn         =  sequenceIO (map (ioFn) ...\n\n*Main&gt; for' 1    (\\i-&gt;i==10)    (\\i-&gt;i+1)    (print     )      \n            a                                (a -&gt; IO ())\n                                             ------------\n            ()                                      a ~ ()\n</code></pre>\n\n<p>Thus <code>1 :: (Num a) =&gt; a ~ (Num ()) =&gt; ()</code>. But there's no <code>Num</code> instance for the type <code>()</code>.</p>\n\n<p>This is GHC's roundabout way of telling you, you need a function of type <code>a -&gt; IO a</code>, not <code>a -&gt; IO ()</code>. </p>\n\n<p>Hindley-Milner allows unification with a \"narrower\" type, but here it would be better if it weren't -- the error message would be much clearer.</p>\n\n<p>In any case it is easy to conjure up your own <em>value</em>&ndash;returning <em>print</em>, like</p>\n\n<pre><code>myprint :: a -&gt; IO a\nmyprint x = do { print x      -- or,  print x &gt;&gt; return x\n               ; return x \n               }\n</code></pre>\n"}], "owner": {"reputation": 9547, "user_id": 46279, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/df9614769cb56c2cc06330efa2599e3f?s=128&d=identicon&r=PG", "display_name": "coder_bro", "link": "https://stackoverflow.com/users/46279/coder-bro"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 88, "favorite_count": 0, "accepted_answer_id": 53006574, "answer_count": 2, "score": 2, "last_activity_date": 1540650555, "creation_date": 1540532788, "last_edit_date": 1540650493, "question_id": 53002212, "link": "https://stackoverflow.com/questions/53002212/haskell-no-instance-of-num-defining-my-own-monadic-loop", "title": "Haskell: No instance of (Num ()) - defining my own monadic loop", "body": "<p>I am attempting this exercise in Haskell wiki:  <a href=\"https://en.wikibooks.org/wiki/Haskell/Higher-order_functions\" rel=\"nofollow noreferrer\">https://en.wikibooks.org/wiki/Haskell/Higher-order_functions</a></p>\n\n<blockquote>\n  <p>The following exercise combines what you have learned about higher\n  order functions, recursion and I/O. We are going to recreate what is\n  known in imperative languages as a <em>for</em> loop. Implement a function</p>\n\n<pre><code>for :: a -&gt; (a -&gt; Bool) -&gt; (a -&gt; a) -&gt; (a -&gt; IO ()) -&gt; IO () \nfor i p f job = -- ???\n</code></pre>\n</blockquote>\n\n<p>so far I have:</p>\n\n<pre><code>-- for : init value, end condition function, increment function, IO function, \n--       returns IO action\n\ngenerate :: a -&gt; (a-&gt;Bool) -&gt; (a-&gt;a) -&gt; [a]\ngenerate s cnd incr = if (cnd s) then [] else [s] ++ generate (incr s) cnd incr\n\nprintToList  = do\n               u &lt;- print 1\n               v &lt;- print 2\n               return [u,v]\n\nioToASingle :: [IO a] -&gt; IO [a]\nioToASingle (x:xs) = do\n                 x' &lt;- x\n                 return [x']\n\nsequenceIO :: [IO a] -&gt; IO [a]\nsequenceIO [] = return []\nsequenceIO (x:xs) = do\n                     x' &lt;- x\n                     xs' &lt;- sequenceIO xs\n                     return ([x'] ++ xs')\n\nfor::a-&gt;(a-&gt;Bool)-&gt;(a-&gt;a)-&gt;(a-&gt;IO())-&gt;IO()\nfor s cnd incr ioFn = sequence_ (map (ioFn) (generate s cnd incr))\n\nfor'::a-&gt;(a-&gt;Bool)-&gt;(a-&gt;a)-&gt;(a-&gt;IO a)-&gt;IO [a]\nfor' s cnd incr ioFn = sequenceIO (map (ioFn) (generate s cnd incr))\n</code></pre>\n\n<p><code>for</code> works OK:</p>\n\n<pre><code>for 1 (\\i-&gt;i==10) (\\i-&gt;i+1) (print)\n1\n2\n3\n4\n5\n6\n7\n8\n9\n</code></pre>\n\n<p><code>for'</code> gets an error:</p>\n\n<pre><code>*Main&gt; for' 1 (\\i-&gt;i==10) (\\i-&gt;i+1) (print)\n\n&lt;interactive&gt;:323:6: error:\n    \u2022 No instance for (Num ()) arising from the literal \u20181\u2019\n    \u2022 In the first argument of \u2018for'\u2019, namely \u20181\u2019\n      In the expression: for' 1 (\\ i -&gt; i == 10) (\\ i -&gt; i + 1) (print)\n      In an equation for \u2018it\u2019:\n          it = for' 1 (\\ i -&gt; i == 10) (\\ i -&gt; i + 1) (print)\n*Main&gt;\n</code></pre>\n\n<p>I can't figure out what's wrong.</p>\n"}, {"tags": ["haskell", "functor"], "answers": [{"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 2, "last_activity_date": 1540529766, "creation_date": 1540529766, "answer_id": 53001675, "question_id": 53001383, "link": "https://stackoverflow.com/questions/53001383/couldnt-match-type-a-with-a1/53001675#53001675", "title": "Couldn&#39;t match type `a` with `a1`", "body": "<h3>Question 1</h3>\n\n<p>You've made a mistake. The <code>Flip</code> means that you need to map over the <em>first</em> parameter of <code>K</code>:</p>\n\n<pre><code>instance Functor (Flip K a) where\n  fmap f (Flip (K a)) = Flip (K (f a))\n</code></pre>\n\n<h3>Question 2</h3>\n\n<p>There are good reasons for this. One of them is that it can be extremely useful (to maintain program invariants or to guide instance resolution) to give a type a <em>phantom</em> parameter. Those techniques would be worthless if the compiler just ignored them. (Note: you can ignore them when you need to, and <code>Data.Coerce</code> gives some advanced tools for doing so. You're probably not ready for coercions yet).</p>\n\n<p>Another reason is that it would be considerably harder to figure out what types were equal to what other types, since you'd have to look at details of each. There are probably more reasons.</p>\n\n<h3>An aside</h3>\n\n<p><code>FlexibleInstances</code> seems rather awkward and limiting here. Here's how I'd do it:</p>\n\n<pre><code>-- A functor in the second to last type argument\nclass Functor2 p where\n  fmap2 :: (a -&gt; a') -&gt; p a b -&gt; p a' b\n\ninstance Functor2 K where\n  fmap2 = -- you fill in the blank\n\ninstance Functor2 p =&gt; Functor (Flip p b) where\n  fmap = -- you fill in the blank\n</code></pre>\n"}], "owner": {"reputation": 1528, "user_id": 1516794, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/0aa31034e2c59f34d63141791746ec35?s=128&d=identicon&r=PG", "display_name": "cmal", "link": "https://stackoverflow.com/users/1516794/cmal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 245, "favorite_count": 0, "accepted_answer_id": 53001675, "answer_count": 1, "score": 0, "last_activity_date": 1540529766, "creation_date": 1540527698, "last_edit_date": 1540529735, "question_id": 53001383, "link": "https://stackoverflow.com/questions/53001383/couldnt-match-type-a-with-a1", "title": "Couldn&#39;t match type `a` with `a1`", "body": "<p>I am doing the exercise in the Haskell Programming from First Principles, Chapter 16. The question is to ask us to write Functor definition for the datatype:</p>\n\n<pre><code>{-# LANGUAGE FlexibleInstances #-}\nnewtype Flip f a b = Flip (f b a) deriving (Eq, Show)\nnewtype K a b = K a\ninstance Functor (Flip K a) where\n  fmap = undefined\n</code></pre>\n\n<p>Here is my try:</p>\n\n<pre><code>{-# LANGUAGE FlexibleInstances #-}\nnewtype Flip f a b =\n  Flip (f b a)\n  deriving (Eq, Show)\n\nnewtype K a b =\n  K a\n\n-- instance Functor (K a) where\n-- fmap _ (K a) = K a\n\ninstance Functor (Flip K a) where\n  fmap _ (Flip (K a)) = Flip (K a)\n</code></pre>\n\n<p>but it does not compile:</p>\n\n<pre><code>chapEx2.hs:17:25: error:\n    \u2022 Couldn't match type \u2018a1\u2019 with \u2018b\u2019\n      \u2018a1\u2019 is a rigid type variable bound by\n        the type signature for:\n          fmap :: forall a1 b. (a1 -&gt; b) -&gt; Flip K a a1 -&gt; Flip K a b\n        at chapEx2.hs:17:3-6\n      \u2018b\u2019 is a rigid type variable bound by\n        the type signature for:\n          fmap :: forall a1 b. (a1 -&gt; b) -&gt; Flip K a a1 -&gt; Flip K a b\n        at chapEx2.hs:17:3-6\n      Expected type: Flip K a b\n        Actual type: Flip K a a1\n    \u2022 In the expression: Flip (K a)\n      In an equation for \u2018fmap\u2019: fmap f (Flip (K a)) = Flip (K a)\n      In the instance declaration for \u2018Functor (Flip K a)\u2019\n    \u2022 Relevant bindings include\n        a :: a1 (bound at chapEx2.hs:17:19)\n        f :: a1 -&gt; b (bound at chapEx2.hs:17:8)\n        fmap :: (a1 -&gt; b) -&gt; Flip K a a1 -&gt; Flip K a b\n          (bound at chapEx2.hs:17:3)\n   |\n17 |   fmap f (Flip (K a)) = Flip (K a)\n   |                         ^^^^^^^^^^\n</code></pre>\n\n<p>Can someone explain the error message? I just feel confused about the error message:</p>\n\n<ol>\n<li>Why does compiler deduce the <code>Actual type</code> to be <code>Flip K a a1</code> rather than <code>Flip K a b</code>? </li>\n<li>Why the compiler bother to match the third parameter of <code>K</code>? The type <code>K</code>'s definition only has one <code>a</code> but no <code>b</code>, the <code>b</code> only occurs in the left of dataclass declaration (left side of the <code>=</code> sign) but not the typeclass declaration(right side of the <code>=</code> sign) of <code>newtype K a b = K a</code>.</li>\n<li>Why the <code>Flip (K a)</code> cannot be changed to <code>Flip x</code>?</li>\n<li>I found <code>fmap f (Flip (K a)) = Flip (K (f a))</code> compiles, what is the difference?</li>\n</ol>\n"}, {"tags": ["haskell", "binary-data", "bytestring"], "comments": [{"owner": {"reputation": 586, "user_id": 5566407, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/96f6a5bd6884a8436fe3cabf85be2e94?s=128&d=identicon&r=PG&f=1", "display_name": "xuq01", "link": "https://stackoverflow.com/users/5566407/xuq01"}, "edited": false, "score": 0, "creation_date": 1540526198, "post_id": 53000900, "comment_id": 92906610, "body": "Why the downvote?"}, {"owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "edited": false, "score": 0, "creation_date": 1540543743, "post_id": 53000900, "comment_id": 92913675, "body": "The question is absolutely OK, no need to close."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1540563999, "post_id": 53000900, "comment_id": 92925144, "body": "The question is rather unclear to me.  If the five bytes are not a byrestring then how are you wanting to use the binary package?  What higher order bites should remain empty?  61 62 63 or 37 38 and 39?"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1540564061, "post_id": 53000900, "comment_id": 92925180, "body": "Also, what had stopped you from doing this?  Usually questions without an attempt are voted close for reasons such as &quot;too broad&quot;."}, {"owner": {"reputation": 586, "user_id": 5566407, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/96f6a5bd6884a8436fe3cabf85be2e94?s=128&d=identicon&r=PG&f=1", "display_name": "xuq01", "link": "https://stackoverflow.com/users/5566407/xuq01"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1540573884, "post_id": 53000900, "comment_id": 92930174, "body": "@ThomasM.DuBuisson I can use and live with a bytestring, but just wondering if I could do C-style bit-packing with <code>binary</code>."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1540579668, "post_id": 53000900, "comment_id": 92932906, "body": "Ah so as @bergey said we could use Data.Bits or just plain old multiplication such as <code>toWord64 = foldl (\\a c - &gt;a*256 + fromIntegral c) 0 :: [Word8] -&gt; Word64</code> and bitmasks can be applied as desired to ensure the right bits are zero.  If you want to use Binary then the implication is using bytestring, for example you could <code>decode . (pack [0,0,0] &lt;&gt;) :: ByteString -&gt; Word64</code>."}, {"owner": {"reputation": 586, "user_id": 5566407, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/96f6a5bd6884a8436fe3cabf85be2e94?s=128&d=identicon&r=PG&f=1", "display_name": "xuq01", "link": "https://stackoverflow.com/users/5566407/xuq01"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1540582815, "post_id": 53000900, "comment_id": 92934229, "body": "@ThomasM.DuBuisson I see. So I need to go through a ByteString absolutely, and in my case I&#39;d just use the ByteString itself. The answer to <i>my</i> question is no, then. Thanks!"}], "answers": [{"tags": [], "owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "is_accepted": false, "score": 1, "last_activity_date": 1540576426, "creation_date": 1540576426, "answer_id": 53013982, "question_id": 53000900, "link": "https://stackoverflow.com/questions/53000900/how-to-read-a-5-byte-thing-into-a-word64-using-binary/53013982#53013982", "title": "How to read a 5-byte thing into a `Word64` using `binary`?", "body": "<p>Shift and bitwise-OR are in <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Bits.html\" rel=\"nofollow noreferrer\">Data.Bits</a>.  Data.Binary.Get has a family of <a href=\"http://hackage.haskell.org/package/binary-0.8.6.0/docs/Data-Binary-Get.html#v:getWord64be\" rel=\"nofollow noreferrer\">getWord functions</a> that read fixed-length pieces from a <code>ByteString</code> of unknown length, without any interpretation beyond endian-ness.  It may also help to know that <code>fromIntegral</code> for <code>Word</code> types preserves the unsigned-int interpretation of the Word (when going from smaller to larger words), so you can zero-extend a <code>Word8</code> to a <code>Word64</code>.</p>\n"}], "owner": {"reputation": 586, "user_id": 5566407, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/96f6a5bd6884a8436fe3cabf85be2e94?s=128&d=identicon&r=PG&f=1", "display_name": "xuq01", "link": "https://stackoverflow.com/users/5566407/xuq01"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 100, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1540576426, "creation_date": 1540523733, "last_edit_date": 1540561742, "question_id": 53000900, "link": "https://stackoverflow.com/questions/53000900/how-to-read-a-5-byte-thing-into-a-word64-using-binary", "title": "How to read a 5-byte thing into a `Word64` using `binary`?", "body": "<p>Is it possible to read a 5-byte segment of data into a <code>Word64</code> using the <code>binary</code> package, leaving the three higher-order bits empty? Or must I use a <code>ByteString</code>?</p>\n"}, {"tags": ["haskell", "monads"], "comments": [{"owner": {"reputation": 1670, "user_id": 188256, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/cXJkr.png?s=128&g=1", "display_name": "snipsnipsnip", "link": "https://stackoverflow.com/users/188256/snipsnipsnip"}, "edited": false, "score": 0, "creation_date": 1540519062, "post_id": 53000325, "comment_id": 92905255, "body": "Hi, you should visit <a href=\"https://softwareengineering.stackexchange.com/tour\">Programmers.SE</a> or <a href=\"https://cs.stackexchange.com/tour\">CS.SE</a> for questions not specific to any source code. Also please take a <a href=\"https://stackoverflow.com/tour\">Tour</a>."}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1540521601, "post_id": 53000325, "comment_id": 92905694, "body": "Is this related to <a href=\"https://stackoverflow.com/questions/52973336/monads-not-with-flatmap-but-flatunit\" title=\"monads not with flatmap but flatunit\">stackoverflow.com/questions/52973336/&hellip;</a> ?"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 1, "creation_date": 1540521843, "post_id": 53000325, "comment_id": 92905755, "body": "@jberryman Presumably it is a follow-up to that one (cf. the comments to the answer there). Note that the rollback war on that question appears to have caused a 24-hour suspension of the OP."}], "answers": [{"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user10180218"}, "edited": false, "score": 0, "creation_date": 1540745908, "post_id": 53000754, "comment_id": 92967936, "body": "Thanks for the answer. I have a question. about &quot;T(T(x)) = T(x) does not generally hold, even up to isomorphism.&quot;. I thought that if it&#39;s an Identity monad that is isomorohism, <code>T(T(x)) = T(x)</code> holds. Am I wrong?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1540747751, "post_id": 53000754, "comment_id": 92968445, "body": "@bayesian-study You are not wrong. But most monads are not the Identity monad."}, {"owner": {"user_type": "does_not_exist", "display_name": "user10180218"}, "edited": false, "score": 0, "creation_date": 1540802258, "post_id": 53000754, "comment_id": 92982336, "body": "&quot;does not generally hold, even up to isomorphism&quot; seems to mean as if <code>T(T(x)) = T(x)</code> does Not hold on isomophism identiy monad."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1540816900, "post_id": 53000754, "comment_id": 92990835, "body": "@bayesian-study It means that it does not hold <i>in general</i> -- that is, across all monads."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 8, "last_activity_date": 1540630574, "last_edit_date": 1540630574, "creation_date": 1540522211, "answer_id": 53000754, "question_id": 53000325, "link": "https://stackoverflow.com/questions/53000325/monads-functors-idempotency-of-type/53000754#53000754", "title": "Monads = Functors + Idempotency (of type)?", "body": "<p>No, a monad is emphatically not idempotent: although there is a requirement that there be a natural transformation</p>\n\n<pre><code>mu_x : T(T(x)) -&gt; T(x)\n</code></pre>\n\n<p>it is in general <em>not</em> the case that the two objects selected in this way are equal, that is,</p>\n\n<pre><code>T(T(x)) = T(x)\n</code></pre>\n\n<p>does not generally hold, even up to isomorphism.</p>\n\n<p>Even in the restricted land of Haskell <code>Monad</code> it is easy to see this in action: <code>Maybe (Maybe ())</code> and <code>Maybe ()</code> are clearly inequal types with different numbers of semantic objects; ignoring bottoms:</p>\n\n<pre><code>Nothing, Just () -- Maybe ()\nNothing, Just Nothing, Just (Just ()) -- Maybe (Maybe ())\n</code></pre>\n\n<p>or with bottoms:</p>\n\n<pre><code>_|_, Nothing, Just _|_, Just () -- Maybe ()\n_|_, Nothing, Just _|_, Just Nothing, Just (Just _|_), Just (Just ()) -- Maybe (Maybe ())\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user10560643"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 171, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1540630574, "creation_date": 1540518348, "question_id": 53000325, "link": "https://stackoverflow.com/questions/53000325/monads-functors-idempotency-of-type", "title": "Monads = Functors + Idempotency (of type)?", "body": "<p>In Haskell, Monads are defined by kleisli triple.</p>\n\n<p>In Category theory in general, is it fine to say:</p>\n\n<p>Monads = Functors + <a href=\"https://en.wikipedia.org/wiki/Idempotence\" rel=\"nofollow noreferrer\">Idempotency</a> of the monadic type (not the value)?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1540522795, "post_id": 53000271, "comment_id": 92905967, "body": "I don&#39;t understand the question. What would you like to be a list of Val&#39;s? What do you want oneDown to do?"}, {"owner": {"reputation": 479, "user_id": 4496701, "user_type": "registered", "accept_rate": 25, "profile_image": "https://lh5.googleusercontent.com/-SST61v329Q0/AAAAAAAAAAI/AAAAAAAAAFM/ihwdZ1nZE7Q/photo.jpg?sz=128", "display_name": "Cliff Stamp", "link": "https://stackoverflow.com/users/4496701/cliff-stamp"}, "reply_to_user": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1540526099, "post_id": 53000271, "comment_id": 92906582, "body": "@jberryman I would like Val&#39;s to be a recursive data structure which can have lists of itself not just list of Strings."}], "answers": [{"tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": true, "score": 2, "last_activity_date": 1540530179, "creation_date": 1540530179, "answer_id": 53001735, "question_id": 53000271, "link": "https://stackoverflow.com/questions/53000271/haskell-recursive-data-type-parameterized-types/53001735#53001735", "title": "Haskell : recursive data type (Parameterized Types)", "body": "<p>What you're looking for would result in an infinite data type, which Haskell explicitly disallows. However, we can hide this infinity behind a newtype and the compiler won't complain.</p>\n\n<pre><code>data Val s i a = S s | I i | A a deriving (Show)\nnewtype Val' = Val' (Val String Int [Val']) deriving (Show)\n</code></pre>\n\n<p>It's still doing exactly what your example did (plus a few type constructors that will get optimized away at runtime), but now we can infinitely recurse because we've <em>guarded</em> the recursive type.</p>\n\n<p>This is actually what the <a href=\"https://hackage.haskell.org/package/recursion-schemes\" rel=\"nofollow noreferrer\">recursion-schemes</a> library does to get inductively-defined data that we can define generic recursion techniques on. If you're interested in generalized data types like this, you may have a look at that library.</p>\n\n<p>To construct this newly-made type, we have to use the <code>Val'</code> constructor.</p>\n\n<pre><code>let myVal = A [Val' (I 3), Val' (S \"ABC\"), Val' (A [])]\n</code></pre>\n"}], "owner": {"reputation": 479, "user_id": 4496701, "user_type": "registered", "accept_rate": 25, "profile_image": "https://lh5.googleusercontent.com/-SST61v329Q0/AAAAAAAAAAI/AAAAAAAAAFM/ihwdZ1nZE7Q/photo.jpg?sz=128", "display_name": "Cliff Stamp", "link": "https://stackoverflow.com/users/4496701/cliff-stamp"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 412, "favorite_count": 0, "accepted_answer_id": 53001735, "answer_count": 1, "score": 0, "last_activity_date": 1540530179, "creation_date": 1540517811, "last_edit_date": 1540526061, "question_id": 53000271, "link": "https://stackoverflow.com/questions/53000271/haskell-recursive-data-type-parameterized-types", "title": "Haskell : recursive data type (Parameterized Types)", "body": "<p>I have this :</p>\n\n<pre><code>data Val s i a = S s | I i | A a deriving (Show)\n</code></pre>\n\n<p>To play with non-homogenous lists in Haskell. So I can do something like (just an example function ):</p>\n\n<pre><code>oneDown :: Val String Int [String]-&gt; Either String String\n</code></pre>\n\n<p>But I would actually like this to be a list of Vals, i.e. something like :</p>\n\n<pre><code>oneDown :: Val String Int [Val]-&gt; Either String String\n</code></pre>\n"}, {"tags": ["haskell", "exception-handling"], "comments": [{"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 0, "creation_date": 1540501776, "post_id": 52997821, "comment_id": 92900993, "body": "Possibly useful links: <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Exception.html#g:4\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/base-4.12.0.0/docs/&hellip;</a> <a href=\"https://www.schoolofhaskell.com/user/snoyberg/general-haskell/exceptions/catching-all-exceptions\" rel=\"nofollow noreferrer\">schoolofhaskell.com/user/snoyberg/general-haskell/exceptions&zwnj;&#8203;/&hellip;</a>"}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1540505174, "post_id": 52997821, "comment_id": 92902129, "body": "You can catch SomeException, which is the root of the exception hierarchy. There is (afaik) no programmatic way to get a list of the fine-grained exception types that might be thrown from arbitrary code"}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1540505337, "post_id": 52997821, "comment_id": 92902180, "body": "Note also strictly speaking you can&#39;t handle all exceptions, e.g. ThreadBlockedIndefinitelyOnMVar results in a thread being killed whether it&#39;s logic is surrounded by a handler or not. I&#39;m not really sure what happens for OOM etc"}], "answers": [{"comments": [{"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1540535332, "post_id": 53002699, "comment_id": 92909319, "body": "See also the video  &quot;Async Exception Handling in Haskell&quot; <a href=\"https://www.youtube.com/watch?v=T5y8sFmCFnA\" rel=\"nofollow noreferrer\">youtube.com/watch?v=T5y8sFmCFnA</a>"}], "tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": false, "score": 3, "last_activity_date": 1540536897, "last_edit_date": 1540536897, "creation_date": 1540535236, "answer_id": 53002699, "question_id": 52997821, "link": "https://stackoverflow.com/questions/52997821/making-sure-all-exceptions-are-handled/53002699#53002699", "title": "Making sure all exceptions are handled", "body": "<p>You can catch all exceptions by way of <code>SomeException</code>, but this is usually a bad idea because you also end up catching asynchronous exceptions that are <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Concurrent.html#v:throwTo\" rel=\"nofollow noreferrer\">thrown to the thread</a> from outside it.</p>\n\n<p>In Haskell, it is frequent to use <a href=\"https://web.archive.org/web/20180120142000/http://chimera.labs.oreilly.com:80/books/1230000000929/ch09.html\" rel=\"nofollow noreferrer\">asynchronous exceptions</a> to trigger thread cancellations from other threads, <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Exception-Base.html#t:AsyncException\" rel=\"nofollow noreferrer\">signal out of memory errors</a>, and the like. And it is very rare that you want to catch an asynchronous exception; they are largely unrelated to the actual logic that the thread is running. But you can still use functions like <code>bracket</code> and <code>finally</code> so that resources held by the killed thread are properly released.</p>\n\n<p>There are packages like <a href=\"https://hackage.haskell.org/package/safe-exceptions\" rel=\"nofollow noreferrer\">safe-exceptions</a> and <a href=\"https://hackage.haskell.org/package/unliftio-0.2.8.1/docs/UnliftIO-Exception.html\" rel=\"nofollow noreferrer\">unliftio</a> which help avoid catching asynchronous exceptions by mistake, while still providing functions like <a href=\"https://hackage.haskell.org/package/unliftio-0.2.8.1/docs/UnliftIO-Exception.html#v:catchAny\" rel=\"nofollow noreferrer\"><code>catchAny</code></a> that catch other types of exceptions.</p>\n"}], "owner": {"reputation": 8697, "user_id": 1055165, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/d7c25776b0ca1c13212eea512370102d?s=128&d=identicon&r=PG", "display_name": "zoran119", "link": "https://stackoverflow.com/users/1055165/zoran119"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 131, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1540536897, "creation_date": 1540500216, "question_id": 52997821, "link": "https://stackoverflow.com/questions/52997821/making-sure-all-exceptions-are-handled", "title": "Making sure all exceptions are handled", "body": "<p>Stemming from <a href=\"https://stackoverflow.com/questions/52987652/whats-the-idea-behind-haskell-libraries-throwing-exceptions\">this question</a>, is there any way to ensure that I'm handling all exceptions could throw? Something like pattern matching exhaustiveness warning from the compiler, but for exceptions. I think this would make sense...</p>\n"}, {"tags": ["haskell", "ghc", "gadt"], "answers": [{"tags": [], "owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "is_accepted": false, "score": 1, "last_activity_date": 1540497080, "creation_date": 1540497080, "answer_id": 52997052, "question_id": 52996623, "link": "https://stackoverflow.com/questions/52996623/why-does-eqt-returning-maybe-a-b-work-better-than-it-returning-bool/52997052#52997052", "title": "Why does eqT returning Maybe (a :~: b) work better than it returning Bool?", "body": "<p>You have discovered what <a href=\"https://www.stackage.org/haddock/lts-12.14/base-4.11.1.0/Data-Typeable.html#t::-126-:\" rel=\"nofollow noreferrer\">the documentation</a> describes as </p>\n\n<blockquote>\n  <p>To use this equality in practice, pattern-match on the a :~: b to get out the Refl constructor; in the body of the pattern-match, the compiler knows that a ~ b.</p>\n</blockquote>\n\n<p>In most <code>case</code> matches on <code>Maybe a</code>, in the <code>Just</code> branch we have an additional value if type <code>a</code> that we can use.  Here too, in the <code>Just</code> branch of <code>readMaybeWithGoodType</code>, there is an additional value.  <code>Refl</code> isn't very interesting at the term level, but at the type level it is. Here it conveys to GHC a fact that we know by inspection - that this branch is reachable if and only if <code>a</code> is <code>String</code>.</p>\n\n<p>You are right that other GADT constructors can also bring type information (typically type class constraints on their arguments) into scope.</p>\n"}, {"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 6, "last_activity_date": 1615198291, "last_edit_date": 1615198291, "creation_date": 1540502005, "answer_id": 52998199, "question_id": 52996623, "link": "https://stackoverflow.com/questions/52996623/why-does-eqt-returning-maybe-a-b-work-better-than-it-returning-bool/52998199#52998199", "title": "Why does eqT returning Maybe (a :~: b) work better than it returning Bool?", "body": "<p>Essentially, this is a case of GADT vs non-GADT elimination.</p>\n<p>When we want to use a value <code>x :: T</code> where <code>T</code> is some algebraic data type, we resort to pattern matching (AKA &quot;elimination&quot;)</p>\n<pre><code>case x of\n  K1 ... -&gt; e1\n  K2 ... -&gt; e2\n  ...\n</code></pre>\n<p>where the <code>Ki</code> cover all the possible constructors.</p>\n<p>Sometimes, instead of using <code>case</code> we use other forms of pattern matching (e.g. defining equations) but that's irrelevant. Also, <code>if then else</code> is completely equivalent to <code>case of True -&gt; .. ; False -&gt; ...</code>, so there's no need to discuss this.</p>\n<p>Now, the crucial point is that the type <code>T</code> we are eliminating could be a GADT or not.</p>\n<p>If it is <em>not</em> a GADT, then all the branches <code>e1,e2,...</code> are type checked, and they are required to have the same type. This is done without exploiting any additional type information.</p>\n<p>If we write <code>case eqT' @a @b of ...</code> or <code>if eqT' @a @b then ...</code> we are eliminating type <code>Bool</code> which is not a GADT. No information is obtained about <code>a,b</code> by the type checker, and the two branches are checked to have the same type (which may fail).</p>\n<p>Instead, if <code>T</code> is a GADT, the type checker exploits further type information. In particular, if we have <code>case x :: a :~: b of Refl -&gt; e</code> the type checker learns <code>a~b</code>, and exploits that when type checking <code>e</code>.</p>\n<p>If we have multiple branches like</p>\n<pre><code>case x :: Maybe (a :~: b) of\n   Just Refl -&gt; e1\n   Nothing   -&gt; e2\n</code></pre>\n<p>then <code>a~b</code> is only used for <code>e1</code>, as intuition suggests.</p>\n<p>If you want a custom <code>eqT'</code>, I suggest you try this:</p>\n<pre><code>data Eq a b where\n   Equal   :: Eq a a\n   Unknown :: Eq a b\n\neqT' :: forall a b. (Typeable a, Typeable b) =&gt; Eq a b\neqT' = case eqT @a @b of\n   Just Refl -&gt; Equal\n   Nothing   -&gt; Unknown\n\nreadMaybe3 :: forall a. (Typeable a, Read a) =&gt; String -&gt; Maybe String\nreadMaybe3 = case eqT' @a @String of\n    Equal -&gt; Just\n    Unknown -&gt; readMaybe\n</code></pre>\n<p>The trick is eliminating a GADT which provides the right information about the type variables at hand, like in this case.</p>\n<p>If you want to go deeper, you can check out languages with full dependent types (Coq, Idris, Agda, ...) where we find a similar behavior in dependent vs non-dependent elimination. These languages are a bit harder than Haskell+GADTs -- I have to warn you. I'll only add that dependent elimination was mysterious at first to me. After I understood the general form of pattern matching in Coq, everything started to make a lot of sense.</p>\n"}, {"tags": [], "owner": {"reputation": 778, "user_id": 6499999, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/48bb54922bb8f6ad1b5ba41fd3e9bf1b?s=128&d=identicon&r=PG", "display_name": "JoL", "link": "https://stackoverflow.com/users/6499999/jol"}, "is_accepted": true, "score": 2, "last_activity_date": 1615198707, "last_edit_date": 1615198707, "creation_date": 1540508254, "answer_id": 52999225, "question_id": 52996623, "link": "https://stackoverflow.com/questions/52996623/why-does-eqt-returning-maybe-a-b-work-better-than-it-returning-bool/52999225#52999225", "title": "Why does eqT returning Maybe (a :~: b) work better than it returning Bool?", "body": "<p>Thanks to bergey and chi, I think I understand the series of steps that caused GHC to return that error to me. They're both good answers, but I think a good deal of my misunderstanding was not understanding the concrete steps Haskell takes to type check and how it relates, in this case, to GADT pattern matching. I'm going to write an answer that describes this to the best of my understanding.</p>\n<p>So, to start, one of the things that makes GADTs GADTs is that you can define a sum-type where each option can be of a different type that's more specific than the type given in the head of the data declaration. That makes the following possible:</p>\n<pre><code>data a :~: b where\n  Refl :: a :~: a\n</code></pre>\n<p>So here we only have one constructor, <code>Refl</code>, which is an <code>a :~: b</code>, but more specifically, this particular constructor (albeit the only one) results in an <code>a :~: a</code>. If we compose that with <code>Maybe</code> to get the type <code>Maybe (a :~: b)</code>, then we have 2 possible values: <code>Just Refl :: Maybe (a :~: a)</code> and <code>Nothing :: Maybe (a :~: b)</code>. That's how the type carries the information on type equality by pattern matching.</p>\n<p>Now, to make GADTs work with pattern matching, something cool must be done. That's that the expressions matched with each pattern may be more specialized than the whole of the pattern matching expression (e.g. case expressions). Using the added type refinement included in a GADT constructor to further specialize the type required of the matching expression is the special treatment Haskell does for GADTs in pattern matching. So when we do:</p>\n<pre><code>readMaybeWithGoodType :: forall a. (Typeable a, Read a) =&gt; String -&gt; Maybe a\nreadMaybeWithGoodType = case eqT @a @String of\n    Just Refl -&gt; Just\n    _ -&gt; readMaybe\n</code></pre>\n<p><code>eqT</code> is <code>Maybe (a :~: b)</code>, <code>eqT @a @String</code> and the matched <code>_</code> is <code>(Typeable a, Read a) =&gt; Maybe (a :~: String)</code>, but <code>Just Refl</code> is <code>Maybe (String :~: String)</code>.</p>\n<p>Haskell will require the whole case expression to be a type superset of <code>(Typeable a, Read a) =&gt; String -&gt; Maybe a</code>. The <code>_</code> match which is just <code>readMaybe</code> is type <code>Read a =&gt; String -&gt; Maybe a</code> which is a superset. However, <code>Just</code> is type <code>a -&gt; Maybe a</code>, which is not a superset, because the case expression should include things like <code>String -&gt; Maybe Int</code> but <code>Just</code> can't return that because it would need for <code>String ~ Int</code>. This is what was happening when matching with <code>Bool</code>. GHC told that it couldn't match the <code>Maybe String</code> <code>Just</code> would return with the more general <code>Read a =&gt; Maybe a</code> that was required of it.</p>\n<p>This is where pattern matching on a constructor that includes this type equality information is important. By matching on <code>Just Refl :: Maybe (String :~: String)</code>, Haskell won't need that matching expression to be of a type superset of <code>(Typeable a, Read a) =&gt; String -&gt; Maybe a</code>, it just needs it to be a superset of <code>String -&gt; Maybe String</code> (a subset type of the original required type), which it is by being <code>a -&gt; Maybe a</code>.</p>\n"}], "owner": {"reputation": 778, "user_id": 6499999, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/48bb54922bb8f6ad1b5ba41fd3e9bf1b?s=128&d=identicon&r=PG", "display_name": "JoL", "link": "https://stackoverflow.com/users/6499999/jol"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 216, "favorite_count": 0, "accepted_answer_id": 52999225, "answer_count": 3, "score": 7, "last_activity_date": 1615198707, "creation_date": 1540495253, "last_edit_date": 1615198144, "question_id": 52996623, "link": "https://stackoverflow.com/questions/52996623/why-does-eqt-returning-maybe-a-b-work-better-than-it-returning-bool", "title": "Why does eqT returning Maybe (a :~: b) work better than it returning Bool?", "body": "<p>I made a variant of <a href=\"https://www.stackage.org/haddock/lts-12.14/base-4.11.1.0/Data-Typeable.html#v:eqT\" rel=\"nofollow noreferrer\"><code>eqT</code></a> that would allow me work with the result like any other <code>Bool</code> to write something like <code>eqT' @a @T1 || eqT' @a @T2</code>. However, while that worked well in some cases, I found that I couldn't replace every use of <code>eqT</code> with it. For example, I wanted to use it to write a variant of <code>readMaybe</code> that would just be <code>Just</code> when it was supposed to return a <code>String</code>. While using <code>eqT</code> allowed me to keep the type as <code>String -&gt; Maybe a</code>, using <code>eqT'</code> requires the type to be <code>String -&gt; Maybe String</code>. Why is that? I know that I can do this via other means, but I want to know why this doesn't work. I suppose this has something to do with special treatment in case expressions for GADTs (<code>a :~: b</code> being a GADT), but what is that special treatment?</p>\n<p>Here is some example code of what I'm talking about:</p>\n<pre><code>{-# LANGUAGE GADTs #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE TypeApplications #-}\n{-# LANGUAGE AllowAmbiguousTypes #-}\n\nimport Data.Typeable\nimport Text.Read\n\neqT' :: forall a b. (Typeable a, Typeable b) =&gt; Bool\neqT' = case eqT @a @b of\n    Just Refl -&gt; True\n    _ -&gt; False\n\nreadMaybeWithBadType1 :: forall a. (Typeable a, Read a) =&gt; String -&gt; Maybe String\nreadMaybeWithBadType1 = if eqT' @a @String\n    then Just\n    else readMaybe\n\nreadMaybeWithBadType2 :: forall a. (Typeable a, Read a) =&gt; String -&gt; Maybe String\nreadMaybeWithBadType2 = case eqT' @a @String of\n    True -&gt; Just\n    False -&gt; readMaybe\n\nreadMaybeWithGoodType :: forall a. (Typeable a, Read a) =&gt; String -&gt; Maybe a\nreadMaybeWithGoodType = case eqT @a @String of\n    Just Refl -&gt; Just\n    _ -&gt; readMaybe\n\nmain :: IO ()\nmain = return ()\n</code></pre>\n<p>Changing the type of either <code>readMaybeWithBadType</code> to return <code>Maybe a</code> results in ghc complaining:</p>\n<pre class=\"lang-none prettyprint-override\"><code>u.hs:16:14: error:\n    \u2022 Couldn't match type \u2018a\u2019 with \u2018String\u2019\n      \u2018a\u2019 is a rigid type variable bound by\n        the type signature for:\n          readMaybeWithBadType1 :: forall a.\n                                   (Typeable a, Read a) =&gt;\n                                   String -&gt; Maybe a\n        at u.hs:14:5-80\n      Expected type: String -&gt; Maybe a\n        Actual type: a -&gt; Maybe a\n    \u2022 In the expression: Just\n      In the expression: if eqT' @a @String then Just else readMaybe\n      In an equation for \u2018readMaybeWithBadType1\u2019:\n          readMaybeWithBadType1 = if eqT' @a @String then Just else readMaybe\n    \u2022 Relevant bindings include\n        readMaybeWithBadType1 :: String -&gt; Maybe a (bound at u.hs:15:5)\n   |\n16 |         then Just\n   |              ^^^^\n\nu.hs:21:17: error:\n    \u2022 Couldn't match type \u2018a\u2019 with \u2018String\u2019\n      \u2018a\u2019 is a rigid type variable bound by\n        the type signature for:\n          readMaybeWithBadType2 :: forall a.\n                                   (Typeable a, Read a) =&gt;\n                                   String -&gt; Maybe a\n        at u.hs:19:5-80\n      Expected type: String -&gt; Maybe a\n        Actual type: a -&gt; Maybe a\n    \u2022 In the expression: Just\n      In a case alternative: True -&gt; Just\n      In the expression:\n        case eqT' @a @String of\n          True -&gt; Just\n          False -&gt; readMaybe\n    \u2022 Relevant bindings include\n        readMaybeWithBadType2 :: String -&gt; Maybe a (bound at u.hs:20:5)\n   |\n21 |         True -&gt; Just\n   |                 ^^^^\n</code></pre>\n<p>I kind of get why it's complaining, but I don't see why it isn't a problem in <code>readMaybeWithGoodType</code>.</p>\n"}, {"tags": ["haskell", "join", "esqueleto", "haskell-persistent"], "comments": [{"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 1, "creation_date": 1540491038, "post_id": 52995387, "comment_id": 92896180, "body": "Your query looks fine, but then you put the result through <code>unzip</code>, which expects a list of two-tuples. Try <code>unzip3</code> instead?"}, {"owner": {"reputation": 197, "user_id": 2994769, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NrJZ6.jpg?s=128&g=1", "display_name": "hhefesto", "link": "https://stackoverflow.com/users/2994769/hhefesto"}, "reply_to_user": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 0, "creation_date": 1540491363, "post_id": 52995387, "comment_id": 92896326, "body": "Yes! exactly. Thank you"}], "answers": [{"tags": [], "owner": {"reputation": 197, "user_id": 2994769, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NrJZ6.jpg?s=128&g=1", "display_name": "hhefesto", "link": "https://stackoverflow.com/users/2994769/hhefesto"}, "is_accepted": true, "score": 3, "last_activity_date": 1540491340, "creation_date": 1540491340, "answer_id": 52995660, "question_id": 52995387, "link": "https://stackoverflow.com/questions/52995387/haskell-esqueleto-3-table-join/52995660#52995660", "title": "Haskell Esqueleto 3 table join", "body": "<p>The culprits were in the <code>let</code> statement:</p>\n\n<pre><code>let issues = map listToMaybe . group . sort . fst . unzip $ customer_issues_followUps_list\n</code></pre>\n\n<p><code>fst</code> and <code>unzip</code> work with tuples, so the compiler implied that <code>customer_issues_followUps_list</code> was a tuple.</p>\n\n<p>To solve the problem just add \"-extra\" to your package.yml dependencies (or your cabal file) and replace <code>fst</code> and <code>unzip</code> with <code>fst3</code> and <code>unzip3</code> in the <code>let</code> statement like so:</p>\n\n<pre><code>let issues = map listToMaybe . group . sort . fst3 . unzip3 $ customer_issues_followUps_list\n</code></pre>\n"}], "owner": {"reputation": 197, "user_id": 2994769, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NrJZ6.jpg?s=128&g=1", "display_name": "hhefesto", "link": "https://stackoverflow.com/users/2994769/hhefesto"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 195, "favorite_count": 0, "accepted_answer_id": 52995660, "answer_count": 1, "score": 1, "last_activity_date": 1547039370, "creation_date": 1540490096, "last_edit_date": 1547039370, "question_id": 52995387, "link": "https://stackoverflow.com/questions/52995387/haskell-esqueleto-3-table-join", "title": "Haskell Esqueleto 3 table join", "body": "<p>These are my attempts to do a SELECT from three tables. But they don't compile and I don't understand the error (I don't know why it expects a tuple <code>(Entity Issue, b0)</code> instead of the triplet I think the code attempts to get).</p>\n\n<p>Attempt 1:</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE NoImplicitPrelude #-}\n{-# LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE TemplateHaskell #-}\n{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE TypeFamilies #-}\n\nmodule Handler.Support where\n\nimport           Import hiding ((==.))\nimport qualified Database.Esqueleto as E\nimport           Database.Esqueleto      ((^.), (==.), (&amp;&amp;.))\nimport           Data.Traversable\n\ngetSupportR :: CustomerId -&gt; Handler Html\ngetSupportR customerId = do\n  customer_issues_followUps_list &lt;- runDB $\n    E.select $\n    E.from $ \\(i, f, c) -&gt; do\n    E.where_ (i ^. IssueCustomerId ==. E.val customerId &amp;&amp;. i ^. IssueId ==. f ^. FollowUpIssueId &amp;&amp;. i ^. IssueCustomerId ==. c ^. CustomerId)\n    return (i, f, c)\n  let issues = map listToMaybe . group . sort . fst . unzip $ customer_issues_followUps_list\n  defaultLayout $ do\n    setTitle \"Your Licenses\"\n    $(widgetFile \"support-display\")\n</code></pre>\n\n<p>error 1:</p>\n\n<pre><code>/home/hhefesto/dev/laurus-nobilis/src/Handler/Support.hs:41:5: error:\n    \u2022 Couldn't match type \u2018(ra, rb, rc)\u2019 with \u2018(Entity Issue, b0)\u2019\n        arising from a functional dependency between:\n          constraint \u2018Database.Esqueleto.Internal.Sql.SqlSelect\n                        (E.SqlExpr (Entity Issue), E.SqlExpr (Entity FollowUp),\n                         E.SqlExpr (Entity Customer))\n                        (Entity Issue, b0)\u2019\n            arising from a use of \u2018E.select\u2019\n          instance \u2018Database.Esqueleto.Internal.Sql.SqlSelect\n                      (a3, b3, c) (ra3, rb3, rc3)\u2019\n            at &lt;no location info&gt;\n    \u2022 In the second argument of \u2018($)\u2019, namely\n        \u2018E.select\n           $ E.from\n               $ \\ (i, f, c)\n                   -&gt; do E.where_\n                           (i ^. IssueCustomerId ==. E.val customerId\n                              &amp;&amp;.\n                                i ^. IssueId ==. f ^. FollowUpIssueId\n                                  &amp;&amp;. i ^. IssueCustomerId ==. c ^. CustomerId)\n                         return (i, f, c)\u2019\n      In a stmt of a 'do' block:\n        customer_issues_followUps_list &lt;- runDB\n                                            $ E.select\n                                                $ E.from\n                                                    $ \\ (i, f, c)\n                                                        -&gt; do E.where_\n                                                                (i ^. IssueCustomerId\n                                                                   ==. E.val customerId\n                                                                   &amp;&amp;.\n                                                                     i ^. IssueId\n                                                                       ==. f ^. FollowUpIssueId\n                                                                       &amp;&amp;.\n                                                                         i ^. IssueCustomerId\n                                                                           ==. c ^. CustomerId)\n                                                              return (i, f, c)\n      In the expression:\n        do customer_issues_followUps_list &lt;- runDB\n                                               $ E.select $ E.from $ \\ (i, f, c) -&gt; do ...\n           let issues\n                 = map listToMaybe . group . sort . fst . unzip\n                     $ customer_issues_followUps_list\n           defaultLayout\n             $ do setTitle \"Your Licenses\"\n                  (do ...)\n   |\n41 |     E.select $\n   |     ^^^^^^^^^^...\n</code></pre>\n\n<p>Attempt 2:</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE NoImplicitPrelude #-}\n{-# LANGUAGE OverloadedStrings #-}\n{-# LANGUAGE TemplateHaskell #-}\n{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE TypeFamilies #-}\n\nmodule Handler.Support where\n\nimport           Import hiding ((==.))\nimport qualified Database.Esqueleto as E\nimport           Database.Esqueleto      ((^.), (==.), (&amp;&amp;.))\nimport           Data.Traversable\n\ngetSupportR :: CustomerId -&gt; Handler Html\ngetSupportR customerId = do\n  customer_issues_followUps_list &lt;- runDB $\n    E.select $\n    E.from $ \\(i `E.InnerJoin` f `E.InnerJoin` c) -&gt; do\n    E.on (c ^. CustomerId ==. i ^. IssueCustomerId)\n    E.on (i ^. IssueId ==. f ^. FollowUpIssueId)\n    E.where_ (i ^. IssueCustomerId ==. E.val customerId)\n    return (i, f, c)\n  let issues = map listToMaybe . group . sort . fst . unzip $ customer_issues_followUps_list\n  defaultLayout $ do\n    setTitle \"Your Licenses\"\n    $(widgetFile \"support-display\")\n</code></pre>\n\n<p>error 2:</p>\n\n<pre><code>/home/hhefesto/dev/laurus-nobilis/src/Handler/Support.hs:40:5: error:\n    \u2022 Couldn't match type \u2018(ra, rb, rc)\u2019 with \u2018(Entity Issue, b0)\u2019\n        arising from a functional dependency between:\n          constraint \u2018Database.Esqueleto.Internal.Sql.SqlSelect\n                        (E.SqlExpr (Entity Issue), E.SqlExpr (Entity FollowUp),\n                         E.SqlExpr (Entity Customer))\n                        (Entity Issue, b0)\u2019\n            arising from a use of \u2018E.select\u2019\n          instance \u2018Database.Esqueleto.Internal.Sql.SqlSelect\n                      (a2, b2, c) (ra2, rb2, rc2)\u2019\n            at &lt;no location info&gt;\n    \u2022 In the second argument of \u2018($)\u2019, namely\n        \u2018E.select\n           $ E.from\n               $ \\ (i `E.InnerJoin` f `E.InnerJoin` c)\n                   -&gt; do E.on (c ^. CustomerId ==. i ^. IssueCustomerId)\n                         E.on (i ^. IssueId ==. f ^. FollowUpIssueId)\n                         ....\u2019\n      In a stmt of a 'do' block:\n        customer_issues_followUps_list &lt;- runDB\n                                            $ E.select\n                                                $ E.from\n                                                    $ \\ (i `E.InnerJoin` f `E.InnerJoin` c)\n                                                        -&gt; do E.on\n                                                                (c ^. CustomerId\n                                                                   ==. i ^. IssueCustomerId)\n                                                              E.on\n                                                                (i ^. IssueId\n                                                                   ==. f ^. FollowUpIssueId)\n                                                              ....\n      In the expression:\n        do customer_issues_followUps_list &lt;- runDB\n                                               $ E.select\n                                                   $ E.from\n                                                       $ \\ (i `E.InnerJoin` f `E.InnerJoin` c)\n                                                           -&gt; do ...\n           let issues\n                 = map listToMaybe . group . sort . fst . unzip\n                     $ customer_issues_followUps_list\n           defaultLayout\n             $ do setTitle \"Your Licenses\"\n                  (do ...)\n   |\n40 |     E.select $\n   |     ^^^^^^^^^^...\n</code></pre>\n\n<p>this is my Persistent model:</p>\n\n<pre><code>Customer\n    email Text\n    password Text\n    firstName Text\n    lastName Text\n    address1 Text\n    address2 Text\n    city Text\n    state Text\n    zipCode Text\n    country Text\n    phone Text\n    organization Text\n    UniqueCustomer email\n    deriving Typeable\n    deriving Show\n    deriving Eq\n    deriving Ord\nLicense\n    licenseAlias Text\n    expirationDate UTCTime\n    assignedTo CustomerId\n    customerId CustomerId\n    deriving Show\n    deriving Eq\n    deriving Ord\nIssue\n    customerId CustomerId\n    issueSummary Text\n    issueDetails Text\n    issueState Int\n    issueDate UTCTime\n    deriving Show\n    deriving Eq\n    deriving Ord\nFollowUp\n    issueId IssueId\n    followUpDate UTCTime\n    followUpAuthor CustomerId\n    followUpText Text\n    deriving Show\n    deriving Eq\n    deriving Ord\n\n\n-- Soon to be deleted:\nEmail\n    email Text\n    customerId CustomerId Maybe\n    verkey Text Maybe\n    UniqueEmail email\nComment json -- Adding \"json\" causes ToJSON and FromJSON instances to be derived.\n    message Text\n    customerId CustomerId Maybe\n    deriving Eq\n    deriving Show\n</code></pre>\n\n<p>As you may see, the error in both attempts is the same: it expected a tuple instead of a triplet.</p>\n\n<p>Any help would be greatly appreciated :)</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1540488958, "post_id": 52995069, "comment_id": 92895167, "body": "Hint: you can use a variant of the <i>hare and tortoise</i> algorithm: <a href=\"https://en.wikipedia.org/wiki/Cycle_detection\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/Cycle_detection</a>"}, {"owner": {"reputation": 4071, "user_id": 3806046, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/5fedf50ce7cd2659bca902e9a2969158?s=128&d=identicon&r=PG&f=1", "display_name": "jkeuhlen", "link": "https://stackoverflow.com/users/3806046/jkeuhlen"}, "edited": false, "score": 0, "creation_date": 1540488967, "post_id": 52995069, "comment_id": 92895176, "body": "Why do you want to use pattern matching for this problem? While possible, it seems like it would be way overkill to do here."}, {"owner": {"reputation": 113, "user_id": 5169594, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/9b4f9deed7c1533d605bc3efb42e3604?s=128&d=identicon&r=PG&f=1", "display_name": "Kemal", "link": "https://stackoverflow.com/users/5169594/kemal"}, "edited": false, "score": 0, "creation_date": 1540489236, "post_id": 52995069, "comment_id": 92895299, "body": "This is a question at the end of one of the exercises to learn haskell in our class, something like an extra question"}], "answers": [{"comments": [{"owner": {"reputation": 2088, "user_id": 4281998, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/q8Jvt.png?s=128&g=1", "display_name": "Brady Dean", "link": "https://stackoverflow.com/users/4281998/brady-dean"}, "edited": false, "score": 0, "creation_date": 1540508248, "post_id": 52995494, "comment_id": 92903051, "body": "How does <code>where (a, b) = go ...</code> work? Maybe I haven&#39;t seen that syntax yet."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 2088, "user_id": 4281998, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/q8Jvt.png?s=128&g=1", "display_name": "Brady Dean", "link": "https://stackoverflow.com/users/4281998/brady-dean"}, "edited": false, "score": 0, "creation_date": 1540508426, "post_id": 52995494, "comment_id": 92903095, "body": "@BradyDean&quot; <code>go</code> returns a 2-tuple, so you call it recursively with the remaining of the lists for the hare and the tortoise, this will generate a 2-tuple of lists, <code>a</code> and <code>b</code>, and then you &quot;post process&quot; that 2-tuple, for example by prepending these lists with <code>t</code>, etc."}, {"owner": {"reputation": 2088, "user_id": 4281998, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/q8Jvt.png?s=128&g=1", "display_name": "Brady Dean", "link": "https://stackoverflow.com/users/4281998/brady-dean"}, "edited": false, "score": 0, "creation_date": 1540508578, "post_id": 52995494, "comment_id": 92903132, "body": "Ok makes sense now. I didn&#39;t see where <code>(a, b)</code> was being used but I do now."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 5, "last_activity_date": 1540490591, "creation_date": 1540490591, "answer_id": 52995494, "question_id": 52995069, "link": "https://stackoverflow.com/questions/52995069/halving-a-list-into-sublists-using-pattern-matching/52995494#52995494", "title": "Halving a list into sublists using pattern matching", "body": "<p>You can make use of a variant of the <a href=\"https://en.wikipedia.org/wiki/Cycle_detection#Floyd&#39;s_Tortoise_and_Hare\" rel=\"noreferrer\"><em>hare and tortoise</em> algorithm</a>. This algorithm basically runs over the list with two iterators: the <em>hare</em> taking two hops at a time, and the <em>tortoise</em> performing one hop at that time.</p>\n\n<p>When the hare reaches the end of the list, then we know that the tortoise is halfway, and thus can split the list in half: the list seen thus far is the first half, and the list still to enumerate over, is the second half.</p>\n\n<p>An algorithm thus looks like:</p>\n\n<pre><code>half :: [a] -&gt; ([a], [a])\nhalf h = go h h\n    where go (_:(_:hs)) (t:ts) = (..., ...)\n              where (a, b) = go ...\n          go _ (t:ts) = (..., ...)\n          go _ [] = (..., ...)</code></pre>\n\n<p>with the <code>...</code> parts still to fill in.</p>\n"}], "owner": {"reputation": 113, "user_id": 5169594, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/9b4f9deed7c1533d605bc3efb42e3604?s=128&d=identicon&r=PG&f=1", "display_name": "Kemal", "link": "https://stackoverflow.com/users/5169594/kemal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 74, "favorite_count": 0, "accepted_answer_id": 52995494, "answer_count": 1, "score": 1, "last_activity_date": 1540490591, "creation_date": 1540488855, "question_id": 52995069, "link": "https://stackoverflow.com/questions/52995069/halving-a-list-into-sublists-using-pattern-matching", "title": "Halving a list into sublists using pattern matching", "body": "<p>I am trying to get the output, given an input</p>\n\n<pre><code>&gt; halve [1,2,3,4,5,6]\n([1,2,3],[4,5,6])\n</code></pre>\n\n<p>I have solved this problem using this approach: </p>\n\n<pre><code>halve xs = ((take s xs), (drop s xs))\n    where\n      s = (length xs) `div` 2\n</code></pre>\n\n<p>I am a beginner in Haskell and I want to learn how to solve this question using pattern matching? Thanks</p>\n"}, {"tags": ["haskell", "sdl"], "answers": [{"tags": [], "owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "is_accepted": false, "score": 2, "last_activity_date": 1540478795, "creation_date": 1540478795, "answer_id": 52992129, "question_id": 52991614, "link": "https://stackoverflow.com/questions/52991614/why-does-surfacedimensions-appear-to-return-a-doubly-enclosed-vector-v2-v2-ci/52992129#52992129", "title": "Why does surfaceDimensions (appear) to return a doubly enclosed vector (V2 V2 CInt)?", "body": "<p>There are two issues here - getting your code to compile, and getting better error messages from GHC.  If you post more of your code, we can help more with the first.</p>\n\n<p>Do you get a more useful error if you leave off the type signature for <code>surfDim</code>? </p>\n\n<p>Neither <code>V2 CInt</code> nor <code>V2 (V2 CInt)</code> are possible types.  You need something like <code>IO (V2 CInt)</code>, to satisfy <code>MonadIO m</code>.  </p>\n\n<p>GHC tried to pick a type for <code>m</code>, guided by the <code>V2 CInt</code> type sig, and decided that <code>m ~ V2</code>.  Unfortunately, this choice didn't lead to a helpful error message.  If you use the type sig in suggests as \"Actual type\", I believe GHC will get far enough into the typechecking process to notice that there is no instance <code>MonadIO V2</code>, as you point out.</p>\n\n<p>I have no idea if it's possible to get GHC to consistently give better advice about this sort of thing.  When I'm stumped by a type error, I like to try both adding more type sigs or taking some out.  There are often different error messages, and one may make more sense to me than the other.</p>\n"}, {"comments": [{"owner": {"reputation": 7711, "user_id": 3096687, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/31c95c0c159392d4c16fca6b55b5848d?s=128&d=identicon&r=PG", "display_name": "bbarker", "link": "https://stackoverflow.com/users/3096687/bbarker"}, "edited": false, "score": 0, "creation_date": 1540480746, "post_id": 52992322, "comment_id": 92890697, "body": "The funny thing is, I knew I likely had the type wrong due to the lack of MonadIO (or any monad embedding the result), but I guess I had grown too reliant on the type checker to tell me what my type should be in this particular case. I&#39;ll try to keep unification in mind in the future."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 7711, "user_id": 3096687, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/31c95c0c159392d4c16fca6b55b5848d?s=128&d=identicon&r=PG", "display_name": "bbarker", "link": "https://stackoverflow.com/users/3096687/bbarker"}, "edited": false, "score": 1, "creation_date": 1540484491, "post_id": 52992322, "comment_id": 92892892, "body": "@bbarker, unfortunately, it&#39;s not that easy for the type checker to figure out which of the contradictory things you told it was wrong. Arranging to be able to backtrack to investigate a type error seems <i>very</i> expensive. It would be interesting to see if there&#39;s some way to display a certain amount of the type checker history (as in <code>-ddump-tc-trace</code>) in a normal-human-readable format. It sounds difficult."}, {"owner": {"reputation": 7711, "user_id": 3096687, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/31c95c0c159392d4c16fca6b55b5848d?s=128&d=identicon&r=PG", "display_name": "bbarker", "link": "https://stackoverflow.com/users/3096687/bbarker"}, "edited": false, "score": 0, "creation_date": 1540494112, "post_id": 52992322, "comment_id": 92897591, "body": "As errors go, I think I&#39;ve seen a lot worse in other (non mainstream) languages, and can imagine myself getting used to this situation without too much trouble."}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "reply_to_user": {"reputation": 7711, "user_id": 3096687, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/31c95c0c159392d4c16fca6b55b5848d?s=128&d=identicon&r=PG", "display_name": "bbarker", "link": "https://stackoverflow.com/users/3096687/bbarker"}, "edited": false, "score": 0, "creation_date": 1540632978, "post_id": 52992322, "comment_id": 92943452, "body": "@bbarker: When you encounter a type error, it helps a lot to add type annotations here and there to help narrow down where your expectations and the compiler\u2019s inferences differ. And over time you\u2019ll develop an intuition of \u201cwhen I see this error, I probably made this sort of mistake\u201d anyway."}], "tags": [], "owner": {"reputation": 2501, "user_id": 598892, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a22954b638ce69b9994c9e3623953a5?s=128&d=identicon&r=PG", "display_name": "Chris Smith", "link": "https://stackoverflow.com/users/598892/chris-smith"}, "is_accepted": true, "score": 2, "last_activity_date": 1540521473, "last_edit_date": 1540521473, "creation_date": 1540479377, "answer_id": 52992322, "question_id": 52991614, "link": "https://stackoverflow.com/questions/52991614/why-does-surfacedimensions-appear-to-return-a-doubly-enclosed-vector-v2-v2-ci/52992322#52992322", "title": "Why does surfaceDimensions (appear) to return a doubly enclosed vector (V2 V2 CInt)?", "body": "<p>It doesn't.  You are running afoul of the tendency of the type checker to unify as far as it can before reporting an error message.  In this case, the type checker thinks, \"Oh, this expression has type <code>m something</code>, and I want a <code>V2 something</code>.  So <code>m</code> must be <code>V2</code>.\"  It defers until later checking that <code>m = V2</code> satisfies that <code>MonadIO</code> constraint.  And before it gets there, it looks inside the top-level type, and realizes that it can't unify <code>V2 CInt</code> with <code>CInt</code>, so it fails before ever checking whether <code>V2</code> is a monad.</p>\n\n<p>As a human, you might respond to being wrong by backing up and questioning which of your assumptions was wrong.  The type checker doesn't do that at all.  Instead, it assumes that all of its assumptions were fine up until the point that it was impossible to proceed.  Then it complains about the very last step.  It's fairly common that it's gone down some bizarre rabbit hole by then, which is why Haskell type errors are kind of notoriously bad, especially when there are type classes involved as there are here.</p>\n\n<p>Now, here's the actual mistake.  You need to compute the dimensions in the <code>IO</code> monad (or some other instance of <code>MonadIO</code>).  Which means you need to do:</p>\n\n<pre><code>surfDim &lt;- SDL.surfaceDimensions surfIn\n</code></pre>\n\n<p>in some appropriate <code>do</code> block.  You can't make it just an ordinary equation.</p>\n"}], "owner": {"reputation": 7711, "user_id": 3096687, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/31c95c0c159392d4c16fca6b55b5848d?s=128&d=identicon&r=PG", "display_name": "bbarker", "link": "https://stackoverflow.com/users/3096687/bbarker"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 58, "favorite_count": 0, "accepted_answer_id": 52992322, "answer_count": 2, "score": 2, "last_activity_date": 1540521473, "creation_date": 1540477289, "last_edit_date": 1540480005, "question_id": 52991614, "link": "https://stackoverflow.com/questions/52991614/why-does-surfacedimensions-appear-to-return-a-doubly-enclosed-vector-v2-v2-ci", "title": "Why does surfaceDimensions (appear) to return a doubly enclosed vector (V2 V2 CInt)?", "body": "<p>The following code fails to type check:</p>\n\n<pre><code>surfDim :: SDL.V2 CInt\nsurfDim = SDL.surfaceDimensions surfIn\n</code></pre>\n\n<p>The full error:</p>\n\n<pre><code>    * Couldn't match type `SDL.V2 CInt' with `CInt'\n      Expected type: SDL.V2 CInt\n        Actual type: SDL.V2 (SDL.V2 CInt)\n    * In the expression: SDL.surfaceDimensions surfIn\n      In an equation for `surfDim':\n          surfDim = SDL.surfaceDimensions surfIn\n      In an equation for `scaleSurface':\n          scaleSurface surfIn box scale\n            = do surfOut &lt;- createScreenSurface sizeCIntScaled\n                 _ &lt;- SDL.surfaceBlitScaled\n                        surfIn\n                        (Just (fmap fromIntegral boxFinal))\n                        surfOut\n                        (Just boxFinalScaled)\n                 return surfOut\n            where\n                boxFinal\n                  = case box of\n                      Just b -&gt; b\n                      Nothing\n                        -&gt; SDL.Rectangle\n                             origin (fmap (fmap fromIntegral) (SDL.surfaceDimensions surfIn))\n                boxFinalScaled\n                  = fmap (fromIntegral . (* (fromIntegral scale))) boxFinal\n                sizeCIntScaled = boxSize boxFinalScaled\n                origin :: SDL.Point SDL.V2 Int\n                ....\n    |\n232 |     surfDim = SDL.surfaceDimensions surfIn\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>I'm still confused after looking at <a href=\"https://hackage.haskell.org/package/sdl2-2.4.1.0/docs/src/SDL.Video.Renderer.html#surfaceDimensions\" rel=\"nofollow noreferrer\">the code</a> for <code>surfaceDimensions</code>:</p>\n\n<pre><code>surfaceDimensions :: MonadIO m =&gt; Surface -&gt; m (V2 CInt)\nsurfaceDimensions (Surface s _) = liftIO $ (V2 &lt;$&gt; Raw.surfaceW &lt;*&gt; Raw.surfaceH) &lt;$&gt; peek s\n</code></pre>\n\n<p>Since <code>V2</code> (rightly to me) <a href=\"https://hackage.haskell.org/package/sdl2-2.4.1.0/docs/SDL-Vect.html#t:V2\" rel=\"nofollow noreferrer\">doesn't seem to have an instance of MonadIO</a>, I don't know why this is happening, but my best guess is that it is satisfying it and I don't know why or how (probably due to my incomplete understanding of <a href=\"https://hackage.haskell.org/package/transformers-0.3.0.0/docs/Control-Monad-IO-Class.html\" rel=\"nofollow noreferrer\">liftIO</a>).</p>\n"}, {"tags": ["haskell", "cabal"], "answers": [{"comments": [{"owner": {"reputation": 5095, "user_id": 2022518, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/9366c006da5aca3fa94f7be13677042d?s=128&d=identicon&r=PG", "display_name": "LetMeSOThat4U", "link": "https://stackoverflow.com/users/2022518/letmesothat4u"}, "edited": false, "score": 0, "creation_date": 1540483595, "post_id": 52992627, "comment_id": 92892430, "body": "I asked for changing <b>home directory</b>, not <b>specifying alternative location of the config file explicitly on commandline</b>, esp. that I&#39;m running cabal indirectly via Stack. Usually change of home directory is done via environment variables, e.g. <code>STACK_ROOT</code> for Stack."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 5095, "user_id": 2022518, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/9366c006da5aca3fa94f7be13677042d?s=128&d=identicon&r=PG", "display_name": "LetMeSOThat4U", "link": "https://stackoverflow.com/users/2022518/letmesothat4u"}, "edited": false, "score": 0, "creation_date": 1540487860, "post_id": 52992627, "comment_id": 92894589, "body": "@LetMeSOThat4U Okay, then I don&#39;t understand your question yet. What effect do you want to cause that cannot be caused by changing the config file?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 5095, "user_id": 2022518, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/9366c006da5aca3fa94f7be13677042d?s=128&d=identicon&r=PG", "display_name": "LetMeSOThat4U", "link": "https://stackoverflow.com/users/2022518/letmesothat4u"}, "edited": false, "score": 0, "creation_date": 1540853510, "post_id": 52992627, "comment_id": 93009488, "body": "@LetMeSOThat4U On IRC, hvr also points out that there is an environment variable <code>CABAL_CONFIG</code> that does the same thing <code>--config-file</code> does."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 2, "last_activity_date": 1540480176, "creation_date": 1540480176, "answer_id": 52992627, "question_id": 52990236, "link": "https://stackoverflow.com/questions/52990236/changing-cabal-home-dir/52992627#52992627", "title": "Changing cabal home dir", "body": "<p>An excerpt from <code>cabal --help</code>:</p>\n\n<pre><code>Global flags:\n -h --help                         Show this help text\n -V --version                      Print version information\n    --numeric-version              Print just the version number\n------------------------ LOOK HERE ------------------------\n    --config-file=FILE             Set an alternate location for the config\n                                   file\n------------------------ LOOK HERE ------------------------\n    --sandbox-config-file=FILE     Set an alternate location for the sandbox\n                                   config file (default:\n                                   './cabal.sandbox.config')\n    --default-user-config=FILE     Set a location for a cabal.config file for\n                                   projects without their own cabal.config\n                                   freeze file.\n    --require-sandbox              Enable requiring the presence of a sandbox\n                                   for sandbox-aware commands\n    --no-require-sandbox           Disable requiring the presence of a sandbox\n                                   for sandbox-aware commands\n    --ignore-sandbox               Ignore any existing sandbox\n    --ignore-expiry                Ignore expiry dates on signed metadata (use\n                                   only in exceptional circumstances)\n    --http-transport=HttpTransport Set a transport for http(s) requests.\n                                   Accepts 'curl', 'wget', 'powershell', and\n                                   'plain-http'. (default: 'curl')\n    --enable-nix                   Enable Nix integration: run commands through\n                                   nix-shell if a 'shell.nix' file exists\n    --disable-nix                  Disable Nix integration: run commands\n                                   through nix-shell if a 'shell.nix' file\n                                   exists\n</code></pre>\n"}], "owner": {"reputation": 5095, "user_id": 2022518, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/9366c006da5aca3fa94f7be13677042d?s=128&d=identicon&r=PG", "display_name": "LetMeSOThat4U", "link": "https://stackoverflow.com/users/2022518/letmesothat4u"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 102, "favorite_count": 0, "accepted_answer_id": 52992627, "answer_count": 1, "score": -2, "last_activity_date": 1540480176, "creation_date": 1540473382, "question_id": 52990236, "link": "https://stackoverflow.com/questions/52990236/changing-cabal-home-dir", "title": "Changing cabal home dir", "body": "<p>On Windows cabal uses UNC path as home folder:</p>\n\n<pre><code>\\\\EXAMPLE.EXAMPLE.COM\\UserData\\username\\RF\\AppData\\Roaming\\cabal\\config\n</code></pre>\n\n<p>How can I set it explicitly to some folder on C:\\ drive?</p>\n"}, {"tags": ["haskell", "hackage"], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 1, "last_activity_date": 1540474580, "creation_date": 1540474580, "answer_id": 52990660, "question_id": 52990233, "link": "https://stackoverflow.com/questions/52990233/why-does-hackage-link-a-module-to-a-different-source-file/52990660#52990660", "title": "Why does Hackage link a module to a different source file?", "body": "<p>Names imported from modules can be re-exported. When that happens, haddock helpfully links you to the original source of the name, rather than to the import line in the re-exporting module; it follows the indirection for you. This is what's happening in your case. So taking <code>(++)</code> (the first function in the haddocks for Data.List) as an example, the code is structured like this:</p>\n\n<pre><code> -- GHC/Base.hs\n module GHC.Base where\n (++) = ...\n\n -- Data/OldList.hs\n module Data.OldList ( (++) {- re-exports GHC.Base's (++) -}, ... ) where\n import GHC.Base -- brings (++) into scope\n\n -- Data/List.hs\n module Data.List ( (++), ... ) where\n import Data.OldList hiding ( ... {- does not mention (++) -} )\n</code></pre>\n\n<p>So you can see haddock has actually followed <em>two</em> links: <code>(++)</code> was imported from <code>Data.OldList</code>, and even there it was a re-export.</p>\n\n<p>The compiler carefully tracks the original module that defined a name, too; if you import all of <code>Data.List</code>, <code>Data.OldList</code>, and <code>GHC.Base</code>, you will find that you can still use <code>(++)</code> even though it seems at first blush as though it might be ambiguous which of <code>(Data.List.++)</code>, <code>(Data.OldList.++)</code>, or <code>(GHC.Base.++)</code> you meant. Since all three actual eventually resolve to <code>(GHC.Base.++)</code>, there is no ambiguity.</p>\n"}], "owner": {"reputation": 135, "user_id": 10432827, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/09f06a199fb70ed55cdbbf90893882d1?s=128&d=identicon&r=PG&f=1", "display_name": "sf1", "link": "https://stackoverflow.com/users/10432827/sf1"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 47, "favorite_count": 0, "accepted_answer_id": 52990660, "answer_count": 1, "score": 0, "last_activity_date": 1540474580, "creation_date": 1540473376, "question_id": 52990233, "link": "https://stackoverflow.com/questions/52990233/why-does-hackage-link-a-module-to-a-different-source-file", "title": "Why does Hackage link a module to a different source file?", "body": "<p>I am trying to understand the structure of the base package as displayed by Hackage. Following <a href=\"https://en.wikibooks.org/wiki/Haskell/Modules\" rel=\"nofollow noreferrer\">https://en.wikibooks.org/wiki/Haskell/Modules</a> a module name must reflect the path to its source; to quote the above:</p>\n\n<blockquote>\n  <p>The name of the file is the name of the module plus the .hs file extension. Any dots '.' in the module name are changed for directories.</p>\n</blockquote>\n\n<p>Taking Data.List as an example, this lead me to believe that there should be a source file under a path ../Data/List.hs that then contains</p>\n\n<pre><code>module Data.List where ...\n</code></pre>\n\n<p>(modulo export list).</p>\n\n<p>On the other hand, if I browse the Data.List module on Hackage and follow the '# Source' links, I am directed to source files for various different modules. Among those are: GHC.Base, Data.OldList, Data.Foldable, GHC.List. </p>\n\n<p>On the first hand again, my local installation of the base package clearly contains a ../Data/List.hi interface file.</p>\n\n<p>My question is therefore:\nHow can the discrepancy be explained? What is really on display on Hackage?</p>\n\n<p>Thanks in advance for any insight on the matter!</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "edited": false, "score": 4, "creation_date": 1540471675, "post_id": 52987652, "comment_id": 92884461, "body": "Some will like their eithers, other will like their exceptions. I am afraid, that this is very opinionated."}], "answers": [{"comments": [{"owner": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "edited": false, "score": 0, "creation_date": 1540473218, "post_id": 52989833, "comment_id": 92885533, "body": "Probably one should add, that you can easily ignore the <code>Left</code> return value, if the <code>IO</code> action returned <code>Either</code> instead of throwing. But if you ignore the thrown exception, your program will crash. Ok course you can ignore the exception too, but you have to work for it more, one could argue. But as I said earlier, this will probably be very opinionated too."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1540473252, "post_id": 52989833, "comment_id": 92885555, "body": "FWIW, my pet theory is that the reason exceptions were invented/popular in procedural languages is that traditional procedural languages make representing, creating, and consuming sum types so painful; I have often wished for a construct in C as syntactically cheap as Either, e.g."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "edited": false, "score": 2, "creation_date": 1540473562, "post_id": 52989833, "comment_id": 92885749, "body": "@Krom if you ignore a <code>Left</code> return value, you thereby turn a (hopefully) descriptive error message into an inscrutable exhaustive-patterns exception. And crash the program with <i>that</i>. If you ignore an exception thrown from the action itself, it will crash with the (again, <i>hopefully</i>) descriptive exception message."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1540484878, "post_id": 52989833, "comment_id": 92893083, "body": "In some cases (like an http package) I think it really would make sense to distinguish between conditions the caller almost certainly wants to handle locally (network timeout, page not found, etc.) and ones that are more likely to bubble out to a higher-level handler (exceptions thrown by another thread, nonexistent network interface, etc.)."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1540485140, "post_id": 52989833, "comment_id": 92893216, "body": "@dfeuer I agree, but it may be hard to draw a line somewhere. And, I suspect an error-containing result type would desensitize people and they might forget about catching exceptions too."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1540485804, "post_id": 52989833, "comment_id": 92893591, "body": "@leftaroundabout, it&#39;s definitely a judgement call. But for <i>many</i> exceptions, the only sensible thing to do in <i>most</i> applications is to let it go all the way up and kill the thread. Users are always responsible for ensuring their programs log/notify appropriately when things die unexpectedly."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 15, "last_activity_date": 1540472147, "creation_date": 1540472147, "answer_id": 52989833, "question_id": 52987652, "link": "https://stackoverflow.com/questions/52987652/whats-the-idea-behind-haskell-libraries-throwing-exceptions/52989833#52989833", "title": "What&#39;s the idea behind Haskell libraries throwing exceptions", "body": "<p>Haskellers do strongly strive to avoid throwing exceptions from <em>functions</em> \u2013 a function should only throw an exception in truely exceptional cases, i.e. in \u201cthis should never happen\u201d situations like the user passing some input that's explicitly forbidden by the documentation. If pure functions regularly threw exceptions, this would be a big problem not only because the type doesn't say what one should be prepared to catch, also one <em>can't</em> catch exceptions within a pure function but only in <code>IO</code> code that calls the function. And even if you can in principle catch the exception, it may be hard to predict <em>where</em> it needs to be done because lazy evaluation can delay the point where it actually happens.</p>\n\n<p>As a matter of fact, even in case of e.g. <a href=\"http://hackage.haskell.org/package/wreq-0.5.2.1/docs/Network-Wreq.html#v:get\" rel=\"noreferrer\"><code>Wreq.get</code></a>, <em>no exception is thrown from the function</em>.</p>\n\n<pre><code>Prelude Network.Wreq&gt; get \"htt:/p/this-isn't even valid URL syntax\" `seq` \"Ok\"\n\"Ok\"\n</code></pre>\n\n<p>It is <em>the <code>IO</code> action</em> that throws, when you execute it:</p>\n\n<pre><code>Prelude Network.Wreq&gt; get \"htt:/p/this-isn't even valid URL syntax\" &gt;&gt; pure ()\n*** Exception: InvalidUrlException \"htt:/p/this-isn't%20even%20valid%20URL%20syntax\" \"Invalid scheme\"\n</code></pre>\n\n<p>Now with an <code>IO</code> action, the situation is a bit different. <em>Lots</em> of <code>IO</code> actions can have potentially very different errors in different situations that may be hard or impossible to predict, like a hard-drive crash. Catalogising all the possible errors in a suitable data type for each action would be a major undertaking, and it would be really quite cumbersome to handle every possible case or figure out which parts just to pass on. And simply wrapping the result of every single  <code>IO</code> action in <code>Maybe</code> would just lead to a similar situation as in Java where every reference can possibly null. This doesn't tell you anything, and people often wouldn't come up with sensible ways of handling this either.</p>\n\n<p>This is pretty much the problem why exceptions were invented in the first place, and it holds just as well for procedural languages as it holds for Haskell (or rather, it's procedural eDSL that is <code>IO</code>). And because unlike pure functions, <code>IO</code> does have a well-defined time-sequence in its control flow, it's also pretty clear where you must do it if you need to catch some particular exception.</p>\n\n<p>That's not to say it never makes sense for an <code>IO</code> action to return a <code>Maybe</code> / <code>Either</code> value that makes the possible errors explicit, just this isn't always worthwhile.</p>\n"}], "owner": {"reputation": 8697, "user_id": 1055165, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/d7c25776b0ca1c13212eea512370102d?s=128&d=identicon&r=PG", "display_name": "zoran119", "link": "https://stackoverflow.com/users/1055165/zoran119"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 293, "favorite_count": 2, "accepted_answer_id": 52989833, "answer_count": 1, "score": 11, "last_activity_date": 1540472147, "creation_date": 1540465115, "last_edit_date": 1540465582, "question_id": 52987652, "link": "https://stackoverflow.com/questions/52987652/whats-the-idea-behind-haskell-libraries-throwing-exceptions", "title": "What&#39;s the idea behind Haskell libraries throwing exceptions", "body": "<p>Why would a library (<a href=\"http://hackage.haskell.org/package/wreq\" rel=\"noreferrer\"><code>wreq</code></a> on a <code>404</code> for example) throw an exception instead of wrapping the result into something like <code>Maybe</code>?</p>\n\n<p>Naively, I think <code>Maybe</code> would be better (compiler warning me if I'm not handling all the cases for example). Why am I wrong here?</p>\n"}, {"tags": ["haskell", "quickcheck"], "answers": [{"comments": [{"owner": {"reputation": 1528, "user_id": 1516794, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/0aa31034e2c59f34d63141791746ec35?s=128&d=identicon&r=PG", "display_name": "cmal", "link": "https://stackoverflow.com/users/1516794/cmal"}, "edited": false, "score": 0, "creation_date": 1540451392, "post_id": 52983095, "comment_id": 92872396, "body": "Thank you. Though I do not understand the meaning. I add this to make <code>(Combine a b)</code> instance of <code>Eq</code> :  <code>instance Eq (Combine Int (Sum Int)) where   Combine { unCombine = f } == Combine { unCombine = g } =     f 0 == g 0 &amp;&amp;     g 1 == g 1</code>"}, {"owner": {"reputation": 1528, "user_id": 1516794, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/0aa31034e2c59f34d63141791746ec35?s=128&d=identicon&r=PG", "display_name": "cmal", "link": "https://stackoverflow.com/users/1516794/cmal"}, "edited": false, "score": 0, "creation_date": 1540453492, "post_id": 52983095, "comment_id": 92873576, "body": "Sorry, but how to write the <code>quickCheck</code> using <code>funoidLeftIdentity1</code> instead of <code>monoidLeftIdentity1</code>?"}], "tags": [], "owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "is_accepted": false, "score": 3, "last_activity_date": 1540451751, "last_edit_date": 1540451751, "creation_date": 1540450369, "answer_id": 52983095, "question_id": 52980636, "link": "https://stackoverflow.com/questions/52980636/how-to-write-quickcheck-on-properties-of-functions/52983095#52983095", "title": "How to write quickCheck on properties of functions?", "body": "<p>You can use <a href=\"http://hackage.haskell.org/package/QuickCheck-2.12.6.1/docs/Test-QuickCheck-Function.html\" rel=\"nofollow noreferrer\"><code>Test.QuickCheck.Function</code></a> to generate random function values, so you should be able to write something like the following to take care of the <code>Arbitrary</code> constraint:</p>\n\n<pre><code>quickCheck (monoidLeftIdentity1 . Combine . apply :: Fun Int (Sum Int) -&gt; Bool)\n</code></pre>\n\n<p>For the <code>Eq</code> constraint, however, you will have trouble comparing function values. I think it should be enough to just check pointwise equality for some sampling of inputs, e.g.</p>\n\n<pre><code>funoidLeftIdentity1 :: (Monoid b, Eq b) =&gt; Fun a b -&gt; a -&gt; Bool\nfunoidLeftIdentity1 (Fn f) x = uncombine (Combine f &lt;&gt; mempty) x == uncombine mempty x\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 3587, "user_id": 7824574, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/a639be4c9ecc139065fbc6b12b87e6a9?s=128&d=identicon&r=PG&f=1", "display_name": "typetetris", "link": "https://stackoverflow.com/users/7824574/typetetris"}, "is_accepted": true, "score": 7, "last_activity_date": 1540454286, "creation_date": 1540454286, "answer_id": 52984192, "question_id": 52980636, "link": "https://stackoverflow.com/questions/52980636/how-to-write-quickcheck-on-properties-of-functions/52984192#52984192", "title": "How to write quickCheck on properties of functions?", "body": "<p>First a full code example:</p>\n\n<pre><code>module Main where\n\nimport Test.QuickCheck\nimport Data.Monoid\n\nnewtype Combine a b = Combine { unCombine :: a -&gt; b }\n\ninstance (Semigroup b) =&gt; Semigroup (Combine a b) where\n    a &lt;&gt; _ = a\n--  (Combine f) &lt;&gt; (Combine g) = Combine $ \\a -&gt; (f a) &lt;&gt; (g a)\n\ninstance (Monoid b) =&gt; Monoid (Combine a b) where\n  mempty = Combine $ \\_ -&gt; mempty\n\nmonoidLeftIdentity :: (Eq m, Monoid m) =&gt; m -&gt; Bool\nmonoidLeftIdentity m = mappend mempty m == m\n\nmonoidRightIdentity :: (Eq m, Monoid m) =&gt; m -&gt; Bool\nmonoidRightIdentity m = mappend m mempty == m\n\nmonoidLeftIdentityF :: (Eq b, Monoid m) =&gt; (Fun a b -&gt; m) -&gt; (m -&gt; a -&gt; b) -&gt; a -&gt; Fun a b -&gt; Bool\nmonoidLeftIdentityF wrap eval point candidate = eval (mappend mempty m) point == eval m point \n where m = wrap candidate\n\nmonoidRightIdentityF :: (Eq b, Monoid m) =&gt; (Fun a b -&gt; m) -&gt; (m -&gt; a -&gt; b) -&gt; a -&gt; Fun a b -&gt; Bool\nmonoidRightIdentityF wrap eval point candidate = eval (mappend m mempty) point == eval m point \n where m = wrap candidate\n\nmain :: IO ()\nmain = do\n  quickCheck $ (monoidLeftIdentityF (Combine . applyFun) unCombine :: Int -&gt; Fun Int (Sum Int) -&gt; Bool)\n  quickCheck $ (monoidRightIdentityF (Combine . applyFun) unCombine :: Int -&gt; Fun Int (Sum Int) -&gt; Bool)\n</code></pre>\n\n<p>What are we doing here?</p>\n\n<p>First we need a way to generate random functions. That is, what this <code>Fun</code> thing is about. There is an <code>Arbitrary</code> instance for <code>Fun a b</code>, if there are certain instances available for <code>a</code> and <code>b</code>. But most of the time we have those.</p>\n\n<p>A value of type <code>Fun a b</code> can be shown, so <code>Fun a b</code> has a show instance, provided <code>a</code> and <code>b</code> have one. We can extract the function with <code>applyFun</code>.</p>\n\n<p>For QuickCheck to take advantage of this, we need to provide a <code>Testable</code> where all argument positions can be randomly generated and shown.</p>\n\n<p>So we have to formulate our Properties in terms of <code>a</code>, <code>b</code> and <code>Fun a b</code>.</p>\n\n<p>To connect all of this with <code>Combine</code> we provide a function from <code>Fun a b</code> to <code>Combine a b</code>.</p>\n\n<p>Now we are stuck with another problem. We can't compare functions, so we can't compare values of type <code>Combine a b</code> for equality. As we are already randomly generating test cases, why not just generate the points, on which to test the functions for equality, also randomly. The equality will not be a sure thing, but we are hunting the falsifiable examples! So that is good enough for us. To do that, we provide a function to \"apply\" a value of type <code>Combine a b</code> to a value of type <code>a</code>, to get a value of type <code>b</code>, which can hopefully be compared for equality.</p>\n"}], "owner": {"reputation": 1528, "user_id": 1516794, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/0aa31034e2c59f34d63141791746ec35?s=128&d=identicon&r=PG", "display_name": "cmal", "link": "https://stackoverflow.com/users/1516794/cmal"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 616, "favorite_count": 2, "accepted_answer_id": 52984192, "answer_count": 2, "score": 5, "last_activity_date": 1540454286, "creation_date": 1540435865, "last_edit_date": 1540450998, "question_id": 52980636, "link": "https://stackoverflow.com/questions/52980636/how-to-write-quickcheck-on-properties-of-functions", "title": "How to write quickCheck on properties of functions?", "body": "<p>I'm trying to do one of the Monoid exercises in Haskell Book (Chapter 15, \"Monoid, Semigroup\") but I'm stuck. The following is given:</p>\n\n<pre><code>newtype Combine a b =\n  Combine { unCombine :: (a -&gt; b) }\n</code></pre>\n\n<p>and I'm supposed to write the <code>Monoid</code> instance for Combine.</p>\n\n<p>I wrote something like this:</p>\n\n<pre><code>instance (Semigroup b) =&gt; Semigroup (Combine a b) where\n  Combine { unCombine = f } &lt;&gt; Combine { unCombine = g } =\n    Combine { unCombine = \\x -&gt; f x &lt;&gt; g x }\n\ninstance (Monoid b) =&gt; Monoid (Combine a b) where\n  mempty = Combine { unCombine = \\_ -&gt; mempty }\n  mappend = (&lt;&gt;)\n</code></pre>\n\n<p>but I do not know how to write the <code>quickCheck</code> for the instance.</p>\n\n<p>Here is my try (does not compile):</p>\n\n<pre><code>monoidLeftIdentity1 :: (Eq m, Monoid m) =&gt; m -&gt; Bool\nmonoidLeftIdentity1 x = mappend mempty x == x\n\nmonoidRightIdentity1 :: (Eq m, Monoid m) =&gt; m -&gt; Bool\nmonoidRightIdentity1 x = mappend x mempty == x\n\n\nmain :: IO ()\nmain = do \n  quickCheck (monoidLeftIdentity1 :: Combine Int (Sum Int) -&gt; Bool)\n  quickCheck (monoidRightIdentity1 :: Combine Int (Sum Int) -&gt; Bool)\n</code></pre>\n\n<p>It seems I must instance <code>Arbitrary</code> and <code>Eq</code> on this type, but how to write them for a function?</p>\n\n<p>There is a <a href=\"https://stackoverflow.com/questions/39456716/how-to-write-semigroup-instance-for-this-data-type\">similar question</a>, in that question, we are asked to write the <code>Semigroup</code> instance for Combine.</p>\n"}, {"tags": ["haskell", "recursive-datastructures"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1540473776, "post_id": 52980197, "comment_id": 92885888, "body": "You don&#39;t need to (nor should you) include the answer in your question. If you feel the need to share the solution, post it as an answer."}], "answers": [{"tags": [], "owner": {"reputation": 3016, "user_id": 3190654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c321c5241605255cae9ecf3fb2dffc0b?s=128&d=identicon&r=PG", "display_name": "bergey", "link": "https://stackoverflow.com/users/3190654/bergey"}, "is_accepted": true, "score": 5, "last_activity_date": 1540436532, "creation_date": 1540436532, "answer_id": 52980720, "question_id": 52980197, "link": "https://stackoverflow.com/questions/52980197/other-data-types-interaction-with-own-constructed-natural-datatype/52980720#52980720", "title": "Other data types interaction with own constructed Natural datatype", "body": "<p><code>natToInt</code> looks OK.  <code>Zero</code>, <code>Succ n</code>, and <code>n</code> all have type <code>Natural</code>.  1 and <code>natToInt n</code> has type <code>Int</code>. You call <code>+</code> on two <code>Int</code>s.</p>\n\n<p>In <code>inToNat</code>, <code>n</code> has type <code>Int</code>, but <code>Succ</code> needs a <code>Natural</code>.  You then try to subtract 1 from a <code>Natural</code>, but you have not defined <code>-</code> for <code>Natural</code> (at least, not in the code in your question).  Your <code>intToNat</code> is not recursive, but you probably want it to be.</p>\n\n<p>You are generally on the right track.  <code>read</code> is not necessary.</p>\n"}], "owner": {"reputation": 121, "user_id": 10453219, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e9a184f840c748468e9736a38c2db9f0?s=128&d=identicon&r=PG", "display_name": "Eric Toporek", "link": "https://stackoverflow.com/users/10453219/eric-toporek"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 55, "favorite_count": 0, "accepted_answer_id": 52980720, "answer_count": 1, "score": 0, "last_activity_date": 1540442455, "creation_date": 1540432089, "last_edit_date": 1540442455, "question_id": 52980197, "link": "https://stackoverflow.com/questions/52980197/other-data-types-interaction-with-own-constructed-natural-datatype", "title": "Other data types interaction with own constructed Natural datatype", "body": "<p>I've made my own data type constructed for the Natural Numbers.</p>\n\n<pre><code>data Natural = Zero | Succ Natural \ninstance Show Natural where \n         show (Zero) = \"0\"\n         show (Succ Zero) = \"S 0\"\n         show (Succ n) = \"S(\" ++ show n ++ \")\"\n</code></pre>\n\n<p>I'm trying to make a function to interact with basic data types (mostly Int) defined as it follows: </p>\n\n<pre><code>intToNat:: Int -&gt; Natural\nintToNat 0 = Zero\nintToNat n = (Succ n) - 1\n\nnatToInt:: Natural -&gt; Int\nnatToInt Zero = 0\nnatToInt (Succ n) = 1 + natToInt n\n</code></pre>\n\n<p>Well, this doesn't work at all, the matter is, I must to keep this function as a recursive function. I don't know if the <code>read</code> function would be helpful on this.</p>\n\n<p><em>UPDATE</em>: A manner at how the code does compile is using in the function:</p>\n\n<pre><code>intToNat:: Int -&gt; Natural\nintToNat 0 = Zero\nintToNat n = Succ(Succ Zero) --Obviusly this method return a constant number, in this case: 2.\n</code></pre>\n\n<p>So in this case, I guess is related, but I want to know if there is a 'recursive' way to define the 'loop' of <code>Suc Zero</code> <em>n-1</em> times.</p>\n\n<p><strong>FINAL Update:</strong> The <code>intToNat</code> is defined as it follows:</p>\n\n<pre><code>intToNat:: Int -&gt; Natural\nintToNat 0 = Zero\nintToNat n = Suc(intToNat (n-1))\n</code></pre>\n"}]