[{"tags": ["haskell", "smt", "sbv"], "comments": [{"owner": {"reputation": 7666, "user_id": 1241193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0331e5e748a0ac3860b68f6cac130ef1?s=128&d=identicon&r=PG", "display_name": "Bob Dalgleish", "link": "https://stackoverflow.com/users/1241193/bob-dalgleish"}, "edited": false, "score": 1, "creation_date": 1562179049, "post_id": 56875985, "comment_id": 100300853, "body": "Does <code>STuple</code> not meet your needs?"}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1562179177, "post_id": 56875985, "comment_id": 100300908, "body": "From skimming the source code, it <a href=\"http://hackage.haskell.org/package/sbv-8.3/docs/src/Data.SBV.Core.Concrete.html#CVal\" rel=\"nofollow noreferrer\">looks like</a> a concrete value is always <i>fully</i> concrete. The <code>CTuple</code> constructor contains a list of <code>CVal</code>s, not <code>SBV</code>s. That is, you can&#39;t have a concrete tuple containing a symbolic value."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 7666, "user_id": 1241193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0331e5e748a0ac3860b68f6cac130ef1?s=128&d=identicon&r=PG", "display_name": "Bob Dalgleish", "link": "https://stackoverflow.com/users/1241193/bob-dalgleish"}, "edited": false, "score": 1, "creation_date": 1562191665, "post_id": 56875985, "comment_id": 100305551, "body": "@BobDalgleish But <code>type STuple a b = SBV (a, b)</code>, so the question remains exactly the same even if <code>STuple</code> does meet their needs!"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1562191859, "post_id": 56875985, "comment_id": 100305595, "body": "What do you want to do with your <code>SBV (a,b)</code> that you cannot do with an <code>(SBV a, SBV b)</code>? (If the answer is &quot;use <code>(.==)</code> or similar with another <code>SBV (a, b)</code>&quot;, can you modify your code to change the other thing to an <code>(SBV a, SBV b)</code> instead?)"}, {"owner": {"reputation": 7230, "user_id": 788337, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/wiVpx.png?s=128&g=1", "display_name": "jmite", "link": "https://stackoverflow.com/users/788337/jmite"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1562192334, "post_id": 56875985, "comment_id": 100305679, "body": "@DanielWagner I need an uninterpreted function with multiple arguments, where the number of arguments is not known statically. I&#39;ve been messing around with existential types and such, but I&#39;m not sure that it&#39;s even possible with SBV. I&#39;d used SimpleSMT but it&#39;s cripplingly slow."}, {"owner": {"reputation": 18055, "user_id": 936310, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/302ec54987694b9746abf8e2e0ad8caf?s=128&d=identicon&r=PG&f=1", "display_name": "alias", "link": "https://stackoverflow.com/users/936310/alias"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1562196606, "post_id": 56875985, "comment_id": 100306575, "body": "@DanielWagner It is true that <code>SBV (a, b)</code> and <code>(SBV a, SBV b)</code> have pretty much the same expressive power; and indeed <code>tuple</code> and <code>untuple</code> functions form an isomorphism between them. But in practice, having <code>SBV (a, b)</code> is really nice as it cuts down on boilerplate, and also it directly maps to actual SMT-Lib tuples. They are just much more convenient in general."}], "answers": [{"tags": [], "owner": {"reputation": 18055, "user_id": 936310, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/302ec54987694b9746abf8e2e0ad8caf?s=128&d=identicon&r=PG&f=1", "display_name": "alias", "link": "https://stackoverflow.com/users/936310/alias"}, "is_accepted": true, "score": 3, "last_activity_date": 1562200816, "last_edit_date": 1562200816, "creation_date": 1562196088, "answer_id": 56878996, "question_id": 56875985, "link": "https://stackoverflow.com/questions/56875985/combining-tuples-in-sbv/56878996#56878996", "title": "Combining Tuples in SBV?", "body": "<p>Sounds like you need the <a href=\"http://hackage.haskell.org/package/sbv/docs/Data-SBV-Tuple.html#g:2\" rel=\"nofollow noreferrer\"><code>tuple</code></a> function. Here's an example:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>import Data.SBV\nimport Data.SBV.Tuple\n\ntup :: (SymVal a, SymVal b) =&gt; (SBV a, SBV b) -&gt; SBV (a, b)\ntup = tuple\n\ntst :: Predicate\ntst = do x &lt;- sInteger \"x\"\n         y &lt;- sInteger \"y\"\n         z &lt;- sTuple \"xy\"\n\n         return $ tup (x, y) .== z\n</code></pre>\n\n<p>Of course, <code>tuple</code> itself can handle arity upto 8; the above is just one instantiation at the exact type you wanted. We have:</p>\n\n<pre><code>$ ghci a.hs\nGHCi, version 8.6.4: http://www.haskell.org/ghc/  :? for help\n[1 of 1] Compiling Main             ( a.hs, interpreted )\nOk, one module loaded.\n*Main&gt; sat tst\nSatisfiable. Model:\n  x  =     0 :: Integer\n  y  =     1 :: Integer\n  xy = (0,1) :: (Integer, Integer)\n</code></pre>\n\n<p>There's also the <code>untuple</code> function that goes in the other direction. They are both in the <a href=\"http://hackage.haskell.org/package/sbv/docs/Data-SBV-Tuple.html\" rel=\"nofollow noreferrer\"><code>Data.SBV.Tuple</code></a> module that you have to explicitly import. (You can also find lens-like accessors in the same module, which lets you write, <code>^._1</code>, <code>^._2</code> etc. to extract fields of tuples; as in <code>z^._2</code> for the above example.)</p>\n"}], "owner": {"reputation": 7230, "user_id": 788337, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/wiVpx.png?s=128&g=1", "display_name": "jmite", "link": "https://stackoverflow.com/users/788337/jmite"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 78, "favorite_count": 0, "accepted_answer_id": 56878996, "answer_count": 1, "score": 2, "last_activity_date": 1562200816, "creation_date": 1562178183, "question_id": 56875985, "link": "https://stackoverflow.com/questions/56875985/combining-tuples-in-sbv", "title": "Combining Tuples in SBV?", "body": "<p>Basically I'm wondering, is there any way to write a function of the following type with the SBV library:</p>\n\n<pre><code>(SBV a, SBV b) -&gt; SBV (a,b)\n</code></pre>\n\n<p>This seems like it <em>should</em> be possible: if we have two symbolic values, we can make a new symbolic value, as a concrete pair whose elements are either the symbolic or concrete values of the two inputs. But I can't find anything like this, and the <code>SBV</code> type does not have its constructors exposed.</p>\n\n<p>Is this possible?</p>\n"}, {"tags": ["haskell", "syntax", "algebraic-data-types"], "answers": [{"comments": [{"owner": {"reputation": 24870, "user_id": 146077, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/IvgEc.jpg?s=128&g=1", "display_name": "Kirk Broadhurst", "link": "https://stackoverflow.com/users/146077/kirk-broadhurst"}, "edited": false, "score": 0, "creation_date": 1562176677, "post_id": 56874346, "comment_id": 100299824, "body": "This is great. I see weird behavior when I try to use a variable in place of the <code>0</code> in your second example - the variable is assigned to rather than used as evaluation."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 2, "creation_date": 1562177546, "post_id": 56874346, "comment_id": 100300202, "body": "Haskell isn&#39;t prolog. If you have some prior variable, say <code>x = 0</code> and want to ensure <code>id == 0</code> then you can&#39;t match with <code>Node x _</code> - that just shadows the variable <code>x</code> (it is a new variable unrelated to the prior x).  Instead, you can use a guard solution such as <code>[n | n@(Node id _) &lt;- nodes, id == x]</code>."}], "tags": [], "owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "is_accepted": false, "score": 8, "last_activity_date": 1562173709, "last_edit_date": 1562173709, "creation_date": 1562170601, "answer_id": 56874346, "question_id": 56874044, "link": "https://stackoverflow.com/questions/56874044/retrieve-values-from-datatype/56874346#56874346", "title": "Retrieve values from datatype", "body": "<p>The only way to get values out of a data constructor is indeed to pattern-match on it. If you want, you can define a function that does it, as you have done with <code>nodeId</code>, or you can just do the pattern matching inline. For example, you could write</p>\n\n<pre><code>[n | n@(Node id _) &lt;- nodes, id == 0]\n</code></pre>\n\n<p>Or, since a list comprehension skips values for which a pattern fails, a shorter version would be </p>\n\n<pre><code>[n | n@(Node 0 _) &lt;- nodes]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 35578, "user_id": 3000206, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/BK1fo.jpg?s=128&g=1", "display_name": "Carcigenicate", "link": "https://stackoverflow.com/users/3000206/carcigenicate"}, "reply_to_user": {"reputation": 24870, "user_id": 146077, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/IvgEc.jpg?s=128&g=1", "display_name": "Kirk Broadhurst", "link": "https://stackoverflow.com/users/146077/kirk-broadhurst"}, "edited": false, "score": 1, "creation_date": 1562172211, "post_id": 56874488, "comment_id": 100297797, "body": "@KirkBroadhurst Np. I&#39;ll note though that using records does have downsides. Since it generates functions based on the record field names, you can&#39;t have two records with the same names for fields, as that would cause a conflict. It&#39;ll also causes conflicts with any existing functions with the same name."}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 1, "creation_date": 1562176849, "post_id": 56874488, "comment_id": 100299904, "body": "Though, as usual, there is a GHC extension (<code>DuplicateRecordFields</code>) that can help with the first part of this problem."}, {"owner": {"reputation": 35578, "user_id": 3000206, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/BK1fo.jpg?s=128&g=1", "display_name": "Carcigenicate", "link": "https://stackoverflow.com/users/3000206/carcigenicate"}, "reply_to_user": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1562177358, "post_id": 56874488, "comment_id": 100300129, "body": "@K.A.Buhr That I actually didn&#39;t know about, although it doesn&#39;t surprise me. I&#39;ll add something in in a sec. Thanks."}], "tags": [], "owner": {"reputation": 35578, "user_id": 3000206, "user_type": "registered", "accept_rate": 98, "profile_image": "https://i.stack.imgur.com/BK1fo.jpg?s=128&g=1", "display_name": "Carcigenicate", "link": "https://stackoverflow.com/users/3000206/carcigenicate"}, "is_accepted": false, "score": 5, "last_activity_date": 1562177935, "last_edit_date": 1562177935, "creation_date": 1562171158, "answer_id": 56874488, "question_id": 56874044, "link": "https://stackoverflow.com/questions/56874044/retrieve-values-from-datatype/56874488#56874488", "title": "Retrieve values from datatype", "body": "<p>You could also use record syntax to generate accessor functions for the fields:</p>\n\n<pre><code>data Node = Node { nodeId :: Integer,\n                   children :: [Node]\n                 } deriving (Show)\n\n[n | n &lt;- nodes, nodeId n == 0]\n</code></pre>\n\n<p>Although this has the downside that it's polluting; it creates functions based on the field names. That means you can't have two records that have fields with the same name. You also can't have your own functions with the same name as the field name of the record. </p>\n\n<p>As @K. A. Buhr mentions though, <a href=\"https://gitlab.haskell.org/ghc/ghc/wikis/records/overloaded-record-fields/duplicate-record-fields\" rel=\"nofollow noreferrer\">GHC does have an extension</a> to help alleviate at least one of these problems.</p>\n"}], "owner": {"reputation": 24870, "user_id": 146077, "user_type": "registered", "accept_rate": 87, "profile_image": "https://i.stack.imgur.com/IvgEc.jpg?s=128&g=1", "display_name": "Kirk Broadhurst", "link": "https://stackoverflow.com/users/146077/kirk-broadhurst"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1562177935, "creation_date": 1562169514, "question_id": 56874044, "link": "https://stackoverflow.com/questions/56874044/retrieve-values-from-datatype", "title": "Retrieve values from datatype", "body": "<p>I'm trying to implement an object graph in Haskell, and I have a simple <code>Node</code> type which contains a identifier and a list of connected nodes.</p>\n\n<pre><code>data Node = Node Integer [Node] deriving (Show)\n</code></pre>\n\n<p>My problem is operating on these types - specifically retrieving the values. For example, I want to look at the <code>Integer</code> value within the node; maybe find the item with id = 0</p>\n\n<pre><code>nodes = [Node 0 []]\n[n | n &lt;- nodes, fst n == 0]\n\n\u2022 Couldn't match expected type \u2018(Integer, b0)\u2019\n                  with actual type \u2018Node\u2019\n    \u2022 In the first argument of \u2018fst\u2019, namely \u2018n\u2019\n      In the first argument of \u2018(==)\u2019, namely \u2018fst n\u2019\n      In the expression: fst n == 0\n</code></pre>\n\n<p>Okay, so I can't use <code>fst</code>. I can't use <code>!!</code> either. I <em>can</em> write a function that pulls out the value like </p>\n\n<pre><code>nodeId :: Node -&gt; Integer\nnodeId (Node i _) = i\n</code></pre>\n\n<p>and now <code>[n | n &lt;- nodes, nodeId n == 0]</code> will work. </p>\n\n<p>Is there another way to get values from datatypes like this? Is this the right pattern?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 7, "creation_date": 1562166671, "post_id": 56873161, "comment_id": 100294991, "body": "Show us what you tried with <code>take</code> and <code>drop</code>, and explain why you don&#39;t like the result."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1562166805, "post_id": 56873161, "comment_id": 100295062, "body": "Can you show your attempt and what trouble(s) you have?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1562166961, "post_id": 56873161, "comment_id": 100295136, "body": "The difference between a <code>String</code> and <code>Text</code> is, roughly speaking, the fact that a <code>String</code> is a linked list of <code>Char</code>s (so <code>[Char]</code>), whereas a <code>Text</code> is a packed equivalent (so more an &quot;array&quot; of <code>Char</code>s)."}], "answers": [{"comments": [{"owner": {"reputation": 47, "user_id": 6455147, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-moqw1Qzn3ZU/AAAAAAAAAAI/AAAAAAAAABE/SgRPvIsD5Jk/photo.jpg?sz=128", "display_name": "CPUU", "link": "https://stackoverflow.com/users/6455147/cpuu"}, "edited": false, "score": 0, "creation_date": 1562252894, "post_id": 56877593, "comment_id": 100328089, "body": "Thanks for your information. I think <code>take (n-m) (drop m str)</code> but, error occurs. Variable not in scope: substr :: [Char] -&gt; Integer -&gt; Integer -&gt; t"}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "reply_to_user": {"reputation": 47, "user_id": 6455147, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-moqw1Qzn3ZU/AAAAAAAAAAI/AAAAAAAAABE/SgRPvIsD5Jk/photo.jpg?sz=128", "display_name": "CPUU", "link": "https://stackoverflow.com/users/6455147/cpuu"}, "edited": false, "score": 0, "creation_date": 1562253143, "post_id": 56877593, "comment_id": 100328209, "body": "My two-line example above was meant to go in a &quot;xxx.hs&quot; file and be loaded.  It sounds like you tried to enter it at the GHCi interactive prompt.  If so, the first line will give that error.  This question might help: <a href=\"https://stackoverflow.com/questions/45362445/defining-function-signature-in-ghci\" title=\"defining function signature in ghci\">stackoverflow.com/questions/45362445/&hellip;</a>."}, {"owner": {"reputation": 47, "user_id": 6455147, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-moqw1Qzn3ZU/AAAAAAAAAAI/AAAAAAAAABE/SgRPvIsD5Jk/photo.jpg?sz=128", "display_name": "CPUU", "link": "https://stackoverflow.com/users/6455147/cpuu"}, "edited": false, "score": 0, "creation_date": 1562253543, "post_id": 56877593, "comment_id": 100328387, "body": "Can I ask one more? How can I check the bounds? for example, if the length of str is 15, then ( n &gt; m ) &amp;&amp; ( 0 &lt; m, n &lt; 15 ) will must be true"}, {"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "reply_to_user": {"reputation": 47, "user_id": 6455147, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-moqw1Qzn3ZU/AAAAAAAAAAI/AAAAAAAAABE/SgRPvIsD5Jk/photo.jpg?sz=128", "display_name": "CPUU", "link": "https://stackoverflow.com/users/6455147/cpuu"}, "edited": false, "score": 0, "creation_date": 1562261878, "post_id": 56877593, "comment_id": 100331341, "body": "@CPUU No, you can&#39;t. New question is a new post."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 8, "last_activity_date": 1562186145, "creation_date": 1562186145, "answer_id": 56877593, "question_id": 56873161, "link": "https://stackoverflow.com/questions/56873161/is-there-a-way-to-extract-strings-by-index-in-haskell/56877593#56877593", "title": "Is there a way to extract strings by index in Haskell?", "body": "<p>Haskell's \"built in\" string type is called <code>String</code>, and it's actually just a list of <code>Char</code>.  In fact, if you try entering a list of <code>Char</code> at the GHCi prompt, it'll print it back to you in its <code>String</code> syntax:</p>\n\n<pre><code>&gt; ['a','b','c']\n\"abc\"\n</code></pre>\n\n<p>For \"real\" code, <code>String</code> is usually a terrible choice because it has all the performance you'd expect from a linked list of characters.  But, it's good enough for experimenting when you're learning Haskell.  You can learn about alternatives like <code>Text</code> later.</p>\n\n<p>Because <code>String</code> is a list of char, <code>take</code> and <code>drop</code> work on it just like they work on a list:</p>\n\n<pre><code>&gt; take 3 [1,2,3,4,5]\n[1,2,3]\n&gt; take 3 \"abcde\"\n\"abc\"\n</code></pre>\n\n<p>They act on the start of the string, so if you want a general substring function, you need to first <code>drop</code> the beginning part of the string you don't want, and then <code>take</code> the substring you <em>do</em> want.  For example, to get <code>\"bc\"</code> out of <code>\"abcde\"</code>, you want to drop <code>\"a\"</code>:</p>\n\n<pre><code>&gt; drop 1 \"abcde\"\n\"bcde\"\n</code></pre>\n\n<p>and then take <code>\"bc\"</code>:</p>\n\n<pre><code>&gt; take 2 (drop 1 \"abcde\")\n\"bc\"\n</code></pre>\n\n<p>The rest is just math -- the first number \"2\" should -- in general -- be the length of the desired substring.  The second number \"1\" should -- in general -- be the starting position (offset zero).</p>\n\n<p>So, try filling in the \"???\" below with expressions involving <code>m</code> and <code>n</code>, and if you're still stuck, post an edit or a follow-up question:</p>\n\n<pre><code>substr :: Int -&gt; Int -&gt; String -&gt; String\nsubstr m n str = take ??? (drop ??? str)\n</code></pre>\n"}], "owner": {"reputation": 47, "user_id": 6455147, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-moqw1Qzn3ZU/AAAAAAAAAAI/AAAAAAAAABE/SgRPvIsD5Jk/photo.jpg?sz=128", "display_name": "CPUU", "link": "https://stackoverflow.com/users/6455147/cpuu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1311, "favorite_count": 0, "accepted_answer_id": 56877593, "answer_count": 1, "score": -5, "last_activity_date": 1562186145, "creation_date": 1562166547, "question_id": 56873161, "link": "https://stackoverflow.com/questions/56873161/is-there-a-way-to-extract-strings-by-index-in-haskell", "title": "Is there a way to extract strings by index in Haskell?", "body": "<p>I'm trying to implement the Haskell equivalent of the Python:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>&gt; \"abcdef\"[1:3]\n'bcd'\n</code></pre>\n\n<p>In fact, I'll try using the Haskell language for the first time. I do not know how to handle strings(or text???)</p>\n\n<p>substr :: Text -> Int -> Int -> Text\n????\nI try to use 'take' and 'drop', but I do not know the exact order and function combination.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>substr \"abcdef\" 1 3\n\u201cbcd\u201d\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 5054, "user_id": 548515, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55624bebc921a03713d00a91c9e58a36?s=128&d=identicon&r=PG", "display_name": "Hans Lub", "link": "https://stackoverflow.com/users/548515/hans-lub"}, "edited": false, "score": 0, "creation_date": 1562159587, "post_id": 56870837, "comment_id": 100290648, "body": "duplicate of <a href=\"https://stackoverflow.com/questions/18035458/haskell-export-current-module-with-additional-imported-module?rq=1\">Haskell export current module with additional imported module</a>"}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 5, "last_activity_date": 1562159259, "creation_date": 1562159259, "answer_id": 56870871, "question_id": 56870837, "link": "https://stackoverflow.com/questions/56870837/module-export-list-how-to-export-imported-module/56870871#56870871", "title": "Module export list: how to export imported module?", "body": "<pre><code>module My (module My, module Another) where\nimport Another\n</code></pre>\n\n<p>Pretty sneaky, huh?</p>\n"}], "owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 100, "favorite_count": 0, "closed_date": 1562166623, "accepted_answer_id": 56870871, "answer_count": 1, "score": 3, "last_activity_date": 1562159259, "creation_date": 1562159143, "question_id": 56870837, "link": "https://stackoverflow.com/questions/56870837/module-export-list-how-to-export-imported-module", "closed_reason": "Duplicate", "title": "Module export list: how to export imported module?", "body": "<p>I can re-export imported module like:</p>\n\n<pre><code>module My (\n  module Another\n, A\n) where\nimport Another\n</code></pre>\n\n<p>But this form will export only <code>Another</code> and <code>A</code>. How to export anything (all!) and imported module without to enumerate all exporting symbols? Something like export without the list:</p>\n\n<pre><code>module My where\n...\n</code></pre>\n\n<p>PS. The last form does not re-export importing modules. Is it possible at whole?</p>\n"}, {"tags": ["haskell", "monad-transformers"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1562166769, "post_id": 56868458, "comment_id": 100295048, "body": "What goes wrong if you just cargo-cult <code>ReaderT</code>&#39;s instance?"}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1562285092, "post_id": 56878099, "comment_id": 100336512, "body": "So it occurs to me that it might be nice for the unlift instance to tag its state with the features to prevent one from writing <code>AppT fs m a -&gt; AppT fs&#39; m a</code> via unlifting. Perhaps that is what the original question asker is after?"}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": false, "score": 1, "last_activity_date": 1562188946, "creation_date": 1562188946, "answer_id": 56878099, "question_id": 56868458, "link": "https://stackoverflow.com/questions/56868458/how-to-define-monadbasecontrol-for-a-monad-that-is-not-a-transformer/56878099#56878099", "title": "How to define MonadBaseControl for a monad that is NOT a transformer?", "body": "<p>Your <code>AppM</code> is basically a <code>ReaderT</code> transformer; you've just specialized it to <code>IO</code>.  You could rewrite it as:</p>\n\n<pre><code>newtype AppT (features :: [FeatureFlag]) m a = AppT (ReaderT Env m a)\n</code></pre>\n\n<p>with a type alias for the IO version:</p>\n\n<pre><code>type AppM features = AppT features IO\n</code></pre>\n\n<p>Then you should be able to use a combination of usual deriving clauses and standalone deriving clauses to get the classes you want.</p>\n\n<p>At least, the following typechecks, and GHC seems to think it's produced an <code>instance MonadBaseControl IO (AppT features IO)</code>.</p>\n\n<pre><code>{-# LANGUAGE DataKinds, FlexibleInstances, GADTs, GeneralizedNewtypeDeriving,\n    KindSignatures, MultiParamTypeClasses, ScopedTypeVariables, StandaloneDeriving,\n    UndecidableInstances #-}\n\nimport Control.Monad.Base\nimport Control.Monad.Catch\nimport Control.Monad.Reader\nimport Control.Monad.IO.Unlift\nimport Control.Monad.Trans.Control\n\ndata FeatureFlag = Feature1 | Feature2\n\ndata Env\n\nnewtype AppT (features :: [FeatureFlag]) m a = AppT (ReaderT Env m a)\n  deriving (Functor, Applicative, Monad, MonadReader Env, MonadIO,\n            MonadThrow, MonadCatch, MonadMask,\n            MonadTrans, MonadTransControl)\ntype AppM features = AppT features IO\nderiving instance MonadBase IO (AppM features)\nderiving instance MonadBaseControl IO (AppM features)\nderiving instance MonadUnliftIO (AppM features)\n</code></pre>\n"}], "owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 96, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1562188946, "creation_date": 1562151051, "question_id": 56868458, "link": "https://stackoverflow.com/questions/56868458/how-to-define-monadbasecontrol-for-a-monad-that-is-not-a-transformer", "title": "How to define MonadBaseControl for a monad that is NOT a transformer?", "body": "<p>Related to <a href=\"https://stackoverflow.com/questions/17653666/monadtranscontrol-instance-for-a-custom-monad\">MonadTransControl instance for a custom monad</a> where, unfortunately (but understandably) the author gave up on <code>monad-control</code>. However, that is not an option for me, because I need to use <code>Control.Concurrent.Async.Lifted</code> within my custom monad:</p>\n\n<pre><code>{-# LANGUAGE DataKinds, GADTs, ScopedTypeVariables #-}\n\ndata FeatureFlag = Feature1 | Feature2\n\nnewtype AppM (features :: [FeatureFlag]) a = AppM (ReaderT Env IO a) \n  deriving (Functor, Applicative, Monad, MonadReader Env, MonadIO, MonadThrow, MonadCatch, MonadMask, MonadUnliftIO)\n</code></pre>\n\n<p>I've tried reading <a href=\"https://www.stackage.org/haddock/lts-12.1/monad-control-1.0.2.3/Control-Monad-Trans-Control.html\" rel=\"nofollow noreferrer\">https://www.stackage.org/haddock/lts-12.1/monad-control-1.0.2.3/Control-Monad-Trans-Control.html</a> but nothing seems to be making sense to me. <em>Conceptually</em> I understand why <code>MonadBaseControl</code> and friends are required, thanks to the walk-through at <a href=\"https://www.yesodweb.com/book/monad-control\" rel=\"nofollow noreferrer\">https://www.yesodweb.com/book/monad-control</a> , but I can't figure out how to <em>implement</em> this.</p>\n\n<p>The official docs have an implementation guide at the very top, but it assumes monad-transformers:</p>\n\n<blockquote>\n  <p>Define instances MonadTransControl T for all transformers T, using the defaultLiftWith and defaultRestoreT functions on the constructor and deconstructor of T.</p>\n  \n  <p>[...]</p>\n  \n  <p>Define instances MonadBaseControl B m => MonadBaseControl B (T m) for all transformers:</p>\n</blockquote>\n\n<p><strong>How do I write a sensible instance for <code>MonadBaseControl IO (AppM fs)</code> where the <code>fs</code> part is preserved when the monad is unwrapped and wrapped again?</strong> Also, I'm assuming that I don't really have to implement <code>MonadTransControl</code>, because <code>AppM fs</code> is not a transformer.</p>\n\n<p>PS: Also related - <a href=\"https://stackoverflow.com/questions/56863771/is-it-safe-to-derive-monadthrow-monadcatch-monadbasecontrol-monadunliftio-et\">Is it safe to derive MonadThrow, MonadCatch, MonadBaseControl, MonadUnliftIO, etc?</a></p>\n"}, {"tags": ["haskell", "functor", "algebraic-data-types"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 2, "creation_date": 1562135715, "post_id": 56864093, "comment_id": 100277357, "body": "<i>\u201c...as sometimes I would have to work on the whole array rather than the members...\u201d</i> This means that a functor instance isn&#39;t what you&#39;re looking for."}, {"owner": {"reputation": 111, "user_id": 7653052, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/399de5190414c3f629c25b9def3b5846?s=128&d=identicon&r=PG&f=1", "display_name": "Abhijeet Melkani", "link": "https://stackoverflow.com/users/7653052/abhijeet-melkani"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1562140046, "post_id": 56864093, "comment_id": 100279551, "body": "@AJFarmar Uhm I am a newbie to Haskell. What would you recommend then instead of  a functior?"}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 2, "creation_date": 1562141887, "post_id": 56864093, "comment_id": 100280484, "body": "Writing functions specifically for the use case you want, not <code>fmap</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1562148319, "post_id": 56864093, "comment_id": 100284062, "body": "<code>fmap</code> is meant to apply to all the items of type <code>a</code> in a container. If you need something else, do not call it <code>fmap</code>, and do not use <code>Functor</code>."}, {"owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 3, "creation_date": 1562152845, "post_id": 56864093, "comment_id": 100286456, "body": "Why not just using a single (non-empty) list?"}], "answers": [{"tags": [], "owner": {"reputation": 25321, "user_id": 163177, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e811b5337bcad19d52c8fed3a0ea0075?s=128&d=identicon&r=PG", "display_name": "John F. Miller", "link": "https://stackoverflow.com/users/163177/john-f-miller"}, "is_accepted": true, "score": 4, "last_activity_date": 1562136918, "creation_date": 1562136918, "answer_id": 56864519, "question_id": 56864093, "link": "https://stackoverflow.com/questions/56864093/creating-an-algebraic-data-type-in-haskell-which-has-either-an-int-or-an-array-o/56864519#56864519", "title": "Creating an algebraic data type in Haskell which has either an Int or an array of them", "body": "<p>Your problem is with this line</p>\n\n<pre><code>fmap f (Candidates (x:xs)) = Candidates ( f (x:xs))\n</code></pre>\n\n<p>the function <code>f</code> works only on single values and you are trying to apply it to a list.  What you need to do is apply f to each element in the list.</p>\n\n<p>Try: </p>\n\n<pre><code>fmap f (Candidates xs) = Candidates ( fmap f xs)\n</code></pre>\n\n<p>This will apply f to each member of xs.</p>\n\n<hr>\n\n<p>As an aside, have you read <a href=\"https://www.schoolofhaskell.com/school/starting-with-haskell/basics-of-haskell/13-the-list-monad\" rel=\"nofollow noreferrer\">this article</a> (or similar) about the list monad?</p>\n"}], "owner": {"reputation": 111, "user_id": 7653052, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/399de5190414c3f629c25b9def3b5846?s=128&d=identicon&r=PG&f=1", "display_name": "Abhijeet Melkani", "link": "https://stackoverflow.com/users/7653052/abhijeet-melkani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 162, "favorite_count": 0, "accepted_answer_id": 56864519, "answer_count": 1, "score": 0, "last_activity_date": 1562136918, "creation_date": 1562135107, "question_id": 56864093, "link": "https://stackoverflow.com/questions/56864093/creating-an-algebraic-data-type-in-haskell-which-has-either-an-int-or-an-array-o", "title": "Creating an algebraic data type in Haskell which has either an Int or an array of them", "body": "<p>What I require is a data type that either contains an exact value or contains a list of possible candidates. (I will be using values of type Int).</p>\n\n<p>What I would want is that if I perform an <code>f: Int -&gt; ...</code> function on a <code>Cell</code> which has an exact value it is performed on the value and if I perform a function of the form <code>f : [Int] -&gt; ...</code> on a <code>Cell</code> with candidates it performs the function on the array of candidates. Hence I define my data like this: </p>\n\n<pre><code>data Cell a = Exactly a | Candidates [a] deriving (Eq, Read, Show)\n\ninstance Functor Cell where  \n    fmap f (Exactly x) = Exactly (f x)  \n    fmap f (Candidates (x:xs)) = Candidates ( f (x:xs)) \n</code></pre>\n\n<p>This does not compile and gives me an error of the form</p>\n\n<p><code>Occurs check: cannot construct the infinite type: b ~ [b]  ...</code></p>\n\n<p>If I edit my code to </p>\n\n<p><code>fmap f (Candidates (x:xs)) = Candidates ( map f (x:xs))</code></p>\n\n<p>this does compile but then does not serve my function well as sometimes I would have to work on the whole array rather than the members element-wise.</p>\n\n<p>Thanks for help.</p>\n"}, {"tags": ["haskell", "monads", "monad-transformers", "deriving"], "answers": [{"comments": [{"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1562152715, "post_id": 56868616, "comment_id": 100286372, "body": "Thanks! I think the relevant section for me was <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#extension-GeneralizedNewtypeDeriving\" rel=\"nofollow noreferrer\">downloads.haskell.org/~ghc/latest/docs/html/users_guide/&hellip;</a> I now understand that instances can be derived pretty mechanically for <b>simple</b> newtypes. However, in my case the newtype also has a phantom type, which might complicate things. In fact, it refuses to derive anything for <code>MonadBaseControl IO</code>. Is it safe to assume that the compiler is doing the <b>safe</b> thing if it derives something automatically? Specifically for things like <code>MonadCatch</code> and <code>MonadMask</code>?"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "reply_to_user": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1562167090, "post_id": 56868616, "comment_id": 100295205, "body": "I&#39;m not sure what you mean, phantom types shouldn&#39;t be a problem at all, unless you mean something different than I have in mind. Deriving is type-safe, it doesn&#39;t do anything you couldn&#39;t do manually without deriving. But type-safe doesn&#39;t mean correct, and correctness is up to you as the programmer to specify. What <code>GeneralizedNewtypeDeriving</code> and <code>DerivingVia</code> do is entirely straightforward, assuming you know how to wrap an interface in a newtype, which sounds like pretty basic knowledge, but tell me if I&#39;m missing something."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "reply_to_user": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1562167463, "post_id": 56868616, "comment_id": 100295412, "body": "<code>DeriveAnyType</code> uses the &quot;default&quot; implementation of a class, which is part of the definition of the class (and may not exist). So to know whether that is correct, you have to look at the default implementation (or trust what the doc says). The point is that there is nothing you need to <b>assume</b> as a programmer using deriving. You need to know how to write an instance, and you need to know what instance gets derived to know whether that&#39;s the instance that you wanted to write. That doesn&#39;t involve any knowledge of the internals of GHC."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "reply_to_user": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1562167544, "post_id": 56868616, "comment_id": 100295449, "body": "If you are unsure (which is understandable at the start), you can also use the GHC option <code>-ddump-deriv</code> to check what instance is actually being derived."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1562262116, "post_id": 56868616, "comment_id": 100331404, "body": "<code>-ddump-deriv</code> results may well refer to functions with rather mysterious names that are defined/generated in other modules. It&#39;s useful for stock deriving, but I dunno how much you&#39;ll get out of it otherwise."}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1564047498, "post_id": 56868616, "comment_id": 100905856, "body": "Now that my refactoring process is on the verge of finishing, my final code is emerging and I have run into a related, but possibly, different problem at <a href=\"https://stackoverflow.com/questions/57198777/how-to-define-monadunliftio-instance-for-a-newtype-with-a-phantom-type-variable\" title=\"how to define monadunliftio instance for a newtype with a phantom type variable\">stackoverflow.com/questions/57198777/&hellip;</a>"}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 1, "last_activity_date": 1562151581, "creation_date": 1562151581, "answer_id": 56868616, "question_id": 56863771, "link": "https://stackoverflow.com/questions/56863771/is-it-safe-to-derive-monadthrow-monadcatch-monadbasecontrol-monadunliftio-et/56868616#56868616", "title": "Is it safe to derive MonadThrow, MonadCatch, MonadBaseControl, MonadUnliftIO, etc?", "body": "<p>The user manual has documentation about every extension, and it keeps getting better; here's the section on deriving, that should be sufficient to know what's actually happening: <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#extensions-to-the-deriving-mechanism\" rel=\"nofollow noreferrer\">https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#extensions-to-the-deriving-mechanism</a></p>\n\n<p>In this case, all those classes are handled by <code>GeneralizedNewtypeDeriving</code>.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE GeneralizedNewtypeDeriving, UndecidableInstances #-}\n\nmodule M where\n\nimport Control.Monad.IO.Unlift\nimport Control.Monad.Catch\nimport Control.Monad.Trans.Control\nimport Control.Monad.Base\nimport Control.Monad.Reader\n\nnewtype Foo a = Foo (ReaderT () IO a)\n  deriving (Functor, Applicative, Monad, MonadIO, MonadUnliftIO, MonadThrow, MonadCatch, MonadMask, MonadBase IO, MonadBaseControl IO)\n</code></pre>\n\n<p>In general, the three relevant extensions for user-defined classes are <code>GeneralizedNewtypeDeriving</code>, <code>DerivingVia</code>, and <code>DeriveAnyType</code>. And it's also worth enabling <code>DerivingStrategies</code> to make it explicit which is being used.</p>\n"}], "owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 256, "favorite_count": 0, "accepted_answer_id": 56868616, "answer_count": 1, "score": 1, "last_activity_date": 1562151581, "creation_date": 1562133544, "last_edit_date": 1562137369, "question_id": 56863771, "link": "https://stackoverflow.com/questions/56863771/is-it-safe-to-derive-monadthrow-monadcatch-monadbasecontrol-monadunliftio-et", "title": "Is it safe to derive MonadThrow, MonadCatch, MonadBaseControl, MonadUnliftIO, etc?", "body": "<p>I'm refactoring some old code, which is in a polymorphic, but type-class constrained, monad:</p>\n\n<pre><code>class ( MonadIO m\n      , MonadLogger m\n      , MonadLoggerIO m\n      , MonadThrow m\n      , MonadCatch m\n      , MonadMask m\n      , MonadBaseControl IO m\n      , MonadUnliftIO) =&gt; HasLogging m where\n</code></pre>\n\n<p>In the older code the application's main monad was...</p>\n\n<pre><code>type AppM = ReaderT Env IO\n</code></pre>\n\n<p>...which will now change to...</p>\n\n<pre><code>newtype AppM (features :: [FeatureFlag]) a = AppM (ReaderT Env IO a)\n  deriving (Functor, Applicative, Monad, MonadReader Env, MonadIO)\n</code></pre>\n\n<p>Given this context, is it safe to derive the following, automatically:</p>\n\n<ul>\n<li>MonadThrow</li>\n<li>MonadCatch</li>\n<li>MonadMask</li>\n<li>MonadBaseControl</li>\n<li>MonadUliftIO</li>\n</ul>\n\n<p>Without getting into GHC internals, what's the best way to develop intuition about what's actually happening when the compiler derives things automagically?</p>\n"}, {"tags": ["haskell", "type-families", "data-kinds"], "answers": [{"tags": [], "owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "is_accepted": false, "score": 0, "last_activity_date": 1562129250, "creation_date": 1562129250, "answer_id": 56863047, "question_id": 56862960, "link": "https://stackoverflow.com/questions/56862960/how-to-get-better-error-messages-with-type-families/56863047#56863047", "title": "How to get better error messages with type-families?", "body": "<p>Okay, I found a \"compromise\" solution, but I'm not completely happy with it. There <em>has</em> to be better / built-in way to deal with this.</p>\n\n<pre><code>data FeatureFlag = Feature1 | Feature2 | FeatureNotFound\n\ntype family Feature (f :: FeatureFlag) (fs :: [FeatureFlag]) where\n  Feature f '[] = 'FeatureNotFound\n  Feature f (f:fs) = f\n  Feature f (q:fs) = Feature f fs\n\ntype NeedFeature (f :: FeatureFlag) (fs :: [FeatureFlag]) = (Feature f fs ~ f)\n\nlockedFeatureAction :: (MonadIO (m fs), NeedFeature 'Feature1 fs) =&gt; m fs ()\nlockedFeatureaction = undefined\n</code></pre>\n\n<p>Now, if the types don't align, I get error messages that look like the following:</p>\n\n<pre><code>ghci&gt; checkFeatureFlagsAndRun (Proxy :: Proxy '[ 'Feature2]) lockedFeatureAction\n\n    \u2022 Couldn't match type \u2018'FeatureNotFound\u2019\n                     with \u2018'FeatureBookingEngine\u2019\n        arising from a use of \u2018lockedFeatureAction\u2019\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "is_accepted": false, "score": 7, "last_activity_date": 1562132486, "creation_date": 1562132486, "answer_id": 56863583, "question_id": 56862960, "link": "https://stackoverflow.com/questions/56862960/how-to-get-better-error-messages-with-type-families/56863583#56863583", "title": "How to get better error messages with type-families?", "body": "<p>Sure it's possible to provide better compile-time error message using custom type errors. I've described how to use them in my blog post:</p>\n\n<ul>\n<li><a href=\"https://chshersh.github.io/type-errors\" rel=\"noreferrer\">A story told by Type Errors</a></li>\n</ul>\n\n<p>However, in your case, you need to use some additional utilities because your approach is not typeclass-based. Specifically, you need to use <a href=\"https://hackage.haskell.org/package/type-errors\" rel=\"noreferrer\"><code>type-errors</code></a> package.</p>\n\n<p>Here is how custom error message looks like:</p>\n\n<pre><code>ghci&gt; checkFeatureFlagsAndRun (Proxy :: Proxy '[ 'Feature1]) lockedFeatureAction\n&lt;works as expected&gt;\n\nghci&gt; :t checkFeatureFlagsAndRun (Proxy :: Proxy '[ 'Feature2]) lockedFeatureAction\n\n    \u2022 Type-level list of features should contain feature: 'Feature1\n      But it doesn't:\n\n          '[ 'Feature2]\n\n    \u2022 In the second argument of \u2018checkFeatureFlagsAndRun\u2019, namely\n        \u2018lockedFeatureAction\u2019\n      In the expression:\n        checkFeatureFlagsAndRun\n          (Proxy :: Proxy '[ 'Feature2]) lockedFeatureAction\n</code></pre>\n\n<p>Below I provide complete code:</p>\n\n<pre><code>{-# LANGUAGE DataKinds            #-}\n{-# LANGUAGE GADTs                #-}\n{-# LANGUAGE PolyKinds            #-}\n{-# LANGUAGE ScopedTypeVariables  #-}\n{-# LANGUAGE TemplateHaskell      #-}\n{-# LANGUAGE TypeFamilies         #-}\n{-# LANGUAGE TypeOperators        #-}\n{-# LANGUAGE UndecidableInstances #-}\n\nmodule Feature where\n\nimport Control.Monad.IO.Class (MonadIO)\nimport Data.Kind (Constraint)\nimport Data.Proxy (Proxy)\nimport Data.Singletons.TH (SingI, genSingletons)\nimport Data.Type.Bool (If)\nimport Fcf (Stuck)\nimport GHC.TypeLits (ErrorMessage (..), TypeError)\nimport Type.Errors (DelayError, WhenStuck)\n\n\ndata FeatureFlag = Feature1 | Feature2 deriving (Eq, Show)\n$(genSingletons [''FeatureFlag])\n\ndata AppM (fs :: [FeatureFlag]) a\n\ntype family HasFeature (f :: FeatureFlag) (fs :: [FeatureFlag]) :: Constraint where\n    HasFeature f fs = WhenStuck (Elem f fs) (DelayError (NoFeature f fs))\n\ntype family Elem (x :: k) (xs :: [k]) :: Bool where\n    Elem _ '[]       = Stuck\n    Elem x (x ': xs) = 'True\n    Elem x (y ': xs) = Elem x xs\n\ntype NoFeature (f :: FeatureFlag) (fs :: [FeatureFlag]) =\n        'Text \"Type-level list of features should contain feature: \" ':&lt;&gt;: 'ShowType f\n  ':$$: 'Text \"But it doesn't:\"\n  ':$$: 'Text \"\"\n  ':$$: 'Text \"    \" ':&lt;&gt;: 'ShowType fs\n  ':$$: 'Text \"\"\n\nlockedFeatureAction :: (MonadIO (m fs), HasFeature 'Feature1 fs) =&gt; m fs ()\nlockedFeatureAction = undefined\n\ncheckFeatureFlagsAndRun :: forall (fs :: [FeatureFlag]) . (SingI fs) =&gt; Proxy fs -&gt; AppM fs () -&gt; IO ()\ncheckFeatureFlagsAndRun = undefined\n</code></pre>\n"}], "owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 151, "favorite_count": 0, "answer_count": 2, "score": 4, "last_activity_date": 1562132486, "creation_date": 1562128442, "question_id": 56862960, "link": "https://stackoverflow.com/questions/56862960/how-to-get-better-error-messages-with-type-families", "title": "How to get better error messages with type-families?", "body": "<p>I'm trying to build a statically-typed authorisation system and have the following working code-snippet:</p>\n\n<pre><code>{-# LANGUAGE DataKinds, ScopedTypeVariables, TypeFamilies #-}\n\nmodule Try where\n\nimport Data.Singletons.TH\n\ndata FeatureFlag = Feature1 | Feature2 deriving (Eq, Show)\n$(genSingletons [''FeatureFlag])\n\ntype family Feature (f :: FeatureFlag) (fs :: [FeatureFlag]) where\n  Feature f '[] = 'False\n  Feature f (f:fs) = 'True\n  Feature f (q:fs) = Feature f fs  \n\n\nlockedFeatureAction :: (MonadIO (m fs), Feature 'Feature1 fs ~ 'True) =&gt; m fs ()\nlockedFeatureaction = undefined\n\ncheckFeatureFlagsAndRun :: forall (fs :: [FeatureFlag]) . (SingI fs) =&gt; Proxy fs -&gt; AppM fs () -&gt; IO ()\ncheckFeatureFlagsAndRun = undefined\n</code></pre>\n\n<p>And this is how it gets used:</p>\n\n<pre><code>ghci&gt; checkFeatureFlagsAndRun (Proxy :: Proxy '[ 'Feature1]) lockedFeatureAction\n</code></pre>\n\n<p>All is good when the types and stars align. However, if the types don't align, the error message is a classic Sherlock Holmes \"whodunnit\":</p>\n\n<pre><code>ghci&gt; checkFeatureFlagsAndRun (Proxy :: Proxy '[ 'Feature2]) lockedFeatureAction\n\n&lt;interactive&gt;:462:32: error:\n    \u2022 Couldn't match type \u2018'False\u2019 with \u2018'True\u2019\n        arising from a use of \u2018lockedFeatureAction\u2019\n    \u2022 In the second argument of \u2018checkFeatureFlagsAndRun\u2019, namely \u2018lockedFeatureAction\u2019\n      In the expression: checkFeatureFlagsAndRun (Proxy :: Proxy '[ 'Feature2]) lockedFeatureAction\n      In an equation for \u2018it\u2019: it = checkFeatureFlagsAndRun (Proxy :: Proxy '[ 'Feature2]) lockedFeatureAction\n</code></pre>\n\n<p>I tried searching and stumbled upon <a href=\"https://kcsongor.github.io/report-stuck-families/\" rel=\"nofollow noreferrer\">https://kcsongor.github.io/report-stuck-families/</a>, which talks of <a href=\"https://www.stackage.org/haddock/lts-12.1/base-4.11.1.0/Control-Exception.html#t:TypeError\" rel=\"nofollow noreferrer\"><code>TypeError</code></a> I tried using it like this, but it didn't work:</p>\n\n<pre><code>type family Feature (f :: FeatureFlag) (fs :: [FeatureFlag]) where\n  Feature f '[] = TypeError \"Could not satisfy FeatureFlag conditions\"\n  Feature f (f:fs) = 'True\n  Feature f (q:fs) = Feature f fs\n\n--     \u2022 Expected kind \u2018ghc-prim-0.5.2.0:GHC.Types.Symbol -&gt; Bool\u2019,\n--         but \u2018TypeError\u2019 has kind \u2018*\u2019\n--     \u2022 In the type \u2018TypeError \"Could not satisfy FeatureFlag conditions\"\u2019\n--       In the type family declaration for \u2018Feature\u2019\n--    |\n-- 19 |   Feature f '[] = TypeError \"Could not satisfy FeatureFlag conditions\"\n--    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>What is the correct way to use <code>TypeError</code>? Alternatively, is there any other way to get better error messages?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1562099405, "post_id": 56859326, "comment_id": 100269254, "body": "Your description looks correct. For the last type, note that <code>Rand g Gene</code> is a monadic type, obtained by applying the monad <code>Rand g</code> to the type <code>Gene</code>. If you are not yet familiar with monads, it will be not easy to fully understand the consequences. Still, in English, a value of <code>Rand g Gene</code> is a description of a computation which is able to read and write a RNG state variable of type <code>g</code>, and produce a <code>Gene</code> value as a result. More succinctly, <code>mate</code> returns a <code>Gene</code>, but the result is random, so it&#39;s not a regular deterministic function.."}, {"owner": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1562099558, "post_id": 56859326, "comment_id": 100269313, "body": "Ah, the dreaded monad.... Everytime I&#39;ve tried to get stuck in to Haskell I hit this &quot;Monad&quot; wall, all the resources I&#39;ve read I get close to grasping the concept but it never seems to click :-("}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 3, "creation_date": 1562104289, "post_id": 56859326, "comment_id": 100270756, "body": "You don&#39;t actually need to know <i>anything</i> about Monads to understand the type signature. All you need to know is that <code>Rand</code> is a &quot;type constructor&quot; that takes 2 parameters to make a &quot;concrete&quot; type. Technically we say that <code>Rand</code> is a type whose &quot;kind&quot; is <code>* -&gt; * -&gt; *</code> (which you&#39;ll also see written as <code>Type -&gt; Type -&gt; Type</code>), which is completely analogous to a function having type <code>a -&gt; b -&gt; c</code> - it&#39;s a &quot;function of types&quot; which takes 2 types and produces another one. <code>Maybe</code> is a simple example which you probably know about already - this has kind <code>* -&gt; *</code> (it takes 1 type parameter)."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1562108848, "post_id": 56859326, "comment_id": 100271745, "body": "Read the constraint as &quot;<code>g</code> has to have an <i>instance</i> of the typeclass <code>RandomGen</code>&quot;."}], "answers": [{"comments": [{"owner": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "edited": false, "score": 0, "creation_date": 1562098987, "post_id": 56859520, "comment_id": 100269096, "body": "So does that mean the return type of this function is itself a function that takes a Rand and a g and returns a Gene? If so, would it not make more sense to declare the function like so:  <code>mate :: RandomGen g =&gt; Gene -&gt; Gene -&gt; (Rand -&gt; g -&gt; Gene)</code>"}, {"owner": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "edited": false, "score": 0, "creation_date": 1562099218, "post_id": 56859520, "comment_id": 100269197, "body": "Or is a <code>kind</code> a higher order abstraction than <code>type</code>? In the normal vernacular a kind is a synonym of a type no? Like a spoon is a kind of cutlery but a spoon is also a type of cutlery no?"}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 4, "creation_date": 1562099292, "post_id": 56859520, "comment_id": 100269216, "body": "Have you worked with <code>Maybe</code> yet? <code>Maybe</code> is a type constructor, so <code>Maybe Int</code> is a valid type, but so is <code>Maybe String</code>. <code>Rand</code> is the same thing; it&#39;s just taking two parameters instead of the one <code>Maybe</code> takes."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "edited": false, "score": 1, "creation_date": 1562099565, "post_id": 56859520, "comment_id": 100269318, "body": "@ThomasCook It&#39;s more like <code>mate :: RandomGen g =&gt; Gene -&gt; Gene -&gt; (g -&gt; (g, Gene))</code>, up to some <code>newtype</code> wrappers. I.e. take the old RNG seed <code>g</code>, and output the next seed along with the <code>Gene</code> result. Perhaps this is not the easiest monad to understand as the first one."}, {"owner": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "edited": false, "score": 1, "creation_date": 1562099680, "post_id": 56859520, "comment_id": 100269365, "body": "In Haskell, value-level things have types, and type-level things have kinds. (They have English synonyms because they&#39;re very analogous concepts.) So if you&#39;re wondering what variety of beast <code>42</code>, a value, is, you would answer that it is a value of type <code>Int</code>. And if you&#39;re wondering what variety of beast <code>Int</code>, a type, is, you would answer that it is a type of kind <code>*</code>."}, {"owner": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "edited": false, "score": 0, "creation_date": 1562099687, "post_id": 56859520, "comment_id": 100269368, "body": "Hmm, well actually (g -&gt; (g, Gene)) makes a hell of a lot more sense than Rand g Gene  to me, so if that&#39;s a legitimate way to think of it I&#39;ll build my understanding of the Monad from that.  On that point, isn&#39;t a Monad a concept you understand once and it applies to all Monads? Or is a Monad a term for something that has several different meanings depending on context?"}, {"owner": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "edited": false, "score": 0, "creation_date": 1562099736, "post_id": 56859520, "comment_id": 100269383, "body": "So, @user11228628 - is it helpful to think of kinds as a higher order of types?"}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 3, "creation_date": 1562099793, "post_id": 56859520, "comment_id": 100269405, "body": "You understand monads once in the same way you understand objects once. Once you know what an object is (in, say, Java), it&#39;s way easier to program with them, but each individual object still has its own quirks you need to learn. Likewise, once you grok monads, they start to come naturally, but each type of monad still has its own idiosyncrasies."}, {"owner": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "edited": false, "score": 0, "creation_date": 1562099958, "post_id": 56859520, "comment_id": 100269467, "body": "Yea I need to just smash through this brick wall that is my mental block on understanding this. Can someone re-affirm me that it&#39;s worth the mental effort to do so?"}, {"owner": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "edited": false, "score": 0, "creation_date": 1562099984, "post_id": 56859520, "comment_id": 100269478, "body": "Haha I know, pathetic, it&#39;s just been bugging me that I don&#39;t understand monads for so long now."}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 3, "creation_date": 1562100244, "post_id": 56859520, "comment_id": 100269575, "body": "It is absolutely worth it. I started learning Haskell five years ago and I still wouldn&#39;t necessarily call myself an expert. I didn&#39;t have a firm understanding of monads until at least a year into learning. You&#39;re not behind the curve; this is normal, and once you get it it will improve your programming so much, not just in Haskell but in every language."}, {"owner": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "edited": false, "score": 0, "creation_date": 1562100644, "post_id": 56859520, "comment_id": 100269706, "body": "I use RX every day at work and as I understand it that also has Monads, so I&#39;m used to using flatMap, map, switchMap, merge, zip and other such operators in RX (Java) - do you think there is anyway I can conceptualize Monads based on my RX Java experience?"}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 1, "creation_date": 1562100843, "post_id": 56859520, "comment_id": 100269775, "body": "Loosely, <code>map</code> corresponds to Haskell&#39;s <code>fmap</code> and <code>flatMap</code> should correspond to the monadic bind <code>&gt;&gt;=</code>. Can&#39;t speak for the others, as I haven&#39;t used RX (<code>flatMap</code> is a name in Scala so I&#39;m assuming it does the same thing in RX). That said, learning to leverage do-notation is something that doesn&#39;t really have an equivalent in other languages. It&#39;s just syntax sugar, but it&#39;s very handy. However, that is something that can come later, as the priority is understanding how to use monads, not how to look pretty using them."}, {"owner": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "edited": false, "score": 3, "creation_date": 1562100907, "post_id": 56859520, "comment_id": 100269796, "body": "You&#39;ll be able to use RX observables as an <i>example</i> of a monad. And having some familiarity with <code>map</code> and <code>flatMap</code> in particular will be useful in understanding  how the generalizations of those functions work in other monads. But I think Silvio&#39;s analogy was spot on: the concept <i>monad</i> is like the concept <i>class</i> \u2014examples are everywhere, and understanding what the concept is may require building intuition from a lot of specific examples."}, {"owner": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "edited": false, "score": 0, "creation_date": 1562101132, "post_id": 56859520, "comment_id": 100269869, "body": "Thanks peeps, I&#39;ll keep chipping away at it till it makes sense :-)"}, {"owner": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "edited": false, "score": 0, "creation_date": 1562104633, "post_id": 56859520, "comment_id": 100270841, "body": "I&#39;ve now opened this question to try and understand how types relate to kinds:  <a href=\"https://cs.stackexchange.com/questions/111430/whats-the-difference-between-a-type-and-a-kind\" title=\"whats the difference between a type and a kind\">cs.stackexchange.com/questions/111430/&hellip;</a>"}], "tags": [], "owner": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "is_accepted": true, "score": 5, "last_activity_date": 1562099814, "last_edit_date": 1562099814, "creation_date": 1562098706, "answer_id": 56859520, "question_id": 56859326, "link": "https://stackoverflow.com/questions/56859326/haskell-function-signature-confusion/56859520#56859520", "title": "Haskell function signature confusion", "body": "<p>If you defined yourself a data type like</p>\n\n<pre><code>data MyType = A Int String\n</code></pre>\n\n<p>then <code>A</code>, your data constructor, would effectively be a function with type</p>\n\n<pre><code>A :: Int -&gt; String -&gt; MyType\n</code></pre>\n\n<p>and you'd call it like this to produce a value of <code>MyType</code>.</p>\n\n<pre><code>A 42 \"hello\"\n</code></pre>\n\n<p>So that's data constructors.</p>\n\n<p>Haskell also has type constructors. <code>Rand</code> is one. Just like function values have function types that define how they can be applied, type constructors have \"function\" <em>kinds</em> that determine how they can be applied. The kind of a regular old type like <code>Int</code> or <code>String</code> is spelled <code>*</code>. The kind of <code>Rand</code>, which is a type constructor, is <code>* -&gt; * -&gt; *</code>: it takes two types and produces a type from those.</p>\n\n<p>So when you apply <code>Rand</code> to types <code>g</code> and <code>Gene</code>, you get the return type of your function, which is <code>Rand g Gene</code>.</p>\n\n<p>For more, see <a href=\"http://learnyouahaskell.com/making-our-own-types-and-typeclasses#type-parameters\" rel=\"nofollow noreferrer\">this chapter of Learn You A Haskell</a>.</p>\n\n<p>(\"Okay, but... what is a <code>Rand g Gene</code>?\", I hear you ask. Well, assuming you mean <a href=\"https://hackage.haskell.org/package/MonadRandom-0.5.1.1/docs/Control-Monad-Random-Lazy.html#t:Rand\" rel=\"nofollow noreferrer\">this <code>Rand</code></a>, <code>Rand g Gene</code> is a value that represents a computation that would produce a <code>Gene</code> if you run it in something that is capable of running <code>Rand g</code> things, such as <a href=\"https://hackage.haskell.org/package/MonadRandom-0.5.1.1/docs/Control-Monad-Random-Lazy.html#v:runRand\" rel=\"nofollow noreferrer\"><code>runRand</code></a>. Now, that's not the only thing you can do with a <code>Rand g Gene</code>, because it so happens <code>Rand g</code> is a... <em>dun dun dun</em>... monad! For a lot more on that concept, you really should read something like <a href=\"http://learnyouahaskell.com/a-fistful-of-monads\" rel=\"nofollow noreferrer\">LYAH</a>... there are a lot of preliminaries to get through to explain it in full to a newbie.)</p>\n"}], "owner": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 194, "favorite_count": 0, "accepted_answer_id": 56859520, "answer_count": 1, "score": 6, "last_activity_date": 1562099814, "creation_date": 1562097733, "question_id": 56859326, "link": "https://stackoverflow.com/questions/56859326/haskell-function-signature-confusion", "title": "Haskell function signature confusion", "body": "<p>I'm trying to learn Haskell, but I'm stumped on something. So far, I've come to understand that functions signatures conform to this convention:</p>\n\n<pre><code>&lt;name&gt; :: &lt;type constraint A&gt; =&gt; &lt;input type A&gt; -&gt; &lt;input type B&gt; -&gt; .. &lt;input type X&gt; -&gt; &lt;return type&gt;\n</code></pre>\n\n<p>So, some examples with my current understanding are:</p>\n\n<pre><code>-- Returns input + 2\nadd2 :: Int -&gt; Int\nadd2 x = x + 2\n\n-- Returns the result of applying a function that takes an int and returns an int on an input int\nadds2 :: (Int -&gt; Int) -&gt; Int -&gt; Int\nadds2 func x = func x\n\n-- Returns a String with \"Hello\" prepended to the front\nsayHello :: String -&gt; String\nsayHello name = \"Hello \" ++ name\n</code></pre>\n\n<p>Then I came across this which is what stumped me:</p>\n\n<pre><code>mate :: RandomGen g =&gt; Gene -&gt; Gene -&gt; Rand g Gene\n</code></pre>\n\n<p>I understand that the functions name is <code>mate</code>, and it has a type constraint where the <code>g</code> must be of type <code>RandomGen</code>, it then takes as input two values of type <code>Gene</code>.</p>\n\n<p>However, it is the return type that is really confusing me. How do you interpret this and could anyone explain it to a novice Haskeller?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1562078369, "post_id": 56854859, "comment_id": 100259837, "body": "How exactly do you <i>use</i> <code>(%:)</code>?"}, {"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1562078412, "post_id": 56854859, "comment_id": 100259867, "body": "I tried <code>[&quot;Name1&quot; %: var1, &quot;Name2&quot; %: var2]</code>"}, {"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1562078475, "post_id": 56854859, "comment_id": 100259915, "body": "But I get this error in <code>data KV = ...</code> definition, not in the place where I use it"}, {"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1562078586, "post_id": 56854859, "comment_id": 100259985, "body": "I am using <code>Data.Aeson</code>, is it possible that it exports such functions/terms? I never met them before.."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 1, "creation_date": 1562079609, "post_id": 56854859, "comment_id": 100260623, "body": "Related question: <a href=\"https://stackoverflow.com/questions/30039123/haskell-why-arent-infix-type-constructors-allowed\" title=\"haskell why arent infix type constructors allowed\">stackoverflow.com/questions/30039123/&hellip;</a>"}, {"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1562079732, "post_id": 56854859, "comment_id": 100260678, "body": "@AJFarmar  Ooh, this - &quot;The caveat is that data constructors (not type constructors) must start with a colon:&quot;. Seems this is the reason"}], "answers": [{"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1562081022, "post_id": 56855302, "comment_id": 100261453, "body": "I memorize this as &quot;<code>:</code> counts as an uppercase character&quot;."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1562092941, "post_id": 56855302, "comment_id": 100266780, "body": "I just remember that the non-empty list constructor <code>:</code> is the simplest/shortest constructor name starting with <code>:</code>."}], "tags": [], "owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "is_accepted": true, "score": 5, "last_activity_date": 1562079738, "creation_date": 1562079738, "answer_id": 56855302, "question_id": 56854859, "link": "https://stackoverflow.com/questions/56854859/what-is-the-reason-of-error-not-a-data-constructor/56855302#56855302", "title": "What is the reason of error &quot;Not a data constructor&quot;?", "body": "<p>It's not a valid name for a data constructor. All infix operator data constructors must start with <code>:</code>. So <code>(:%)</code> would be fine.</p>\n\n<p>This is just the operator equivalent of \"constructors must start with capital letters\", as a syntactic means to distinguish constructors from other names when pattern matching. </p>\n"}], "owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 0, "accepted_answer_id": 56855302, "answer_count": 1, "score": 0, "last_activity_date": 1562079738, "creation_date": 1562078255, "question_id": 56854859, "link": "https://stackoverflow.com/questions/56854859/what-is-the-reason-of-error-not-a-data-constructor", "title": "What is the reason of error &quot;Not a data constructor&quot;?", "body": "<p>I have got an error: <code>Not a data constructor: \"%:\"</code>:</p>\n\n<pre><code>data KV = forall a. Show a =&gt; (%:) Text a\n</code></pre>\n\n<p>Interestingly, but <code>:%</code> is fine as data constructor! <code>%%</code> is not fine again. But <code>%%</code> is fine to be infix function. Why is it treating as an error? What is the difference between these variants?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "edited": false, "score": 0, "creation_date": 1562080453, "post_id": 56854698, "comment_id": 100261116, "body": "as many have mention in the answers, the typical approach would be to use <code>zipWith crossover</code> The only thing that isn&#39;t clear is which selection schema you use when using <code>selectFrom</code> function. For example: can <code>selectFrom</code> repeat mum/dad in different iterations?"}, {"owner": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "reply_to_user": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "edited": false, "score": 0, "creation_date": 1562080613, "post_id": 56854698, "comment_id": 100261214, "body": "@ismor - yea the selected elements wouldn&#39;t be removed from the original list (I&#39;m not too concerned about the end algorithm being perfect or optimal, I just find implementing GA&#39;s quite a nice &quot;hello world&quot; when learning a new language as it touches on multiple language constructs and you end up needing to do a bit of a deep dive on the language)."}], "answers": [{"comments": [{"owner": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "edited": false, "score": 0, "creation_date": 1562078960, "post_id": 56854977, "comment_id": 100260226, "body": "What about this solution:  <code>crossoverPop :: [String] -&gt; [String] -&gt; [String] crossoverPop pop newPop   | length newPop &lt; length pop = newPop ++ [crossover mum dad]   | otherwise = newPop   where     mum = select pop     dad = select pop     select = selectFrom pop</code>"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "edited": false, "score": 0, "creation_date": 1562079262, "post_id": 56854977, "comment_id": 100260407, "body": "Not a good solution. Repeated checking of a <code>length</code> is awkward (and actually really inefficient, if you&#39;re using linked lists). There&#39;s no reason to explicitly have the partially-built <code>newPop</code> around, just build it up as the result as you go. Yes, this can also be done with recursion instead of a standard looping construct, but why bother? (Also, <code>select</code> is not going to be possible as a pure function, this must be a monadic action \u2013 preferrably in a dedicated random monad, but IO will also do.)"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "edited": false, "score": 0, "creation_date": 1562079642, "post_id": 56854977, "comment_id": 100260638, "body": "Or go with Carl&#39;s zipping suggestion, that&#39;s perhaps even nicer."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 1, "last_activity_date": 1562079797, "last_edit_date": 1562079797, "creation_date": 1562078630, "answer_id": 56854977, "question_id": 56854698, "link": "https://stackoverflow.com/questions/56854698/given-a-list-of-a-select-2-elements-from-the-list-combine-them-and-add-them-to/56854977#56854977", "title": "Given a list of a, select 2 elements from the list, combine them and add them to new list. Repeat until new list is the same size as input list", "body": "<p>First off, you <em>can</em> do it imperatively in Haskell, it's just horrible (like it is in other languages). Would look something like</p>\n\n<pre><code>import Data.IORef\nimport Control.Monad.Loops (whileM)\n\n  do\n    newPopulation &lt;- newIORef []\n    whileM_ (((&lt;length inputPopulation).length&lt;$&gt;readIORef newPopulation) $ do\n      mum &lt;- selectFrom inputPopulation\n      dad &lt;- selectFrom inputPopulation\n      let child = crossover mum dad\n      modifyIORef (child:) newPopulation\n    readIORef newPopulation\n</code></pre>\n\n<p>There's much awkward in here:</p>\n\n<ul>\n<li>The <code>while</code> loop is far too general. You know upfront how many iterations it will be, so no need to query the <code>newPopulation</code> length over and over for the stop condition!</li>\n<li>In each iteration you add exactly one element to the result. Well, of course there are dedicated control structures for that, no need to do it manually with dangerous mutable updates.</li>\n</ul>\n\n<p>So,</p>\n\n<pre><code>import Control.Monad (replicateM)\n\n  do\n    replicateM (length inputPopulation) $ do\n       mum &lt;- selectFrom inputPopulation\n       dad &lt;- selectFrom inputPopulation\n       let child = crossover mum dad\n       return child\n</code></pre>\n\n<p>or shorter</p>\n\n<pre><code>    replicateM (length inputPopulation) $ crossover\n       &lt;$&gt; selectFrom inputPopulation&lt;*&gt;selectFrom inputPopulation\n</code></pre>\n\n<p>Alternatively, you can create two lists of mums and dads and then just zip them together as point-wise crossover:</p>\n\n<pre><code>  do\n    let n = length inputPopulation\n    [mums,dads] &lt;- replicateM 2 . replicateM n $ selectFrom inputPopulation\n    return $ zipWith crossover mums dads\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1562088262, "post_id": 56855083, "comment_id": 100264820, "body": "There are good libraries that make sampling relatively painless. See my answer for an example of a particularly lightweight one (at least, lightweight in programmer resources; since sampling is unlikely to be the hotspot in this algorithm, this feels like a good thing to optimize for to me)."}], "tags": [], "owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "is_accepted": false, "score": 2, "last_activity_date": 1562079068, "creation_date": 1562079068, "answer_id": 56855083, "question_id": 56854698, "link": "https://stackoverflow.com/questions/56854698/given-a-list-of-a-select-2-elements-from-the-list-combine-them-and-add-them-to/56855083#56855083", "title": "Given a list of a, select 2 elements from the list, combine them and add them to new list. Repeat until new list is the same size as input list", "body": "<p>This is a zip operation. Create two lists by sampling from the input n times each. Combine them with <code>zipWith crossover</code>.</p>\n\n<p>The input sampling is another challenge, and honestly quite a lot trickier, especially when considering performance. But you haven't provided nearly enough details to suggest a good approach there. </p>\n"}, {"tags": [], "owner": {"reputation": 2623, "user_id": 9271266, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-P2K9ibxquX4/AAAAAAAAAAI/AAAAAAAAABU/Jq4JVvo766Q/photo.jpg?sz=128", "display_name": "lsmor", "link": "https://stackoverflow.com/users/9271266/lsmor"}, "is_accepted": false, "score": 0, "last_activity_date": 1562083190, "creation_date": 1562083190, "answer_id": 56856256, "question_id": 56854698, "link": "https://stackoverflow.com/questions/56854698/given-a-list-of-a-select-2-elements-from-the-list-combine-them-and-add-them-to/56856256#56856256", "title": "Given a list of a, select 2 elements from the list, combine them and add them to new list. Repeat until new list is the same size as input list", "body": "<p>Here you have a sloppy implementation of what you asked. I don't have acces to <code>System.Random</code> module so the part of selecting random mums/dads is ommited but proposed as an untested code. As <code>crossover</code> I am using concatenation. Notice than using <code>!!</code> in list is not recommended due to performance issues when accesing linked lists by index. Try a different data structure if you wish</p>\n\n<pre><code>import Data.Monoid ((&lt;&gt;))\n\n{- you should use System.Random module in order to get random indices. \nThe function should look similar to this but I couldn't test it:\n\ngetRandomIndex :: RandomGen g =&gt; g -&gt; [a] -&gt; [Int]\ngetRandomIndex g l = take hi $ randomRs (0, hi) g\n  where hi = length l\n\nIn the main function use getStdGen to get a g to feed getRandomIndex \n-}\n\ndads = [\"dad0\",\"dad1\", \"dad2\", \"dad3\", \"dad4\", \"dad5\"]\nmums = [\"mum0\",\"mum1\", \"mum2\", \"mum3\", \"mum4\", \"mum5\"]\n\ndadIndex :: [Int]\ndadIndex = [1,4,2,3,2,0] -- let's imagine that this is the result of getRandomIndex g dads \nmumIndex :: [Int]\nmumIndex = [0,2,2,3,5,2] -- let's imagine that this is the result of getRandomIndex g mums \n\n-- crossover is simply string concatenation\ncrossover :: String -&gt; String -&gt; String\ncrossover a b = a &lt;&gt; b\n\nnewPopulation :: [String]\nnewPopulation = zipWith crossover randomMums randomDads\n  where randomMums = map (mums !!) mumIndex --\n        randomDads = map (dads !!) dadIndex\n\nmain = print newPopulation\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 1, "last_activity_date": 1562088327, "last_edit_date": 1562088327, "creation_date": 1562087605, "answer_id": 56857273, "question_id": 56854698, "link": "https://stackoverflow.com/questions/56854698/given-a-list-of-a-select-2-elements-from-the-list-combine-them-and-add-them-to/56857273#56857273", "title": "Given a list of a, select 2 elements from the list, combine them and add them to new list. Repeat until new list is the same size as input list", "body": "<p>If you want to construct a new organism for each existing one, you should loop over the existing ones. So, with this boilerplate stubbing out the things you verbally stubbed out in your question:</p>\n\n<pre><code>import Control.Applicative\nimport Control.Monad.Random\nimport Data.Traversable\n\ndata Organism\n\ncrossover :: Organism -&gt; Organism -&gt; Organism\ncrossover = undefined\n</code></pre>\n\n<p>The <code>Control.Monad.Random</code> module is provided by the <a href=\"http://hackage.haskell.org/package/MonadRandom\" rel=\"nofollow noreferrer\"><code>MonadRandom</code> package</a>. Then you can write this, and it compiles fine and has the right semantics:</p>\n\n<pre><code>breed :: MonadRandom m =&gt; [Organism] -&gt; m [Organism]\nbreed old = for old $ \\_ -&gt; liftA2 crossover (uniform old) (uniform old)\n</code></pre>\n\n<p>Nice and succinct, and I think even quite readable!</p>\n"}], "owner": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 73, "favorite_count": 0, "accepted_answer_id": 56854977, "answer_count": 4, "score": 1, "last_activity_date": 1562088327, "creation_date": 1562077622, "question_id": 56854698, "link": "https://stackoverflow.com/questions/56854698/given-a-list-of-a-select-2-elements-from-the-list-combine-them-and-add-them-to", "title": "Given a list of a, select 2 elements from the list, combine them and add them to new list. Repeat until new list is the same size as input list", "body": "<p>I'm continuing to learn some Haskell, at the moment I would like to implement a very simple and contrived genetic algorithm (something which I have done in several other languages). I am struggling with some most basic stuff right now though in Haskell as I can't stop thinking imperatively.</p>\n\n<p>So, as part of a genetic algorithm, you have a selection and crossover phase, where you select 2 members from the current population, cross them over to create a single member for a new population. You repeat this process until the size of the new population is equal to the size of the input population.</p>\n\n<p>In Kotlin, C#, Java etc the solution would/could look something like this:</p>\n\n<pre><code>val newPopulation = emptyList()\nwhile (newPopulation.size &lt; inputPopulation.size) {\n    val mum = selectFrom(inputPopulation)\n    val dad = selectFrom(inputPopulation)\n    val child = mum.crossover(dad)\n    newPopulation.add(child)\n}\nreturn newPopulation\n</code></pre>\n\n<p>However, in Haskell you need to think less imperatively and more in terms of declarations of mappings. This is where I am beginning to struggle. For instance, there is no \"simple\" way of declaring a new list and then doing a while (newList.size &lt; oldList.size) { // Do stuff }, so I am assuming I need to use a more functional approach to this (i.e. unfold/fold/zip etc). I just don't know what a solution would look like, could someone point me in the right direction?</p>\n"}, {"tags": ["haskell", "haskell-stack", "ghci"], "answers": [{"comments": [{"owner": {"reputation": 2966, "user_id": 3014199, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/72332b0ac6ee78bc829c378c6c747e0e?s=128&d=identicon&r=PG", "display_name": "peer", "link": "https://stackoverflow.com/users/3014199/peer"}, "edited": false, "score": 0, "creation_date": 1562078795, "post_id": 56854647, "comment_id": 100260120, "body": "I just tried your code (<code>stack ghc script3.hs</code>) and I get <code>Ambiguous module name \u2018Data.Matrix\u2019:       it was found in multiple packages: matrices-0.4.5 matrix-0.3.6.1</code>"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 2966, "user_id": 3014199, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/72332b0ac6ee78bc829c378c6c747e0e?s=128&d=identicon&r=PG", "display_name": "peer", "link": "https://stackoverflow.com/users/3014199/peer"}, "edited": false, "score": 0, "creation_date": 1562079004, "post_id": 56854647, "comment_id": 100260254, "body": "Don&#39;t <code>stack ghc</code> it, that&#39;ll skip the resolver line in the file. Just execute the script itself."}, {"owner": {"reputation": 2966, "user_id": 3014199, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/72332b0ac6ee78bc829c378c6c747e0e?s=128&d=identicon&r=PG", "display_name": "peer", "link": "https://stackoverflow.com/users/3014199/peer"}, "edited": false, "score": 0, "creation_date": 1562082315, "post_id": 56854647, "comment_id": 100262216, "body": "This works! And <code>stack exec --resolver lts-12.5  --package matrix -- ghci</code> works for playing around. Thanks!"}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 2, "last_activity_date": 1562083117, "last_edit_date": 1562083117, "creation_date": 1562077421, "answer_id": 56854647, "question_id": 56854325, "link": "https://stackoverflow.com/questions/56854325/thinning-and-renaming-packages-for-ghci-and-scripting/56854647#56854647", "title": "Thinning and renaming packages for ghci and scripting", "body": "<p>Everything you find in <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/\" rel=\"nofollow noreferrer\">the GHC manual</a> concerns either options directly to <em>the GHC compiler</em>, or in the Haskell code itself. But you're using Stack for package management, which is an entirely different beast. (Sure enough it <em>invokes</em> GHC, but it does way more than that.)</p>\n\n<p>When using Stack, there's no reason to dabble with PackageImports (unless you really need to import two modules together of the same name from different packages!). By default, Stack hides every package that isn't explicitly a dependency, so no need to rename anything; just use normal Stack options for specifying the packages, and simple imports in the actual Haskell:</p>\n\n<pre><code>#!/usr/bin/env stack\n-- stack --resolver lts-12.5 runghc --package matrix\n\nimport Data.Matrix as M\n\nmain = putStrLn . prettyMatrix\n                $ M.fromList 1 1 [1]\n</code></pre>\n\n<p>Make sure <code>stack</code> actually uses the resolver line, i.e. either</p>\n\n<pre><code>$ chmod +x matrixtest.hs\n$ ./matrixtest\n</code></pre>\n\n<p>or</p>\n\n<pre><code>$ stack matrixtest.hs\n</code></pre>\n\n<p>but not <code>stack ghc matrixtest.hs</code> or something like that.</p>\n"}], "owner": {"reputation": 2966, "user_id": 3014199, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/72332b0ac6ee78bc829c378c6c747e0e?s=128&d=identicon&r=PG", "display_name": "peer", "link": "https://stackoverflow.com/users/3014199/peer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 57, "favorite_count": 0, "accepted_answer_id": 56854647, "answer_count": 1, "score": 1, "last_activity_date": 1562083117, "creation_date": 1562076375, "question_id": 56854325, "link": "https://stackoverflow.com/questions/56854325/thinning-and-renaming-packages-for-ghci-and-scripting", "title": "Thinning and renaming packages for ghci and scripting", "body": "<p>For scripting and playing around in ghci I want to import <code>Data.Matrix</code> from the package <code>matrix</code>.\nBase already contains <code>Data.Matrix</code> but from another package: <code>matrices</code>.</p>\n\n<p>I've been able to work around this successfully with PackageImports:\nFor ghci I do:</p>\n\n<pre><code>$ stack exec --resolver lts-12.5 --package \"matrix\" -- ghci\nPrelude&gt; :set -XPackageImports\nPrelude&gt; import \"matrix\" Data.Matrix\n</code></pre>\n\n<p>and for scripts:</p>\n\n<pre><code>#!/usr/bin/env stack\n-- stack --package matrix\n\n{-# LANGUAGE PackageImports #-}\n\nimport \"matrix\" Data.Matrix\n\nmain = putStrLn $ Data.Matrix.prettyMatrix \n                $ Data.Matrix.fromList 1 1 [1]\n</code></pre>\n\n<p>executed with <code>stack ghc script.hs; ./script.hs</code></p>\n\n<p>But the <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#extension-PackageImports\" rel=\"nofollow noreferrer\">documentation</a> says \"You probably don\u2019t need to use this ... See also 'Thinning and renaming modules' for an alternative way ...\"</p>\n\n<p><a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/packages.html#package-thinning-and-renaming\" rel=\"nofollow noreferrer\">There</a>, it is suggested to use e.g. <code>-package \"base (Data.Bool as Bool)\"</code> so I wanted to try that and figured for my case it would be either something like </p>\n\n<ul>\n<li><p><code>-package \"base (Data.Matrix as Mx)\"</code> to rename the existing which I want to ignore, or</p></li>\n<li><p><code>-package \"matrix (Data.Matrix as Mx)\"</code> to add a custom name for the module that I want. </p></li>\n</ul>\n\n<p>But I can't even make the example work:</p>\n\n<pre><code>stack exec -package \"base (Data.Bool as Bool)\" -- ghci\nInvalid option `-package'\n\nDid you mean this?\n    --package\n...\n\nstack exec --package \"base (Data.Bool as Bool)\" -- ghci\nThe following errors occurred while parsing the build targets:\n- Directory not found: (Data.Bool\n- Directory not found: Bool)\n\nstack exec -package base (Data.Bool as Bool) -- ghci\nbash: syntax error near unexpected token `('\n</code></pre>\n\n<p>For scripting</p>\n\n<pre><code>#!/usr/bin/env stack\n(I've tried each of those separately)\n-- stack  -package \"base (Data.Bool as Bool)\" \n-- stack  -package  base (Data.Bool as Bool)\n-- stack --package \"base (Data.Bool as Bool)\"\n-- stack --package  base (Data.Bool as Bool)\n\nimport Bool\n\nmain = putStrLn $ show True\n</code></pre>\n\n<p>doesn't compile (<code>stack ghc script2.hs</code>)</p>\n\n<pre><code>[1 of 1] Compiling Main             ( script2.hs, script2.o )\n\nscript2.hs:4:1: error:\n    Could not find module \u2018Bool\u2019\n    Use -v to see a list of the files searched for.\n  |\n4 | import Bool\n  | ^^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1562073468, "post_id": 56853378, "comment_id": 100256789, "body": "You did not export the data constructors."}, {"owner": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1562073586, "post_id": 56853378, "comment_id": 100256848, "body": "I thought I did? I exported the ADT itself (i.e. Shape and Point). Do I need to export the actual data constructors (i.e. Rectangle, Circle, Point) instead? I&#39;ve just tried that now and got an error &quot;Not in scope: Type constructor or class Circle&quot;."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1562073633, "post_id": 56853378, "comment_id": 100256877, "body": "no, you only exported the type. Sometimes you do not want to export the constructors, for example to prevent people from calling these directly."}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "edited": false, "score": 1, "creation_date": 1562111451, "post_id": 56853378, "comment_id": 100272253, "body": "&quot;not in scope&quot; in the error message should tell you that this is nothing to do with floats or type inference. It means the compiler has no idea what <code>Circle</code> is (in this case, because you didn&#39;t export it, so it couldn&#39;t be imported), so it doesn&#39;t know what to do with <i>any</i> usage of <code>Circle</code>, correct arguments or not. So next time you see an error saying something is &quot;not in scope&quot;, look for typos in the name, problems with imports/exports, etc, not problems with types."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 6, "last_activity_date": 1562073574, "creation_date": 1562073574, "answer_id": 56853436, "question_id": 56853378, "link": "https://stackoverflow.com/questions/56853378/haskell-adt-declares-floats-but-adt-instance-definition-fails-to-compile-when-p/56853436#56853436", "title": "Haskell ADT declares floats, but ADT instance definition fails to compile when provided with floats", "body": "<p>You only made the <code>Lib</code> module export the <em>types</em>, not the corresponding data constructors, you can export these with:</p>\n\n<pre><code>module Lib(Point<b>(..)</b>, Shape<b>(..)</b>) where\n\n-- ...</code></pre>\n\n<p>or more verbose:</p>\n\n<pre><code>module Lib(Point<b>(Point)</b>, Shape<b>(Circle, Rectangle)</b>) where\n\n-- ...</code></pre>\n\n<p>Note that the above still will not work correctly since your <code>Circle</code> takes a <code>Point</code> and a <code>Float</code>. It thus should be:</p>\n\n<pre><code>    let circle = Circle <b>(Point</b> 0 0<b>)</b> 10</code></pre>\n"}], "owner": {"reputation": 2771, "user_id": 5963279, "user_type": "registered", "accept_rate": 73, "profile_image": "https://graph.facebook.com/10207102799463401/picture?type=large", "display_name": "Thomas Cook", "link": "https://stackoverflow.com/users/5963279/thomas-cook"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 42, "favorite_count": 0, "accepted_answer_id": 56853436, "answer_count": 1, "score": 1, "last_activity_date": 1562073574, "creation_date": 1562073381, "question_id": 56853378, "link": "https://stackoverflow.com/questions/56853378/haskell-adt-declares-floats-but-adt-instance-definition-fails-to-compile-when-p", "title": "Haskell ADT declares floats, but ADT instance definition fails to compile when provided with floats", "body": "<p>I've written this simple module which exposes the ADT's <code>Point</code> and <code>Shape</code>:</p>\n\n<pre><code>module Lib(Point, Shape) where\n\ndata Point = Point Float Float deriving (Show)\ndata Shape = Circle Point Float | Rectangle Point Point deriving (Show)\n</code></pre>\n\n<p>Then, I have written a main which defines an instance of <code>Circle</code>:</p>\n\n<pre><code>module Main where\n\nimport Lib\n\nmain :: IO ()\nmain = do\n  let circle = Circle 0.0 0.0 10.0\n  print \"\"\n</code></pre>\n\n<p>However, it fails to compile with the error message:</p>\n\n<pre><code>    Data constructor not in scope:\n      Circle :: Double -&gt; Double -&gt; Double -&gt; t\n  |\n7 |   let circle = Circle 0 0 10\n  |                ^^^^^^\n</code></pre>\n\n<p>From what I've read, I was under the impression that Haskell compiler would infer the type based on the ADT definition, for instance I should be able to write main like this and have it compile:</p>\n\n<pre><code>module Main where\n\nimport Lib\n\nmain :: IO ()\nmain = do\n  let circle = Circle 0 0 10\n  print \"\"\n</code></pre>\n\n<p>But then that fails with a similar message:</p>\n\n<pre><code>    Data constructor not in scope:\n      Circle :: Integer -&gt; Integer -&gt; Integer -&gt; t\n  |\n7 |   let circle = Circle 0 0 10\n  |                ^^^^^^\n</code></pre>\n\n<p>Is there anyone who can break this down for me so I can understand why it's not working?</p>\n"}, {"tags": ["haskell", "singleton", "data-kinds"], "answers": [{"comments": [{"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1562082660, "post_id": 56854371, "comment_id": 100262407, "body": "Also note that, with this corrected signature, you can just write <code>let permissions = fromSing (sing :: SList perms)</code> using <code>SList</code> from <code>Data.Singletons.Prelude.List</code>."}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1562084860, "post_id": 56854371, "comment_id": 100263462, "body": "Or even just <code>fromSing (sing :: Sing perms)</code>.  The point is that you don&#39;t need the separate proxy."}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1562126805, "post_id": 56854371, "comment_id": 100274708, "body": "What&#39;s the intuition for <code>SingI x</code> constraint? A type (or kind?) which has singletons defined for it?"}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1562126890, "post_id": 56854371, "comment_id": 100274723, "body": "Also, why does <code>sing :: Sing perms</code> work, but <code>sing @perms</code> doesn&#39;t? On the other hand, it seems to work in a code snippet that looks like <a href=\"https://gist.github.com/saurabhnanda/20df208f9dd89c1f21f931e42952d79a#gistcomment-2955388\" rel=\"nofollow noreferrer\">gist.github.com/saurabhnanda/&hellip;</a>"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1562148815, "post_id": 56854371, "comment_id": 100284359, "body": "A constraint is an implicit argument (with a coherence property: there are no two values of the same type that can be passed in this way). From that point of view, <code>SingI x</code> is a <code>Sing x</code> value (which you get access to via <code>sing</code>).   Try <code>sing @_ @perms</code>. <code>sing</code> is polykinded. i.e., <code>perms</code> could be any kind, and type applications makes that kind explicit as an argument (I believe there are proposals to change that quirk)."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 3, "last_activity_date": 1562076537, "creation_date": 1562076537, "answer_id": 56854371, "question_id": 56853093, "link": "https://stackoverflow.com/questions/56853093/unable-to-convert-type-level-list-back-to-value-level-using-singletons-library/56854371#56854371", "title": "Unable to convert type-level list back to value-level using singletons library", "body": "<p><code>perms</code> is not in scope in the body of <code>runAction</code>. It needs to be explicitly bound with <code>forall</code>. See the <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#lexically-scoped-type-variables\" rel=\"nofollow noreferrer\">doc on <code>ScopedTypeVariables</code></a>.</p>\n\n<p>Another problem is that to \"demote\" a value from types requires a <code>SingI</code> instance.</p>\n\n<p>The key intuition is that <code>forall</code> introduces run-time irrelevant variables: if <code>runAction :: forall p. ...</code> doesn't have any constraints, <code>runAction @p</code> cannot actually depend on the value of <code>p</code>, it must always do the same thing. Richard Eisenberg's thesis, <a href=\"https://cs.brynmawr.edu/~rae/papers/2016/thesis/eisenberg-thesis.pdf\" rel=\"nofollow noreferrer\"><em>Dependent types in Haskell: Theory and Practice</em></a>, has more details about this matter (Section 4.2).</p>\n\n<p>Thus the type of <code>runAction</code> should be something like this:</p>\n\n<pre><code>runAction :: forall perms. SingI perms =&gt; AppM perms () -&gt; IO ()\n</code></pre>\n"}], "owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 64, "favorite_count": 0, "accepted_answer_id": 56854371, "answer_count": 1, "score": 1, "last_activity_date": 1562076537, "creation_date": 1562072473, "question_id": 56853093, "link": "https://stackoverflow.com/questions/56853093/unable-to-convert-type-level-list-back-to-value-level-using-singletons-library", "title": "Unable to convert type-level list back to value-level using singletons library", "body": "<p>I'm trying to write s <em>reasonably</em> statically-checked authorisation system [1], and currently struggling with trying to write a function that will extract the required permissions from a type-level annotation/phantom to the value-level.</p>\n\n<pre><code>{-# LANGUAGE DataKinds, GADTs, ScopedTypeVariables #-}\n\nmodule Try5 where\n\nimport Control.Monad.Reader\nimport Data.Singletons\nimport Data.Singletons.TH\n\n\ndata Permission = PermA\n                | PermB\n                deriving (Eq, Show)\n$(genSingletons [''Permission])\n\ndata Env = Env\n\nnewtype AppM (perms :: [Permission]) a = AppM (ReaderT Env IO a) deriving (Functor, Applicative, Monad, MonadIO, MonadReader Env)\n\n-- other functions for constructing an action in `AppM perms`\n-- have been removed for brevity\n\nrunAction :: AppM (perms :: [Permission]) () -&gt; IO ()\nrunAction _ = do\n  let permissions :: [Permission] = fromSing $ singByProxy (Proxy :: Proxy (perms :: [Permission]))\n  putStrLn $ \"Huzzah, I freed the permissions from the type-level cage: \" &lt;&gt; (show permissions)\n  pure ()\n</code></pre>\n\n<h3>Error:</h3>\n\n<pre><code>    \u2022 Ambiguous type variable \u2018a0\u2019 arising from a use of \u2018singByProxy\u2019\n      prevents the constraint \u2018(SingI a0)\u2019 from being solved.\n      Probable fix: use a type annotation to specify what \u2018a0\u2019 should be.\n      These potential instances exist:\n        instance forall a (n1 :: a) (n2 :: [a]).\n                 (SingI n1, SingI n2) =&gt;\n                 SingI (n1 : n2)\n          -- Defined in \u2018singletons-2.4.1:Data.Singletons.Prelude.Instances\u2019\n        instance SingI '[]\n          -- Defined in \u2018singletons-2.4.1:Data.Singletons.Prelude.Instances\u2019\n    \u2022 In the second argument of \u2018($)\u2019, namely\n        \u2018singByProxy (Proxy :: Proxy (perms :: [Permission]))\u2019\n      In the expression:\n        fromSing $ singByProxy (Proxy :: Proxy (perms :: [Permission]))\n      In a pattern binding:\n        permissions :: [Permission]\n          = fromSing $ singByProxy (Proxy :: Proxy (perms :: [Permission]))\n   |\n24 |   let permissions :: [Permission] = fromSing $ singByProxy (Proxy :: Proxy (perms :: [Permission]))\n   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>[1] More context can be found at <a href=\"https://stackoverflow.com/a/56828016/534481\">https://stackoverflow.com/a/56828016/534481</a></p>\n"}, {"tags": ["haskell", "data-kinds"], "answers": [{"comments": [{"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1562071667, "post_id": 56852786, "comment_id": 100255674, "body": "So, <code>:k [&#39;True, &#39;False]</code> just <i>happens</i> to work because of some relaxed parsing rules?"}, {"owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "reply_to_user": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1562072148, "post_id": 56852786, "comment_id": 100255985, "body": "@SaurabhNanda: yes."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1562073279, "post_id": 56852786, "comment_id": 100256675, "body": "@SaurabhNanda Well... it&#39;s not just coincidence or something. The comma in <code>[&#39;True, &#39;False]</code> makes it clear that it&#39;s not the list type former but an actual list."}], "tags": [], "owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "is_accepted": true, "score": 4, "last_activity_date": 1562071403, "creation_date": 1562071403, "answer_id": 56852786, "question_id": 56852668, "link": "https://stackoverflow.com/questions/56852668/unable-to-create-a-type-level-list-with-a-single-element/56852786#56852786", "title": "Unable to create a type-level list with a single element", "body": "<p>You have to disambiguate list types from type level list types by the backtick:</p>\n\n<pre><code>&gt; :k '[ 'True]\n</code></pre>\n\n<p>Also note the space after <code>[</code>, which is needed to disambiguate from type-level character literals.</p>\n"}], "owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 41, "favorite_count": 0, "accepted_answer_id": 56852786, "answer_count": 1, "score": 2, "last_activity_date": 1562071403, "creation_date": 1562070993, "question_id": 56852668, "link": "https://stackoverflow.com/questions/56852668/unable-to-create-a-type-level-list-with-a-single-element", "title": "Unable to create a type-level list with a single element", "body": "<p>I'm scratching my head with the following behaviour. Is there an obvious reason why this is the case?</p>\n\n<pre><code>Prelude&gt; :set -XDataKinds\n\nPrelude&gt; :k 'True\n'True :: Bool\n\nPrelude&gt; :k ['True, 'False]\n['True, 'False] :: [Bool]\n\nPrelude&gt; :k ['True]\n\n&lt;interactive&gt;:1:2: error:\n    \u2022 Expected a type, but \u2018 'True\u2019 has kind \u2018Bool\u2019\n    \u2022 In the type \u2018[ 'True]\u2019\n</code></pre>\n\n<p>PS: I'm on GHC 8.4.3 if this is a GHC bug and was fixed later.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "edited": false, "score": 0, "creation_date": 1562070720, "post_id": 56852370, "comment_id": 100255020, "body": "another idea is to solve it on modules level but it looks very error prone"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1562074157, "post_id": 56852370, "comment_id": 100257231, "body": "I don&#39;t think there&#39;s anything better than a <code>newtype</code> here."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 4, "creation_date": 1562079547, "post_id": 56852370, "comment_id": 100260584, "body": "I think not using <code>ToJSON</code> is significantly better here. You&#39;re allowed to write functions to convert your type to <code>Value</code> without making them part of a class."}], "answers": [{"comments": [{"owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "edited": false, "score": 0, "creation_date": 1562140884, "post_id": 56857154, "comment_id": 100279925, "body": "Aha, I forgot about phantom types, this solution looks very good, because types becomes &quot;self-documented&quot;, when you see this <code>a</code> type param, you understand that this type has some &quot;variability&quot; (so, possible you should to pay attention to its ToJSON instances, they may be different)...."}, {"owner": {"reputation": 1290, "user_id": 5499871, "user_type": "registered", "profile_image": "https://graph.facebook.com/10206799318615183/picture?type=large", "display_name": "Izaak Weiss", "link": "https://stackoverflow.com/users/5499871/izaak-weiss"}, "reply_to_user": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "edited": false, "score": 0, "creation_date": 1562164308, "post_id": 56857154, "comment_id": 100293497, "body": "That being said, I do think that perhaps newtypes are the cleaner, more readable solution."}], "tags": [], "owner": {"reputation": 1290, "user_id": 5499871, "user_type": "registered", "profile_image": "https://graph.facebook.com/10206799318615183/picture?type=large", "display_name": "Izaak Weiss", "link": "https://stackoverflow.com/users/5499871/izaak-weiss"}, "is_accepted": true, "score": 2, "last_activity_date": 1562086978, "creation_date": 1562086978, "answer_id": 56857154, "question_id": 56852370, "link": "https://stackoverflow.com/questions/56852370/multiple-instances-per-type-how-to-do-it-better/56857154#56857154", "title": "Multiple instances per type: how to do it better?", "body": "<p>You have a few options. </p>\n\n<p>The simplest option is to eschew typeclasses and simply write functions. This has the benefit of simplicity. However, it makes it harder to write abstract functions. Consider the function <code>callEndpoint_ :: ToJSON a =&gt; a -&gt; Url -&gt; IO ()</code>. This function must be rewritten to have the type signature <code>callEndpoint_ :: (a -&gt; Value) -&gt; a -&gt; IO ()</code>, and you must manually pass the function around if you have a whole stack of these generic functions.</p>\n\n<p>Your solution is similar, in that you'd have to pass around a <code>Peer</code> value in order to call <code>asJson</code>; you might as well pass around the function.</p>\n\n<p>Newtypes solve most of these issues. You can write generic functions, and then just wrap your data in the newtype and pass that to the function and it will automatically call the right instance methods.</p>\n\n<p>Another solution would be to use Phantom Types. <a href=\"https://wiki.haskell.org/Phantom_type\" rel=\"nofollow noreferrer\">https://wiki.haskell.org/Phantom_type</a> covers the basics, but you would essentially write:</p>\n\n<pre><code>data MyData a = MyData Int String Float --'a' is NOT used in the right hand side.\n\ndata Peer = PeerA | PeerB\n\ninstance ToJSON (MyData PeerA) where \n    ...\ninstance ToJSON (MyData PeerB) where\n    ...\n</code></pre>\n\n<p>This will require enabling the <code>FlexibleInstances</code> extension (and probably also <code>FlexibleContexts</code>).</p>\n\n<p>You can also use <code>KindSignatures</code> and <code>DataKinds</code> to make this more strict; then you can write <code>data MyData (a :: Peer) = ...</code> and then the compiler will allow you to write the signature <code>MyData PeerA</code> but not the signature <code>MyData Int</code>.</p>\n"}], "owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 51, "favorite_count": 0, "accepted_answer_id": 56857154, "answer_count": 1, "score": 1, "last_activity_date": 1562086978, "creation_date": 1562070124, "question_id": 56852370, "link": "https://stackoverflow.com/questions/56852370/multiple-instances-per-type-how-to-do-it-better", "title": "Multiple instances per type: how to do it better?", "body": "<p>I have some data types for which I need <code>ToJSON</code> instances, but I need to send those objects to different pears which expects different representation. So, I need multiple (different) instances per data type. How to achieve this? I know only a way with <code>newtype</code> wrapping.</p>\n\n<p>Is there any way to use different instances of the same type in the same module / program for the same type without using <code>newtype</code>? Also I think about something like:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>data Peer = PeerA | PeerB | ...\n\nclass AsJSON peer a where\n  asJSON :: peer -&gt; a -&gt; Value\n</code></pre>\n\n<p>Such class <code>AsJSON</code> will replace <code>ToJSON</code>: I'll need to implement such instances but to use <code>AsJSON a =&gt;</code> of my own class constraint instead of standard <code>ToJSON a =&gt;</code> anywhere...</p>\n\n<p>So, what is the best (more preferable in your opinion) way to do it? How usually do you solve such task?</p>\n"}, {"tags": ["haskell", "stm"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1562066988, "post_id": 56851400, "comment_id": 100252958, "body": "Can you post the full traceback? (right now it is a bit hard to find out where the error is located)"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1562067081, "post_id": 56851400, "comment_id": 100253008, "body": "It looks that, due to your <code>{-hi-}</code>s, etc. you inlined the <code>atomically</code>."}], "answers": [{"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1562074401, "post_id": 56851521, "comment_id": 100257395, "body": "Wow. I never realized that comments can interfere with indentation, mostly because it&#39;s quite uncommon to see a comment before code on the same line."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 6, "last_activity_date": 1562067931, "last_edit_date": 1562067931, "creation_date": 1562067200, "answer_id": 56851521, "question_id": 56851400, "link": "https://stackoverflow.com/questions/56851400/software-transaction-memory-in-haskell-couldnt-match-expected-type-stm-a0-with/56851521#56851521", "title": "Software Transaction Memory in Haskell: Couldn&#39;t match expected type STM a0 with actual type IO ()", "body": "<p>The <code>{-hi-}</code> and <code>{-/hi-}</code> comment result in \"indenting\" the <code>automically</code>, so as a result, you wrote <code>hPutStr stdout \"Withdrawing...\" atomically (withdraw acc 10)</code>. For example if you write:</p>\n\n<pre><code>good :: Account -&gt; IO ()\ngood acc = do\n        hPutStr stdout \"Withdrawing...\"\n {-hi-} atomically (withdraw acc 10)</code></pre>\n\n<p>it works fine, since the \"noise\" (the <code>{-hi-}</code> comment) does not result in inlining the <code>atomically</code> function.</p>\n\n<p>The comment indeed has no effect semantically, but you can consider it replaced by whitespace.</p>\n"}], "owner": {"reputation": 1083, "user_id": 5272159, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/bee102cff2130800106cdd7d99db787e?s=128&d=identicon&r=PG&f=1", "display_name": "timothyylim", "link": "https://stackoverflow.com/users/5272159/timothyylim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 106, "favorite_count": 0, "accepted_answer_id": 56851521, "answer_count": 1, "score": 2, "last_activity_date": 1562067931, "creation_date": 1562066724, "question_id": 56851400, "link": "https://stackoverflow.com/questions/56851400/software-transaction-memory-in-haskell-couldnt-match-expected-type-stm-a0-with", "title": "Software Transaction Memory in Haskell: Couldn&#39;t match expected type STM a0 with actual type IO ()", "body": "<p>I have a small program that defines an account, a withdraw function and attempts to withdraw from it. However, it doesn't compile due and throws the following error:</p>\n\n<pre><code>Couldn't match expected type \u2018(STM a0 -&gt; IO a0)\n                                    -&gt; STM () -&gt; IO ()\u2019\n                  with actual type \u2018IO ()\u2019\n</code></pre>\n\n<p>It seems like the compiler doesn't recognise the conversion from STM to IO. Any pointers would be great. </p>\n\n<pre><code>import System.IO\nimport Control.Concurrent.STM\n\ntype Account = TVar Int\n\nwithdraw :: Account -&gt; Int -&gt; STM ()\nwithdraw acc amount = do\n    bal &lt;- readTVar acc    \n    writeTVar acc (bal - amount)\n\ngood :: Account -&gt; IO ()\ngood acc = do\n    hPutStr stdout \"Withdrawing...\"\n    {-hi-}atomically{-/hi-} (withdraw acc 10)\n\nmain = do\n    acc &lt;- atomically (newTVar 200)\n    good acc \n    hPutStr stdout \"\\nDone!\\n\"\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 2, "creation_date": 1562060118, "post_id": 56849254, "comment_id": 100249366, "body": "<i>XYZ has not ToJSON instance yet</i>  It doesn&#39;t matter. Constraints like <code>ToJSON a =&gt;</code> are not considered when checking for overlapping instances."}], "answers": [{"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 4, "last_activity_date": 1562061430, "last_edit_date": 1562061430, "creation_date": 1562060305, "answer_id": 56849489, "question_id": 56849254, "link": "https://stackoverflow.com/questions/56849254/what-is-the-reason-of-overlapping-instances-error/56849489#56849489", "title": "What is the reason of overlapping instances error?", "body": "<blockquote>\n  <p><code>XYZ</code> has not <code>ToJSON</code> instance yet</p>\n</blockquote>\n\n<p>you say it yourself \u2013 no instance <strong>yet</strong>. There is no way to be sure somebody doesn't add that instance later on. What's supposed to happen in this case? In particular, if one piece of code doesn't see the instance yet and therefore picks <code>instance ToJSON a =&gt; ToJSON [a]</code>, and another piece later on <em>has</em> the instance in scope, you'd get two possibly incompatible instances being in use simultaneously. Havoc.</p>\n\n<p>I reckon you probably want to express <code>instance ToJSON XYZ</code> should <em>never</em> be defined, but really Haskell has no notion of a type being <em>not</em> an instance of a class. The assumption is that every type is <em>potentially</em> an instance of every class \u2013 only perhaps it's not possible to <em>see</em> the instance yet.</p>\n\n<p>Ok, actually it <em>is</em> possible to disable an instance from being really defined \u2013 by defining it yourself, with an <a href=\"https://hackage.haskell.org/package/constraints-0.11/docs/Data-Constraint.html#t:Bottom\" rel=\"nofollow noreferrer\">unfulfillable superclass</a>:</p>\n\n<pre><code>instance Bottom =&gt; ToJSON XYZ where\n  toJSON = no\n</code></pre>\n\n<p>...which will cause a type error if you try to invoke <code>toJSON</code> for <code>XYZ</code> anywhere. But still, as far as the language is concerned this <em>is</em> an instance, it just happens to be a \u201cun-typecheckeable instance\u201d.</p>\n\n<p>So, the instances <em>are</em> overlapping, even if the overlap may not actually be something that could compile \u2013 but the instance resolution doesn't attempt to check that, i.e. to <em>try</em> compile it, that would get extremely inefficient quickly and in general lead to quite unpredictable program behaviour. (If you've ever worked with advanced C++ templates, you know what I mean.)</p>\n\n<p>Instead, instance lookup always just matches the <em>instance head</em>, i.e. <code>[a]</code> vs. <code>[XYZ]</code>. Which, now clearly, do overlap.</p>\n\n<p>The proper thing to do for your application is probably to make a</p>\n\n<pre><code>newtype XYZs = XYZs { getXYZs :: [XYZ] }\n\ninstance ToJSON XYZs where\n  ...\n</code></pre>\n\n<p>If you find that syntactically awkward, note you can use the <code>OverloadedLists</code> extension</p>\n\n<pre><code>import GHC.Exts (IsList(..))\n\ninstance IsList XYZs where\n  type Item XYZs = XYZ\n  fromList = XYZs\n  toList = getXYZs\n</code></pre>\n\n<p>and then</p>\n\n<pre><code>{-# LANGUAGE OverloadedLists #-}\ntest :: XYZs\ntest = [XYZ 1, XYZ 2]\n</code></pre>\n\n<p>is legal.</p>\n"}], "owner": {"reputation": 2196, "user_id": 1980863, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/8a9248211c4148f5d7df2269aa711e2e?s=128&d=identicon&r=PG", "display_name": "RandomB", "link": "https://stackoverflow.com/users/1980863/randomb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 40, "favorite_count": 0, "accepted_answer_id": 56849489, "answer_count": 1, "score": 2, "last_activity_date": 1562061430, "creation_date": 1562059492, "question_id": 56849254, "link": "https://stackoverflow.com/questions/56849254/what-is-the-reason-of-overlapping-instances-error", "title": "What is the reason of overlapping instances error?", "body": "<p>What is the reason of error \"Overlapping instances for ToJSON [XYZ]\" in this example:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>data XYZ = XYZ Int\ninstance ToJSON [XYZ] where\n  toJSON xs = ...\n</code></pre>\n\n<p>and GHC shows as overlapping instance this:</p>\n\n<pre><code>instance ToJSON a =&gt; ToJSON [a] ...\n</code></pre>\n\n<p>which is not a suitable case: <code>XYZ</code> has not <code>ToJSON</code> instance yet. I can fix it with <code>{-# OVERLAPS #-}</code> but I don't understand why GHC does not understand that <code>[a]</code> where <code>a</code> has not <code>ToJSON</code> needs explicit definition for <code>ToJSON</code>. What do I miss?</p>\n"}, {"tags": ["haskell", "syntax"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 4, "creation_date": 1562014707, "post_id": 56842374, "comment_id": 100236663, "body": "<code>printDirectory :: FilePath -&gt; IO [FilePath]</code> but you\u2019re taking no parameter and using <code>getCurrentDirectory</code> instead."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1562014916, "post_id": 56842374, "comment_id": 100236732, "body": "You forgot to use a parameter here."}, {"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 0, "creation_date": 1562016558, "post_id": 56842374, "comment_id": 100237171, "body": "Please format error messages as well. Thanks."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 1, "creation_date": 1562057612, "post_id": 56842374, "comment_id": 100248028, "body": "@RookyCoder Having a legible post <i>does</i> help you with your problem, by making it more likely that someone will answer your question."}], "answers": [{"comments": [{"owner": {"reputation": 161, "user_id": 4410486, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/4a6414ff18efcc92b87d678b64212339?s=128&d=identicon&r=PG&f=1", "display_name": "Rooky Coder", "link": "https://stackoverflow.com/users/4410486/rooky-coder"}, "edited": false, "score": 0, "creation_date": 1562038639, "post_id": 56844835, "comment_id": 100241222, "body": "Thank you so much for helping me understand why I was getting the errors and helping to fix them. I know the recursion was broken but with the errors I couldn&#39;t run the code to work on getting the recursion right. Thank you again for your help."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 6, "last_activity_date": 1562037221, "creation_date": 1562037221, "answer_id": 56844835, "question_id": 56842374, "link": "https://stackoverflow.com/questions/56842374/errors-when-running-program/56844835#56844835", "title": "Errors when running program", "body": "<p>Yes, GHC error message can be pretty baffling, but I'll try to talk you through this set.  The first error message is actually one of the hardest to understand, so let's skip to the second.  This one says that:</p>\n\n<blockquote>\n  <ul>\n  <li>when GHC was looking at the first argument to <code>(&lt;/&gt;)</code>, namely the expression <code>doesDirectoryExist fry</code></li>\n  <li>it <strong>EXPECTED</strong> to find a <code>FilePath</code> (because the <code>(&lt;/&gt;)</code> operator's first argument is obviously supposed to be a <code>FilePath</code>)</li>\n  <li>but instead it <strong>ACTUALLY</strong> found an <code>IO Bool</code></li>\n  </ul>\n</blockquote>\n\n<p>If you check the type of <code>doesDirectoryExist</code>, you can see that -- indeed -- it takes a <code>FilePath</code> and returns an <code>IO Bool</code>, so GHC is right, you cannot supply a <code>doesDirectoryExist fry</code> (which has type <code>IO Bool</code>) as some sort of <code>FilePath</code>.</p>\n\n<p>I'm not quite sure what paths you were trying to combine with <code>(&lt;/&gt;)</code>, but if we get rid of that operator entirely and reformat, the following looks more like what you intended:</p>\n\n<pre><code>printDirectory :: FilePath -&gt; IO [FilePath]\nprintDirectory = do\n    let filesInCurDir = getCurrentDirectory &gt;&gt;= getDirectoryContents\n    forM filesInCurDir $ \\fry -&gt; do\n      isDirectory &lt;- doesDirectoryExist fry\n      if isDirectory\n         then do printDirectory\n         else putStrLn fry\n      putStrLn \"Directory search completed\"\n    return\n</code></pre>\n\n<p>If you recompile with this version, the first error message has changed a bit, but it's still confusing.  However, the second error message has disappeared, so things are improving!!  The third error message (now actually the second error message) is the same as before.  It says that:</p>\n\n<blockquote>\n  <ul>\n  <li>when GHC was looking at the expression <code>fry</code> (the first argument to <code>doesDirectoryExist</code>)</li>\n  <li>it <strong>expected</strong> a <code>FilePath</code></li>\n  <li>but it <strong>actually</strong> found a <code>[FilePath]</code></li>\n  </ul>\n</blockquote>\n\n<p>This is strange!  We expected a <code>FilePath</code>, too, not a whole list of <code>FilePath</code>s.  That's what the <code>forM</code> was supposed to do.  What's happened here is that some other error, which isn't obvious, has caused GHC to mis-type <code>fry</code> as <code>[FilePath]</code> instead of <code>FilePath</code>.  To work around this, let's fake it by overriding <code>fry</code>s value with a <code>let</code> statement:</p>\n\n<pre><code>printDirectory :: FilePath -&gt; IO [FilePath]\nprintDirectory = do\n    let filesInCurDir = getCurrentDirectory &gt;&gt;= getDirectoryContents\n    forM filesInCurDir $ \\fry -&gt; do\n      let fry = \"__FAKEFILEPATH__\" -- DEBUGGING       -- &lt;&lt; CHANGE HERE\n      isDirectory &lt;- doesDirectoryExist fry\n      if isDirectory\n         then do printDirectory\n         else putStrLn fry\n      putStrLn \"Directory search completed\"\n    return\n</code></pre>\n\n<p>If we recompile, we're down to three errors.  The first error, stubborn as ever, is still confusing.  The second error message is a variant of the fifth message in the original list:</p>\n\n<blockquote>\n<pre><code>Directory.hs:13:18: error:\n      \u2022 Couldn't match expected type \u2018IO ()\u2019\n                    with actual type \u2018FilePath -&gt; IO [FilePath]\u2019\n      \u2022 Probable cause: \u2018printDirectory\u2019 is applied to too few arguments\n        In a stmt of a 'do' block: printDirectory\n        In the expression: do printDirectory\n</code></pre>\n</blockquote>\n\n<p>Here, GHC feels that the expression <code>do printDirectory</code> should have had type <code>IO ()</code> but instead had type <code>FilePath -&gt; IO [FilePath]</code>, and it helpfully suggests that you've called <code>printDirectory</code> with too few arguments (which is true, as <code>printDirectory</code> needs a file path).  Let's supply <code>fry</code> for now, even though we might need to do something different later to get the recursion right.</p>\n\n<pre><code>printDirectory :: FilePath -&gt; IO [FilePath]\nprintDirectory = do\n    let filesInCurDir = getCurrentDirectory &gt;&gt;= getDirectoryContents\n    forM filesInCurDir $ \\fry -&gt; do\n      let fry = \"__FAKEFILEPATH__\" -- DEBUGGING\n      isDirectory &lt;- doesDirectoryExist fry\n      if isDirectory\n         then do printDirectory fry -- FIXME      -- &lt;&lt; CHANGE HERE\n         else putStrLn fry\n      putStrLn \"Directory search completed\"\n    return\n</code></pre>\n\n<p>This doesn't really clear up the error, though.  Now, GHC tells us that:</p>\n\n<blockquote>\n<pre><code>Directory.hs:14:15: error:\n      \u2022 Couldn't match type \u2018()\u2019 with \u2018[FilePath]\u2019\n        Expected type: IO [FilePath]\n          Actual type: IO ()\n      \u2022 In the expression: putStrLn fry\n        In a stmt of a 'do' block:\n          if isDirectory then do printDirectory fry else putStrLn fry\n</code></pre>\n</blockquote>\n\n<p>Basically, in Haskell, the <code>then</code> and <code>else</code> branches of an <code>if</code> statement have to have the same type, but you're trying to return a list of files on one branch (because <code>printDirectory</code> returns type <code>IO [FilePath]</code>) but <em>print</em> a filename (which has type <code>IO ()</code>) on the other branch.</p>\n\n<p>I guess you have to decide here if you want to <em>print</em> files or <em>return</em> files.  You said in your question you wanted to <em>print</em> them, so I'm going to guess that your <code>printDirectory</code> signature is wrong.  If you're just printing, then that's an IO action that doesn't return anything (or at least not anything useful), so the signature ought to read:</p>\n\n<pre><code>printDirectory :: FilePath -&gt; IO ()\n</code></pre>\n\n<p>If you recompile, you'll get two errors.  The first is the same as before, the second is the same as the last error on your original list:</p>\n\n<blockquote>\n<pre><code>Directory.hs:15:5: error:\n      \u2022 Couldn't match expected type \u2018IO b0\u2019\n                    with actual type \u2018a0 -&gt; m0 a0\u2019\n      \u2022 Probable cause: \u2018return\u2019 is applied to too few arguments\n</code></pre>\n</blockquote>\n\n<p>The last line of your program seems to have a weird actual type.  Thankfully, GHC explains that you probably forget to supply an argument to <code>return</code>.  In fact, it's not clear what you were trying to return here (and when you posted your code, you seemed to have left it out, so maybe you already decided to delete this <code>return</code>).  Anyway, if we drop it, we're left with only one error:</p>\n\n<blockquote>\n<pre><code>Directory.hs:9:5: error:\n      \u2022 Couldn't match expected type \u2018FilePath -&gt; IO ()\u2019\n                    with actual type \u2018IO (IO ())\u2019\n      \u2022 In a stmt of a 'do' block:\n          forM filesInCurDir ...\n</code></pre>\n</blockquote>\n\n<p>Here, GHC has decided that the <code>forM ...</code> statement in your do-block should have had type <code>FilePath -&gt; IO ()</code>, but it actually had type <code>IO (IO b)</code>.</p>\n\n<p>This is confusing, but both the actual and expected type are wrong!  The <code>forM</code> statement should have been an IO action to print a bunch of filepaths, so it ought to have had type <code>IO ()</code>.</p>\n\n<p>Here's what's happened.  In Haskell, the type of a do-block is the type of its last statement, and GHC has somehow decided that the whole outer do-block should have type <code>FilePath -&gt; IO ()</code> which is why it expects the last statement to have that type.  Why does it think the outer do-block should have type <code>FilePath -&gt; IO ()</code> instead of <code>IO ()</code>?  Well, because you told it that <code>printDirectory</code> should have type <code>FilePath -&gt; IO ()</code> and then bound the do-block directly to <code>printDirectory</code> without giving <code>printDirectory</code> an argument.  You need to write <code>printDirectory dir = do ...</code>, like so:</p>\n\n<pre><code>printDirectory :: FilePath -&gt; IO ()\nprintDirectory dir = do                        -- &lt;&lt; CHANGE HERE\n    let filesInCurDir = getCurrentDirectory &gt;&gt;= getDirectoryContents\n    forM filesInCurDir $ \\fry -&gt; do\n      let fry = \"__FAKEFILEPATH__\" -- DEBUGGING\n      isDirectory &lt;- doesDirectoryExist fry\n      if isDirectory\n         then do printDirectory fry -- FIXME\n         else putStrLn fry\n      putStrLn \"Directory search completed\"\n</code></pre>\n\n<p>Now the error message reads:</p>\n\n<blockquote>\n<pre><code>Directory.hs:9:5: error:\n      \u2022 Couldn't match type \u2018IO ()\u2019 with \u2018()\u2019\n        Expected type: IO ()\n          Actual type: IO (IO ())\n      \u2022 In a stmt of a 'do' block:\n          forM filesInCurDir ...\n</code></pre>\n</blockquote>\n\n<p>When you see an <code>IO xxx</code> versus <code>IO (IO xxx)</code> mismatch cropping up in your code, it's usually because you've written a do-block statement as:</p>\n\n<pre><code>let x = something\n</code></pre>\n\n<p>when it should have been:</p>\n\n<pre><code>x &lt;- something\n</code></pre>\n\n<p>Here, if we check the type of <code>getCurrentDirectory &gt;&gt;= getDirectoryContents</code> in GHCi, we see it has the type:</p>\n\n<pre><code>&gt; :t getCurrentDirectory &gt;&gt;= getDirectoryContents\ngetCurrentDirectory &gt;&gt;= getDirectoryContents :: IO [FilePath]\n</code></pre>\n\n<p>so it's an IO action to return a list of filepaths.  However, we've assigned it with <code>let</code> to <code>filesInCurDir</code>.  But we don't want <code>filesInCurDir</code> to be an IO <em>action</em>, we want it to be the actual list of files.  To do this, we need to use <code>&lt;-</code> in place of <code>let</code>:</p>\n\n<pre><code>printDirectory :: FilePath -&gt; IO ()\nprintDirectory dir = do\n    filesInCurDir &lt;- getCurrentDirectory &gt;&gt;= getDirectoryContents    -- &lt;&lt; CHANGE HERE\n    forM filesInCurDir $ \\fry -&gt; do\n      let fry = \"__FAKEFILEPATH__\" -- DEBUGGING\n      isDirectory &lt;- doesDirectoryExist fry\n      if isDirectory\n         then do printDirectory fry -- FIXME\n         else putStrLn fry\n      putStrLn \"Directory search completed\"\n</code></pre>\n\n<p>Now, we still have a type mismatch on the <code>forM</code> statement, but we're getting closer:</p>\n\n<blockquote>\n<pre><code>Directory.hs:9:5: error:\n      \u2022 Couldn't match type \u2018[()]\u2019 with \u2018()\u2019\n        Expected type: IO ()\n          Actual type: IO [()]\n      \u2022 In a stmt of a 'do' block:\n          forM filesInCurDir\n</code></pre>\n</blockquote>\n\n<p>GHC expected <code>forM</code> to have type <code>IO ()</code> (i.e., an action that does some printing and returns nothing AKA \"unit\" AKA <code>()</code>), but instead <code>forM</code> is trying to return a whole <em>list</em> of <code>()</code>.  This happens when you use <code>forM</code> (which builds a list to return) in place of <code>forM_</code> (which just runs some IO actions for their side effects, like printing, but doesn't return anything itself).  So, you need to replace <code>forM</code> with <code>forM_</code>, and you can now safely remove the \"DEBUGGING\" statement:</p>\n\n<pre><code>printDirectory :: FilePath -&gt; IO ()\nprintDirectory dir = do\n    filesInCurDir &lt;- getCurrentDirectory &gt;&gt;= getDirectoryContents\n    forM_ filesInCurDir $ \\fry -&gt; do      -- &lt;&lt; CHANGE HERE\n                                          -- &lt;&lt; REMOVE DEBUGGING\n      isDirectory &lt;- doesDirectoryExist fry\n      if isDirectory\n         then do printDirectory fry -- FIXME\n         else putStrLn fry\n      putStrLn \"Directory search completed\"\n</code></pre>\n\n<p>It type checks with no errors!</p>\n\n<p>Unfortunately, if you try to run it, it just goes into an endless loop, but that's because the recursion is broken.  The directory contents include the special entries <code>\".\"</code> and <code>\"..\"</code> which you will want to skip but even if you fix that, the function doesn't actually ever change the current directory, so if there's at least one subdirectory, it'll just keep checking the current directory over and over.</p>\n\n<p>So, I guess it's still debugging time!</p>\n"}], "owner": {"reputation": 161, "user_id": 4410486, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/4a6414ff18efcc92b87d678b64212339?s=128&d=identicon&r=PG&f=1", "display_name": "Rooky Coder", "link": "https://stackoverflow.com/users/4410486/rooky-coder"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 105, "favorite_count": 1, "accepted_answer_id": 56844835, "answer_count": 1, "score": 1, "last_activity_date": 1562037221, "creation_date": 1562014580, "last_edit_date": 1562029805, "question_id": 56842374, "link": "https://stackoverflow.com/questions/56842374/errors-when-running-program", "title": "Errors when running program", "body": "<p>I am new to Haskell and I am trying to create a program that searches a directory and prints a list of files in the directory and its sub directories. I am stuck with debugging my errors. I have no clue what is wrong and unfortunately, I am not finding the documentation and various tutorial aids online to be helpful. </p>\n\n<p>This is the code that I have come up with. However, I have no idea if it works because I cannot get past debugging the errors. </p>\n\n<pre><code>import Control.Monad\nimport System.Directory\nimport System.FilePath\nimport System.Posix.Files\n\nprintDirectory :: FilePath -&gt; IO [FilePath]\nprintDirectory = do\n    let filesInCurDir = getCurrentDirectory &gt;&gt;= getDirectoryContents\n    forM filesInCurDir $ \\fry -&gt; do\n      isDirectory &lt;- doesDirectoryExist fry &lt;/&gt;\n        if isDirectory\n           then do printDirectory\n           else putStrLn fry\n      putStrLn \"Directory search completed\"\n    return\n</code></pre>\n\n<p>Below are my error messages (sorry, it is a bit lengthy). I realize that some of my logic may be a little flawed, particularly with the recursive call in the if statement. Unfortunately, I can't get past the debugging to even begin to fix the logic. Please can someone help explain why I am getting the errors I am getting and how to fix them.</p>\n\n<p>--Error Messages--</p>\n\n<pre><code>ass3.hs:13:9: error:\n    \u2022 Couldn't match expected type \u2018FilePath -&gt; IO [FilePath]\u2019\n                  with actual type \u2018[b0]\u2019\n    \u2022 In a stmt of a 'do' block:\n        forM filesInCurDir\n          $ \\ fry\n              -&gt; do isDirectory &lt;- doesDirectoryExist fry\n                                     &lt;/&gt; if isDirectory then ... else putStrLn fry\n                    putStrLn \"Directory search completed\"\n      In the expression:\n        do let filesInCurDir = getCurrentDirectory &gt;&gt;= getDirectoryContents\n           forM filesInCurDir $ \\ fry -&gt; do ...\n           return\n      In an equation for \u2018printDirectory\u2019:\n          printDirectory\n            = do let filesInCurDir = ...\n                 forM filesInCurDir $ \\ fry -&gt; ...\n                 return\n   |\n13 |         forM filesInCurDir $ \\fry -&gt; do\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...\n\nass3.hs:14:31: error:\n    \u2022 Couldn't match type \u2018IO Bool\u2019 with \u2018[Char]\u2019\n      Expected type: FilePath\n        Actual type: IO Bool\n    \u2022 In the first argument of \u2018(&lt;/&gt;)\u2019, namely \u2018doesDirectoryExist fry\u2019\n      In a stmt of a 'do' block:\n        isDirectory &lt;- doesDirectoryExist fry\n                         &lt;/&gt; if isDirectory then do printDirectory else putStrLn fry\n      In the expression:\n        do isDirectory &lt;- doesDirectoryExist fry\n                            &lt;/&gt; if isDirectory then do printDirectory else putStrLn fry\n           putStrLn \"Directory search completed\"\n   |\n14 |                 isDirectory &lt;-doesDirectoryExist fry&lt;/&gt;\n   |                               ^^^^^^^^^^^^^^^^^^^^^^\n\nass3.hs:14:50: error:\n    \u2022 Couldn't match type \u2018[Char]\u2019 with \u2018Char\u2019\n      Expected type: FilePath\n        Actual type: [FilePath]\n    \u2022 In the first argument of \u2018doesDirectoryExist\u2019, namely \u2018fry\u2019\n      In the first argument of \u2018(&lt;/&gt;)\u2019, namely \u2018doesDirectoryExist fry\u2019\n      In a stmt of a 'do' block:\n        isDirectory &lt;- doesDirectoryExist fry\n                         &lt;/&gt; if isDirectory then do printDirectory else putStrLn fry\n   |\n14 |                 isDirectory &lt;-doesDirectoryExist fry&lt;/&gt;\n   |                                                  ^^^\n\nass3.hs:15:28: error:\n    \u2022 Couldn't match expected type \u2018Bool\u2019\n                  with actual type \u2018FileStatus -&gt; Bool\u2019\n    \u2022 Probable cause: \u2018isDirectory\u2019 is applied to too few arguments\n      In the expression: isDirectory\n      In the second argument of \u2018(&lt;/&gt;)\u2019, namely\n        \u2018if isDirectory then do printDirectory else putStrLn fry\u2019\n      In a stmt of a 'do' block:\n        isDirectory &lt;- doesDirectoryExist fry\n                         &lt;/&gt; if isDirectory then do printDirectory else putStrLn fry\n   |\n15 |                         if isDirectory\n   |                            ^^^^^^^^^^^\n\nass3.hs:16:41: error:\n    \u2022 Couldn't match type \u2018FilePath -&gt; IO [FilePath]\u2019 with \u2018[Char]\u2019\n      Expected type: FilePath\n        Actual type: FilePath -&gt; IO [FilePath]\n    \u2022 Probable cause: \u2018printDirectory\u2019 is applied to too few arguments\n      In a stmt of a 'do' block: printDirectory\n      In the expression: do printDirectory\n      In the second argument of \u2018(&lt;/&gt;)\u2019, namely\n        \u2018if isDirectory then do printDirectory else putStrLn fry\u2019\n   |\n16 |                                 then do printDirectory\n   |                                         ^^^^^^^^^^^^^^\n\nass3.hs:17:30: error:\n    \u2022 Couldn't match type \u2018IO ()\u2019 with \u2018[Char]\u2019\n      Expected type: FilePath\n        Actual type: IO ()\n    \u2022 In the expression: putStrLn fry\n      In the second argument of \u2018(&lt;/&gt;)\u2019, namely\n        \u2018if isDirectory then do printDirectory else putStrLn fry\u2019\n      In a stmt of a 'do' block:\n        isDirectory &lt;- doesDirectoryExist fry\n                         &lt;/&gt; if isDirectory then do printDirectory else putStrLn fry\n   |\n17 |                         else putStrLn fry\n   |                              ^^^^^^^^^^^^\n\nass3.hs:17:39: error:\n    \u2022 Couldn't match type \u2018[Char]\u2019 with \u2018Char\u2019\n      Expected type: String\n        Actual type: [FilePath]\n    \u2022 In the first argument of \u2018putStrLn\u2019, namely \u2018fry\u2019\n      In the expression: putStrLn fry\n      In the second argument of \u2018(&lt;/&gt;)\u2019, namely\n        \u2018if isDirectory then do printDirectory else putStrLn fry\u2019\n   |\n17 |                         else putStrLn fry\n   |                                       ^^^\n\nass3.hs:18:17: error:\n    \u2022 Couldn't match type \u2018IO\u2019 with \u2018[]\u2019\n      Expected type: [()]\n        Actual type: IO ()\n    \u2022 In a stmt of a 'do' block: putStrLn \"Directory search completed\"\n      In the expression:\n        do isDirectory &lt;- doesDirectoryExist fry\n                            &lt;/&gt; if isDirectory then do printDirectory else putStrLn fry\n           putStrLn \"Directory search completed\"\n      In the second argument of \u2018($)\u2019, namely\n        \u2018\\ fry\n           -&gt; do isDirectory &lt;- doesDirectoryExist fry\n                                  &lt;/&gt; if isDirectory then ... else putStrLn fry\n                 putStrLn \"Directory search completed\"\u2019\n   |\n18 |                 putStrLn \"Directory search completed\"\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nass3.hs:19:9: error:\n    \u2022 Couldn't match expected type \u2018[b0]\u2019\n                  with actual type \u2018a0 -&gt; m0 a0\u2019\n    \u2022 Probable cause: \u2018return\u2019 is applied to too few arguments\n      In a stmt of a 'do' block: return\n      In the expression:\n        do let filesInCurDir = getCurrentDirectory &gt;&gt;= getDirectoryContents\n           forM filesInCurDir $ \\ fry -&gt; do ...\n           return\n      In an equation for \u2018printDirectory\u2019:\n          printDirectory\n            = do let filesInCurDir = ...\n                 forM filesInCurDir $ \\ fry -&gt; ...\n                 return\n   |\n19 |         return  \n   |         ^^^^^^\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 4, "creation_date": 1561996060, "post_id": 56838473, "comment_id": 100229750, "body": "Somewhat related: <a href=\"https://math.stackexchange.com/questions/57460/how-should-one-interpret-an-interval-like-2-1\">math.SE/How should one interpret an interval like &#91;2,1&#93; ?</a>"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 5, "creation_date": 1562005415, "post_id": 56838473, "comment_id": 100233482, "body": "I wouldn&#39;t like that semantics. This is because it is very convenient to have <code>length [1..n] == n</code> for every non negative <code>n</code>. This would be broken if <code>[1..0]</code> is <code>[1,0]</code>. Usually the programmer wants a known-increasing or known-decreasing sequence, not a sequence which flips direction as soon as the extremes flip. (We could however have a library function for the &quot;flipping&quot; variant -- is there any common need for that, though?)"}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 6, "creation_date": 1562019090, "post_id": 56838473, "comment_id": 100237850, "body": "Note that the programming language <code>R</code> has a colon operator that counts up or down, so <code>1:3</code> is <code>c(1,2,3)</code> while <code>3:1</code> is <code>c(3,2,1)</code>.  This is occasionally &quot;convenient&quot; for interactive use, and a nightmare for writing reliable programs; I&#39;ve been bitten by this behavior (specifically, where the special case <code>1:0 == empty vector</code> would have been correct but the actual result <code>c(1,0)</code> caused a bug) dozens of times."}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 15, "last_activity_date": 1562001966, "last_edit_date": 1562001966, "creation_date": 1561995852, "answer_id": 56838571, "question_id": 56838473, "link": "https://stackoverflow.com/questions/56838473/why-is-a-b-an-empty-list-when-a-b/56838571#56838571", "title": "Why is [a..b] an empty list when a &gt; b?", "body": "<p>The Report covers the details. In <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-400003.10\" rel=\"noreferrer\">Section 3.10</a>:</p>\n\n<blockquote>\n  <p>Arithmetic sequences satisfy these identities:</p>\n\n<pre><code>[ e1..e3 ]    =   enumFromTo e1 e3\n</code></pre>\n</blockquote>\n\n<p>In <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch6.html#x13-1310006.3.4\" rel=\"noreferrer\">Section 6.3.4</a>:</p>\n\n<blockquote>\n  <p>For the types <code>Int</code> and <code>Integer</code>, the enumeration functions have the following meaning:</p>\n  \n  <ul>\n  <li>The sequence <code>enumFromTo e1 e3</code> is the list <code>[e1,e1 + 1,e1 + 2,\u2026e3]</code>. The list is empty if <code>e1  &gt;  e3</code>.</li>\n  </ul>\n  \n  <p>For <code>Float</code> and <code>Double</code>, the semantics of the <code>enumFrom</code> family is given by the rules for <code>Int</code> above, except that the list terminates when the elements become greater than <code>e3 + i\u22152</code> for positive increment <code>i</code>, or when they become less than <code>e3 + i\u22152</code> for negative <code>i</code>.</p>\n</blockquote>\n\n<p>Then the next question is, \"Why was the Report specified that way?\". There I think the answer is that this choice is quite natural for a mathematician, which most of the original committee were to some extent. It also has a number of nice properties:</p>\n\n<ul>\n<li>If <code>[x..y]</code> has <em>n</em> values, then <code>[x..y-1]</code> and <code>[x+1..y]</code> have <em>n-1</em> values (where in <em>n-1</em>, the subtraction saturates at 0, an <em>ahem</em> natural choice).</li>\n<li>Checking whether a particular element is in the range <code>[x..y]</code> only requires checking that it is bigger than <code>x</code> and smaller than <code>y</code> -- you need not first determine which of <code>x</code> or <code>y</code> is bigger.</li>\n<li>It prevents a certain class of surprising off-by-one errors: if you want to take the next <em>n>=0</em> elements after <code>x</code>, you can write <code>[x..x+n-1]</code>. If you choose the other rule, where <code>[x..y]</code> might mean <code>[y,y+1,...,x]</code> if <code>y</code> is smaller, there is no way to create an empty list with <code>[_.._]</code> syntax, so no uniform way to take the next <em>n</em> elements. One would have to write the more cumbersome <code>if n&gt;0 then [x..x+n-1] else []</code>; and it would be very easy to forget to write this check.</li>\n</ul>\n\n<p>If you would like the list <code>[5,4,3,2,1]</code>, that may be achieved by specifying an explicit second step, as in <code>[5,4..1]</code>.</p>\n"}], "owner": {"reputation": 473, "user_id": 6515530, "user_type": "registered", "accept_rate": 64, "profile_image": "https://i.stack.imgur.com/HmvF7.jpg?s=128&g=1", "display_name": "Data", "link": "https://stackoverflow.com/users/6515530/data"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 136, "favorite_count": 0, "accepted_answer_id": 56838571, "answer_count": 1, "score": 3, "last_activity_date": 1562044791, "creation_date": 1561995432, "last_edit_date": 1562044791, "question_id": 56838473, "link": "https://stackoverflow.com/questions/56838473/why-is-a-b-an-empty-list-when-a-b", "title": "Why is [a..b] an empty list when a &gt; b?", "body": "<p>If I enter <code>[5..1]</code> into the Haskell console it returns <code>[]</code>, whereas I expected <code>[5, 4, 3, 2, 1]</code>. </p>\n\n<p>In general, <code>[a..b] = []</code> if <code>a &gt; b</code>. Why?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 67968, "user_id": 584192, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/YBSIc.png?s=128&g=1", "display_name": "Samuel Liew", "link": "https://stackoverflow.com/users/584192/samuel-liew"}, "edited": false, "score": 0, "creation_date": 1562108969, "post_id": 56837648, "comment_id": 100271777, "body": "Comments are not for extended discussion; this conversation has been <a href=\"https://chat.stackoverflow.com/rooms/195881/discussion-on-question-by-chieron-can-haskell-model-models\">moved to chat</a>."}], "answers": [{"comments": [{"owner": {"reputation": 59, "user_id": 11256414, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f4016249a7e3a1a779821346a2f1065?s=128&d=identicon&r=PG&f=1", "display_name": "Gupta", "link": "https://stackoverflow.com/users/11256414/gupta"}, "edited": false, "score": 0, "creation_date": 1562094108, "post_id": 56844531, "comment_id": 100267257, "body": "Ok, I know so little about Haskell I cannot actually verify if this is what I want ;/ But I will mull over the code until it makes enough sense. It seems though that it probably achieves what I&#39;m talking about. It turns out that D can do it with a bit more work but is very verbose and lots of boilerplate. Best I can tell is that Widget lifts the business model to the higher abstraction gui model, basically wraps. This is what I want. I want the compiler to internally figure out all the connections."}, {"owner": {"reputation": 59, "user_id": 11256414, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f4016249a7e3a1a779821346a2f1065?s=128&d=identicon&r=PG&f=1", "display_name": "Gupta", "link": "https://stackoverflow.com/users/11256414/gupta"}, "edited": false, "score": 0, "creation_date": 1562094266, "post_id": 56844531, "comment_id": 100267310, "body": "Is this something that relatively common and straight forward in Haskell or is it frowned upon, using &quot;hacks&quot;, etc?   Is the code you used essentially general enough to extend to a real world problem? Say, having a business model of some type have overlaying an arbitrary gui on top?"}, {"owner": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "reply_to_user": {"reputation": 59, "user_id": 11256414, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f4016249a7e3a1a779821346a2f1065?s=128&d=identicon&r=PG&f=1", "display_name": "Gupta", "link": "https://stackoverflow.com/users/11256414/gupta"}, "edited": false, "score": 1, "creation_date": 1562095214, "post_id": 56844531, "comment_id": 100267658, "body": "The techniques I&#39;ve demonstrated here aren&#39;t likely to be considered hacks, no. Depending on what precisely you want in your real world code, I can&#39;t promise that this pattern extends to cover everything you want without resorting to actual hacks. The problem is that OO inheritance is often used to bludgeon a variety of different problems into submission, with different programmers asserting that it&#39;s appropriate or not for different things. (cont.)"}, {"owner": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "reply_to_user": {"reputation": 59, "user_id": 11256414, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f4016249a7e3a1a779821346a2f1065?s=128&d=identicon&r=PG&f=1", "display_name": "Gupta", "link": "https://stackoverflow.com/users/11256414/gupta"}, "edited": false, "score": 1, "creation_date": 1562095449, "post_id": 56844531, "comment_id": 100267732, "body": "I don&#39;t understand what specific reasons you have for using inheritance to solve every problem in your example, so I can&#39;t promise that Haskell&#39;s alternatives cover all of those reasons. But Haskell&#39;s pretty good at being a general purpose programming language as long as you&#39;re open to checking a lot of preconceived ideas about what your code has to look like at the door. I think in your case, if you can&#39;t give a more concrete example of the constraints you want your code to meet (in Haskell&#39;s terms, not in OO), the only way to find out is to try."}], "tags": [], "owner": {"reputation": 1555, "user_id": 11228628, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c463de7cfe16792a210e3531fef5ccb5?s=128&d=identicon&r=PG&f=1", "display_name": "user11228628", "link": "https://stackoverflow.com/users/11228628/user11228628"}, "is_accepted": true, "score": 3, "last_activity_date": 1562034258, "creation_date": 1562034258, "answer_id": 56844531, "question_id": 56837648, "link": "https://stackoverflow.com/questions/56837648/can-haskell-model-models/56844531#56844531", "title": "Can Haskell model models?", "body": "<p>The first thing you should understand is that Haskell doesn't have objects or inheritance or overrides or anything of that nature. Since you've largely defined your problem in terms of those concepts, the short answer is: no, Haskell doesn't let you define a template for an object inheritance graph and then rubber-stamp that out a few times, because Haskell doesn't even have inheritance.</p>\n\n<p>However, if I take a <em>very</em> stretched interpretation of your question by throwing out all of the OOP concepts, I get to: does Haskell have a way to define a uniform interface (as in, a collection of functions; not an OOP interface) that can be used polymorphically with certain fixed sets of data types? And the answer to that is yes, with <a href=\"https://wiki.haskell.org/GHC/Type_families\" rel=\"nofollow noreferrer\">type families</a>.</p>\n\n<p>Here is an example of how to use type families, inspired by your animal/food D code:</p>\n\n<pre><code>{-# LANGUAGE TypeFamilies #-}\n\ndata Animal = Cat String | Dog String deriving (Eq, Show)\ndata Food = Donut | Cabbage deriving (Eq, Show)\n\ndata Widget a = Widget a Int -- let's say that the Int is a handle to some graphics object...\n\nclass AnimalModel animal where\n  type FoodFor animal\n  animalName :: animal -&gt; String\n  likesWhichFood :: animal -&gt; FoodFor animal\n  eat :: animal -&gt; FoodFor animal -&gt; IO ()\n\n-- So here we'll define the \"business model\" functions:\ninstance AnimalModel Animal where\n  type FoodFor Animal = Food\n\n  animalName (Cat name) = name\n  animalName (Dog name) = name\n\n  likesWhichFood (Cat _) = Cabbage\n  likesWhichFood (Dog _) = Donut\n\n  eat animal food = print message\n    where\n      message = if likesWhichFood animal == food then show animal ++ \" eats the \" ++ show food else show animal ++ \" refuses the \" ++ show food\n\n-- And here we'll define *just* the parts of the \"view model\" functions that don't depend on the specifics of the underlying model:\ninstance (AnimalModel animal) =&gt; AnimalModel (Widget animal) where\n  type FoodFor (Widget animal) = Widget (FoodFor animal)\n  animalName (Widget a _) = animalName a\n  likesWhichFood (Widget a _) = Widget (likesWhichFood a) (-1) -- because the widget hasn't been initialized yet??? IDK, this is a silly example\n  eat (Widget a _) (Widget f _) = eat a f\n\n\nmain = eat (Widget (Cat \"Sparky\") 2) (Widget Donut 3)\n</code></pre>\n"}], "owner": {"reputation": 59, "user_id": 11256414, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f4016249a7e3a1a779821346a2f1065?s=128&d=identicon&r=PG&f=1", "display_name": "Gupta", "link": "https://stackoverflow.com/users/11256414/gupta"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 236, "favorite_count": 2, "accepted_answer_id": 56844531, "answer_count": 1, "score": 3, "last_activity_date": 1562157671, "creation_date": 1561991900, "last_edit_date": 1562157671, "question_id": 56837648, "link": "https://stackoverflow.com/questions/56837648/can-haskell-model-models", "title": "Can Haskell model models?", "body": "<p>Can haskell correctly model models? I'm have very little experience with Haskell. I have never seen a common imperative oop based programming language that can use models.</p>\n\n<p>For those uninitiated, a model is basically a collection of types. It is a category where the objects are types. A Natural transform is then used to model a model.</p>\n\n<p>Quite simply:</p>\n\n<pre><code>class mB;\nclass mD : mB { mD foo(); };\n</code></pre>\n\n<p>Our model then is {mB, mD} and all the relationships in them(the objects and morphism).</p>\n\n<p>We want to derive a new model from the original that parallels is completely, </p>\n\n<pre><code>class MB;\nclass MD : MB { MD foo(); };\n</code></pre>\n\n<p>This new model is {MB, MD} and should parallel all the functionality, it is essentially a copy and pasted version, so to speak. </p>\n\n<p>There is no relationship, but we can use inheritance to act as a functor:</p>\n\n<pre><code>class MB : mB\nclass MD : mD, MB  { MD foo(); };\n</code></pre>\n\n<p>So, M can substitute for m, every type in the model M is derived from a type in the model M. It is oop at a higher level of abstraction. We effectively are trying to define inheritance for models, not just standard classes.</p>\n\n<p>The problem, though, is that M.foo does not override m.foo. Variance is broken!</p>\n\n<p>This is not a problem for models though because We never will mix and match models(but it does require proper construction).</p>\n\n<p>This might be unclear for some but it is quite easy. A natural transformation exists due to the inheritance:</p>\n\n<pre><code>mB -&gt; MB\n|      |\nv      v\nmD -&gt; MD\n</code></pre>\n\n<p>One can easily think of this in more concrete terms.</p>\n\n<p>Suppose one has a Model F16 which is a real F16 fighter jet.</p>\n\n<p>One now wants to create a 1:16 toy model version(or vice versa). Every component will be modeled and so there is a correlation between the two models. The real components and the toy components.</p>\n\n<p>If the real F16 forms one category then the toy will form another, but there will be natural relationships. </p>\n\n<p>What we want to avoid is connecting components between models in an natural way. E.g., using a real jet engine in the toy model or vice versa.</p>\n\n<p>Since Haskell is based in category theory I imagine it can properly handle this but I don't know how or how effective. </p>\n\n<p>Essentially we need to take a model(which is a category) and be able to \"duplicate it\" but still be able to substitute the new model in to the original(covariance/inheritance). </p>\n\n<p>The new model, since everything inherits, will function as a substitute for the old one. The new model can only extend(because it's covariantly derived).</p>\n\n<p>There are a few issues because of the complexity but the idea is that that we are taking one model and producing a new derived model, not really any different than when we take one class and produce a new derived class. The derived class can be substituted for the original because it contains the original in all structure(inheritance is a natural transformation).</p>\n\n<p>Here is another way to think about it, and what I'd like to use it for:</p>\n\n<ol>\n<li><p>Create the business model, no structure related to anything but the pure business end of the model. Maybe it is a checking account.</p></li>\n<li><p>Extend the model(the entire model) to have a GUI. The GUI uses the business model in one but the business model has no idea of the GUI.</p></li>\n</ol>\n\n<p>Typically this is done using a modelViewModel type of thing and is working at the model level(we have two models, the base model and the derived model).</p>\n\n<p>Usually though it is somewhat of a mess for large complex objects. It should be symbol.</p>\n\n<pre><code>model M : m;\n</code></pre>\n\n<p>i.e., just like classes, we create a new model M that extends m, we then add the new structure but all the base structure is preserved. The thing is, in M, there is no direct assess of stuff in m. i.e., we can violate variance in some sense because we know the base model is preserved in it's entirely and there is a 1:1 relationship between the two. i.e., the example above with foo is valid and foo can return a contravariant object and still override the original base models type. This normally is bad but in this case MD.foo is only ever used in the model M (when the base model uses foo, it's always using it on objects from M).</p>\n\n<p>One can almost think of it like taking a complex model and simply copying and pasting all the code then renaming all the types in a consistent fashion, then only adding new structure. The model then contains the structure of the original and can be substituted for it.</p>\n\n<p>The idea here is to maximize separation of code... to reduce all dependencies to the minimal required.. but have the compiler do all the plumbing so we don't have to worry about making mistakes or creating unintentional dependencies across the two models.</p>\n\n<p><a href=\"https://i.stack.imgur.com/smxk1.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/smxk1.png\" alt=\"enter image description here\"></a></p>\n\n<hr>\n\n<p>Some D source code which can be plugged in to <a href=\"https://run.dlang.io/\" rel=\"nofollow noreferrer\">https://run.dlang.io/</a></p>\n\n<pre><code>import std.stdio, std.traits;\n\nstruct ModelA\n{\n    // D only allows single inheritance, must use interfaces\n    interface iAnimal \n    { \n        string Type();\n        string Name();\n        void Attack(iAnimal who); \n        iFood LikesWhichFood();\n    }\n\n    interface iCat : iAnimal\n    {\n        void Meow();\n    }    \n\n    interface iDog : iAnimal\n    {\n        void Bark();\n    }    \n    interface iFood\n    {\n\n    }\n\n    class Animal : iAnimal \n    {\n        void Attack(iAnimal who) { writeln(Name, \" is attacking \", who.Name, \"!\"); }\n        string Type() { return \"Unknown Animal Type\"; }        \n        override string Name() { return \"Unknown Animal\"; }        \n        iFood LikesWhichFood() { writeln(\"Food D Type: \", fullyQualifiedName!iFood); return null; }                 \n    }\n\n    class Cat : Animal, iCat\n    {\n        string name = \"Unknown Cat\";\n        override string Type() { return \"Cat\"; }        \n        override string Name() { return name; }\n        void Meow() { writeln(\"Meow!\"); }\n        this() { }\n        this(string n) { name = n; }\n    }\n\n    class Dog : Animal, iDog\n    {\n        string name = \"Unknown Dog\";\n        override string Type() { return \"Dog\"; }        \n        override string Name() { return name; }\n        void Bark() { writeln(\"Bark!\"); }\n        this() { }\n        this(string n) { name = n; }\n    }\n\n\n    class Food : iFood\n    {\n\n    }\n}\n\n\n// Model B, It is \"derived\" from A, meaning Model B could, in theory, substitute for Model A as long as everything is designed correctly\n// In this case we will create a ViewModel, a gui framework for ModelA. We actually cannot do this naturally in D since it does not support multiple inheritance.\nstruct ModelB\n{   \n    interface iAnimal : ModelA.iAnimal\n    { \n        override iFood LikesWhichFood();\n    }\n\n    interface iCat : iAnimal, ModelA.iAnimal\n    {\n\n    }    \n\n    interface iDog : iAnimal, ModelA.iAnimal\n    {\n\n    }    \n    interface iFood : ModelA.iFood\n    {\n        void IsItTasty();\n    }\n\n    class Animal : ModelA.Animal, iAnimal\n    {\n        //\n        override iFood LikesWhichFood() { return cast(iFood)super.LikesWhichFood; }\n    }\n\n    class Cat : ModelA.Cat, iAnimal, iCat // We need to derive from Animal, not iAnimal, to provide proper ModelB implementation of Animal\n    {\n        alias Attack = Animal.Attack;   // Required by D\n\n        // In D, ModelA.Cat's implement is not provided as default, we have to reimplement everything. Or is Animal providing any implementation\n        override string Type() { return super.Type; }       \n        override string Name() { return super.Name; }\n        override void Meow() { super.Meow; }\n        void Attack(iAnimal who) { super.Attack(who); }\n        override void Attack(ModelA.iAnimal who) { super.Attack(who); }\n        override iFood LikesWhichFood() { writeln(\"Food D Type: \", fullyQualifiedName!iFood); return new Cabbage; }                 \n        this() { }\n        this(string n) { name = n; }\n\n    }\n\n    class Dog : ModelA.Dog, iAnimal, iDog\n    {\n        alias Attack = Animal.Attack;   \n        override string Type() { return super.Type; }       \n        override string Name() { return super.Name; }\n        override void Bark() { super.Bark; }\n        void Attack(iAnimal who) { super.Attack(who); }\n        override void Attack(ModelA.iAnimal who) { super.Attack(who); }\n        override iFood LikesWhichFood() { writeln(\"Food D Type: \", fullyQualifiedName!iFood); return new Donuts; }                  \n        this() { }\n        this(string n) { name = n; }\n    }\n\n\n    class Food : iFood\n    {\n        void IsItTasty() { writeln(\"Unknown Food\"); }\n    }\n\n    class Donuts : Food\n    {\n        override void IsItTasty() { writeln(\"YUK!\"); }\n    }\n\n    class Cabbage : Food\n    {\n        override void IsItTasty() { writeln(\"YUM!\"); }\n    }\n}\nvoid main()\n{\n\n    {\n        ModelA.iAnimal animal1 = new ModelA.Cat(\"Mittens\");\n        ModelA.iAnimal animal2 = new ModelA.Dog(\"Sparky\");\n\n        writeln(animal1.Name);\n        writeln(animal2.Name);\n        animal1.Attack(animal2);\n        animal1.LikesWhichFood;\n    }\n\n    writeln(\"\\n----------\\n\");\n\n    {\n        ModelB.iAnimal animal1 = new ModelB.Cat(\"Super Mittens\");\n        ModelB.iAnimal animal2 = new ModelB.Dog(\"Super Sparky\");\n\n        writeln(animal1.Name);\n        writeln(animal2.Name);\n        animal1.Attack(animal2);\n        auto f = animal1.LikesWhichFood;\n        //f.IsItTasty;      // Error: no property `IsItTasty` for type `Models.ModelA.iFood`. It should return a ModelB.iFood, we are inside ModelB, never any risk\n        (cast(ModelB.iFood)f).IsItTasty;        // We can, of course, force it, but that is the rub, we don't have to, that is why we want to have a concept of a model, it tells the compiler that there is something more going on and it can reduce all this overhead. We can't even override this because of the contravariance rule.\n\n    }\n\n    writeln(\"\\n----------\\n\");\n\n    // This is the magic, ModelB is now substituted in Model A. It's basically still oop but our entire derived model is(or should be) used.\n    // We can substitute the new model in all places where the old was used. This is the easy way to do ModelViewModel, we simply extend the model and add the view, no complex bridging, adapting, maintance, dependencies, etc.\n    {\n        ModelA.iAnimal animal1 = new ModelB.Cat(\"Super Mittens\");\n        ModelA.iAnimal animal2 = new ModelB.Dog(\"Super Sparky\");\n\n        writeln(animal1.Name);\n        writeln(animal2.Name);\n        animal1.Attack(animal2);\n        animal1.LikesWhichFood;\n        auto f = animal2.LikesWhichFood;\n        //f.IsItTasty;  // This Error is ok, we are inside ModelA, ModelA would never use IsItTasty and it would be wrong to do so(it's only wrong because it should be impossible for ModelA to know about ModelB, else we create a dependency between models and really end up with one combined model rather than two separate models). But note that we could cast\n        (cast(ModelB.iFood)f).IsItTasty;        // We can, of course, force it though(only because we know for a fact we are actually dealing with a ModelB disugised as a ModelA, this is generally not the case), but this then shows a dependency. Note that it is exactly like the above model though... but there is a huge difference. In the first case it is afe, in this case it is not.. and the only difference is the model we are working in.\n    }\n\n}\n</code></pre>\n\n<hr>\n\n<p>The thing to note here is that there are some issues with D, we have quite a bit of verbosity. We must add many methods just to keep the model consistent methods. Ideally every class and interface in ModelB could be empty and things would compile. In fact, ideally we could do something like</p>\n\n<p>model ModelB : ModelA\n{</p>\n\n<p>}</p>\n\n<p>and provide just what we want to extend or modify. (just as we would do for a base and derived class. A model is essentially a slightly more abstract class where the members are classes.)</p>\n"}, {"tags": ["json", "haskell", "aeson"], "comments": [{"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 1, "creation_date": 1561985095, "post_id": 56835375, "comment_id": 100224153, "body": "That string <i>is</i> a JSON array. It&#39;s not an object. A JSON object would look like this: <code>{ &quot;a&quot;: &quot;hello&quot;, &quot;b&quot;: 3, &quot;c&quot;: 2, &quot;d&quot;: &quot;world&quot;, &quot;e&quot;: [1, 3, 5] }</code>"}, {"owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 0, "creation_date": 1561987367, "post_id": 56835375, "comment_id": 100225381, "body": "Will this help? <a href=\"https://github.com/chrisdone/dynamic\" rel=\"nofollow noreferrer\">github.com/chrisdone/dynamic</a>"}], "answers": [{"tags": [], "owner": {"reputation": 49, "user_id": 10299370, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54dbc5f51e0b11ea111c89d5c9c3c60e?s=128&d=identicon&r=PG&f=1", "display_name": "aru_bdd", "link": "https://stackoverflow.com/users/10299370/aru-bdd"}, "is_accepted": true, "score": 1, "last_activity_date": 1561992751, "creation_date": 1561992751, "answer_id": 56837836, "question_id": 56835375, "link": "https://stackoverflow.com/questions/56835375/correctly-parsing-a-json-array-as-custom-data-type-object/56837836#56837836", "title": "Correctly Parsing a JSON Array as Custom Data Type Object", "body": "<p>I found a solution which is quite simple using pattern matching but more direct approaches are also welcome, as I believe there should be some functionality for this.</p>\n\n<pre><code>raw = fromJust (decode $ C.pack \"[\\\"hello\\\",3,2,\\\"world\\\",[1,3,5]]\"::Maybe (String, Int, Int,   String, [Int]))\n\nfunc::(String, Int, Int, String, [Int]) -&gt; DLA\nfunc (a,b,c,d,e) = DLA a b c d e\n</code></pre>\n"}], "owner": {"reputation": 49, "user_id": 10299370, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/54dbc5f51e0b11ea111c89d5c9c3c60e?s=128&d=identicon&r=PG&f=1", "display_name": "aru_bdd", "link": "https://stackoverflow.com/users/10299370/aru-bdd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 98, "favorite_count": 0, "accepted_answer_id": 56837836, "answer_count": 1, "score": 1, "last_activity_date": 1563080261, "creation_date": 1561982661, "last_edit_date": 1563080261, "question_id": 56835375, "link": "https://stackoverflow.com/questions/56835375/correctly-parsing-a-json-array-as-custom-data-type-object", "title": "Correctly Parsing a JSON Array as Custom Data Type Object", "body": "<p>I defined the following datatype object in Haskell:</p>\n\n<pre><code>import GHC.Generics\nimport Data.Aeson\nimport qualified Data.ByteString.Lazy.Char8 as C\nimport Data.Maybe (fromJust)\n\ndata DLA = DLA {\n                a::String,\n                b::Int,\n                c::Int,\n                d::String,\n                e::[Int]\n                } deriving (Show, Generic)\n\ninstance FromJSON DLA\ninstance ToJSON DLA\n</code></pre>\n\n<p>And receive a json array from some frontend-application in the following format</p>\n\n<pre><code>[\\\"hello\\\",3,2,\\\"world\\\",[1,3,5]]\n</code></pre>\n\n<p>When I tried to parse this like</p>\n\n<pre><code>decode $ C.pack \"[\\\"hello\\\",3,2,\\\"world\\\",[1,3,5]]\"::Maybe DLA\n</code></pre>\n\n<p>it simply returned <code>Nothing</code>. Trying to pass it more general like </p>\n\n<p><code>decode $ C.pack \"[\\\"hello\\\",3,2,\\\"world\\\",[1,3,5]]\"::Maybe Value</code> </p>\n\n<p>returned the following output:</p>\n\n<pre><code>Just (Array [String \"hello\",Number 3.0,Number 2.0,String \"world\",Array [Number 1.0,Number 3.0,Number 5.0]])\n</code></pre>\n\n<p>So the problem seems to be that Haskell interprets the string as an array, not an object, and thus rightly throws an exception. Any ideas how to fix this? </p>\n\n<p>I am using the current version of ghc and ghci, and Data.Aeson for this. </p>\n"}, {"tags": ["haskell", "typeclass"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 4, "creation_date": 1561952524, "post_id": 56829394, "comment_id": 100211776, "body": "Eh? Type classes are not considered existentials. What makes you think they are? Nothing you quoted implies anything like that to me."}, {"owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1561952744, "post_id": 56829394, "comment_id": 100211809, "body": "@DanielWagner I&#39;m trying to understand the sentence in the second link: &quot;This proposition is of existential nature&quot;, for what is that &quot;existential nature&quot;."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 5, "creation_date": 1561956257, "post_id": 56829394, "comment_id": 100212332, "body": "I think it&#39;s that eg <code>Eq A</code> means &quot;there exists a function <code>(==) :: A -&gt; A -&gt; Bool</code>&quot;"}, {"owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1561967776, "post_id": 56829394, "comment_id": 100215719, "body": "@luqui but &quot;there exists a function <code>(==) :: A -&gt; A -&gt; Bool</code>&quot; is not a qualifier, <code>\u2203 x</code> is not a valid proposition if we are talking about the existential quantification."}, {"owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1561967958, "post_id": 56829394, "comment_id": 100215796, "body": "@luqui and how can I interpret the type signature of <code>Eq a =&gt; a -&gt; a</code>? <code>\u2203 Eq a . a -&gt; a</code>? where should I insert <code>forall a</code>?"}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 1, "creation_date": 1561973593, "post_id": 56829394, "comment_id": 100218486, "body": "@JiamingLu It doesn&#39;t work like an existential, it works more like &quot;<code>forall a.</code> when <code>Eq a</code>, then this function exists for <code>a</code> and has type <code>a -&gt; a</code>&quot;."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 4, "creation_date": 1561985504, "post_id": 56829394, "comment_id": 100224359, "body": "That part of the wiki looks simply wrong to me, or -at best- quite misleading. A declaration <code>class C a where ...</code> does <i>not</i> imply that there is a type <code>a</code> for which we can instantiate the class, inhabiting the methods. It is using the word &quot;existential&quot; quite liberally. It is similar to saying that <code>f :: (Int -&gt; Bool) -&gt; Char</code> assumes that &quot;it exists some function <code>Int-&gt;Bool</code>&quot; before generating a <code>Char</code>. I would ignore that sentence."}, {"owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "reply_to_user": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1562031673, "post_id": 56829394, "comment_id": 100240062, "body": "@Cubic I&#39;m now curious how to express &quot;forall a. when Eq a, then this function exists for a and has type a -&gt; a&quot; as a proposition."}, {"owner": {"reputation": 56659, "user_id": 450128, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/2f72b3fdc99fe9fd1bbeb2f9da1d2c0a?s=128&d=identicon&r=PG", "display_name": "Ben", "link": "https://stackoverflow.com/users/450128/ben"}, "edited": false, "score": 0, "creation_date": 1562112309, "post_id": 56829394, "comment_id": 100272386, "body": "@JiamingLu: Something like &quot;\u2200a. Eq a -&gt; ((==) :: a -&gt; a -&gt; Bool)`?"}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 8, "last_activity_date": 1562004896, "last_edit_date": 1562004896, "creation_date": 1561988229, "answer_id": 56836692, "question_id": 56829394, "link": "https://stackoverflow.com/questions/56829394/why-is-it-said-that-typeclasses-are-existential/56836692#56836692", "title": "Why is it said that typeclasses are existential?", "body": "<p>The wiki you quote is wrong, or at least being imprecise. A class <em>declaration</em> is not an existential proposition; it is not a proposition of any kind, it is merely a definition of a shorthand. One could then move on to making a proposition using that definition if you wanted, but on its own it's nothing like that. For example,</p>\n\n<pre><code>class Eq a where (==) :: a -&gt; a -&gt; Bool\n</code></pre>\n\n<p>makes a new definition. One could then write a non-existential, non-universal proposition using it, say,</p>\n\n<pre><code>Eq ()\n</code></pre>\n\n<p>which we could \"prove\" by writing:</p>\n\n<pre><code>instance Eq () where () == () = True\n</code></pre>\n\n<p>Or one could write</p>\n\n<pre><code>prop_ExistsFoo :: exists a. Eq a *&gt; a\n</code></pre>\n\n<p>as an existential proposition. (Haskell doesn't actually have the <code>exists</code> proposition former, nor <code>(*&gt;)</code>. Think of <code>(*&gt;)</code> as dual to <code>(=&gt;)</code> -- just like <code>exists</code> is dual to <code>forall</code>. So where <code>(=&gt;)</code> is a function which takes evidence of a constraint, <code>(*&gt;)</code> is a tuple that contains evidence of a constraint, just like <code>forall</code> is for a function that takes a type while <code>exists</code> is for a tuple that contains a type.) We could \"prove\" this proposition by, e.g.</p>\n\n<pre><code>prop_ExistsFoo = ()\n</code></pre>\n\n<p>Note here that the type contained in the <code>exists</code> tuple is <code>()</code>; the evidence contained in the <code>(*&gt;)</code> tuple is the <code>Eq ()</code> instance we wrote above. I have honored Haskell's tendency to make types and instances silent and implicit here, so they don't appear in the visible proof text.</p>\n\n<p>Similarly, we could make a different, universal proposition out of <code>Eq</code> by writing something like</p>\n\n<pre><code>prop_ForallEq :: forall a. Eq a =&gt; a\n</code></pre>\n\n<p>which is not nontrivially provable, or</p>\n\n<pre><code>prop_ForallEq2 :: forall a. Eq a =&gt; a -&gt; a -&gt; Bool\n</code></pre>\n\n<p>which we could \"prove\", for example, by writing</p>\n\n<pre><code>prop_ForallEq2 x y = not (x == y)\n</code></pre>\n\n<p>or in many other ways.</p>\n\n<p>But the class declaration in itself is <em>definitely not</em> an existential proposition, and it doesn't have \"existential nature\", whatever that is supposed to mean. Instead of getting hung up and confused on that, please congratulate yourself for correctly labeling this incorrect claim as confusing!</p>\n"}, {"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1562035217, "post_id": 56843089, "comment_id": 100240655, "body": "I don&#39;t understand this answer. The connection between <code>Chaos</code> and <code>absurd</code> that you&#39;re trying to make appears to be about vacuous truths -- implications with false assumptions. But that&#39;s not an existential claim. So what exactly <i>is</i> the existential claim that you say is being made?"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1562060907, "post_id": 56843089, "comment_id": 100249810, "body": "@DanielWagner In those cases there indeed are no existential claims, as the premises are false (there are no <code>Chaos</code> instances, and no <code>Void</code> values). That&#39;s what I tried to get across with the &quot;If it were possible...&quot; paragraph, though I probably should add a non-vacuous example, with <code>Eq</code> or some other class with instances, to make my point clearer. I&#39;ll look into it later."}], "tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 2, "last_activity_date": 1562102434, "last_edit_date": 1562102434, "creation_date": 1562019204, "answer_id": 56843089, "question_id": 56829394, "link": "https://stackoverflow.com/questions/56829394/why-is-it-said-that-typeclasses-are-existential/56843089#56843089", "title": "Why is it said that typeclasses are existential?", "body": "<p>The second quote is imprecise. The existential claim comes with the instances, not with the class itself. Consider the following class:</p>\n\n<pre><code>class Chaos a where\n    to :: a -&gt; y\n    from :: x -&gt; a\n</code></pre>\n\n<p>While this is a perfectly valid declaration, there can't possibly be any instances of <code>Chaos</code> (it there were, <code>to . from</code> would exist, which would be quite amusing). The type of, say, <code>to</code>...</p>\n\n<pre><code>GHCi&gt; :t to\nto :: Chaos a =&gt; a -&gt; y\n</code></pre>\n\n<p>... tells us that, given any type <code>a</code>, <em>if</em> <code>a</code> is an instance of <code>Chaos</code>, there is a function which can turn an <code>a</code> into a value of any type whatsoever. If <code>Chaos</code> has no instances, that statement is vacuously true, so we can't infer the existence of any such function from it.</p>\n\n<p>Putting classes aside for a moment, this situation is rather similar to what we have with <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Void.html#v:absurd\" rel=\"nofollow noreferrer\">the <code>absurd</code> function</a>:</p>\n\n<pre><code>absurd :: Void -&gt; a\n</code></pre>\n\n<p>This type says that, given a <code>Void</code> value, we can produce a value of any type whatsoever. That sounds, well, absurd -- but then we remember that <code>Void</code> is the empty type, which means there are no <code>Void</code> values, and it's all good.</p>\n\n<p>For the sake of contrast, we might note that instances become possible once we break <code>Chaos</code> apart in two classes:</p>\n\n<pre><code>class Primordial a where\n    conjure :: a -&gt; y\n\nclass Doom a where\n    destroy :: x -&gt; a\n\n\ninstance Primordial Void where\n    conjure = absurd\n\ninstance Doom () where\n    destroy = const ()\n</code></pre>\n\n<p>When we, for example, write <code>instance Primordial Void</code>, we are claiming that <code>Void</code> is an instance of <code>Primordial</code>. That implies there must exist a function <code>conjure :: Void -&gt; y</code>, at which point we must back up the claim by supplying an implementation.</p>\n"}], "owner": {"reputation": 875, "user_id": 890991, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33bfa5c69121eac7b878a20c457567c6?s=128&d=identicon&r=PG", "display_name": "Jiaming Lu", "link": "https://stackoverflow.com/users/890991/jiaming-lu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 290, "favorite_count": 0, "accepted_answer_id": 56836692, "answer_count": 2, "score": 6, "last_activity_date": 1562102434, "creation_date": 1561947712, "last_edit_date": 1561973393, "question_id": 56829394, "link": "https://stackoverflow.com/questions/56829394/why-is-it-said-that-typeclasses-are-existential", "title": "Why is it said that typeclasses are existential?", "body": "<p>According to <a href=\"https://stackoverflow.com/a/9473088/890991\">this link describing existential types</a>:</p>\n\n<blockquote>\n  <p>A value of an existential type like \u2203x. F(x) is a pair containing some type x and a value of the type F(x). Whereas a value of a polymorphic type like \u2200x. F(x) is a function that takes some type x and produces a value of type F(x). In both cases, the type closes over some type constructor F.</p>\n</blockquote>\n\n<p>But a function definition with type class constraints doesn't pair with the type class instance.</p>\n\n<p>It's not <code>forall f, exists Functor f, ...</code> (because it's obvious not every type f has instance of Functor f, hence <code>exists Functor f ...</code> not true).</p>\n\n<p>It's not <code>exists f and Functor f, ...</code> (because it's applicable to all instances of satisfied f, not only the chosen one).</p>\n\n<p>To me, it's <code>forall f and instances of Functor f, ...</code>, more like to scala's implicit arguments rather than existential types.</p>\n\n<p>And according to <a href=\"https://wiki.haskell.org/Curry-Howard-Lambek_correspondence#Type_classes\" rel=\"nofollow noreferrer\">this link describing type classes</a>:</p>\n\n<blockquote>\n  <p>[The class declaration for <code>Eq</code>] means, logically, there is a type a for which the type <code>a -&gt; a -&gt; Bool</code> is inhabited, or, from a it can be proved that <code>a -&gt; a -&gt; Bool</code> (the class promises two different proofs for this, having names <code>==</code> and <code>/=</code>). This proposition is of existential nature (not to be confused with existential type)</p>\n</blockquote>\n\n<p>What's the difference between type classes and existential types, and why are they both considered \"existential\"?</p>\n"}, {"tags": ["haskell", "frp"], "comments": [{"owner": {"reputation": 7666, "user_id": 1241193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0331e5e748a0ac3860b68f6cac130ef1?s=128&d=identicon&r=PG", "display_name": "Bob Dalgleish", "link": "https://stackoverflow.com/users/1241193/bob-dalgleish"}, "edited": false, "score": 0, "creation_date": 1562094688, "post_id": 56827588, "comment_id": 100267467, "body": "The question doesn&#39;t make sense -- <code>join</code> essentially waits for the first <code>Event a</code> to arrive. Since <code>never</code> (presumably) never  does arrive, <code>join</code> waits forever and the result is <code>_|_</code> (bottom)."}, {"owner": {"reputation": 2865, "user_id": 6369276, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d91ac54d4035616b112dcfb66433550e?s=128&d=identicon&r=PG&f=1", "display_name": "michaelmesser", "link": "https://stackoverflow.com/users/6369276/michaelmesser"}, "reply_to_user": {"reputation": 7666, "user_id": 1241193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0331e5e748a0ac3860b68f6cac130ef1?s=128&d=identicon&r=PG", "display_name": "Bob Dalgleish", "link": "https://stackoverflow.com/users/1241193/bob-dalgleish"}, "edited": false, "score": 0, "creation_date": 1562102497, "post_id": 56827588, "comment_id": 100270256, "body": "@BobDalgleish <code>(MkEvent (pure (MkReactive &quot;bar&quot; never)))</code> fires at time zero"}], "answers": [{"tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": true, "score": 1, "last_activity_date": 1562108127, "creation_date": 1562108127, "answer_id": 56860954, "question_id": 56827588, "link": "https://stackoverflow.com/questions/56827588/how-does-reactives-monad-instance-handle-simultaneous-events/56860954#56860954", "title": "How does Reactive&#39;s Monad instance handle simultaneous events?", "body": "<p>Here is the (slightly paraphrased) <code>join</code> definition from section 7.1.3:</p>\n\n<pre><code>-- urr is the outer Reactive; ur is the inner one.\njoinR :: Reactive (Reactive a) -&gt; Reactive a\njoinR ((a `Stepper` Ev ur) `Stepper` Ev urr) = a `Stepper` Ev u\n    where\n    u = ((`switcher` Ev urr) &lt;$&gt; ur) &lt;&gt; (join &lt;$&gt; urr)\n</code></pre>\n\n<p>The <code>Monoid</code> instance being used in the definition of <code>u</code> is the one for <code>Future</code>s, defined in section 4.5, which in case of simultaneous firings picks the left one. That being so, the inner firing is not discarded if there is a simultaneous firing in <code>join</code>. For the specific example in your question, sampling at time zero should still give out <code>\"foo\"</code>. (I believe the monad law <code>join . fmap return = id</code> would be violated if that wasn't the case)</p>\n"}], "owner": {"reputation": 2865, "user_id": 6369276, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d91ac54d4035616b112dcfb66433550e?s=128&d=identicon&r=PG&f=1", "display_name": "michaelmesser", "link": "https://stackoverflow.com/users/6369276/michaelmesser"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 114, "favorite_count": 0, "accepted_answer_id": 56860954, "answer_count": 1, "score": 4, "last_activity_date": 1562108127, "creation_date": 1561924013, "last_edit_date": 1562103501, "question_id": 56827588, "link": "https://stackoverflow.com/questions/56827588/how-does-reactives-monad-instance-handle-simultaneous-events", "title": "How does Reactive&#39;s Monad instance handle simultaneous events?", "body": "<p>In <a href=\"http://conal.net/papers/push-pull-frp/push-pull-frp.pdf\" rel=\"nofollow noreferrer\"><em>Push-Pull Functional Reactive Programming</em></a> by Conal Elliot, <code>Reactive</code>s are given a <code>Monad</code> instance in section 7.1.3. What happens if both the inner and outer reactive fire that the same time for <code>join</code>?</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>never :: Event a\nMkFuture :: Time -&gt; a -&gt; Future a\npure :: a -&gt; Future a -- at time zero\nMkReactive :: a -&gt; Event a -&gt; Reactive a\nMkEvent :: Future (Reactive a) -&gt; Event a\n\njoin (MkReactive (MkReactive \"foo\" never) (MkEvent (pure (MkReactive \"bar\" never)))\n</code></pre>\n\n<p>Should <code>\"foo\"</code> be ignored or included in the result on the join?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1561918272, "post_id": 56826946, "comment_id": 100206388, "body": "Tip: try using <code>map</code>."}, {"owner": {"reputation": 910, "user_id": 11591930, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NU6Oj.png?s=128&g=1", "display_name": "sudo97", "link": "https://stackoverflow.com/users/11591930/sudo97"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1561919103, "post_id": 56826946, "comment_id": 100206573, "body": "I figured I&#39;ll need to map a function like <code>toToken</code> to the list of strings but how do i make a general function that can taken in a <code>String</code> and give out the required <code>Token</code> element while checking whether that string can be converted to a <code>Double</code> or not?"}, {"owner": {"reputation": 910, "user_id": 11591930, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NU6Oj.png?s=128&g=1", "display_name": "sudo97", "link": "https://stackoverflow.com/users/11591930/sudo97"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1561919173, "post_id": 56826946, "comment_id": 100206593, "body": "I guess my question could be solved if there is a way to check if a <code>String</code> can be casted as a <code>Double</code> type or not...."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 9, "creation_date": 1561919414, "post_id": 56826946, "comment_id": 100206664, "body": "Yes, there is <code>readMaybe</code>"}, {"owner": {"reputation": 910, "user_id": 11591930, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NU6Oj.png?s=128&g=1", "display_name": "sudo97", "link": "https://stackoverflow.com/users/11591930/sudo97"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1561920671, "post_id": 56826946, "comment_id": 100206948, "body": "@RobinZigmond thanks a lot! <code>readMaybe</code> works!"}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 3, "last_activity_date": 1561928065, "creation_date": 1561928065, "answer_id": 56828018, "question_id": 56826946, "link": "https://stackoverflow.com/questions/56826946/how-do-i-check-if-a-string-can-be-parsed-to-a-certain-type-in-haskell/56828018#56828018", "title": "How do i check if a string can be parsed to a certain type in Haskell?", "body": "<p>We can implement an algorithm that is optimistic, it first aims to parse it as a <code>Double</code>, and in case that fails, we return an <code>Op</code> for that string, like:</p>\n\n<pre><code>import Text.Read(readMaybe)\n\ntoTokenList :: [String] -&gt; [Token]\ntoTokenList = map (\\x -&gt; maybe (Op x) Num (readMaybe x))</code></pre>\n\n<p>or point-free:</p>\n\n<pre><code>toTokenList :: [String] -&gt; [Token]\ntoTokenList = map (flip maybe Num . Op &lt;*&gt; readMaybe)</code></pre>\n\n<p>We here make use of <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Text-Read.html#v:readMaybe\" rel=\"nofollow noreferrer\"><strong><code>readMaybe :: Read a =&gt; String -&gt; Maybe a</code></strong></a>, and <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:maybe\" rel=\"nofollow noreferrer\"><strong><code>maybe :: b -&gt; (a -&gt; b) -&gt; Maybe a -&gt; b</code></strong></a> to provide a fallback and post-process the value.</p>\n\n<p>For example:</p>\n\n<pre><code>Prelude Data.Maybe Text.Read&gt; toTokenList [\"2\",\"+\",\"3\"]\n[Num 2.0,Op \"+\",Num 3.0]\n</code></pre>\n"}], "owner": {"reputation": 910, "user_id": 11591930, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NU6Oj.png?s=128&g=1", "display_name": "sudo97", "link": "https://stackoverflow.com/users/11591930/sudo97"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 388, "favorite_count": 0, "accepted_answer_id": 56828018, "answer_count": 1, "score": 8, "last_activity_date": 1581519404, "creation_date": 1561917665, "last_edit_date": 1581519404, "question_id": 56826946, "link": "https://stackoverflow.com/questions/56826946/how-do-i-check-if-a-string-can-be-parsed-to-a-certain-type-in-haskell", "title": "How do i check if a string can be parsed to a certain type in Haskell?", "body": "<p>So I have my own data type in haskell defined like this:</p>\n\n<pre><code>data Token = Num Double | Op String\n</code></pre>\n\n<p>I want to make a function that converts a list of strings into a list of tokens. E.g.</p>\n\n<pre><code>toTokenList [\"2\",\"+\",\"3\"]\n&gt; [Num 2.0, Op \"+\", Num 3.0]\n</code></pre>\n\n<p>How would I go about doing this? </p>\n\n<p>I have implemented a function that converts a type <code>Double</code> into a <code>Token</code> type and another one that converts a <code>String</code> to a <code>Token</code> type. Can these be used for <code>toTokenList</code> or no?</p>\n\n<p>I am new to Haskell relatively and if you need further clarification about the question please let me know in the comments.</p>\n"}, {"tags": ["haskell", "lazy-evaluation", "applicative", "io-monad"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 4, "creation_date": 1561915983, "post_id": 56826738, "comment_id": 100205896, "body": "<code>(&lt;*)</code> doesn&#39;t use the <code>b</code> values from the <code>f b</code>, but it does use the <code>f</code> effects (for instance, using <code>\\x -&gt; return x &lt;* print x</code> will actually print <code>x</code>), so it must inspect the second argument."}, {"owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1561916220, "post_id": 56826738, "comment_id": 100205941, "body": "How/why is it used though? What is responsible for this?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1561916324, "post_id": 56826738, "comment_id": 100205966, "body": "@ChrisStryczynski The runtime system executes <code>main</code>, and is responsible for discovering all the <code>IO</code> effects reachable from it."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 7, "creation_date": 1561916535, "post_id": 56826738, "comment_id": 100206015, "body": "This doesn&#39;t happen just with <code>IO</code>, either. For instance, while <code>Just 1 &lt;* Just 2</code> is <code>Just 1</code>,  <code>Just 1 &lt;* Nothing</code> is <code>Nothing</code>. There is no way to figure that out without inspecting the second argument."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 4, "creation_date": 1561916618, "post_id": 56826738, "comment_id": 100206031, "body": "Imagine if one wrote <code>putStrLn &quot;Hello!&quot; *&gt; putStrLn &quot;World!&quot;</code>. What would the output be?"}, {"owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "edited": false, "score": 0, "creation_date": 1561916735, "post_id": 56826738, "comment_id": 100206057, "body": "Oh that is a good example. Why does that execute both while <code>const (print &quot;test&quot;) (print &quot;test2&quot;)</code> does not?"}, {"owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "edited": false, "score": 0, "creation_date": 1561917004, "post_id": 56826738, "comment_id": 100206106, "body": "Okay so that narrows it down even further to: <code>fmap (const) (putStrLn &quot;test&quot;)</code> printing <code>test</code>... Which I suppose comes down to the implementation of the IO Monad?"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1561917150, "post_id": 56826738, "comment_id": 100206144, "body": "@ChrisStryczynski &quot;Which I suppose comes down to the implementation of the IO Monad?&quot; -- Yup, pretty much so."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1561917635, "post_id": 56826738, "comment_id": 100206243, "body": "consider <code>const &lt;$&gt; Just 1 &lt;*&gt; Just undefined</code>, <code>const &lt;$&gt; Just 1 &lt;*&gt; undefined</code>, <code>runIdentity $ const &lt;$&gt; Identity 1 &lt;*&gt; undefined</code> (you might need to <code>import Data.Functor.Identity</code> for the last one). So yes, it&#39;s in the definition of the applicative instance for the particular functor. (see also: <a href=\"https://stackoverflow.com/questions/24467803/how-to-handle-side-effect-with-applicative/24467994#24467994\" title=\"how to handle side effect with applicative\">stackoverflow.com/questions/24467803/&hellip;</a>)"}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 1, "creation_date": 1561920814, "post_id": 56826738, "comment_id": 100206978, "body": "<code>xyz = pure undefined</code> will do what you expect\u2014<code>&lt;*</code> is (for most applicatives) strict in the effects, but it\u2019s non-strict in the right operand\u2019s <i>result</i>"}], "answers": [{"tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": true, "score": 4, "last_activity_date": 1561998933, "last_edit_date": 1561998933, "creation_date": 1561918519, "answer_id": 56827050, "question_id": 56826738, "link": "https://stackoverflow.com/questions/56826738/why-isnt-this-this-applicative-statement-being-lazily-evaluated-and-how-can-i/56827050#56827050", "title": "Why isn&#39;t this this applicative statement being lazily evaluated, and how can I understand why?", "body": "<p><code>(&lt;*)</code> doesn't use the <code>b</code> values from the <code>f b</code>, but it does use the <code>f</code> effects, so it must inspect the second argument.</p>\n\n<blockquote>\n  <p>Why does [<code>putStrLn \"Hello!\" *&gt; putStrLn \"World!\"</code>] execute both while <code>const (print \"test\") (print \"test2\")</code> does not?</p>\n</blockquote>\n\n<p>In the type of <code>const</code>...</p>\n\n<pre><code>const :: a -&gt; b -&gt; a\n</code></pre>\n\n<p>... both <code>a</code> and <code>b</code> are fully parametric, and there is nothing else to deal with. With <code>(&lt;*)</code>, though, the situation is rather different. For starters, <code>(&lt;*)</code> is a method of <code>Applicative</code>, so anyone writing <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.Base.html#line-1353\" rel=\"nofollow noreferrer\">an <code>Applicative</code> instance for <code>IO</code></a> can supply a concrete...</p>\n\n<pre><code>(&lt;*) :: IO a -&gt; IO b -&gt; IO a\n</code></pre>\n\n<p>... implementation that uses <code>IO</code>-specific functions to combine effects from the two arguments in whatever way is deemed necessary.</p>\n\n<p>Furthermore, even if <code>(&lt;*)</code> weren't a method of <code>Applicative</code>, its type...</p>\n\n<pre><code>(&lt;*) :: Applicative f =&gt; f a -&gt; f b -&gt; f a\n</code></pre>\n\n<p>... is such that, though <code>a</code> and <code>b</code> are fully parametric, <code>f</code> is not, because of the <code>Applicative</code> constraint. Its implementation can use other methods of <code>Applicative</code>, which can, and in most cases will, use the effects from both arguments.</p>\n\n<p>Note that this is not an <code>IO</code>-specific issue. For instance, here is <code>(&lt;*) @Maybe</code> not ignoring the effects of its second argument:</p>\n\n<pre><code>GHCi&gt; Just 1 &lt;* Just 2\nJust 1\nGHCi&gt; Just 1 &lt;* Nothing\nNothing\n</code></pre>\n"}], "owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 101, "favorite_count": 0, "accepted_answer_id": 56827050, "answer_count": 1, "score": 6, "last_activity_date": 1561998933, "creation_date": 1561915744, "last_edit_date": 1561918453, "question_id": 56826738, "link": "https://stackoverflow.com/questions/56826738/why-isnt-this-this-applicative-statement-being-lazily-evaluated-and-how-can-i", "title": "Why isn&#39;t this this applicative statement being lazily evaluated, and how can I understand why?", "body": "<pre><code>abc :: IO (Int)\nabc = do\n  print \"abc\"\n  pure $ 10\n\nxyz :: IO (Int)\nxyz = undefined\n\nmain :: IO () \nmain = do\n  x &lt;- (((+) &lt;$&gt; abc &lt;*&gt; abc) &lt;* xyz)\n  print x\n\n</code></pre>\n\n<p>Why in the above is <code>xyz</code> being evaluated? I would assume due to Haskell's lazy nature it would not need to evaluate <code>xyz</code> (and hence not reach the <code>undefined</code>)?</p>\n\n<p>My assumption is based on the type of <code>&lt;*</code>:</p>\n\n<pre><code>Prelude&gt; :t (&lt;*)\n(&lt;*) :: Applicative f =&gt; f a -&gt; f b -&gt; f a\n</code></pre>\n\n<p>Following on with:</p>\n\n<pre><code>    -- | Sequence actions, discarding the value of the first argument.\n    (*&gt;) :: f a -&gt; f b -&gt; f b\n    a1 *&gt; a2 = (id &lt;$ a1) &lt;*&gt; a2\n</code></pre>\n\n<p>And:</p>\n\n<pre><code>(&lt;$)        :: a -&gt; f b -&gt; f a\n(&lt;$)        =  fmap . const\n</code></pre>\n\n<p>And hence <code>f b</code> never gets used.</p>\n\n<hr>\n\n<p><strong>Is there a way I can understand / investigate why this is being evaluated strictly? Would looking at the GHC compiled Core be helpful in this?</strong></p>\n\n<hr>\n\n<p>Thanks to the discussion in the comments it seems (please someone correct me if I'm wrong) it's due to the <code>Monad</code> implementation of the <code>IO</code> because the following two statements seem to evaluate differently:</p>\n\n<p>Identity:</p>\n\n<pre><code>runIdentity $ const &lt;$&gt; (pure 1 :: Identity Int) &lt;*&gt; undefined\n1\n</code></pre>\n\n<p>IO:</p>\n\n<pre><code>const &lt;$&gt; (pure 1 :: IO Int) &lt;*&gt; undefined\n*** Exception: Prelude.undefined\n\n</code></pre>\n"}, {"tags": ["haskell", "existential-type", "higher-rank-types"], "comments": [{"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 1, "creation_date": 1561927583, "post_id": 56826733, "comment_id": 100208373, "body": "&quot;The existential constructor ensures I can only consume an <code>Ev g</code> by supplying a polymorphic extractor&quot; Perhaps you could make that more explicit, like <code>Ev :: ((forall x . g x -&gt; x) -&gt; a) -&gt; Ev g a</code>. Such definition makes the definition <code>distribute wrapped = Ev (\\f -&gt; fmap (\\(Ev z) -&gt; z f) wrapped) </code> compile for me, although it breaks the generic deriving of <code>Functor</code> for some reason."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1561928330, "post_id": 56826733, "comment_id": 100208525, "body": "@danidiaz The problem with doing it that way is that it stops <code>revert</code> from typechecking, as <code>distribute id :: g (g a -&gt; a)</code> won&#39;t be polymorphic enough to map the wrapped function over it."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1561930164, "post_id": 56826733, "comment_id": 100208853, "body": "Is <code>fmap (\\(Ev s) -&gt; s)</code> really something sensible to do? The object you are <code>fmap</code>-ing over could contain many <code>Ev</code> (say, <code>fmap = map</code>), each with its own existentially quantified <code>x</code>."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1561931050, "post_id": 56826733, "comment_id": 100208984, "body": "For reference, the foolproof, (almost-)certainly-correct free <code>Distributive</code> is <code>Ev g a = (forall g&#39;. Distributive g&#39; =&gt; (forall x. g x -&gt; g&#39; x) -&gt; g&#39; a)</code>, but I don&#39;t think that helps in making your <code>Ev</code> work."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1561931560, "post_id": 56826733, "comment_id": 100209087, "body": "@Li-yaoXia I think it is sensible. <code>x</code> does not appear in a &quot;strictly positive&quot; position, so it seems that any such differences won&#39;t be observable. For instance <code>[Ev (\\e -&gt; show . e $ Duo 1 2), Ev (\\e -&gt; e $ Duo &quot;foo&quot; &quot;bar&quot;)]</code> typechecks as <code>Ev Duo String</code> and works just fine. (Note that I must straighten out the result types of the suspensions to <code>String</code>.)"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1561932737, "post_id": 56826733, "comment_id": 100209268, "body": "@HTNW Yup -- that would be the final form, if my terminology is right. It does seem to be isomorphic to <code>Ev</code>: <code>toEvFinal (Ev s) = EvFinal $ \\n -&gt; revert (Ev (s . (. n)))</code> and <code>fromEvFinal (EvFinal s) = s evert</code>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 1, "creation_date": 1562011385, "post_id": 56826733, "comment_id": 100235531, "body": "I think it&#39;s just as good to use @danidiaz&#39;s representation with <code>unsafeCoerce</code> in <code>revert</code>. This avoids using <code>data</code> to wrap a function. As you say, <code>distribute id :: forall x. g (g x -&gt; x)</code> is insufficiently polymorphic, but you can do the same thing: specialize to <code>x ~ Any</code> and coerce under the <code>fmap</code>."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1562020432, "post_id": 56826733, "comment_id": 100238122, "body": "@DanielWagner The <code>x</code>es are behind a function arrow, so the secretly wrapped values aren&#39;t really of <code>x</code> type; they merely dictate a specialisation of a polymorphic <code>x</code>. The customary trick is to encode existential quantification with universal quantification. If I understand it correctly, I have done it twice here, which would make it become universal again."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1562022052, "post_id": 56826733, "comment_id": 100238436, "body": "@dfeuer Well-spotted! It seems another advantage of doing it this way is that it reduces the number of places <code>unsafeCoerce</code> is necessary, assuming there really is no way to get rid of it altogether. Auspiciously, neither the <code>Distributive</code> instance nor the <code>Representable</code> one requires a further <code>unsafeCoerce</code>."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1562473438, "post_id": 56826733, "comment_id": 100381314, "body": "@danidiaz Your intuition was sound after all. I thank both you and dfeuer for my self-answer here."}], "answers": [{"comments": [{"owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "edited": false, "score": 0, "creation_date": 1561934575, "post_id": 56828434, "comment_id": 100209531, "body": "This is not the same type?"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1561934741, "post_id": 56828434, "comment_id": 100209560, "body": "This raises a relevant point: what I&#39;m trying to do might perhaps be described as an attempt to conjure the representation for <code>Distributive</code> in Haskell. My type is, in spirit, <code>Goop g -&gt; a</code>, though the quantifiers make a mess of it all. I have just attempted to write <code>Representable (Ev g)</code> for my type, with <code>Rep (Ev g) = Goop g</code>, and guess what: I needed <code>unsafeCoerce</code> for writing <code>tabulate</code>. It seems to work, though I&#39;m slightly less certain of the soundness of this instance."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "edited": false, "score": 0, "creation_date": 1561934933, "post_id": 56828434, "comment_id": 100209593, "body": "@Andr&#225;sKov&#225;cs It is a different encoding, which sans the change of constraint is, as far as I can tell, <a href=\"https://stackoverflow.com/questions/56826733/juggling-existentials-without-unsafecoerce#comment100209268_56826733\">isomorphic to mine</a>."}, {"owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1561935120, "post_id": 56828434, "comment_id": 100209624, "body": "@duplode I don&#39;t see how the original <code>Ev g</code> is representable. For many choices of <code>g</code>, <code>Ev g a</code> can contain anywhere from zero to infinite number of <code>a</code>s, e.g. if <code>g = []</code>."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "edited": false, "score": 0, "creation_date": 1561935287, "post_id": 56828434, "comment_id": 100209646, "body": "@Andr&#225;sKov&#225;cs If <code>g ~ []</code>, <code>Ev g a</code> will contain no (observable) <code>a</code>s, because strictly speaking there are no <code>[a] -&gt; a</code> functions."}, {"owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1561935887, "post_id": 56828434, "comment_id": 100209720, "body": "@duplode I was thinking about strong sigma types, but I think you&#39;re right in the current case with the weird weak existential elimination."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1561940688, "post_id": 56828434, "comment_id": 100210274, "body": "@duplode, for what it&#39;s worth, my type is just a convoluted version of the one danidiaz suggests: <code>newtype Ev g a = Ev ((forall x . g x -&gt; x) -&gt; a)</code>. What you won&#39;t like is that <code>revert</code> sure seems to need a <code>Representable</code> constraint."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 2, "last_activity_date": 1561933446, "last_edit_date": 1561933446, "creation_date": 1561933133, "answer_id": 56828434, "question_id": 56826733, "link": "https://stackoverflow.com/questions/56826733/juggling-existentials-without-unsafecoerce/56828434#56828434", "title": "Juggling existentials without unsafeCoerce", "body": "<p>Every <code>Distributive</code> functor can be made <code>Representable</code>, though we can't prove that in Haskell (I imagine it's not constructive). But one approach to addressing your problem is to just switch classes.</p>\n\n<pre><code>newtype Evv f a = Evv\n  {unEvv :: forall g. Representable g\n         =&gt; (forall x. f x -&gt; g x) -&gt; g a}\n\ninstance Functor (Evv g) where\n  fmap f (Evv q) = Evv $ \\g -&gt; fmap f (q g)\n\nevert :: g a -&gt; Evv g a\nevert ga = Evv $ \\f -&gt; f ga\n\nrevert :: Representable g =&gt; Evv g a -&gt; g a\nrevert (Evv f) = f id\n\nnewtype Goop f = Goop\n  {unGoop :: forall x. f x -&gt; x}\n\ninstance Distributive (Evv g) where\n  collect = collectRep\n\ninstance Representable (Evv g) where\n  type Rep (Evv g) = Goop g\n  tabulate f = Evv $ \\g -&gt; fmap (\\rg -&gt; f (Goop $ \\fx -&gt; index (g fx) rg)) $ tabulate id\n  index (Evv g) (Goop z) = runIdentity $ g (Identity . z)\n</code></pre>\n\n<p>I haven't yet tried this with <code>Distributive</code> directly (as HTNW suggests), but I wouldn't be surprised if it were simply impossible for some reason.</p>\n\n<p>Warning: I have not proven that this is actually the free <code>Representable</code>!</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1562481797, "post_id": 56919305, "comment_id": 100382401, "body": "The only open question, I think, is whether <code>distribute</code> with something other than reader could somehow do the trick.... Seems unlikely, but I dunno how to demonstrate it&#39;s impossible."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1562540224, "post_id": 56919305, "comment_id": 100394957, "body": "@dfeuer At times, I have wondered if there might be an alternative encoding of the free distributive/representable that would allow for something different -- which sounds similarly unlikely."}], "tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": true, "score": 2, "last_activity_date": 1562473072, "creation_date": 1562473072, "answer_id": 56919305, "question_id": 56826733, "link": "https://stackoverflow.com/questions/56826733/juggling-existentials-without-unsafecoerce/56919305#56919305", "title": "Juggling existentials without unsafeCoerce", "body": "<p>The suggestions by danidiaz and dfeuer have led me to a tidier encoding, though <code>unsafeCoerce</code> is still necessary:</p>\n\n<pre><code>{-# LANGUAGE DeriveFunctor #-}\n{-# LANGUAGE RankNTypes #-}\n{-# LANGUAGE TypeFamilies #-}\n\nimport Unsafe.Coerce\nimport GHC.Exts (Any)\nimport Data.Distributive\nimport Data.Functor.Rep\n\n-- Px here stands for \"polymorphic extractor\".\nnewtype Px g = Px { runPx :: forall x. g x -&gt; x }\n\nnewtype Ev g a = Ev { getEv :: Px g -&gt; a }\n    deriving Functor\n\nrunEv :: Ev g a -&gt; (forall x. g x -&gt; x) -&gt; a\nrunEv s e = s `getEv` Px e\n\nevert :: g a -&gt; Ev g a\nevert u = Ev $ \\e -&gt; e `runPx` u\n\nrevert :: Distributive g =&gt; Ev g a -&gt; g a\nrevert (Ev s) = (\\e -&gt; s (mkPx e)) &lt;$&gt; distribute id\n    where\n    mkPx :: (g Any -&gt; Any) -&gt; Px g\n    mkPx e = Px (unsafeCoerce e) \n\ninstance Distributive (Ev g) where\n    distribute = Ev . distribute . fmap getEv\n\ninstance Representable (Ev g) where\n    type Rep (Ev g) = Px g\n    tabulate = Ev \n    index = getEv\n</code></pre>\n\n<p>The <code>x</code> variable in my original formulation of <code>Ev</code> was, at heart, being universally quantified; I had merely disguised it as an existential behind a function arrow. While that encoding makes it possible to write <code>revert</code> without <code>unsafeCoerce</code>, it shifts the burden to the instance implementations. Directly using universal quantification is ultimately better in this case, as it keeps the magic concentrated in one place.</p>\n\n<p>The <code>unsafeCoerce</code> trick here is essentially the same demonstrated with <code>tabulate</code> in the question: the <code>x</code> in <code>distribute id :: Distributive g =&gt; g (g x -&gt; x)</code> is specialised to <code>Any</code>, and then the specialisation is immediately undone, under the <code>fmap</code>, with <code>unsafeCoerce</code>. I believe the trick is safe, as I have sufficient control over what is being fed to <code>unsafeCoerce</code>.</p>\n\n<p>As for getting rid of <code>unsafeCoerce</code>, I truly can't see a way. Part of the problem is that it seems I would need some form of impredicative types, as the <code>unsafeCoerce</code> trick ultimately amounts to turning <code>forall x. g (g x -&gt; x)</code> into <code>g (forall x. g x -&gt; x)</code>. For the sake of comparison, I can write a vaguely analogous, if much simpler, scenario using the subset of the impredicative types functionality that would fall under the scope of the mooted <code>ExplicitImpredicativeTypes</code> extension (see <a href=\"https://gitlab.haskell.org/ghc/ghc/issues/14859\" rel=\"nofollow noreferrer\">GHC ticket #14859</a> and links therein for discussion):</p>\n\n<pre><code>{-# LANGUAGE ImpredicativeTypes #-}\n{-# LANGUAGE TypeApplications #-}\n{-# LANGUAGE RankNTypes #-}\n\nnewtype Foo = Foo ([forall x. Num x =&gt; x] -&gt; Int)\n\ntestFoo :: Applicative f =&gt; Foo -&gt; f Int\ntestFoo (Foo f) = fmap @_ @[forall x. Num x =&gt; x] f \n    $ pure @_ @[forall x. Num x =&gt; x] [1,2,3]\n</code></pre>\n\n\n\n<pre><code>GHCi&gt; :set -XImpredicativeTypes \nGHCi&gt; :set -XTypeApplications \nGHCi&gt; testFoo @Maybe (Foo length)\nJust 3\n</code></pre>\n\n<p><code>distribute id</code>, however, is thornier than <code>[1,2,3]</code>. In <code>id :: g x -&gt; g x</code>, the type variable I'd like to keep quantified appears in two places, with one of them being the second type argument to <code>distribute</code> (the <code>(-&gt;) (g x)</code> functor). To my untrained eye at least, that looks utterly intractable.</p>\n"}], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 210, "favorite_count": 3, "accepted_answer_id": 56919305, "answer_count": 2, "score": 11, "last_activity_date": 1562473072, "creation_date": 1561915672, "last_edit_date": 1562023149, "question_id": 56826733, "link": "https://stackoverflow.com/questions/56826733/juggling-existentials-without-unsafecoerce", "title": "Juggling existentials without unsafeCoerce", "body": "<p>Lately I have been playing with this type, which I understand to be an encoding of the free distributive functor (for tangential background on that, see <a href=\"https://stackoverflow.com/a/56822105/2751851\">this answer</a>):</p>\n\n<pre><code>data Ev g a where\n    Ev :: ((g x -&gt; x) -&gt; a) -&gt; Ev g a\n\nderiving instance Functor (Ev g)\n</code></pre>\n\n<p>The existential constructor ensures I can only consume an <code>Ev g</code> by supplying a polymorphic extractor <code>forall x. g x -&gt; x</code>, and that the lift and lower functions of the free construction can be given compatible types:</p>\n\n<pre><code>runEv :: Ev g a -&gt; (forall x. g x -&gt; x) -&gt; a\nrunEv (Ev s) f = s f\n\nevert :: g a -&gt; Ev g a\nevert u = Ev $ \\f -&gt; f u\n\nrevert :: Distributive g =&gt; Ev g a -&gt; g a\nrevert (Ev s) = s &lt;$&gt; distribute id\n</code></pre>\n\n<p>However, there is a difficulty upon trying to give <code>Ev g</code> a <code>Distributive</code> instance. Given that <code>Ev g</code> is ultimately just a function with a weird argument type, one might hope that just threading <code>distribute</code> for functions (which amounts to <code>(??) :: Functor f =&gt; f (a -&gt; b) -&gt; a -&gt; f b</code> <a href=\"http://hackage.haskell.org/package/lens-4.17.1/docs/Control-Lens-Lens.html#v:-63--63-\" rel=\"noreferrer\">from <em>lens</em></a>, and doesn't inspect the argument type in any way) through the <code>Ev</code> wrapper:</p>\n\n<pre><code>instance Distributive (Ev g) where\n    distribute = Ev . distribute . fmap (\\(Ev s) -&gt; s)\n</code></pre>\n\n<p>That, however, does not work:</p>\n\n<pre><code>Flap3.hs:95:53: error:\n    \u2022 Couldn't match type \u2018x\u2019 with \u2018x0\u2019\n      \u2018x\u2019 is a rigid type variable bound by\n        a pattern with constructor:\n          Ev :: forall (g :: * -&gt; *) x a. ((g x -&gt; x) -&gt; a) -&gt; Ev g a,\n        in a lambda abstraction\n        at Flap3.hs:95:44-47\n      Expected type: (g x0 -&gt; x0) -&gt; a\n        Actual type: (g x -&gt; x) -&gt; a\n    \u2022 In the expression: s\n      In the first argument of \u2018fmap\u2019, namely \u2018(\\ (Ev s) -&gt; s)\u2019\n      In the second argument of \u2018(.)\u2019, namely \u2018fmap (\\ (Ev s) -&gt; s)\u2019\n    \u2022 Relevant bindings include\n        s :: (g x -&gt; x) -&gt; a (bound at Flap3.hs:95:47)\n   |\n95 |     distribute = Ev . distribute . fmap (\\(Ev s) -&gt; s) \n   |                                                     ^\nFailed, no modules loaded.\n</code></pre>\n\n<p>GHC objects to rewrapping the existential, even though we do nothing untoward with it between unwrapping and rewrapping. The only way out I found was resorting to <code>unsafeCoerce</code>:</p>\n\n<pre><code>instance Distributive (Ev g) where\n    distribute = Ev . distribute . fmap (\\(Ev s) -&gt; unsafeCoerce s)\n</code></pre>\n\n<p>Or, spelling it in a perhaps more cautious manner:</p>\n\n<pre><code>instance Distributive (Ev g) where\n    distribute = eevee . distribute . fmap getEv\n        where\n        getEv :: Ev g a -&gt; (g Any -&gt; Any) -&gt; a\n        getEv (Ev s) = unsafeCoerce s\n        eevee :: ((g Any -&gt; Any) -&gt; f a) -&gt; Ev g (f a)\n        eevee s = Ev (unsafeCoerce s)\n</code></pre>\n\n<p>Is it possible to get around this problem without <code>unsafeCoerce</code>? or there truly is no other way?</p>\n\n<p>Additional remarks: </p>\n\n<ul>\n<li><p>I believe <code>Ev</code> is the most correct type I can give to the construction, though I would be happy to be proved wrong. All my attempts to shift the quantifiers elsewhere lead either to needing <code>unsafeCoerce</code> somewhere else or to <code>evert</code> and <code>revert</code> having types that don't allow them to be composed.</p></li>\n<li><p>This situation looks, at first glance, similar to the one described in <a href=\"https://reasonablypolymorphic.com/blog/existentials/\" rel=\"noreferrer\">this blog post by Sandy Maguire</a>, which ends up sticking with <code>unsafeCoerce</code> as well. </p></li>\n</ul>\n\n<hr>\n\n<p>The following take at giving <code>Ev g</code> a <code>Representable</code> instance might put the problem into sharper relief. <a href=\"https://stackoverflow.com/a/56828434/2751851\">As dfeuer notes</a>, this isn't really supposed to be possible; unsurprisingly, I had to use <code>unsafeCoerce</code> again:</p>\n\n<pre><code>-- Cf. dfeuer's answer.\nnewtype Goop g = Goop { unGoop :: forall y. g y -&gt; y }\n\ninstance Representable (Ev g) where\n    type Rep (Ev g) = Goop g\n    tabulate f = Ev $ \\e -&gt; f (Goop (goopify e))\n        where\n        goopify :: (g Any -&gt; Any) -&gt; g x -&gt; x\n        goopify = unsafeCoerce\n    index (Ev s) = \\(Goop e) -&gt; s e\n</code></pre>\n\n<p>While <code>goopify</code> sure looks alarming, I think there is a case for it being safe here. The existential encoding means any <code>e</code> that gets passed to the wrapped function will necessarily be an extractor polymorphic on the element type, that gets specialised to <code>Any</code> merely because I asked for that to happen. That being so, <code>forall x. g x -&gt; x</code> is a sensible type for <code>e</code>. This dance of specialising to <code>Any</code> only to promptly undo it with <code>unsafeCoerce</code> is needed because GHC forces me to get rid of the existential by making a choice. This is what happens if I leave out the <code>unsafeCoerce</code> in this case:</p>\n\n<pre><code>Flap4.hs:64:37: error:\n    \u2022 Couldn't match type \u2018y\u2019 with \u2018x0\u2019\n      \u2018y\u2019 is a rigid type variable bound by\n        a type expected by the context:\n          forall y. g y -&gt; y\n        at Flap4.hs:64:32-37\n      Expected type: g y -&gt; y\n        Actual type: g x0 -&gt; x0\n    \u2022 In the first argument of \u2018Goop\u2019, namely \u2018e\u2019\n      In the first argument of \u2018f\u2019, namely \u2018(Goop e)\u2019\n      In the expression: f (Goop e)\n    \u2022 Relevant bindings include\n        e :: g x0 -&gt; x0 (bound at Flap4.hs:64:24)\n   |\n64 |     tabulate f = Ev $ \\e -&gt; f (Goop e) \n   |                                     ^\nFailed, no modules loaded.\n</code></pre>\n\n<hr>\n\n<p>Prolegomena needed to run the code here:</p>\n\n<pre><code>{-# LANGUAGE DeriveFunctor #-}\n{-# LANGUAGE StandaloneDeriving #-}\n{-# LANGUAGE GADTs #-}\n{-# LANGUAGE RankNTypes #-}\n{-# LANGUAGE TypeFamilies #-}\n\nimport Data.Distributive\nimport Data.Functor.Rep\nimport Unsafe.Coerce\nimport GHC.Exts (Any)\n\n-- A tangible distributive, for the sake of testing.\ndata Duo a = Duo { fstDuo :: a, sndDuo :: a }\n    deriving (Show, Eq, Ord, Functor)\n\ninstance Distributive Duo where\n    distribute u = Duo (fstDuo &lt;$&gt; u) (sndDuo &lt;$&gt; u)\n</code></pre>\n"}, {"tags": ["windows", "haskell", "encryption", "cmd", "command-line"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1561902569, "post_id": 56824810, "comment_id": 100203017, "body": "What makes you think cmd.exe is not safe? Anyway, you could use an open source alternative like ConEmu + bash or something. (Still, I don&#39;t think there&#39;s a problem to fix here ?)"}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 4, "creation_date": 1561904023, "post_id": 56824810, "comment_id": 100203317, "body": "<code>getPassword</code> from the &quot;haskeline&quot; library could be useful to avoid unwanted echoing <a href=\"http://hackage.haskell.org/package/haskeline-0.7.5.0/docs/System-Console-Haskeline.html#v:getPassword\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/haskeline-0.7.5.0/docs/&hellip;</a>"}, {"owner": {"reputation": 560, "user_id": 605006, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/159f1f433be0b865a6556ff4d0c6f54a?s=128&d=identicon&r=PG", "display_name": "Shawn Eary", "link": "https://stackoverflow.com/users/605006/shawn-eary"}, "edited": false, "score": 0, "creation_date": 1561922133, "post_id": 56824810, "comment_id": 100207275, "body": "I will try getPassword from &quot;haskeline&quot; to get part of the decryption key and then retrieve the other part of the encryption key in a file.  Good to hear that getPassword works on <i>both</i> Windows <i>and</i> GNU/Linux"}, {"owner": {"reputation": 560, "user_id": 605006, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/159f1f433be0b865a6556ff4d0c6f54a?s=128&d=identicon&r=PG", "display_name": "Shawn Eary", "link": "https://stackoverflow.com/users/605006/shawn-eary"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1562264049, "post_id": 56824810, "comment_id": 100331991, "body": "@chi - This isn&#39;t specifically an MS Windows problem, but historically, I think some command prompts like cmd.exe, BASH and even EMACS Shell mode have had histories. I&#39;m concerned that if I do something wrong, the Encryption Key might wind up in some kind of shell history and somehow be extracted by a malicious process."}], "owner": {"reputation": 560, "user_id": 605006, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/159f1f433be0b865a6556ff4d0c6f54a?s=128&d=identicon&r=PG", "display_name": "Shawn Eary", "link": "https://stackoverflow.com/users/605006/shawn-eary"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 92, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1561928739, "creation_date": 1561897350, "last_edit_date": 1561928739, "question_id": 56824810, "link": "https://stackoverflow.com/questions/56824810/how-do-i-safely-read-an-encryption-key-via-a-haskell-command-line-program", "title": "How Do I Safely Read an Encryption Key via a Haskell Command Line Program?", "body": "<p>I want to use the Clipboard and Cryptonite packages to create a simple command line password manager for MS Windows.</p>\n\n<p>Somehow, I have to get the decryption keys from the user.  The easiest way would be to just use getLine.  Unfortunately, there are two problems with getLine:</p>\n\n<ol>\n<li>Shoulder surfers may be able to see the user type in the decryption keys</li>\n<li>I'm concerned the Microsoft Command Line interface (cmd.exe) will save those decryption keys where hackers can gain access to them</li>\n</ol>\n\n<p>I thought about going GUI and using Gtk2Hs to get around these Command Line problems, but installing Gtk2Hs on an MS Windows system these days is quite a chore.  Also, GUI would probably add a lot of unnecessary complexity anyway.</p>\n\n<p>For reasons I would rather not explain, I don't want to use ncurses or derivatives.  </p>\n\n<p>Does Haskell have a safe way I can get encryption keys from users via the Microsoft Windows Command Line?</p>\n\n<p>NOTE: If Microsoft Windows command prompt is inherently insecure, that's not Haskell's problem.  I'm just asking if Haskell and MS Windows work nicely together so I can safely read encryption keys from via the command line. </p>\n"}, {"tags": ["haskell", "dhall"], "answers": [{"comments": [{"owner": {"reputation": 20862, "user_id": 376113, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/d3a5bd12fe6d876527a3cf4ac0de5fc6?s=128&d=identicon&r=PG", "display_name": "mb14", "link": "https://stackoverflow.com/users/376113/mb14"}, "edited": false, "score": 0, "creation_date": 1561972651, "post_id": 56829335, "comment_id": 100217960, "body": "Thanks for the quick answer. Your example indeed works, but I can&#39;t make it work in my case because my data needs to be an instance of <code>Interpret</code> which is pretty much impossilbe to do. My data all have <code>Int</code>, <code>Map</code> etc ... which doesn&#39;t have  <code>Interpret</code> instances by default. I could extract my types and modify it to make it <code>interpretable</code> then generate this way the schema, convert my yaml to dhall. I could then use dhall to generate yaml which then could be convert to the original datat type. Unfortunately , I don&#39;t have time for that ."}], "tags": [], "owner": {"reputation": 34015, "user_id": 1026598, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/e4cf2da845e7862bd0b0e4edd405f77d?s=128&d=identicon&r=PG", "display_name": "Gabriel Gonzalez", "link": "https://stackoverflow.com/users/1026598/gabriel-gonzalez"}, "is_accepted": true, "score": 8, "last_activity_date": 1561946887, "creation_date": 1561946887, "answer_id": 56829335, "question_id": 56824404, "link": "https://stackoverflow.com/questions/56824404/is-there-a-way-to-generate-a-dhall-schema-from-an-haskell-datatype/56829335#56829335", "title": "Is there a way to generate a dhall schema from an haskell datatype?", "body": "<p>Yes, you can generate the Dhall type from the Haskell type.</p>\n\n<p>Here is an example of how to do so:</p>\n\n<pre><code>{-# LANGUAGE DeriveGeneric    #-}\n{-# LANGUAGE DeriveAnyClass   #-}\n{-# LANGUAGE TypeApplications #-}\n\nimport Data.Text (Text)\nimport Dhall (Interpret)\nimport GHC.Generics (Generic)\nimport Numeric.Natural (Natural)\n\nimport qualified Data.Text.IO as Text.IO\nimport qualified Dhall\nimport qualified Dhall.Core\n\ndata Mood = Happy | Sad\n    deriving (Generic, Interpret)\n\ndata Person = Person { age :: Natural, name :: Text, mood :: Mood }\n    deriving (Generic, Interpret)\n\nmain :: IO ()\nmain = do\n    Text.IO.putStrLn (Dhall.Core.pretty (Dhall.expected (Dhall.auto @Person)))\n</code></pre>\n\n<p>... which outputs:</p>\n\n<pre><code>$ runghc ./example.hs\n{ age : Natural, name : Text, mood : &lt; Happy | Sad &gt; }\n</code></pre>\n"}], "owner": {"reputation": 20862, "user_id": 376113, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/d3a5bd12fe6d876527a3cf4ac0de5fc6?s=128&d=identicon&r=PG", "display_name": "mb14", "link": "https://stackoverflow.com/users/376113/mb14"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 238, "favorite_count": 2, "accepted_answer_id": 56829335, "answer_count": 1, "score": 6, "last_activity_date": 1561946887, "creation_date": 1561893262, "question_id": 56824404, "link": "https://stackoverflow.com/questions/56824404/is-there-a-way-to-generate-a-dhall-schema-from-an-haskell-datatype", "title": "Is there a way to generate a dhall schema from an haskell datatype?", "body": "<p>I'm trying to rewrite a BIG yaml configuration file used in Haksell applicationusing dhall.\nTo do so I'm using <code>json-to-dhall</code> which requires a SCHEMA which is the type of the resuting expression. The problem is the actual schema is almost impossible to write manually as involves lots of sum types (and nested sum types). I tried to generate the schema by converting manually some parts of the yaml to dhall, and run <code>dhall type</code>. This give a schema that I can use with <code>jston-to-dhall</code> later. This works for simple types, but now I'm facing the problem with unions (of unions). Dhall needs type annotations to write the file I'm using to generate the type ... So I was wondering is there a way (either using a tool or modifying my haskell application) to either dump an Haskell data to a correct dhall file or at least generate the schema from the Haskell type.</p>\n"}, {"tags": ["haskell", "yesod"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1561887656, "post_id": 56823694, "comment_id": 100200285, "body": "As you say, it can evaluate to <code>m ()</code> for <i>any</i> <code>MonadWidget m</code>. So it can also provide a <code>WidgetFor site ()</code>, which is what we need to make the code compile."}, {"owner": {"reputation": 719, "user_id": 540718, "user_type": "registered", "accept_rate": 41, "profile_image": "https://www.gravatar.com/avatar/64bb401eff530b423eae58217f2b1362?s=128&d=identicon&r=PG", "display_name": "nemron", "link": "https://stackoverflow.com/users/540718/nemron"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1561889420, "post_id": 56823694, "comment_id": 100200554, "body": "Not sure, if I got you. What if <code>setTitle &quot;...&quot; :: MonadWidget m =&gt; m ()</code> returns another instance of <code>MonadWidget</code>? I&#39;d understand the other way around, that is, if a function requires a <code>MonadWidget</code> as a parameter and you pass a <code>WidgetFor site</code> in. As <code>WidgetFor site</code> has an instance of <code>MonadWidget</code>. But here, we have a function that requires a <code>WidgetFor site</code> and we pass in <i>any</i> <code>MonadWidget</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1561889736, "post_id": 56823694, "comment_id": 100200606, "body": "No, <code>setTitle</code> does not return <i>some</i> instance it chooses, it can return <i>any</i> instance the <i>caller</i> chooses. All type variables like <code>m</code> in Haskell are implicitly quantified universally -- this means the caller chooses what they are. E.g. <code>Nothing :: Maybe a</code> means you can use <code>Nothing</code> where you need <code>Maybe Int</code>, choosing <code>a=Int</code>, but also where you need <code>Maybe String</code>, etc. It&#39;s a &quot;for all m&quot; vs &quot;for some m&quot; distinction, from a logical view."}, {"owner": {"reputation": 719, "user_id": 540718, "user_type": "registered", "accept_rate": 41, "profile_image": "https://www.gravatar.com/avatar/64bb401eff530b423eae58217f2b1362?s=128&d=identicon&r=PG", "display_name": "nemron", "link": "https://stackoverflow.com/users/540718/nemron"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1561890066, "post_id": 56823694, "comment_id": 100200654, "body": "I guess &quot;[...] this means the caller chooses what they are.&quot; is the answer. Thx."}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 4, "last_activity_date": 1561890453, "creation_date": 1561890453, "answer_id": 56824102, "question_id": 56823694, "link": "https://stackoverflow.com/questions/56823694/how-does-monadwidget-fit-to-widgetfor/56824102#56824102", "title": "How does `MonadWidget` fit to `WidgetFor`?", "body": "<pre><code>setTitle :: MonadWidget m =&gt; Html -&gt; m ()\n</code></pre>\n\n<p>reads as the following contract between the caller and the implementation of the function</p>\n\n<ul>\n<li>the caller has to choose <code>m</code></li>\n<li>the caller must ensure that the chosen <code>m</code> satisfies the <code>MonadWidget m</code> constraint</li>\n<li>the caller must pass a <code>Html</code> argument</li>\n<li>the function will return a value of type <code>m ()</code></li>\n</ul>\n\n<p>Note that it is not <code>setTitle</code> to choose <code>m</code>. The function is polymorphic (or \"generic\" in OOP lingo), and works at any <code>m</code> the caller chooses.</p>\n\n<p>Since <code>defaultLayout</code> requires <code>m = WidgetFor site</code>, GHC infers that monad to be used at the <code>setTitle</code> call. Everything then type checks.</p>\n"}], "owner": {"reputation": 719, "user_id": 540718, "user_type": "registered", "accept_rate": 41, "profile_image": "https://www.gravatar.com/avatar/64bb401eff530b423eae58217f2b1362?s=128&d=identicon&r=PG", "display_name": "nemron", "link": "https://stackoverflow.com/users/540718/nemron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 62, "favorite_count": 1, "accepted_answer_id": 56824102, "answer_count": 1, "score": 2, "last_activity_date": 1561890453, "creation_date": 1561886129, "question_id": 56823694, "link": "https://stackoverflow.com/questions/56823694/how-does-monadwidget-fit-to-widgetfor", "title": "How does `MonadWidget` fit to `WidgetFor`?", "body": "<p>In Yesod there is</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>defaultLayout :: WidgetFor site () -&gt; HandlerFor site Html\n\nsetTitle :: MonadWidget m =&gt; Html =&gt; m ()\n</code></pre>\n\n<p><code>WidgetFor site</code> has an instance of <code>MonadWidget</code>. But why does <code>defaultLayout $ setTitle \"...\"</code> compile?</p>\n\n<p><code>setTitle \"...\" :: MonadWidget m =&gt; m ()</code> evaluates to <em>any</em> <code>MonadWidget m</code> (e.g. <code>MaybeT m</code> also has an instance of <code>MonadWidget</code>).</p>\n\n<p>What am I missing here?</p>\n"}, {"tags": ["haskell", "ghc", "pattern-synonyms"], "comments": [{"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 0, "creation_date": 1561921683, "post_id": 56821863, "comment_id": 100207167, "body": "That wiki article suggests you can use <code>{-# COMPLETE Single :: () #-}</code>\u2014have you tried that?"}, {"owner": {"reputation": 432, "user_id": 1567363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Ee4RG.jpg?s=128&g=1", "display_name": "Kazuki Okamoto", "link": "https://stackoverflow.com/users/1567363/kazuki-okamoto"}, "reply_to_user": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 1, "creation_date": 1561949596, "post_id": 56821863, "comment_id": 100211366, "body": "@JonPurdy I reflected your comment."}], "answers": [{"comments": [{"owner": {"reputation": 432, "user_id": 1567363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Ee4RG.jpg?s=128&g=1", "display_name": "Kazuki Okamoto", "link": "https://stackoverflow.com/users/1567363/kazuki-okamoto"}, "edited": false, "score": 0, "creation_date": 1562042334, "post_id": 56835783, "comment_id": 100241924, "body": "Addition: GHC says that Orphan COMPLETE pragmas not supported, a COMPLETE pragma must mention at least one data constructor or pattern synonym defined in the same module."}], "tags": [], "owner": {"reputation": 8621, "user_id": 1848029, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/qfjAy.jpg?s=128&g=1", "display_name": "lehins", "link": "https://stackoverflow.com/users/1848029/lehins"}, "is_accepted": true, "score": 5, "last_activity_date": 1587831745, "last_edit_date": 1587831745, "creation_date": 1561984350, "answer_id": 56835783, "question_id": 56821863, "link": "https://stackoverflow.com/questions/56821863/writing-a-complete-pragma-for-a-polymorphic-pattern-synonym/56835783#56835783", "title": "Writing a COMPLETE pragma for a polymorphic pattern synonym?", "body": "<p>I am no expert on <code>PatternSynonyms</code>, but from the looks of it, in case of polymorphic patterns we need to specify exact types that make them complete.</p>\n\n<p>In the case of <a href=\"https://hackage.haskell.org/package/Only-0.1/docs/Data-Tuple-Only.html\" rel=\"nofollow noreferrer\"><code>Only</code></a> this would be:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# COMPLETE Single :: Only #-}\n</code></pre>\n\n<p>For the sake of example let's add another instance to <code>Single</code>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>\ninstance Single Identity where\n  wrap = Identity\n  unwrap (Identity a) = a\n\npattern Single :: Single t =&gt; a -&gt; t a\npattern Single a &lt;- (unwrap -&gt; a) where\n  Single a = wrap a\n\n{-# COMPLETE Single :: Only #-}\n{-# COMPLETE Single :: Identity #-}\n</code></pre>\n\n<p>Which makes GHC to stop complaining:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>\u03bb&gt; Single a = wrap 1 :: Identity Int\n\u03bb&gt; Single a = wrap 1 :: Only Int\n</code></pre>\n"}], "owner": {"reputation": 432, "user_id": 1567363, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Ee4RG.jpg?s=128&g=1", "display_name": "Kazuki Okamoto", "link": "https://stackoverflow.com/users/1567363/kazuki-okamoto"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 235, "favorite_count": 1, "accepted_answer_id": 56835783, "answer_count": 1, "score": 8, "last_activity_date": 1587831745, "creation_date": 1561858448, "last_edit_date": 1561949420, "question_id": 56821863, "link": "https://stackoverflow.com/questions/56821863/writing-a-complete-pragma-for-a-polymorphic-pattern-synonym", "title": "Writing a COMPLETE pragma for a polymorphic pattern synonym?", "body": "<p>I have the following code and I don't know what should feed at <code>??</code>. Or cannot polymorphic patterns make complete?</p>\n\n<pre><code>{-# LANGUAGE PatternSynonyms #-}\n{-# LANGUAGE ViewPatterns    #-}\n\nmodule Data.Tuple.Single.Class\n  ( Single (..)\n  , pattern Single\n  ) where\n\nclass Single t where\n  wrap :: a -&gt; t a\n  unwrap :: t a -&gt; a\n\npattern Single :: Single t =&gt; a -&gt; t a\npattern Single a &lt;- (unwrap -&gt; a) where\n  Single a = wrap a\n\n{-# COMPLETE Single :: ?? #-}\n</code></pre>\n\n<p><a href=\"https://gitlab.haskell.org/ghc/ghc/wikis/pattern-synonyms/complete-sigs\" rel=\"nofollow noreferrer\">GHC document</a> says that when all the conlikes are polymorphic you must type conlike.</p>\n\n<p>When making <code>??</code> <code>()</code>, the compilation is successful. But what does <code>()</code> mean? And GHC says still non-exhaustive on usage.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE PatternSynonyms #-}\n\n{-# OPTIONS_GHC -Wno-orphans #-}\n\nmodule Data.Tuple.Single.Only\n  ( Single (..)\n  , pattern Single\n  ) where\n\nimport           Data.Tuple.Only         (Only (Only, fromOnly))\nimport           Data.Tuple.Single.Class (Single (unwrap, wrap), pattern Single)\n\ninstance Single Only where\n  wrap = Only\n  unwrap = fromOnly\n</code></pre>\n\n<pre class=\"lang-hs prettyprint-override\"><code>ghci&gt; Single a = wrap 1 :: Only Int\n\n&lt;interactive&gt;:2:1: warning: [-Wincomplete-uni-patterns]\n    Pattern match(es) are non-exhaustive\n    In a pattern binding: Patterns not matched: _\n</code></pre>\n\n<ul>\n<li>GHC 8.6.5</li>\n</ul>\n"}, {"tags": ["haskell", "build", "module", "haskell-stack"], "answers": [{"comments": [{"owner": {"reputation": 1474, "user_id": 8025936, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/Kue08.png?s=128&g=1", "display_name": "schuelermine", "link": "https://stackoverflow.com/users/8025936/schuelermine"}, "edited": false, "score": 0, "creation_date": 1561858413, "post_id": 56821811, "comment_id": 100196519, "body": "But what if I want to build <code>Che</code> on its own?"}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 3, "last_activity_date": 1561943002, "last_edit_date": 1561943002, "creation_date": 1561857385, "answer_id": 56821811, "question_id": 56821589, "link": "https://stackoverflow.com/questions/56821589/does-building-a-module-using-stack-make-it-available-globally/56821811#56821811", "title": "Does building a module using Stack make it available globally?", "body": "<p>The Stack documentation section on <a href=\"https://docs.haskellstack.org/en/stable/GUIDE/#multi-package-projects\" rel=\"nofollow noreferrer\">multi-package projects</a> has a little bit about this, but unfortunately chooses to show an example using two off-the-shelf packages which makes things confusing.</p>\n\n<p>The general idea is to put your <code>mig</code> and <code>che</code> project directories under a common project directory, and then put a single <code>stack.yaml</code> file in the common directory that lists <code>mig</code> and <code>che</code> as the packages to be built (instead of the usual \".\" package).  The dependency in <code>che.cabal</code> on <code>mig</code> will then automatically be resolved.</p>\n\n<p>Here's a complete, minimal example.  If you run <code>stack build</code> under <code>multi</code>, it will build <code>che</code>, then <code>mig</code>, and <code>stack exec mig</code> will run the program.</p>\n\n<p>Also, note that if you put the two existing Stack project directories in place, I believe you should remove their local <code>stack.yaml</code> files, and either merge the contents manually into a single <code>multi/stack.yaml</code> or run <code>stack init</code> in <code>multi</code> to generate a fresh <code>multi/stack.yaml</code> from the contents of <code>mig/mig.cabal</code> and <code>che/che.cabal</code>.  There should only be one <code>stack.yaml</code> for each collection of projects being built as a unit.</p>\n\n<h3>multi/stack.yaml</h3>\n\n<pre><code>resolver: lts-13.26\npackages:\n- che\n- mig\n</code></pre>\n\n<h3>multi/che/che.cabal</h3>\n\n<pre><code>name:                che\nversion:             0.1.0.0\nbuild-type:          Simple\ncabal-version:       &gt;=1.10\nlibrary\n  default-language:    Haskell2010\n  exposed-modules:     Che\n  build-depends:       base &gt;= 4.7 &amp;&amp; &lt; 5\n</code></pre>\n\n<h3>multi/che/Che.hs</h3>\n\n<pre><code>module Che where\nche :: IO ()\nche = putStrLn \"Viva la revolution\"\n</code></pre>\n\n<h3>multi/mig/mig.cabal</h3>\n\n<pre><code>name:                mig\nversion:             0.1.0.0\nbuild-type:          Simple\ncabal-version:       &gt;=1.10\nexecutable mig\n  default-language:    Haskell2010\n  main-is:             Main.hs\n  build-depends:       base &gt;= 4.7 &amp;&amp; &lt; 5\n                     , che\n</code></pre>\n\n<h3>multi/mig/Main.hs</h3>\n\n<pre><code>import Che\nmain :: IO ()\nmain = che &gt;&gt; che &gt;&gt; che\n</code></pre>\n\n<h2>Update: Developing <code>che</code> on its own</h2>\n\n<p>Note that, even if you are also working on developing/building <code>che</code> on its own, the above <code>multi</code> setup would be the recommended way of setting up the <code>mig</code> project.  In particular, if you wanted to build <code>che</code> only without rebuilding <code>mig</code> (e.g., if you know <code>mig</code> is going to be broken while you're working on <code>che</code>), you could use the command <code>stack build che</code> instead of <code>stack build</code>.</p>\n\n<p>If you want to be able to continue developing <code>che</code> without interfering with the version of <code>che</code> being used by <code>mig</code>, then the simplest thing to do is to <code>git clone</code> a new repository with working directory, and you can have a copy of \"bleeding edge\" <code>che</code> (with its own separate single-package <code>stack.yaml</code>) that you can develop and build independently, and the \"stable\" <code>che</code> on which <code>mig</code> depends, which you can <code>git pull</code> as required.  It'll be a good idea to leave <code>stack.yaml</code> out of Git, or name it <code>stack.yaml.template</code> or something and symlink or copy it to <code>stack.yaml</code>.</p>\n\n<p>If you truly want to treat your <code>che</code> the same way Stack treats Stackage packages and have a single-package project for <code>mig</code> that somehow depends on a global <code>che</code> package, then you can either: (1) start uploading <code>che</code> to Stackage and treat it literally like any other Stackage package; or (2) add an <code>extra_deps</code> to the <code>stack.yaml</code> file for <code>mig</code> that points to a supported global package source.  This can be a <a href=\"https://docs.haskellstack.org/en/stable/pantry/#git-and-mercurial-repos\" rel=\"nofollow noreferrer\">GitHub or other web-accessible repository</a>; it can be an <a href=\"https://docs.haskellstack.org/en/stable/pantry/#archives-https-or-local-filepath\" rel=\"nofollow noreferrer\">\"archive\"</a> (e.g., in <code>.tar.gz</code> format created with <code>git archive</code>) stored in the local filesystem; or even a Git repository in the local filesystem.  For this last option, absolute paths work fine, but I don't think relatively paths are directly supported.  It would look something like:</p>\n\n<pre><code># in mig's stack.yaml\nextra-deps:\n- git: /home/me/src/haskell/che\n  commit: 8ab4bf759dd934fa31cfca324748af894ca0e224\n</code></pre>\n"}], "owner": {"reputation": 1474, "user_id": 8025936, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/Kue08.png?s=128&g=1", "display_name": "schuelermine", "link": "https://stackoverflow.com/users/8025936/schuelermine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 58, "favorite_count": 0, "accepted_answer_id": 56821811, "answer_count": 1, "score": 2, "last_activity_date": 1561943002, "creation_date": 1561852719, "last_edit_date": 1561863602, "question_id": 56821589, "link": "https://stackoverflow.com/questions/56821589/does-building-a-module-using-stack-make-it-available-globally", "title": "Does building a module using Stack make it available globally?", "body": "<p>I have started using Haskell Stack, and don't have much knowledge about it.</p>\n\n<p>I'm working on two projects concurrently, both of which are GIT/Cabal/Stack setup.<br>\nLet's say, <code>mig</code> and <code>che</code>.<br>\nNow the problem is that one of these projects depends on the other.<br>\nI'm not sure whether or not it is possible to just add <code>mig</code> to the <code>stack.yaml</code> of <code>che</code>, even after having built it using <code>stack build</code>, since GHCi (<code>stack ghci</code>) doesn't permit <code>import Mig.Example</code>, raising an error.</p>\n\n<p>Is this even a valid problem? What should I do? Can this work?</p>\n"}, {"tags": ["haskell", "printf"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1561833497, "post_id": 56819962, "comment_id": 100192917, "body": "What do you mean with &quot;It&#39;s horrible&quot;."}, {"owner": {"reputation": 448, "user_id": 4743466, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/35b9eee7a42e06c9845b2a5df2be4596?s=128&d=identicon&r=PG", "display_name": "Erik Vesterlund", "link": "https://stackoverflow.com/users/4743466/erik-vesterlund"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1561834018, "post_id": 56819962, "comment_id": 100193023, "body": "@WillemVanOnsem I&#39;m not very familiar with all the lingo yet, but... lack of overloading? Without the specialization <code>[Double] -&gt; [String]</code> it won&#39;t work. Ideally, I&#39;d say, ghc would be able to infer that it&#39;s <code>Fractional a =&gt; [a] -&gt; [String]</code>. Stuff like that."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1561850500, "post_id": 56819962, "comment_id": 100195741, "body": "<code>printf&#39; = map (printf &quot;%.2f&quot;)</code> is equivalent."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 3, "last_activity_date": 1561833727, "creation_date": 1561833727, "answer_id": 56820005, "question_id": 56819962, "link": "https://stackoverflow.com/questions/56819962/print-list-of-floats-with-format/56820005#56820005", "title": "Print list of floats with format", "body": "<p>You can make use of <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-List.html#v:intercalate\" rel=\"nofollow noreferrer\"><strong><code>intercalate :: [a] -&gt; [[a]] -&gt; [a]</code></strong></a> to put commas between the elements, and do some additional list processing to add a <code>'['</code> in front and an <code>']'</code> at the end, like:</p>\n\n<pre><code>import Data.List(intercalate)\n\nmain :: IO ()\nmain = putStrLn ('[' : intercalate &quot;,&quot; (printf' [3.14159]) ++ &quot;]&quot;)</code></pre>\n\n<p>this then yields:</p>\n\n<pre><code>Prelude Text.Printf Data.List&gt; main\n[3.14]\n</code></pre>\n\n<p>Note that you can simplify your <code>printf'</code> to just:</p>\n\n<pre><code>printf' :: [Double] -&gt; [String]\nprintf' = map (printf &quot;%.2f&quot;)</code></pre>\n"}, {"comments": [{"owner": {"reputation": 448, "user_id": 4743466, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/35b9eee7a42e06c9845b2a5df2be4596?s=128&d=identicon&r=PG", "display_name": "Erik Vesterlund", "link": "https://stackoverflow.com/users/4743466/erik-vesterlund"}, "edited": false, "score": 1, "creation_date": 1561836926, "post_id": 56820275, "comment_id": 100193670, "body": "Maybe I should just use <code>Numeric</code> after all. But, how is it that, in defining <code>format</code>, <code>shoFFloat</code> can take three arguments, when its signature says it takes only two?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 448, "user_id": 4743466, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/35b9eee7a42e06c9845b2a5df2be4596?s=128&d=identicon&r=PG", "display_name": "Erik Vesterlund", "link": "https://stackoverflow.com/users/4743466/erik-vesterlund"}, "edited": false, "score": 0, "creation_date": 1561837400, "post_id": 56820275, "comment_id": 100193755, "body": "@ErikVesterlund Its &quot;return type&quot;, <code>ShowS</code>, is a type alias for a function type."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 448, "user_id": 4743466, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/35b9eee7a42e06c9845b2a5df2be4596?s=128&d=identicon&r=PG", "display_name": "Erik Vesterlund", "link": "https://stackoverflow.com/users/4743466/erik-vesterlund"}, "edited": false, "score": 2, "creation_date": 1561837405, "post_id": 56820275, "comment_id": 100193757, "body": "@ErikVesterlund It takes two arguments and it returns a <code>ShowS</code> which is a function <code>String -&gt; String</code>, taking the third argument."}, {"owner": {"reputation": 57, "user_id": 11704489, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/432cbd6fb8010702b84e91527da5a1fb?s=128&d=identicon&r=PG&f=1", "display_name": "Xander", "link": "https://stackoverflow.com/users/11704489/xander"}, "edited": false, "score": 0, "creation_date": 1561837563, "post_id": 56820275, "comment_id": 100193795, "body": "You can also choose how many digits you want to use. I hardcoded it to 2, since that satisfied your needs, but it is customizable. More on that <a href=\"https://hoogle.haskell.org/?hoogle=showFFloat\" rel=\"nofollow noreferrer\">here</a> ,   I probably should&#39;ve mentioned that in my answer too. Anyway, I never use Haskell without at least having 3 tabs of Hoogle available in the background too :)"}], "tags": [], "owner": {"reputation": 57, "user_id": 11704489, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/432cbd6fb8010702b84e91527da5a1fb?s=128&d=identicon&r=PG&f=1", "display_name": "Xander", "link": "https://stackoverflow.com/users/11704489/xander"}, "is_accepted": false, "score": 3, "last_activity_date": 1561836110, "creation_date": 1561836110, "answer_id": 56820275, "question_id": 56819962, "link": "https://stackoverflow.com/questions/56819962/print-list-of-floats-with-format/56820275#56820275", "title": "Print list of floats with format", "body": "<p>You can import the Numeric library to achieve this. I've quickly written a small program as an example, without the use of the printf function.</p>\n\n<pre><code>module Main where\n\nimport Numeric\n\nmain :: IO ()\nmain = putStrLn \"hello world\"\n\na = [1.111, 2.2222222222222, 3.33333333333333333333333]\n\nprintList :: [Double] -&gt; [String]\nprintList xs = map format xs\n\nformat :: Double -&gt; String\nformat x = showFFloat (Just 2) x \"\"\n</code></pre>\n\n<p>where the simple call <code>printList a</code> will result in:</p>\n\n<pre><code>[\"1.11\",\"2.22\",\"3.33\"]\n</code></pre>\n"}], "owner": {"reputation": 448, "user_id": 4743466, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/35b9eee7a42e06c9845b2a5df2be4596?s=128&d=identicon&r=PG", "display_name": "Erik Vesterlund", "link": "https://stackoverflow.com/users/4743466/erik-vesterlund"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "accepted_answer_id": 56820005, "answer_count": 2, "score": 2, "last_activity_date": 1561836110, "creation_date": 1561833327, "question_id": 56819962, "link": "https://stackoverflow.com/questions/56819962/print-list-of-floats-with-format", "title": "Print list of floats with format", "body": "<p>In Haskell, how can I print a list of floats (or <code>Fractional</code>, rather) and also specify formatting? E.g. <code>putStrLn $ magic \"%.2f\" [3.14159]</code> should print <code>[3.14]</code>.</p>\n\n<p>As pointed out <a href=\"https://stackoverflow.com/questions/15566299/haskell-printf-to-string\">here</a> there is <code>Text.Printf (printf)</code>, but I don't understand how to use it with lists?</p>\n\n<p>One thing that 'works' is</p>\n\n<pre><code>printf' :: [Double] -&gt; [String]\nprintf' l = map (\\x -&gt; printf \"%.2f\" x) l\n</code></pre>\n\n<p>with</p>\n\n<pre><code>main = do\n  putStrLn $ show (printf' [3.14159])\n</code></pre>\n\n<p>but it's horrible, there must be another way.</p>\n\n<p>The first two examples in <a href=\"https://stackoverflow.com/a/36659084/4743466\">this answer</a> to a similar question don't work at all.</p>\n\n<p>The answer <a href=\"https://stackoverflow.com/a/36663707/4743466\">here</a> is neat enough, but as pointed out is not type-safe, plus it breaks <code>Read</code>/<code>Show</code> interop.</p>\n\n<p>Are there any other alternatives? Thanks.</p>\n"}, {"tags": ["haskell", "ghc", "gadt"], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1561830028, "post_id": 56819385, "comment_id": 100192200, "body": "But why is it needed? Since <code>m</code> appears as a parameter to <code>Bar</code> in the type, unification ought to be able to determine that this <code>m</code> is the one that&#39;s meant... oughtn&#39;t it?"}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1561833795, "post_id": 56819385, "comment_id": 100192975, "body": "@DanielWagner In the same way that GHC always expands e.g. the expression <code>length</code> (polymorphic) to <code>length @_unifVar</code> (monomorphic), it also always expands the hole in <code>Bar @m @a _</code> (constrained) to <code>Bar @m @a (&#47;\\{m a} -&gt; _)</code> (pseudo-syntax, unconstrained). Putting just <code>foo</code> in that hole breaks, because its argument <code>m</code> is ambiguous (imagine adding another context <code>Foo m2</code> to <code>bar</code>\u2014the open world assumption says it should still work, but it won&#39;t). Putting <code>foo @m</code> in that hole is fine."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 2, "last_activity_date": 1561828311, "creation_date": 1561828311, "answer_id": 56819385, "question_id": 56819206, "link": "https://stackoverflow.com/questions/56819206/solving-the-constraint-of-a-class-that-depends-on-a-constraint/56819385#56819385", "title": "Solving the constraint of a class that depends on a constraint", "body": "<p>It looks like you can do this with a type application to help GHC figure out which constraint you're talking about:</p>\n\n<pre><code>bar :: forall m . (Foo m) =&gt; Bar m\nbar = Bar (foo @m)\n</code></pre>\n"}], "owner": {"reputation": 419, "user_id": 2552681, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/S6MOJ.jpg?s=128&g=1", "display_name": "Mario Rom&#225;n", "link": "https://stackoverflow.com/users/2552681/mario-rom%c3%a1n"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 46, "favorite_count": 1, "accepted_answer_id": 56819385, "answer_count": 1, "score": 2, "last_activity_date": 1561828311, "creation_date": 1561826681, "question_id": 56819206, "link": "https://stackoverflow.com/questions/56819206/solving-the-constraint-of-a-class-that-depends-on-a-constraint", "title": "Solving the constraint of a class that depends on a constraint", "body": "<p>I am using <code>ConstraintKinds</code> and <code>MultiParamTypeClasses</code> to get a class that is parameterized by another class.</p>\n\n<p>Assume <code>Foo m</code> says that types that satisfy the constraint <code>m</code> are pointed, that is, <code>(m a) =&gt; a</code>.  From that I try to use it to construct some <code>Bar m</code>.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE AllowAmbiguousTypes   #-}\n{-# LANGUAGE ConstraintKinds       #-}\n{-# LANGUAGE FlexibleInstances     #-}\n{-# LANGUAGE GADTs                 #-}\n{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE RankNTypes            #-}\n{-# LANGUAGE ScopedTypeVariables   #-}\n{-# LANGUAGE TypeOperators         #-}\n\nclass Foo m where\n  foo :: (m a) =&gt; a\n\ndata Bar m where\n  Bar :: ((m a) =&gt; a) -&gt; Bar m\n\nbar :: Foo m =&gt; Bar m\nbar = Bar foo\n</code></pre>\n\n<p>But I get the following error.</p>\n\n<pre><code>Could not deduce (Foo m0) arising from a use of \u2018foo\u2019\n      from the context: Foo m\n</code></pre>\n\n<p>From the context looks like <code>m0</code> should be <code>m</code>. Isn't there a way to make this work? </p>\n\n<hr>\n\n<p>I think right now the problem is that I could define some <code>Foo Pointed a</code> first and then some <code>Foo Pointed2 a</code> and in that case <code>foo</code> would not know what to return, right? The idea is that I would call <code>(bar :: Bar Pointed)</code> or <code>(bar :: Bar Pointed2)</code> and get the two different results. Is something like this possible? Why not?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 3203, "user_id": 2622234, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/a4b0faa804acdb74ea677bc421d5caac?s=128&d=identicon&r=PG", "display_name": "sara", "link": "https://stackoverflow.com/users/2622234/sara"}, "edited": false, "score": 2, "creation_date": 1561800699, "post_id": 56816397, "comment_id": 100186398, "body": "You could use a phantom type parameter which is a type level HList of MachineTypes and make Machine a GADT where the constructor requires a proof that the list contains no machine of the given type already"}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 3203, "user_id": 2622234, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/a4b0faa804acdb74ea677bc421d5caac?s=128&d=identicon&r=PG", "display_name": "sara", "link": "https://stackoverflow.com/users/2622234/sara"}, "edited": false, "score": 4, "creation_date": 1561801206, "post_id": 56816397, "comment_id": 100186487, "body": "@sara&#39;s comment is certainly one way to do it, but wouldn&#39;t it be simpler to just use <a href=\"https://www.stackage.org/haddock/lts-13.26/containers-0.6.0.1/Data-Set.html\" rel=\"nofollow noreferrer\"><code>Data.Set</code></a> and do <code>newtype Machine = Machine { getMachines :: Set MachineType }</code>?"}, {"owner": {"reputation": 115, "user_id": 7292889, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-ThsPYI3RyRU/AAAAAAAAAAI/AAAAAAAAACs/r4lXVkX516k/photo.jpg?sz=128", "display_name": "Nikola Maric", "link": "https://stackoverflow.com/users/7292889/nikola-maric"}, "edited": false, "score": 0, "creation_date": 1561802301, "post_id": 56816397, "comment_id": 100186676, "body": "Thanks for the answers! I will look into HLists and GADTs to see how they work. I was thinking about sets as well, but was wondering if this could be done one level &#39;above&#39;. Waht I wanted to encode is something like <i>&#39;X with addition of Y&#39;</i> and set could be interpreted as both <i>&#39;X with addition of Y&#39;</i> and <i>&#39;Y with addition of X&#39;</i>. With pattern matching, I would first need to deal with &#39;main&#39; thing, that is X, and then recurse downwards to its other components, if I want to. But its definitely and option if I don&#39;t figure how other solution works :)"}], "answers": [{"comments": [{"owner": {"reputation": 115, "user_id": 7292889, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-ThsPYI3RyRU/AAAAAAAAAAI/AAAAAAAAACs/r4lXVkX516k/photo.jpg?sz=128", "display_name": "Nikola Maric", "link": "https://stackoverflow.com/users/7292889/nikola-maric"}, "edited": false, "score": 0, "creation_date": 1561881640, "post_id": 56817092, "comment_id": 100199272, "body": "Thanks for the example and explanations along the way. Got it working, now I&#39;ll take some time to go through tutorials like the ones you posted about <i>singleton</i>  library to get a feeling &#39;why&#39; it&#39;s working. Cheers!"}], "tags": [], "owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "is_accepted": true, "score": 10, "last_activity_date": 1561806791, "creation_date": 1561806791, "answer_id": 56817092, "question_id": 56816397, "link": "https://stackoverflow.com/questions/56816397/is-it-possible-to-have-recursive-sum-type-with-each-level-having-distinct-val/56817092#56817092", "title": "Is it possible to have recursive sum type, with each &#39;level&#39; having distinct value?", "body": "<p>One solution is to specify that you can't extend a <code>Machine</code> with a duplicate <code>MachineType</code>. For that we first need a <a href=\"https://blog.jle.im/entry/introduction-to-singletons-1.html\" rel=\"noreferrer\">singleton</a> type for <code>MachineType</code>:</p>\n\n<pre><code>{-# language TypeInType, GADTs, TypeOperators, ConstraintKinds,\n    UndecidableInstances, TypeFamilies #-}\n\nimport Data.Kind\nimport GHC.TypeLits\n\ndata MachineType = Worker | Flyer | Digger | Observer | Attacker\n\ndata SMachineType t where\n  SWorker   :: SMachineType Worker\n  SFlyer    :: SMachineType Flyer\n  SDigger   :: SMachineType Digger\n  SObserver :: SMachineType Observer\n  SAttacker :: SMachineType Attacker\n</code></pre>\n\n<p>Then we specify a constraint which is satisfiable if something is not contained in a list of <code>MachineType</code>s, and otherwise throws a <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#custom-compile-time-errors\" rel=\"noreferrer\">custom type error</a>:</p>\n\n<pre><code>type family NotElem (x :: MachineType) (xs :: [MachineType]) :: Constraint where\n  NotElem x '[]       = ()\n  NotElem x (x ': xs) = TypeError\n    (Text \"Duplicate MachineTypes are not allowed in Machines\" :$$:\n    (Text \"Can't add \" :&lt;&gt;: ShowType x :&lt;&gt;: Text \" to \"\n     :&lt;&gt;: ShowType (x ': xs)))\n  NotElem x (y ': xs) = NotElem x xs\n</code></pre>\n\n<p>Then <code>Machine</code> is given as a GADT indexed by lists of <code>MachineType</code>s:</p>\n\n<pre><code>data Machine (ts :: [MachineType]) where\n  Single :: SMachineType t -&gt; Machine '[ t ]\n  Multi  :: NotElem t ts =&gt; SMachineType t -&gt; Machine ts -&gt; Machine (t ': ts)\n</code></pre>\n\n<p>The following definition has inferred type <code>Machine '[ 'Flyer, 'Digger, 'Worker]</code>:</p>\n\n<pre><code>m1 = Multi SFlyer (Multi SDigger (Single SWorker))\n</code></pre>\n\n<p>The following definition throws a type error:</p>\n\n<pre><code>m2 = Multi SFlyer (Multi SFlyer (Single SWorker))\n</code></pre>\n\n<p>With the error message being:</p>\n\n<pre><code>   Notes.hs:30:6: error: \u2026\n    \u2022 Duplicate MachineTypes are not allowed in Machines\n      Can't add 'Flyer to '[ 'Flyer, 'Worker]\n    ...\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 3203, "user_id": 2622234, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/a4b0faa804acdb74ea677bc421d5caac?s=128&d=identicon&r=PG", "display_name": "sara", "link": "https://stackoverflow.com/users/2622234/sara"}, "is_accepted": false, "score": 2, "last_activity_date": 1561823378, "last_edit_date": 1561823378, "creation_date": 1561810843, "answer_id": 56817485, "question_id": 56816397, "link": "https://stackoverflow.com/questions/56816397/is-it-possible-to-have-recursive-sum-type-with-each-level-having-distinct-val/56817485#56817485", "title": "Is it possible to have recursive sum type, with each &#39;level&#39; having distinct value?", "body": "<p>It seems I was beaten to it! As a complement to Andr\u00e1s' answer, I came up with a version that is similar, but uses value level proofs of the uniqueness of each machine type.</p>\n\n<p>This is probably less ergonomic in practical use cases, but it does have a certain \"proof relevant mathematics\" charm (or so I delude myself into thinking!)</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\n{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE KindSignatures #-}\n{-# LANGUAGE RankNTypes #-}\n{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE PolyKinds #-}\n{-# LANGUAGE TypeApplications #-}\n{-# LANGUAGE EmptyCase #-}\n{-# LANGUAGE LambdaCase #-}\n{-# LANGUAGE TypeFamilies #-}\n\nimport Prelude\n\nimport Data.Kind (Type)\nimport Data.Void (Void)\nimport Data.Proxy (Proxy(..))\n\ndata MachineType\n  = Worker\n  | Flyer\n  | Digger\n  | Observer\n  | Attacker\n  deriving (Show, Eq)\n\ndata In xs x where\n  Here :: forall k (xs :: [k]) (x :: k)\n    . In (x ': xs) x\n  There :: forall k (xs :: [k]) (x :: k) (y :: k)\n    . In xs x -&gt; In (y ': xs) x\n\ntype family Not a where\n  Not a = (a -&gt; Void)\n\ndata Machine :: [MachineType] -&gt; Type where\n  Single :: forall (t :: MachineType) (proxy :: MachineType -&gt; Type)\n    . proxy t -&gt; Machine '[t]\n  Multi :: forall (t :: MachineType) (ts :: [MachineType]) (proxy :: MachineType -&gt; Type)\n    . Not (In ts t) -&gt; proxy t -&gt; Machine ts -&gt; Machine (t ': ts)\n\nsimpleMachine :: Machine '[ 'Worker ]\nsimpleMachine = Single Proxy\n\nmultiMachine :: Machine '[ 'Flyer, 'Attacker ]\nmultiMachine = Multi p (Proxy @'Flyer) $ Single (Proxy @'Attacker)\n  where\n    p :: Not (In '[ 'Attacker ] 'Flyer)\n    p = \\case\n      There l -&gt; case l of\n</code></pre>\n"}], "owner": {"reputation": 115, "user_id": 7292889, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-ThsPYI3RyRU/AAAAAAAAAAI/AAAAAAAAACs/r4lXVkX516k/photo.jpg?sz=128", "display_name": "Nikola Maric", "link": "https://stackoverflow.com/users/7292889/nikola-maric"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 301, "favorite_count": 4, "accepted_answer_id": 56817092, "answer_count": 2, "score": 11, "last_activity_date": 1561823378, "creation_date": 1561799816, "question_id": 56816397, "link": "https://stackoverflow.com/questions/56816397/is-it-possible-to-have-recursive-sum-type-with-each-level-having-distinct-val", "title": "Is it possible to have recursive sum type, with each &#39;level&#39; having distinct value?", "body": "<p>I was wondering if it is possible (I guess it is :) ) to have recursive sum type where we have a value of type X on every level, but somehow restrict ourselves that on every level of recursion we have distinct value of X?</p>\n\n<p>For example, if I have</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>data MachineType = Worker | Flyer | Digger | Observer | Attacker\ndata Machine = Single MachineType | Multi MachineType Machine\n</code></pre>\n\n<p>type system would allow me to construct Machine with following type:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>Multi Worker (Multi Worker (Single Worker))\n</code></pre>\n\n<p>but I want this to be restricted, so that only different MachineType-s are allowed.</p>\n\n<p>Is there a way to encode this in type system?</p>\n\n<p>You can just point me in the right direction, as I kinda don't know what to google :) (haskell set-like recursive sum types?)</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1561837202, "post_id": 56815672, "comment_id": 100193720, "body": "If you tried to minimize this (as I did) I think you would have been able to diagnose the problem yourself. You really should try to make that a habit -- you&#39;ll get much better at debugging things pretty much instantly."}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 2, "last_activity_date": 1561837061, "creation_date": 1561837061, "answer_id": 56820375, "question_id": 56815672, "link": "https://stackoverflow.com/questions/56815672/unexplained-behavior-of-nodemapm-fglgraph-library/56820375#56820375", "title": "Unexplained behavior of NodeMapM (FGLGraph Library)", "body": "<p>Re-adding a node deletes all edges out of that node. See <a href=\"https://hackage.haskell.org/package/fgl-5.7.0.1/docs/src/Data.Graph.Inductive.Graph.html#insNode\" rel=\"nofollow noreferrer\">the source of <code>insNode</code></a>, which is what <code>insMapNodesM</code> eventually calls:</p>\n\n<pre><code>insNode (v,l) = (([],v,l,[])&amp;)\n</code></pre>\n\n<p>The two empty lists are for incoming and outgoing edges.</p>\n\n<p>This... seems like an unfortunate behavior for <code>insMapNodesM</code> to me. I doubt very much you'll get them to change it now, though; backwards-compatibility concerns would make me nervous about changing that behavior in a library which has been \"in the wild\" for so long.</p>\n"}], "owner": {"reputation": 1069, "user_id": 2153280, "user_type": "registered", "accept_rate": 82, "profile_image": "https://i.stack.imgur.com/zkQvQ.jpg?s=128&g=1", "display_name": "Alberto Capitani", "link": "https://stackoverflow.com/users/2153280/alberto-capitani"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 31, "favorite_count": 0, "accepted_answer_id": 56820375, "answer_count": 1, "score": 0, "last_activity_date": 1561837061, "creation_date": 1561791354, "question_id": 56815672, "link": "https://stackoverflow.com/questions/56815672/unexplained-behavior-of-nodemapm-fglgraph-library", "title": "Unexplained behavior of NodeMapM (FGLGraph Library)", "body": "<p>I'm going to represent arbitrary ariety relationships by a graph. In this way the context of each node would show all the relationships in which it is present. I started with properties, which are unary relations.</p>\n\n<p>I found myself faced with a strange behavior of NodeMapM monad, which gives different results (<strong>LEdges</strong>) for sequences of functions that seem to me equivalent. Where am I wrong?</p>\n\n<pre><code>import Data.Graph.Inductive.Graph (empty)\nimport Data.Graph.Inductive.PatriciaTree\nimport Data.Graph.Inductive.NodeMap\n\n\n\np1 = (\"P1\", ['A','B','C','D'])\np2 = (\"P2\", ['B','C','E','F'])\np3 = (\"P3\", ['A','C','F','G'])\n\ntoLedges :: (a, [b]) -&gt; [(b,b,a)]\ntoLedges (le,xs) = zipWith (\\x1 x2 -&gt; (x1,x2,le)) (init xs) (tail xs)\n\n\nex1 :: NodeMapM Char String Gr ()\nex1 = do insMapNodesM  (snd p1)\n         insMapNodesM  (snd p2)\n         insMapNodesM  (snd p3)\n         insMapEdgesM  (toLedges p1)\n         insMapEdgesM  (toLedges p2)\n         insMapEdgesM  (toLedges p3)\n\n-- run empty ex1 :: ((),(NodeMap Char, Gr Char String))\n\n{-  (()\n    , (NodeMap {map = fromList [('A',1),('B',2),('C',3),('D',4),('E',5),('F',6),('G',7)], key = 8}\n      ,mkGraph [(1,'A'),(2,'B'),(3,'C'),(4,'D'),(5,'E'),(6,'F'),(7,'G')]\n               [(1,2,\"P1\"),(1,3,\"P3\"),(2,3,\"P1\"),(2,3,\"P2\"),(3,4,\"P1\"),(3,5,\"P2\"),(3,6,\"P3\"),(5,6,\"P2\"),(6,7,\"P3\")]\n      )\n    )\n-}\n\nex2 :: NodeMapM Char String Gr ()\nex2 = do insMapNodesM  (snd p1)\n         insMapEdgesM  (toLedges p1)\n         insMapNodesM  (snd p2)\n         insMapEdgesM  (toLedges p2)\n         insMapNodesM  (snd p3)\n         insMapEdgesM  (toLedges p3)\n\n-- run empty ex2 :: ((),(NodeMap Char, Gr Char String))\n\n{-  (()\n    , (NodeMap {map = fromList [('A',1),('B',2),('C',3),('D',4),('E',5),('F',6),('G',7)], key = 8}\n      ,mkGraph [(1,'A'),(2,'B'),(3,'C'),(4,'D'),(5,'E'),(6,'F'),(7,'G')]\n               [(1,3,\"P3\"),(2,3,\"P2\"),(3,6,\"P3\"),(5,6,\"P2\"),(6,7,\"P3\")]\n      )\n    )\n-}\n</code></pre>\n"}, {"tags": ["haskell", "higher-kinded-types", "data-kinds"], "comments": [{"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 3, "creation_date": 1561792715, "post_id": 56815339, "comment_id": 100185114, "body": "Part of the issue is that the kind <code>[*]</code> does not have any types which have values. The type checker will reject your <code>ensurePermission</code> because of this. You can only have types of kind <code>*</code> (or <code>#</code>) in places where you have values, if that makes sense. You need something like a <code>Proxy</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1561793673, "post_id": 56815339, "comment_id": 100185257, "body": "Are you sure you don&#39;t want <code>type AppM (perms :: [*]) = ReaderT (Hlist perms) IO</code> instead? I.e., a reader accessing to a value for any type in the list-of-types?"}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "reply_to_user": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1561796861, "post_id": 56815339, "comment_id": 100185738, "body": "@David I&#39;m not sure I understand you completely. More so because I&#39;m drawing inspiration from Servant&#39;s <code>Context</code> type and <code>HasContextEntry</code> type-class - <a href=\"https://www.stackage.org/haddock/lts-12.1/servant-server-0.14.1/Servant-Server.html#t:Context\" rel=\"nofollow noreferrer\">stackage.org/haddock/lts-12.1/servant-server-0.14.1/&hellip;</a>"}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1561797187, "post_id": 56815339, "comment_id": 100185795, "body": "@chi it could be that you&#39;re right. I&#39;m assuming an <code>HList</code> is a heterogeneous list, right? Which (well-maintained) library provides this? I tried searching on stackage/hackage and found a lot of them. In fact Servant itself provides an <code>HList</code> type, but it is only for HTTP headers."}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1561797489, "post_id": 56815339, "comment_id": 100185844, "body": "@chi i tried your suggestion, and it seems to compile. But I&#39;m not sure why. I have edited the question."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1561797525, "post_id": 56815339, "comment_id": 100185853, "body": "Yes, that&#39;s a heterogeneous list. I was also confused by the many packages providing it -- I don&#39;t know what would be the right one to use."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1561797630, "post_id": 56815339, "comment_id": 100185878, "body": "In that way, <code>perms</code> still has kind <code>[*]</code> (list of types), but <code>HList :: [*] -&gt; *</code> converts that into a plain type, so it can be used in the reader monad. The kind of <code>perms</code> does not matter, only the kind of the <code>ReaderT</code> argument does."}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1561798134, "post_id": 56815339, "comment_id": 100185968, "body": "@chi I&#39;m stuck with  a new problem. I tried &quot;specialising&quot; HList by renaming it to <code>PList (perms :: [Permission])</code>, but the compiler doesn&#39;t like what I&#39;ve done. I&#39;ve editing the question again."}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1561799334, "post_id": 56815339, "comment_id": 100186164, "body": "@SaurabhNanda Types whose kinds are types lifted with <code>-XDataKinds</code> don&#39;t have values, they are purely type-level metadata. Types of kind <code>Type</code> (formerly known as <code>*</code>) do have values. <code>p</code> has kind <code>Permission</code>, not <code>Type</code>, and therefore can&#39;t have values. You could try to pass a <code>Proxy</code> parameterized by <code>p</code>. Proxies have a phantom type parameter that is poly-kinded. You could also try using <code>-XTypeApplications</code> to specify <code>p</code>, instead of an actual value."}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "reply_to_user": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1561802030, "post_id": 56815339, "comment_id": 100186622, "body": "@danidiaz Is there any way to introspect (using something like <code>:t</code>, <code>:i</code>, etc) and figure out which types have values, and which don&#39;t? Also, I don&#39;t understand why the compiler would be bothered with types that can have values and types that can&#39;t. I tried the following - <code>data EmptyType ; foo :: EmptyType -&gt; () ; foo _ = ()</code> and it compiled. Is this happening because of <code>&#39;:</code>? Does that expect both the operands to be of kind <code>*</code> ? How do inspect the <code>&#39;:</code> operator in GHCi?"}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1561802216, "post_id": 56815339, "comment_id": 100186665, "body": "I&#39;m really confused about the &quot;laws / rules&quot; of working with different kinds. Can I not write data-constructors using type of different kinds (i.e. not <code>*</code>)? Or is that the type-level operator <code>&#39;:</code> is of kind <code>* -&gt; [*] -&gt; *</code> and therefore cannot work on types of another kind."}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "reply_to_user": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1561802359, "post_id": 56815339, "comment_id": 100186686, "body": "@David it seems like I have hit the issue that you were referring to in your comment. If the compiler checks for which types can have values, or not, I don&#39;t understand why the following compiles - <code>data EmptyType ; foo :: EmptyType -&gt; () ; foo _ = ()</code>"}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1561802416, "post_id": 56815339, "comment_id": 100186694, "body": "aaargh... why does the following compile! Where is all of this behaviour documented? <code>data PList (perms :: [Permission]) where   PCons :: Proxy (p :: Permission) -&gt; PList perms -&gt; PList (p &#39;: perms) </code>"}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1561803260, "post_id": 56815339, "comment_id": 100186836, "body": "The example with <code>Proxy</code> compiles because the <code>Proxy</code> type has a value constructor, also named <code>Proxy</code>. The value is not used though, <code>Proxy</code> only serves as a roundabout way to pass type-level information. Notice that the kind of the <code>Proxy</code> type constructor is something like <code>forall {k}. k -&gt; Type</code>. You give it a (phantom) type parameter of any kind, and it gives you a type of kind <code>Type</code> (also known as <code>*</code>) that can have values, namely the <code>Proxy</code> value."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1561834431, "post_id": 56815339, "comment_id": 100193101, "body": "@SaurabhNanda I worded that poorly (which I realized too long after I left the comment). Those are two separate things: 1) A kind such as <code>[*]</code> does not have types which contain values. 2) The compiler will not allow types of kind <code>[*]</code> (and similar) to occur at &quot;value positions&quot; (not sure what the exact phrase would be here, actually, so let me know if that isn&#39;t very clear). 2 is not fully because of 1, but they are both (separately) true."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1561834447, "post_id": 56815339, "comment_id": 100193108, "body": "Also, you could argue that your empty type <i>does</i> have values: the bottom value. And since types of kind <code>[*]</code> won&#39;t even compile in such a position, they <i>truly</i> don&#39;t have any values. But that isn&#39;t really exactly what the compiler checking for, when it rejects a type like <code>f :: [&#39;a&#39;,&#39;b&#39;,&#39;c&#39;] -&gt; ()</code>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1561837422, "post_id": 56815339, "comment_id": 100193763, "body": "@chi, <code>vinyl</code> is well maintained, and <code>HList</code> is basically <code>Rec Identity</code>."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1561843561, "post_id": 56819251, "comment_id": 100194955, "body": "There should be a role annotation to protect the phantom, and the newtype constructor shouldn&#39;t be exported."}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1561855269, "post_id": 56819251, "comment_id": 100196255, "body": "Okay, I&#39;ve added a note at the end that I think address this."}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1561904629, "post_id": 56819251, "comment_id": 100203454, "body": "@K.A.Buhr, wow! Thank you for such a detailed reply. You are correct that this is an XY problem, and you&#39;ve pretty-much nailed the actual problem that I&#39;m trying to solve. I ended up writing a very long reply which crossed StackOverflow&#39;s comment limit. Please see if you can read <a href=\"https://gist.github.com/saurabhnanda/b783c4a99d56c527613cf6cb3febce4c\" rel=\"nofollow noreferrer\">gist.github.com/saurabhnanda/b783c4a99d56c527613cf6cb3febce4&zwnj;&#8203;c</a>"}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1561905610, "post_id": 56819251, "comment_id": 100203655, "body": "@K.A.Buhr do I need to enable <code>AllowAmbiguousTypes</code> to be able to write functions like <code>readA</code> and <code>deleteB</code>. I tried something like <a href=\"https://gist.github.com/saurabhnanda/b783c4a99d56c527613cf6cb3febce4c#file-try2-hs\" rel=\"nofollow noreferrer\">gist.github.com/saurabhnanda/&hellip;</a> and the compiler is ending up with ambiguous type-variables."}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1561905875, "post_id": 56819251, "comment_id": 100203712, "body": "@K.A.Buhr is there any way to make this technique work with a completely polymorphic monad <code>m</code>? To enable testing, all our code is polymorphic in <code>m</code> and is concretised only by the <code>runAppM</code> function. I tried writing a ConstraintKind that looks like <code>type (HasApp p m) = (RequiredPermission p ps ~ True, m ps)</code>, but it didn&#39;t work due to <code>Not in scope: type variable \u2018ps\u2019</code>"}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1561907333, "post_id": 56819251, "comment_id": 100204037, "body": "@K.A.Buhr I tried enabling <code>AllowAmbiguousTypes</code>, but it seems that the compiler still gets confused at the call-site of <code>requiredPermission</code> - <a href=\"https://gist.github.com/saurabhnanda/b783c4a99d56c527613cf6cb3febce4c#file-requiredpermission-hs\" rel=\"nofollow noreferrer\">gist.github.com/saurabhnanda/&hellip;</a>"}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1561907821, "post_id": 56819251, "comment_id": 100204153, "body": "@K.A.Buhr I tried fiddling with the your code, and the the problem surfaces there as well. It seems that one cannot use <code>deleteA</code> / <code>readB</code> in isolation. They <b>have</b> to be used in conjunction with <code>grantA</code>/<code>grantB</code> for the code to type-check."}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 0, "creation_date": 1561921929, "post_id": 56819251, "comment_id": 100207234, "body": "Minor note: as a convenience, you can make <code>type family Allowed&#39; (p :: Permission) (ps :: [Permission]) :: Bool</code> and then a type alias <code>type Allowed p ps = Allowed&#39; p ps ~ &#39;True</code> with <code>ConstraintKinds</code>, then you don\u2019t need the <code>~ &#39;True</code> at the use sites"}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1561928041, "post_id": 56819251, "comment_id": 100208467, "body": "I think many of these would need to be asked as additional SO questions (and you probably have a half dozen SO-sized questions you&#39;ve posed here).  However, see my other answer, too."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": false, "score": 4, "last_activity_date": 1561855248, "last_edit_date": 1561855248, "creation_date": 1561827096, "answer_id": 56819251, "question_id": 56815339, "link": "https://stackoverflow.com/questions/56815339/differently-kinded-readert/56819251#56819251", "title": "Differently kinded ReaderT?", "body": "<p>Yes, I think we have an XY problem here, so let's take a step back.</p>\n\n<p>A <code>Reader</code> is a monad for carrying around a <strong>value</strong> that can be conveniently read.  You don't have a value -- you have a list of permissions you want to enforce at type level -- so I don't think you need or want a reader, or a heterogeneous list, or anything else like that.</p>\n\n<p>Instead, given a list of boolean permissions:</p>\n\n<pre><code>data Permission = PermissionA | PermissionB deriving (Show)\n</code></pre>\n\n<p>you want to define a monad parametrized at the type level with the list of its granted permissions.  A newtype wrapper around your underlying <code>IO</code> monad will do:</p>\n\n<pre><code>{-# LANGUAGE DataKinds, KindSignatures, GeneralizedNewtypeDeriving #-}\nnewtype M (ps :: [Permission]) a = M (IO a) deriving (Functor, Applicative, Monad)\n</code></pre>\n\n<p>You'll also want a type function (AKA type family) to determine if a permission is in a permission list:</p>\n\n<pre><code>{-# LANGUAGE TypeFamilies, TypeOperators #-}\ntype family Allowed (p :: Permission) ps where\n  Allowed p '[] = False\n  Allowed p (p:ps) = True\n  Allowed p (q:ps) = Allowed p ps\n</code></pre>\n\n<p>Now, if you want to write functions that require certain permissions, you write things like:</p>\n\n<pre><code>deleteA :: (Allowed PermissionA ps ~ True) =&gt; M ps ()\ndeleteA = M $ print \"Deleted A\"\n\nreadB :: (Allowed PermissionB ps ~ True) =&gt; M ps ()\nreadB = M $ print \"Read B\"\n\ncopyBtoA :: ( Allowed PermissionA ps ~ True\n            , Allowed PermissionB ps ~ True) =&gt; M ps ()\ncopyBtoA = M $ print \"Copied B to A\"\n</code></pre>\n\n<p>To run an <code>M</code> action, we introduce a function that runs one with no permissions:</p>\n\n<pre><code>-- runM with no permissions\nrunM :: M '[] a -&gt; IO a\nrunM (M act) = act\n</code></pre>\n\n<p>Note that if you try <code>runM readB</code>, you'll get a type error (couldn't match <code>False</code> with <code>True</code> -- not the greatest error message, but...).</p>\n\n<p>To grant permissions, we introduce the functions:</p>\n\n<pre><code>-- grant permissions\ngrantA :: M (PermissionA:ps) a -&gt; M ps a\ngrantA (M act) = M act\ngrantB :: M (PermissionB:ps) a -&gt; M ps a\ngrantB (M act) = M act\n</code></pre>\n\n<p>These functions are essentially identity functions at the term level -- they just unwrap and rewrap the <code>M</code> constructor.  However, their operation at the type level is to add a permission to their input argument.  This means that:</p>\n\n<pre><code>runM $ grantB $ readB\n</code></pre>\n\n<p>now type-checks.  So do:</p>\n\n<pre><code>runM $ grantA . grantB $ readB\nrunM $ grantB . grantA $ readB\nrunM $ grantB . grantA . grantB $ readB\netc.\n</code></pre>\n\n<p>Then you can write programs like:</p>\n\n<pre><code>program :: IO ()\nprogram = runM $ do\n  grantA $ do\n    deleteA\n    grantB $ do\n      readB\n      copyBtoA\n</code></pre>\n\n<p>while rejecting programs like:</p>\n\n<pre><code>program1 :: IO ()\nprogram1 = runM $ do\n  grantA $ do\n    deleteA\n    grantB $ do\n      readB\n    copyBtoA    -- error, needs PermissionB\n</code></pre>\n\n<p>This infrastructure is maybe a little ugly, but it should be all you need for type-based, fully compile-time permission checking.</p>\n\n<p>Maybe try this version out for a bit and see if it meets your needs.  The full code is:</p>\n\n<pre><code>{-# LANGUAGE DataKinds, KindSignatures, GeneralizedNewtypeDeriving,\n             TypeFamilies, TypeOperators #-}\n\ndata Permission = PermissionA | PermissionB deriving (Show)\n\nnewtype M (ps :: [Permission]) a = M (IO a) deriving (Functor, Applicative, Monad)\n\ntype family Allowed (p :: Permission) ps where\n  Allowed p '[] = False\n  Allowed p (p:ps) = True\n  Allowed p (q:ps) = Allowed p ps\n\n-- runM with no permissions\nrunM :: M '[] a -&gt; IO a\nrunM (M act) = act\n\n-- grant permissions\ngrantA :: M (PermissionA:ps) a -&gt; M ps a\ngrantA (M act) = M act\ngrantB :: M (PermissionB:ps) a -&gt; M ps a\ngrantB (M act) = M act\n\ndeleteA :: (Allowed PermissionA ps ~ True) =&gt; M ps ()\ndeleteA = M $ print \"Deleted A\"\n\nreadB :: (Allowed PermissionB ps ~ True) =&gt; M ps ()\nreadB = M $ print \"Read B\"\n\ncopyBtoA :: ( Allowed PermissionA ps ~ True\n            , Allowed PermissionB ps ~ True) =&gt; M ps ()\ncopyBtoA = M $ print \"Copied B to A\"\n\nprogram :: IO ()\nprogram = runM $ do\n  grantA $ do\n    deleteA\n    grantB $ do\n      readB\n      copyBtoA\n</code></pre>\n\n<p>Two additional notes based on @dfeuer's comment.  First, it reminded me that <code>grantA</code> and <code>grantB</code> could equally well be written using the \"safe\" <code>coerce</code> function from <code>Data.Coerce</code> as follows.  There's no difference in the code generated between this version and the version above, so it's a matter of taste:</p>\n\n<pre><code>import Data.Coerce\n\n-- grant permissions\ngrantA :: M (PermissionA:ps) a -&gt; M ps a\ngrantA = coerce\ngrantB :: M (PermissionB:ps) a -&gt; M ps a\ngrantB = coerce\n</code></pre>\n\n<p>Second, what @dfeuer is talking about is that there's no clear separation here between a base of trusted code for controlling permissions and the \"rest\" of the code that relies on the type system to enforce the permission system.  For example, pattern matching on the <code>M</code> constructor is inherently dangerous, since you can extract an <code>IO a</code> from one permission context and reconstruct it in another.  (This is basically what <code>grantA</code> and <code>grantB</code> are doing to elevate privileges unconditionally.)  If you do this \"by accident\" outside of the trusted code base, you might end up bypassing the permission system.  In many applications, this isn't a big deal.</p>\n\n<p>However, if you were trying to prove a system secure, you might want a small trusted code base that works with the dangerous <code>M</code> constructor and exports only a \"safe\" API that ensures security through the type system.  In that case, you'd have a module that exports the type <code>M</code>, but not its constructor <code>M(..)</code>.  Instead, you'd export smart constructors for creating <code>M</code> actions with appropriate permissions.</p>\n\n<p>Also, for obscure technical reasons, even without exporting the <code>M</code> constructor, it would still be possible for \"untrusted\" code to coerce between different permission contexts:</p>\n\n<pre><code>stealPermission :: M (PermissionA:ps) a -&gt; M ps a\nstealPermission = coerce\n</code></pre>\n\n<p>because the first parameter to the <code>M</code> type constructor has a so-called \"role\" that defaults to \"phantom\" instead of \"nominal\".  If you override this:</p>\n\n<pre><code>{-# LANGUAGE RoleAnnotations #-}\ntype role M nominal _\n</code></pre>\n\n<p>then <code>coerce</code> can only be used where the constructor is in scope, which closes this loophole.  Untrusted code could still use <code>unsafeCoerce</code>, but there are mechanisms (Google for \"Safe Haskell\") to prevent this.</p>\n"}, {"comments": [{"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1561952445, "post_id": 56828016, "comment_id": 100211759, "body": "Thank you for a mini blog-post again :) I&#39;ll try to fiddle with your code examples when I&#39;m on my laptop, but the first thing that jumps out is the need for explicitly converting an <code>(Allowed p perms) =&gt; AppT pems m</code>  into a more concrete form, using the mechanical <code>requireX . toRunAppT</code> transformation. Is there no way to use the constraints on <code>AppT perms m</code> to concretise the monad automatically? The type-level list that <code>requiredX</code> is building , can it not be built when a call to <code>readPage &#47; writePage</code> is being made. Btw , this is how I went down the original ReaderT / HList rabbit hole."}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "reply_to_user": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1561993556, "post_id": 56828016, "comment_id": 100228537, "body": "Yes, it&#39;s possible. I intentionally avoided it because it&#39;s a bad design.  You <i>think</i> you want required permissions to bubble up to entry points and then be checked in some opaque manner at the top level, but then (1) you make it easier for code changes in the guts of the app to lock users out of entry points at runtime; and (2) you lose the explicit app security specification provided by the entry point signatures."}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1562052613, "post_id": 56828016, "comment_id": 100245518, "body": "I spent a lot of time fiddling around with code to understand the downsides of having a general/single function to do permission checking, but wasn&#39;t able to figure it out. Could you please elaborate your comment: <code>(1) you make it easier for code changes in the guts of the app to lock users out of entry points at runtime; and (2) you lose the explicit app security specification provided by the entry point signatures.</code>"}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "reply_to_user": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1562081620, "post_id": 56828016, "comment_id": 100261833, "body": "(1) If you refactor low-level code used by multiple entry points, it&#39;s easy to introduce a new permission requirement by accident.  If permissions percolate up, there&#39;s no type error, but suddenly visiting the home page requires <code>CommentEditP</code>.  (2) Related to (1), the entry point type signatures provide a documented specification for the security guarantees of your app.  What permissions are needed to run <code>entryX</code>?  Check the signature.  Code changes require spec changes?  A human being, not a compiler, should be overseeing those changes."}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1562127181, "post_id": 56828016, "comment_id": 100274777, "body": "Thanks for the clarification - it makes sense to me now. Btw, I&#39;ve taken tips from your solution and tried a PoC for my app at <a href=\"https://gist.github.com/saurabhnanda/b783c4a99d56c527613cf6cb3febce4c#file-appm-hs\" rel=\"nofollow noreferrer\">gist.github.com/saurabhnanda/&hellip;</a> - Right now it is for certain feature-flags that are enabled on a per-customer basis, instead of permissions. I have a polymorphic <code>requireFeature</code> function that can introduce a type-level constraint for any feature-flag that is passed to it. Similarly, there is a polymorphic <code>runAction</code> that needs you to pass a list of feature-flags as a proxy (contd..)"}, {"owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "edited": false, "score": 0, "creation_date": 1562127287, "post_id": 56828016, "comment_id": 100274797, "body": "(cont..) Since one is forced to call <code>runAction</code> with an <b>explicit</b> list of feature-flags, it protects programmers from refactoring and messing up the feature-flags (or, in the future, permission lists). Do you foresee any problems with this &quot;simplified&quot; approach?"}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 2, "last_activity_date": 1561928449, "last_edit_date": 1592644375, "creation_date": 1561928014, "answer_id": 56828016, "question_id": 56815339, "link": "https://stackoverflow.com/questions/56815339/differently-kinded-readert/56828016#56828016", "title": "Differently kinded ReaderT?", "body": "<p>In a separate Gist, you commented:</p>\n<blockquote>\n<p>@K.A.Buhr, wow! Thank you for such a detailed reply. You are correct that this is an XY problem, and you've pretty-much nailed the actual problem that I'm trying to solve. Another important piece of context is that, at some point these type-level permissions will have to be &quot;reified&quot; at the value-level. This is because the final check is against the permissions granted to the currently signed-in user, which are stored in the DB.</p>\n<p>Taking this into account, I'm planning to have two &quot;general&quot; functions, say:</p>\n<pre><code>requiredPermission :: (RequiredPermission p ps) =&gt; Proxy p -&gt; AppM ps ()\noptionalPermission :: (OptionalPermission p ps) =&gt; Proxy p -&gt; AppM ps ()\n</code></pre>\n<p>Here's the difference:</p>\n<ul>\n<li><code>requiredPermission</code> will simply add the permission to the type-level list and it will be verified when <code>runAppM</code> is called. If the current user does not have ALL the required permissions, then <code>runAppM</code> will immediately throw a 401 error to the UI.</li>\n<li>On the other hand, <code>optionalPermission</code> will extract the user from the <code>Reader</code> environment, check the permission, and return a True / False. <code>runAppM</code> will do nothing with <code>OptionalPermissions</code>. These will be for cases where the absence of a permission should NOT fail the entire action, but skip a specific step in the action.</li>\n</ul>\n<p>Given this context, I'm not sure if I would end-up with functions, like grantA or grantB. The &quot;unwrapping&quot; of ALL the RequestPermissions in the AppM constructor will be done by runAppM, which will also ensure that the currently sign-in user actually has these permissions.</p>\n</blockquote>\n<p>Note that there's more than one way to &quot;reify&quot; types.  For example, the following program -- through devious black magic trickery -- manages to reify a runtime type without the use of proxies or singletons!</p>\n<pre><code>main = do\n  putStr &quot;Enter \\&quot;Int\\&quot; or \\&quot;String\\&quot;: &quot;\n  s &lt;- getLine\n  putStrLn $ case s of &quot;Int&quot; -&gt;    &quot;Here is an integer: &quot; ++ show (42 :: Int)\n                       &quot;String&quot; -&gt; &quot;Here is a string: &quot; ++ show (&quot;hello&quot; :: String)\n</code></pre>\n<p>Similarly, the following variant of <code>grantA</code> manages to lift user permissions known only at runtime to the type-level:</p>\n<pre><code>whenA :: M (PermissionA:ps) () -&gt; M ps ()\nwhenA act = do\n  perms &lt;- asks userPermissions  -- get perms from environment\n  if PermissionA `elem` perms\n    then act\n    else notAuthenticated\n</code></pre>\n<p>Singletons could be used here to avoid boilerplate for different permissions and to improve type safety in this trusted piece of code (i.e., so that the two occurrences of <code>PermissionA</code> are forced to match).  Similarly, constraint kinds might save 5 or 6 characters per permission check.  However, neither of these improvements is necessary, and they may add substantial complexity that should be avoided if at all possible until <strong>after</strong> you get a working prototype.  In other words, elegant code that doesn't work isn't all that elegant.</p>\n<p>In that spirit, here is how I might adapt my original solution to support a set of &quot;required&quot; permissions that must be satisfied at specific &quot;entry points&quot; (e.g., specific routed web requests), and to perform runtime permission checking against a user database.</p>\n<p>First, we have a set of permissions:</p>\n<pre><code>data Permission\n  = ReadP            -- read content\n  | MetaP            -- view (private) metadata\n  | WriteP           -- write content\n  | AdminP           -- all permissions\n  deriving (Show, Eq)\n</code></pre>\n<p>and a user databsae:</p>\n<pre><code>type User = String\nuserDB :: [(User, [Permission])]\nuserDB\n  = [ (&quot;alice&quot;, [ReadP, WriteP])\n    , (&quot;bob&quot;,   [ReadP])\n    , (&quot;carl&quot;,  [AdminP])\n    ]\n</code></pre>\n<p>as well as an environment that includes user permissions and whatever else you want to carry around in a reader:</p>\n<pre><code>data Env = Env\n  { uperms :: [Permission]   -- user's actual permissions\n  , user :: String           -- other Env stuff\n  } deriving (Show)\n</code></pre>\n<p>We'll also want functions at the type and term level to check permission lists:</p>\n<pre><code>type family Allowed (p :: Permission) ps where\n  Allowed p (AdminP:ps) = True   -- admins can do anything\n  Allowed p '[] = False\n  Allowed p (p:ps) = True\n  Allowed p (q:ps) = Allowed p ps\nallowed :: Permission -&gt; [Permission] -&gt; Bool\nallowed p (AdminP:ps) = True\nallowed p (q:ps) | p == q = True\n                 | otherwise = allowed p ps\nallowed p [] = False\n</code></pre>\n<p>(Yes, you could use the <code>singletons</code> library to define both functions simultaneously, but let's do this without singletons for now.)</p>\n<p>As before, we'll have a monad that carries around a list of permissions.  You can think of it as the list of permissions that have been checked and verified at this point in the code.  We'll make this a monad transformer for a general <code>m</code> with a <code>ReaderT Env</code> component:</p>\n<pre><code>{-# LANGUAGE GeneralizedNewtypeDeriving #-}\nnewtype AppT (perms :: [Permission]) m a = AppT (ReaderT Env m a)\n  deriving (Functor, Applicative, Monad, MonadReader Env, MonadIO)\n</code></pre>\n<p>Now, we can define actions in this monad that form the building blocks for our application:</p>\n<pre><code>readPage :: (Allowed ReadP perms ~ True, MonadIO m) =&gt; Int -&gt; AppT perms m ()\nreadPage n = say $ &quot;Read page &quot; ++ show n\n\nmetaPage :: (Allowed ReadP perms ~ True, MonadIO m) =&gt; Int -&gt; AppT perms m ()\nmetaPage n = say $ &quot;Secret metadata &quot; ++ show (n^2)\n\neditPage :: (Allowed ReadP perms ~ True, Allowed WriteP perms ~ True, MonadIO m) =&gt; Int -&gt; AppT perms m ()\neditPage n = say $ &quot;Edit page &quot; ++ show n\n\nsay :: MonadIO m =&gt; String -&gt; m ()\nsay = liftIO . putStrLn\n</code></pre>\n<p>In each case, the action is allowed in any context where the list of permissions that have been checked and verified includes the needed permissions listed in the type signature.  (Yes, constraint kinds would work fine here, but let's keep it simple.)</p>\n<p>We can build more complicated actions out of these, as we did in my other answer:</p>\n<pre><code>readPageWithMeta :: ( Allowed 'ReadP perms ~ 'True, Allowed 'MetaP perms ~ 'True\n    , MonadIO m) =&gt; Int -&gt; AppT perms m ()\nreadPageWithMeta n = do\n  readPage n\n  metaPage n\n</code></pre>\n<p>Note that GHC can actually infer this type signature automatically, determining that <code>ReadP</code> and <code>MetaP</code> permissions are required.  If we wanted to make the <code>MetaP</code> permission optional, we could write:</p>\n<pre><code>readPageWithOptionalMeta :: ( Allowed 'ReadP perms ~ 'True\n    , MonadIO m) =&gt; Int -&gt; AppT perms m ()\nreadPageWithOptionalMeta n = do\n  readPage n\n  whenMeta $ metaPage n\n</code></pre>\n<p>where the <code>whenMeta</code> allows an optional action depending on available permissions.  (See below.)  Again, this signature can be inferred automatically.</p>\n<p>So far, while we've allowed for optional permissions, we haven't explicitly dealt with &quot;required&quot; permissions.  Those are going to be specified at <strong>entry points</strong> which will be defined using a separate monad:</p>\n<pre><code>newtype EntryT' (reqP :: [Permission]) (checkedP :: [Permission]) m a\n  = EntryT (ReaderT Env m a)\n  deriving (Functor, Applicative, Monad, MonadReader Env, MonadIO)\ntype EntryT reqP = EntryT' reqP reqP\n</code></pre>\n<p>This requires some explanation.  An <code>EntryT'</code> (with the tick mark) has two lists of permissions.  The first is the full list of required permissions for the entry point and has a fixed value for each particular entry point.  The second is the subset of those permissions that have been &quot;checked&quot; (in the static sense that a function call is in place to check and verify the user has the required permission).  It will be built up from the empty list to the full list of required permissions when we define entry points.  We'll use it as a type-level mechanism to ensure that the correct set of permission checking function calls is in place.  An <code>EntryT</code> (no tick) has its (statically) checked permissions equal to its required permissions, and that's how we know it's safe to run (against a particular user's dynamically determined set of permissions, which will all be checked as guaranteed by the type).</p>\n<pre><code>runEntryT :: MonadIO m =&gt; User -&gt; EntryT req m () -&gt; m ()\nrunEntryT u (EntryT act)\n  = case lookup u userDB of\n      Nothing   -&gt; say $ &quot;error 401: no such user '&quot; ++ u ++ &quot;'&quot;\n      Just perms -&gt; runReaderT act (Env perms u)\n</code></pre>\n<p>To define an entry point, we'll use something like this:</p>\n<pre><code>entryReadPage :: MonadIO m =&gt; Int -&gt; EntryT '[ReadP] m ()\nentryReadPage n = _somethingspecial_ $ do\n  readPage n\n  whenMeta $ metaPage n\n</code></pre>\n<p>Note that we have a <code>do</code> block here built out of <code>AppT</code> building blocks.  In fact, it's equivalent to <code>readPageWithOptionalMeta</code> above and so has type:</p>\n<pre><code>(Allowed 'ReadP perms ~ 'True, MonadIO m) =&gt; Int -&gt; AppT perms m ()\n</code></pre>\n<p>The <code>_somethingspecial_</code> here needs to adapt this <code>AppT</code> (whose list of permissions requires that <code>ReadP</code> be checked and verified before it is run) to an entry point whose lists of required and (statically) checked permissions is <code>[ReadP]</code>.  We'll do this using a set of functions to check actual runtime permissions:</p>\n<pre><code>requireRead :: MonadIO m =&gt; EntryT' r c m () -&gt; EntryT' r (ReadP:c) m ()\nrequireRead = unsafeRequire ReadP\nrequireWrite :: MonadIO m =&gt; EntryT' r c m () -&gt; EntryT' r (WriteP:c) m ()\nrequireWrite = unsafeRequire WriteP\n-- plus functions for the rest of the permissions\n</code></pre>\n<p>all defined in terms of:</p>\n<pre><code>unsafeRequire :: MonadIO m =&gt; Permission -&gt; EntryT' r c m () -&gt; EntryT' r c' m ()\nunsafeRequire p act = do\n  ps &lt;- asks uperms\n  if allowed p ps\n    then coerce act\n    else say $ &quot;error 403: requires permission &quot; ++ show p\n</code></pre>\n<p>Now, when we write:</p>\n<pre><code>entryReadPage :: MonadIO m =&gt; Int -&gt; EntryT '[ReadP] m ()\nentryReadPage n = requireRead . _ $ do\n  readPage n\n  whenMeta $ metaPage n\n</code></pre>\n<p>the outer type is correct, reflecting the fact that the list of <code>requireXXX</code> functions matches the list of required permissions in the type signature.  The remaining hole has type:</p>\n<pre><code>AppT perms0 m0 () -&gt; EntryT' '[ReadP] '[] m ()\n</code></pre>\n<p>Because of the way we've structured our permission checking, this is a special case of the safe transformation:</p>\n<pre><code>toRunAppT :: MonadIO m =&gt; AppT r m a -&gt; EntryT' r '[] m a\ntoRunAppT = coerce\n</code></pre>\n<p>In other words, we can write our final entry point definition using a fairly nice syntax which literally says that we &quot;require <code>Read</code> to run this <code>AppT</code>&quot;:</p>\n<pre><code>entryReadPage :: MonadIO m =&gt; Int -&gt; EntryT '[ReadP] m ()\nentryReadPage n = requireRead . toRunAppT $ do\n  readPage n\n  whenMeta $ metaPage n\n</code></pre>\n<p>and similarly:</p>\n<pre><code>entryEditPage :: MonadIO m =&gt; Int -&gt; EntryT '[ReadP, WriteP] m ()\nentryEditPage n = requireRead . requireWrite . toRunAppT $ do\n  editPage n\n  whenMeta $ metaPage n\n</code></pre>\n<p>Observe that the list of required permissions is included explicitly in the entry point's type, and the composed list of <code>requireXXX</code> functions that perform runtime checking of those permissions must exactly match those same permissions, in the same order, for it to type check.</p>\n<p>The last piece of the puzzle is the implementation of <code>whenMeta</code>, which performs a runtime permission check and executes an optional action if the permission is available.</p>\n<pre><code>whenMeta :: Monad m =&gt; AppT (MetaP:perms) m () -&gt; AppT perms m ()\nwhenMeta = unsafeWhen MetaP\n-- and similar functions for other permissions\n\nunsafeWhen :: Monad m =&gt; Permission -&gt; AppT perms m () -&gt; AppT perms' m ()\nunsafeWhen p act = do\n  ps &lt;- asks uperms\n  if allowed p ps\n    then coerce act\n    else return ()\n</code></pre>\n<p>Here's the full program with a test harnass.  You can see that:</p>\n<pre><code>Username/Req (e.g., &quot;alice Read 5&quot;): alice Read 5    -- Alice...\nRead page 5\nUsername/Req (e.g., &quot;alice Read 5&quot;): bob Read 5      -- and Bob can read.\nRead page 5\nUsername/Req (e.g., &quot;alice Read 5&quot;): carl Read 5     -- Carl gets the metadata, too\nRead page 5\nSecret metadata 25\nUsername/Req (e.g., &quot;alice Read 5&quot;): bob Edit 3      -- Bob can't edit...\nerror 403: requires permission WriteP\nUsername/Req (e.g., &quot;alice Read 5&quot;): alice Edit 3    -- but Alice can.\nEdit page 3\nUsername/Req (e.g., &quot;alice Read 5&quot;):\n</code></pre>\n<p>The source:</p>\n<pre><code>{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE KindSignatures #-}\n{-# LANGUAGE GeneralizedNewtypeDeriving #-}\n{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE TypeOperators #-}\n\nmodule Realistic where\n\nimport Control.Monad.Reader\nimport Data.Coerce\n\n-- |Set of permissions\ndata Permission\n  = ReadP            -- read content\n  | MetaP            -- view (private) metadata\n  | WriteP           -- write content\n  | AdminP           -- all permissions\n  deriving (Show, Eq)\n\ntype User = String\n-- |User database\nuserDB :: [(User, [Permission])]\nuserDB\n  = [ (&quot;alice&quot;, [ReadP, WriteP])\n    , (&quot;bob&quot;,   [ReadP])\n    , (&quot;carl&quot;,  [AdminP])\n    ]\n\n-- |Environment with 'uperms' and whatever else is needed\ndata Env = Env\n  { uperms :: [Permission]   -- user's actual permissions\n  , user :: String           -- other Env stuff\n  } deriving (Show)\n\n-- |Check for permission in type-level and term-level lists\ntype family Allowed (p :: Permission) ps where\n  Allowed p (AdminP:ps) = True   -- admins can do anything\n  Allowed p '[] = False\n  Allowed p (p:ps) = True\n  Allowed p (q:ps) = Allowed p ps\nallowed :: Permission -&gt; [Permission] -&gt; Bool\nallowed p (AdminP:ps) = True\nallowed p (q:ps) | p == q = True\n                 | otherwise = allowed p ps\nallowed p [] = False\n\n-- |An application action running with a given list of checked permissions.\nnewtype AppT (perms :: [Permission]) m a = AppT (ReaderT Env m a)\n  deriving (Functor, Applicative, Monad, MonadReader Env, MonadIO)\n\n-- Optional actions run if permissions are available at runtime.\nwhenRead :: Monad m =&gt; AppT (ReadP:perms) m () -&gt; AppT perms m ()\nwhenRead = unsafeWhen ReadP\nwhenMeta :: Monad m =&gt; AppT (MetaP:perms) m () -&gt; AppT perms m ()\nwhenMeta = unsafeWhen MetaP\nwhenWrite :: Monad m =&gt; AppT (WriteP:perms) m () -&gt; AppT perms m ()\nwhenWrite = unsafeWhen WriteP\nwhenAdmin :: Monad m =&gt; AppT (AdminP:perms) m () -&gt; AppT perms m ()\nwhenAdmin = unsafeWhen AdminP\nunsafeWhen :: Monad m =&gt; Permission -&gt; AppT perms m () -&gt; AppT perms' m ()\nunsafeWhen p act = do\n  ps &lt;- asks uperms\n  if allowed p ps\n    then coerce act\n    else return ()\n\n-- |An entry point, requiring a list of permissions\nnewtype EntryT' (reqP :: [Permission]) (checkedP :: [Permission]) m a\n  = EntryT (ReaderT Env m a)\n  deriving (Functor, Applicative, Monad, MonadReader Env, MonadIO)\n-- |An entry point whose full list of required permission has been (statically) checked).\ntype EntryT reqP = EntryT' reqP reqP\n\n-- |Run an entry point whose required permissions have been checked.\nrunEntryT :: MonadIO m =&gt; User -&gt; EntryT req m () -&gt; m ()\nrunEntryT u (EntryT act)\n  = case lookup u userDB of\n      Nothing   -&gt; say $ &quot;error 401: no such user '&quot; ++ u ++ &quot;'&quot;\n      Just perms -&gt; runReaderT act (Env perms u)\n\n-- Functions to build the list of required permissions for an entry point.\nrequireRead :: MonadIO m =&gt; EntryT' r c m () -&gt; EntryT' r (ReadP:c) m ()\nrequireRead = unsafeRequire ReadP\nrequireMeta :: MonadIO m =&gt; EntryT' r c m () -&gt; EntryT' r (MetaP:c) m ()\nrequireMeta = unsafeRequire MetaP\nrequireWrite :: MonadIO m =&gt; EntryT' r c m () -&gt; EntryT' r (WriteP:c) m ()\nrequireWrite = unsafeRequire WriteP\nrequireAdmin :: MonadIO m =&gt; EntryT' r c m () -&gt; EntryT' r (AdminP:c) m ()\nrequireAdmin = unsafeRequire AdminP\nunsafeRequire :: MonadIO m =&gt; Permission -&gt; EntryT' r c m () -&gt; EntryT' r c' m ()\nunsafeRequire p act = do\n  ps &lt;- asks uperms\n  if allowed p ps\n    then coerce act\n    else say $ &quot;error 403: requires permission &quot; ++ show p\n\n-- Adapt an entry point w/ all static checks to an underlying application action.\ntoRunAppT :: MonadIO m =&gt; AppT r m a -&gt; EntryT' r '[] m a\ntoRunAppT = coerce\n\n-- Example application actions\nreadPage :: (Allowed ReadP perms ~ True, MonadIO m) =&gt; Int -&gt; AppT perms m ()\nreadPage n = say $ &quot;Read page &quot; ++ show n\nmetaPage :: (Allowed ReadP perms ~ True, MonadIO m) =&gt; Int -&gt; AppT perms m ()\nmetaPage n = say $ &quot;Secret metadata &quot; ++ show (n^2)\neditPage :: (Allowed ReadP perms ~ True, Allowed WriteP perms ~ True, MonadIO m) =&gt; Int -&gt; AppT perms m ()\neditPage n = say $ &quot;Edit page &quot; ++ show n\n\nsay :: MonadIO m =&gt; String -&gt; m ()\nsay = liftIO . putStrLn\n\n-- Example entry points\nentryReadPage :: MonadIO m =&gt; Int -&gt; EntryT '[ReadP] m ()\nentryReadPage n = requireRead . toRunAppT $ do\n  readPage n\n  whenMeta $ metaPage n\nentryEditPage :: MonadIO m =&gt; Int -&gt; EntryT '[ReadP, WriteP] m ()\nentryEditPage n = requireRead . requireWrite . toRunAppT $ do\n  editPage n\n  whenMeta $ metaPage n\n\n-- Test harnass\ndata Req = Read Int\n         | Edit Int\n         deriving (Read)\nmain :: IO ()\nmain = do\n  putStr &quot;Username/Req (e.g., \\&quot;alice Read 5\\&quot;): &quot;\n  ln &lt;- getLine\n  case break (==' ') ln of\n    (user, ' ':rest) -&gt; case read rest of\n      Read n -&gt; runEntryT user $ entryReadPage n\n      Edit n -&gt; runEntryT user $ entryEditPage n\n  main\n</code></pre>\n"}], "owner": {"reputation": 5657, "user_id": 534481, "user_type": "registered", "accept_rate": 31, "profile_image": "https://www.gravatar.com/avatar/60df8c1a366ab1bf4378154e71a93367?s=128&d=identicon&r=PG", "display_name": "Saurabh Nanda", "link": "https://stackoverflow.com/users/534481/saurabh-nanda"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 175, "favorite_count": 0, "accepted_answer_id": 56828016, "answer_count": 2, "score": 2, "last_activity_date": 1561928449, "creation_date": 1561786966, "last_edit_date": 1561798050, "question_id": 56815339, "link": "https://stackoverflow.com/questions/56815339/differently-kinded-readert", "title": "Differently kinded ReaderT?", "body": "<p>At the risk of this becoming an <a href=\"https://en.wikipedia.org/wiki/XY_problem\" rel=\"nofollow noreferrer\">XY Problem</a>, is it possible to have a <code>ReaderT</code> with a differently kinded environment? I'm trying something like...</p>\n\n<pre><code>type AppM (perms :: [*]) = ReaderT (perms :: [*]) IO\n</code></pre>\n\n<p>...but the compiler complains with...</p>\n\n<pre><code>Expected a type, but \u2018(perms :: [*])\u2019 has kind \u2018[*]\u2019\n</code></pre>\n\n<p>...presumably because <code>ReaderT</code> is defined as...</p>\n\n<pre><code>newtype ReaderT r (m :: k -&gt; *) (a :: k) = ReaderT {runReaderT :: r -&gt; m a}\n</code></pre>\n\n<p>...where <code>r</code> is of kind <code>*</code></p>\n\n<p>I'm trying to track permissions/roles at a type-level, and my ultimate goal is to write functions like...</p>\n\n<pre><code>ensurePermission :: (p :: Permission) -&gt; AppM (p :. ps) ()\n</code></pre>\n\n<p>... where every call to <code>ensurePermission</code> appends/prepends a new permission to the monad's permission list (at the type-level).</p>\n\n<h2>Edit</h2>\n\n<p>I tried the following, and it seems to compile, but I'm not sure what's going on. Conceptually isn't <code>perms</code> still of kind <code>[*]</code>. How is this snippet acceptable to the compiler, but the original one isn't?</p>\n\n<pre><code>data HList (l :: [*]) where\n  HNil :: HList '[]\n  HCons :: e -&gt; HList l -&gt; HList (e ': l)\n\ntype AppM (perms :: [*]) = ReaderT (HList perms) IO\n</code></pre>\n\n<h2>Edit #2</h2>\n\n<p>I tried evolving my code snippet to further match my end-goal, but I'm stuck again with a different \"kind\" problem:</p>\n\n<p>The compiler doesn't accept the following code:</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\n{-# LANGUAGE DataKinds #-}\n\ndata Permission = PermissionA\n                | PermissionB\n\n$(genSingletons [''Permission])\n\ndata PList (perms :: [Permission]) where\n  PNil :: PList '[]\n  PCons :: p -&gt; PList perms -&gt; PList (p ': perms)\n\n--     \u2022 Expected kind \u2018[Permission]\u2019, but \u2018p : perms\u2019 has kind \u2018[*]\u2019\n--     \u2022 In the first argument of \u2018PList\u2019, namely \u2018(p : perms)\u2019\n--       In the type \u2018PList (p : perms)\u2019\n--       In the definition of data constructor \u2018PCons\u2019\n--    |\n-- 26 |   PCons :: p -&gt; PList perms -&gt; PList (p ': perms)\n--    |                                       ^^^^^^^^^^\n\n</code></pre>\n\n<p>Neither does it accept the following variation...</p>\n\n<pre><code>data PList (perms :: [Permission]) where\n  PNil :: PList '[]\n  PCons :: (p :: Permission) -&gt; PList perms -&gt; PList (p ': perms)\n\n\n--     \u2022 Expected a type, but \u2018(p :: Permission)\u2019 has kind \u2018Permission\u2019\n--     \u2022 In the type \u2018(p :: Permission)\u2019\n--       In the definition of data constructor \u2018PCons\u2019\n--       In the data declaration for \u2018PList\u2019\n--    |\n-- 26 |   PCons :: (p :: Permission) -&gt; PList perms -&gt; PList (p ': perms)\n--    |            ^^^^^^^^^^^^^^^^^\n</code></pre>\n"}, {"tags": ["haskell", "haskell-platform"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 1, "creation_date": 1561743536, "post_id": 56811124, "comment_id": 100176514, "body": "What&#39;s the rest of the error message?"}, {"owner": {"reputation": 3165, "user_id": 1181103, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/99bcd4d7172ef6e5ece5e0af27f7381c?s=128&d=identicon&r=PG", "display_name": "Sergey Romanovsky", "link": "https://stackoverflow.com/users/1181103/sergey-romanovsky"}, "edited": false, "score": 3, "creation_date": 1561744035, "post_id": 56811124, "comment_id": 100176706, "body": "<code>show</code> returns <code>String</code> not a <code>Char</code>. <code>:</code> takes an element and a list and returns a list. You&#39;re trying to use <code>:</code> as it would take 2 lists and return a list (i.e. like it is <code>++</code>)"}, {"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "reply_to_user": {"reputation": 3165, "user_id": 1181103, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/99bcd4d7172ef6e5ece5e0af27f7381c?s=128&d=identicon&r=PG", "display_name": "Sergey Romanovsky", "link": "https://stackoverflow.com/users/1181103/sergey-romanovsky"}, "edited": false, "score": 0, "creation_date": 1561744148, "post_id": 56811124, "comment_id": 100176756, "body": "You can discover what @SergeyRomanovsky told you by exploring with ghci. for example, in ghci try <code>:t show 5</code>"}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1561745575, "post_id": 56811124, "comment_id": 100177292, "body": "You can do this in one line: <code>toStr = (=&lt;&lt;) show</code>, but the type signature must be <code>toStr :: Show a =&gt; [a] -&gt; String</code> or something more specific; you can&#39;t do this otherwise."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1561745743, "post_id": 56811124, "comment_id": 100177368, "body": "Do you deliberately intend to ignore the last element of the input list? If not the logic of your attempted implementation is wrong."}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 3, "creation_date": 1561745807, "post_id": 56811124, "comment_id": 100177400, "body": "@AJFarmar ... more commonly spelled as <code>concatMap show</code>."}], "answers": [{"comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 2, "creation_date": 1561748995, "post_id": 56812031, "comment_id": 100178427, "body": "The <code>null xs</code> branch is redundant."}, {"owner": {"reputation": 2485, "user_id": 11282404, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c1e3829cb91cc6be3541a37381b5ff21?s=128&d=identicon&r=PG&f=1", "display_name": "jpmarinier", "link": "https://stackoverflow.com/users/11282404/jpmarinier"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1561749502, "post_id": 56812031, "comment_id": 100178576, "body": "@melpomene - yes technically you&#39;re right, we don&#39;t need the two branches. However, I feel that for this sort of questions, the OP is happier if the changes to his/her code are kept to a minimum, while still fixing the problem at hand. This is my personal bias and you may differ."}, {"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 1, "creation_date": 1561749551, "post_id": 56812031, "comment_id": 100178596, "body": "Your code has three branches, one of which is redundant. OP&#39;s code also only has two branches."}, {"owner": {"reputation": 2485, "user_id": 11282404, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c1e3829cb91cc6be3541a37381b5ff21?s=128&d=identicon&r=PG&f=1", "display_name": "jpmarinier", "link": "https://stackoverflow.com/users/11282404/jpmarinier"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1561749747, "post_id": 56812031, "comment_id": 100178649, "body": "Yes, but OP&#39;s code has just two branches because it does not handle the case of an empty input list (at least as written above)."}], "tags": [], "owner": {"reputation": 2485, "user_id": 11282404, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c1e3829cb91cc6be3541a37381b5ff21?s=128&d=identicon&r=PG&f=1", "display_name": "jpmarinier", "link": "https://stackoverflow.com/users/11282404/jpmarinier"}, "is_accepted": false, "score": 1, "last_activity_date": 1561748776, "last_edit_date": 1561748776, "creation_date": 1561748475, "answer_id": 56812031, "question_id": 56811124, "link": "https://stackoverflow.com/questions/56811124/how-to-convert-list-of-numbers-to-string-without-formatting/56812031#56812031", "title": "How to convert list of numbers to string without formatting", "body": "<p>As mentioned by Sergey, the ':' operator cannot be used, because the expression \"show x\" returns a string not a single character.</p>\n\n<p>This code below seems to do what you wanted:</p>\n\n<pre><code>toStr :: (Num a, Show a) =&gt; [a] -&gt; String\ntoStr (x:xs)\n    | null xs         = show x  -- avoid using length because of cost\n    | not (null xs)   = (show x) ++ (toStr xs)\ntoStr [] = \"\"\n\n\nmain = do\n    let ls1 = [ 13, 17, 19, 23 ]\n    let st1 = toStr ls1\n    let st2 = concatMap show ls1 -- as per melpomene's remark\n    putStrLn $ \"st1 = \" ++ st1\n    putStrLn $ \"st2 = \" ++ st2\n</code></pre>\n\n<p>As a side remark, Haskell programmers generally avoid to use the <em>length</em> function when they just want to know whether a list is empty or not. Things can get really ugly if you do that, because of our potentially unlimited lazy lists.</p>\n"}, {"tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": true, "score": 4, "last_activity_date": 1561754891, "last_edit_date": 1561754891, "creation_date": 1561752368, "answer_id": 56812657, "question_id": 56811124, "link": "https://stackoverflow.com/questions/56811124/how-to-convert-list-of-numbers-to-string-without-formatting/56812657#56812657", "title": "How to convert list of numbers to string without formatting", "body": "<p><strong>Understanding the Problem</strong></p>\n\n<pre><code>toStr :: (Num a) =&gt; [a] -&gt; String\ntoStr (x:xs)\n    | length xs == 0 = []\n    | length xs &gt; 0 = show x          :  toStr xs\n                       ^              ^      ^\n                    This is a String  |      |\n                                      |  This is a String\n                                   This is a function of type String -&gt; [String] -&gt; [String]\n</code></pre>\n\n<p>So you have:</p>\n\n<ul>\n<li><code>show x</code> which is a <code>String</code></li>\n<li><code>toStr xs</code> which is a <code>String</code></li>\n<li>The function <code>:</code> which expects a <code>String</code> and <code>[String]</code>.</li>\n</ul>\n\n<p>That disagreement on <code>toStr xs</code> is a String but was expected, by <code>:</code> to be a list of Strings is the crux of the problem.  You wanted to concatenate your strings together into a single string (<code>show x ++ toStr xs</code>).</p>\n\n<p><strong>Understanding the Next Problem*</strong></p>\n\n<p>Now you should have a few other issues. First, you have an <code>Num a =&gt; a</code> that you try to <code>show</code>.  The function <code>show</code> is not part of <code>Num</code> but instead part of the <code>Show</code> class so change <code>Num a =&gt;</code> to <code>Show a =&gt;</code>.</p>\n\n<p>Finally, this code doesn't handle the empty list case very well:</p>\n\n<pre><code> toStr (x:xs)\n    | length xs == 0 = []\n</code></pre>\n\n<p>Noticing nothing comes after <code>x</code> this code will ignore the last value, <code>x</code>, and return the empty list.  It doesn't handle the case where there is no \"last element\" and all you have is the empty list.  To handle that try <code>toStr [] = []</code>.</p>\n\n<p><strong>Putting it Together</strong></p>\n\n<pre><code>toStr :: (Show a) =&gt; [a] -&gt; String\ntoStr [] = []\ntoStr (x:xs) = show x ++ toStr xs\n</code></pre>\n\n<p>with a result of:</p>\n\n<pre><code>&gt; toStr [1,0,0,1,1]\n\"10011\"\n</code></pre>\n\n<p><strong>Idiomatic Code</strong></p>\n\n<p>The above is a fine result but manual primitive recursive functions aren't usually necessary when writing Haskell.  Most operations are a type of <code>map</code> or <code>fold</code> over the data.  In this case it is a mapping of the <code>show</code> function (notice how it is <code>show</code>ing every element) and a <code>fold</code> of the <code>++</code> function - also known as string concatenation.</p>\n\n<pre><code>toStr2 xs = foldr (++) \"\" (map show xs)\n-- &gt; toStr2 [1,0,0,1,1]\n-- \"10011\"\n</code></pre>\n\n<p>Even this can be further simplified.  It is so common there exists a special function <code>concatMap</code>:</p>\n\n<pre><code>toStr3 xs = concatMap show xs\n</code></pre>\n\n<p>Which we can \"eta reduce\" (remove the outer most arguments of the function definition/application - think in terms of defining a function as another function and not the values it produced):</p>\n\n<pre><code>toStr4 = concatMap show\n</code></pre>\n\n<p>Alternatively, we could re-gain the original verb-age of fold and map.  The <code>concatMap</code> function is just a specific type of <code>fold</code> + <code>map</code> that works over lists.  There is a more general <code>foldMap</code> that works with any function that produces a monoid (and lists are one such structure, which means that so are Strings since they are lists of characters):</p>\n\n<pre><code>toStr5 = foldMap show\n</code></pre>\n"}], "owner": {"reputation": 657, "user_id": 11672176, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RJ2UolcBU3Y/AAAAAAAAAAI/AAAAAAAABb4/PR3tZ6Jz7Bw/photo.jpg?sz=128", "display_name": "BryceTheGrand", "link": "https://stackoverflow.com/users/11672176/brycethegrand"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 108, "favorite_count": 0, "accepted_answer_id": 56812657, "answer_count": 2, "score": -1, "last_activity_date": 1561754891, "creation_date": 1561743383, "question_id": 56811124, "link": "https://stackoverflow.com/questions/56811124/how-to-convert-list-of-numbers-to-string-without-formatting", "title": "How to convert list of numbers to string without formatting", "body": "<p>This is what I have so far:</p>\n\n<pre><code>toStr :: (Num a) =&gt; [a] -&gt; String\ntoStr (x:xs)\n    | length xs == 0 = []\n    | length xs &gt; 0 = show x : toStr xs\n</code></pre>\n\n<p>I keep getting this error:</p>\n\n<pre><code>* Couldn't match type `Char' with `[Char]'\n  Expected type: [String]\n    Actual type: String\n</code></pre>\n\n<p>I don't understand why it is receiving a Char instead of a [Char]. Thanks in advance.</p>\n\n<p>For help, the thing I am trying to do is convert a binary list [1, 0, 0, 1, 1, 0] to a list like this \"100110\".</p>\n"}, {"tags": ["haskell", "cabal", "haskell-stack", "build-error"], "comments": [{"owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "edited": false, "score": 0, "creation_date": 1561730141, "post_id": 56807423, "comment_id": 100170581, "body": "(1) <code>stack install</code> is mostly used for installing binaries globally, not for project-specific packages. (2) Do you have a <code>.cabal</code> file or a <code>package.yaml</code> file? Does it spell out <code>datetime</code> under <code>dependencies</code>? Note the all lowercase spelling. It is unclear why stack thinks <code>DateTime</code> is the appropriate casing. (3) Are you sure you want <code>datetime</code> instead of <a href=\"https://www.stackage.org/package/time\" rel=\"nofollow noreferrer\"><code>time</code></a>? The latter is still being maintained, whereas the <a href=\"https://hackage.haskell.org/package/datetime\" rel=\"nofollow noreferrer\">last upload</a> for <code>datetime</code> was 4 years back."}, {"owner": {"reputation": 283, "user_id": 341533, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/db19cb0ff7ba1978615dcefdf87fbc41?s=128&d=identicon&r=PG", "display_name": "horatius83", "link": "https://stackoverflow.com/users/341533/horatius83"}, "reply_to_user": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "edited": false, "score": 0, "creation_date": 1561731632, "post_id": 56807423, "comment_id": 100171351, "body": "If you want to post your comment as an answer I&#39;ll gladly mark it as such. Using UTCTime instead of DateTime and adding the reference in stack.yaml (time-1.8.0.2@sha256:e71437d137e609599afd09f70d50a4d20a12361&zwnj;&#8203;0d303d03ab094440a5a7&zwnj;&#8203;7cc6b,5409) solved the problem"}], "answers": [{"tags": [], "owner": {"reputation": 1915, "user_id": 2682729, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/PZlkg.gif?s=128&g=1", "display_name": "typesanitizer", "link": "https://stackoverflow.com/users/2682729/typesanitizer"}, "is_accepted": true, "score": 2, "last_activity_date": 1561732210, "creation_date": 1561732210, "answer_id": 56808760, "question_id": 56807423, "link": "https://stackoverflow.com/questions/56807423/haskell-stack-failing-to-build-project-with-datetime-dependency-despite-entry-in/56808760#56808760", "title": "Haskell-Stack failing to build project with DateTime dependency despite entry in stack.yaml", "body": "<ol>\n<li><p><code>stack install</code> is mostly used for installing binaries globally, not for project-specific packages.</p></li>\n<li><p>You probably want to use the <code>time</code> package, not <code>datetime</code>. as the former is actively maintained. Moreover, in your case, <a href=\"https://www.stackage.org/package/time/snapshots\" rel=\"nofollow noreferrer\">time</a> is present in LTS-13.24, so you shouldn't need to add it to extra-deps. The extra-deps field is only for dependencies (including transitive ones) which are not present in your resolver.</p></li>\n</ol>\n"}], "owner": {"reputation": 283, "user_id": 341533, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/db19cb0ff7ba1978615dcefdf87fbc41?s=128&d=identicon&r=PG", "display_name": "horatius83", "link": "https://stackoverflow.com/users/341533/horatius83"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 58, "favorite_count": 0, "accepted_answer_id": 56808760, "answer_count": 1, "score": 1, "last_activity_date": 1561732210, "creation_date": 1561726757, "question_id": 56807423, "link": "https://stackoverflow.com/questions/56807423/haskell-stack-failing-to-build-project-with-datetime-dependency-despite-entry-in", "title": "Haskell-Stack failing to build project with DateTime dependency despite entry in stack.yaml", "body": "<p>So I'm trying to add this package: <a href=\"https://hackage.haskell.org/package/datetime-0.3.1\" rel=\"nofollow noreferrer\">datetime-0.3.1</a> and I added what I <em>think</em> is the correct reference in the stack.yaml file. I tried using stack solver but that doesn't seem exist anymore. I also looked for some equivalent of pip so I could just do <em>stack install datetime-0.3.1</em> or something similar but that doesn't appear to be something stack does.</p>\n\n<p>The code:</p>\n\n<pre><code>module FhirDataTypes (\n    FhirId (..),\n    toFhirId\n) where\n\nimport Data.Maybe (Maybe(..))\nimport Data.List (length)\nimport Coding as Coding\nimport Data.Decimal\nimport FhirUri (FhirUri(..))\nimport FhirString (FhirString(..))\nimport SimpleQuantity (SimpleQuantity(..))\nimport Data.DateTime\n\nnewtype FhirId = FhirId FhirString deriving (Show)\n\ntoFhirId :: FhirString -&gt; Maybe FhirId\ntoFhirId fs@(FhirString s)\n    | length s &gt; 64 = Nothing\n    | otherwise = Just $ FhirId fs\n\ndata Money = Money  { value :: Decimal\n                    , currency :: Code\n}\n\ndata Range = Range  {   low :: SimpleQuantity\n                    ,   high :: SimpleQuantity\n}\n\ndata Ratio = Ratio  {   numerator :: Quantity\n                    ,   denominator :: Quantity\n}\n\ndata Period = Period    { start :: DateTime\n                        , end :: DateTime\n}\n</code></pre>\n\n<p>The error I'm getting:</p>\n\n<pre><code>PS C:\\util\\haskell\\fhir-practice&gt; stack build\n\nError: While constructing the build plan, the following exceptions were encountered:\n\nIn the dependencies for fhir-practice-0.1.0.0:\nDateTime needed, but the stack configuration has no specified version (no package with that name found, perhaps there is a typo in\n         a package's build-depends or an omission from the stack.yaml packages list?) needed since fhir-practice is a build target.\n\nSome different approaches to resolving this:\n\n\nPlan construction failed.\n</code></pre>\n\n<p>My stack.yaml file:</p>\n\n<pre><code>flags: {}\npackages:\n- .\nextra-deps: \n- network-  uri-2.6.1.0@sha256:62cc45c66023e37ef921d5fb546aca56a9c786615e05925fb193a70bf0913690\n- Decimal-0.4.2\n- datetime-0.3.1\nresolver: lts-13.24\n</code></pre>\n"}, {"tags": ["haskell", "type-systems", "gadt", "data-kinds", "phantom-types"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1561720655, "post_id": 56805856, "comment_id": 100165863, "body": "The answer about <i>hetrogenous lists</i> can be applied to trees (without much) modification, except for using <code>fmap</code> over <code>map</code>, etc. The principle is demonstrated on a list, but you can use it on all sorts of &quot;functor-like&quot; things."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 4, "creation_date": 1561722621, "post_id": 56805856, "comment_id": 100166716, "body": "There are several ways to do roughly what you asked for. I wouldn&#39;t say any of them is really better than the explicitly-tagged alternative-type, but perhaps if you explain the application you need this for we can give some hints."}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1561750641, "post_id": 56810470, "comment_id": 100178934, "body": "If you <code>class Typeable a =&gt; THING a</code>, then you don&#39;t need to go back and add one casting method per instance to the class."}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1561823021, "post_id": 56810470, "comment_id": 100190822, "body": "True.  I added a note at the end."}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": true, "score": 2, "last_activity_date": 1561823009, "last_edit_date": 1561823009, "creation_date": 1561739979, "answer_id": 56810470, "question_id": 56805856, "link": "https://stackoverflow.com/questions/56805856/the-limit-set-of-types-with-new-data-like-tree-a/56810470#56810470", "title": "The limit set of types with new data like `Tree a`", "body": "<p>For question #2, it's easy to construct a \"restricted\" heterogeneous type without explicit tags using a GADT and a type class:</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\ndata Thing where\n  T :: THING a =&gt; a -&gt; Thing\nclass THING a\n</code></pre>\n\n<p>Now, declare <code>THING</code> instances for the the things you want to allow:</p>\n\n<pre><code>instance THING Int\ninstance THING Bool\ninstance THING Char\n</code></pre>\n\n<p>and you can create <code>Things</code> and lists (or trees) of <code>Things</code>:</p>\n\n<pre><code>&gt; t1 = T 'a'       -- Char is okay\n&gt; t2 = T \"hello\"   -- but String is not\n... type error ...\n&gt; tl = [T (42 :: Int), T True, T 'x']\n&gt; tt = Branch (Leaf (T 'x')) (Leaf (T False))\n&gt;\n</code></pre>\n\n<p>In terms of the type names in your question, you have:</p>\n\n<pre><code>type HeteroValues = Thing\ntype TreeH = Tree Thing\n</code></pre>\n\n<p>You can use the same type class with a new GADT for question #1:</p>\n\n<pre><code>data ThingTree where\n  TT :: THING a =&gt; Tree a -&gt; ThingTree\n</code></pre>\n\n<p>and you have:</p>\n\n<pre><code>type TreeIWant = ThingTree\n</code></pre>\n\n<p>and you can do:</p>\n\n<pre><code>&gt; tt1 = TT $ Branch (Leaf 'x') (Leaf 'y')\n&gt; tt2 = TT $ Branch (Leaf 'x') (Leaf False)\n... type error ...\n&gt;\n</code></pre>\n\n<p>That's all well and good, until you try to <strong>use</strong> any of the values you've constructed.  For example, if you wanted to write a function to extract a <code>Bool</code> from a possibly boolish <code>Thing</code>:</p>\n\n<pre><code>maybeBool :: Thing -&gt; Maybe Bool\nmaybeBool (T x) = ...\n</code></pre>\n\n<p>you'd find yourself stuck here.  Without a \"tag\" of some kind, there's no way of determining if <code>x</code> is a <code>Bool</code>, <code>Int</code>, or <code>Char</code>.</p>\n\n<p>Actually, though, you <em>do</em> have an implicit tag available, namely the <code>THING</code> type class dictionary for <code>x</code>.  So, you can write:</p>\n\n<pre><code>maybeBool :: Thing -&gt; Maybe Bool\nmaybeBool (T x) = maybeBool' x\n</code></pre>\n\n<p>and then implement <code>maybeBool'</code> in your type class:</p>\n\n<pre><code>class THING a where\n  maybeBool' :: a -&gt; Maybe Bool\ninstance THING Int where\n  maybeBool' _ = Nothing\ninstance THING Bool where\n  maybeBool' = Just\ninstance THING Char where\n  maybeBool' _ = Nothing\n</code></pre>\n\n<p>and you're golden!</p>\n\n<p>Of course, if you'd used explicit tags:</p>\n\n<pre><code>data Thing = T_Int Int | T_Bool Bool | T_Char Char\n</code></pre>\n\n<p>then you could skip the type class and write:</p>\n\n<pre><code>maybeBool :: Thing -&gt; Maybe Bool\nmaybeBool (T_Bool x) = Just x\nmaybeBool _ = Nothing\n</code></pre>\n\n<p>In the end, it turns out that the best Haskell representation of an algebraic sum of three types is just an algebraic sum of three types:</p>\n\n<pre><code>data Thing = T_Int Int | T_Bool Bool | T_Char Char\n</code></pre>\n\n<p>Trying to avoid the need for explicit tags will probably lead to a lot of inelegant boilerplate elsewhere.</p>\n\n<p><em>Update:</em> As @DanielWagner pointed out in a comment, you can use <code>Data.Typeable</code> in place of this boilerplate (effectively, have GHC generate a lot of boilerplate for you), so you can write:</p>\n\n<pre><code>import Data.Typeable\n\ndata Thing where\n  T :: THING a =&gt; a -&gt; Thing\nclass Typeable a =&gt; THING a\n\ninstance THING Int\ninstance THING Bool\ninstance THING Char\n\nmaybeBool :: Thing -&gt; Maybe Bool\nmaybeBool = cast\n</code></pre>\n\n<p>This perhaps seems \"elegant\" at first, but if you try this approach in real code, I think you'll regret losing the ability to pattern match on <code>Thing</code> constructors at usage sites (and so having to substitute chains of <code>cast</code>s and/or comparisons of <code>TypeRep</code>s).</p>\n"}], "owner": {"reputation": 549, "user_id": 7826146, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a95fdc5b2dadeccfd1047ab1dc58c8b5?s=128&d=identicon&r=PG&f=1", "display_name": "Vladimir", "link": "https://stackoverflow.com/users/7826146/vladimir"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 108, "favorite_count": 0, "accepted_answer_id": 56810470, "answer_count": 1, "score": 2, "last_activity_date": 1561823009, "creation_date": 1561720225, "question_id": 56805856, "link": "https://stackoverflow.com/questions/56805856/the-limit-set-of-types-with-new-data-like-tree-a", "title": "The limit set of types with new data like `Tree a`", "body": "<p>Exploring and studing type system in Haskell I've found some problems.</p>\n\n<p>1) Let's consider polymorphic type as Binary Tree:</p>\n\n<pre><code> data Tree a = Leaf a | Branch (Tree a) (Tree a) deriving Show\n</code></pre>\n\n<p>And, for example, I want to limit my considerations only with <code>Tree Int</code>, <code>Tree Bool</code> and <code>Tree Char</code>. Of course, I can make a such new type:</p>\n\n<pre><code>data TreeIWant = T1 (Tree Int) | T2 (Tree Bool) | T3 (Tree Char) deriving Show\n</code></pre>\n\n<p>But could it possible to make new restricted type (for homogeneous trees) in more elegant (and without new tags like <code>T1</code>,<code>T2</code>,<code>T3</code>) way (perhaps with some advanced type extensions)?</p>\n\n<p>2) Second question is about trees with heterogeneous values. I can do them with usual Haskell, i.e. I can do the new helping type, contained tagged heterogeneous values:</p>\n\n<pre><code>data HeteroValues = H1 Int | H2 Bool | H3 Char deriving Show\n</code></pre>\n\n<p>and then make tree with values of this type:</p>\n\n<pre><code>type TreeH = Tree HeteroValues\n</code></pre>\n\n<p>But could it possible to make new type (for heterogeneous trees) in more elegant (and without new tags like <code>H1</code>,<code>H2</code>,<code>H3</code>) way (perhaps with some advanced type extensions)?\nI know about <a href=\"https://stackoverflow.com/questions/28438040/haskell-heterogeneous-list-for-data-with-phantom-variable\">heterogeneous list</a>, perhaps it is the same question?</p>\n"}, {"tags": ["haskell", "functional-programming", "quickcheck", "property-based-testing"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1561718304, "post_id": 56805323, "comment_id": 100164807, "body": "DId you wrote the <code>prop_2</code> in the <i>shell</i>? Did you use <code>:{</code> and <code>:}</code> to write both the signature and the function in the same &quot;block&quot;?"}, {"owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1561718623, "post_id": 56805323, "comment_id": 100164931, "body": "No, I had prop_2 in a file with prop_1 and foo."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1561718987, "post_id": 56805323, "comment_id": 100165088, "body": "It looks as if Haskell is not able to understand the type of <code>foo xs (g . f)</code>, so that usually means the type signatures are not saying it is an <code>[Int]</code> here."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 0, "creation_date": 1561721523, "post_id": 56805323, "comment_id": 100166202, "body": "Can you share a compilable example to reproduce the problem?"}, {"owner": {"reputation": 3203, "user_id": 2622234, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/a4b0faa804acdb74ea677bc421d5caac?s=128&d=identicon&r=PG", "display_name": "sara", "link": "https://stackoverflow.com/users/2622234/sara"}, "edited": false, "score": 2, "creation_date": 1561721923, "post_id": 56805323, "comment_id": 100166398, "body": "I tried compiling and running your properties. I couldn&#39;t reproduce your error message, but I found two other issues: Firstly, your function <code>foo</code> is equivalent to <code>const []</code>, so your first property will always fail. Secondly, <code>prop_2</code> can&#39;t be run by <code>quickCheck</code> because there is no <code>Show (Int -&gt; Int)</code> instance (<code>quickCheck</code> requires this so it can print counter examples)"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 3203, "user_id": 2622234, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/a4b0faa804acdb74ea677bc421d5caac?s=128&d=identicon&r=PG", "display_name": "sara", "link": "https://stackoverflow.com/users/2622234/sara"}, "edited": false, "score": 0, "creation_date": 1561722330, "post_id": 56805323, "comment_id": 100166585, "body": "@sara: the second issue was covered in the previous question: <a href=\"https://stackoverflow.com/questions/56805030/haskell-property-based-testing-for-higher-order-function\" title=\"haskell property based testing for higher order function\">stackoverflow.com/questions/56805030/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": false, "score": 1, "last_activity_date": 1561740834, "creation_date": 1561740834, "answer_id": 56810680, "question_id": 56805323, "link": "https://stackoverflow.com/questions/56805323/haskell-understanding-quickcheck-with-higher-order-function/56810680#56810680", "title": "Haskell: Understanding QuickCheck with higher order function", "body": "<p>I was able to duplicate your error message with the following program.  Note that the signature for <code>foo</code> is commented out:</p>\n\n<pre><code>import Test.QuickCheck\nimport Text.Show.Functions\n\n-- foo :: [a] -&gt; (a -&gt; b) -&gt; [b]\nfoo [] f = []\nfoo (x:xs) f = foo xs f\n\nprop_1 :: [Int] -&gt; Bool\nprop_1 xs = foo xs id == xs\n\nprop_2 :: [Int] -&gt; (Int -&gt; Int) -&gt; (Int -&gt; Int) -&gt; Bool\nprop_2 xs f g = foo (foo xs f) g == foo xs (g . f)\n\nmain = do\n  quickCheck prop_1\n  quickCheck prop_2\n</code></pre>\n\n<p>If I put the <code>foo</code> signature back in, it type-checks fine.  The tests fail of course, since <code>foo</code> isn't doing what you intend it to do.</p>\n\n<p>The issue is that the version of <code>foo</code> you have here has inferred signature:</p>\n\n<pre><code>foo :: [a] -&gt; b -&gt; [c]\n</code></pre>\n\n<p>so in <code>prop_2</code>, the type of the list elements for the top-most <code>foo</code> calls can't be inferred to resolve the correct <code>(==)</code> operation.</p>\n\n<p>If you replace <code>foo</code> with a correct version:</p>\n\n<pre><code>foo :: [a] -&gt; (a -&gt; b) -&gt; [b]\nfoo [] f = []\nfoo (x:xs) f = f x : foo xs f\n</code></pre>\n\n<p>then the tests pass <em>and</em> you can actually comment out the signature again because the correct type can be inferred.</p>\n"}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 114, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1561740834, "creation_date": 1561717917, "question_id": 56805323, "link": "https://stackoverflow.com/questions/56805323/haskell-understanding-quickcheck-with-higher-order-function", "title": "Haskell: Understanding QuickCheck with higher order function", "body": "<p>I have the function <code>foo</code>:</p>\n\n<pre><code>foo :: [a] -&gt; (a -&gt; b) -&gt; [b]\nfoo [] f = []\nfoo (x:xs) f = foo xs f\n</code></pre>\n\n<p>And the following two properties that it must satisfy:</p>\n\n<pre><code>prop_1 :: [Int] -&gt; Bool\nprop_1 xs = foo xs id == xs \n\nprop_2 :: [Int] -&gt; (Int -&gt; Int) -&gt; (Int -&gt; Int) -&gt; Bool\nprop_2 xs f g = foo (foo xs f) g == foo xs (g . f)\n</code></pre>\n\n<p>When I tried to test the function using quickCheck, I get the following error:</p>\n\n<pre><code> Ambiguous type variable 't0' arising from a use of '=='\n      prevents the constraint '(Eq t0)' from being solved.\n      Probable fix: use a type annotation to specify what 't0' should be.\n      These potential instances exist:\n        instance (Eq a, Eq b) =&gt; Eq (Either a b)\n          -- Defined in 'Data.Either'\n        instance Eq GeneralCategory -- Defined in 'GHC.Unicode'\n        instance Eq Ordering -- Defined in 'ghc-prim-0.5.0.0:GHC.Classes'\n        ...plus 24 others\n        ...plus 107 instances involving out-of-scope types\n        (use -fprint-potential-instances to see them all)\n      In the expression: foo (foo xs f) g == foo xs (g . f)\n      In an equation for 'prop_2':\n          prop_2 xs f g = foo (foo xs f) g == foo xs (g . f)\nFailed, modules loaded: none.\n</code></pre>\n\n<p>I am not sure why I am getting this error and how I can solve it. Any insights are appreciated.</p>\n"}, {"tags": ["haskell", "functional-programming", "quickcheck", "property-based-testing"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1561716846, "post_id": 56805030, "comment_id": 100164215, "body": "The arguments of <code>prop_2</code> must be <code>Show</code>able, since <code>QuickCheck</code> should be able to show with what parameters the <code>prop_2</code> was disproven."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1561716974, "post_id": 56805030, "comment_id": 100164283, "body": "You can import <code>ShowFunctions</code> for that."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1561729185, "post_id": 56805145, "comment_id": 100170072, "body": "It&#39;s really much better to use the <code>Fun</code> type as Alexey Romanov explains than to use a bogus orphan instance."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 1, "last_activity_date": 1561717212, "creation_date": 1561717212, "answer_id": 56805145, "question_id": 56805030, "link": "https://stackoverflow.com/questions/56805030/haskell-property-based-testing-for-higher-order-function/56805145#56805145", "title": "Haskell: Property Based Testing for Higher Order Function", "body": "<p>As the <a href=\"http://www.cse.chalmers.se/~rjmh/QuickCheck/manual.html#19\" rel=\"nofollow noreferrer\">documentation on <code>QuickCheck</code></a> says:</p>\n\n<blockquote>\n  <p>However, before we can test such a property, we must see to it that <strong>function values can be printed</strong> (in case a counter-example is found). That is, function types must be instances of class <code>Show</code>. To arrange this, you <strong>must import module <code>ShowFunctions</code></strong> into every module containing higher-order properties of this kind. If a counter-example is found, function values will be displayed as <code>\"&lt;function&gt;\"</code></p>\n</blockquote>\n\n<p>So you can fix this by importing a module like:</p>\n\n<pre><code><b>import Text.Show.Functions</b>\n\nprop_1 :: [Int] -&gt; Bool\nprop_1 xs = foo xs id == xs \n\nprop_2 :: [Int] -&gt; (Int -&gt; Int) -&gt; (Int -&gt; Int) -&gt; Bool\nprop_2 xs f g = foo (foo xs f) g == foo xs (g . f)</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "edited": false, "score": 0, "creation_date": 1561724229, "post_id": 56805578, "comment_id": 100167508, "body": "What is &lt;function&gt; in quickCheck? I tried running quickCheck with another property and I got the following result: Failed (after 2 tests and 1 shrink) &lt;function&gt; &quot;&quot; &quot;&quot;."}, {"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "reply_to_user": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "edited": false, "score": 0, "creation_date": 1561726689, "post_id": 56805578, "comment_id": 100168728, "body": "It isn&#39;t &quot;in QuickCheck&quot;, it&#39;s how the instance in Text.Show.Functions works (<a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Text-Show-Functions.html\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/base-4.12.0.0/docs/&hellip;</a>)"}], "tags": [], "owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "is_accepted": false, "score": 2, "last_activity_date": 1561718874, "creation_date": 1561718874, "answer_id": 56805578, "question_id": 56805030, "link": "https://stackoverflow.com/questions/56805030/haskell-property-based-testing-for-higher-order-function/56805578#56805578", "title": "Haskell: Property Based Testing for Higher Order Function", "body": "<p>You can use QuickCheck's support for <a href=\"http://hackage.haskell.org/package/QuickCheck-2.13.1/docs/Test-QuickCheck.html#g:14\" rel=\"nofollow noreferrer\">generation of random shrinkable, showable functions</a> by changing the property to</p>\n\n<pre><code>prop_2 :: [Int] -&gt; Fun Int Int -&gt; Fun Int Int -&gt; Bool\nprop_2 xs (Fn f) (Fn g) = foo (foo xs f) g == foo xs (g . f)\n</code></pre>\n\n<p>and then you'll see something more useful than <code>&lt;function&gt;</code> for counterexamples.</p>\n"}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 56805145, "answer_count": 2, "score": 1, "last_activity_date": 1561718874, "creation_date": 1561716746, "question_id": 56805030, "link": "https://stackoverflow.com/questions/56805030/haskell-property-based-testing-for-higher-order-function", "title": "Haskell: Property Based Testing for Higher Order Function", "body": "<p>I have two properties that a function <code>foo</code> must satisfy:</p>\n\n<pre><code>prop_1 :: [Int] -&gt; Bool\nprop_1 xs = foo xs id == xs \n\nprop_2 :: [Int] -&gt; (Int -&gt; Int) -&gt; (Int -&gt; Int) -&gt; Bool\nprop_2 xs f g = foo (foo xs f) g == foo xs (g . f)\n</code></pre>\n\n<p>I am trying to check whether the above properties satisfy the following function using quickCheck:</p>\n\n<pre><code>foo :: [a] -&gt; (a -&gt; b) -&gt; [b]\nfoo xs f = []\n</code></pre>\n\n<p>When I tried running quickCheck with prop_2 I get the following error:</p>\n\n<pre><code>quickCheck(prop_2)\n\n&lt;interactive&gt;:18:1: error:\n     No instance for (Show (Int -&gt; Int))\n        arising from a use of 'quickCheck'\n        (maybe you haven't applied a function to enough arguments?)\n     In the expression: quickCheck (prop_2)\n      In an equation for 'it': it = quickCheck (prop_2)\n</code></pre>\n\n<p>I am not sure why I am getting this error and how I can resolve it. Any insights are appreciated.</p>\n"}, {"tags": ["haskell", "recursion", "tree"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1561680882, "post_id": 56798771, "comment_id": 100154051, "body": "A map might be more appropriate: <code>type QuestionTree = Data.Map.Map (QuestionID, AnswerChoice) QuestionID</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 3, "creation_date": 1561681532, "post_id": 56798771, "comment_id": 100154114, "body": "Or <code>Map QuestionID (Map AnswerChoice QuestionID)</code> for the &quot;curried&quot; version."}, {"owner": {"reputation": 158, "user_id": 9829124, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72f7d1c0d0730d3f3617f337ea602c1b?s=128&d=identicon&r=PG&f=1", "display_name": "Hopia", "link": "https://stackoverflow.com/users/9829124/hopia"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1561682494, "post_id": 56798771, "comment_id": 100154255, "body": "@chepner How would that replace the tree? I mean that the tree is the structure to build so that a user could be asked a series of conditional questions in a sequence. Like &quot;Did you go to the gym?&quot; Yes -&gt; &quot;How long did you work out at the gym for?&quot;"}, {"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 1, "creation_date": 1561689691, "post_id": 56798771, "comment_id": 100155250, "body": "@Hopia  try it and see."}], "answers": [{"comments": [{"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1561743222, "post_id": 56804525, "comment_id": 100176406, "body": "+1 for a good approach.  Note that, even though the <i>data structure</i> allows question node sharing, the way this <code>buildTree</code> implementation works, question nodes for duplicate questions <i>won&#39;t</i> be shared, but that&#39;s probably not worth &quot;fixing&quot;, unless you are processing a large number of completed questionnaires over the same, persistent tree and performance becomes an issue."}, {"owner": {"reputation": 1275, "user_id": 11571245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vkCkX.png?s=128&g=1", "display_name": "typedfern", "link": "https://stackoverflow.com/users/11571245/typedfern"}, "reply_to_user": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1561743886, "post_id": 56804525, "comment_id": 100176638, "body": "@k-a-buhr Yes, the ideal way to ensure sharing would be to 1) find the leaf nodes and 2), then build the tree from the bottom up, but that would be too complex to fit in an answer (specially since the OP is still wrapping their head around recursion)"}, {"owner": {"reputation": 158, "user_id": 9829124, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72f7d1c0d0730d3f3617f337ea602c1b?s=128&d=identicon&r=PG&f=1", "display_name": "Hopia", "link": "https://stackoverflow.com/users/9829124/hopia"}, "edited": false, "score": 0, "creation_date": 1561815302, "post_id": 56804525, "comment_id": 100189140, "body": "Thanks a lot for your solution design with practical examples! I&#39;m experimenting with it right now. I&#39;m actually generating the possible answer choices and mapping their consequential successor questions straight from the database dynamically. Moreover, a single answer to a question may result in multiple (sibling) successor questions. So it complicates the control flow somewhat"}, {"owner": {"reputation": 158, "user_id": 9829124, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72f7d1c0d0730d3f3617f337ea602c1b?s=128&d=identicon&r=PG&f=1", "display_name": "Hopia", "link": "https://stackoverflow.com/users/9829124/hopia"}, "edited": false, "score": 0, "creation_date": 1561819484, "post_id": 56804525, "comment_id": 100190022, "body": "Since you solve my inherent recursion issue with tree building with this solution I&#39;ll mark it as the accepted answer. Thanks for your help!"}], "tags": [], "owner": {"reputation": 1275, "user_id": 11571245, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vkCkX.png?s=128&g=1", "display_name": "typedfern", "link": "https://stackoverflow.com/users/11571245/typedfern"}, "is_accepted": true, "score": 5, "last_activity_date": 1561715103, "last_edit_date": 1561715103, "creation_date": 1561714753, "answer_id": 56804525, "question_id": 56798771, "link": "https://stackoverflow.com/questions/56798771/composing-haskell-tree-structures/56804525#56804525", "title": "Composing Haskell tree structures", "body": "<p>What I'd do in such a case, is to store the answers in a separate data structure - <em>not</em> to insert them in the questions tree; put the answers in a separate list/Set, or in a file or database, and let the questions tree be immutable.</p>\n\n<p>In order to keep track of which questions remain to be asked, you can \"consume\" the tree - keep your program state pointing to the next question, throwing away the questions already answered (letting the garbage collector reclaim them).</p>\n\n<p>I'd design the tree like this:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>data AllowedAnswers = YesOrNo {\n                        ifUserAnsweredYes :: QuestionTree,\n                        ifUserAnsweredNo :: QuestionTree\n                      }\n                      | Choices [(Text, QuestionTree)]\n\ndata QuestionTree = Question {\n      description :: Text\n    , allowedAnswers :: AllowedAnswers\n    , ifUserSkipsThisQuestion :: QuestionTree\n  }\n  | EndOfQuestions\n</code></pre>\n\n<p>Notice several things:</p>\n\n<ul>\n<li><p>You don't have to worry about multiple possible paths leading to the same question - you can place the same QuestionTree node in multiple places, and it will be shared (Haskell won't create multiple copies of it)</p></li>\n<li><p>This design has no place to hold the user's answers - they are stored elsewhere (i.e. a list somewhere, or a file) - no need to mutate the question tree.</p></li>\n<li><p>As the user answers questions, just move your \"pointer\" to the next QuestionTree, depending on what the user answered.</p></li>\n</ul>\n\n<p>As for \"how to construct this tree from the (QuestionId, AnswerChoice, NextQuestionId) list\" - I think I'd first convert it into a map: ```Map QuestionId    [(AnswerChoice, Maybe QuestionId)], then I'd construct the tree by, starting with the ID of the first question, and fetching its immediate children from the Map, build the subtrees.</p>\n\n<p>Example (for a <em>very</em> simplified case where the only possible answers are \"yes\" or \"no\", with no skipping allowed):</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>buildTree questionMap questionId = case Map.lookup questionId questionMap of\n  Nothing -&gt; EndOfQuestions\n  Just (description, [(\"yes\", nextQuestionIdIfYes), (\"no\", nextQuestionIdIfNo)]) -&gt;\n    Question { description = description\n               , allowedAnswers = YesOrNo {\n                   ifUserAnsweredYes = buildTree questionMap nextQuestionIdIfYes\n                   , ifUserAnsweredNo = buildTree questionMap nextQuestionIdIfNo\n                 }\n               , ifUserSkipsThisQuestion = EndOfQuestions\n             }\n</code></pre>\n\n<p>If you are wondering \"why not just use the Map directly?\" - yes, you could (and often it will be the right solution), but consider:</p>\n\n<ul>\n<li><p>The QuestionTree structure expresses the programmer's intention more idiomatically than a Map of Id -> Thing</p></li>\n<li><p>It is structurally guaranteed to have a child QuestionTree whenever pertinent - no need to do Map.lookup, which will return a Maybe, which you must verify that contains a Just (even when you <em>know</em> there is going to be a next question, even if it is EndOfQuestions)</p></li>\n</ul>\n"}], "owner": {"reputation": 158, "user_id": 9829124, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/72f7d1c0d0730d3f3617f337ea602c1b?s=128&d=identicon&r=PG&f=1", "display_name": "Hopia", "link": "https://stackoverflow.com/users/9829124/hopia"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 181, "favorite_count": 0, "accepted_answer_id": 56804525, "answer_count": 1, "score": 0, "last_activity_date": 1561715103, "creation_date": 1561671663, "last_edit_date": 1561680644, "question_id": 56798771, "link": "https://stackoverflow.com/questions/56798771/composing-haskell-tree-structures", "title": "Composing Haskell tree structures", "body": "<p>I got a problem with thinking recursively in Haskell.</p>\n\n<p>I am trying to build a survey application where questions conditionally lead to new questions based on the user's answers.</p>\n\n<p>I got:<br>\n- <code>Questions</code> - a list of questions<br>\n- <code>QuestionPaths</code> - a list of question paths of questions which lead to new questions<br>\n- <code>Answers</code> a list of user's answers  </p>\n\n<p>You can think of <code>QuestionPaths</code> as a list of tuples where:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>type QuestionPath = (QuestionId, AnswerChoice, NextQuestionId)\n</code></pre>\n\n<p>Basically this would read: <em>If user answers a question</em> <code>QuestionId</code> <em>with an answer</em> <code>AnswerChoice</code>, <em>ask him</em> <code>NextQuestionId</code> <em>next.</em></p>\n\n<p>I have attempted to model this problem domain with <a href=\"http://%20I%20got%20problem%20with%20thinking%20recursively%20in%20Haskell.%20%20I&#39;m%20trying%20to%20build%20a%20survey%20application%20where%20questions%20conditionally%20lead%20to%20new%20questions%20based%20the%20user&#39;s%20on%20answers.%20%20I%20got:%20-%20%60Questions%60%20-%20a%20list%20of%20questions%20%20%20%20%60QuestionPaths%60%20-%20a%20list%20of%20question%20paths%20which%20lead%20to%20new%20questions%20%20-%20%60Answers%60%20a%20list%20of%20user&#39;s%20answers%20%20You%20can%20think%20of%20%60QuestionPaths%60%20as%20a%20list%20of%20tuples%20where:%20%60%60%60haskell%20(QuestionId,%20AnswerChoice,%20NextQuestionId)%20%60%60%60.%20Basically%20this%20would%20read:%20_If%20user%20answers%20a%20question_%20%60QuestionId%60%20_with%20an%20answer_%20%60AnswerChoice%60,%20_ask%20him_%20%60NextQuestionId%60%20_next._%20%20I&#39;ve%20attempted%20to%20model%20this%20problem%20domain%20with%20multiway%20trees%20(nodes%20can%20have%20multiple%20children):%20%60%60%60haskell%20data%20YesNo%20=%20Yes%20%7C%20No%20data%20AnswerChoice%20=%20%20%20Skip%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20Boolean%20YesNo%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%20ChooseOne%20[Text]%20%20type%20Condition%20=%20AnswerChoice%20%20data%20QuestionTree%20=%20QuestionNode%20%7B%20%20%20%20%20%20%20question%20%20%20%20%20%20::%20Question%20%20%20%20%20,%20userAnswer%20%20%20%20::%20Maybe%20AnswerChoice%20%20%20%20%20,%20children%20%20%20%20%20%20::%20QuestionForest%20%20%20%20%20%7D%20%20type%20QuestionForest%20=%20[QuestionTree]%20%60%60%60%20Unfortunately,%20I&#39;m%20clueless%20now%20on%20how%20to%20write%20algorithms%20that%20compose%20trees%20like%20this.%20%20%20I%20basically%20need%20these%20kinds%20of%20functions%20for%20composition%20and%20traversal:%20%60%60%60haskell%20--%20Constructs%20the%20tree%20from%20seed%20data%20constructTree%20::%20Questions%20-%3E%20QuestionPaths%20-%3E%20Answers%20-%3E%20QuestionTree%20%20--%20%7C%20Inserts%20answer%20to%20question%20in%20the%20tree%20answerQuestion%20::%20Question%20-%3E%20AnswerChoice%20%20--%20%7C%20Fetches%20the%20next%20unanswered%20question%20by%20traversing%20the%20tree.%20getNextUnanswered%20::%20QuestionTree%20-%3E%20Question%20%60%60%60%20%20**Can%20you%20please%20help%20me%20understand%20what%20would%20be%20the%20best%20ways%20to%20construct%20and%20traverse%20a%20tree%20such%20as%20this?**\" rel=\"nofollow noreferrer\">multiway trees</a> (nodes can have multiple children):</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>data YesNo = Yes | No\ndata AnswerChoice =   Skip\n                    | Boolean YesNo\n                    | ChooseOne [Text]\n\ntype Condition = AnswerChoice\n\ndata QuestionTree = QuestionNode {\n      question      :: Question\n    , condition     :: Condition\n    , userAnswer    :: Maybe AnswerChoice\n    , children      :: QuestionForest\n    }\n\ntype QuestionForest = [QuestionTree]\n</code></pre>\n\n<p>Unfortunately, I am clueless now on how to write algorithms that compose trees like this. </p>\n\n<p>I basically need these kinds of functions for composition and traversal:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>-- Constructs the tree from seed data\nconstructTree :: Questions -&gt; QuestionPaths -&gt; Answers -&gt; QuestionTree\n\n-- | Inserts answer to question in the tree\nanswerQuestion :: Question -&gt; AnswerChoice\n\n-- | Fetches the next unanswered question by traversing the tree.\ngetNextUnanswered :: QuestionTree -&gt; Question\n</code></pre>\n\n<p><strong>Can you please help me understand what would be the best way to construct and traverse a tree such as this?</strong></p>\n"}, {"tags": ["haskell", "coercion"], "comments": [{"owner": {"reputation": 2915, "user_id": 1295154, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9687b362fd1d4754033efc0b19001e81?s=128&d=identicon&r=PG", "display_name": "Dominique Devriese", "link": "https://stackoverflow.com/users/1295154/dominique-devriese"}, "edited": false, "score": 5, "creation_date": 1561663853, "post_id": 56797358, "comment_id": 100149556, "body": "In other words... you&#39;re asking if Haskell type-level functions satisfy functional extensionality..."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 1, "creation_date": 1561666318, "post_id": 56797358, "comment_id": 100150398, "body": "It&#39;s possible for a claim to be neither provable or disprovable. The axiom <code>forall a b. (forall x. a x ~=~ b x) -&gt; a ~=~ b</code> is very likely <i>consistent</i> with the type system (not disprovable; nothing goes wrong if you admit it with <code>unsafeCoerce</code>), but it&#39;s probably not provable."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1561667570, "post_id": 56797358, "comment_id": 100150826, "body": "<a href=\"https://repository.brynmawr.edu/cgi/viewcontent.cgi?article=1005&amp;context=compsci_pubs\" rel=\"nofollow noreferrer\">Safe Zero-cost Coercions for Haskell</a> has the full rules on page 6 (PDF page 7 at this link). <code>Co_Inst</code> is the only rule that applies to forall-quantified stuff, and doesn&#39;t seem particularly helpful. I suspect such a rule could be added without breaking soundness. Another conspicuously missing rule (which would also get you where you needed to go) would be one saying that if all of a data type&#39;s fields are coercible with another, the type itself is coercible with the other."}], "answers": [{"comments": [{"owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 0, "creation_date": 1561668961, "post_id": 56797820, "comment_id": 100151309, "body": "Oh hey, <code>Data.Type.Coercion</code> obviates the need for <code>(~=~)</code>, and is in <code>base</code>! handy"}, {"owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 0, "creation_date": 1562076035, "post_id": 56797820, "comment_id": 100258424, "body": "I&#39;m currently cheating with <a href=\"https://github.com/rampion/concrete-kinds/blob/8c19de87500d0cf63cd64cf95c9b094d01fc8ab9/src/Data/Type/Coercion.hs#L22\" rel=\"nofollow noreferrer\"><code>eliminate = unsafeCoerce</code></a>, since <code>Coercible</code> is implemented as an empty dictionary. It <a href=\"https://github.com/rampion/concrete-kinds/blob/8c19de87500d0cf63cd64cf95c9b094d01fc8ab9/src/Data/Type/Coercion/Test.hs\" rel=\"nofollow noreferrer\">hasn&#39;t kicked up any errors in testing yet</a>, so I&#39;m cautiously optimistic,"}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 5, "last_activity_date": 1561727821, "last_edit_date": 1561727821, "creation_date": 1561665570, "answer_id": 56797820, "question_id": 56797358, "link": "https://stackoverflow.com/questions/56797358/can-i-prove-that-forall-x-coercible-a-x-b-x-implies-coercible-a-b/56797820#56797820", "title": "Can I prove that (forall x. Coercible (a x) (b x)) implies Coercible a b?", "body": "<p>No, you can't. As Dominique Devriese and HTNW hint in their comments, GHC doesn't admit that inference at all. This more demanding version won't compile:</p>\n\n<pre><code>{-# language QuantifiedConstraints, RankNTypes #-}\n\nimport Data.Coerce\nimport Data.Type.Coercion\n\neliminate :: (forall a. Coercible (f a) (g a)) =&gt; Coercion f g\neliminate = Coercion\n</code></pre>\n\n<p>Your version is even more doomed. To pattern match on the polymorphic <code>Coercion</code> (or <code>~=~</code>) argument, it must be instantiated to a particular type. GHC will instantiate it to <code>f Any ~=~ g Any</code>, which is then monomorphic and therefore doesn't prove what you want it to. Since GHC Core is typed, that won't fly.</p>\n\n<p>Side note: I find it intensely frustrating that there's no way to write</p>\n\n<pre><code>f :: (forall a. c a :- d a)\n  -&gt; ((forall a. c a =&gt; d a) =&gt; r)\n  -&gt; r\n</code></pre>\n"}], "owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 113, "favorite_count": 1, "accepted_answer_id": 56797820, "answer_count": 1, "score": 5, "last_activity_date": 1561727821, "creation_date": 1561662736, "question_id": 56797358, "link": "https://stackoverflow.com/questions/56797358/can-i-prove-that-forall-x-coercible-a-x-b-x-implies-coercible-a-b", "title": "Can I prove that (forall x. Coercible (a x) (b x)) implies Coercible a b?", "body": "<p>I'm manipulating proofs of coercibility:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>data a ~=~ b where\n  IsCoercible :: Coercible a b =&gt; a ~=~ b\ninfix 0 ~=~\n\nsym :: (a ~=~ b) -&gt; (b ~=~ a)\nsym IsCoercible = IsCoercible\n\ninstance Category (~=~) where \n  id = IsCoercible\n  IsCoercible . IsCoercible = IsCoercible\n\ncoerceBy :: a ~=~ b -&gt; a -&gt; b\ncoerceBy IsCoercible = coerce\n</code></pre>\n\n<p>I can trivially prove <code>Coercible a b =&gt; forall x. Coercible (a x) (b x)</code></p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>introduce :: (a ~=~ b) -&gt; (forall x. a x ~=~ b x)\nintroduce IsCoercible = IsCoercible\n</code></pre>\n\n<p>But not the converse, <code>(forall x. Coercible (a x) (b x)) =&gt; Coercible a b)</code> isn't quite as free:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>eliminate :: (forall x. a x ~=~ b x) -&gt; (a ~=~ b)\neliminate IsCoercible = IsCoercible\n{-\n   \u2022 Could not deduce: Coercible a b\n        arising from a use of \u2018IsCoercible\u2019\n      from the context: Coercible (a x0) (b x0)\n        bound by a pattern with constructor:\n                   IsCoercible :: forall k (a :: k) (b :: k).\n                                  Coercible a b =&gt;\n                                  a ~=~ b,\n                 in an equation for \u2018eliminate\u2019\n-}\n</code></pre>\n\n<p>I'm fairly certain my claim is valid (though I'm open to being disproven), but I'm not having any bright ideas as to how to prove it within Haskell short of <code>unsafeCoerce</code>.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1561659432, "post_id": 56796688, "comment_id": 100147850, "body": "Can you show the <i>full</i> error?"}, {"owner": {"reputation": 421, "user_id": 9184899, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/VPMya.jpg?s=128&g=1", "display_name": "Stefan Dorn", "link": "https://stackoverflow.com/users/9184899/stefan-dorn"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1561659526, "post_id": 56796688, "comment_id": 100147889, "body": "Couldn&#39;t match expected type \u2018a\u2019 with actual type \u2018b\u2019       \u2018b\u2019 is a rigid type variable bound by         the type signature for:           inflate :: forall b. Num b =&gt; MyShape a -&gt; b -&gt; MyShape a         at test2.hs:122:3-9       \u2018a\u2019 is a rigid type variable bound by         the instance declaration         at test2.hs:121:10-33     \u2022 In the second argument of \u2018(*)\u2019, namely \u2018x\u2019       In the first argument of \u2018Circle\u2019, namely \u2018(r * x)\u2019       In the expression: Circle (r * x)"}, {"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 3, "creation_date": 1561663821, "post_id": 56796688, "comment_id": 100149548, "body": "Please put the error in your post above. As you can see, the unformatted version is difficult to read."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 6, "last_activity_date": 1561661041, "last_edit_date": 1561661041, "creation_date": 1561659675, "answer_id": 56796742, "question_id": 56796688, "link": "https://stackoverflow.com/questions/56796688/how-to-fix-couldnt-match-expected-type-error-in-haskell/56796742#56796742", "title": "How to fix &quot;Couldn&#39;t match expected type&quot; error in Haskell?", "body": "<p>The problem is that operations like <strong><code>(+) :: Num a =&gt; a -&gt; a -&gt; a</code></strong>, and <strong><code>(*) :: Num a =&gt; a -&gt; a -&gt; a</code></strong> require that the <em>operands</em> have the <em>same</em> type. You can not add an <code>Int</code> and an <code>Integer</code> together, nor can you multiple a <code>Float</code> with a <code>Double</code>. There exist some conversions like <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:fromIntegral\" rel=\"nofollow noreferrer\"><strong><code>fromIntegral :: (Integral a, Num b) =&gt; a -&gt; b</code></strong></a>, but these, to the best of my knowledge, can not convert an arbitrary <code>Num</code> type to an arbitrary <code>Num</code> type, and furthermore it can result in imprecisions. For example, by converting an <code>Integer</code> to a <code>Float</code>, you could \"lose data\".</p>\n\n<p>Your <code>inflate :: (Geo a, Num b) =&gt; a -&gt; b -&gt; a</code> function, for example, thus results in two different types, the type of the inflate constant <code>x</code>, and the type of the values in the circle. Both are <code>Num</code> types, but not <em>per se</em> the same type.</p>\n\n<p>We can for example make <code>MyShape</code> an instance of a class <code>Geo</code> like:</p>\n\n<pre><code>class Geo a where\n  inflate :: Num b =&gt; a <b>b</b> -&gt; b -&gt; a <b>b</b>\n  area :: Num b =&gt; a <b>b</b> -&gt; b</code></pre>\n\n<p>and then define an instance like:</p>\n\n<pre><code>instance Geo <b>MyShape</b> where\n  inflate (Circle r) x = Circle (r * x)\n  area (Circle r) = 3 * r * r</code></pre>\n\n<p>So here we specified that for a <code>MyShape b</code> with <code>Num b</code>, that there is an <code>inflate :: Num b =&gt; MyShape b -&gt; b -&gt; MyShape b</code>, the same for <code>area :: Num b =&gt; MyShap b -&gt; b</code>.</p>\n"}], "owner": {"reputation": 421, "user_id": 9184899, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/VPMya.jpg?s=128&g=1", "display_name": "Stefan Dorn", "link": "https://stackoverflow.com/users/9184899/stefan-dorn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 183, "favorite_count": 0, "accepted_answer_id": 56796742, "answer_count": 1, "score": 1, "last_activity_date": 1561704387, "creation_date": 1561659378, "last_edit_date": 1561704387, "question_id": 56796688, "link": "https://stackoverflow.com/questions/56796688/how-to-fix-couldnt-match-expected-type-error-in-haskell", "title": "How to fix &quot;Couldn&#39;t match expected type&quot; error in Haskell?", "body": "<p>I am a newbie in Haskell and study type classes now. I created a simple type class but unfortunately I am not able to fix</p>\n\n<blockquote>\n  <p>Couldn't match expected type</p>\n</blockquote>\n\n<pre><code>-- So a can be Int, Float etc\ndata MyShape a = Circle a -- etc like | Rectangle a a \n  deriving(Show)\n\nclass Geo a where\n  inflate :: Num b =&gt; a -&gt; b -&gt; a\n  area :: Num b =&gt; a -&gt; b\n\ninstance Num a =&gt; Geo (MyShape a) where\n  inflate (Circle r) x = Circle (r * x)\n  area (Circle r) = 3 * r * r\n</code></pre>\n\n<p>It does not like both inflate and area functions.</p>\n\n<p>Error:</p>\n\n\n\n<pre><code>\u2022 Couldn't match expected type \u2018a\u2019 with actual type \u2018b\u2019\n      \u2018b\u2019 is a rigid type variable bound by\n        the type signature for:\n          inflate :: forall b. Num b =&gt; MyShape a -&gt; b -&gt; MyShape a\n        at test2.hs:122:3-9\n      \u2018a\u2019 is a rigid type variable bound by\n        the instance declaration\n        at test2.hs:121:10-33\n    \u2022 In the second argument of \u2018(*)\u2019, namely \u2018x\u2019\n      In the first argument of \u2018Circle\u2019, namely \u2018(r * x)\u2019\n      In the expression: Circle (r * x)\n    \u2022 Relevant bindings include\n        x :: b (bound at test2.hs:122:22)\n        r :: a (bound at test2.hs:122:19)\n        inflate :: MyShape a -&gt; b -&gt; MyShape a (bound at test2.hs:122:3)\n    |\n122 |   inflate (Circle r) x = Circle (r * x)\n    |                                      ^\n</code></pre>\n"}, {"tags": ["haskell", "coercion"], "comments": [{"owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 3, "creation_date": 1561647976, "post_id": 56793753, "comment_id": 100142509, "body": "Ok, I think I&#39;ve got it. There&#39;s an implicit <code>type role Iso representational nominal nominal</code> since there&#39;s no way for the compiler to predict whether <code>m</code>&#39;s parameters are nominal or representational, so it plays it safe.  Now I just wish there was a way I could require <code>type role m representational representational</code>"}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 4, "creation_date": 1561648783, "post_id": 56793753, "comment_id": 100142974, "body": "It will be possible to specify such type roles after this GHC proposal is implemented: <a href=\"https://github.com/ghc-proposals/ghc-proposals/pull/233\" rel=\"nofollow noreferrer\">github.com/ghc-proposals/ghc-proposals/pull/233</a> I&#39;ve run into a similar problem just yesterday."}], "answers": [{"comments": [{"owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 1, "creation_date": 1561648121, "post_id": 56794003, "comment_id": 100142593, "body": "Yeah, I was expecting some sort of dependent type roles where <code>type role Iso m = type role m</code>"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 1, "creation_date": 1561648238, "post_id": 56794003, "comment_id": 100142661, "body": "@rampion Indeed. I tried to attach the <code>type role</code> to the synonym but that&#39;s also disallowed."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 9, "last_activity_date": 1561650763, "last_edit_date": 1561650763, "creation_date": 1561648035, "answer_id": 56794003, "question_id": 56793753, "link": "https://stackoverflow.com/questions/56793753/why-do-i-have-to-coerce-this-data-type-by-fields-rather-than-all-at-once/56794003#56794003", "title": "Why do I have to coerce this data type by fields, rather than all at once?", "body": "<p>The problem lies in the roles of the arguments <code>m</code> in your general <code>Iso</code> type.</p>\n\n<p>Consider:</p>\n\n<pre><code>data T a b where\n  K1 :: Int    -&gt; T () ()\n  K2 :: String -&gt; T () (Identity ())\n\ntype (&lt;-&gt;) = Iso T\n</code></pre>\n\n<p>You can't really expect to be able to convert <code>T () ()</code> into <code>T () (Identity ())</code> even if <code>()</code> and <code>Identity ()</code> are coercible.</p>\n\n<p>You would need something like (pseudo code):</p>\n\n<pre><code>type role m representational representational =&gt;\n          (Iso m) representational representational\n</code></pre>\n\n<p>but this can not be done in current Haskell, I believe.</p>\n"}, {"comments": [{"owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 0, "creation_date": 1561753566, "post_id": 56812683, "comment_id": 100179905, "body": "Nice! Doesn\u2019t work in my current case as <a href=\"https://github.com/rampion/concrete-kinds/blob/8e1285fa8f30d1db50e2b656ab8d731a1f3a9d20/src/Kind/Concrete/Natural.hs#L35\" rel=\"nofollow noreferrer\"><code>m</code> is a natural transformation</a> but definitely a useful trick to put in my toolbox."}], "tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": false, "score": 2, "last_activity_date": 1561752839, "last_edit_date": 1561752839, "creation_date": 1561752495, "answer_id": 56812683, "question_id": 56793753, "link": "https://stackoverflow.com/questions/56793753/why-do-i-have-to-coerce-this-data-type-by-fields-rather-than-all-at-once/56812683#56812683", "title": "Why do I have to coerce this data type by fields, rather than all at once?", "body": "<p>Not a direct answer, but I want to share this relevant trick: Whenever <code>m</code> is a <a href=\"http://hackage.haskell.org/package/profunctors-5.4/docs/Data-Profunctor.html\" rel=\"nofollow noreferrer\">profunctor</a> (I suspect it will usually be), you can use a Yoneda-esque transformation to make an equivalent type with representational arguments.</p>\n\n<pre><code>newtype ProYo m a b = Yo2 (forall x y. (x -&gt; a) -&gt; (b -&gt; y) -&gt; m x y)\n</code></pre>\n\n<p><code>ProYo m</code> is isomorphic to <code>m</code>, except its argument roles are representational, by the following isomorphism:</p>\n\n<pre><code>toProYo :: (Profunctor m) =&gt; m a b -&gt; ProYo m a b\ntoProYo m = ProYo (\\f g -&gt; dimap f g m)\n\nfromProYo :: ProYo m a b -&gt; m a b\nfromProYo (ProYo p) = p id id\n</code></pre>\n\n<p>If we define your <code>Iso</code> in terms of this</p>\n\n<pre><code>data Iso m a b = Iso { to :: ProYo m a b, from :: ProYo m b a }\n</code></pre>\n\n<p><code>coerceIso</code> passes without modification.</p>\n"}], "owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 127, "favorite_count": 2, "accepted_answer_id": 56794003, "answer_count": 2, "score": 8, "last_activity_date": 1561752839, "creation_date": 1561647235, "question_id": 56793753, "link": "https://stackoverflow.com/questions/56793753/why-do-i-have-to-coerce-this-data-type-by-fields-rather-than-all-at-once", "title": "Why do I have to coerce this data type by fields, rather than all at once?", "body": "<p>I have two types <code>(&lt;-&gt;)</code> and <code>(&lt;--&gt;)</code> representing isomorphisms between types:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>data Iso (m :: k -&gt; k -&gt; *) a b = Iso { to :: m a b, from :: m b a }\ntype (&lt;-&gt;) = Iso (-&gt;)\ninfix 0 &lt;-&gt;\n\ndata (&lt;--&gt;) a b = Iso' { to' :: a -&gt; b, from' :: b -&gt; a }\ninfix 0 &lt;--&gt;\n</code></pre>\n\n<p>The only difference between the two is that <code>(&lt;-&gt;)</code> is a specialization of a more general type.</p>\n\n<p>I can <code>coerce</code> <code>(&lt;--&gt;)</code> isomorphisms easily:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>coerceIso' :: (Coercible a a', Coercible b b') =&gt; (a &lt;--&gt; b) -&gt; (a' &lt;--&gt; b')\ncoerceIso' = coerce \n</code></pre>\n\n<p>But I get an error when I try the same with <code>(&lt;-&gt;)</code> isomorphisms:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>coerceIso :: (Coercible a a', Coercible b b') =&gt; (a &lt;-&gt; b) -&gt; (a' &lt;-&gt; b')\ncoerceIso = coerce\n{-\nsrc/Data/Iso.hs:27:13: error:\n    \u2022 Couldn't match type \u2018a\u2019 with \u2018a'\u2019 arising from a use of \u2018coerce\u2019\n      \u2018a\u2019 is a rigid type variable bound by\n        the type signature for:\n          coerceIso :: forall a a' b b'.\n                       (Coercible a a', Coercible b b') =&gt;\n                       (a &lt;-&gt; b) -&gt; a' &lt;-&gt; b'\n        at src/Data/Iso.hs:25:1-73\n      \u2018a'\u2019 is a rigid type variable bound by\n        the type signature for:\n          coerceIso :: forall a a' b b'.\n                       (Coercible a a', Coercible b b') =&gt;\n                       (a &lt;-&gt; b) -&gt; a' &lt;-&gt; b'\n        at src/Data/Iso.hs:25:1-73\n\n-}\n</code></pre>\n\n<p>My current work-around is to coerce the forwards and backwards functions separately:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>coerceIso :: (Coercible a a', Coercible b b') =&gt; (a &lt;-&gt; b) -&gt; (a' &lt;-&gt; b')\ncoerceIso (Iso f f') = Iso (coerce f) (coerce f')\n</code></pre>\n\n<p>But why is such a workaround is necessary? Why can't <code>(&lt;-&gt;)</code> be coerced directly?</p>\n"}, {"tags": ["haskell", "template-haskell", "storable", "ghc-generics"], "comments": [{"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 1, "creation_date": 1561651142, "post_id": 56790032, "comment_id": 100144261, "body": "Note that <code>Data.Vector.Storable</code> in the <code>vector</code> package itself provides vectors for any storable type which are, of course, unboxed.  See <a href=\"https://stackoverflow.com/questions/40176678/differences-between-storable-and-unboxed-vectors\" title=\"differences between storable and unboxed vectors\">stackoverflow.com/questions/40176678/&hellip;</a> for some notes on when they might be appropriate.  (I think memory fragmentation hysteria will be unwarranted in most applications.)"}, {"owner": {"reputation": 3832, "user_id": 2553416, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/3cb1756924bd03cc01d107852dd81acf?s=128&d=identicon&r=PG", "display_name": "LogicChains", "link": "https://stackoverflow.com/users/2553416/logicchains"}, "reply_to_user": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1561710180, "post_id": 56790032, "comment_id": 100160988, "body": "@K.A.Buhr If I just used <code>Data.Vector.Storable</code> in the times that link recommends <code>Unbox</code>, for convenience and to avoid TH, would that be an acceptable trade-off or would it be considered bad code?"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 3, "creation_date": 1561722847, "post_id": 56790032, "comment_id": 100166808, "body": "I think most of the time <code>Storable</code> does a perfectly fine job, if only because it&#39;s easier to understand, but also because the memory layout is arguably often what you want with respect to cache locality. If for some reason it needs to be GC-controlled <code>Primitive</code> would be the next alternative. Although the vector library puts <code>Unboxed</code> prominently (even saying &quot;Implementing unboxed vectors for new data types can be very easy.&quot;) I would argue it&#39;s not as user-friendly as the other alternatives."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1561729743, "post_id": 56793963, "comment_id": 100170345, "body": "I would expect the big sticking point to be the fact that there are data families running around that need instances. But maybe I&#39;m missing something."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 3, "last_activity_date": 1561648328, "last_edit_date": 1561648328, "creation_date": 1561647910, "answer_id": 56793963, "question_id": 56790032, "link": "https://stackoverflow.com/questions/56790032/would-it-be-possible-to-derive-data-vector-unbox-via-ghcs-generic-deriving/56793963#56793963", "title": "Would it be possible to derive Data.Vector.Unbox via GHC&#39;s generic deriving?", "body": "<p>Say we had some <code>Generic_</code> class to convert between our own types and some uniform representation which happens to have an <code>Unbox</code> instance (which amounts to both <code>MVector</code> and <code>Vector</code> instances for the <code>Unboxed</code> variants):</p>\n\n<pre><code>class Generic_ a where\n  type Rep_ (a :: Type) :: Type\n  to_ :: a -&gt; Rep_ a\n  from_ :: Rep_ a -&gt; a\n</code></pre>\n\n<p>Then we can use that to obtain generic implementations of the methods of <a href=\"https://hackage.haskell.org/package/vector-0.12.0.3/docs/Data-Vector-Generic-Mutable.html\" rel=\"nofollow noreferrer\"><code>MVector</code></a>/<a href=\"https://hackage.haskell.org/package/vector-0.12.0.3/docs/Data-Vector-Generic.html\" rel=\"nofollow noreferrer\"><code>Vector</code></a>:</p>\n\n<pre><code>-- (auxiliary definitions of CMV and uncoercemv at the end of this block)\n-- vector imports (see gist at the end for a compilable sample)\nimport qualified Data.Vector.Unboxed as U\nimport qualified Data.Vector.Unboxed.Mutable as UM\nimport Data.Vector.Generic.Mutable.Base (MVector(..))\n\n\n\n-- MVector\n\ngbasicLength :: forall a s. CMV s a =&gt; UM.MVector s a -&gt; Int\ngbasicLength = basicLength @UM.MVector @(Rep_ a) @s . coerce\n\ngbasicUnsafeSlice :: forall a s. CMV s a =&gt; Int -&gt; Int -&gt; UM.MVector s a -&gt; UM.MVector s a\ngbasicUnsafeSlice i j = uncoercemv . basicUnsafeSlice @UM.MVector @(Rep_ a) @s i j . coerce\n\n-- etc.\n\n\n-- idem Vector\n\n\n-- This constraints holds when the UM.MVector data instance of a is\n-- representationally equivalent to the data instance of its generic\n-- representation (Rep_ a).\ntype CMV s a = (Coercible (UM.MVector s a) (UM.MVector s (Rep_ a)), MVector UM.MVector (Rep_ a))\n\n-- Sadly coerce doesn't seem to want to solve this correctly so we use\n-- unsafeCoerce as a workaround.\nuncoercemv :: CMV s a =&gt; UM.MVector s (Rep_ a) -&gt; UM.MVector s a\nuncoercemv = unsafeCoerce\n</code></pre>\n\n<p>Now if we have some generic type</p>\n\n<pre><code>data MyType = MyCons Int Bool ()\n</code></pre>\n\n<p>We can define a generic instance with its isomorphism to a tuple</p>\n\n<pre><code>instance Generic_ MyType where\n  type Rep_ MyType = (Int, Bool, ())\n  to_ (MyCons a b c) = (a, b, c)\n  from_ (a, b, c) = MyCons a b c\n</code></pre>\n\n<p>And from there, there is a totally generic recipe to get its <code>Unbox</code> instance, if you have <code>YourType</code> instead with its own <code>Generic_</code> instance, you can take this and literally replace <code>MyType</code> with <code>YourType</code>.</p>\n\n<pre><code>newtype instance UM.MVector s MyType\n  = MVMyType { unMVMyType :: UM.MVector s (Rep_ MyType) }\n\ninstance MVector UM.MVector MyType where\n  basicLength = gbasicLength\n  basicUnsafeSlice = gbasicUnsafeSlice\n  -- etc.\n\n-- idem (Vector U.Vector MyType)\n\n-- MVector U.Vector &amp; Vector UM.MVector   =   Unbox\ninstance Unbox MyType\n</code></pre>\n\n<p>In theory all this boilerplate could be automated with internal language features (as opposed to TemplateHaskell or CPP). But there are various issues that get in the way in the current state of things.</p>\n\n<p>First, <code>Generic_</code> is essentially <code>Generic</code> from <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Generics.html\" rel=\"nofollow noreferrer\"><code>GHC.Generics</code></a>. However, the uniform representation that gets derived by GHC is not in terms of tuples <code>(,)</code> but in terms of somewhat ad-hoc type constructors (<code>:+:</code>, <code>:*:</code>, <code>M1</code>, etc.), which lack <code>Unbox</code> instances.</p>\n\n<ul>\n<li>Such <code>Unbox</code> instances could be added to use <code>Generic</code> directly</li>\n<li>the <a href=\"https://hackage.haskell.org/package/generics-eot-0.4.0.1/docs/Generics-Eot.html\" rel=\"nofollow noreferrer\">generics-eot</a> has a variant of <code>Generic</code> relying on tuples that could be a direct replacement to <code>Generic_</code> here.</li>\n</ul>\n\n<p>And second, <code>MVector</code> and <code>Vector</code> have quite a few methods. To avoid having to list them all, one might expect to leverage <code>DerivingVia</code> (or <code>GeneralizedNewtypeDeriving</code>), however they are not applicable because there are a couple of polymorphic monadic methods that prevent coercions (e.g., <code>basicUnsafeNew</code>). For now, the easiest way I can think of to abstract this is a CPP macro. In fact the vector package uses that technique internally, and it might be reusable somehow. I believe properly addressing those issues requires a deep redesign of the Vector/MVector architecture.</p>\n\n<p>Gist (not complete, but compilable): <a href=\"https://gist.github.com/Lysxia/c7bdcbba548ee019bf6b3f1e388bd660\" rel=\"nofollow noreferrer\">https://gist.github.com/Lysxia/c7bdcbba548ee019bf6b3f1e388bd660</a></p>\n"}], "owner": {"reputation": 3832, "user_id": 2553416, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/3cb1756924bd03cc01d107852dd81acf?s=128&d=identicon&r=PG", "display_name": "LogicChains", "link": "https://stackoverflow.com/users/2553416/logicchains"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 210, "favorite_count": 0, "accepted_answer_id": 56793963, "answer_count": 1, "score": 3, "last_activity_date": 1561648328, "creation_date": 1561634886, "question_id": 56790032, "link": "https://stackoverflow.com/questions/56790032/would-it-be-possible-to-derive-data-vector-unbox-via-ghcs-generic-deriving", "title": "Would it be possible to derive Data.Vector.Unbox via GHC&#39;s generic deriving?", "body": "<p>It's possible to derive <code>Storable</code> via GHC's generic deriving mechanism: <a href=\"http://hackage.haskell.org/package/derive-storable\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/derive-storable</a> (and <a href=\"https://hackage.haskell.org/package/derive-storable-plugin\" rel=\"nofollow noreferrer\">https://hackage.haskell.org/package/derive-storable-plugin</a> for performance). The only library I can find for deriving <code>Data.Vector.Unbox</code>, however, uses template Haskell: <a href=\"http://hackage.haskell.org/package/vector-th-unbox\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/vector-th-unbox</a>. It also requires the user to write a little code; it's not entirely automatic.</p>\n\n<p>My question is, could a library like <code>deriving-storable</code> also exist for <code>Unbox</code>, or is this not possible due to some fundamental way in which <code>Unbox</code> differs from <code>Storable</code>? If the latter, does that mean it's also not possible to create a library that allows automatically deriving <code>Unbox</code> for any <code>Storable</code> type, as I could not find such a library.</p>\n\n<p>I ask because ideally I'd like to avoid template Haskell and the manual annotations necessary for using <code>vector-th-unbox</code>.</p>\n"}, {"tags": ["haskell", "ghc"], "comments": [{"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1561645122, "post_id": 56786036, "comment_id": 100140674, "body": "This does interact with inlining and strictness analysis (and e.g. funbox-strict of course).  This is all really easy to see in core if you want to experiment."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1561652770, "post_id": 56786036, "comment_id": 100145060, "body": "Yo, no, definitely don&#39;t wrap everything in tuples! That&#39;s a lot of work for you, and the <i>best case</i> described by this text is that GHC sees through your stupidity and undoes it, rewriting your newly refactored code back to what it was before you did the refactor. Worst case you do a lot of work and GHC doesn&#39;t notice it can undo it, leaving you with a slower, more memory-hungry program!"}], "answers": [{"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 11, "last_activity_date": 1561622855, "creation_date": 1561622855, "answer_id": 56786642, "question_id": 56786036, "link": "https://stackoverflow.com/questions/56786036/clarification-on-optimizing-single-constructor-datatypes-in-ghc/56786642#56786642", "title": "Clarification on optimizing Single-constructor datatypes in GHC", "body": "<blockquote>\n  <p>I don't really see how this is an optimization when the tuple gets unwrapped anyway.</p>\n</blockquote>\n\n<p><em>That is</em> the optimisation: that the tuple gets unwrapped. IOW, the program that eventually runs never contains a tuple at all, it just contains a two-argument function call.</p>\n\n<p>One might also put this in more pessimistic terms: ab initio, <em>tuples are inherently bad</em> for performance. That's because a tuple argument requires <em>three</em> pointer indirections: a thunk for the entire tuple, a thunk for the <code>fst</code> element, and a thunk for the <code>snd</code> element. So in principle, for performance it's a very bad idea to wrap your data into tuples. (Better put it in <code>data</code> structs with strict fields.) That is, of course, unless you really do need laziness at all of these spots.</p>\n\n<p><em>However</em>, and that's what the quote is all about, in practice it's generally still fine to use tuples in GHC, because it can usually optimise the indirection away if it can prove that it isn't actually needed.</p>\n"}], "owner": {"reputation": 1185, "user_id": 3228230, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/m9lny.jpg?s=128&g=1", "display_name": "paperduck", "link": "https://stackoverflow.com/users/3228230/paperduck"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 84, "favorite_count": 0, "accepted_answer_id": 56786642, "answer_count": 1, "score": 5, "last_activity_date": 1561622855, "creation_date": 1561620414, "last_edit_date": 1592644375, "question_id": 56786036, "link": "https://stackoverflow.com/questions/56786036/clarification-on-optimizing-single-constructor-datatypes-in-ghc", "title": "Clarification on optimizing Single-constructor datatypes in GHC", "body": "<p>I was reading about how to optimize my Haskell code and came across a note about <a href=\"https://wiki.haskell.org/Performance/Data_types\" rel=\"noreferrer\">Single-constructor datatypes in GHC</a>.</p>\n<p>Excerpt:</p>\n<blockquote>\n<p>GHC loves single-constructor datatypes, such as tuples. A single-constructor datatype can be unpacked when it is passed to a strict function. For example, given this function:</p>\n<pre><code>f (x,y) = ...\n</code></pre>\n<p>GHC's strictness analyser will detect that f is strict in its argument, and compile the function like this:</p>\n<pre><code>f z = case z of (x,y) -&gt; f' x y\nf' x y = ...\n</code></pre>\n<p>where f is called the wrapper, and f' is called the worker. The wrapper is inlined everywhere, so for example if you had a call to f like this:</p>\n<pre><code>... f (3,4) ...\n</code></pre>\n<p>this will end up being compiled to</p>\n<pre><code>... f' 3 4 ...\n</code></pre>\n<p>and the tuple has been completely optimised away.</p>\n</blockquote>\n<p>Does this mean I should go through my program and wrap up all function arguments into one tuple? I don't really see how this is an optimization when the tuple gets unwrapped anyway.</p>\n<p>Is this an alternative to the <code>INLINE</code> pragma? Should I use both? Only one? Is one better?</p>\n"}, {"tags": ["haskell", "haskell-stack"], "comments": [{"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 1, "creation_date": 1561600937, "post_id": 56782753, "comment_id": 100120540, "body": "See <a href=\"https://stackoverflow.com/questions/50659327/stack-build-results-in-output-was-redirected-with-o-but-no-output-will-be-gen/50659706#50659706\" title=\"stack build results in output was redirected with o but no output will be gen\">stackoverflow.com/questions/50659327/&hellip;</a>"}, {"owner": {"reputation": 1543, "user_id": 809584, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/5d577a1b45100bc0d0492b6f87d96a04?s=128&d=identicon&r=PG", "display_name": "alexakarpov", "link": "https://stackoverflow.com/users/809584/alexakarpov"}, "reply_to_user": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1561602286, "post_id": 56782753, "comment_id": 100120752, "body": "never mind the previous comment, it worked - I didn&#39;t realize I need to get in the 2nd of two states listed for this workaround to take effect"}], "owner": {"reputation": 1543, "user_id": 809584, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/5d577a1b45100bc0d0492b6f87d96a04?s=128&d=identicon&r=PG", "display_name": "alexakarpov", "link": "https://stackoverflow.com/users/809584/alexakarpov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 45, "favorite_count": 1, "closed_date": 1561689293, "answer_count": 0, "score": 1, "last_activity_date": 1561600800, "creation_date": 1561598577, "last_edit_date": 1561600800, "question_id": 56782753, "link": "https://stackoverflow.com/questions/56782753/haskell-stack-one-project-with-multiple-executables", "closed_reason": "Duplicate", "title": "haskell Stack - one project with multiple executables", "body": "<p>trying to have 2 executables in my properly named 'MyFirstProject'</p>\n\n<pre><code>executables:\n  run-it:\n    source-dirs: app/\n    main: Main.hs\n    dependencies:\n      MyFirstProject\n  hello:\n    source-dirs: app/Hello/\n    main: Main.hs\n</code></pre>\n\n<p>(MyFirstProject is a library inside this same project, but it's completely irrelevant)</p>\n\n<pre><code>\u00b1 |master U:3 ?:2 \u2717| \u2192 tree app/\napp/\n\u251c\u2500\u2500 Hello\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 Main.hs\n\u2514\u2500\u2500 Main.hs\n</code></pre>\n\n<p>stack build fails, because my hello's module isn't called Main:</p>\n\n<pre><code>&lt;no location info&gt;: error:\n    output was redirected with -o, but no output will be generated\nbecause there is no Main module.\n</code></pre>\n\n<p>it is correct - given the tree above, the module is named Hello.Main:</p>\n\n<pre><code>module Hello.Main where\n\nmain :: IO ()\nmain = putStrLn \"Hello, world\"\n</code></pre>\n\n<p>but, of course, if I were to call it Main, I will get the expected:</p>\n\n<pre><code>    File name does not match module name:\n    Saw: \u2018Main\u2019\n    Expected: \u2018Hello.Main\u2019\n  |\n1 | module Main where\n  |        ^^^^\n</code></pre>\n\n<p>feels like catch 22, eh? I can't call the module Main AND place it at the root of app/, because there's a default-generated one in there already (which builds no problem, if I comment the 'hello' one out)</p>\n"}]