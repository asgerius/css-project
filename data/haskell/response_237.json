[{"tags": ["haskell", "monads", "do-notation"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 2, "creation_date": 1564012412, "post_id": 57192516, "comment_id": 100894508, "body": "Yes. <code>do</code> notation, as mentioned, is simply syntactic sugar for monad operations. In your example with the <code>Functor</code> instance for <code>IO</code>, we have already defined the monad operations on <code>IO</code> and are using them to define <code>fmap</code>."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1564012709, "post_id": 57192516, "comment_id": 100894567, "body": "Well there is also <code>ApplicativeDo</code>, a GHC extension which allows do notation to be used with Applicatives. I&#39;ve never tried using it myself but I&#39;m sure I read somewhere that it might be added to the language officially whenever they produce the next report."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1564026902, "post_id": 57192516, "comment_id": 100896860, "body": "@RobinZigmond, I hope not. It&#39;s not really the best behaved of extensions. But perhaps it can be cleaned up."}], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "edited": false, "score": 0, "creation_date": 1564013729, "post_id": 57192720, "comment_id": 100894723, "body": "Thanks. How do you know &quot;In the definition for Functor IO you quote above, the Monad IO instance has already been defined&quot;, i.e. what is defined before what?"}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "reply_to_user": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "edited": false, "score": 3, "creation_date": 1564013905, "post_id": 57192720, "comment_id": 100894747, "body": "@Tim I know it in a holistic way because they&#39;re using <code>do</code>-notation to define <code>fmap</code>! However, in general there&#39;s no way of measuring the order of definition in Haskell, since mutual recursion is possible. Rather, I mean that the Monad instance is defined, and in a way that does not refer to <code>fmap</code> recursively. I can discover this by looking up the definition on <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:IO\" rel=\"nofollow noreferrer\">hoogle</a>."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 1, "creation_date": 1564014904, "post_id": 57192720, "comment_id": 100894907, "body": "Look at rule 3 a bit more closely. It&#39;s a purely syntactic desugaring. <code>do ()</code> is valid, and not monadic. It&#39;s just not very useful."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1564015310, "post_id": 57192720, "comment_id": 100894973, "body": "@Carl Thanks for pointing out that edge case. I&#39;ve added a little bit about that. I actually had to check with GHCi that <code>do ()</code> is indeed valid!"}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 1, "creation_date": 1564015974, "post_id": 57192720, "comment_id": 100895079, "body": "@AJFarmar Additionally, if you do <code>do { one_expr }</code>, that isn\u2019t monadic either. That may seem like an edge case, but I\u2019ve seen a suggestion that you could use it when <code>$</code> isn\u2019t quite right e.g. doing <code>(,) &lt;$&gt; do long_exp_number_1 {-newline-} &lt;*&gt; do long_exp_number_2</code>. I\u2019ll link to it if I can find the original advice."}], "tags": [], "owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "is_accepted": true, "score": 5, "last_activity_date": 1564141852, "last_edit_date": 1564141852, "creation_date": 1564013567, "answer_id": 57192720, "question_id": 57192516, "link": "https://stackoverflow.com/questions/57192516/is-do-notation-used-necessarily-in-the-context-of-monad/57192720#57192720", "title": "Is do notation used necessarily in the context of monad?", "body": "<p><strong>Yes. As the article quoted states, <code>do</code>-notation is simply</strong> <em>syntactic sugar</em> <strong>for the monad operations.</strong></p>\n\n<p>These are <a href=\"https://en.wikibooks.org/wiki/Haskell/do_notation#Translating_the_bind_operator\" rel=\"nofollow noreferrer\">the rules</a> for de-sugaring <code>do</code>-notation:</p>\n\n<ol>\n<li><code>do {foobar; ...} = foobar &gt;&gt; do {...}</code> (aka <code>foobar &gt;&gt;= \\_ -&gt; do {...}</code>)</li>\n<li><code>do {a &lt;- foobar; ...} = foobar &gt;&gt;= \\a -&gt; do {...}</code></li>\n<li><code>do {foobar} = foobar</code></li>\n</ol>\n\n<p>Necessarily this means that <code>do</code>-notation works entirely on monads, except in the trivial case that rule 3 describes.</p>\n\n<p>So for instance, as the article states, <code>do {putStr \"x: \"; l &lt;- getLine; return (words l)}</code> is exactly equal to <code>putStr \"x: \" &gt;&gt; (getLine &gt;&gt;= \\l -&gt; return (words l))</code>, which you may confirm via the de-sugaring rules.</p>\n\n<p>In the definition for <code>Functor IO</code> you quote above, the <code>Monad IO</code> instance has already been defined, and so we are using it to define the <code>Functor</code> instance, too. </p>\n\n<p>It may also be useful to note that all monads are necessarily functors (see the <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#t:Monad\" rel=\"nofollow noreferrer\">definition of the <code>Monad</code> typeclass</a>), so when one says <code>do</code>-notation works on monads, it also necessarily works on the functors as well. I suspect this may be a point of confusion.</p>\n\n<hr>\n\n<p><em>It is worth noting that in certain restricted cases, it is possible to use only <code>Applicative</code> operations rather than the more general <code>Monad</code> operations. For instance, the example the article provides could be written as <code>putStr \"x: \" *&gt; (pure words &lt;*&gt; getLine)</code>. There is an experimental language extension called <a href=\"https://gitlab.haskell.org/ghc/ghc/wikis/applicative-do\" rel=\"nofollow noreferrer\"><code>ApplicativeDo</code></a> which adds to GHC the capability to recognise these situations and generalise certain cases of <code>do</code>-notation to all applicatives, not just all monads.</em></p>\n"}, {"tags": [], "owner": {"reputation": 5755, "user_id": 394253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/985ef765f821b00d3b41ac5ca8aef6a0?s=128&d=identicon&r=PG", "display_name": "Ed&#39;ka", "link": "https://stackoverflow.com/users/394253/edka"}, "is_accepted": false, "score": 2, "last_activity_date": 1564106406, "last_edit_date": 1564106406, "creation_date": 1564038645, "answer_id": 57196203, "question_id": 57192516, "link": "https://stackoverflow.com/questions/57192516/is-do-notation-used-necessarily-in-the-context-of-monad/57196203#57196203", "title": "Is do notation used necessarily in the context of monad?", "body": "<p>Well, with <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#extension-RebindableSyntax\" rel=\"nofollow noreferrer\">RebindableSyntax</a> extension it will use whatever <code>(&gt;&gt;=)</code>, <code>(&gt;&gt;)</code>, and <code>fail</code> are in scope. So technically <code>Monad</code> is not required in such case and you can do something as silly as:</p>\n\n<pre><code>{-# LANGUAGE RebindableSyntax #-}\n\na &gt;&gt;= b = b a\nreturn a = a\n\n-- test == (\"foo\",\"boo\")\ntest = do\n  a &lt;- \"foo\"\n  b &lt;- \"boo\"\n  return (a,b)\n</code></pre>\n"}], "owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 237, "favorite_count": 0, "accepted_answer_id": 57192720, "answer_count": 2, "score": 1, "last_activity_date": 1564141852, "creation_date": 1564011544, "last_edit_date": 1564012458, "question_id": 57192516, "link": "https://stackoverflow.com/questions/57192516/is-do-notation-used-necessarily-in-the-context-of-monad", "title": "Is do notation used necessarily in the context of monad?", "body": "<p>Haskell report 2010 says</p>\n\n<blockquote>\n  <p>A do expression provides <strong>a more conventional syntax for monadic\n  programming</strong>. It allows an expression such as</p>\n\n<pre><code>putStr \"x: \" &gt;&gt;\ngetLine &gt;&gt;= \\l -&gt;\nreturn (words l)\n</code></pre>\n  \n  <p>to be written in a more traditional way as:</p>\n\n<pre><code>do putStr \"x: \"\n   l &lt;- getLine\n   return (words l)\n</code></pre>\n</blockquote>\n\n<p>Haskell the Craft of Functional programming by Thompson says</p>\n\n<blockquote>\n  <p>We'll continue to use the do notation, but will keep in mind that it essentially\n  <strong>boils down to the existence of a function (>>=)</strong> which does the work of sequencing I/O\n  programs, and binding their results for future use.</p>\n</blockquote>\n\n<p>Do the above mean that do notation is used  necessarily in the context of monad?</p>\n\n<p>If yes, why does the following functor  use the do notation?</p>\n\n<pre><code>instance    Functor IO  where\n    --  fmap    ::  (a  -&gt;  b)  -&gt;  IO  a   -&gt;  IO  b\n    fmap    g   mx  =   do  {x  &lt;-  mx; return  (g  x)}\n</code></pre>\n"}, {"tags": ["haskell", "applicative"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1564002371, "post_id": 57190996, "comment_id": 100892105, "body": "For equality to hold, the types have to be the same (up to alpha renaming) on both sides."}, {"owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1564002546, "post_id": 57190996, "comment_id": 100892166, "body": "which is why I have my question."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1564003133, "post_id": 57190996, "comment_id": 100892349, "body": "You might want to look at <a href=\"https://stackoverflow.com/a/48797365/1126841\">this answer</a> for some intuition."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1564003192, "post_id": 57190996, "comment_id": 100892367, "body": "The LHS of that law should be <code>x &lt;*&gt; (y &lt;*&gt; z)</code>, else it doesn&#39;t make sense."}], "answers": [{"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 6, "last_activity_date": 1564003691, "creation_date": 1564003691, "answer_id": 57191498, "question_id": 57190996, "link": "https://stackoverflow.com/questions/57190996/what-does-this-law-of-applicative-mean/57191498#57191498", "title": "What does this law of applicative mean?", "body": "<p>The applicative laws are easier understood in the equivalent <a href=\"https://en.wikipedia.org/wiki/Monoidal_functor\" rel=\"noreferrer\">monoidal functor</a> representation:</p>\n\n<pre><code>class Functor f =&gt; Monoidal f where\n  pureUnit :: f ()\n  fzip :: f a -&gt; f b -&gt; f (a,b)\n--pure x = fmap (const x) pureUnit\n--fs&lt;*&gt;xs = fmap (\\(f,x)-&gt;f x) $ fzip fs xs\n--pureUnit = pure ()\n--fzip l r = (,) &lt;$&gt; l &lt;*&gt; r\n</code></pre>\n\n<p>Then, the law you're asking about is this:</p>\n\n<pre><code>fzip x (fzip y z) \u2245 fzip (fzip x y) z\n</code></pre>\n\n<p>where by <code>p \u2245 q</code> I mean, equivalent up to re-association of the tuple type, i.e. explicitly</p>\n\n<pre><code>fzip x (fzip y z) \u2261 fmap (\\((a,b),c)-&gt;(a,(b,c))) $ fzip (fzip x y) z\n</code></pre>\n\n<p>So this is really just an associative law. Even better visible when written with an infix <code>(\u22ce) = fzip</code>:</p>\n\n<pre><code>x \u22ce (y \u22ce z) \u2245 (x \u22ce y) \u22ce z\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "is_accepted": false, "score": 2, "last_activity_date": 1564006894, "creation_date": 1564006894, "answer_id": 57191993, "question_id": 57190996, "link": "https://stackoverflow.com/questions/57190996/what-does-this-law-of-applicative-mean/57191993#57191993", "title": "What does this law of applicative mean?", "body": "<p>Stating the law again for ease of reference (which I have corrected by putting the parenthese in, `(&lt;*>) is left associative so the ones on the LHS of the equality are necessary):</p>\n\n<pre><code>x &lt;*&gt; (y &lt;*&gt; z) = ( pure (.) &lt;*&gt; x &lt;*&gt; y) &lt;*&gt; z\n</code></pre>\n\n<p>let's start with your first question:</p>\n\n<pre><code>On the right hand side of the law,\n\ndoes pure (.) have type f((b   -&gt;  c)  -&gt;  (a  -&gt;  b)  -&gt;  (a  -&gt;  c))?\n</code></pre>\n\n<p>Yes it does. <code>(.)</code> has type <code>(b -&gt; c) -&gt; (a -&gt; b) -&gt; (a -&gt; c)</code>, so <code>pure (.)</code> must have type \"<code>f</code> of that\".</p>\n\n<p>We can use this to determine the types of the other identifiers here. In the expression <code>m &lt;*&gt; n</code>, <code>m</code> and <code>n</code> have the general types <code>f (a -&gt; b)</code> and <code>f a</code>. So if we take <code>m</code> as <code>(.)</code>, which has the type shown above, we see that <code>n</code> - which corresponds to <code>x</code> on the RHS of the equality - must have type <code>f (b -&gt; c)</code>. And then <code>pure (.) &lt;*&gt; x</code> will have type <code>f ((a -&gt; b) -&gt; (a -&gt; c))</code>, which by the same reasoning means <code>y</code> will have type <code>f (a -&gt; b)</code>. This produces a type of <code>f (a -&gt; c)</code> for <code>( pure (.) &lt;*&gt; x &lt;*&gt; y)</code> and of <code>f a</code> for <code>z</code> - and thus an overall result type, for the whole RHS (and therefore also the whole LHS) of <code>f c</code>.</p>\n\n<p>So to summarise, just from analysing the RHS, we see that:</p>\n\n<ul>\n<li><code>x :: f (b -&gt; c)</code></li>\n<li><code>y :: f (a -&gt; b)</code></li>\n<li><code>z :: f a</code></li>\n</ul>\n\n<p>It's now easy to check that these work out on the LHS too - <code>y &lt;*&gt; z</code> will have type <code>f b</code>, so <code>x &lt;*&gt; (y &lt;*&gt; z)</code> will have type <code>f c</code>.</p>\n\n<p>I note that there's nothing clever involved in the above, it's just simple type algebra, which can be carried out without any advanced understanding.</p>\n"}], "owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 94, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1564006894, "creation_date": 1564001199, "last_edit_date": 1564001546, "question_id": 57190996, "link": "https://stackoverflow.com/questions/57190996/what-does-this-law-of-applicative-mean", "title": "What does this law of applicative mean?", "body": "<p>Applicative is declared as</p>\n\n<pre><code>class   Functor f   =&gt;  Applicative f   where\npure    ::  a   -&gt;  f   a\n(&lt;*&gt;)   ::  f   (a  -&gt;  b)  -&gt;  f   a   -&gt;  f   b\n</code></pre>\n\n<p>One of applicative's laws is:</p>\n\n<pre><code>x &lt;*&gt; y &lt;*&gt; z = ( pure (.) &lt;*&gt; x &lt;*&gt; y) &lt;*&gt; z\n</code></pre>\n\n<p>where  <code>(.)</code> is composition between functions:</p>\n\n<pre><code>(.) ::  (b  -&gt;  c)  -&gt;  (a  -&gt;  b)  -&gt;  (a  -&gt;  c)\nf   .   g   =   \\x  -&gt;  f   (g  x)\n</code></pre>\n\n<p>On the right hand side of the law, </p>\n\n<ul>\n<li>does <code>pure (.)</code> have type <code>f((b   -&gt;  c)  -&gt;  (a  -&gt;  b)  -&gt;  (a  -&gt;  c))</code>?</li>\n<li>does <code>x</code> have type <code>f(b-&gt;c)</code>?</li>\n<li>does <code>y</code> have type <code>f(a-&gt;b)</code>?</li>\n<li>does <code>z</code> have type <code>f(a)</code>?</li>\n</ul>\n\n<p>On the left hand side of the law, </p>\n\n<ul>\n<li>does <code>x</code> have type <code>f(a-&gt;b-&gt;c)</code>?</li>\n<li>does <code>y</code> have type <code>f(a)</code>?</li>\n<li>does <code>z</code> have type <code>f(b)</code>?</li>\n</ul>\n\n<p>Thanks.</p>\n"}, {"tags": ["haskell", "functor", "applicative"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1563989843, "post_id": 57188385, "comment_id": 100886950, "body": "If you could, you wouldn&#39;t need the <code>Applicative</code> typeclass. <code>&lt;*&gt;</code> allows you to extract a wrapped function in a way that <code>Functor</code> cannot."}, {"owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1563990033, "post_id": 57188385, "comment_id": 100887031, "body": "However, <code>fmapi,i &gt;=2 or i=0</code> must be satisfied  by applicative not necessarily by functor. I suspect  applicative can be defined fully in terms of <code>fmapi,i &gt;=0</code> instead of <code>pure</code> and <code>&lt;*&gt;</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1564000546, "post_id": 57188385, "comment_id": 100891459, "body": "Why? None of those <code>fmap</code> variants involve a <i>function</i> wrapped by the functor."}, {"owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1564001261, "post_id": 57188385, "comment_id": 100891705, "body": "I was wondering what  &quot;a function wrapped by the functor&quot; means?"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1564007240, "post_id": 57188385, "comment_id": 100893515, "body": "@chepner, actually you can (as I&#39;m 100% sure you know and are just having a mental blank). Tim&#39;s <code>fmap2</code> is the same as the standard <code>liftA2</code> which, together with <code>pure</code> (Tim&#39;s <code>fmap0</code>) is one valid minimal definition of an <code>Applicative</code>. As K.A.Buhr says in his answer, <code>(&lt;*&gt;)</code> can easily be defined in terms of it. That is, applying a &quot;function wrapped in the functor&quot; to an input value also wrapped in the functor can be done as soon as you have a way to lift any function of 2 arguments into the functor (because you just lift the function-application function)."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1564151365, "post_id": 57188385, "comment_id": 100948493, "body": "you already have it in your question. <code>f &lt;*&gt; x = id f &lt;*&gt; x = fmap id f &lt;*&gt; x = fmap1 id f &lt;*&gt; x = pure id &lt;*&gt; f &lt;*&gt; x = fmap2 id f x = liftA2 id f x</code>. thus <code>(&lt;*&gt;) = fmap2 id = liftA2 id</code>. (<a href=\"https://stackoverflow.com/a/54962626/849891\">see</a> <a href=\"https://stackoverflow.com/a/53829742/849891\">also</a>)."}, {"owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "edited": false, "score": 0, "creation_date": 1564425432, "post_id": 57188385, "comment_id": 101018500, "body": "Why don&#39;t you accept the answer? Wasn&#39;t helpful to you?"}], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "edited": false, "score": 0, "creation_date": 1563990408, "post_id": 57188557, "comment_id": 100887196, "body": "Thanks. I suspect applicative can be defined fully in terms of fmapi,i &gt;=0 instead of pure and &lt;*&gt;. So I guess  &lt;*&gt; can be represented in terms of only fmapi,i &gt;=0"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 3, "creation_date": 1563991581, "post_id": 57188557, "comment_id": 100887737, "body": "You suspect correctly, but that would be massive overkill. You only need <code>pure</code> (your <code>fmap0</code>) and either <code>&lt;*&gt;</code> or <code>liftA2</code> (which you have called <code>fmap2</code>) to define an <code>Applicative</code>. So why add an infinite number of different superfluous methods to the class? Indeed it&#39;s the ability to &quot;lift&quot; functions of more than 2 arguments which <code>Applicative</code> is really all about, whereas <code>Functor</code> can only do it for functions of a single argument. (Incidentally, your <code>fmapk</code> are in the standard library as <code>liftAk</code>, for <code>k</code> in the range 2 to some arbitrary number (5 or so I think).)"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1563992637, "post_id": 57188557, "comment_id": 100888228, "body": "Too late to edit, but there&#39;s an important mistake in my comment above: <i>more than 2</i> should be <i>2 or more</i>"}, {"owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "edited": false, "score": 0, "creation_date": 1563995793, "post_id": 57188557, "comment_id": 100889522, "body": "Does <code>where apply g x = g x</code> define a function named <code>apply</code> which takes two arguments <code>g</code> and <code>x</code>?"}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 1, "creation_date": 1563999944, "post_id": 57188557, "comment_id": 100891230, "body": "Yes -- <code>apply g x = g x</code> has type <code>(a -&gt; b) -&gt; a -&gt; b</code>.  It takes two arguments, <code>g</code> and <code>x</code>, and applies <code>g</code> to <code>x</code>.  In fact, <code>apply</code> is actually a specialization of <code>id</code>, so if you replace either <code>($)</code> or <code>apply</code> above with <code>id</code>, the definitions work fine too (i.e., <code>(&lt;*&gt;) = fmap2 id</code> and <code>f &lt;*&gt; a = fmap2 id f a</code>)."}, {"owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "edited": false, "score": 0, "creation_date": 1564145022, "post_id": 57188557, "comment_id": 100944798, "body": "Thanks. Is the implementation of <code>&lt;*&gt;</code> based on <code>fmap</code> special to Maybe applicative or can it be generalized to other applicatives? <a href=\"https://stackoverflow.com/questions/57220345/is-the-implementation-of-based-on-fmap-special-to-maybe-applicative-or-c\" title=\"is the implementation of based on fmap special to maybe applicative or c\">stackoverflow.com/questions/57220345/&hellip;</a>"}], "tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": false, "score": 9, "last_activity_date": 1563990295, "creation_date": 1563990295, "answer_id": 57188557, "question_id": 57188385, "link": "https://stackoverflow.com/questions/57188385/in-applicative-how-can-be-represented-in-terms-of-fmap-i-i-0-1-2/57188557#57188557", "title": "In applicative, how can `&lt;*&gt;` be represented in terms of `fmap_i, i=0,1,2,...`?", "body": "<p>You can write:</p>\n\n<pre><code>(&lt;*&gt;) = fmap2 ($)\n</code></pre>\n\n<p>or, if you find it less obscure:</p>\n\n<pre><code>f &lt;*&gt; a = fmap2 apply f a\n  where apply g x = g x\n</code></pre>\n"}], "owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 115, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1564145441, "creation_date": 1563989493, "last_edit_date": 1564145441, "question_id": 57188385, "link": "https://stackoverflow.com/questions/57188385/in-applicative-how-can-be-represented-in-terms-of-fmap-i-i-0-1-2", "title": "In applicative, how can `&lt;*&gt;` be represented in terms of `fmap_i, i=0,1,2,...`?", "body": "<p>Class Applicative is declared as:</p>\n\n<pre><code>class Functor f   =&gt;  Applicative f   where\npure  ::  a   -&gt;  f   a\n(&lt;*&gt;) ::  f   (a  -&gt;  b)  -&gt;  f   a   -&gt;  f   b\n</code></pre>\n\n<p>We can represent <code>fmapi, i=0,1,2,...</code> in terms of <code>pure</code> and <code>(&lt;*&gt;)</code>:</p>\n\n<pre><code>fmap0 ::  a   -&gt;  f   a\nfmap0 =   pure\nfmap1 ::  (a  -&gt;  b)  -&gt;  f   a   -&gt;  f   b\nfmap1 g   x   =   pure    g   &lt;*&gt; x\nfmap2 ::  (a  -&gt;  b   -&gt;  c)  -&gt;  f   a   -&gt;  f   b   -&gt;  f   c\nfmap2 g   x   y   =   pure    g   &lt;*&gt; x   &lt;*&gt; y\nfmap3 ::  (a  -&gt;  b   -&gt;  c   -&gt;  d)  -&gt;  f   a   -&gt;  f   b   -&gt;  f   c   -&gt;  f   d\nfmap3 g   x   y   z   =   pure    g   &lt;*&gt; x   &lt;*&gt; y   &lt;*&gt; z\n</code></pre>\n\n<p>In applicative, how can <code>&lt;*&gt;</code> be represented in terms of <code>fmap_i, i=0,1,2,...</code>?</p>\n\n<p>Thanks.</p>\n\n<p>See also <a href=\"https://stackoverflow.com/questions/57220345/is-the-implementation-of-based-on-fmap-special-to-maybe-applicative-or-c\">Is the implementation of `&lt;*&gt;` based on `fmap` special to Maybe applicative or can it be generalized to other applicatives?</a></p>\n"}, {"tags": ["list", "haskell", "recursion", "iteration", "higher-order-functions"], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 4, "last_activity_date": 1563980218, "creation_date": 1563980218, "answer_id": 57185856, "question_id": 57185779, "link": "https://stackoverflow.com/questions/57185779/how-to-define-a-list-of-recursive-calls-to-a-function-in-haskell/57185856#57185856", "title": "How to define a list of recursive calls to a function in Haskell", "body": "<p>Haskell has already a function for that: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:iterate\" rel=\"nofollow noreferrer\"><strong><code>iterate :: (a -&gt; a) -&gt; a -&gt; [a]</code></strong></a>. For example:</p>\n\n<pre><code>Prelude&gt; take 10 (iterate (2*) 1)\n[1,2,4,8,16,32,64,128,256,512]\n</code></pre>\n\n<p>Your question is slightly different since the first element should be <code>f 0</code>, instead of <code>0</code>, but we can simply apply <code>f</code> to it, or use <code>tail :: [a] -&gt; [a]</code> on the result. For example:</p>\n\n<pre><code>ls :: Num a =&gt; (a -&gt; a) -&gt; [a]\nls = tail . flip iterate 0</code></pre>\n\n<p>For example:</p>\n\n<pre><code>Prelude&gt; take 10 (ls (1+))\n[1,2,3,4,5,6,7,8,9,10]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 36141, "user_id": 4354477, "user_type": "registered", "accept_rate": 52, "profile_image": "https://i.stack.imgur.com/SuxtS.gif?s=128&g=1", "display_name": "ForceBru", "link": "https://stackoverflow.com/users/4354477/forcebru"}, "is_accepted": false, "score": 4, "last_activity_date": 1563980603, "creation_date": 1563980603, "answer_id": 57185974, "question_id": 57185779, "link": "https://stackoverflow.com/questions/57185779/how-to-define-a-list-of-recursive-calls-to-a-function-in-haskell/57185974#57185974", "title": "How to define a list of recursive calls to a function in Haskell", "body": "<p>Or roll your own:</p>\n\n<pre><code>fn f a = (f a) : (fn f (f a))\n\nmain = print $ take 6 $ fn (5+) 1\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>[6,11,16,21,26,31]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": true, "score": 5, "last_activity_date": 1563982089, "last_edit_date": 1563982089, "creation_date": 1563980770, "answer_id": 57186016, "question_id": 57185779, "link": "https://stackoverflow.com/questions/57185779/how-to-define-a-list-of-recursive-calls-to-a-function-in-haskell/57186016#57186016", "title": "How to define a list of recursive calls to a function in Haskell", "body": "<p>If you want to define this yourself, vs use iterate as pointed out by @WillemVanOnsem, then simple primitive recursion is your friend:</p>\n\n<pre><code>f :: (a -&gt; a) -&gt; a -&gt; [a]\nf g x = let new = g x in new `seq` new : f g new\n</code></pre>\n\n<p>This is similar to iterate except that iterate starts with the element you provide (the first <code>x</code>) instead of the first application of the function:</p>\n\n<pre><code>iterate :: (a -&gt; a) -&gt; a -&gt; [a]\niterate f x =  x : iterate f (f x)\n</code></pre>\n\n<p>A self-education can be acquired by <a href=\"https://hoogle.haskell.org/?hoogle=%3A%3A+%28a+-%3E+a%29+-%3E+a+-%3E+%5Ba%5D&amp;scope=set%3Astackage\" rel=\"nofollow noreferrer\">hoogling</a> for functions of this type and reading the <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.List.html#iterate\" rel=\"nofollow noreferrer\">implementation</a> of any search hits found in the base package.</p>\n"}, {"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 6, "last_activity_date": 1563985290, "last_edit_date": 1563985290, "creation_date": 1563981398, "answer_id": 57186233, "question_id": 57185779, "link": "https://stackoverflow.com/questions/57185779/how-to-define-a-list-of-recursive-calls-to-a-function-in-haskell/57186233#57186233", "title": "How to define a list of recursive calls to a function in Haskell", "body": "<p>I like your attempt</p>\n\n<pre><code>ls = 0 : f 0 : f (last ls)\n</code></pre>\n\n<p>These are the problems with it:</p>\n\n<ul>\n<li>No type signature. Always write type signatures. They are technically speaking optional, but boy do they help to understand what's going on and what you even want.</li>\n<li>You're trying to apply <code>f</code> directly to a list, but it's supposed to operate on <em>list elements</em>. (That's the cause of your error message.)</li>\n<li><code>last</code> on an infinite list can be no good. Anyways this is not what you want: <code>f</code> should be applied to <em>all</em> elements of the tail instead. That's what <code>map</code> is there for.</li>\n</ul>\n\n<p>So, a correct and complete implementation of that attempt is the following:</p>\n\n<pre><code>iterate' :: (a -&gt; a) -&gt; a -&gt; [a]\n -- altn.:  (Int-&gt;Int) -&gt; [Int], without x\u2080 but always starting from 0\niterate' f x\u2080 = ls\n where ls = x\u2080 : f x\u2080 : map f (tail ls)\n</code></pre>\n\n<p>N.B. this doesn't actually give <code>[f 0, f (f 0), f (f (f 0)) ..]</code> but starts from <code>0</code>. To start from <code>f 0</code>, simply remove the standalone <code>x\u2080</code>:</p>\n\n<pre><code>iterate' f x\u2080 = ls\n where ls = f x\u2080 : map f (tail ls)\n</code></pre>\n\n<p>...which doesn't terminate however (thanks @WillNess), because the <code>tail</code> would now recurse forever. <em>But you don't actually need <code>tail</code></em>! This is the proper definition:</p>\n\n<pre><code>iterate' f x\u2080 = ls\n where ls = f x\u2080 : map f ls\n</code></pre>\n"}], "owner": {"reputation": 657, "user_id": 11672176, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RJ2UolcBU3Y/AAAAAAAAAAI/AAAAAAAABb4/PR3tZ6Jz7Bw/photo.jpg?sz=128", "display_name": "BryceTheGrand", "link": "https://stackoverflow.com/users/11672176/brycethegrand"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 339, "favorite_count": 0, "accepted_answer_id": 57186016, "answer_count": 4, "score": 6, "last_activity_date": 1563985290, "creation_date": 1563980015, "last_edit_date": 1563984343, "question_id": 57185779, "link": "https://stackoverflow.com/questions/57185779/how-to-define-a-list-of-recursive-calls-to-a-function-in-haskell", "title": "How to define a list of recursive calls to a function in Haskell", "body": "<p>What I would like to do is define a function like this:</p>\n\n<pre><code>[f 0, f f 0, f f f 0, f f f f 0, f f f f f 0..]\n</code></pre>\n\n<p>Or in other words, where each element is the last element that is run through a function.</p>\n\n<p>I have tried a few times to get this working with ways similar to ways I have seen the Fibonacci sequence in Haskell, by calling the list with the first few elements pre-defined:</p>\n\n<pre><code>fib = 0 : 1 : zipWith (+) fib (tail fib)\n\nls = 0 : f 0 : f (last ls)\n</code></pre>\n\n<p>If I define f as a simple addOne function like so:</p>\n\n<p>f = (+ 1)</p>\n\n<p>I get this error:</p>\n\n<pre><code>&lt;interactive&gt;:124:5: error:\n* Occurs check: cannot construct the infinite type: a ~ [a]\n  Expected type: [[a]]\n    Actual type: [a]\n* In the expression: 0 : (f 0) : f (last y)\n  In an equation for `y': y = 0 : (f 0) : f (last y)\n* Relevant bindings include\n    y :: [[a]] (bound at &lt;interactive&gt;:124:1)\n</code></pre>\n\n<p>How do I create a list that functions like this does?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1563966197, "post_id": 57181359, "comment_id": 100873750, "body": "This is documented behaviour: <a href=\"https://gitlab.haskell.org/ghc/ghc/wikis/records/overloaded-record-fields/duplicate-record-fields\" rel=\"nofollow noreferrer\">gitlab.haskell.org/ghc/ghc/wikis/records/&hellip;</a>"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1563966585, "post_id": 57181359, "comment_id": 100873962, "body": "It might be better to just use <code>Just (ProjectConfig {name=n}) -&gt; putStrLn n</code>"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1563966891, "post_id": 57181359, "comment_id": 100874115, "body": "This is a current limitation of GHC: we need the explicit annotation. I have no idea about what would prevent to use the inferred type. Surely this is quite annoying for OOP programmers, who are used to be able to write <code>c.name</code> without having to specify which type <code>c</code> has."}, {"owner": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1563968564, "post_id": 57181359, "comment_id": 100875047, "body": "@WillemVanOnsem great tip! It doesn&#39;t look quite as nice as I&#39;d like it to. But it works."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 2, "creation_date": 1563970015, "post_id": 57181359, "comment_id": 100875815, "body": "I wish that <code>DuplicateRecordFields</code> would never have been a thing, I&#39;ve always seen this (like the earlier <code>RecordFieldPuns</code>) as just a half-baked, ad-hoc attempt at removing a restriction in standard Haskell <i>against the grain</i> of the language. Fortunately, we now have <code>OverloadedRecordFields</code> which does it (kind-of) properly; hopefully all libraries relying on <code>DuplicateRecordFields</code> will soon switch to that."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1563995181, "post_id": 57181359, "comment_id": 100889224, "body": "@leftaroundabout Is <code>OverloadedRecordFields</code> the name of an actual extension? I don&#39;t have it in my GHC. Googling around it seems to refer to a group of individual (partially?) implemented extensions. Are you referring to those?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1563995343, "post_id": 57181359, "comment_id": 100889296, "body": "@chi the relevant extension is <code>-XOverloadedLabels</code>."}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 3, "last_activity_date": 1563969025, "creation_date": 1563969025, "answer_id": 57182234, "question_id": 57181359, "link": "https://stackoverflow.com/questions/57181359/why-cant-ghc-work-out-which-field-to-use-in-this-case-statement/57182234#57182234", "title": "Why can&#39;t GHC work out which field to use in this case statement?", "body": "<p>This is a current limitation of GHC. We need to write <code>name (c :: ProjectConfig)</code> to disambiguate. Not very convenient.</p>\n\n<p>As an alternative, you can patter match on a more informative pattern (as suggested by Willem Van Onsem):</p>\n\n<pre><code>case config of\n   Just (ProjectConfig {name=n}) -&gt; putStrLn n\n</code></pre>\n\n<p>This will disambiguate since <code>name</code> is used only in the pattern after <code>ProjectConfig</code>, so it is accepted.</p>\n\n<p>Another, more cumbersome, alternative would be to use a custom typeclass. Assuming  all <code>name</code> fields are strings, we can use:</p>\n\n<pre><code>class HasName a where\n    getName :: a -&gt; String\n\ninstance HasName ProjectConfig where\n    getName = name\n\ninstance HasName Other where -- for other types having the same field\n    getName = name\n\nconfig :: IO ()\nconfig = do\n  config &lt;- resolveProjectConfig\n  case config of\n    Just c -&gt; putStrLn (getName c)\n    ...\n</code></pre>\n\n<p>(Why this is not done automatically under the hood is beyond me.)</p>\n"}], "owner": {"reputation": 3960, "user_id": 1556475, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/dbf54fca536242c214a1f99a6b9b8931?s=128&d=identicon&r=PG", "display_name": "Cameron Ball", "link": "https://stackoverflow.com/users/1556475/cameron-ball"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 76, "favorite_count": 0, "accepted_answer_id": 57182234, "answer_count": 1, "score": 3, "last_activity_date": 1563969025, "creation_date": 1563966058, "question_id": 57181359, "link": "https://stackoverflow.com/questions/57181359/why-cant-ghc-work-out-which-field-to-use-in-this-case-statement", "title": "Why can&#39;t GHC work out which field to use in this case statement?", "body": "<pre><code>{-# LANGUAGE DuplicateRecordFields #-}\n\nresolveProjectConfig :: IO (Maybe ProjectConfig)\n\nconfig :: IO ()\nconfig = do\n  config &lt;- resolveProjectConfig\n  case config of\n    Just c -&gt; putStrLn (name c)\n    Nothing -&gt; putStrLn \"broken\"\n</code></pre>\n\n<p>GHC seems to know in <code>Just c</code> that c is a <code>ProjectConfig</code>, but in <code>putStrLn (name c)</code> I get the error \"Ambiguous occurence name. It could refer to either the field name... [list of other stuff with a name field]\".</p>\n\n<p>Surely if it knows what <code>c</code> is, it should be able to pick the correct name function? Is there some way to have it figure it out, without adding <code>c :: ProjectConfig</code> ?</p>\n"}, {"tags": ["haskell", "hid", "ledger-nano-s"], "comments": [{"owner": {"reputation": 7666, "user_id": 1241193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0331e5e748a0ac3860b68f6cac130ef1?s=128&d=identicon&r=PG", "display_name": "Bob Dalgleish", "link": "https://stackoverflow.com/users/1241193/bob-dalgleish"}, "edited": false, "score": 0, "creation_date": 1563979605, "post_id": 57178110, "comment_id": 100881702, "body": "I think this is the wrong place to ask the question."}, {"owner": {"reputation": 33, "user_id": 3655769, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/aB45j.jpg?s=128&g=1", "display_name": "vineet pant", "link": "https://stackoverflow.com/users/3655769/vineet-pant"}, "reply_to_user": {"reputation": 7666, "user_id": 1241193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0331e5e748a0ac3860b68f6cac130ef1?s=128&d=identicon&r=PG", "display_name": "Bob Dalgleish", "link": "https://stackoverflow.com/users/1241193/bob-dalgleish"}, "edited": false, "score": 0, "creation_date": 1564066964, "post_id": 57178110, "comment_id": 100917068, "body": "ok , could you please point me to right forum ? TIA"}, {"owner": {"reputation": 7666, "user_id": 1241193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0331e5e748a0ac3860b68f6cac130ef1?s=128&d=identicon&r=PG", "display_name": "Bob Dalgleish", "link": "https://stackoverflow.com/users/1241193/bob-dalgleish"}, "edited": false, "score": 0, "creation_date": 1564076725, "post_id": 57178110, "comment_id": 100921666, "body": "who makes the &quot;ledger nano s&quot; device? That would be the place to go."}, {"owner": {"reputation": 33, "user_id": 3655769, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/aB45j.jpg?s=128&g=1", "display_name": "vineet pant", "link": "https://stackoverflow.com/users/3655769/vineet-pant"}, "reply_to_user": {"reputation": 7666, "user_id": 1241193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0331e5e748a0ac3860b68f6cac130ef1?s=128&d=identicon&r=PG", "display_name": "Bob Dalgleish", "link": "https://stackoverflow.com/users/1241193/bob-dalgleish"}, "edited": false, "score": 0, "creation_date": 1564137122, "post_id": 57178110, "comment_id": 100940698, "body": "thank you for the suggestion , as these devices are widely used by blockchain programmers and by other people in security related solutions.So i thought it would be a possibility that  someone else would have faced the same issue. And there is always a possibility that i might be using HID library incorrectly, so to me it makes sense to ask question.  Trying other mediums and writing to manufacturer as well ."}], "answers": [{"comments": [{"owner": {"reputation": 33, "user_id": 3655769, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/aB45j.jpg?s=128&g=1", "display_name": "vineet pant", "link": "https://stackoverflow.com/users/3655769/vineet-pant"}, "edited": false, "score": 0, "creation_date": 1574331715, "post_id": 58923419, "comment_id": 104198735, "body": "Yes i got to know about this from ledger support team, there are certain security measures due to which unique identifier are not attached to these devices.  however i needed unique identifier for some specific reasons in the project, so i stored uuid in the device via APDU commands and mapped the devices against that uuid. It is working fine for me as of now."}], "tags": [], "owner": {"reputation": 5321, "user_id": 157726, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/PY0sR.png?s=128&g=1", "display_name": "Juan Leni", "link": "https://stackoverflow.com/users/157726/juan-leni"}, "is_accepted": false, "score": 1, "last_activity_date": 1574113740, "creation_date": 1574113740, "answer_id": 58923419, "question_id": 57178110, "link": "https://stackoverflow.com/questions/57178110/need-to-fetch-unique-identifier-for-ledger-nano-s-device-using-hid-library/58923419#58923419", "title": "need to fetch unique identifier for ledger nano s device using hid library", "body": "<p>No, they do not have a unique identifier exposed in HID API. If you want a unique device is, you will have to make an app and generate/store a random number yourself.</p>\n"}], "owner": {"reputation": 33, "user_id": 3655769, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/aB45j.jpg?s=128&g=1", "display_name": "vineet pant", "link": "https://stackoverflow.com/users/3655769/vineet-pant"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 146, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1574113740, "creation_date": 1563955526, "question_id": 57178110, "link": "https://stackoverflow.com/questions/57178110/need-to-fetch-unique-identifier-for-ledger-nano-s-device-using-hid-library", "title": "need to fetch unique identifier for ledger nano s device using hid library", "body": "<p>Trying to find some unique identifier for ledger nano s device . </p>\n\n<p>I tried to enumerate the device with System.HIDAPI library in haskell but all ledger nano s devices i have, are giving same serial number as \"0001\" . i am not sure if ledger nano s devices have some unique identifier or not</p>\n\n<pre><code>  d &lt;- liftIO $ openDeviceInfo deviceInfo\n  let serialNum = serialNumber deviceInfo\n  --let sno = eliminate serialNum\n  sno &lt;- getSerialNumberString d\n</code></pre>\n"}, {"tags": ["arrays", "haskell"], "answers": [{"comments": [{"owner": {"reputation": 14927, "user_id": 2719875, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ae764a4524119ce0d93e7d8f0ee2356c?s=128&d=identicon&r=PG&f=1", "display_name": "user2719875", "link": "https://stackoverflow.com/users/2719875/user2719875"}, "edited": false, "score": 0, "creation_date": 1564008771, "post_id": 57174334, "comment_id": 100893859, "body": "Thanks. How is <code>(0,0)</code> and <code>(3,3)</code> an <code>Int</code>? According to the site (<a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.html\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/base-4.12.0.0/docs/Data-Int.htm&zwnj;&#8203;l</a>), an <code>Int</code> is &quot;A fixed-precision integer type with at least the range [-2^29 .. 2^29-1]&quot;. So shouldn&#39;t it be <code>Array ((Int, Int), (Int, Int)) Word8</code>?"}], "tags": [], "owner": {"reputation": 2501, "user_id": 598892, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a22954b638ce69b9994c9e3623953a5?s=128&d=identicon&r=PG", "display_name": "Chris Smith", "link": "https://stackoverflow.com/users/598892/chris-smith"}, "is_accepted": false, "score": 5, "last_activity_date": 1563934498, "creation_date": 1563934498, "answer_id": 57174334, "question_id": 57173936, "link": "https://stackoverflow.com/questions/57173936/understanding-array-function-definitions-how-to-make-word8-into-array-int-i/57174334#57174334", "title": "Understanding Array function definitions: How to make [Word8] into Array (Int, Int) Word8", "body": "<p><code>listArray</code> has this type:</p>\n\n<pre><code>listArray :: Ix i =&gt; (i, i) -&gt; [e] -&gt; Array i e\n</code></pre>\n\n<p>We can match this up to your expression:</p>\n\n<pre><code>listArray ((0,0), (2,2)) [0, 0, 0, 1, 1, 1, 2, 2, 2]\n</code></pre>\n\n<p>by matching the arguments with their types, making the following typing decisions:</p>\n\n<pre><code>((0,0), (2,2)) :: (i, i)\n[0, 0, 0, 1, 1, 1, 2, 2, 2] :: [e]\nlistArray ((0,0), (2,2)) [0, 0, 0, 1, 1, 1, 2, 2, 2] :: Array i e\n</code></pre>\n\n<p>It's not hard to see that <code>i</code> is <code>(Int, Int)</code> (or any other <code>(a, a)</code> where <code>a</code> is some instance of <code>Num</code>... but it looks like you're expecting <code>Int</code>, so that's fine).  And that <code>e</code> is <code>Word8</code> (or, again, any other <code>Num</code> instance).</p>\n\n<p>So yes, it's true that <code>[0, 0, 0, 1, 1, 1, 2, 2, 2] :: [Word8]</code>.  But the parameter type is <code>[e]</code> rather than just <code>e</code>, and that means that the <code>e</code> type variable unifies with the element type, <code>Word8</code>.  Plugging that into the type of <code>listArray</code>, you'll see that the result type is <code>Array (Int, Int) Word8</code> as expected.</p>\n"}], "owner": {"reputation": 14927, "user_id": 2719875, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ae764a4524119ce0d93e7d8f0ee2356c?s=128&d=identicon&r=PG&f=1", "display_name": "user2719875", "link": "https://stackoverflow.com/users/2719875/user2719875"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 64, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1563964571, "creation_date": 1563930205, "last_edit_date": 1563964571, "question_id": 57173936, "link": "https://stackoverflow.com/questions/57173936/understanding-array-function-definitions-how-to-make-word8-into-array-int-i", "title": "Understanding Array function definitions: How to make [Word8] into Array (Int, Int) Word8", "body": "<p>so I have a function, called <code>funcA</code>.</p>\n\n<p>Here is the \"definition\" (I'm just getting started with learning Haskell).</p>\n\n<pre><code>funcA :: Quadtree -&gt; Array (Int, Int) Word8\n</code></pre>\n\n<p>An example would be taking <code>Quadtree</code> and returning this, as a Working Solution:</p>\n\n<pre><code>listArray ((0,0), (2,2)) [0,0,0,1,1,1,2,2,2]\n</code></pre>\n\n<p>I am currently returning <code>[Word8]</code>. My question is, isn't <code>[0,0,0,1,1,1,2,2,2]</code> a <code>[Word8]</code>, not <code>Word8</code>? So, our working solution is of the form <code>Array (Int, Int) [Word8]</code>, right? It does not follow the function definition's return format?</p>\n\n<p>How do I take <code>[0,0,0,1,1,1,2,2,2]</code> which is a <code>[Word8]</code> and make it of the form <code>Array (Int, Int) Word8</code>?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1563909648, "post_id": 57170859, "comment_id": 100855038, "body": "What happens to the <code>Just x</code> here?"}, {"owner": {"reputation": 677, "user_id": 2636579, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/b615adca01077d21372bbbed1b998617?s=128&d=identicon&r=PG", "display_name": "reallymemorable", "link": "https://stackoverflow.com/users/2636579/reallymemorable"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1563910140, "post_id": 57170859, "comment_id": 100855240, "body": "It ends up in the tuple between the date preceding it and the date it&#39;s originally associated with <code>[(2010-01-01, 2012-01-02, (Just 22))]</code>"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1563911241, "post_id": 57170859, "comment_id": 100855707, "body": "Probably something like <code>zipWith (\\(x,_) (y,z) -&gt; (x,y,z)) (tail data) data</code>."}, {"owner": {"reputation": 677, "user_id": 2636579, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/b615adca01077d21372bbbed1b998617?s=128&d=identicon&r=PG", "display_name": "reallymemorable", "link": "https://stackoverflow.com/users/2636579/reallymemorable"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1563911822, "post_id": 57170859, "comment_id": 100855947, "body": "Thanks.  I don&#39;t follow what&#39;s happening with the <code>(tail data) data</code> part though.  Could you elaborate?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1563911942, "post_id": 57170859, "comment_id": 100855996, "body": "<code>tail</code> returns the list but without the first element, so that means we zip each item with the next one. So the first item <code>(x,_)</code> with the second <code>(y,z)</code>; and the second <code>(x,_)</code> with the third <code>(y,z)</code>; and so on."}], "answers": [{"comments": [{"owner": {"reputation": 677, "user_id": 2636579, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/b615adca01077d21372bbbed1b998617?s=128&d=identicon&r=PG", "display_name": "reallymemorable", "link": "https://stackoverflow.com/users/2636579/reallymemorable"}, "edited": false, "score": 0, "creation_date": 1563914541, "post_id": 57171470, "comment_id": 100857121, "body": "Do you have thoughts on how I might create a helper function that would allow me to supply target start and end <code>Day</code>s and truncate the <code>toTuple</code> output accordingly?  E.g. if <code>toTuple</code> output <code>[(2010-01-01,2012-01-02,Just 22),(2012-01-02,2013-01-01,Nothing),(2013-01-01,2016-01-02,J&zwnj;&#8203;ust 9)]</code> and I wanted Days between <code>2012-06-30</code> and <code>2015-01-01</code>, it should return: <code>[(2012-06-30,2013-01-01,Nothing),(2013-01-01,2015-01-01,Just 9)]</code>"}, {"owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "edited": false, "score": 1, "creation_date": 1563916715, "post_id": 57171470, "comment_id": 100857853, "body": "Always bringing excellent answers and a lot of interesting start points to think! awesome work here"}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 3, "last_activity_date": 1563912446, "creation_date": 1563912446, "answer_id": 57171470, "question_id": 57170859, "link": "https://stackoverflow.com/questions/57170859/transform-a-map-of-values-to-a-list-of-tuples/57171470#57171470", "title": "Transform a map of values to a list of tuples", "body": "<p>You can process such list with:</p>\n\n<pre><code>toTuple :: [(a, b)] -&gt; [(a, a, b)]\ntoTuple [] = []\ntoTuple xs@(_:xt) = zipWith f xs xt\n    where f (x, _) (y, z) = (x, y, z)</code></pre>\n\n<p>Here we thus map an empty list on an empty list. A non-empty list is processed by zipping the list (<code>xs</code>) with its tail (<code>xt</code>), with as \"zipping function\" <code>f</code>. <code>f</code> takes the first item of the \"previous\" tuple <code>x</code>, and the \"next\" tuple <code>(y, z)</code>, and construct a 3-tuple <code>(x, y, z)</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1563972152, "post_id": 57172338, "comment_id": 100877138, "body": "I don&#39;t think this brings anything to the table. That fold is precisely equivalent to pattern matching on the result of <code>null xs</code>, which is clearer."}, {"owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1563987657, "post_id": 57172338, "comment_id": 100885953, "body": "@dfeuer I agree and I said that, the accepted answer covered all. But I wanted to put this way also. Thanks for comments and for you time"}], "tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": false, "score": 0, "last_activity_date": 1563916655, "creation_date": 1563916655, "answer_id": 57172338, "question_id": 57170859, "link": "https://stackoverflow.com/questions/57170859/transform-a-map-of-values-to-a-list-of-tuples/57172338#57172338", "title": "Transform a map of values to a list of tuples", "body": "<p>The <strong>@Willem Van Onsem</strong> covers everything. I let another version with <code>foldr</code> pretty unconventional :</p>\n\n<pre><code>toTuple' :: [(a, b)] -&gt; [(a, a, b)]\ntoTuple' xs = foldr (\\_ _ -&gt; zipWith f xs (tail xs)) [] xs\n    where f (x, _) (y, z) = (x, y, z)\n\n$&gt; toTuple' [(1,2),(3,4),(5,6),(7,8)]\n\n$&gt; [(1,3,4),(3,5,6),(5,7,8)]\n</code></pre>\n"}], "owner": {"reputation": 677, "user_id": 2636579, "user_type": "registered", "accept_rate": 33, "profile_image": "https://www.gravatar.com/avatar/b615adca01077d21372bbbed1b998617?s=128&d=identicon&r=PG", "display_name": "reallymemorable", "link": "https://stackoverflow.com/users/2636579/reallymemorable"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 76, "favorite_count": 0, "accepted_answer_id": 57171470, "answer_count": 2, "score": 2, "last_activity_date": 1563916655, "creation_date": 1563909544, "question_id": 57170859, "link": "https://stackoverflow.com/questions/57170859/transform-a-map-of-values-to-a-list-of-tuples", "title": "Transform a map of values to a list of tuples", "body": "<p>I am trying to extend my function <code>toTuple</code> so that it takes <code>[(d1, Just x), (d2, Just y), (d3, Just z)]</code> and produces <code>[(d1, d2, y), (d2, d3, z)]</code></p>\n\n<pre><code>import qualified Data.Function.Step.Discrete.Open as SF\nimport qualified Data.Map as Map\n\nnewtype DayMap a = DayMap (SF.SF Day (Maybe a))\n  deriving stock (Show, Functor)\n\ntoTuple :: Map.Map Day (Maybe a) -&gt; [(Day, Maybe Integer)]\ntoTuple a = produceList \n    where\n      produceList = Map.toList (getDM td3)\n\ngetDM :: DayMap a -&gt; Map.Map Day (Maybe a)\ngetDM (DayMap sf@(SF.SF m hi)) = m\n\ntd3 :: DayMap Integer\ntd3 = DayMap.insert (Just $ fromGregorian 2010 01 01) (Just $ fromGregorian 2012 01 01) 22 DayMap.empty\n</code></pre>\n\n<p>It currently produces this:</p>\n\n<pre><code>&gt; toTuple (getDM td3)\n[(2010-01-01,Nothing),(2012-01-02,Just 22)]\n</code></pre>\n\n<p>I.e. the value <code>Just 22</code> is relevant between <code>2010-01-01</code> and <code>2012-01-02</code> and is empty before that.</p>\n\n<p>So i want to end up with <code>[(2010-01-01, 2012-01-02, (Just 22))]</code> in this case.</p>\n\n<p>I'm not clear on how to extend my <code>toTuple</code> function.  Any tips would be appreciated.</p>\n"}, {"tags": ["haskell", "hoogle"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 3, "creation_date": 1563904391, "post_id": 57169621, "comment_id": 100852817, "body": "This sounds a bit like djinn: <a href=\"http://hackage.haskell.org/package/djinn\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/djinn</a>"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 11, "creation_date": 1563904499, "post_id": 57169621, "comment_id": 100852867, "body": "Surely the <b>simplest</b> would be <code>\\_ _ -&gt; []</code>. This objection may feel silly to you, but it is a serious one: <code>zipWith zip</code> is by no means the obvious, canonical, only sensible function of this type. I can think of at least two other quite sensible and useful ones besides this silly, unuseful one (and myriad other silly, unuseful ones)."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1563904540, "post_id": 57169621, "comment_id": 100852890, "body": "I really can&#39;t follow what you mean by &quot;factorise&quot; a type signature. The example you give has nothing to do with making any changes to the type signature, and <code>zipWith zip</code> isn&#39;t a composition. In any event, composition combines (function) <i>values</i>, not types."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 3, "creation_date": 1563904751, "post_id": 57169621, "comment_id": 100852977, "body": "@RobinZigmond: based on the question, I think the OP wants to automatically generate functions, based on type signatures."}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1563904816, "post_id": 57169621, "comment_id": 100853005, "body": "There are many functions of this type, the ones you&#39;ve found in existing packages are not related to <code>zipWith zip</code>."}, {"owner": {"reputation": 3127, "user_id": 7096763, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4c1843972ea822c36c0c024d2ddcc8d7?s=128&d=identicon&r=PG&f=1", "display_name": "MikaelF", "link": "https://stackoverflow.com/users/7096763/mikaelf"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1563905023, "post_id": 57169621, "comment_id": 100853094, "body": "@RobinZigmond Thank you for your comment. Willem Van Onsem had it right, I think the package he pointed at was what I wanted. It&#39;s just too bad it has no documentation."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1563905216, "post_id": 57169621, "comment_id": 100853184, "body": "(...and if djinn is up your alley, see also <a href=\"https://github.com/lspitzner/exference\" rel=\"nofollow noreferrer\">exference</a>; unlike djinn, it can handle recursive types like lists, though at the cost that it may not terminate if you ask it a really hard one.)"}, {"owner": {"reputation": 3127, "user_id": 7096763, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4c1843972ea822c36c0c024d2ddcc8d7?s=128&d=identicon&r=PG&f=1", "display_name": "MikaelF", "link": "https://stackoverflow.com/users/7096763/mikaelf"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1563905367, "post_id": 57169621, "comment_id": 100853267, "body": "@DanielWagner I think the reason I hadn&#39;t thought of that is probably the same reason I don&#39;t suspect a library function will return <code>undefined</code>, even though it would typecheck: I was thinking of non-trivial implementations. Cheers for your objection, though. I will also look into <code>exference</code>."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 3, "creation_date": 1563910276, "post_id": 57169621, "comment_id": 100855301, "body": "Also my toy project <a href=\"https://github.com/luqui/djest\" rel=\"nofollow noreferrer\">djest</a> may be up your alley.  It generates functions of a given type signature and looks for ones that pass a test you give it.  E.g. <code>length (f xs ys) == min (length xs) (length ys)</code> might find yours. (I really need to clean it up for usability though.)"}, {"owner": {"reputation": 1706, "user_id": 1840613, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2dfd4d21060ccd9b972864e0f6cb8c4?s=128&d=identicon&r=PG", "display_name": "Jeremy List", "link": "https://stackoverflow.com/users/1840613/jeremy-list"}, "edited": false, "score": 0, "creation_date": 1564095776, "post_id": 57169621, "comment_id": 100928417, "body": "There are types for which the question of whether or not values exist is undecidable."}], "answers": [{"tags": [], "owner": {"reputation": 3127, "user_id": 7096763, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4c1843972ea822c36c0c024d2ddcc8d7?s=128&d=identicon&r=PG&f=1", "display_name": "MikaelF", "link": "https://stackoverflow.com/users/7096763/mikaelf"}, "is_accepted": true, "score": 1, "last_activity_date": 1583117968, "last_edit_date": 1583117968, "creation_date": 1563907986, "answer_id": 57170518, "question_id": 57169621, "link": "https://stackoverflow.com/questions/57169621/can-i-factorize-a-type-signature/57170518#57170518", "title": "Can I \u201cfactorize\u201d a type signature?", "body": "<p>Thank you to DanielWagner and Willem Van Onsem, who answered my question in the comments. What I thought was some sort of category-theory factorization turned out to simply be code generation.</p>\n\n<p>The package <a href=\"http://hackage.haskell.org/package/exference\" rel=\"nofollow noreferrer\">exference</a> does just what I wanted. From the documentation:</p>\n\n<blockquote>\n  <p>Type inference takes an expression and tells you its type. This process can be inversed: We recursively create random expression trees while checking that they -so far- match a given input type. At each step we do the backwards step of the inference algorithm step. If you are lucky, this search yields one or more expressions.</p>\n</blockquote>\n\n<hr>\n\n<p>The package <a href=\"http://hackage.haskell.org/package/djinn\" rel=\"nofollow noreferrer\">djinn</a> also does code generation from type expressions, but supports less types, and has <a href=\"http://manpages.ubuntu.com/manpages/bionic/man1/djinn.1.html\" rel=\"nofollow noreferrer\">little</a> <a href=\"http://lambda-the-ultimate.org/node/1178\" rel=\"nofollow noreferrer\">documentation</a>. However, it is guaranteed to always terminate, unlike exference.</p>\n\n<p>For emacs users, it seems that <a href=\"https://stackoverflow.com/questions/28386749/is-there-a-way-to-use-djinn-to-auto-generate-haskell-code-in-emacs\">djinn is already integrated into ghc-mod</a>.</p>\n\n<hr>\n\n<p>There is also <a href=\"https://github.com/luqui/djest\" rel=\"nofollow noreferrer\">Djest</a>, by luqui, which is somewhat in between Quickcheck and the previous tools. It allows you to enter a few sets of input and output, for which the program will try and make up a function that satisfies them.</p>\n\n<p>Thanks to all those who contributed and made me discover these packages.</p>\n"}], "owner": {"reputation": 3127, "user_id": 7096763, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4c1843972ea822c36c0c024d2ddcc8d7?s=128&d=identicon&r=PG&f=1", "display_name": "MikaelF", "link": "https://stackoverflow.com/users/7096763/mikaelf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 130, "favorite_count": 0, "accepted_answer_id": 57170518, "answer_count": 1, "score": 5, "last_activity_date": 1583117968, "creation_date": 1563903957, "question_id": 57169621, "link": "https://stackoverflow.com/questions/57169621/can-i-factorize-a-type-signature", "title": "Can I \u201cfactorize\u201d a type signature?", "body": "<p>Suppose I wanted a function of type <code>[[a]] -&gt; [[b]] -&gt; [[(a, b)]]</code>. I'm sure I could figure something out, but chances are, it wouldn't be as clean as, for example,  <code>zipWith zip</code>, which also has that type.</p>\n\n<p>Entering this type signature into Hoogle gives me a few functions that fill this role, but they come from the <code>leancheck</code> and <code>extrapolate</code> packages, which I wouldn't want to drag into my project without a good reason.</p>\n\n<p>Given that you can compute function composition through equational reasoning, I am wondering if there is an inverse to this process: <strong>is there a way that I could \u201cfactorize\u201d a complex type signature and reduce it down to its simplest function composition?</strong></p>\n"}, {"tags": ["haskell", "monads"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 4, "creation_date": 1563904863, "post_id": 57169085, "comment_id": 100853020, "body": "Be careful with your whitespace; <code>a -&gt; m a</code> and <code>a -&gt; ma</code> are two entirely different types."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 4, "creation_date": 1563904951, "post_id": 57169085, "comment_id": 100853059, "body": "<code>id</code> is the identity <i>function</i> <i>in</i> <b>Hask</b>; <code>data Identity a = Identity a</code> is the identity <i>functor on</i> <b>Hask</b>."}, {"owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1563909900, "post_id": 57169085, "comment_id": 100855128, "body": "Thanks. (1) What is the difference between <code>m a</code> and <code>ma</code>? (2) What is the difference between &quot; the identity function&quot; in Hask and &quot; the identity functor &quot; on Hask? (3) Does <code>data Identity a = Identity a</code> define a type <code>Identity</code> which has a single constructor also named as <code>Identity</code> and parameterized by a type variable <code>a</code>? How does that mean it is the identity functor on Hask?"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1563913034, "post_id": 57169085, "comment_id": 100856443, "body": "1) <code>a -&gt; ma</code> is just <code>a -&gt; b</code> using a different name. In <code>a -&gt; m a</code>, <code>m</code> has kind <code>* -&gt; *</code>, so it has to be applied to some other type in order to provide a valid return type. 2) One is a function, the other is a functor. 3) <code>Identity</code> is, indeed, just a very simple type constructor. Its functor instance is likewise simple: <code>instance Functor Identity where fmap f (Identity x) = Identity (f x)</code>. By itself, <code>Identity</code> is not very useful, but it serves as useful base for things like monad stacks (since <code>Identity</code> is also a basic monad)."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1563913107, "post_id": 57169085, "comment_id": 100856483, "body": "(For example, whereas something like <code>data State s a = ...</code> used to be defined directly, it is now defined as the <code>StateT</code> monad transformer applied to the <code>Identity</code> monad.)"}, {"owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1563914069, "post_id": 57169085, "comment_id": 100856919, "body": "Where (which book) did you and can I learn the declaration of <code>Identity</code>?"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1563923246, "post_id": 57169085, "comment_id": 100859444, "body": "@Tim I&#39;m not sure there&#39;s any book that would satisfy you, the <code>Identity</code> functor certainly isn&#39;t interesting enough to write a book about! The few brief paragraphs of the <a href=\"https://hackage.haskell.org/package/transformers-0.3.0.0/docs/Data-Functor-Identity.html\" rel=\"nofollow noreferrer\">hackage documentation</a> are about as much as can reasonably be said. Oh and there&#39;s also this <a href=\"http://blog.sigfpe.com/2007/04/trivial-monad.html\" rel=\"nofollow noreferrer\">excellent blog post</a> about it, which is useful mainly just as an introduction to monads. And try reading about monad transformers, since that&#39;s the only real use case for the <code>Identity</code> monad."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1563932524, "post_id": 57169085, "comment_id": 100860878, "body": "@RobinZigmond, not the only one! It&#39;s also important for <code>lens</code>, and for similar reasons it&#39;s used to simplify <code>mergeA</code> to <code>merge</code> in <code>Data.Map.Merge</code> and <code>Data.IntMap.Merge</code>, and to simplify <code>replicateA</code> to <code>replicate</code> in <code>Data.Sequence</code>. It&#39;s also essential to the definition of <code>Data.Traversable.fmapDefault</code>. Then there are uses with <code>dependent-sum</code>, <code>dependent-map</code> (hence <code>reflex</code>), <code>vinyl</code>, etc."}], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "edited": false, "score": 0, "creation_date": 1563902701, "post_id": 57169325, "comment_id": 100852038, "body": "Thanks. <code>join</code> has type <code>m (m a) -&gt; m a</code>. How is that different from <code>ma -&gt; a</code>?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "edited": false, "score": 3, "creation_date": 1563902932, "post_id": 57169325, "comment_id": 100852155, "body": "@Tim For instance, in the list monad, you can apply <code>join</code> to a list of lists, but not to a list of non-lists. <code>join [True]</code> is a type error."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 2, "creation_date": 1563904159, "post_id": 57169325, "comment_id": 100852704, "body": "It&#39;s actually a pretty fundamental point about monads. They let you embed an arbitrary value inside the monad (with <code>return</code>) and flatten the outer layer in a nested monad (that&#39;s <code>join</code>), but there is <i>no</i> way, in general, to &quot;remove&quot; an item from the monad. (<code>&gt;&gt;=</code>, which is just a combination of <code>fmap</code> and <code>join</code>, does let you pretend to access the values inside, but only if you feed them to a function which returns a monadic value.) That&#39;s actually very important in the case of <code>IO</code>, Haskell&#39;s purity would be destroyed if there was a function <code>IO a -&gt; a</code>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1563906052, "post_id": 57169325, "comment_id": 100853549, "body": "@RobinZigmond, I wonder if parsers offer an even better example: <code>Parser a -&gt; a</code> may be more obviously absurd to someone coming from an imperative background."}, {"owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "edited": false, "score": 0, "creation_date": 1563913791, "post_id": 57169325, "comment_id": 100856797, "body": "Thanks. How does <code>join [[1],[2]]</code> work? <code>join</code> expects argument to have type <code>m( m b)</code>, while <code>[[1],[2]]</code> has type <code>m(m b)</code>? (<code>[[1,2]]</code> has type <code>m(m b)</code>.)"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "edited": false, "score": 1, "creation_date": 1563916549, "post_id": 57169325, "comment_id": 100857793, "body": "@Tim Both have type <code>[[Int]]</code> (assuming integer numerals for simplicity). Here <code>m=[]</code> and <code>b=Int</code>. They are different values of the same type."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1563917289, "post_id": 57169325, "comment_id": 100858018, "body": "<code>join [[1], [2]]</code> is <code>[1, 2]</code> - <code>join</code> for the list monad is exactly the same as <code>concat</code>. <code>m</code> here is the list constructor <code>[]</code> (and the type <code>[] a</code> is by convention and special syntax written as <code>[a]</code>) and taking <code>b</code> as <code>Int</code>, then the type is <code>[[Int]] -&gt; [Int]</code>, that is <code>[] [] Int -&gt; [] Int</code>, which is exactly <code>m (m b) -&gt; m b</code>"}, {"owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "edited": false, "score": 0, "creation_date": 1563985526, "post_id": 57169325, "comment_id": 100884927, "body": "<code>join</code> is defined as <code>join m = do x &lt;- m; x</code>. So shouldn&#39;t <code>join [[1], [2]]</code> be evaluated to <code>[1], [2]</code>, why to <code>[1,2]</code>?"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 8, "last_activity_date": 1563902758, "last_edit_date": 1563902758, "creation_date": 1563902587, "answer_id": 57169325, "question_id": 57169085, "link": "https://stackoverflow.com/questions/57169085/are-join-and-return-the-inverse-of-each-other/57169325#57169325", "title": "Are join and return the inverse of each other?", "body": "<blockquote>\n  <p><code>&gt;&gt;=</code> requires its second argument to have type <code>a-&gt;ma</code>, and if <code>id</code> has type <code>a-&gt; a</code>, how can <code>id</code> be used as the second argument of <code>&gt;&gt;=</code>?</p>\n</blockquote>\n\n<p>No, <code>&gt;&gt;=</code> requires its second argument to have type <code>a -&gt; m b</code>, with <code>b</code> not necessarily equal to <code>a</code>. In the case you mention, we chose <code>a = m b</code> so that</p>\n\n<pre><code>(&gt;&gt;=) :: m (m b) -&gt; (m b -&gt; m b) -&gt; m b\n</code></pre>\n\n<p><code>id</code> can then be passed as the second parameter of type <code>m b -&gt; m b</code>.</p>\n\n<blockquote>\n  <p><code>return</code> has type <code>a -&gt; ma</code>. Are <code>join</code> and <code>return</code> the inverse of each other?</p>\n</blockquote>\n\n<p>Not really, since we do not have <code>join :: m a -&gt; a</code>.</p>\n\n<p>It is true, though, that if we consider the special case <code>a = m b</code>, then</p>\n\n<pre><code>return :: m b -&gt; m (m b)\njoin   :: m (m b) -&gt; m b\n</code></pre>\n\n<p>and we do have <code>join . return = id</code>.</p>\n\n<p>Even in that special case, we still do not have <code>return . join = id</code>, e.g. in the list monad:</p>\n\n<pre><code>return (join [[1],[2]]) = return [1,2] = [[1,2]]\n</code></pre>\n"}], "owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 133, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1563902758, "creation_date": 1563901524, "last_edit_date": 1563901917, "question_id": 57169085, "link": "https://stackoverflow.com/questions/57169085/are-join-and-return-the-inverse-of-each-other", "title": "Are join and return the inverse of each other?", "body": "<p><a href=\"https://en.m.wikibooks.org/wiki/Haskell/Category_theory\" rel=\"nofollow noreferrer\">https://en.m.wikibooks.org/wiki/Haskell/Category_theory</a> says</p>\n\n<pre><code>join :: Monad m =&gt; m (m a) -&gt; m a\njoin x = x &gt;&gt;= id\n</code></pre>\n\n<p>Is <code>id</code>  the identity functor on category <code>Hask</code> and does <code>id</code> have type <code>a-&gt; a</code>? </p>\n\n<p><code>&gt;&gt;=</code> requires its second argument to have type <code>a-&gt;ma</code>, and if <code>id</code> has type <code>a-&gt; a</code>, how can <code>id</code> be used as the second argument of <code>&gt;&gt;=</code>?</p>\n\n<p><code>return</code> has type <code>a -&gt; ma</code>.\nAre <code>join</code> and <code>return</code> the inverse of each other?</p>\n\n<p>Thanks.</p>\n"}, {"tags": ["haskell", "optparse-applicative"], "answers": [{"comments": [{"owner": {"reputation": 161, "user_id": 10975456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d798ef4fd773cffbea0fdf0d17ec780?s=128&d=identicon&r=PG&f=1", "display_name": "distro.obs", "link": "https://stackoverflow.com/users/10975456/distro-obs"}, "edited": false, "score": 0, "creation_date": 1563906588, "post_id": 57168979, "comment_id": 100853776, "body": "Works perfectly! Thanks for a very detailed and easy to understand answer!"}], "tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": true, "score": 1, "last_activity_date": 1563902821, "last_edit_date": 1563902821, "creation_date": 1563901007, "answer_id": 57168979, "question_id": 57168091, "link": "https://stackoverflow.com/questions/57168091/parsing-user-options-into-custom-data-types-with-optparse-applicative/57168979#57168979", "title": "Parsing user options into custom data types with OptParse-Applicative", "body": "<p>In optparse-applicative there's the <code>Parser</code> type, but also the <a href=\"http://hackage.haskell.org/package/optparse-applicative-0.13.2.0/docs/Options-Applicative-Types.html#t:ParserInfo\" rel=\"nofollow noreferrer\"><code>ParserInfo</code></a> type which represents a \"completed\" parser holding extra information like header, footer, description, etc... and which is ready to be run with <a href=\"http://hackage.haskell.org/package/optparse-applicative-0.13.2.0/docs/Options-Applicative-Extra.html#v:execParser\" rel=\"nofollow noreferrer\"><code>execParser</code></a>. \n We go from <code>Parser</code> to <code>ParserInfo</code> by way of the <a href=\"http://hackage.haskell.org/package/optparse-applicative-0.13.2.0/docs/Options-Applicative-Builder.html#v:info\" rel=\"nofollow noreferrer\"><code>info</code></a> function which adds the extra information as modifiers.</p>\n\n<p>Now, when writing a parser with subcommands, each subcommand must have its own <code>ParserInfo</code> value (implying that it can have its own local help and description). </p>\n\n<p>We pass each of these <code>ParserInfo</code> values to the <a href=\"http://hackage.haskell.org/package/optparse-applicative-0.13.2.0/docs/Options-Applicative-Builder.html\" rel=\"nofollow noreferrer\"><code>command</code></a> function (along with the name we want the subcommand to have) and then we combine the <code>[Mod CommandFields JournalCommand]</code> list using <code>mconcat</code> and pass the result to <a href=\"http://hackage.haskell.org/package/optparse-applicative-0.13.2.0/docs/Options-Applicative-Builder.html#v:subparser\" rel=\"nofollow noreferrer\"><code>subparser</code></a>. This will give us the top-level <code>Parser</code>. We need to use <code>info</code> again to provide the top-level description and get the final <code>ParserInfo</code>.</p>\n\n<p>An example that uses a simplified version of your type:</p>\n\n<pre><code>data JournalCommand =\n    JournalSearch String String\n  | JournalReport String\n  deriving (Show, Eq)\n\njournalParserInfo :: O.ParserInfo JournalCommand\njournalParserInfo = \n    let searchParserInfo :: O.ParserInfo JournalCommand\n        searchParserInfo = \n            O.info\n            (JournalSearch \n                &lt;$&gt; strArgument (metavar \"ARG1\" &lt;&gt; help \"This is arg 1\")\n                &lt;*&gt; strArgument (metavar \"ARG2\" &lt;&gt; help \"This is arg 2\"))\n            (O.fullDesc &lt;&gt; O.progDesc \"desc 1\")\n        reportParserInfo :: O.ParserInfo JournalCommand\n        reportParserInfo = \n            O.info\n            (JournalReport \n                &lt;$&gt; strArgument (metavar \"ARG3\" &lt;&gt; help \"This is arg 3\"))\n            (O.fullDesc &lt;&gt; O.progDesc \"desc 2\")\n        toplevel :: O.Parser JournalCommand\n        toplevel = O.subparser (mconcat [ \n                command \"search\" searchParserInfo, \n                command \"journal\" reportParserInfo \n            ])\n     in O.info toplevel (O.fullDesc &lt;&gt; O.progDesc \"toplevel desc\") \n</code></pre>\n"}], "owner": {"reputation": 161, "user_id": 10975456, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3d798ef4fd773cffbea0fdf0d17ec780?s=128&d=identicon&r=PG&f=1", "display_name": "distro.obs", "link": "https://stackoverflow.com/users/10975456/distro-obs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 168, "favorite_count": 0, "accepted_answer_id": 57168979, "answer_count": 1, "score": 1, "last_activity_date": 1563902821, "creation_date": 1563897577, "question_id": 57168091, "link": "https://stackoverflow.com/questions/57168091/parsing-user-options-into-custom-data-types-with-optparse-applicative", "title": "Parsing user options into custom data types with OptParse-Applicative", "body": "<p>I'm trying to build a CLI food journal app.</p>\n\n<p>And this is the data type I want the user input to be parsed in.</p>\n\n<pre><code>data JournalCommand =\n  JournalSearch Query DataTypes Ingridents BrandOwnder PageNumber\n  | JournalReport Query DataTypes Ingridents BrandOwnder PageNumber ResultNumber\n  | JournalDisplay FromDate ToDate ResultNumber\n  | JournalStoreSearch Query DataTypes Ingridents BrandOwnder PageNumber ResultNumber StoreFlag\n  | JournalStoreCustom CustomEntry OnDate StoreFlag\n  | JournalDelete FromDate ToDate ResultNumber\n  | JournalEdit CustomEntry ResultNumber\n  deriving (Show, Eq)\n</code></pre>\n\n<p>and because there's a lot of overlap I have a total of 8 functions with <code>Parser a</code> type.</p>\n\n<p>Functions like these</p>\n\n<pre><code>-- | Search Query\naQueryParser :: Parser String\naQueryParser = strOption\n               ( long \"search\"\n                 &lt;&gt; short 's'\n                 &lt;&gt; help \"Search for a term in the database\"\n               )\n</code></pre>\n\n<p>The idea if to ultimately have a function like this</p>\n\n<pre><code>runJournal :: JournalCommand -&gt; MT SomeError IO ()\nrunJournal = \\case\n             JournalSearch q d i b p\n                     -&gt; runSearch q d i b p\n             JournalReport q d i b p r\n                     -&gt; runSearchAndReport q d i b p r\n            ...\n            ...\n</code></pre>\n\n<p>where <code>MT</code> is some monad transformer that can handle <code>error</code> + <code>IO</code>. Not sure yet.</p>\n\n<p>The question is: How do I setup the <code>parseArgs</code> function</p>\n\n<pre><code>parseArgs :: IO JournalCommand\nparseArgs = execParser ...\n</code></pre>\n\n<p>and <code>parser</code> function</p>\n\n<pre><code>parser :: Parser JournalCommand\nparser = ...\n</code></pre>\n\n<p>so that I'd be able to parse user input into <code>JournalCommand</code> and then return the data to relevant functions.</p>\n\n<p>I know I can <code>fmap</code> a data type like this</p>\n\n<pre><code>data JournalDisplay { jdFromDate     :: UTCTime\n                    , jdToDate       :: UTCTime\n                    , jdResultNumber :: Maybe Int\n                    }\n</code></pre>\n\n<p>as </p>\n\n<pre><code>JournalDisplay\n&lt;$&gt;\nfromDateParser\n&lt;*&gt;\ntoDateParser\n&lt;*&gt;\noptional resultNumberParser\n</code></pre>\n\n<p>But I'm not sure how to go about doing that with my original data structure.</p>\n\n<p>I think I need to have a list like this <code>[Mod CommandFields JournalCommand]</code> which I may be able to pass into <code>subparser</code> function by concatenating the <code>Mod</code> list. I'm not completely sure.</p>\n"}, {"tags": ["haskell", "nlp", "duckling"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1563895445, "post_id": 57160957, "comment_id": 100848548, "body": "FYI, there are no methods here. We usually use the term &quot;method&quot; to mean something that&#39;s part of a typeclass. For example, the <code>Semigroup</code> class has methods <code>(&lt;&gt;)</code>, <code>sconcat</code>, and <code>stimes</code>, while the <code>Monoid</code> class has methods <code>mempty</code>, <code>mappend</code>, and <code>mconcat</code>. What you are showing are <i>functions</i>, but not <i>methods</i>. As <code>mempty</code> demonstrates, there are also <i>methods</i> that are not <i>functions</i>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1563911394, "post_id": 57160957, "comment_id": 100855762, "body": "What do a <code>Predicate</code> and a <code>SeriesPredicate</code> represent? Does <code>runPredicate</code> have any documentation?"}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1563960486, "post_id": 57160957, "comment_id": 100870430, "body": "What would you like it to do instead? Pick the most recent date matching the description?"}, {"owner": {"reputation": 390, "user_id": 6566916, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vL8KI.jpg?s=128&g=1", "display_name": "Niko", "link": "https://stackoverflow.com/users/6566916/niko"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1563960631, "post_id": 57160957, "comment_id": 100870520, "body": "@BenjaminHodgson I just the interval from the same. If I am asking for &quot;january till march&quot; in 2019 I want the interval in 2018. Despite it is a past interval."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1563960930, "post_id": 57160957, "comment_id": 100870665, "body": "That&#39;s the second-most-recent. You don&#39;t want Jan-March of 2019?"}, {"owner": {"reputation": 390, "user_id": 6566916, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vL8KI.jpg?s=128&g=1", "display_name": "Niko", "link": "https://stackoverflow.com/users/6566916/niko"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1563965822, "post_id": 57160957, "comment_id": 100873550, "body": "@BenjaminHodgson This was my typo. I meant January to March 2019. I always want the interval from the same year."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1563965933, "post_id": 57160957, "comment_id": 100873614, "body": "So take the output from Duckling and subtract a year if it&#39;s picked a date from next year."}, {"owner": {"reputation": 390, "user_id": 6566916, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vL8KI.jpg?s=128&g=1", "display_name": "Niko", "link": "https://stackoverflow.com/users/6566916/niko"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1563965984, "post_id": 57160957, "comment_id": 100873648, "body": "@dfeuer I cannot really find the definition of the <code>Predicate</code> and <code>SeriesPredicate</code> ... Unfortunately there is no documentation for runPredicate and there is hardly any documentation for Duckling altogether."}, {"owner": {"reputation": 390, "user_id": 6566916, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vL8KI.jpg?s=128&g=1", "display_name": "Niko", "link": "https://stackoverflow.com/users/6566916/niko"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1563966058, "post_id": 57160957, "comment_id": 100873677, "body": "@BenjaminHodgson I cannot do that because it heavily affects my parsing pipeline. That is why I&#39;m focusing on Duckling and try to adjust the code there instead."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1563966274, "post_id": 57160957, "comment_id": 100873799, "body": "I don&#39;t see why it would be a big change to your parsing pipeline (just stick a function to fix up the result after your <a href=\"http://hackage.haskell.org/package/duckling-0.1.6.1/docs/Duckling-Core.html#v:parse\" rel=\"nofollow noreferrer\"><code>parse</code></a> call). But if you don&#39;t want to do that for whatever reason, how about setting the <a href=\"http://hackage.haskell.org/package/duckling-0.1.6.1/docs/Duckling-Core.html#v:referenceTime\" rel=\"nofollow noreferrer\"><code>referenceTime</code></a> to the end of last year? Either way, I don&#39;t think changing the library&#39;s source code is a good idea."}], "owner": {"reputation": 390, "user_id": 6566916, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/vL8KI.jpg?s=128&g=1", "display_name": "Niko", "link": "https://stackoverflow.com/users/6566916/niko"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 91, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1563895682, "creation_date": 1563874084, "last_edit_date": 1563895682, "question_id": 57160957, "link": "https://stackoverflow.com/questions/57160957/stop-duckling-from-picking-the-first-interval-after-the-given-time-segment", "title": "Stop Duckling from picking the first interval after the given time segment", "body": "<p>Let's say that the date today is the 23rd of July 2019 (which actually is the date of the original post). If we were to process with <a href=\"https://github.com/facebook/duckling\" rel=\"nofollow noreferrer\">Duckling</a> a phrase like \"from January to February\", Duckling would link this to the next year: that is, from January 2020 to February 2020. This is because the time segment from January to February for 2019 is already in the past and the following method picks the first interval <strong>after</strong> the specified time segment.</p>\n\n<p>The method that does this is the following:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>runTimeIntervalsPredicate\n  :: TimeIntervalType -&gt; Predicate\n  -&gt; Predicate -&gt; SeriesPredicate\nrunTimeIntervalsPredicate intervalType pred1 pred2 = timeSeqMap True f pred1\n  where\n    -- Pick the first interval *after* the given time segment\n    f thisSegment ctx = case runPredicate pred2 thisSegment ctx of\n      (_, firstFuture:_) -&gt; Just $\n        timeInterval intervalType thisSegment firstFuture\n      _ -&gt; Nothing\n</code></pre>\n\n<p>Although I have tampered with Duckling code to adjust it to the needs of the platform, I am not a very fluent Haskeller and this has gotten me to my wits end.</p>\n\n<p>So the question here is: How do I stop this shifting towards a future date range?</p>\n\n<p>Addendum: \n<code>runPredicate</code> is also a method and looks like this</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>runPredicate :: Predicate -&gt; SeriesPredicate\nrunPredicate EmptyPredicate{} = \\_ _ -&gt; ([], [])\nrunPredicate (SeriesPredicate (NoShow p)) = p\nrunPredicate TimeDatePredicate{..}\n  -- This should not happen by construction, but if it does then\n  -- empty time series should be ok\n  | isNothing tdHour &amp;&amp; isJust tdAMPM = \\_ _ -&gt; ([], [])\nrunPredicate TimeDatePredicate{..} =\n  foldr1 runCompose toCompose\n  where\n  -- runComposePredicate performs best when the first predicate is of\n  -- smaller grain, that's why we order by grain here\n  toCompose = catMaybes\n    [ runSecondPredicate &lt;$&gt; tdSecond\n    , runMinutePredicate &lt;$&gt; tdMinute\n    , uncurry (runHourPredicate tdAMPM) &lt;$&gt; tdHour\n    , runDayOfTheWeekPredicate &lt;$&gt; tdDayOfTheWeek\n    , runDayOfTheMonthPredicate &lt;$&gt; tdDayOfTheMonth\n    , runMonthPredicate &lt;$&gt; tdMonth\n    , runYearPredicate &lt;$&gt; tdYear\n    ]\nrunPredicate (IntersectPredicate pred1 pred2) =\n  runIntersectPredicate pred1 pred2\nrunPredicate (TimeIntervalsPredicate ty pred1 pred2) =\n  runTimeIntervalsPredicate ty pred1 pred2\nrunPredicate (ReplaceIntersectPredicate pred1 pred2 pred3) =\n  runReplaceIntersectPredicate pred1 pred2 pred3\n\n</code></pre>\n\n<p>Should have also posted the <code>timeSeqMap</code> method</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>-- | Applies `f` to each interval yielded by `g`.\n-- | Intervals including \"now\" are in the future.\ntimeSeqMap\n  :: Bool\n     -- Given an interval and range, compute a single new interval\n  -&gt; (TimeObject -&gt; TimeContext -&gt; Maybe TimeObject)\n     -- First-layer series generator\n  -&gt; Predicate\n     -- Series generator for values that come from `f`\n  -&gt; SeriesPredicate\n</code></pre>\n"}, {"tags": ["haskell", "haskell-stack"], "comments": [{"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1563868118, "post_id": 57157070, "comment_id": 100832648, "body": "Try adding a <code>--package multiset</code> option to your command e.g. <code>stack ghc --package multiset myfile.hs</code>. Not putting this as an answer as I don\u2019t know exactly which command you\u2019re using for compilation. (Also, <a href=\"https://lexi-lambda.github.io/blog/2018/02/10/an-opinionated-guide-to-haskell-in-2018/#understanding-stacks-model-and-avoiding-its-biggest-gotcha\" rel=\"nofollow noreferrer\"><code>stack install</code> is discouraged</a>, especially for libraries.)"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1563872890, "post_id": 57157070, "comment_id": 100835196, "body": "@bradrn I think that comment could be expanded into a great answer."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1563873144, "post_id": 57157070, "comment_id": 100835353, "body": "Thanks @leftaroundabout! Which bits do you think could be expanded?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1563873709, "post_id": 57157070, "comment_id": 100835684, "body": "It should quote the important parts from the article you&#39;ve linked to."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1563873893, "post_id": 57157070, "comment_id": 100835808, "body": "@leftaroundabout But that isn\u2019t really related to the question \u2014 it\u2019s just tangential information which I thought was important enough to warrant a mention."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1563875869, "post_id": 57157070, "comment_id": 100836966, "body": "@bradrn I think it&#39;s not so tangential, but if you think... I wrote an answer now."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1563926756, "post_id": 57157070, "comment_id": 100860061, "body": "@leftaroundabout I <i>really</i> like that answer! I knew everything in it already, but the way you wrote it (and the first paragraph in particular) really gave me a different viewpoint on what Stack offers."}], "answers": [{"comments": [{"owner": {"reputation": 11, "user_id": 7697360, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c877a22ac38da1bde253af2256b3a20d?s=128&d=identicon&r=PG&f=1", "display_name": "SirMaik", "link": "https://stackoverflow.com/users/7697360/sirmaik"}, "edited": false, "score": 0, "creation_date": 1563915594, "post_id": 57161469, "comment_id": 100857493, "body": "Thanks! I actually don&#39;t want to make a script but the information about scripting you just provided is pretty useful either way. I am downloading problems from the internet and writing the &quot;solution&quot; just to become better at the language. So, what do you think, should I keep using stack or start to use Cabal mainly? And I know you don&#39;t use Stack but do you think that installing the package might cause a problem?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 11, "user_id": 7697360, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c877a22ac38da1bde253af2256b3a20d?s=128&d=identicon&r=PG&f=1", "display_name": "SirMaik", "link": "https://stackoverflow.com/users/7697360/sirmaik"}, "edited": false, "score": 0, "creation_date": 1563922841, "post_id": 57161469, "comment_id": 100859366, "body": "As I said I use Cabal. With that you <i>can</i> install packages and then have them available directly from anywhere on your computer. But, this is kind of a deprecated workflow (even within Cabal). So if you&#39;re using Stack now, maybe best stick to it."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 11, "user_id": 7697360, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c877a22ac38da1bde253af2256b3a20d?s=128&d=identicon&r=PG&f=1", "display_name": "SirMaik", "link": "https://stackoverflow.com/users/7697360/sirmaik"}, "edited": false, "score": 0, "creation_date": 1563926687, "post_id": 57161469, "comment_id": 100860052, "body": "@SirMaik For an alternate viewpoint, I use <code>stack</code> extensively, and find it to be amazing. At the moment Stack and Cabal are roughly at feature parity, but I <i>really</i> like the way Stack emphasises reproducible builds; that is, the feature that the same file/project will build the same way on any computer. And I think it\u2019s worth noting that Stack can also install packages into the global context like Cabal does; every now and again I run <code>stack build interestingPackageName</code> to get access to it in e.g. GHCi. It\u2019s not recommended but it\u2019s certainly possible!"}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 2, "last_activity_date": 1563875831, "creation_date": 1563875831, "answer_id": 57161469, "question_id": 57157070, "link": "https://stackoverflow.com/questions/57157070/stack-cant-find-a-downloaded-module-data-multiset/57161469#57161469", "title": "Stack can&#39;t find a downloaded module (Data.MultiSet)", "body": "<p>Stack doesn't work like that. The idea behind Stack is this: you have a <em>project</em>, you know the dependencies of this project, and Stack ensures you can always build that project \u2013 now or in the future. Stack is <em>not</em> about tweaking your system in some way that'll give you access to some packages here and now.</p>\n\n<p>So, <em>if</em> you're going to use Stack for development (which I personally don't, but I also don't say it's a bad idea; lots Haskellers do this) then you should first set up the file you're working on as part of a project. This can be as simple as making your file a <em>Stack snippet</em>: add the following to the top of your file (I'll assume it's called <code>script.hs</code>)</p>\n\n<pre><code>#!/usr/bin/env stack\n{- stack --resolver lts-13.0 --install-ghc\n      runghc --package multiset\n  -}\n</code></pre>\n\n<p>(You could also pass those flags on the command line for <code>stack</code>, but that gets tedious quickly. <code>env</code> really does nothing else, but consistently.)</p>\n\n<p>Then make your file <em>executable</em> \u2013 on Linux or OSX this can be done with <code>chmod +x script.hs</code> \u2013 and all you need to do to compile &amp; run that script will be <code>./script.hs</code>. (<em>Not</em> <code>stack script.hs</code> or <code>ghc script.hs</code>.) The great thing about this is that you get \u201cinstant continuous integration\u201d: if Stack is able to build run your script on your computer now, you can be pretty sure that it'll also work on any other computer in the future, without you needing to remember what packages to install etc..</p>\n\n<p>More info on that technique: <a href=\"https://www.fpcomplete.com/blog/2016/08/bitrot-free-scripts\" rel=\"nofollow noreferrer\">https://www.fpcomplete.com/blog/2016/08/bitrot-free-scripts</a>.</p>\n\n<p>If it's more than a simple script you're writing, you should make a proper Cabal/Stack configuration for it. This can be created easily with <code>cabal init</code> (regardless of whether you will use Cabal or Stack).</p>\n"}], "owner": {"reputation": 11, "user_id": 7697360, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c877a22ac38da1bde253af2256b3a20d?s=128&d=identicon&r=PG&f=1", "display_name": "SirMaik", "link": "https://stackoverflow.com/users/7697360/sirmaik"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 144, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1563878604, "creation_date": 1563858721, "last_edit_date": 1563878604, "question_id": 57157070, "link": "https://stackoverflow.com/questions/57157070/stack-cant-find-a-downloaded-module-data-multiset", "title": "Stack can&#39;t find a downloaded module (Data.MultiSet)", "body": "<p>I've been using stack (in my linux computer) to compile my haskell code and today I installed for the first time an external module. I installed Data.MultiSet by running the following command:</p>\n\n<blockquote>\n  <p>sudo stack install multiset</p>\n</blockquote>\n\n<p>Supposedly the module was succesfully installed but I can't load it, stack throws the following message when I try to compile my code:</p>\n\n<blockquote>\n  <p>..error: Could not find module \u2018Data.MultiSet\u2019...</p>\n</blockquote>\n\n<p>I checked the files contained in my .stack directory and there are many files with the name of this package but I am not very familiar with this directory tree. I also tried writing the name of the module in the dependency field of the package.yaml of my project but it didn't work either. Any clues of what's happening? Thanks!</p>\n"}, {"tags": ["haskell", "testing", "hspec", "reader-monad"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1563836381, "post_id": 57154099, "comment_id": 100824565, "body": "You might also look at <code>withReaderT</code>, though this will require you to choose a particular monad stack (or at least the outer bits of it up to the <code>ReaderT</code>) rather than using mtl-style class polymorphism."}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1563838800, "post_id": 57154099, "comment_id": 100825060, "body": "From what you&#39;ve described, a type-based solution is obviously the right approach and should not require you to lift every action (e.g., @DanielWagner&#39;s answer).  If you find his answer unsatisfactory, I suspect we can offer something even better, but your minimal example is too abstract and too pseudocodey (e.g., those type signatures aren&#39;t valid with the usual definition of <code>MonadReader</code>).  Can you post a somewhat more realistic toy example that compiles and illustrates what you&#39;re trying to do?"}, {"owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "reply_to_user": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1563843954, "post_id": 57154099, "comment_id": 100825926, "body": "@K.A.Buhr Thanks for the feedback.  I&#39;ve made things a little more concrete (I also fixed my type signatures, it was just a mistake on my part).  I can make it more realistic or even fill in specific parts further if anyone would like I just am never sure how much is over sharing with this sort of thing."}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1564004867, "post_id": 57154099, "comment_id": 100892864, "body": "How important is it to you to use monad constraints (e.g., <code>MonadReader</code>) rather than concrete monad types in this application?  I know some people advocate this as a best practice, but do you actually have a genuine need to run this code polymorphically over multiple concrete monads?"}, {"owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "reply_to_user": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "edited": false, "score": 0, "creation_date": 1564007130, "post_id": 57154099, "comment_id": 100893482, "body": "@K.A.Buhr Unfortunately it is actually rather important that I use <code>MonadRandom</code> as opposed to a specific environment.  This is because the test handler uses <code>Gen</code> as the instance while the application itself uses <code>IO</code>."}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 1, "last_activity_date": 1563833796, "creation_date": 1563833796, "answer_id": 57154415, "question_id": 57154099, "link": "https://stackoverflow.com/questions/57154099/testing-if-a-reader-monad-is-called-in-the-wrong-environment/57154415#57154415", "title": "Testing if a reader monad is called in the wrong environment", "body": "<p>Although it seems a bit strange, I suppose one way would be to introduce a redundant <code>ReaderT</code>:</p>\n\n<pre><code> data EnvironmentA -- = ...\n data EnvironmentB -- = ...\n\n convertAToB :: EnvironmentA -&gt; EnvironmentB\n convertBToA :: EnvironmentB -&gt; EnvironmentA\n -- convertAToB = ...\n -- convertBToA = ...\n\n monadA :: MonadReader EnvironmentA m =&gt; m Type\n monadA = do\n     env &lt;- ask\n     -- ...\n     res &lt;- runReaderT monadB (convertAToB env)\n     -- ...\n\n monadB :: MonadReader EnvironmentB m =&gt; m Type\n monadB = do\n     env &lt;- ask\n     -- ...\n     res &lt;- runReaderT monadA (convertBToA env)\n     -- ...\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1563847232, "post_id": 57155609, "comment_id": 100826541, "body": "Practically speaking, how does this differ from having two types, <code>EnvironmentA</code> and <code>EnvironmentB</code>, as in my answer? It seems the ability to write <code>MonadReader (Environment t) m</code> is the only difference you mention, but none of the actions proposed in the question could be given that type, so does that difference actually matter?"}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1563848016, "post_id": 57155609, "comment_id": 100826671, "body": "@DanielWagner as I said, it&#39;s tough to judge with such an oversimplified setup. But if there were <i>other</i> contents of the environment, particularly some that were shared between the types, it would help a great deal."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 1, "creation_date": 1563848254, "post_id": 57155609, "comment_id": 100826708, "body": "@SriothilismO&#39;Zaic I don&#39;t see how that prevents anything. Of course the types need to be pinned down somewhere. This is about letting the various helpers have narrower types so that you have to assemble them correctly."}, {"owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "edited": false, "score": 0, "creation_date": 1563848947, "post_id": 57155609, "comment_id": 100826826, "body": "I initially misunderstood what was being suggested here.  Once I saw Daniel Wagner&#39;s comment I much better understood."}], "tags": [], "owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "is_accepted": false, "score": 1, "last_activity_date": 1563846078, "creation_date": 1563846078, "answer_id": 57155609, "question_id": 57154099, "link": "https://stackoverflow.com/questions/57154099/testing-if-a-reader-monad-is-called-in-the-wrong-environment/57155609#57155609", "title": "Testing if a reader monad is called in the wrong environment", "body": "<p>Your example is a little too simplified for me to judge how well this applies, but you might also be able to get by making the Environment type parameterized. Maybe a GADT, something like:</p>\n\n<pre><code>data Environment t where\n    EnvironmentA :: Environment A\n    EnvironmentB :: Environment B\n\ndata A\ndata B\n</code></pre>\n\n<p>Then code that cares what specific environment it's running in can have a <code>MonadReader (Environment A) m</code> or <code>MonadReader (Environment B) m</code> constraint, while code that works with both can use a <code>MonadReader (Environment t) m</code> constraint.</p>\n\n<p>The only downside to this approach is the standard GADT downside of sometimes needing to be careful with branches to make sure the compiler has appropriate proofs of type equality in hand. It usually can be done, but it needs a bit more care. </p>\n"}, {"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": false, "score": 0, "last_activity_date": 1564088057, "creation_date": 1564088057, "answer_id": 57209987, "question_id": 57154099, "link": "https://stackoverflow.com/questions/57154099/testing-if-a-reader-monad-is-called-in-the-wrong-environment/57209987#57209987", "title": "Testing if a reader monad is called in the wrong environment", "body": "<p>Here's the approach that I would take.  As per @Carl's answer, I would differentiate the \"A\" and \"B\" environments at the type level by using a GADT parametrized by a type \"tag\".  Using a pair of empty types for the tag (<code>data A</code> and <code>data B</code>, like @Carl did) works, though I prefer to use <code>DataKinds</code> because it makes the intention clearer.</p>\n\n<p>Here are the preliminaries:</p>\n\n<pre><code>{-# OPTIONS_GHC -Wall -Wincomplete-uni-patterns #-}\n{-# LANGUAGE DataKinds, GADTs, KindSignatures #-}\n\nimport Control.Monad.Reader\nimport Control.Monad.Random\n</code></pre>\n\n<p>and here's the definition of the environment type:</p>\n\n<pre><code>data EnvType = A | B\ndata Environment (e :: EnvType) where\n  EnvironmentA :: Integer -&gt; Environment 'A\n  EnvironmentB :: Integer -&gt; Environment 'B\n</code></pre>\n\n<p>Here, the different environments happen to have the same internal structure (i.e., they each contain an <code>Integer</code>), but there's no requirement that they do so.</p>\n\n<p>I'm going to make the simplifying assumption that your monad always has the environment <code>ReaderT</code> as the outermost layer, but we'll maintain polymorphism in the base monad (so you can use <code>IO</code> or <code>Gen</code> to supply your randomness).  You can do all this using <code>MonadReader</code> constraints instead, but things get more complicated for some obscure technical reasons (if you <em>really</em> need this, add a comment, and I'll try to post a supplemental answer).  That is, for an arbitrary base monad <code>b</code>, we'll work in the monad:</p>\n\n<pre><code>type E e b = ReaderT (Environment e) b\n</code></pre>\n\n<p>Now, we can define the <code>mainMonad</code> action as follows.  Note the absence of a <code>MonadReader</code> constraint, as that's taken care of by the <code>E e b Type</code> signature.  The <code>MonadRandom b</code> constraint on the base monad ensures that <code>E e b</code> will have a <code>MonadRandom</code> instance.  Because the signature <code>E e b Type</code> is polymorphic in <code>e :: EnvType</code>, the <code>mainMonad</code> can work with any type of environment.  By case matching on the environment GADT, it can bring the constraints <code>e ~ 'A</code>, etc. into scope allowing it to dispatch to <code>monadA</code>, etc.</p>\n\n<pre><code>data Type = Type [String]  -- some return type\n\nmainMonad ::\n  ( MonadRandom b )\n    =&gt; E e b Type\nmainMonad = do\n  env &lt;- ask\n  case env of\n    EnvironmentA _ -&gt; monadA\n    EnvironmentB _ -&gt; monadB\n</code></pre>\n\n<p>The type signatures for <code>monadA</code> and <code>monadB</code> are similar, though they fix the <code>EnvType</code>:</p>\n\n<pre><code>monadA ::\n  ( MonadRandom b )\n    =&gt; E 'A b Type\nmonadB ::\n  ( MonadRandom b )\n    =&gt; E 'B b Type\n</code></pre>\n\n<p>The <code>monadA</code> action can call the A-specific <code>helperA</code> as well as the common <code>helper</code>:</p>\n\n<pre><code>monadA = do\n  result1 &lt;- helperA\n  result2 &lt;- helper\n  return $ Type [result1,  result2]\n</code></pre>\n\n<p>The helpers can use the <code>MonadRandom</code> facilities and inspect the environment using functions like <code>getData</code> that case-match on the environment.</p>\n\n<pre><code>helperA :: (Monad b) =&gt; E 'A b String -- we don't need MonadRandom on this one\nhelperA = do\n  n &lt;- asks getData\n  return $ show n\nhelper :: (MonadRandom b) =&gt; E e b String\nhelper = do\n  n &lt;- asks getData\n  x &lt;- getRandomR (0,n)\n  return $ show x\ngetData :: Environment e -&gt; Integer\ngetData (EnvironmentA x) = x\ngetData (EnvironmentB x) = x\n</code></pre>\n\n<p>It's also possible to case-match on the environment directly.  In a common helper, all environment types need to be handled, but in an <code>EnvType</code>-specific helper, only that <code>EnvType</code> needs to be handled (i.e., the pattern match will be exhaustive so even with <code>-Wall</code>, no warning about unmatched cases will be generated):</p>\n\n<pre><code>helper2 :: (Monad b) =&gt; E e b String\nhelper2 = do\n  env &lt;- ask\n  case env of\n    -- all cases must be handled or you get \"non-exhaustive\" warnings\n    EnvironmentA n -&gt; return $ show n ++ \" with 'A'-appropriate processing\"\n    EnvironmentB n -&gt; return $ show n ++ \" with 'B'-appropriate processing\"\nhelperA2 :: (Monad b) =&gt; E 'A b String\nhelperA2 = do\n  env &lt;- ask\n  case env of\n    -- only A-case need be handled, and trying to match B-case generates warning\n    EnvironmentA n -&gt; return $ show n\n</code></pre>\n\n<p>The <code>monadB</code> action can call common helpers and can dispatch to <code>monadA</code> with an appropriate <code>withReaderT</code> call.</p>\n\n<pre><code>monadB = do\n  Type start &lt;- withReaderT envBtoA monadA\n  result &lt;- helper\n  return $ Type $ start ++ [result]\n\nenvBtoA :: Environment 'B -&gt; Environment 'A\nenvBtoA (EnvironmentB x) = EnvironmentA x\n</code></pre>\n\n<p>Most importantly, of course, you can't accidentally call an A-type action from a B-type action:</p>\n\n<pre><code>badMonadB ::\n  ( MonadRandom b )\n    =&gt; E 'B b Type\nbadMonadB = do\n  monadA  -- error: couldn't match A with B\n</code></pre>\n\n<p>nor can you accidentally call an A-type action from a generic helper:</p>\n\n<pre><code>-- this is a common helper\nbadHelper :: (Monad b) =&gt; E e b String\nbadHelper = do\n  -- so it can't assume EnvironmentA is available\n  helperA  -- error: couldn't match \"e\" with B\n</code></pre>\n\n<p>though you can use case matching to check for an appropriate environment and then dispatch:</p>\n\n<pre><code>goodHelper :: (Monad b) =&gt; E e b String\ngoodHelper = do\n  env &lt;- ask\n  case env of\n    EnvironmentA _ -&gt; helperA  -- if we're \"A\", it's okay\n    _              -&gt; return \"default\"\n</code></pre>\n\n<p>I feel I should point out the relative advantages and disadvantages of this to @DanielWagner's solution (which I think you've misunderstood).</p>\n\n<p>His solution:</p>\n\n<ul>\n<li><em>does</em> provide type safety.  If you try sticking <code>res &lt;- monadB</code> in the definition of <code>monadA</code>, it will not type check.</li>\n<li>doesn't, as written, provide a mechanism to define common helper functions that access the environment (common helpers that only need <code>MonadRandom</code> would work fine), but this can be done by introducing a typeclass with instances for <code>EnvironmentA</code> and <code>EnvironmentB</code> that provide methods to do whatever it is common helpers are allowed to do with environments</li>\n<li>requires special handling of the environment in <code>mainMonad</code> (though there's some question about why you need <code>mainMonad</code> in the first place)</li>\n<li>avoids advanced type-level trickery, so may be easier to work with</li>\n<li>I believe adds an extra <code>ReaderT</code> layer with each environment transition, so could incur a runtime penalty if there is deep recursive A-to-B-to-A-to-B nesting.</li>\n</ul>\n\n<p>To see them side-by-side, here's my complete solution:</p>\n\n<pre><code>{-# OPTIONS_GHC -Wall -Wincomplete-uni-patterns #-}\n{-# LANGUAGE DataKinds, GADTs, KindSignatures #-}\n\nimport Control.Monad.Reader\nimport Control.Monad.Random\n\ndata EnvType = A | B\ndata Environment (e :: EnvType) where\n  EnvironmentA :: Integer -&gt; Environment 'A\n  EnvironmentB :: Integer -&gt; Environment 'B\ngetData :: Environment e -&gt; Integer\ngetData (EnvironmentA x) = x\ngetData (EnvironmentB x) = x\n\ntype E e b = ReaderT (Environment e) b\n\ndata Type = Type [String]  -- some return type\n\nmainMonad :: (MonadRandom b) =&gt; E e b Type\nmainMonad = do\n  env &lt;- ask\n  case env of\n    EnvironmentA _ -&gt; monadA\n    EnvironmentB _ -&gt; monadB\n\nmonadA :: (MonadRandom b) =&gt; E 'A b Type\nmonadA = do\n  result1 &lt;- helperA\n  result2 &lt;- helper\n  return $ Type [result1,  result2]\n\nmonadB :: (MonadRandom b) =&gt; E 'B b Type\nmonadB = do\n  Type start &lt;- withReaderT envBtoA monadA\n  result &lt;- helper\n  return $ Type $ start ++ [result]\nenvBtoA :: Environment 'B -&gt; Environment 'A\nenvBtoA (EnvironmentB x) = EnvironmentA x\n\nhelperA :: (Monad b) =&gt; E 'A b String -- we don't need MonadRandom on this one\nhelperA = do\n  n &lt;- asks getData\n  return $ show n\n\nhelper :: (MonadRandom b) =&gt; E e b String\nhelper = do\n  n &lt;- asks getData\n  x &lt;- getRandomR (0,n)\n  return $ show x\n</code></pre>\n\n<p>and here's a version of his:</p>\n\n<pre><code>{-# OPTIONS_GHC -Wall -Wincomplete-uni-patterns #-}\n{-# LANGUAGE FlexibleContexts #-}\n\nimport Control.Monad.Reader\nimport Control.Monad.Random\n\ndata EnvType = A | B\ndata EnvironmentMain = EnvironmentMain EnvType Integer\ndata EnvironmentA = EnvironmentA Integer\ndata EnvironmentB = EnvironmentB Integer\n\nclass Environment e where getData :: e -&gt; Integer\ninstance Environment EnvironmentA where getData (EnvironmentA n) = n\ninstance Environment EnvironmentB where getData (EnvironmentB n) = n\n\nconvertAToB :: EnvironmentA -&gt; EnvironmentB\nconvertAToB (EnvironmentA x) = EnvironmentB x\nconvertBToA :: EnvironmentB -&gt; EnvironmentA\nconvertBToA (EnvironmentB x) = EnvironmentA x\n\ndata Type = Type [String]  -- some return type\n\nmainMonad :: (MonadReader EnvironmentMain m, MonadRandom m) =&gt; m Type\nmainMonad = do\n  env &lt;- ask\n  case env of\n    EnvironmentMain A n -&gt; runReaderT monadA (EnvironmentA n)\n    EnvironmentMain B n -&gt; runReaderT monadB (EnvironmentB n)\n\nmonadA :: (MonadReader EnvironmentA m, MonadRandom m) =&gt; m Type\nmonadA = do\n  result1 &lt;- helperA\n  result2 &lt;- helper\n  return $ Type $ [result1] ++ [result2]\n\nmonadB :: (MonadReader EnvironmentB m, MonadRandom m) =&gt; m Type\nmonadB = do\n  env &lt;- ask\n  Type start &lt;- runReaderT monadA (convertBToA env)\n  result &lt;- helper\n  return $ Type $ start ++ [result]\n\nhelperA :: (MonadReader EnvironmentA m) =&gt; m String\nhelperA = do\n  EnvironmentA n &lt;- ask\n  return $ show n\n\nhelper :: (Environment e, MonadReader e m, MonadRandom m) =&gt; m String\nhelper = do\n  n &lt;- asks getData\n  x &lt;- getRandomR (0,n)\n  return $ show x\n</code></pre>\n"}], "owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 132, "favorite_count": 2, "answer_count": 3, "score": 1, "last_activity_date": 1564088057, "creation_date": 1563831616, "last_edit_date": 1563847051, "question_id": 57154099, "link": "https://stackoverflow.com/questions/57154099/testing-if-a-reader-monad-is-called-in-the-wrong-environment", "title": "Testing if a reader monad is called in the wrong environment", "body": "<p>I have a <code>MonadReader</code> that generates data for an application I am working on.  The main monad here generates the data based on some environment variables.  The monad generates the data by selecting one of several other monads to run based on the environment. My code looks somewhat like the following with <code>mainMonad</code> being the main monad:</p>\n\n<pre><code>data EnvironmentData = EnvironmentA | EnvironmentB \n\ntype Environment = (EnvironmentData, Integer)\n\nmainMonad ::\n  ( MonadReader Environment m\n  , MonadRandom m\n  )\n    =&gt; m Type\nmainMonad = do\n  env &lt;- ask\n  case env of\n    EnvironmentA -&gt; monadA\n    EnvironmentB -&gt; monadB\n\nmonadA ::\n  ( MonadReader Environment m\n  , MonadRandom m\n  )\n    =&gt; m Type\nmonadA = do\n  ...\n  result &lt;- helperA \n  result &lt;- helper\n  ...\n\nmonadB ::\n  ( MonadReader Environment m\n  , MonadRandom m\n  )\n    =&gt; m Type\nmonadB = do\n  start &lt;- local (set _1 EnvironmentA) monadA\n  ...\n  result  &lt;- helper\n  ...\n\nhelperA ::\n  ( MonadReader Environment m\n  , MonadRandom m\n  )\n    =&gt; m String\nhelperA = do\n  ...\n\nhelper ::\n  ( MonadReader Environment m\n  , MonadRandom m\n  )\n    =&gt; m String\nhelper = do\n  ...\n</code></pre>\n\n<p>The notable things here are:</p>\n\n<ul>\n<li>We have a main monad (<code>mainMonad</code>) that is both a <code>MonadReader Environment</code> and a <code>MonadRandom</code>.</li>\n<li>The main monad makes calls out to the subservient monads <code>monadA</code> and <code>monadB</code> of the same type.</li>\n<li>We have a fourth monad which serves as helper to <code>monadA</code> and <code>monadB</code>.</li>\n<li><code>monadB</code> makes a call out to <code>monadA</code> (but uses <code>local</code> to change the environment)</li>\n</ul>\n\n<p>Most importantly:</p>\n\n<ul>\n<li>Whenever <code>monadA</code> or <code>helperA</code> is called the <code>EnvironmentData</code> is <code>EnvironmentA</code> and whenever <code>monadB</code> is called the <code>EnvironmentData</code> is <code>EnvironmentB</code>.</li>\n</ul>\n\n<p>My code base is pretty much a scaled up version of this.  There are more subservient Monads (12 at the moment but this will likely increase in the future), there are more helpers, and my <code>EnvironmentData</code> type is a little more complex (my <code>Environment</code> though is nearly identical).</p>\n\n<p>The last bullet point is important because the <code>EnvironmentData</code> is used in the helpers and having the wrong <code>Environment</code> will lead to subtle changes in the results of the helpers.</p>\n\n<p>Now my issue is that it can be pretty easy to miss a <code>local</code> in my code and just call a monad directly with the wrong environment. I also fear calling a monad without using <code>local</code> because I think that it is expecting an environment it is not. These are tiny and easy to make errors (I've done it several times already) and yhe results of doing this are often rather subtle and rather varied.  This ends up making the symptoms of the problem rather hard to catch with unit testing.  So I would like to target the problem directly.  My first instinct was to add a clause to my unit test that says something along the lines of:</p>\n\n<blockquote>\n  <p>Call <code>mainMonad</code> check that over the course of evaluating it we never have a monad called with the wrong environment.</p>\n</blockquote>\n\n<p>That way I can catch these mistakes without having to comb through the code very carefully.  Now after thinking about this for a little while I have not come up with a very neat way to do this.  I've thought of a couple of ways that do work but I am not quite happy with:</p>\n\n<h2>1. Hard crash when called with the wrong environment</h2>\n\n<p>I could fix this by adding a condition to the front of each monad that hard crashes if it detects it being called with the wrong environment.  For example:</p>\n\n<p><pre><code>monadA ::\n     ( MonadReader m\n     )\n       =&gt; m Type\n    monadA = do\n      env &lt;- view _1  ask\n      case env of\n        EnvironmentA -&gt; return ()\n        _ -&gt; undefined\n      ...\n</code></pre></p>\n\n<p>The crash will be caught during unit testing and I will discover the issue. However this is not ideal since I would really prefer the customer to experience the slight issues caused by calling things with the wrong environment rather than a hard crash in the event that the test handler does not catch the issue. It sort of seems like the nuclear option.  It isn't awful but is not satisfactory by my standards and the worst of the three.</p>\n\n<h2>2. Use type safety</h2>\n\n<p>I also tried changing the types of <code>monadA</code> and <code>monadB</code> so that <code>monadA</code> could not be called directly from <code>monadB</code> or vice versa.  This is very nice in that it catches the problems at compile time. This has the issue of being a bit of a pain to maintain, and it is quite complex.  Since <code>monadA</code> and <code>monadB</code> may each share a number of common monads of the type <code>(MonadReader m) =&gt; m Type</code> each and every one of those has to be lifted as well.  Really it pretty much guarantees that every line now has a lift.  I'm not opposed to type based solutions but I don't want to have to spend a huge deal of time just maintaining a unit test.</p>\n\n<h2>3. Move the locals inside of the of the declaration</h2>\n\n<p>Each monad with a restriction on the <code>EnvironmentData</code> could start with a boilerplate akin to:</p>\n\n<pre><code>monadA ::\n  ( MonadReader Environment m\n  , MonadRandom m\n  )\n    =&gt; m Type\nmonadA = do\n  env &lt;- view _1 &lt;$&gt; ask\n  case env of\n    EnvironmentA -&gt;\n      ...\n    _ -&gt;\n      local (set _1 EnvironmentA) monadA\n</code></pre>\n\n<p>This is nice in that it makes sure everything is always called with the right environment.  However the issue is that it silently \"fixes\" errors in a way that unit-tests or type proofs don't.  It really only prevents me from forgetting <code>local</code>.</p>\n\n<h2>3.5. Remove the <code>EnvironmentData</code></h2>\n\n<p>This one is basically equivalent to the last, perhaps a bit cleaner though.  If I change the type of <code>monadA</code> and <code>monadB</code> to</p>\n\n<pre><code>( MonadReader Integer m\n, MonadRandom m\n)\n  =&gt; m Type\n</code></pre>\n\n<p>then add a wrapper using <s><code>runReaderT</code></s> <a href=\"https://hackage.haskell.org/package/transformers-0.5.6.2/docs/Control-Monad-Trans-Reader.html#v:withReaderT\" rel=\"nofollow noreferrer\"><code>withReaderT</code></a> (as suggested by <a href=\"https://stackoverflow.com/u/791604\">Daniel Wagner</a> below) to calls coming from and to my <code>MonadReader Environment</code>s. I cannot call them with the wrong <code>EnvironmentData</code> since there is no environment data.  This has pretty much the exact issues of the last ones.</p>\n\n<hr>\n\n<p>So is there a way I can ensure that my monads are always called from the correct environment?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1563829574, "post_id": 57153650, "comment_id": 100822571, "body": "I&#39;m not aware of any such class, and a quick <a href=\"https://hoogle.haskell.org/?hoogle=a+-%3E+Bool&amp;scope=set%3Astackage\" rel=\"nofollow noreferrer\">Hoogle search</a> doesn&#39;t return anything that&#39;s part of a typeclass. It doesn&#39;t seem useful to have this as part of a typeclass because it would imply that types in that class have a &quot;canonical&quot; predicate associated to them, when it&#39;s not obvious that one exists for most types. Your example seems to be driven by some particular business logic rather than anything intrinsic to the type, and I don&#39;t see why it&#39;s easier to use a class rather than just a custom function."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1563829748, "post_id": 57153650, "comment_id": 100822640, "body": "Perhaps <a href=\"https://hackage.haskell.org/package/validity-0.9.0.1/docs/Data-Validity.html#t:Validity\" rel=\"nofollow noreferrer\"><code>Validity</code></a>? It does not map to a <code>Bool</code>, but also performs validation."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 7, "creation_date": 1563830255, "post_id": 57153650, "comment_id": 100822822, "body": "My thumb rules about classes: 1) If you need a class for only one instance on a single type, you do not actually need that class. 2) If you need a class for many instances on the same type, you definitely do not need that class. Does any of these apply to your case? I would try to design the program without classes, first, and introduce them as needed."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1563831610, "post_id": 57153650, "comment_id": 100823277, "body": "@chi I agree, however the OP actually invokes two other <code>Check</code> instances from the <code>instance Check ShoppingOrder</code>, so it&#39;s at least not as suspected just a single type that&#39;s ever instantiated."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 4, "creation_date": 1563846350, "post_id": 57153650, "comment_id": 100826354, "body": "Seems more like a smart constructor would be the appropriate pattern here. Rather than checking whether data is valid, make it impossible to construct invalid data in the first place."}, {"owner": {"reputation": 7666, "user_id": 1241193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0331e5e748a0ac3860b68f6cac130ef1?s=128&d=identicon&r=PG", "display_name": "Bob Dalgleish", "link": "https://stackoverflow.com/users/1241193/bob-dalgleish"}, "edited": false, "score": 0, "creation_date": 1563900467, "post_id": 57153650, "comment_id": 100851108, "body": "The <code>Contravariant</code> package defines <code>Predicate</code>: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Functor-Contravariant.html#t:Predicate\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/base-4.12.0.0/docs/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": true, "score": 2, "last_activity_date": 1563869299, "creation_date": 1563869299, "answer_id": 57159532, "question_id": 57153650, "link": "https://stackoverflow.com/questions/57153650/is-there-a-built-in-typeclass-equivalent-to-this/57159532#57159532", "title": "Is there a built-in typeclass equivalent to this?", "body": "<p>While the following doesn't directly answer the question of <em>does such a class exist?</em>, I still find it worthwhile to point out that a composable approach to input validation is to use an <code>Applicative</code> sum type.</p>\n\n<p>I'll start with <code>Either</code>, since this is built into the <code>base</code> library that comes with GHC. It's actually not the best choice for validation, but I'll get back to that further down.</p>\n\n<p>You can write fine-grained validation functions that return <code>Either</code> values, for example:</p>\n\n<pre><code>validatePositive :: (Ord a, Num a) =&gt; a -&gt; Either String a\nvalidatePositive p = if p &gt; 0 then Right p else Left \"Not a positive number.\"\n</code></pre>\n\n<p>In this example, I'm just using a <code>String</code> to return error messages, but you may probably want to use something better typed, on which you can pattern-match.</p>\n\n<pre><code>*Q57153650&gt; validatePositive (-1)\nLeft \"Not a positive number.\"\n*Q57153650&gt; validatePositive 0\nLeft \"Not a positive number.\"\n*Q57153650&gt; validatePositive 1\nRight 1\n</code></pre>\n\n<p>Assume that you've also written validation functions for <code>Customer</code> and <code>ShoppingItem</code>:</p>\n\n<pre><code>validateCustomer :: Customer -&gt; Either String Customer\nvalidateCustomer = -- ...\n\nvalidateItem :: ShoppingItem -&gt; Either String ShoppingItem\nvalidateItem = -- ...\n</code></pre>\n\n<p>(I'm just showing the types of the functions here, since I don't know how <code>Customer</code> or <code>ShoppingItem</code> are defined.)</p>\n\n<p>You can now <a href=\"https://blog.ploeh.dk/2018/11/05/applicative-validation\" rel=\"nofollow noreferrer\">compose all of these validation functions</a> like this:</p>\n\n<pre><code>validateOrder :: ShoppingOrder -&gt; Either String ShoppingOrder\nvalidateOrder (ShoppingOrder c i q) =\n  ShoppingOrder &lt;$&gt; validateCustomer c &lt;*&gt; validateItem i &lt;*&gt; validatePositive q\n</code></pre>\n\n<p>This illustrates the concept:</p>\n\n<pre><code>*Q57153650&gt; :t validOrder\nvalidOrder :: ShoppingOrder\n*Q57153650&gt; invalidOrder = validOrder { quantity = (-1) }\n*Q57153650&gt; validateOrder validOrder\nRight (ShoppingOrder {customer = ..., item = ..., quantity = 2})\n*Q57153650&gt; validateOrder invalidOrder\nLeft \"Not a positive number.\"\n</code></pre>\n\n<p>When you have a valid order, the result of validation is a <code>Right</code> value; if anything is incorrect, the result is a <code>Left</code> value that indicates what went wrong.</p>\n\n<p>A limitation of the built-in <code>Either</code> type's <code>Applicative</code> instance is that if <em>more</em> than one thing is incorrect, you only get a message about the first incorrect (sub)value.</p>\n\n<p>When it comes to data validation, one often wants to accumulate all the errors in (e.g.) a list, so that one can display a list of problems to the client. As the article I linked to above explains, you can do that by modifying the <code>Applicative</code> instance to collect all errors.</p>\n\n<p>You don't have to implement such a type yourself, though, since various packages already do that. One that I'm aware of is <a href=\"http://hackage.haskell.org/package/validation\" rel=\"nofollow noreferrer\">the validation package</a>, that I do admit, however, I've never used in a real project.</p>\n"}], "owner": {"reputation": 25, "user_id": 11821215, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2b1c38f5f7c205aaf5b0ff653c301445?s=128&d=identicon&r=PG&f=1", "display_name": "Nathan Hohnbaum", "link": "https://stackoverflow.com/users/11821215/nathan-hohnbaum"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 103, "favorite_count": 0, "accepted_answer_id": 57159532, "answer_count": 1, "score": 2, "last_activity_date": 1563878645, "creation_date": 1563829232, "last_edit_date": 1563878645, "question_id": 57153650, "link": "https://stackoverflow.com/questions/57153650/is-there-a-built-in-typeclass-equivalent-to-this", "title": "Is there a built-in typeclass equivalent to this?", "body": "<p>So I have the following Haskell typeclass used for input validation.</p>\n\n<pre><code>-- Check.hs\nmodule Check where\n-- Used to ensure that the value of a variable is a good value.  For example, this can be used for input validation.\nclass Check a where\n    accept :: a -&gt; Bool\n</code></pre>\n\n<p>I use it, for example, to ensure that good data is passed to a shopping order.</p>\n\n<pre><code>-- Shopping.hs\nmodule Shopping where\n\nimport Customer\nimport Check\nimport ShoppingItem\n\n-- Stores data about a shopping order including the item\ndata ShoppingOrder = ShoppingOrder {\n        customer :: Customer,       -- The customer placing the order\n        item     :: ShoppingItem,   -- The item being ordered\n        quantity :: Int             -- The quantity being ordered\n        } deriving (Show,Read,Eq)\n\n-- ShoppingItem and Customer both have instances of Check.\n\ninstance Check ShoppingOrder where\n    accept order = (quantity order) &gt; 0 &amp;&amp; (accept . item) order &amp;&amp; (accept . customer) order\n</code></pre>\n\n<p>I was wondering if there was already a built-in version of the <code>Check</code> typeclass because the nature of data constructors would make it quite useful and I would rather work with already existing API than create my own.</p>\n"}, {"tags": ["haskell", "memoization", "state-monad", "multiway-tree", "negamax"], "comments": [{"owner": {"reputation": 1504, "user_id": 1173521, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/e53bbfee240b8cbd7af6e5629968a48b?s=128&d=identicon&r=PG", "display_name": "samvv", "link": "https://stackoverflow.com/users/1173521/samvv"}, "edited": false, "score": 1, "creation_date": 1563827949, "post_id": 57153341, "comment_id": 100821942, "body": "This is a really cool question! Too bad I can&#39;t help you out with it ..."}], "answers": [{"comments": [{"owner": {"reputation": 4605, "user_id": 1067339, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/3479b6831ccaa6263ed5ca7dab3ba972?s=128&d=identicon&r=PG", "display_name": "Qqwy", "link": "https://stackoverflow.com/users/1067339/qqwy"}, "edited": false, "score": 0, "creation_date": 1563832038, "post_id": 57153637, "comment_id": 100823430, "body": "Interesting answer! The depth is mostly relevant to keep track of which player&#39;s turn it is, but you are right that no generality is lost.   How is a function like the <code>memo</code> you mentioned able to perform memoization? Some behind-the-scenes <code>unsfafePerform</code> trickery?"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 4605, "user_id": 1067339, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/3479b6831ccaa6263ed5ca7dab3ba972?s=128&d=identicon&r=PG", "display_name": "Qqwy", "link": "https://stackoverflow.com/users/1067339/qqwy"}, "edited": false, "score": 0, "creation_date": 1563846605, "post_id": 57153637, "comment_id": 100826405, "body": "@Qqwy, actually no hacks are necessary, it&#39;s quite beautiful. See the haskellwiki page about memoization. There are several libraries to help -- data-memocombinators and MemoTrie ... depending on your aesthetic"}, {"owner": {"reputation": 24266, "user_id": 946226, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/5823d09208b1e4b63bbfcd189492032c?s=128&d=identicon&r=PG", "display_name": "Joachim Breitner", "link": "https://stackoverflow.com/users/946226/joachim-breitner"}, "reply_to_user": {"reputation": 4605, "user_id": 1067339, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/3479b6831ccaa6263ed5ca7dab3ba972?s=128&d=identicon&r=PG", "display_name": "Qqwy", "link": "https://stackoverflow.com/users/1067339/qqwy"}, "edited": false, "score": 0, "creation_date": 1563862434, "post_id": 57153637, "comment_id": 100830010, "body": "@Qqwy, what is the type of <code>Position</code>? Then we can look at that. Or look at the existing memo combinators, like @luqui suggests."}, {"owner": {"reputation": 4605, "user_id": 1067339, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/3479b6831ccaa6263ed5ca7dab3ba972?s=128&d=identicon&r=PG", "display_name": "Qqwy", "link": "https://stackoverflow.com/users/1067339/qqwy"}, "edited": false, "score": 0, "creation_date": 1563868619, "post_id": 57153637, "comment_id": 100832899, "body": "@JoachimBreitner In the case of e.g. Tic Tac Toe, Position would be typed as <code>newtype TicTacToe = TicTacToe (Array (Int, Int) (Maybe CurrentPlayer))   deriving (Eq, Ord)</code>. As I am building it as a typeclass, however, <code>position</code> is one of the two types that differ between games. Maybe it is more helpful to share the interface of the typeclass. (Since the code is too long for a comment, see the edited question)"}], "tags": [], "owner": {"reputation": 24266, "user_id": 946226, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/5823d09208b1e4b63bbfcd189492032c?s=128&d=identicon&r=PG", "display_name": "Joachim Breitner", "link": "https://stackoverflow.com/users/946226/joachim-breitner"}, "is_accepted": false, "score": 1, "last_activity_date": 1563829185, "creation_date": 1563829185, "answer_id": 57153637, "question_id": 57153341, "link": "https://stackoverflow.com/questions/57153341/how-to-memoize-the-repeated-subtrees-of-a-game-tree-a-potentially-infinite-rose/57153637#57153637", "title": "How to memoize the repeated subtrees of a game tree (a potentially infinite rose tree)?", "body": "<h3>Problem reformulation</h3>\n\n<p>If I understand the question correctly, you have a function that returns the possible next moves in a game, and one to take that move:</p>\n\n<pre><code>start :: Position\nmoves :: Position -&gt; [Move]\nact :: Position -&gt; Move -&gt; Position\n</code></pre>\n\n<p>and how you want to build the infinite tree of states (please allow me to ignore the <code>Depth</code> field, for simplicity. If you consider the depth counter as part of the <code>Position</code> type, you see that no generality is lost here):</p>\n\n<pre><code>states :: Forest (Position, Move)\nstates = forest start\n\nforest :: Position -&gt; Forest (Position, Move)\nforest p = [ Node (m, p') (states p') | m &lt;- moves p, let p' = act p m ]\n</code></pre>\n\n<p>but you want to achieve that in a way that identical subtrees of <code>forest</code> are shared.</p>\n\n<h3>Towards Memoization</h3>\n\n<p>The general technique is here is that we want to memoize <code>forest</code>: This way, for identical <code>Positions</code>, we get shared subtrees. So the recipe is:</p>\n\n<pre><code>forest :: Position -&gt; Forest (Position, Move)\nforest = memo forest'\n\nforest' :: Position -&gt; Forest (Position, Move)\nforest' p = [ Node (m, p') (states p') | m &lt;- moves p, let p' = act p m ]\n</code></pre>\n\n<p>And we need a suitable memo-function:</p>\n\n<pre><code>memo :: (Position -&gt; a) -&gt; (Position -&gt; a)\n</code></pre>\n\n<p>At this point, we need to know more about <code>Position</code> in order to know how to implement that using an equivalent of the \u201clazy list\u201d trick\u2026 But you see that you do <em>not</em> need to memoize functions that involve Rose trees.</p>\n"}, {"comments": [{"owner": {"reputation": 4605, "user_id": 1067339, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/3479b6831ccaa6263ed5ca7dab3ba972?s=128&d=identicon&r=PG", "display_name": "Qqwy", "link": "https://stackoverflow.com/users/1067339/qqwy"}, "edited": false, "score": 0, "creation_date": 1563832179, "post_id": 57153693, "comment_id": 100823475, "body": "I intend to create the negamax algorithm as a typeclass that can be implemented for any zero sum games (like Chess, Checkers, TicTacToe, Connect-Four, Reversi, Shogi, Xiangi, etc). I have no idea if it is at all possible to define a &#39;canonical sequence&#39; for each of these games&#39; positions."}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1563903800, "post_id": 57153693, "comment_id": 100852551, "body": "The method generally used by chess engines to hash chess board positions is called <a href=\"https://en.m.wikipedia.org/wiki/Zobrist_hashing\" rel=\"nofollow noreferrer\">Zobrist hashing</a>. Perhaps something similar would be suitable for your game. You could define a typeclass that extends the negamax class to add a hash function for suitable games. You might look at the <a href=\"http://hackage.haskell.org/package/astar-0.3.0.0/docs/Data-Graph-AStar.html\" rel=\"nofollow noreferrer\">astar package</a>&#39;s parameterized generic A* search for inspiration there."}], "tags": [], "owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "is_accepted": false, "score": 0, "last_activity_date": 1563829445, "creation_date": 1563829445, "answer_id": 57153693, "question_id": 57153341, "link": "https://stackoverflow.com/questions/57153341/how-to-memoize-the-repeated-subtrees-of-a-game-tree-a-potentially-infinite-rose/57153693#57153693", "title": "How to memoize the repeated subtrees of a game tree (a potentially infinite rose tree)?", "body": "<p>I would try to do this by normalizing board positions based on some \"canonical\" sequence of moves to reach that position. Then each child is assigned the value of traversing its individual normalized sequence through the tree. (no code because I'm on my phone and this is a big task.) </p>\n\n<p>How well this works depends on the ease of calculating normalized move sequences in the game you're playing. But it's a way to introduce sharing by tying the knot, making use of a shared reference to the root of the game tree. Maybe it will serve as inspiration for other ideas that fit your specific case. </p>\n"}], "owner": {"reputation": 4605, "user_id": 1067339, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/3479b6831ccaa6263ed5ca7dab3ba972?s=128&d=identicon&r=PG", "display_name": "Qqwy", "link": "https://stackoverflow.com/users/1067339/qqwy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 229, "favorite_count": 2, "answer_count": 2, "score": 3, "last_activity_date": 1563869339, "creation_date": 1563827576, "last_edit_date": 1563869339, "question_id": 57153341, "link": "https://stackoverflow.com/questions/57153341/how-to-memoize-the-repeated-subtrees-of-a-game-tree-a-potentially-infinite-rose", "title": "How to memoize the repeated subtrees of a game tree (a potentially infinite rose tree)?", "body": "<p>I am attempting to implement the <a href=\"https://en.wikipedia.org/wiki/Negamax\" rel=\"nofollow noreferrer\">Negamax</a> algorithm in Haskell.</p>\n\n<p>For this, I am representing the future possibilities a game might take in a rose tree (<code>Data.Tree.Forest (depth, move, position)</code>). However, often there are positions that can be reached with two different sequences of moves. It is a waste (and quickly becomes very slow) to re-evaluate (the subtrees of) repeated positions.</p>\n\n<p>Here is what I tried so far:</p>\n\n<ul>\n<li><p>Implement a variant of <a href=\"https://wiki.haskell.org/Tying_the_Knot\" rel=\"nofollow noreferrer\">Tying the Knot</a> to share common sub-results. However, I have only been able to find explanations of tying the knot for (potentially infinite) lists, and nothing about re-using subtrees.</p></li>\n<li><p>Another approach I have considered was to build a tree inside the <code>State</code> monad, where the state to keep would be a <code>Map (depth, position) (Forest (depth, move, position))</code> to perform explicit memoization but I have so far not been able to set this up properly either.</p></li>\n</ul>\n\n<p>I think that both approaches might have the problem that a game tree can only be built in a <em>corecursive</em> way: We do not build the tree up to the root from the leaves, but build a (potentially infinite) tree lazily from the root down.</p>\n\n<hr>\n\n<p>EDIT: To give you an example of the code I am currently using (that is too slow):</p>\n\n<pre><code>{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE FlexibleContexts #-}\nmodule ZeroSumGame where\n\nimport qualified Control.Arrow\nimport Data.Tree\n\nimport Numeric.Natural (Natural)\n\n(|&gt;) :: a -&gt; (a -&gt; b) -&gt; b\nx |&gt; f = f x\ninfixl 0 |&gt;\n{-# INLINE (|&gt;) #-}\n\nclass Ord s =&gt; Game s where\n  data Move s\n  initial :: s -- | Beginning of the game\n  applyMove :: Natural -&gt; s -&gt; Move s -&gt; s -- | Moving from one game state to the next\n  possibleMoves :: Natural -&gt; s -&gt; [Move s] -- | Lists moves the current player is able to do.\n  isGameOver :: s -&gt; Bool -- | True if the game has ended. TODO: Maybe write default implementation using `possibleMoves state == []`?\n  scorePosition :: Natural -&gt; Move s -&gt; s -&gt; Int -- | Turns a position in an integer, for the Negamax algorithm to decide which position is the best.\n\ntype Trimove state = (Natural, Move state, state) -- | Depth since start of game, move to next position, new position\n\ngameforest :: Game s =&gt; Natural -&gt; s -&gt; Forest (Trimove s)\ngameforest start_depth start_state = unfoldForest buildNode (nextpositions start_depth start_state)\n  where\n    buildNode (depth, move, current_state) =\n      if\n        isGameOver current_state\n      then\n        ((depth, move, current_state), [])\n      else\n        ((depth, move, current_state), nextpositions depth current_state)\n    nextpositions depth current_state =\n      current_state\n      |&gt; possibleMoves depth\n      |&gt; fmap (\\move -&gt; (succ depth, move, applyMove depth current_state move))\n\nscoreTree :: Game s =&gt; Ord (Move s) =&gt; Natural -&gt; Tree (Trimove s) -&gt; (Move s, Int)\nscoreTree depth node =\n  case (depth, subForest node) of\n    (0, _) -&gt;\n      node |&gt; rootLabel |&gt; uncurry3dropFirst scorePosition\n    (_, []) -&gt;\n      node |&gt; rootLabel |&gt; uncurry3dropFirst scorePosition\n    (_, children) -&gt;\n      children\n      |&gt; scoreForest (pred depth)\n      |&gt; map (Control.Arrow.second negate)\n      |&gt; maximum\n\nuncurry3dropFirst :: (a -&gt; b -&gt; c -&gt; d) -&gt; (a, b, c) -&gt; (b, d)\nuncurry3dropFirst fun (a, b, c) = (b, fun a b c)\n\nscoreForest :: Game s =&gt; Ord (Move s) =&gt; Natural -&gt; Forest (Trimove s) -&gt; [(Move s, Int)]\nscoreForest depth forest =\n  forest\n  |&gt; fmap (scoreTree depth)\n\n</code></pre>\n\n<pre><code>{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE FlexibleContexts #-}\nmodule TicTacToe where\n\nimport qualified Control.Monad.State\nimport Control.Monad.State (State)\nimport qualified Data.Map\nimport Data.Map (Map)\nimport qualified Control.Arrow\nimport Data.Tree\n\nimport Data.Array (Array)\nimport qualified Data.Array\nimport qualified Data.Maybe\nimport qualified Data.Foldable\n\nimport Numeric.Natural (Natural)\n\n\nimport ZeroSumGame\n\ndata CurrentPlayer = First | Second\n  deriving (Eq, Ord, Show)\n\n\ninstance Enum CurrentPlayer where\n  fromEnum First = 1\n  fromEnum Second = -1\n  toEnum 1 = First\n  toEnum (-1) = Second\n  toEnum _ = error \"Improper player\"\n\nnewtype TicTacToe = TicTacToe (Array (Int, Int) (Maybe CurrentPlayer))\n  deriving (Eq, Ord)\n\ninstance Game TicTacToe where\n  data Move TicTacToe = TicTacToeMove (Int, Int)\n    deriving (Eq, Ord, Show, Bounded)\n\n  initial = TicTacToe initialTicTacToeBoard\n\n  possibleMoves _depth = possibleTicTacToeMoves\n\n  applyMove depth (TicTacToe board) (TicTacToeMove (x, y)) =\n    TicTacToe newboard\n    where\n      newboard = board Data.Array.// [((x, y), Just player)]\n      player = case depth `mod` 2 of\n        0 -&gt; First\n        _ -&gt; Second\n\n  isGameOver state = Data.Maybe.isJust (findFilledLines state)\n\n  scorePosition _ _ state =\n          state\n          |&gt; findFilledLines\n          |&gt; fmap fromEnum\n          |&gt; Data.Maybe.fromMaybe 0\n          |&gt; (* (-10000))\n\n\n\nfindFilledLines :: TicTacToe -&gt; Maybe CurrentPlayer\nfindFilledLines (TicTacToe board) =\n  (rows ++ columns ++ diagonals)\n  |&gt; map winner\n  |&gt; Data.Foldable.asum\n  where\n    rows = vals rows_indexes\n    columns = vals columns_indexes\n    diagonals = vals diagonals_indexes\n    rows_indexes = [[(i, j) | i &lt;- [0..2]]| j &lt;- [0..2]]\n    columns_indexes = [[(i, j) | j &lt;- [0..2]]| i &lt;- [0..2]]\n    diagonals_indexes = [[(i, i) ]| i &lt;- [0..2]] ++ [[(i, 2 - i) ]| i &lt;- [0..2]]\n    vals = map (map (\\index -&gt; board Data.Array.! index))\n\nwinner :: Eq a =&gt; [Maybe a] -&gt; Maybe a\nwinner [x,y,z] =\n  if x == y &amp;&amp; x == z then x else Nothing\nwinner _ = Nothing\n\n\ninitialTicTacToeBoard :: (Array (Int, Int) (Maybe CurrentPlayer))\ninitialTicTacToeBoard =\n  Data.Array.array ((0, 0), (2, 2)) [((i, j), Nothing) | i &lt;- [0..2], j &lt;- [0..2]]\n\npossibleTicTacToeMoves :: TicTacToe -&gt; [Move TicTacToe]\npossibleTicTacToeMoves (TicTacToe board) = foldr checkSquareForMove [] (Data.Array.assocs board)\n    where\n      checkSquareForMove (index, val) acc = case val of\n        Nothing -&gt; TicTacToeMove index : acc\n        Just _ -&gt; acc\n\nprintBoard :: TicTacToe -&gt; String\nprintBoard (TicTacToe board) =\n  unlines [unwords [showTile (board Data.Array.! (y, x)) | x &lt;- [0..2]] |  y &lt;- [0..2]]\n  where\n    showTile loc =\n      case loc of\n        Nothing -&gt; \" \"\n        Just Second -&gt; \"X\"\n        Just First -&gt; \"O\"\n\n</code></pre>\n\n<p>(TypeFamilies is used to allow each <code>Game</code> implementation to have their own notion of a <code>Move</code>, and FlexibleContexts is then required to enforce <code>Move s</code> to implement <code>Ord</code>.</p>\n"}, {"tags": ["haskell", "polymorphism", "pattern-matching"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1563798887, "post_id": 57146115, "comment_id": 100807449, "body": "The problem is that when you define <code>resX</code>, it thus means that it is equivalent to <code>fst test</code>. <code>test</code> has signature <code>(Show a, Show b) =&gt; (a -&gt; String, b -&gt; String)</code>, so the question is: what to do with <code>b</code>? That is ambiguous. This is one of the reasons not to use tuples for this."}], "answers": [{"comments": [{"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1563838662, "post_id": 57146661, "comment_id": 100825027, "body": "Thank you for an excellent answer! I have a further question: is there a way to get both <code>resX</code> and <code>resY</code> in the same declaration? Presumably <code>(resX, resY) = (fst (test @_ @Bool), snd (test @Bool))</code> works, but is there any easier way?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1563877031, "post_id": 57146661, "comment_id": 100837544, "body": "@bradrn: not as far as I know no, since if you would &quot;combine&quot; the two, then that means that <code>a</code> still can depend on <code>b</code> and vice versa."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 5, "last_activity_date": 1563800607, "creation_date": 1563800607, "answer_id": 57146661, "question_id": 57146115, "link": "https://stackoverflow.com/questions/57146115/polymorphic-pattern-matching-results-in-ambiguous-type/57146661#57146661", "title": "Polymorphic pattern matching results in ambiguous type", "body": "<blockquote>\n  <p>This makes sense: that pattern match doesn\u2019t constrain a or b in any way, so they\u2019re ambiguous. But how do I get rid of this error?</p>\n</blockquote>\n\n<p>Giving type signatures will not help here. The type for <code>test</code> is <code>(Show a, Show b) =&gt; (a -&gt; String, b -&gt; String)</code>. Basically what you do is write:</p>\n\n<pre><code>resX :: Show a =&gt; a -> String\nresX = fst test</code></pre>\n\n<p>The question is however, what should Haskell fill in for <code>b</code> from the signature of <code>test</code>? You might say that this does not matter, and here it indeed does not matter. But if you defined <code>test</code> through a typeclass for example. The <code>a</code> and <code>b</code> type could determine <em>together</em> what the implementation for the first item would be. For example:</p>\n\n<pre><code>{-# LANGUAGE MultiParamTypeClasses #-}\n\nclass (Show a, Show b) =&gt; SomeTest a b where\n    test :: (a -&gt; String, b -&gt; String)\n\ninstance SomeTest Bool <b>Bool</b> where\n    test = (const \"foo\", const \"bar\")\n\ninstance SomeTest Bool <b>Int</b> where\n    test = (const \"qux\", const \"bar\")</code></pre>\n\n<p>here the second type parameter determines the implementation of the first item of <code>test</code>, and hence we can not just omit that.</p>\n\n<p>You can for example use the <code>TypeApplications</code> extension, to provide a type for the other type parameter (here <code>Bool</code>):</p>\n\n<pre><code>{-# LANGUAGE TypeApplications -#}\n\ntest :: (Show a, Show b) =&gt; (a -&gt; String, b -&gt; String)\ntest = (show, show)\n\nresX :: Show a =&gt; a -&gt; String\nresX = <b>fst</b> (test <b>@_ @Bool</b>)\n\nresY :: Show a =&gt; a -&gt; String\nresY = <b>snd</b> (test <b>@Bool</b>)</code></pre>\n"}, {"comments": [{"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1563838901, "post_id": 57147256, "comment_id": 100825089, "body": "\u201cYou might object that one <i>should</i> be able to carry out such a factorisation in this case.\u201d Question: similarly to how <code>(a1,a2) -&gt; (b1,b2)</code> can be factored into <code>(a1-&gt;b1, a2-&gt;b2)</code>, would you be able to factor <code>(constr1, constr2) =&gt; (a1, a2)</code> into <code>(constr1 =&gt; a1, constr2 =&gt; a2)</code> (inserting rank N types as appropriate)?"}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "reply_to_user": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1563870941, "post_id": 57147256, "comment_id": 100834100, "body": "<code>(a1, a2) -&gt; (b1, b2)</code> <i>can\u2019t</i> be factored into <code>(a1 -&gt; b1, a2 -&gt; b2)</code>. Try it!"}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "reply_to_user": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1563871016, "post_id": 57147256, "comment_id": 100834147, "body": "Also, your <code>(c1 =&gt; a1, c2 =&gt; a2)</code> is not a valid type because it\u2019s impredicative."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1563871039, "post_id": 57147256, "comment_id": 100834160, "body": "I\u2019m aware of that fact already. I suppose I should have been more specific: in this case, I <i>know</i> that <code>b1</code> only depends on <code>a1</code> and <code>b2</code> only depends on <code>a2</code>, so <i>in this specific situation</i> I can rewrite the declaration to be of that different type."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1563871078, "post_id": 57147256, "comment_id": 100834180, "body": "And you\u2019re correct that that would be impredicative \u2014 I just realised that now. I suppose I could use newtypes to avoid that though."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "reply_to_user": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1563871157, "post_id": 57147256, "comment_id": 100834215, "body": "Exactly - which is why it\u2019s not reasonable to expect a compiler to be able to make the transformation."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1563871193, "post_id": 57147256, "comment_id": 100834229, "body": "That does make sense @BenhaminHodgson \u2014 thanks for explaining!"}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "reply_to_user": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 0, "creation_date": 1563871228, "post_id": 57147256, "comment_id": 100834248, "body": "Happy to help! \ud83d\ude09"}], "tags": [], "owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "is_accepted": false, "score": 6, "last_activity_date": 1563803008, "last_edit_date": 1563803008, "creation_date": 1563802521, "answer_id": 57147256, "question_id": 57146115, "link": "https://stackoverflow.com/questions/57146115/polymorphic-pattern-matching-results-in-ambiguous-type/57147256#57147256", "title": "Polymorphic pattern matching results in ambiguous type", "body": "<p>It's instructive to think about how your code actually works at runtime. Type classes have <em>dictionary passing</em> semantics. Classy code</p>\n\n<pre><code>class Foo a where\n    foo :: a -&gt; Int\n\ninstance Foo Int where\n    foo = id\n\nuseFoo :: Foo a =&gt; a -&gt; IO ()\nuseFoo x = print (foo x)\n\ncallFoo = useFoo (123 :: Int)\n</code></pre>\n\n<p>is compiled into non-classy code.</p>\n\n<pre><code>data Foo_ a = Foo_ { foo :: a -&gt; Int }\n\nfoo_Int :: Foo_ Int\nfoo_Int = Foo_ { foo = id }\n\nuseFoo :: Foo_ a -&gt; a -&gt; IO ()\nuseFoo dict x = print (foo dict x)\n\ncallFoo = useFoo foo_Int 123\n</code></pre>\n\n<p>The \"fat arrow\" <code>=&gt;</code> really means exactly the same thing at runtime as the \"scrawny arrow\" <code>-&gt;</code>. The only difference is that <code>=&gt;</code>'s argument is passed implicitly by the constraint solver.</p>\n\n<p>So let's think about your <code>Show</code> example from this perspective. A type like <code>test :: (Show a, Show b) =&gt; (a -&gt; String, b -&gt; String)</code> really means <code>test :: (Show_ a, Show_ b) -&gt; (a, String, b -&gt; String)</code>. You can't factorise that function into a pair of functions <code>(Show_ a -&gt; a -&gt; String, Show_ b -&gt; b -&gt; String)</code>. The body of the function might make use of both <code>Show_</code> dictionaries before returning a result, so you have to supply both before you can get the <code>(a -&gt; String, b -&gt; String)</code> out.</p>\n\n<p>When inferring a type for <code>resx</code>, the type checker will come up with <code>resx :: (Show a, Show b) =&gt; a -&gt; String</code> \u2014 it needs both instances in scope in order to call <code>test</code>. Clearly this is an ambiguous type. <code>b</code> doesn't appear to the right of the <code>=&gt;</code>, so at <code>resx</code>'s call site there will never be enough local type information to call it successfully.</p>\n\n<p>You might object that one <em>should</em> be able to carry out such a factorisation in this case. The two halves of <code>test</code>'s body can't use each others' <code>Show</code> instances, because <code>Show</code>'s methods only talk about their type parameter as an input and the input is not in scope in the wrong half of the tuple. But that's a sophisticated argument from parametricity about runtime behaviour, and it only holds for this specific case. It's not the sort of dumb syntax-directed reasoning a compiler is good at.</p>\n"}], "owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 177, "favorite_count": 0, "accepted_answer_id": 57146661, "answer_count": 2, "score": 10, "last_activity_date": 1563803008, "creation_date": 1563798655, "question_id": 57146115, "link": "https://stackoverflow.com/questions/57146115/polymorphic-pattern-matching-results-in-ambiguous-type", "title": "Polymorphic pattern matching results in ambiguous type", "body": "<p>(Inspired by <a href=\"https://stackoverflow.com/questions/57137421/cannot-match-on-polymorphic-tuples-with-constraints\">cannot match on polymorphic tuples with constraints</a>, and based on a subsequent <a href=\"https://stackoverflow.com/questions/57137421/cannot-match-on-polymorphic-tuples-with-constraints#comment100805403_57138105\">comment</a> on my own answer.)</p>\n\n<p>Consider the following minimal example:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>test :: (Show a, Show b) =&gt; (a -&gt; String, b -&gt; String)\ntest = (show,show)\n\n(resX, resY) = test\n</code></pre>\n\n<p>This results in the following error:</p>\n\n<pre><code>    \u2022 Ambiguous type variable \u2018a0\u2019 arising from a use of \u2018test\u2019\n      prevents the constraint \u2018(Show a0)\u2019 from being solved.\n      Relevant bindings include\n        resX :: a0 -&gt; String (bound at so.hs:25:2)\n      Probable fix: use a type annotation to specify what \u2018a0\u2019 should be.\n      These potential instances exist:\n        instance Show Ordering -- Defined in \u2018GHC.Show\u2019\n        instance Show Integer -- Defined in \u2018GHC.Show\u2019\n        instance Show a =&gt; Show (Maybe a) -- Defined in \u2018GHC.Show\u2019\n        ...plus 22 others\n        ...plus 17 instances involving out-of-scope types\n        (use -fprint-potential-instances to see them all)\n    \u2022 In the expression: test\n      In a pattern binding: (resX, resY) = test\n   |\n25 | (resX, resY) = test\n   |                ^^^^\n</code></pre>\n\n<p>This makes sense: that pattern match doesn\u2019t constrain <code>a</code> or <code>b</code> in any way, so they\u2019re ambiguous. But how do I get rid of this error? Just about every attempt to solve this by adding type signature(s) gives another error. For instance:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>-- attempt 1\ntest :: (Show a, Show b) =&gt; (a -&gt; String, b -&gt; String)\ntest = (show,show)\n\nresX :: Show a =&gt; a -&gt; String\nresY :: Show b =&gt; b -&gt; String\n(resX, resY) = test\n\n-- attempt 2\ntest :: (Show a, Show b) =&gt; (a -&gt; String, b -&gt; String)\ntest = (show,show)\n\n(resX, resY) = test :: (Show a, Show b) =&gt; (a -&gt; String, b -&gt; String)\n</code></pre>\n\n<p>So: how can I get rid of the ambiguity error? And why do the above attempts fail?</p>\n"}, {"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 5, "creation_date": 1563781796, "post_id": 57141325, "comment_id": 100798042, "body": "<code>words &quot;Hello world from Haskell&quot;</code>"}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 13, "last_activity_date": 1563782065, "creation_date": 1563782065, "answer_id": 57141394, "question_id": 57141325, "link": "https://stackoverflow.com/questions/57141325/haskell-string-to-list-string-split-by-whitespace/57141394#57141394", "title": "Haskell String to List String split by whitespace", "body": "<p>You can use <a href=\"https://hoogle.haskell.org/?hoogle=String%20%2D%3E%20%5BString%5D\" rel=\"noreferrer\"><em>Hoogle</em></a> and search for example by signature. Since you want to convert a <code>String</code> to a list of <code>String</code>s, the signature is thus <code>String -&gt; [String]</code>. The first matches are <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:lines\" rel=\"noreferrer\"><strong><code>lines :: String -&gt; [String]</code></strong></a> and <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:words\" rel=\"noreferrer\"><strong><code>words :: String -&gt; [String]</code></strong></a>. Based on the name of the function, <code>words</code> is the right match.</p>\n\n<p>As the documentation on <code>words</code> says:</p>\n\n<blockquote>\n  <p><strong><code>words :: String -&gt; [String]</code></strong></p>\n  \n  <p><code>words</code> <strong>breaks a string up into a list of words</strong>, which were delimited\n  by white space.</p>\n\n<pre><code>&gt;&gt;&gt; words \"Lorem ipsum\\ndolor\"\n[\"Lorem\",\"ipsum\",\"dolor\"]\n</code></pre>\n</blockquote>\n\n<p>This thus seems to be the function you are looking for. If we run this in <code>ghci</code>, we get the expected output:</p>\n\n<pre><code>Prelude&gt; words \"Hello world from haskell\"\n[\"Hello\",\"world\",\"from\",\"haskell\"]\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 422, "user_id": 9999127, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-eV5CwYL1VJ8/AAAAAAAAAAI/AAAAAAAAAHs/Pc0AuvECtA0/photo.jpg?sz=128", "display_name": "Stanley Fernandes", "link": "https://stackoverflow.com/users/9999127/stanley-fernandes"}, "is_accepted": false, "score": 7, "last_activity_date": 1563786164, "creation_date": 1563786164, "answer_id": 57142516, "question_id": 57141325, "link": "https://stackoverflow.com/questions/57141325/haskell-string-to-list-string-split-by-whitespace/57142516#57142516", "title": "Haskell String to List String split by whitespace", "body": "<pre><code>words :: String -&gt; [String]\n</code></pre>\n\n<p>words breaks a string up into a list of words, which were delimited by white space.</p>\n\n<pre><code>&gt;&gt;&gt; words \"Lorem ipsum\\ndolor\"\n[\"Lorem\",\"ipsum\",\"dolor\"]\n</code></pre>\n\n<p>Reference: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#v:words\" rel=\"noreferrer\">https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-String.html#v:words</a></p>\n"}], "owner": {"reputation": 1145, "user_id": 1804887, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/3YA1Y.jpg?s=128&g=1", "display_name": "Gusti Arya", "link": "https://stackoverflow.com/users/1804887/gusti-arya"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 5297, "favorite_count": 0, "accepted_answer_id": 57141394, "answer_count": 2, "score": 4, "last_activity_date": 1563788940, "creation_date": 1563781759, "last_edit_date": 1563788940, "question_id": 57141325, "link": "https://stackoverflow.com/questions/57141325/haskell-string-to-list-string-split-by-whitespace", "title": "Haskell String to List String split by whitespace", "body": "<p>I am very new to Haskell, I have a problem, how to split given string into list of words.</p>\n\n<p>example <code>\"Hello world from haskell\"</code> -> <code>[\"Hello\",\"world\",\"from\",\"haskell\"]</code></p>\n\n<p>thanks for your help</p>\n"}, {"tags": ["haskell", "ffi"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1563785451, "post_id": 57140931, "comment_id": 100799759, "body": "In standard C this would be impossible, but on many OSs there are ways to generate code at runtime and obtain a valid function pointer to it. This is how dynamic libraries work, roughly. Probably GHC generates machine code with the hardcoded pointers to the captured variables. Also, here&#39;s a ugly <a href=\"https://rosettacode.org/wiki/Partial_function_application#C\" rel=\"nofollow noreferrer\">proof of concept</a>."}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 0, "creation_date": 1563785497, "post_id": 57140931, "comment_id": 100799784, "body": "My guess would be that it creates direct call pointers for stateless functions, and for closures either generates them on-the-fly (which is possible, you can create a new buffer for code in a running program - that&#39;s how JIT works), or precomputes their types and uses some sort of a trampoline to jump to a particular closure."}], "answers": [{"tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": true, "score": 3, "last_activity_date": 1563833165, "last_edit_date": 1563833165, "creation_date": 1563831154, "answer_id": 57154026, "question_id": 57140931, "link": "https://stackoverflow.com/questions/57140931/implementation-for-the-wrapper-wrapper-in-haskell-ffi/57154026#57154026", "title": "Implementation for the &quot;wrapper&quot; wrapper in Haskell FFI", "body": "<p>A quick Google search brings up <a href=\"https://gitlab.haskell.org/ghc/ghc/wikis/commentary/rts/ffi#foreign-import-wrapper\" rel=\"nofollow noreferrer\">the GHC commentary</a>:</p>\n\n<blockquote>\n  <p>Occasionally, it is convenient to treat Haskell closures as C function pointers. This is useful, for example, if we want to install Haskell callbacks in an existing C library. This functionality is implemented with the aid of adjustor thunks.</p>\n  \n  <p>An adjustor thunk is a dynamically allocated code snippet that allows\n  Haskell closures to be viewed as C function pointers.</p>\n  \n  <p>Stable pointers provide a way for the outside world to get access to,\n  and evaluate, Haskell heap objects, with the RTS providing a small\n  range of ops for doing so. So, assuming we've got a stable pointer in\n  our hand in C, we can jump into the Haskell world and evaluate a callback\n  procedure, say. This works OK in some cases where callbacks are used, but\n  does require the external code to know about stable pointers and how to deal\n  with them. We'd like to hide the Haskell-nature of a callback and have it\n  be invoked just like any other C function pointer.</p>\n  \n  <p>Enter adjustor thunks. An adjustor thunk is a little piece of code\n  that's generated on-the-fly (one per Haskell closure being exported)\n  that, when entered using some 'universal' calling convention (e.g., the\n  C calling convention on platform X), pushes an implicit stable pointer\n  (to the Haskell callback) before calling another (static) C function stub\n  which takes care of entering the Haskell code via its stable pointer.</p>\n  \n  <p>An adjustor thunk is allocated on the C heap, and is called from within\n  Haskell just before handing out the function pointer to the Haskell (IO)\n  action. User code should never have to invoke it explicitly.</p>\n  \n  <p>An adjustor thunk differs from a C function pointer in one respect: when\n  the code is through with it, it has to be freed in order to release Haskell\n  and C resources. Failure to do so will result in memory leaks on both the C and\n  Haskell side.</p>\n</blockquote>\n\n<p>I recall reading, somewhere, that the wrapper FFI imports are actually the only place where GHC performs runtime code generation.</p>\n\n<p>I believe what the commentary is saying is that your <code>createFunPtr</code> is defined, at compile time, to be something like this (I set <code>-ddump-simpl</code> to get the Core for <code>createFunPtr</code>, and the following is my attempt at decompiling it back to Haskell)</p>\n\n<pre><code>createFunPtr fun = do stable &lt;- newStablePtr fun\n                      pkg_ccall stable :: IO (FunPtr (Int -&gt; Int))\n</code></pre>\n\n<p><a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Foreign-StablePtr.html#v:newStablePtr\" rel=\"nofollow noreferrer\"><code>newStablePtr</code></a> is part of the <code>StablePtr</code> API, which allows Haskell to export references to Haskell objects to foreign code. The GC is allowed to move the function passed to <code>createFunPtr</code> after the adjustor thunk has been created. Therefore, said adjustor needs a reference to the function that still holds after a GC, and that functionality is provided by stable pointers.</p>\n\n<p><code>pkg_ccall</code> (which is actually rather magic) allocates space for the adjustor thunk on the C heap. This space has to be later freed with <code>freeHaskellFunPtr</code>, otherwise memory leaks on both the C heap (which holds the adjustor) and the Haskell heap (which holds the function closure, which cannot be GC'd until the stable pointer is released). The adjustor's contents depend on the platform and whether GHC was configured (at build time) to use libffi for adjustors. The actual assembly code can be found in <a href=\"https://gitlab.haskell.org/ghc/ghc/blob/581cbc28e143a4ed8e7f794ed1618161222a5646/rts/Adjustor.c\" rel=\"nofollow noreferrer\">the comments in the relevant RTS file</a>, but the gist is generally:</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>int adjustor(int arg) {\n  return zdmainzdTzdTzucreateAddPtr($stable, arg);\n  // with stable \"baked\" into each adjustor, as a \"push &lt;constant&gt;\" instruction\n}\n</code></pre>\n\n<p><code>zdmainzdTzdTzucreateAddPtr</code> is the stub that dereferences the given stable pointer and calls the Haskell function there produced. It's static, baked into the binary, and is vaguely equivalent to this: (If you pass GHC <code>-v</code> and <code>-keep-tmp-files</code>, you should be able to find the <code>ghc_&lt;some_num&gt;.c</code> file that contains the real definition, which needs to do some bookkeeping.)</p>\n\n<pre class=\"lang-c prettyprint-override\"><code>HsInt zdmainzdTzdTzucreateAddPtr(StgStablePtr ptr, HsInt a) {\n  HaskellObj fun, arg, app, ret;\n  fun = deRefStablePtr(ptr);\n  arg = rts_mkInt(a);\n  app = rts_apply(fun, arg);\n  eval(app, &amp;ret);\n  return rts_getInt(ret);\n}\n</code></pre>\n"}], "owner": {"reputation": 616, "user_id": 8578679, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CeZ5Z.png?s=128&g=1", "display_name": "Ruifeng Xie", "link": "https://stackoverflow.com/users/8578679/ruifeng-xie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 165, "favorite_count": 0, "accepted_answer_id": 57154026, "answer_count": 1, "score": 4, "last_activity_date": 1563833165, "creation_date": 1563780055, "last_edit_date": 1563785056, "question_id": 57140931, "link": "https://stackoverflow.com/questions/57140931/implementation-for-the-wrapper-wrapper-in-haskell-ffi", "title": "Implementation for the &quot;wrapper&quot; wrapper in Haskell FFI", "body": "<p>According to the <a href=\"https://wiki.haskell.org/Foreign_Function_Interface#Function_pointers\" rel=\"nofollow noreferrer\">Haskell Wiki</a>, in Haskell FFI, we can make a C function out of a Haskell function with the \"wrapper\" wrapper:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>foreign import ccall \"wrapper\" createFunPtr :: (Int -&gt; Int) -&gt; IO (FunPtr (Int -&gt; Int))\n</code></pre>\n\n<p>If I understood this correctly, this means <code>f &lt;- createFunPtr (+ 42)</code> in a <code>do</code>-block gives a function pointer <code>f</code> of type <code>int (*)(int)</code> in C.</p>\n\n<p>In Haskell, a function of type <code>Int -&gt; Int</code> may have some local bindings inside (e.g. a lambda expression may have references to the variables in outer scopes), while in C, function pointers are merely memory addresses to functions, and calling those function pointers is just a something similar to a raw jump. So there is no other place for the additional data of the Haskell function to live in <code>FunPtr</code>.</p>\n\n<p>Lambda expressions in C++ are objects, and invoking the <code>operator()</code> passes an implicit <code>this</code> pointer. But <code>FunPtr</code>s are treated just like normal function pointers in C, so there is no possibility to pass some extra arguments.</p>\n\n<p>So how did GHC implement this \"wrapper\" wrapper? (I guessed that it might be implemented by directly writing instructions to the code section in memory to pass the extra arguments, but as I recall, the code section is usually read-only.)</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1563749346, "post_id": 57137421, "comment_id": 100790691, "body": "I&#39;m unsure, but this looks as a consequence of the Monomorphism Restriction. Start by adding explicit type annotations for top-level bindings, including <code>test</code>, <code>resF</code>, and <code>resG</code>, and see if the error becomes more clear."}, {"owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1563756398, "post_id": 57137421, "comment_id": 100791738, "body": "@chi It&#39;s not a consequence of the monomorphism restriction, as it still occurs when compiling with <code>-XNoMonomorphismRestriction</code>."}, {"owner": {"reputation": 1882, "user_id": 2882307, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ec8370b53eef1b4e53bccdcdf605a282?s=128&d=identicon&r=PG&f=1", "display_name": "John Smith", "link": "https://stackoverflow.com/users/2882307/john-smith"}, "reply_to_user": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "edited": false, "score": 0, "creation_date": 1563826558, "post_id": 57137421, "comment_id": 100821344, "body": "@DamianLattenero It&#39;s actually impossible to achieve this. So it doesn&#39;t solve the issue. It&#39;s a limitation of GHC"}], "answers": [{"comments": [{"owner": {"reputation": 1882, "user_id": 2882307, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ec8370b53eef1b4e53bccdcdf605a282?s=128&d=identicon&r=PG&f=1", "display_name": "John Smith", "link": "https://stackoverflow.com/users/2882307/john-smith"}, "edited": false, "score": 0, "creation_date": 1563795416, "post_id": 57138105, "comment_id": 100805403, "body": "Thank ouf or your answer! I tried to do <code>(resF, resG, resH) = test</code> however the same errors appear."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 1882, "user_id": 2882307, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ec8370b53eef1b4e53bccdcdf605a282?s=128&d=identicon&r=PG&f=1", "display_name": "John Smith", "link": "https://stackoverflow.com/users/2882307/john-smith"}, "edited": false, "score": 0, "creation_date": 1563795932, "post_id": 57138105, "comment_id": 100805704, "body": "Sorry @JohnSmith, looks like I forgot my own answer and left out the type signature! Editing now."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 1882, "user_id": 2882307, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ec8370b53eef1b4e53bccdcdf605a282?s=128&d=identicon&r=PG&f=1", "display_name": "John Smith", "link": "https://stackoverflow.com/users/2882307/john-smith"}, "edited": false, "score": 0, "creation_date": 1563796195, "post_id": 57138105, "comment_id": 100805858, "body": "@JohnSmith It looks like I\u2019m still getting this error even when I add type signatures. This problem is more interesting than I thought! But it could take a while before I figure out a solution\u2026"}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 1882, "user_id": 2882307, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ec8370b53eef1b4e53bccdcdf605a282?s=128&d=identicon&r=PG&f=1", "display_name": "John Smith", "link": "https://stackoverflow.com/users/2882307/john-smith"}, "edited": false, "score": 0, "creation_date": 1563797372, "post_id": 57138105, "comment_id": 100806525, "body": "@JohnSmith I give up \u2014 the behaviour I\u2019m running into is so bizarre that I\u2019m actually going to ask this as another question. I\u2019ll comment here when I create it."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 1882, "user_id": 2882307, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ec8370b53eef1b4e53bccdcdf605a282?s=128&d=identicon&r=PG&f=1", "display_name": "John Smith", "link": "https://stackoverflow.com/users/2882307/john-smith"}, "edited": false, "score": 0, "creation_date": 1563798676, "post_id": 57138105, "comment_id": 100807324, "body": "@JohnSmith I\u2019ve asked at <a href=\"https://stackoverflow.com/questions/57146115/polymorphic-pattern-matching-results-in-ambiguous-type\" title=\"polymorphic pattern matching results in ambiguous type\">stackoverflow.com/questions/57146115/&hellip;</a>"}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 1882, "user_id": 2882307, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ec8370b53eef1b4e53bccdcdf605a282?s=128&d=identicon&r=PG&f=1", "display_name": "John Smith", "link": "https://stackoverflow.com/users/2882307/john-smith"}, "edited": false, "score": 0, "creation_date": 1563872643, "post_id": 57138105, "comment_id": 100835044, "body": "@JohnSmith That question now has enough answers that I feel I understand what\u2019s going wrong \u2014 I\u2019ll edit my answer now with more details."}, {"owner": {"reputation": 1882, "user_id": 2882307, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ec8370b53eef1b4e53bccdcdf605a282?s=128&d=identicon&r=PG&f=1", "display_name": "John Smith", "link": "https://stackoverflow.com/users/2882307/john-smith"}, "edited": false, "score": 0, "creation_date": 1563890211, "post_id": 57138105, "comment_id": 100845363, "body": "@bradm Great! Thank you very much. Not sure I will go this route but at least I understand it a bit better now!"}], "tags": [], "owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "is_accepted": true, "score": 4, "last_activity_date": 1613825651, "last_edit_date": 1613825651, "creation_date": 1563757030, "answer_id": 57138105, "question_id": 57137421, "link": "https://stackoverflow.com/questions/57137421/cannot-match-on-polymorphic-tuples-with-constraints/57138105#57138105", "title": "cannot match on polymorphic tuples with constraints", "body": "<p>The problem here is that you have an <em>ambiguous type</em>. Firstly, let\u2019s check the type signature of <code>test</code> as inferred by GHC. A neat trick I discovered a while ago is to add <code>test :: _</code> to your program and let GHC give us its inferred type in an error message:</p>\n<pre><code>so.hs:13:9: error:\n    \u2022 Found type wildcard \u2018_\u2019\n        standing for \u2018(b0 -&gt; b0 -&gt; b0, Integer -&gt; Integer -&gt; Integer,\n                       Integer -&gt; Integer -&gt; Integer)\u2019\n      Where: \u2018b0\u2019 is an ambiguous type variable\n      To use the inferred type, enable PartialTypeSignatures\n    \u2022 In the type signature: test :: _\n   |\n13 | test :: _\n   |         ^\n</code></pre>\n<p>So the type of <code>test</code> as inferred by GHC is <code>(b0 -&gt; b0 -&gt; b0, Integer -&gt; Integer -&gt; Integer, Integer -&gt; Integer -&gt; Integer)</code> (although there should be an additional <code>(Ord b0, Bounded b0)</code> constraint which GHC leaves out for some reason). Now, let\u2019s look at <code>resF</code> and <code>resG</code>:</p>\n<pre class=\"lang-hs prettyprint-override\"><code>(resF, _, _) = test\n(_, resG, _) = test\n</code></pre>\n<p>In the definition of <code>resF</code>, the <code>b0</code> type parameter ends up being used outside that expression as well (in the type of <code>resF :: b0 -&gt; b0 -&gt; b0</code>), so it isn\u2019t ambiguous. However, in the definition of <code>resG</code>, <code>b0</code> is only ever used inside that expression, so it could be <em>anything</em>! Since GHC has absolutely no way to determine what <code>b0</code> is in that declaration, it is marked as ambiguous, producing this error.</p>\n<p>(If that wasn\u2019t clear enough, the idea is that if you have an expression with an ambiguous type variable, and you refer to this variable on the left side of the <code>=</code>, then it becomes disambiguated, as the variable is being used outside the expression. I know this isn\u2019t a very good explanation; I\u2019m not too good with this area of Haskell myself, so if anyone else has a better explanation please comment!)</p>\n<p>So how can this problem be solved? One way is simply to combine <code>resF</code> and <code>resG</code>, so <code>b0</code> does end up being used outside <code>test</code>:</p>\n<pre class=\"lang-hs prettyprint-override\"><code>(resF, resG, _) = test\n</code></pre>\n<p>Another way is to add a type signature <em>restricting</em> <code>b0</code>:</p>\n<pre class=\"lang-hs prettyprint-override\"><code>(_, resG, _) = test :: (() -&gt; () -&gt; (), Integer -&gt; Integer -&gt; Integer, Integer -&gt; Integer -&gt; Integer)\n</code></pre>\n<p>This is the most common way of getting around ambiguous type errors, as it will work in all circumstances. In this case it happens to be much longer, but you should be able to use it in more situations than the above technique, which really only works here.</p>\n<hr />\n<p>However, there\u2019s still a few subtle points here. Firstly, why does GHC report that the second and third fields use <code>Integer</code>, instead of allowing any type? This is due to the <em>monomorphism restriction</em>, which in certain situations specialises type variables automatically. You can get around this by adding a type signature:</p>\n<pre class=\"lang-hs prettyprint-override\"><code>test :: (Ord a, Bounded a, Num b, Num c) =&gt; (a -&gt; a -&gt; a, b -&gt; b -&gt; b, c -&gt; c -&gt; c)\n</code></pre>\n<p>This is why it is considered good practise to add type signatures to all functions!</p>\n<p>Of course, this has the disadvantage of making the second and third fields use type variables as well; hence, they become prone to ambiguous types as well. You can get around this by binding all three fields to allow these type variables to \u2018propagate\u2019 in a sense outside that declaration:</p>\n<pre class=\"lang-hs prettyprint-override\"><code>(resF, resG, resH) = test\n</code></pre>\n<p>(Note that \u2018propagate\u2019 is my own term, not a recognised Haskell term!)</p>\n<p><strong>EDIT:</strong> So, it turns out this strategy doesn\u2019t work. More details are given at the end of this answer, since it\u2019s a bit detailed.</p>\n<p>Or you can add a type signature again to restrict <code>b</code> and <code>c</code>:</p>\n<pre><code>(resF, _, _) = test :: (Ord a, Bounded a) =&gt; (a -&gt; a -&gt; a, Int -&gt; Int -&gt; Int, Int -&gt; Int -&gt; Int)\n</code></pre>\n<br>\nThe other point I wanted to make is with the definition of `test` itself. In Haskell, it is very uncommon to use global variables as you do here; usually you would add them as parameters to `test`, then pass them in from outside like this:\n<pre class=\"lang-hs prettyprint-override\"><code>test :: (Ord a, Bounded a, Num b, Num c)\n     =&gt; Bool\n     -&gt; Bool\n     -&gt; (a -&gt; a -&gt; a, b -&gt; b -&gt; b, c -&gt; c -&gt; c)\ntest a b =\n  | a == b = (const, const, const)\n  | a      = (f, (-), (+))\n  | b      = (g, (+), (-))\n\n(resF, resG, resH) = test True False\n</code></pre>\n<p>Doing it this way allows for greater reuse of code, as <code>test</code> can now be used multiple times with different boolean conditions.</p>\n<p><strong>EDIT:</strong></p>\n<h1>Limitations of polymorphic tuples</h1>\n<p>I\u2019m not sure the above is <em>incorrect</em> as such, but there\u2019s an important factor which I completely missed. If you have something of type <code>(Constr1 a, Constr2 b) =&gt; (a, b)</code>, the entire tuple depends on both <code>Constr1 a</code> <em>and</em> <code>Constr2 b</code>! So you can\u2019t easily remove one type variable to isolate the other. (More details in <a href=\"https://stackoverflow.com/a/57146661/7345298\">this</a> excellent answer.)</p>\n<p>However, there is a solution! In <code>test</code>, each field is independent of each other. So it should theoretically be possible to change the type to the following:</p>\n<pre class=\"lang-hs prettyprint-override\"><code>test :: Bool -&gt; Bool\n     -&gt; ( forall a. (Ord a, Bouded a) =&gt; a -&gt; a -&gt; a\n        , forall b. Num b =&gt; b -&gt; b -&gt; b\n        , forall c. Num c =&gt; c -&gt; c -&gt; c\n        )\ntest a b =\n  | a == b = (const, const, const)\n  | a      = (f, (-), (+))\n  | b      = (g, (+), (-))\n</code></pre>\n<p>Now all the constraints have in a sense been \u2018pulled into\u2019 the tuple, so you can now isolate one field.</p>\n<p>Of course, nothing is ever quite as simple as that, and if you try running the above you run into an error about \u2018impredicative polymorphism\u2019. The solutions is wrapping the fields in auxilliary data types:</p>\n<pre class=\"lang-hs prettyprint-override\"><code>newtype Wrapper1 = Wrapper1 (forall a. (Ord a, Bounded a) =&gt; a -&gt; a -&gt; a)\nnewtype Wrapper2 = Wrapper2 (forall b. Num b =&gt; b -&gt; b -&gt; b)\n\ntest :: (Wrapper1, Wrapper2, Wrapper2)\ntest\n  | a == b = (Wrapper1 const, Wrapper2 const, Wrapper2 const)\n  | a      = (Wrapper1 f    , Wrapper2 (-)  , Wrapper2 (+))\n  | b      = (Wrapper1 g    , Wrapper2 (+)  , Wrapper2 (-))\n\n(Wrapper1 resF, Wrapper2 resG, Wrapper2 resH) = test\n</code></pre>\n<p>(You\u2019ll also need to add <code>{-# LANGUAGE RankNTypes #-}</code> to the beginning of the file to get this to compile.)</p>\n<p>And this \u2014 finally! \u2014 typechecks successfully.</p>\n<br>\nAs a further upside, it turns out that this method even gets rid of ambiguous type errors. The following code typechecks successfully as well:\n<pre class=\"lang-hs prettyprint-override\"><code>test\n  | a == b = (Wrapper1 const, Wrapper2 const, Wrapper2 const)\n  | a      = (Wrapper1 f    , Wrapper2 (-)  , Wrapper2 (+))\n  | b      = (Wrapper1 g    , Wrapper2 (+)  , Wrapper2 (-))\n\n(Wrapper1 resF, _, _) = test\n</code></pre>\n<p>As I mentioned above, I don\u2019t understand ambiguous types too well, but the reason for this is <em>probably</em> because all the information about other type variables has been \u2018pulled into\u2019 the other fields of the tuple, so GHC knows it can safely ignore them now.</p>\n"}, {"comments": [{"owner": {"reputation": 1882, "user_id": 2882307, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ec8370b53eef1b4e53bccdcdf605a282?s=128&d=identicon&r=PG&f=1", "display_name": "John Smith", "link": "https://stackoverflow.com/users/2882307/john-smith"}, "edited": false, "score": 0, "creation_date": 1563795119, "post_id": 57138146, "comment_id": 100805217, "body": "All right this is clear. Is there a way to keep the polymorphic type of each function the tuple? The reason I want this is that I want to apply each function to different types which satisfy the constraints."}, {"owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "reply_to_user": {"reputation": 1882, "user_id": 2882307, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ec8370b53eef1b4e53bccdcdf605a282?s=128&d=identicon&r=PG&f=1", "display_name": "John Smith", "link": "https://stackoverflow.com/users/2882307/john-smith"}, "edited": false, "score": 0, "creation_date": 1563800204, "post_id": 57138146, "comment_id": 100808209, "body": "@JohnSmith The only part that I made monomorphic in my fix got discarded by the first <code>_</code>. The <code>resG</code> function is still fully polymorphic."}, {"owner": {"reputation": 1882, "user_id": 2882307, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ec8370b53eef1b4e53bccdcdf605a282?s=128&d=identicon&r=PG&f=1", "display_name": "John Smith", "link": "https://stackoverflow.com/users/2882307/john-smith"}, "edited": false, "score": 1, "creation_date": 1563800479, "post_id": 57138146, "comment_id": 100808359, "body": "Yes that is true. However what I really want to do is assign on three functions <code>(resF, resG, resH)</code>. This fails."}], "tags": [], "owner": {"reputation": 33166, "user_id": 7509065, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/RZLo7.png?s=128&g=1", "display_name": "Joseph Sible-Reinstate Monica", "link": "https://stackoverflow.com/users/7509065/joseph-sible-reinstate-monica"}, "is_accepted": false, "score": 5, "last_activity_date": 1563758246, "last_edit_date": 1563758246, "creation_date": 1563757720, "answer_id": 57138146, "question_id": 57137421, "link": "https://stackoverflow.com/questions/57137421/cannot-match-on-polymorphic-tuples-with-constraints/57138146#57138146", "title": "cannot match on polymorphic tuples with constraints", "body": "<p><strong>TL;DR version: Because GHC will default <code>Num b2</code> and <code>Num b3</code> but not <code>(Ord b1, Bounded b1)</code>.</strong></p>\n\n<p>This is an issue with <a href=\"https://downloads.haskell.org/~ghc/8.6.5/docs/html/users_guide/ghci.html#type-defaulting-in-ghci\" rel=\"noreferrer\">type defaulting</a>. The type of <code>test</code> is inferred to be <code>(Ord b1, Bounded b1, Num b2, Num b3) =&gt; (b1 -&gt; b1 -&gt; b1, b2 -&gt; b2 -&gt; b2, b3 -&gt; b3 -&gt; b3)</code>. This type means that if you provide an <code>Ord</code> and <code>Bounded</code> instance for some type <code>b1</code>, and a <code>Num</code> instance for some types <code>b2</code> and <code>b3</code>, you'll get a tuple of functions. When you take the tuple apart and only keep one piece, the other constraints don't just go away, so you basically have <code>resF :: (Ord b1, Bounded b1, Num b2, Num b3) =&gt; b1 -&gt; b1 -&gt; b1</code> and <code>resG :: (Ord b1, Bounded b1, Num b2, Num b3) =&gt; b2 -&gt; b2 -&gt; b2</code>.</p>\n\n<p>Now, in <code>resF</code>, <code>b2</code> and <code>b3</code> are ambiguous types, since they're used on the left of <code>=&gt;</code> but not on the right. According to the type defaulting rules, these will be defaulted to <code>Integer</code>, so you end up with <code>resF</code> really having a type of <code>(Ord b1, Bounded b1) =&gt; b1 -&gt; b1 -&gt; b1</code> and things work fine.</p>\n\n<p><code>resG</code> is different. In it, <code>b1</code> and <code>b3</code> are the ambiguous types. <code>b3</code> gets defaulted to <code>Integer</code> just like it did for <code>resF</code>. However, GHC doesn't have a default for <code>b1</code> that will satisfy the constraint <code>(Ord b1, Bounded b1)</code>, so it gives you an error to that effect (which could definitely be more clear).</p>\n\n<p>To fix the problem, you need to tell GHC what type <code>b1</code> would be. Since the piece of the tuple you're keeping doesn't use <code>b1</code>, you can choose whatever you want and it won't matter. Here's one way of doing that (in this example, I chose <code>Int</code>):</p>\n\n<pre><code>(_, resG, _) = test :: (Num b2, Num b3) =&gt; (Int -&gt; Int -&gt; Int, b2 -&gt; b2 -&gt; b2, b3 -&gt; b3 -&gt; b3)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": false, "score": 0, "last_activity_date": 1563829314, "last_edit_date": 1563829314, "creation_date": 1563827071, "answer_id": 57153247, "question_id": 57137421, "link": "https://stackoverflow.com/questions/57137421/cannot-match-on-polymorphic-tuples-with-constraints/57153247#57153247", "title": "cannot match on polymorphic tuples with constraints", "body": "<p>One way the error says that it cannot deduce which kind of <code>a</code> because it is ambiguous the type of the typeclass <code>Num</code> in the functions <code>(+)</code> and <code>(-)</code>, to solve this problem you have to specify which one, neither the instance of <code>Ord, Bounded</code> or the instance of <code>Num</code>:</p>\n\n<pre><code>f :: (Ord a, Bounded a) =&gt; a -&gt; a -&gt; a\nf a b = if a &gt; b then maxBound else minBound\n\ng :: (Ord a, Bounded a) =&gt; a -&gt; a -&gt; a\ng a b = if a &gt; b then minBound else maxBound\n\nb1 = True\nb2 = False\n\n\ntest a b | a == b = (const, const, const)\n         | a      = (f , (-), (+))\n         | b      = (g , (+), (-))\n\n\n(resF, resG , plusH)  = test b1 b2 \n\nthree = 3 :: Int\ntwo   = 2 :: Int \none   = 1 :: Int\nmain = do\n  putStrLn $ \"Max: \" ++ show (resF three two)\n  putStrLn $ \"Min: \" ++ show (resF one two)\n  putStrLn $ \"2 - 1: \" ++ show (resG two one)\n  putStrLn $ \"1 + 2: \" ++ show (plusH one two)\n\n\u03bb&gt; Max: 9223372036854775807\n\u03bb&gt; Min: -9223372036854775808\n\u03bb&gt; 2 - 1: 1\n\u03bb&gt; 1 + 2: 3\n</code></pre>\n\n<p>So far, so good, I fixed it by giving the types to the functions <code>resF, resG , plusH</code> with the typed numbers <code>three, two, one</code> :: Int, even you can do: </p>\n\n<pre><code>(resF, _ , _)  = test b1 b2 \n</code></pre>\n\n<p>And also will work just fine.</p>\n\n<p>Now the problem is when you do:</p>\n\n<pre><code>(_, resG', _)    = test b1 b2\n</code></pre>\n\n<p>-----^         ^-----  (Problem!!!)\nWith the main, the <code>resG'</code> will work just fine, because it is typed by <code>three, two, one</code> Int values, but <code>_</code> values are not typed!\n    three = 3 :: Int\n    two   = 2 :: Int \n    one   = 1 :: Int\n    main = do\n      putStrLn $ \"2 - 1: \" ++ show (resG' two one)</p>\n\n<p>what's the type of <code>_</code> there? and the other <code>_</code>, they are not specified, and that's the main problem you have</p>\n\n<p>So a workaround for that is the next:</p>\n\n<pre><code>test a b | a == b = (const, const, const)\n         | a      = (f , (-), (+))\n         | b      = (g , (+), (-))\n\n\ntype NoneTypedFunction = () -&gt; () -&gt; () -- this type is in case you don't actually want / need the function from the first ternary value\n\n(resF, resG , resH) = test b1 b2 \n(_, resG', _)       = test b1 b2 :: (NoneTypedFunction, Int -&gt; Int -&gt; Int, Int -&gt; Int -&gt; Int) \n(_, _, _)           = test b1 b1 :: (NoneTypedFunction, Int -&gt; Int -&gt; Int, Int -&gt; Int -&gt; Int) \n\n\nthree = 3 :: Int\ntwo   = 2 :: Int \none   = 1 :: Int\nmain = do\n  putStrLn $ \"Max: \" ++ show (resF three two)\n  putStrLn $ \"Min: \" ++ show (resF one two)\n  putStrLn $ \"2 - 1: \" ++ show (resG two one)\n  putStrLn $ \"2 - 1: \" ++ show (resH two one)\n  putStrLn $ \"2 - 1: \" ++ show (resG' two one)\n</code></pre>\n\n<p>Now you give the correct type to each one</p>\n\n<blockquote>\n  <p>another importan thing</p>\n</blockquote>\n\n<pre><code>:t resF\nresF :: Int -&gt; Int -&gt; Int\n\n:t resG\nresG :: Int -&gt; Int -&gt; Int\n\nresG :: Int -&gt; Int -&gt; Int\n:t resH\n</code></pre>\n\n<p>The types in the functions, after call <code>test</code> and giving a specific time for the first time, are fixed, and not polymorphic anymore.</p>\n\n<blockquote>\n  <p>If you want to be unbounded:</p>\n</blockquote>\n\n<pre><code>first (a, _,  _)  = a\nsecond (_, b, _   = b\nthird (a, b, c)   = c\n</code></pre>\n\n<p>and then you can do:</p>\n\n<pre><code>(first (test b1 b2)) one two\n\n$&gt; -9223372036854775808\n\n(first (test b1 b2)) True False\n$&gt; True\n\n(first (test b1 b2)) 'c' 'b'\n$&gt; '\\1114111'\n</code></pre>\n"}], "owner": {"reputation": 1882, "user_id": 2882307, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ec8370b53eef1b4e53bccdcdf605a282?s=128&d=identicon&r=PG&f=1", "display_name": "John Smith", "link": "https://stackoverflow.com/users/2882307/john-smith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 228, "favorite_count": 0, "accepted_answer_id": 57138105, "answer_count": 3, "score": 2, "last_activity_date": 1613825651, "creation_date": 1563748014, "last_edit_date": 1563748562, "question_id": 57137421, "link": "https://stackoverflow.com/questions/57137421/cannot-match-on-polymorphic-tuples-with-constraints", "title": "cannot match on polymorphic tuples with constraints", "body": "<p>I'm relatively new to haskell so forgive me if this is really obvious.</p>\n\n<p>Basically I have two <code>Bool</code> and based on them I want to choose the implementation of 3 different functions. In the case that both bools are equal (e.g. both True or both False) the functions should do nothing. Then there are different implementation if one or the other Bool is True.</p>\n\n<p>These function involve constraints so for instance the first function has an Ord or Bounded constraint on the parameters. The second function has a Num constraint on the parameters.</p>\n\n<p>The problem I am having is that I have no clue how to make the type checker oke with this construct. See below for a minimal example that complains when I pattern match on the result:</p>\n\n<pre><code>f :: (Ord a, Bounded a) =&gt; a -&gt; a -&gt; a\nf a b = if a &gt; b then maxBound else minBound\n\ng :: (Ord a, Bounded a) =&gt; a -&gt; a -&gt; a\ng a b = if a &gt; b then minBound else maxBound\n\na = True\nb = False\n\ntest\n  | a == b = (const, const, const)\n  | a      = (f, (-), (+))\n  | b      = (g, (+), (-))\n\n(resF, _, _) = test\n\n(_, resG, _) = test -- error  Could not deduce (Ord b0) arising from a use of \u2018test\u2019\n                    -- from the context: Num b\n                    -- Same error occurs for the last value in the tuple.\n</code></pre>\n\n<p>I'm not sure how the function with the most constraints <code>resF</code> is completely fine with being assigned to a variable but <code>resG</code> complains...</p>\n\n<p>Any help is appreciated!</p>\n"}, {"tags": ["haskell", "monads"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 6, "creation_date": 1563724650, "post_id": 57134756, "comment_id": 100785540, "body": "No that is the flipped version. This is implemented as <code>(=&lt;&lt;)</code>."}, {"owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1563725327, "post_id": 57134756, "comment_id": 100785664, "body": "Thanks. What do you &quot;no&quot; to? Is it correct that the second declaration makes it clearer that (&gt;&gt;=) maps a function of type a  -&gt;  m   b to a function of type m a   -&gt;  m   b, while the original declaration makes less clear what it means?  Will that change of declaration make something from possible to impossibile, or just require some change of using monad (which seems bearable to Haskell programmers)?"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 4, "creation_date": 1563725737, "post_id": 57134756, "comment_id": 100785740, "body": "This is actually an interesting topic to discuss - the fact that the type signature for <code>&gt;&gt;=</code> is, as you note, &quot;backwards&quot; compared to its close counterparts <code>fmap</code> and <code>&lt;*&gt;</code>. I think @leftaroundabout&#39;s answer gives a good answer to why Haskell chose to define <code>&gt;&gt;=</code> with the arguments in that order - but ultimately it&#39;s fairly arbitrary and a matter of opinion which way would be better. And it&#39;s not clear to me exactly what your question is."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1563727887, "post_id": 57134756, "comment_id": 100786188, "body": "The declared order is meant to facilitate left-to-right chaining of Kleisli arrows, rather than suggest any particular mapping. Given two such arrows <code>f :: a -&gt; m b</code> and <code>g :: b -&gt; m c</code>, you can write either <code>h x = x &gt;&gt;= f &gt;&gt;= g</code>. The left-to-right &quot;composition&quot; was deemed more natural given the use of monads to represent sequential computation."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1563729802, "post_id": 57134756, "comment_id": 100786604, "body": "cf. <a href=\"https://stackoverflow.com/a/11249714/849891\">this</a> (and also, <a href=\"https://stackoverflow.com/a/34561605/849891\">2</a>, <a href=\"https://stackoverflow.com/a/54962626/849891\">3</a>, <a href=\"https://stackoverflow.com/a/53829742/849891\">4</a>). <code>(.)</code> composes regular functions, <code>&lt;=&lt;</code> composes Kleisli arrows: <code>(f &lt;=&lt; g) = (f =&lt;&lt;) . (g =&lt;&lt;) . return</code>."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1563777889, "post_id": 57134756, "comment_id": 100796206, "body": "to answer your second question explicitly: it is just <code>flip (&gt;&gt;=)</code> which is also defined as <code>(=&lt;&lt;)</code>, so no, it does not make anything impossible or possible which wasn&#39;t before. <code>flip f y x = f x y</code>, it&#39;s all."}], "answers": [{"comments": [{"owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "edited": false, "score": 0, "creation_date": 1563725604, "post_id": 57134875, "comment_id": 100785712, "body": "Thanks. Is it correct that my second declaration makes it clearer that (&gt;&gt;=) maps a function of type a  -&gt;  m   b to a function of type m a   -&gt;  m   b, while the original declaration makes less clear what it means?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "edited": false, "score": 1, "creation_date": 1563725751, "post_id": 57134875, "comment_id": 100785743, "body": "I don&#39;t know. Perhaps."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 8, "creation_date": 1563726518, "post_id": 57134875, "comment_id": 100785916, "body": "It doesn&#39;t make it clearer; it makes it <i>true</i>. The original declaration <i>doesn&#39;t</i> map a function of type <code>a -&gt; m b</code> to a function of type <code>m a -&gt; m b</code>; it maps a value of type <code>m a</code> to a function of type <code>(a -&gt; m b) -&gt; m b</code>. But the purpose of <code>&gt;&gt;=</code> isn&#39;t to map things so much as to &quot;link&quot; computations; the output of <code>x &gt;&gt;= f</code> is a value suitable for the left argument to another call to <code>&gt;&gt;=</code>: <code>x &gt;&gt;= f &gt;&gt;= g &gt;&gt;= ...</code>"}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 15, "last_activity_date": 1563725630, "last_edit_date": 1563725630, "creation_date": 1563725379, "answer_id": 57134875, "question_id": 57134756, "link": "https://stackoverflow.com/questions/57134756/can-be-redeclared-as-a-m-b-m-a-m-b/57134875#57134875", "title": "Can `(&gt;&gt;=)` be redeclared as `(a -&gt; m b) -&gt; m a -&gt; m b`?", "body": "<p>There's one reason why <code>&gt;&gt;=</code> tends to be more useful in practice than it's flipped counterpart <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:-61--60--60-\" rel=\"noreferrer\"><code>=&lt;&lt;</code></a>: it plays nicely with lambda notation. Namely, <code>\\</code> acts as a <em>syntactic herald</em>, so you can continue the computation without needing any parentheses. For instance,</p>\n\n<pre><code> do x &lt;- [1..5]\n    y &lt;- [10..20]\n    return $ x*y\n</code></pre>\n\n<p>can be rewritten very easily in terms of <code>&gt;&gt;=</code> as</p>\n\n<pre><code>   [1..5] &gt;&gt;= \\x -&gt; [10..20] &gt;&gt;= \\y -&gt; return $ x*y\n</code></pre>\n\n<p>You still have much the same \u201cimperative flow\u201d feel as with the <code>do</code> version.</p>\n\n<p>Whereas with <code>=&lt;&lt;</code> it would require awkward parentheses and seem to read backwards:</p>\n\n<pre><code>   (\\x -&gt; (\\y -&gt; return $ x*y) =&lt;&lt; [10..20]) =&lt;&lt; [1..5]\n</code></pre>\n\n<p>Ok, you might say this feels more like function application. But where that is useful, it is often more poignant to use only the <em>applicative functor</em> interface rather than the monadic one:</p>\n\n<pre><code>  (\\x y -&gt; x*y) &lt;$&gt; [1..5] &lt;*&gt; [10..20]\n</code></pre>\n\n<p>or short</p>\n\n<pre><code>  (*) &lt;$&gt; [1..5] &lt;*&gt; [10..20]\n</code></pre>\n\n<p>Note that <code>(&lt;*&gt;) :: f (a-&gt;b) -&gt; f a -&gt; f b</code> has essentially the order of <code>=&lt;&lt;</code> that you propose, just with the <code>a-&gt;</code> inside the functor rather than outside.</p>\n"}], "owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 215, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1564300518, "creation_date": 1563724332, "last_edit_date": 1564300518, "question_id": 57134756, "link": "https://stackoverflow.com/questions/57134756/can-be-redeclared-as-a-m-b-m-a-m-b", "title": "Can `(&gt;&gt;=)` be redeclared as `(a -&gt; m b) -&gt; m a -&gt; m b`?", "body": "<p>In Haskell <code>Monad</code> is declared as</p>\n\n<pre><code>class   Applicative m   =&gt;  Monad   m   where\n    return  ::  a   -&gt;  m   a\n    (&gt;&gt;=)   ::  m   a   -&gt;  (a  -&gt;  m   b)  -&gt;  m   b\n    return  =   pure\n</code></pre>\n\n<p>I was wondering if it is okay to redeclare the bind operator as</p>\n\n<pre><code>(&gt;&gt;=)   ::  (a  -&gt;  m   b)  -&gt;  m   a   -&gt;  m   b\n</code></pre>\n\n<p>?</p>\n\n<p>Is it correct that the second declaration makes it clearer that <code>(&gt;&gt;=)</code> maps a function of type <code>a  -&gt;  m   b</code> to a function of type <code>m a   -&gt;  m   b</code>, while the original declaration makes   less clear   what it means?</p>\n\n<p>Will that change of declaration make something from possible to impossible, or just require some change of using monad (which seems bearable to Haskell programmers)?</p>\n\n<p>Thanks.</p>\n"}, {"tags": ["haskell", "http-headers", "client", "servant"], "answers": [{"comments": [{"owner": {"reputation": 88, "user_id": 8959024, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/883dc6e0d8d64ce28902a759b3803072?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Boniecki", "link": "https://stackoverflow.com/users/8959024/adam-boniecki"}, "edited": false, "score": 1, "creation_date": 1563741634, "post_id": 57136423, "comment_id": 100789296, "body": "Thanks for explanation and a robust work-around, I had a hard time pinning down where the fault was exactly. Created an <a href=\"https://github.com/haskell/hackage-server/issues/839\" rel=\"nofollow noreferrer\">issue</a> on hackage-server to follow up"}], "tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": true, "score": 2, "last_activity_date": 1563738365, "creation_date": 1563738365, "answer_id": 57136423, "question_id": 57134030, "link": "https://stackoverflow.com/questions/57134030/haskell-servant-client-unsupportedcontenttype-error-due-to-weird-accept-heade/57136423#57136423", "title": "Haskell Servant (client): UnsupportedContentType error due to weird Accept header", "body": "<p>Wow, that's unfortunate.  I dare say hackage is broken in this regard.  You (servant's meaning of JSON) did not list HTML as a valid type yet hackage gave it to you anyway because of a charset.  This is Hackage's fault and not Servants - I hope you will report it.</p>\n\n<p>As to your question, how do you get servant to list only <code>application/json</code> and not the charset as the mime type without making a connection wide setting that will break other endpoints.  This is solvable by defining your own type much like JSON and giving implementations for MimeUnrender, Accept, etc.</p>\n\n<p>The nuts and bolts, ignoring imports and language extensions, are:</p>\n\n<pre><code>data RealJSON\n-- | @application/json@\ninstance Accept RealJSON where\n    contentTypes _ =\n      [ \"application\" // \"json\" ]\ninstance FromJSON a =&gt; MimeUnrender RealJSON a where\n    mimeUnrender _ = eitherDecodeLenient\n\neitherDecodeLenient :: FromJSON a =&gt; ByteString -&gt; Either String a\neitherDecodeLenient input =\n    parseOnly parser (cs input) &gt;&gt;= parseEither parseJSON\n  where\n    parser = skipSpace\n          *&gt; Data.Aeson.Parser.value\n          &lt;* skipSpace\n          &lt;* (endOfInput &lt;?&gt; \"trailing junk after valid JSON\")\n</code></pre>\n\n<p>The full program is:</p>\n\n<pre><code>#! /usr/bin/env cabal\n{- cabal:\nbuild-depends:\n    base, aeson, attoparsec, bytestring,\n    http-client, http-media,\n    servant-client &gt;= 0.16, servant &gt;= 0.16.1,\n    string-conversions\n-}\n{-# LANGUAGE TypeOperators         #-}\n{-# LANGUAGE DeriveGeneric         #-}\n{-# LANGUAGE DataKinds             #-}\n{-# LANGUAGE OverloadedStrings     #-}\n{-# LANGUAGE OverloadedLists       #-}\n{-# LANGUAGE FlexibleInstances     #-}\n{-# LANGUAGE MultiParamTypeClasses #-}\nimport qualified Data.Aeson.Parser\nimport           Data.Aeson (FromJSON(..))\nimport           Data.Aeson.Types (parseEither)\nimport           Data.Attoparsec.ByteString.Char8\n                    (endOfInput, parseOnly, skipSpace, (&lt;?&gt;))\nimport           Data.ByteString.Lazy (ByteString)\nimport           Data.Proxy (Proxy(..))\nimport           Data.String.Conversions (cs)\nimport           GHC.Generics (Generic)\nimport           Network.HTTP.Client (newManager, defaultManagerSettings)\nimport           Network.HTTP.Media ((//))\nimport           Servant.API (Capture, Get, JSON, (:&gt;), Accept(..))\nimport           Servant.API.ContentTypes (MimeUnrender(..))\nimport           Servant.Client (BaseUrl(..), ClientM, Scheme( Http ),\n                                 client, mkClientEnv, runClientM)\n\ndata RealJSON\n-- | @application/json@\ninstance Accept RealJSON where\n    contentTypes _ =\n      [ \"application\" // \"json\" ]\ninstance FromJSON a =&gt; MimeUnrender RealJSON a where\n    mimeUnrender _ = eitherDecodeLenient\n\neitherDecodeLenient :: FromJSON a =&gt; ByteString -&gt; Either String a\neitherDecodeLenient input =\n    parseOnly parser (cs input) &gt;&gt;= parseEither parseJSON\n  where\n    parser = skipSpace\n          *&gt; Data.Aeson.Parser.value\n          &lt;* skipSpace\n          &lt;* (endOfInput &lt;?&gt; \"trailing junk after valid JSON\")\n\ndata UserDetailed = UserDetailed\n  { username :: String\n  , userid   :: Int\n  , groups   :: [String]\n  } deriving (Eq, Show, Generic)\n\ninstance FromJSON UserDetailed\n\ntype API =\n  \"user\" :&gt; Capture \"username\" String :&gt; Get '[RealJSON] UserDetailed\n\napi :: Proxy API\napi = Proxy\n\ngetUser :: String -&gt; ClientM UserDetailed\ngetUser = client api\n\nmain :: IO ()\nmain = do\n  manager &lt;- newManager defaultManagerSettings\n  let userName = \"ThomasDuBuisson\"\n  let url = BaseUrl Http \"hackage.haskell.org\" 80 \"\"\n  res &lt;- runClientM (getUser userName) (mkClientEnv manager url)\n  case res of\n    Left err -&gt; putStrLn $ \"Error: \" ++ show err\n    Right user -&gt; putStrLn $\n        userName ++ \" \\\"maintains\\\" \" ++ (show $ length $ groups user) ++ \" packages\"\n</code></pre>\n"}], "owner": {"reputation": 88, "user_id": 8959024, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/883dc6e0d8d64ce28902a759b3803072?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Boniecki", "link": "https://stackoverflow.com/users/8959024/adam-boniecki"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 285, "favorite_count": 0, "accepted_answer_id": 57136423, "answer_count": 1, "score": 2, "last_activity_date": 1563738365, "creation_date": 1563718766, "last_edit_date": 1563728920, "question_id": 57134030, "link": "https://stackoverflow.com/questions/57134030/haskell-servant-client-unsupportedcontenttype-error-due-to-weird-accept-heade", "title": "Haskell Servant (client): UnsupportedContentType error due to weird Accept header", "body": "<p>I am trying to write an HTTP client to query Hackage using Servant and get <code>json</code> data. However when I try to query an endpoint like <code>/user/alf</code> (that is just a pseudo-random existing user name, I have tried different endpoints like <code>/packages/</code> too) I get an UnsupportedContentType error.</p>\n\n<p>I have used wireshark to investigate and compared requests from my code and from this cURL command:</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>$ curl -H \"Accept: application/json\" http://hackage.haskell.org/user/alf\n</code></pre>\n\n<p>Both result in <code>200 OK</code> but cURL returns <code>json</code> data as expected, while servant gets <code>html</code> which causes the error.</p>\n\n<p>In fact the root of the problem seem to be the <code>Accept</code> headers that my servant code produces:\n<code>\"Accept: application/json;charset=utf-8,application/json\"</code>, but I have no idea why it does that...</p>\n\n<p>Below is my code and the result of running it:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>import Data.Aeson\n         (FromJSON(..))\nimport Data.Proxy\n         (Proxy(..))\nimport GHC.Generics\n         (Generic)\nimport Network.HTTP.Client\n         (newManager, defaultManagerSettings)\nimport Servant.API\n         (Capture, Get, JSON, (:&gt;))\nimport Servant.Client\n         (BaseUrl(..), ClientM, Scheme( Http ),\n          client, mkClientEnv, runClientM)\n\ndata UserDetailed = UserDetailed\n  { username :: String\n  , userid   :: Int\n  , groups   :: [String]\n  } deriving (Eq, Show, Generic)\n\ninstance FromJSON UserDetailed\n\ntype API =\n  \"user\" :&gt; Capture \"username\" String :&gt; Get '[JSON] UserDetailed\n\napi :: Proxy API\napi = Proxy\n\ngetUser :: String -&gt; ClientM UserDetailed\ngetUser = client api\n\nmain :: IO ()\nmain = do\n  manager &lt;- newManager defaultManagerSettings\n  let userName = \"alf\"\n  let url = BaseUrl Http \"hackage.haskell.org\" 80 \"\"\n  res &lt;- runClientM (getUser userName) (mkClientEnv manager url)\n  case res of\n    Left err -&gt; putStrLn $ \"Error: \" ++ show err\n    Right user -&gt; putStrLn $\n        userName ++ \" maintains \" ++ (show $ length $ groups user) ++ \" packages\"\n</code></pre>\n\n<p>And the error message (omitted most of the html content):</p>\n\n<pre><code>Error: UnsupportedContentType text/html;charset=utf-8 (Response {responseStatusCode = Status {statusCode = 200, statusMessage = \"OK\"}, responseHeader\ns = fromList [(\"Server\",\"nginx/1.14.0 (Ubuntu)\"),(\"Content-Type\",\"text/html; charset=utf-8\"),(\"Content-Encoding\",\"gzip\"),(\"Transfer-Encoding\",\"chunke\nd\"),(\"Accept-Ranges\",\"bytes\"),(\"Date\",\"Sun, 21 Jul 2019 13:31:41 GMT\"),(\"Via\",\"1.1 varnish\"),(\"Connection\",\"keep-alive\"),(\"X-Served-By\",\"cache-hhn403\n3-HHN\"),(\"X-Cache\",\"MISS\"),(\"X-Cache-Hits\",\"0\"),(\"X-Timer\",\"S1563715901.934337,VS0,VE626\"),(\"Vary\",\"Accept, Accept-Encoding\")], responseHttpVersion =\n HTTP/1.1, responseBody = \"&lt;!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Strict//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\\"&gt;\n...\n&lt;/html&gt;\"})\n</code></pre>\n\n<p>What is the proper way to do this in Servant and get <code>json</code> back? Any idea what causes those weird headers?</p>\n\n<hr>\n\n<p><strong>Edit:</strong></p>\n\n<p>Found a way to work around this using following instead of <code>defaultManagerSettings</code>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>defaultManagerSettings {\n  managerModifyRequest = \\req -&gt; return $\n    req { requestHeaders = (\"Accept\", \"application/json\") :\n          filter ((\"Accept\" /=) . fst) (requestHeaders req) }\n  }\n</code></pre>\n\n<p>which will straight up replace the <code>Accept</code> header. It works, but still seems like that is not how it is supposed to be done.</p>\n"}, {"tags": ["haskell", "ghc"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 8, "creation_date": 1563717724, "post_id": 57133882, "comment_id": 100783730, "body": "they&#39;re just GHCi commands, nothing to do with the Haskell language itself"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1563717845, "post_id": 57133882, "comment_id": 100783759, "body": "No, you can not use <code>:type</code> in a program. It is not part of the language itself."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1563720415, "post_id": 57133882, "comment_id": 100784422, "body": "@RobinZigmond please post answers as answers, not as comments."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1563724600, "post_id": 57133882, "comment_id": 100785525, "body": "apologies @leftaroundabout - it didn&#39;t seem appropriate to post this as an answer, since it&#39;s just a few words, and although it certainly answers <i>a</i> question, it wasn&#39;t clear to me that this would be enough to satisfy the OP"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1563724884, "post_id": 57133882, "comment_id": 100785597, "body": "@RobinZigmond no need to apologise. Just, what you wrote <i>answers the question as it stands</i>. It doesn&#39;t matter if the answer is only a few words if it is good and complete. If the OP isn&#39;t satisfied by this, then he should have phrased the question better (but IMO it&#39;s pretty clear, albeit a bit shallow)."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1563778180, "post_id": 57133882, "comment_id": 100796322, "body": "try entering <code>:help</code> at GHCi prompt. there&#39;s also GHCi documentation somewhere."}], "answers": [{"comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1563802153, "post_id": 57134934, "comment_id": 100809329, "body": "Worth pointing out that the GHCI commands are not syntactically valid Haskell tokens. <code>:</code>-prefixed identifiers are reserved for symbolic data constructors, which cannot contain alphanumeric characters."}], "tags": [], "owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "is_accepted": false, "score": 8, "last_activity_date": 1563725859, "creation_date": 1563725859, "answer_id": 57134934, "question_id": 57133882, "link": "https://stackoverflow.com/questions/57133882/is-type-part-of-the-haskell-language-or-command-of-ghc/57134934#57134934", "title": "Is `:type` part of the Haskell language or command of GHC?", "body": "<p>Commands like <code>:type</code>, <code>:info</code>, <code>:load</code> and so on are just GHCi commands - they're aids to working with Haskell code in an interactive REPL. They have nothing to do with the Haskell language itself.</p>\n"}], "owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 131, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1563793224, "creation_date": 1563717612, "last_edit_date": 1563793224, "question_id": 57133882, "link": "https://stackoverflow.com/questions/57133882/is-type-part-of-the-haskell-language-or-command-of-ghc", "title": "Is `:type` part of the Haskell language or command of GHC?", "body": "<p>Is <code>:type</code> part of the Haskell language or a command of GHC?</p>\n\n<p>Does the prefix <code>:</code> represent something not part of the language, but of GHC?</p>\n\n<p>Thanks.</p>\n"}, {"tags": ["haskell", "compiler-construction", "interpreter", "lambda-calculus"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1563678944, "post_id": 57129956, "comment_id": 100776421, "body": "Your <code>eval (App m n)</code> is a problem, it never removes the outermost App."}, {"owner": {"user_type": "does_not_exist", "display_name": "user5775230"}, "reply_to_user": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1563684159, "post_id": 57129956, "comment_id": 100777048, "body": "@n.m. do you mind clarifying?  aren&#39;t these of the form if M -&gt;_beta M&#39; then  App M N -&gt;_beta App M&#39; N"}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 1, "creation_date": 1563685223, "post_id": 57129956, "comment_id": 100777222, "body": "You <i>need</i> to do App M N -&gt;_beta App M&#39; N but what you are actually doing is App M N -&gt; App M&#39; N. Try <code>| m &#47;= evalm = eval $ App evalm n</code>"}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 1, "creation_date": 1563689244, "post_id": 57129956, "comment_id": 100777699, "body": "It looks like your problem is solved already, but some general debugging advice: when I looked at the multiple lines of <code>Expr</code> output, it occurred to me that it might be easier to debug if you had a pretty-printer <code>pprint :: Expr -&gt; String</code> so you can inspect the output more easily."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1563698975, "post_id": 57129956, "comment_id": 100779503, "body": "I would remove <code>rename x y e</code> and replace it with <code>subst (Var y) x e</code> -- it&#39;s simpler. Then, note that <code>xx = x++x</code> does not necessarily yield a fresh name."}], "owner": {"user_type": "does_not_exist", "display_name": "user5775230"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 109, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1563676597, "creation_date": 1563676597, "question_id": 57129956, "link": "https://stackoverflow.com/questions/57129956/how-to-debug-a-lambda-calculus-evaluator-which-only-partially-reduces-lambda-ter", "title": "How to debug a lambda calculus evaluator which only partially reduces lambda terms?", "body": "<p>I'm struggling to figure out why my evaluator won't work on the untyped lambda calculus. Here is a counterexample to its evaluation: note >= 3 applications of eval results in the correct answer, but as soon as we run the evaluator just once we get only a partially evaluated form.  I don't know how to test/decide where/how the evaluator is improperly defined (perhaps it's in one of the other functions?)</p>\n\n<pre><code>*Main&gt; eval $ eval $ eval $ eval num10\nLam \"f\" (Lam \"x\" (App (Var \"f\") (App (Var \"f\") (App (Var \"f\") (App (Var \"f\") (App (Var \"f\") (App (Var \"f\") (App (Var \"f\"\n) (App (Var \"f\") (App (Var \"f\") (App (Var \"f\") (Var \"x\"))))))))))))\n*Main&gt; eval $ eval $ eval num10\nLam \"f\" (Lam \"x\" (App (Var \"f\") (App (Var \"f\") (App (Var \"f\") (App (Var \"f\") (App (Var \"f\") (App (Var \"f\") (App (Var \"f\"\n) (App (Var \"f\") (App (Var \"f\") (App (Var \"f\") (Var \"x\"))))))))))))\n*Main&gt; eval $ eval  num10\nLam \"f\" (Lam \"x\" (App (Var \"f\") (App (Lam \"x\" (App (Var \"f\") (App (Lam \"x\" (App (Var \"f\") (App (Lam \"x\" (App (Var \"f\") (\nApp (Lam \"x\" (App (Var \"f\") (App (Lam \"x\" (App (Var \"f\") (App (Lam \"x\" (App (Var \"f\") (App (Lam \"x\" (App (Var \"f\") (App \n(Lam \"x\" (App (Var \"f\") (App (Lam \"x\" (App (Var \"f\") (Var \"x\"))) (Var \"x\")))) (Var \"x\")))) (Var \"x\")))) (Var \"x\")))) (Va\nr \"x\")))) (Var \"x\")))) (Var \"x\")))) (Var \"x\")))) (Var \"x\"))))\n</code></pre>\n\n<p>The remaining code is below</p>\n\n<pre><code>import Data.List\n\ntype Name = String\n\ndata Expr\n  = Var Name\n  | App Expr Expr\n  | Lam Name Expr\n  deriving (Show,Eq)\n\nadd = Lam \"m\" (Lam \"n\" (Lam \"f\" (Lam \"x\"\n          (App (App (Var \"m\") (Var \"f\"))\n               (App (App (Var \"n\") (Var \"f\"))\n                    (Var \"x\"))))))\n\nsuc = Lam \"n\" (Lam \"f\" (Lam \"x\" \n          (App (Var \"f\") \n               (App (App (Var \"n\") (Var \"f\"))\n                    (Var \"x\")))))\n\nnum0  = Lam \"f\" (Lam \"x\" (Var \"x\"))\nnum1  = App suc num0\nnum2  = App suc num1\nnum3  = App suc num2\nnum4  = App suc num3\nnum5  = App suc num4\nnum6  = App suc num5\nnum7  = App suc num6\nnum8  = App suc num7\nnum9  = App suc num8\nnum10 = App suc num9\n\nfv (Var x) = [x]\nfv (Lam x e) = delete x (fv e)\nfv (App e1 e2) = union (fv e1) (fv e2)\n\nrename x y (Var z)\n  | x == z = Var y\n  | otherwise = Var z\nrename x y (Lam z e)\n  | x == z = Lam y (rename x y e)\n  | otherwise = Lam z (rename x y e)\nrename x y (App e1 e2) = App (rename x y e1) (rename x y e2)\n\nsubst e1 x1 (App e2 e3) = App (subst e1 x1 e2) (subst e1 x1 e3)\nsubst e1 x1 (Var x)\n  | x1 == x = e1\n  | otherwise = Var x\nsubst e1 x1 (Lam x e)\n  | x1 == x = Lam x e\n  | not (elem x $ fv e1) = Lam x (subst e1 x1 e)\n  | otherwise = Lam xx (subst e1 x1 ee)\n  where ee = rename x xx e \n        xx = x ++ x \n\neval (Var x) = Var x\neval (Lam x e) = Lam x (eval e)\neval (App (Lam x m) n) = eval $ subst n x m \n-- eval (App (Lam x m) n) = eval $ subst (eval n) x (eval m)\neval (App m n) \n  | m /= evalm = App evalm n\n  | otherwise = App m evaln \n  where evalm = eval m\n        evaln = eval n\n</code></pre>\n\n<p>Any suggestions?\nNote, I am following the definitions/conventions in Selinger's notes:</p>\n\n<p><a href=\"https://www.irif.fr/~mellies/mpri/mpri-ens/biblio/Selinger-Lambda-Calculus-Notes.pdf\" rel=\"nofollow noreferrer\">https://www.irif.fr/~mellies/mpri/mpri-ens/biblio/Selinger-Lambda-Calculus-Notes.pdf</a></p>\n"}, {"tags": ["haskell", "ghc", "functional-dependencies", "state-monad"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1563671228, "post_id": 57129299, "comment_id": 100775697, "body": "You might be interested in the <a href=\"http://hackage.haskell.org/package/effect-stack\" rel=\"nofollow noreferrer\">effect-stack</a> package I recently released. (Mostly for funsies, but if somebody finds it useful so much the better...)"}, {"owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1563671356, "post_id": 57129299, "comment_id": 100775708, "body": "@DanielWagner Thanks!  I had no idea this package existed and is very closely related to what lead me to this question."}], "answers": [{"comments": [{"owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "edited": false, "score": 0, "creation_date": 1563668365, "post_id": 57129458, "comment_id": 100775365, "body": "I am very suspicious of your explanation since it would equally apply pretty much any version of GHC, while the problem is not present in every version of GHC.  Could you provide some evidence to substantiate your narrative?"}, {"owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "edited": false, "score": 0, "creation_date": 1563668676, "post_id": 57129458, "comment_id": 100775398, "body": "Also I find the sentence &quot;Compiles fine, even without the type annotation.&quot; to be a little weird.  The type annotation is still there, and if we remove it it stops compiling."}, {"owner": {"reputation": 1963, "user_id": 2840542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eO77F.jpg?s=128&g=1", "display_name": "AntC", "link": "https://stackoverflow.com/users/2840542/antc"}, "edited": false, "score": 0, "creation_date": 1563795532, "post_id": 57129458, "comment_id": 100805470, "body": "Fair enough to be &#39;cautious&#39; about the explanation. One difference might be down to defaulting rules (which did change a little while ago, not sure which exact version). Are you entering some of this code at the command line? Or is it all in proper compiled modules?"}], "tags": [], "owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "is_accepted": false, "score": 2, "last_activity_date": 1563669335, "last_edit_date": 1563669335, "creation_date": 1563667344, "answer_id": 57129458, "question_id": 57129299, "link": "https://stackoverflow.com/questions/57129299/why-does-this-type-annotation-make-my-functional-dependency-conflict-go-away-a/57129458#57129458", "title": "Why does this type annotation make my functional dependency conflict go away? (and why does it only happen on some versions of GHC?)", "body": "<p>Try this:</p>\n\n<pre><code>plus1 :: Int -&gt; Int\nplus1 = (+ 1)\n\ntest :: (MonadState Int m, MonadState Bool m) =&gt; m ()\ntest = do\n    (plus1 &lt;$&gt; get) &gt;&gt;= put\n    (not &lt;$&gt; get) &gt;&gt;= put\n</code></pre>\n\n<p>Compiles fine, even without the inline type annotation.\nWhat the functor?!</p>\n\n<p>The thing is, when the compiler complains in your first example, it doesn't complain about the type signature just because it decided to verify it for the heck of it. Look a bit further in the error message: <code>...In the second argument of \u2018(&lt;$&gt;)\u2019, namely \u2018get\u2019...</code></p>\n\n<p>Aha! The source of trouble is actually <code>get</code>! But why?</p>\n\n<p>The trouble is the bloody overloaded arithmetic. You see, operator <code>(+)</code> has a polymorphic type, like this:</p>\n\n<pre><code>(+) :: Num a =&gt; a -&gt; a -&gt; a\n</code></pre>\n\n<p>And naked literals also have similar type:</p>\n\n<pre><code>1 :: Num a =&gt; a\n</code></pre>\n\n<p>So when you write <code>(+1)</code>, it doesn't let the compiler know that you meant <code>Int</code>. It admits any type <code>a</code> as long as there is <code>Num a</code>.</p>\n\n<p>So the compiler turns to further surroundings to get the type. But wait! Further surroundings are also generic: </p>\n\n<pre><code>get :: MonadState a m =&gt; m a\nput :: MonadState a m =&gt; a -&gt; m ()\n</code></pre>\n\n<p>Ok, so maybe we can get the type from the signature of <code>test</code>? Let's check that! Oh, no, the signature actually contains a conflict! Bail, bail, bail! That's when you get the error.</p>\n\n<p>All of this doesn't happen on the second line, because <code>not</code> has a non-polymorphic type <code>not :: Bool -&gt; Bool</code>, so the required type of <code>get</code> is known. And this is why either giving an inline type annotation <code>Int -&gt; Int</code> or having it come from an external function <code>plus1</code> helps on the first line as well.</p>\n\n<p>If you do provide enough type information for the values in the body, the compiler never has to analyze the <code>test</code> signature. The signature specifies that there should be a <code>MonadState Int m</code> dictionary, and that's good enough. Whoever calls the function will have provide the dictionary, and we'll just use that.</p>\n\n<p>Now, of course, when you get around to <em>calling</em> this function, you'll need to provide both dictionaries <code>MonadState Int m</code> and <code>MonadState Bool m</code>, and you can't get those, so you can't actually call such function. But you sure can define it.</p>\n\n<hr>\n\n<p>That being said, you <em>CAN</em> actually have a monad with two different <code>MonadState</code> instances if you're willing to be sneaky enough about it.</p>\n\n<p>Of course, if you try it straight up, you get a very straight up error:</p>\n\n<pre><code>data M a = M\ninstance MonadState Int M\ninstance MonadState Bool M\n\n&gt; Functional dependencies conflict between instance declarations:\n&gt;       instance MonadState Int M -- Defined at ...\n&gt;       instance MonadState Bool M -- Defined at ...\n</code></pre>\n\n<p>Ok, let's start small:</p>\n\n<pre><code>data M a = M\ninstance MonadState Int M\n\n&gt; Illegal instance declaration for `MonadState a M'\n&gt;     The liberal coverage condition fails in class `MonadState'\n&gt;       for functional dependency: `m -&gt; s'\n&gt;     Reason: lhs type `M' does not determine rhs type `a'\n&gt;     Un-determined variable: a\n</code></pre>\n\n<p>Alright, so <em>something</em> in the type of <code>M</code> must indicate the type <code>Int</code>. That makes sense. Let's add it:</p>\n\n<pre><code>data M x a = M a\ninstance MonadState Int (M Int)\n</code></pre>\n\n<p>Ok, this works. So far so good.\nBut of course, in order to define <code>MonadState Bool</code>, I need to add <code>Bool</code> to the type as well:</p>\n\n<pre><code>data M x y a = M a\ninstance MonadState Int (M Int y)\ninstance MonadState Bool (M x Bool)\n\n&gt; Functional dependencies conflict between instance declarations:\n</code></pre>\n\n<p>Ah, still fundep failure! Ok, well, that makes sense too.</p>\n\n<p>So is there a way I can fool the compiler into not checking the instances for the fundep? Yes, there is! I can be sneaky and make the instances overlapped, like this:</p>\n\n<pre><code>instance {-# OVERLAPPABLE #-} (Num a, Show a) =&gt; MonadState a (M a y) where\n    get = M 42\n    put x = M ()\n\ninstance {-# OVERLAPPING #-} MonadState Bool (M x Bool) where\n    get = M True\n    put x = M ()\n</code></pre>\n\n<p>Now all that's left is the <code>Monad</code> instance, and we can have it all actually run:</p>\n\n<pre><code>data M x y a = M a deriving (Functor, Show)\n\ninstance Applicative (M x y) where\n    pure = M\n    (M f) &lt;*&gt; (M x) = M $ f x\n\ninstance Monad (M x y) where\n    (M x) &gt;&gt;= f = f x\n\ninstance {-# OVERLAPPABLE #-} (Num a, Show a) =&gt; MonadState a (M a y) where\n    get = M 42\n    put x = trace (\"Setting Num: \" ++ show x) $ M ()\n\ninstance {-# OVERLAPPING #-} MonadState Bool (M x Bool) where\n    get = M True\n    put x = trace (\"Setting Bool: \" ++ show x) $ M ()\n\ng :: M Int Bool ()\ng = test\n\nmain = print g\n</code></pre>\n\n<p>I've included debug trace to verify how they're actually going to work, so the above program prints:</p>\n\n<pre><code>Setting Num: 43    \nSetting Bool: False\nM ()               \n</code></pre>\n"}], "owner": {"reputation": 3085, "user_id": 4040600, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/B4ER6.png?s=128&g=1", "display_name": "&#201;amonn Olive", "link": "https://stackoverflow.com/users/4040600/%c3%89amonn-olive"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 209, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1563669335, "creation_date": 1563664994, "question_id": 57129299, "link": "https://stackoverflow.com/questions/57129299/why-does-this-type-annotation-make-my-functional-dependency-conflict-go-away-a", "title": "Why does this type annotation make my functional dependency conflict go away? (and why does it only happen on some versions of GHC?)", "body": "<p>So I've been playing around with <code>MonadState</code> class and I have encountered something I consider very strange. </p>\n\n<p>I can try to write a monad like the following:</p>\n\n<pre><code>test ::\n  ( MonadState Int m\n  , MonadState Bool m\n  )\n    =&gt; m ()\ntest = do\n  ((+1) &lt;$&gt; get) &gt;&gt;= put \n  (not  &lt;$&gt; get) &gt;&gt;= put\n</code></pre>\n\n<p>If we compile this in ghc 8.6.4 we get the following:</p>\n\n<pre><code>MonadTrans.hs:10:13: error:\n    \u2022 Couldn't match type \u2018Int\u2019 with \u2018Bool\u2019\n        arising from a functional dependency between constraints:\n          \u2018MonadState Bool m\u2019\n            arising from a use of \u2018get\u2019 at MonadTrans.hs:10:13-15\n          \u2018MonadState Int m\u2019\n            arising from the type signature for:\n                           test :: forall (m :: * -&gt; *).\n                                   (MonadState Int m, MonadState Bool m) =&gt;\n                                   m ()\n            at MonadTrans.hs:(4,1)-(8,11)\n    \u2022 In the second argument of \u2018(&lt;$&gt;)\u2019, namely \u2018get\u2019\n      In the first argument of \u2018(&gt;&gt;=)\u2019, namely \u2018((+ 1) &lt;$&gt; get)\u2019\n      In a stmt of a 'do' block: ((+ 1) &lt;$&gt; get) &gt;&gt;= put\n   |\n10 |   ((+1) &lt;$&gt; get) &gt;&gt;= put\n   |\n</code></pre>\n\n<p>(older versions of GHC for example <a href=\"https://tio.run/##ZY29CsIwFEb3PsUHdWjQFlzFdrAgFBQHnyDSSy3mpzS3UBCfPSaZBIc7fOfAuU/pXqSUf5c5LtIMixwIZ0Xr@FDUWsO0skNefrJRT3ZmRDZbVV2tkX11Z8lUtUo655kc43DIgALJJonOMHSAu194slYlKsIBdQONQmQpUaO3MVJs9wLHTYOBWKBpakwLIxpjGX/Gazma8B/dLabSimKmMP0X\" rel=\"nofollow noreferrer\" title=\"Haskell \u2013 Try It Online\">8.2.2</a> are actually fine with this and compile.  I have no idea why.)</p>\n\n<p>Ok this makes sense since the declaration of <code>MonadState</code> has a dependency in it:</p>\n\n<pre><code>class Monad m =&gt; MonadState s m | m -&gt; s where\n</code></pre>\n\n<p>we cannot have a single Monad be both <code>MonadState Int</code> and <code>MonadState Bool</code>.  But here is where things get a little strange.</p>\n\n<p>If I add a type annotation the code will compile</p>\n\n<pre><code>test ::\n  ( MonadState Int m\n  , MonadState Bool m\n  )\n    =&gt; m ()\ntest = do\n  (((+1) :: Int -&gt; Int) &lt;$&gt; get) &gt;&gt;= put\n  (not  &lt;$&gt; get) &gt;&gt;= put\n</code></pre>\n\n<p>To me this seems very strange.  A moment ago it was complaining about a very real functional dependency conflict between the two.  I don't see how disambiguating the type of <code>(+1)</code> makes that conflict go away.</p>\n\n<p>What is happening here?  How does the second one compile while the first fails?  And why does the first compile on 8.2.2?</p>\n"}, {"tags": ["haskell", "monads"], "answers": [{"comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1563665805, "post_id": 57129339, "comment_id": 100775100, "body": "For the sake of completeness, you might want to mention <code>liftM</code> and <code>liftA</code>."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1563666694, "post_id": 57129339, "comment_id": 100775183, "body": "What&#39;s interesting about those two is that they are not literally synonyms. They are to <code>fmap</code> what <code>ap</code> is to <code>(&lt;*&gt;)</code>: <code>liftM f m1 = do { x1 &lt;- m1; return (f x1) }</code>, and <code>liftA f a = pure f &lt;*&gt; a</code>."}, {"owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "edited": false, "score": 0, "creation_date": 1563703994, "post_id": 57129339, "comment_id": 100780572, "body": "Thanks. how can I write   &lt;*&gt; in terms of return and &gt;&gt;=? how can I write fmap in terms of return and &gt;&gt;=?"}, {"owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1563704721, "post_id": 57129339, "comment_id": 100780767, "body": "@duplode May I ask what you think of my questions in the above comment?"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "edited": false, "score": 0, "creation_date": 1563705471, "post_id": 57129339, "comment_id": 100780926, "body": "@Tim the explanations are all in the answer. Admittedly I gave you the definition of <code>ap</code> (which is the same as <code>&lt;*&gt;</code>) in terms of <code>do</code> notation, but this is just syntactic sugar, so it&#39;s easy enough to translate back. I didn&#39;t realise you needed it explicitly spelled out, but it would result in <code>a &lt;*&gt; b = a &gt;&gt;= \\f -&gt; b &gt;&gt;= \\x -&gt; return (f x)</code>. And then for <code>fmap</code> start from <code>fmap f x = pure f &lt;*&gt; x</code> and substitute in <code>return</code> for <code>pure</code> and the above definition for <code>&lt;*&gt;</code>."}, {"owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "edited": false, "score": 0, "creation_date": 1563705692, "post_id": 57129339, "comment_id": 100780984, "body": "How are do notation and return/&gt;&gt;=   translated to each other?"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "edited": false, "score": 1, "creation_date": 1563706254, "post_id": 57129339, "comment_id": 100781109, "body": "@Tim - did you try google? There are <a href=\"https://wiki.haskell.org/All_About_Monads#Do_notation\" rel=\"nofollow noreferrer\">loads</a> of <a href=\"https://en.wikibooks.org/wiki/Haskell/do_notation\" rel=\"nofollow noreferrer\">good</a> explanations of <a href=\"http://learnyouahaskell.com/a-fistful-of-monads#do-notation\" rel=\"nofollow noreferrer\">this</a> online (including the definitive, and admirably brief, one in the <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-470003.14\" rel=\"nofollow noreferrer\">Haskell report</a>)"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "edited": false, "score": 0, "creation_date": 1563715590, "post_id": 57129339, "comment_id": 100783217, "body": "@Tim In addition to what Robin notes, <code>fmap</code> in terms of <code>return</code> and <code>(&gt;&gt;=)</code> is <code>liftM</code>, as in my comment above, or, equivalently, <code>liftM f m = m &gt;&gt;= \\x -&gt; return (f x)</code>"}], "tags": [], "owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "is_accepted": true, "score": 10, "last_activity_date": 1563666999, "last_edit_date": 1592644375, "creation_date": 1563665464, "answer_id": 57129339, "question_id": 57129297, "link": "https://stackoverflow.com/questions/57129297/how-can-i-show-that-monad-is-actually-applicative-and-functor/57129339#57129339", "title": "How can I show that `Monad` is actually `Applicative` and `Functor`?", "body": "<p>These are all in the documentation.</p>\n<blockquote>\n<p>Specifically, how can I write <code>pure</code> and <code>&lt;*&gt;</code> in terms of return and <code>&gt;&gt;=</code>?</p>\n</blockquote>\n<p>See <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad\" rel=\"noreferrer\">http://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#t:Monad</a>, specifically this section:</p>\n<blockquote>\n<p>Furthermore, the Monad and Applicative operations should relate as follows:</p>\n<pre><code>pure = return\n(&lt;*&gt;) = ap\n</code></pre>\n</blockquote>\n<p>and note that <code>ap</code> was a standard Monad function long before Applicative was introduced as a standard part of the language, and is <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.Base.html#ap\" rel=\"noreferrer\">defined</a> as <code>ap m1 m2          = do { x1 &lt;- m1; x2 &lt;- m2; return (x1 x2) }</code></p>\n<p><code>Specifically, how can I write fmap in terms of return and &gt;&gt;=?</code></p>\n<p>The <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Applicative.html\" rel=\"noreferrer\">Control.Applicative documentation</a> says:</p>\n<blockquote>\n<p>As a consequence of these laws, the <code>Functor</code> instance for <code>f</code> will satisfy</p>\n<pre><code>fmap f x = pure f &lt;*&gt; x\n</code></pre>\n</blockquote>\n<p>Which of course, using what I quoted above, you can use to implement <code>fmap</code> in terms of <code>return</code> and <code>&gt;&gt;=</code>.</p>\n<p>And as @duplode points out, there are also <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Monad.html#v:liftM\" rel=\"noreferrer\">liftM</a> for Monads, and <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Control-Applicative.html#v:liftA\" rel=\"noreferrer\">liftA</a> for Applicatives, which are (essentially, although they're not defined literally that way) synonyms of <code>fmap</code>, specialised to their particular type classes.</p>\n"}], "owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 231, "favorite_count": 0, "accepted_answer_id": 57129339, "answer_count": 1, "score": -2, "last_activity_date": 1565732882, "creation_date": 1563664953, "last_edit_date": 1565732882, "question_id": 57129297, "link": "https://stackoverflow.com/questions/57129297/how-can-i-show-that-monad-is-actually-applicative-and-functor", "title": "How can I show that `Monad` is actually `Applicative` and `Functor`?", "body": "<p>In Haskell, class <code>Monad</code> is declared as: </p>\n\n<pre><code>class   Applicative m   =&gt;  Monad   m   where\nreturn  ::  a   -&gt;  m   a\n(&gt;&gt;=)   ::  m   a   -&gt;  (a  -&gt;  m   b)  -&gt;  m   b\nreturn  =   pure\n</code></pre>\n\n<p>How can I  show that <code>Monad</code> is actually <code>Applicative</code>, which is declared like this?</p>\n\n<pre><code>class   Functor f   =&gt;  Applicative f   where\npure    ::  a   -&gt;  f   a\n(&lt;*&gt;)   ::  f   (a  -&gt;  b)  -&gt;  f   a   -&gt;  f   b\n</code></pre>\n\n<p>Specifically, how can I write <code>pure</code> and <code>&lt;*&gt;</code> in terms of <code>return</code> and <code>&gt;&gt;=</code>?</p>\n\n<p>How can I show that <code>Monad</code> is actually <code>Functor</code>, which is declared like this?</p>\n\n<pre><code>class   Functor f   where\nfmap    ::  (a  -&gt;  b)  -&gt;  f   a   -&gt;  f   b\n</code></pre>\n\n<p>Specifically, how can I write <code>fmap</code> in terms of <code>return</code> and <code>&gt;&gt;=</code>?</p>\n"}, {"tags": ["haskell", "recursion", "memoization"], "answers": [{"comments": [{"owner": {"reputation": 55, "user_id": 4132523, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ffc6c47683f405558d60f4c70a132d5?s=128&d=identicon&r=PG&f=1", "display_name": "user118165", "link": "https://stackoverflow.com/users/4132523/user118165"}, "edited": false, "score": 0, "creation_date": 1563660109, "post_id": 57128879, "comment_id": 100774195, "body": "OK that works, thank you: so the binding captures the function call and delta value.  Nice."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 55, "user_id": 4132523, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ffc6c47683f405558d60f4c70a132d5?s=128&d=identicon&r=PG&f=1", "display_name": "user118165", "link": "https://stackoverflow.com/users/4132523/user118165"}, "edited": false, "score": 0, "creation_date": 1563660157, "post_id": 57128879, "comment_id": 100774201, "body": "@user118165 Yes, that&#39;s the idea."}, {"owner": {"reputation": 55, "user_id": 4132523, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ffc6c47683f405558d60f4c70a132d5?s=128&d=identicon&r=PG&f=1", "display_name": "user118165", "link": "https://stackoverflow.com/users/4132523/user118165"}, "edited": false, "score": 0, "creation_date": 1563660529, "post_id": 57128879, "comment_id": 100774277, "body": "The global cache is an interesting idea -- I guess you&#39;d use a map?  Of course as you point out it doesn&#39;t add much in this case.  Thanks again."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 55, "user_id": 4132523, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ffc6c47683f405558d60f4c70a132d5?s=128&d=identicon&r=PG&f=1", "display_name": "user118165", "link": "https://stackoverflow.com/users/4132523/user118165"}, "edited": false, "score": 0, "creation_date": 1563826772, "post_id": 57128879, "comment_id": 100821445, "body": "@user118165 I&#39;m not sure about what I would use right now. <code>Data.Map.Map</code> is strict, so that can not be used. We need a lazy data structure."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 4, "last_activity_date": 1563659814, "creation_date": 1563659814, "answer_id": 57128879, "question_id": 57128819, "link": "https://stackoverflow.com/questions/57128819/add-memoization-to-a-recursively-defined-haskell-function/57128879#57128879", "title": "Add memoization to a recursively defined haskell function", "body": "<p>You need another binding to avoid the recursive call to <code>mem d</code>:</p>\n\n<pre><code>mem d = g\n  where g = (map f' [0 ..] !!)\n        f' x | x &lt; d  = 1\n        f' x | x == d = 2\n        f' x          = g (x-1) + g (x-d)\n</code></pre>\n\n<p>Also be careful when you are calling <code>mem</code>, since each call to <code>mem</code> will create its own cache. E.g.</p>\n\n<pre><code>mem 10 x + mem 10 y\n</code></pre>\n\n<p>will not cache anything, while</p>\n\n<pre><code>let g = mem 10 in g x + g y\n</code></pre>\n\n<p>will use the same cache.</p>\n\n<p>An alternative could be to use a single \"global\" cache for all the calls <code>mem d x</code>, using memoization on the pair <code>(d,x)</code>. This looks a bit more tricky to achieve, though.</p>\n"}], "owner": {"reputation": 55, "user_id": 4132523, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1ffc6c47683f405558d60f4c70a132d5?s=128&d=identicon&r=PG&f=1", "display_name": "user118165", "link": "https://stackoverflow.com/users/4132523/user118165"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 98, "favorite_count": 0, "accepted_answer_id": 57128879, "answer_count": 1, "score": 4, "last_activity_date": 1563659814, "creation_date": 1563659149, "last_edit_date": 1563659552, "question_id": 57128819, "link": "https://stackoverflow.com/questions/57128819/add-memoization-to-a-recursively-defined-haskell-function", "title": "Add memoization to a recursively defined haskell function", "body": "<p>I've solved a dynamic programming problem in Haskell (actually a Project Euler problem) with what boils down to a generalisation of the Fibonacci sequence:</p>\n\n<pre><code> f(n) = f(n-1) + f(n-2)\n g(n) = g(n-1) + g(n-3)\n h(n) = h(n-1) + h(n-4)\n</code></pre>\n\n<p>There are a few more functions like this, and because of the size of the problem, I've had to add memoization, which is pretty trivial, like so:</p>\n\n<pre><code>memF = (map f' [0 ..] !!)\n  where f' x | x &lt;=1 = 1\n        f' 2         = 2\n        f' x         = memF(x-1) + memF(x-2)\n\n\nmemG = (map f' [0 ..] !!)\n  where f' x | x &lt;=2 = 1\n        f' 3         = 2\n        f' x         = memG(x-1) + memG(x-3)\n</code></pre>\n\n<p>This works fine, so I can get the answer as <code>(memF 100) + (memG 100) + ...</code> and I've answered the question, but the repeated code is ugly, and I'd rather define a single function to generate the memoized functions, so something like:</p>\n\n<pre><code>mem d = (map f' [0 ..] !!)\n  where f' x | x &lt; d  = 1\n        f' x | x == d = 2\n        f' x          = (mem d) (x-1) + (mem d)(x-d)\n</code></pre>\n\n<p>And then answer as <code>mem 2 100 + mem 3 100 + ...</code> This fails, or at least the caching doesn't work, I guess because the array is recreated with each call, I suppose I could use the StateMonad or a memoization library, but I'd be interested to know if there is a way to do this without Monads.  Is there please?</p>\n"}, {"tags": ["haskell", "programming-languages", "computer-science", "category-theory", "adhoc-polymorphism"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 2, "creation_date": 1563660349, "post_id": 57128213, "comment_id": 100774235, "body": "I don&#39;t think typeclasses per se correspond to anything important in category theory, it&#39;s more that many category-theory ideas can be expressed <i>as type classes</i>."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1563660408, "post_id": 57128213, "comment_id": 100774254, "body": "A typeclass is simply a collection of objects and morphisms, specific to some object. This doesn&#39;t correspond to anything in particular."}], "answers": [{"tags": [], "owner": {"reputation": 9111, "user_id": 90088, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/c018f213204496b4bbf481e7c8e6c15c?s=128&d=identicon&r=PG", "display_name": "Bartosz Milewski", "link": "https://stackoverflow.com/users/90088/bartosz-milewski"}, "is_accepted": false, "score": 4, "last_activity_date": 1563745214, "last_edit_date": 1592644375, "creation_date": 1563723533, "answer_id": 57134659, "question_id": 57128213, "link": "https://stackoverflow.com/questions/57128213/what-concept-in-category-theory-can-be-used-to-represent-a-typeclass/57134659#57134659", "title": "What concept in category theory can be used to represent a typeclass?", "body": "<p><a href=\"https://dorchard.blog/2011/10/18/subcategories-in-haskell-exofunctors/\" rel=\"nofollow noreferrer\">According to Dominic Orchard</a>, typeclasses correspond to subcategories of Hask:</p>\n<blockquote>\n<p>The instances of a single parameter type class can be interpreted as describing the members of a set of types (or a relation on types for multi-parameter type classes). In a type signature, a universally quantified type variable constrained by a type class constraint represents a collection of types that are members of the class. E.g. for the <code>Eq</code> class, the following type signature describes a collection of types for which there are instances of <code>Eq</code>:</p>\n<pre><code> Eq a =&gt; a\n</code></pre>\n<p>The members of <code>Eq</code> are a subcollection of the objects of <strong>Hask</strong>. Similarly, the type:</p>\n<pre><code> (Eq a, Eq b) =&gt; (a -&gt; b)\n</code></pre>\n<p>represents a subcollection of the morphisms of <strong>Hask</strong> mapping between objects in the subcollection of objects which are members of <code>Eq</code>. Thus, the <code>Eq</code> class defines an <code>Eq</code>-subcategory of <strong>Hask</strong> with the above subcollections of objects and morphisms.</p>\n</blockquote>\n"}], "owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 161, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1563745214, "creation_date": 1563653491, "last_edit_date": 1563701891, "question_id": 57128213, "link": "https://stackoverflow.com/questions/57128213/what-concept-in-category-theory-can-be-used-to-represent-a-typeclass", "title": "What concept in category theory can be used to represent a typeclass?", "body": "<p>In Haskell programming language,  according to <a href=\"https://en.wikibooks.org/wiki/Haskell/Category_theory#Translating_categorical_concepts_into_Haskell\" rel=\"nofollow noreferrer\">https://en.wikibooks.org/wiki/Haskell/Category_theory#Translating_categorical_concepts_into_Haskell</a></p>\n\n<blockquote>\n  <p>59.2.2 Translating categorical concepts into Haskell</p>\n  \n  <ol>\n  <li><p>We work in the category <code>Hask</code> and its subcategories.</p></li>\n  <li><p>Objects are types.</p></li>\n  <li><p>Morphisms are functions.</p></li>\n  <li><p>Things that take a type and return another type are type\n  constructors.</p></li>\n  <li><p>Things that take a function and return another function are\n  higher-order functions.</p></li>\n  <li><p><strong>Typeclasses</strong>, along with the polymorphism they provide, make a nice\n  way of capturing the fact that in category theory things are often\n  de\ufb01ned over a number of objects at once.</p></li>\n  </ol>\n</blockquote>\n\n<p>What concept in category theory is a typeclass represented as? As a subcategory of <code>Hask</code>?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 505, "user_id": 6621898, "user_type": "registered", "accept_rate": 60, "profile_image": "https://graph.facebook.com/10204980448310749/picture?type=large", "display_name": "Tanmay Bhattacharya", "link": "https://stackoverflow.com/users/6621898/tanmay-bhattacharya"}, "edited": false, "score": 0, "creation_date": 1563649696, "post_id": 57127726, "comment_id": 100772199, "body": "The thing is , If  I have a top level function in IO ,every function that I write under it needs to be in IO ,so by the time I am done , every function that I have written ends up returning IO / some Monad Trasformer stack type values . It works for me , I just want to understand if this is a good practice ?"}, {"owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "edited": false, "score": 0, "creation_date": 1563649939, "post_id": 57127726, "comment_id": 100772246, "body": "Can you add the full code?"}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1563650198, "post_id": 57127726, "comment_id": 100772297, "body": "Not really a significant thing, but with <code>{-# LANGUAGE OverloadedStrings #-}</code> I think you can skip the <code>T.pack</code> and just do <code>URI.mkPathPiece &quot;channel&quot;</code>."}, {"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1563650338, "post_id": 57127726, "comment_id": 100772334, "body": "And then there\u2019s something like <code>foo &lt;- mapM URI.mkPathPiece $ NonEmpty.fromList [functionname, &quot;channel&quot;, channel, &quot;chaincode&quot;, chaincode]</code> (use <code>import qualified</code>)"}, {"owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "reply_to_user": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1563651913, "post_id": 57127726, "comment_id": 100772618, "body": "@Ry- very nice contribution, I added to my answer if you don&#39;t mind, thanks!"}, {"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 0, "creation_date": 1563655318, "post_id": 57127726, "comment_id": 100773228, "body": "Would this question be better served in the code review section of stack exchange?"}, {"owner": {"reputation": 505, "user_id": 6621898, "user_type": "registered", "accept_rate": 60, "profile_image": "https://graph.facebook.com/10204980448310749/picture?type=large", "display_name": "Tanmay Bhattacharya", "link": "https://stackoverflow.com/users/6621898/tanmay-bhattacharya"}, "edited": false, "score": 0, "creation_date": 1563655416, "post_id": 57127726, "comment_id": 100773249, "body": "Oh, the mapM... Thats exactly what I needed. Thanks a lot :)"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1563716232, "post_id": 57127726, "comment_id": 100783380, "body": "\u201cIf I have a top level function in IO ,every function that I write under it needs to be in IO\u201d \u2013 <b>no</b>, what made you think so? It&#39;s the other way around, if some particular function needs <code>IO</code> than <i>the top-level function that calls it</i> also needs to be <code>IO</code>. But all the other functions it calls can be normal pure functions just fine, if <i>they</i> don&#39;t need <code>IO</code>."}], "answers": [{"tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": false, "score": 2, "last_activity_date": 1563651879, "last_edit_date": 1563651879, "creation_date": 1563649923, "answer_id": 57127808, "question_id": 57127726, "link": "https://stackoverflow.com/questions/57127726/how-to-make-code-look-elegant-in-haskell/57127808#57127808", "title": "How to make code look elegant in Haskell?", "body": "<p>I just can think in improve a little this part with a subfunction kind of helper function:</p>\n\n<pre><code>toJsonOrError (Right response) = return $ toJSON $ response\ntoJsonOrError (Left msg) = Log $ \"Error\" &lt;&gt; msg\n</code></pre>\n\n<p>Also you can import qualified as @Ri- pointed, to replace Data.List.NonEmpty.fromList like:</p>\n\n<pre><code>import qualified Data.List.NonEmpty as NonEmpty (fromList)\n</code></pre>\n\n<p>to simplify the line:</p>\n\n<pre><code>Just (True, fromList [fname, kch, vch, kca, vca])\n</code></pre>\n\n<p>The rest of your code is <code>do</code> notation and doesn't look like it can be improved (at leas with the code you've shown)</p>\n"}, {"tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": false, "score": 3, "last_activity_date": 1563657347, "creation_date": 1563657347, "answer_id": 57128661, "question_id": 57127726, "link": "https://stackoverflow.com/questions/57127726/how-to-make-code-look-elegant-in-haskell/57128661#57128661", "title": "How to make code look elegant in Haskell?", "body": "<p>You can improve your second example like this:</p>\n\n<pre><code>pieces &lt;- traverse URI.makePathPiece $ \n   NonEmpty.fromList [functionName, \"channel\", channel, \"chaincode\", chaincode]\nlet path = Just (True, pieces)\n</code></pre>\n\n<p>We omit the <code>T.pack</code>s by using the <code>{-# OverloadedStrings #-}</code> extension.  Then use <code>traverse</code> to map a monadic function over a <code>NonEmpty</code>, which is a traversable container.</p>\n\n<p>I need more context to give a concrete alternative to the first example, but if you have nested structures such as:</p>\n\n<pre><code>case eitherResponse of\n    Left -&gt; some error ...\n    Right x -&gt; \n        case someFunction x of\n            Left -&gt; some error ...\n            Right y -&gt; ...\n</code></pre>\n\n<p>This kind of chaining is exactly what <code>Either</code>/<code>ExceptT</code>'s <code>Monad</code> instances do.   You can make it look like this:</p>\n\n<pre><code>do x &lt;- eitherResponse\n   y &lt;- someFunction x\n</code></pre>\n\n<p>Time to learn about monad transformers! </p>\n"}], "owner": {"reputation": 505, "user_id": 6621898, "user_type": "registered", "accept_rate": 60, "profile_image": "https://graph.facebook.com/10204980448310749/picture?type=large", "display_name": "Tanmay Bhattacharya", "link": "https://stackoverflow.com/users/6621898/tanmay-bhattacharya"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 127, "favorite_count": 1, "answer_count": 2, "score": 2, "last_activity_date": 1563657347, "creation_date": 1563649158, "last_edit_date": 1563650091, "question_id": 57127726, "link": "https://stackoverflow.com/questions/57127726/how-to-make-code-look-elegant-in-haskell", "title": "How to make code look elegant in Haskell?", "body": "<p>I am new to Haskell, I have read blogs on how Haskell code is very elegant. The way I am writing Haskell code, it does not look elegant at all.\nSome of the areas I want to improve are </p>\n\n<ul>\n<li><p>I use case matches on Either values a lot, is using something like\nfromRight from Data.Either a better option? I also have some code with nested structures, for right values</p>\n\n<pre><code>case eitherResponse of\n    Right response -&gt; return $ toJSON $ response\n    Left msg -&gt; Log $ \"Error\" &lt;&gt; msg\n</code></pre></li>\n<li><p>I have a lot of code which looks like this</p>\n\n<pre><code>fname &lt;- URI.mkPathPiece functionname\nkch &lt;- URI.mkPathPiece $ T.pack \"channel\"\nvch &lt;- URI.mkPathPiece channel\nkca &lt;- URI.mkPathPiece $ T.pack \"chaincode\"\nvca &lt;- URI.mkPathPiece chaincode\nlet path = Just (True, Data.List.NonEmpty.fromList [fname, kch, vch, kca, vca])\n</code></pre></li>\n</ul>\n\n<p>I really do not like the way it looks, how can I improve this?</p>\n\n<p>Also, Haskell for me is very similar to imperative programming in a \"do\" block. Is that how Haskell code should look or I am on the wrong track here?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1563636653, "post_id": 57126114, "comment_id": 100769101, "body": "What do you mean by &quot;flat&quot;?"}, {"owner": {"reputation": 247, "user_id": 1499033, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/pc2IU.jpg?s=128&g=1", "display_name": "Sergey Kolbasov", "link": "https://stackoverflow.com/users/1499033/sergey-kolbasov"}, "reply_to_user": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1563637183, "post_id": 57126114, "comment_id": 100769242, "body": "Saying, I have <code>Either a b</code> and <code>Either c d</code> where <code>b ~ Either e f</code> and <code>d ~ Either g h</code>, in the end it should be <code>Either a (Either e (Either f (Either c (Either g h))))</code> instead of <code>Either (Either a (Either e f)) (Either c (Either g h))</code>"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1563638196, "post_id": 57126114, "comment_id": 100769483, "body": "So you want to make it &quot;right recursive&quot; so to speak?"}, {"owner": {"reputation": 247, "user_id": 1499033, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/pc2IU.jpg?s=128&g=1", "display_name": "Sergey Kolbasov", "link": "https://stackoverflow.com/users/1499033/sergey-kolbasov"}, "edited": false, "score": 0, "creation_date": 1563639454, "post_id": 57126114, "comment_id": 100769770, "body": "Not sure if grammar term is applicable here, but yes, kind of"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1563639818, "post_id": 57126114, "comment_id": 100769843, "body": "Even the &quot;non recursive&quot; case is not immediate to me. We have 4 cases on the two arguments: left/left, left/right, right/left, right/right. What would you expect the output to be in these 4 cases?"}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1563640493, "post_id": 57126114, "comment_id": 100770015, "body": "If I&#39;ve understood what you&#39;re asking, your question boils down to <i>generically reassociating nested <code>Either</code>s</i>. You want to generalise <code>exchange :: Either (Either a b) c -&gt; Either a (Either b c)</code> so that when <code>a</code> or <code>b</code> are <code>Either</code>s they also get right-associated. Is that accurate?"}, {"owner": {"reputation": 247, "user_id": 1499033, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/pc2IU.jpg?s=128&g=1", "display_name": "Sergey Kolbasov", "link": "https://stackoverflow.com/users/1499033/sergey-kolbasov"}, "edited": false, "score": 0, "creation_date": 1563640722, "post_id": 57126114, "comment_id": 100770056, "body": "First <code>Left</code> to occur is the result:  <code>adjoin (Left a) _ = Left a</code> and <code>adjoin _ (Left c) = Right $ Right $ Left c</code>  Let&#39;s omit the case when both are <code>Right</code> in the non-recursive case for now."}, {"owner": {"reputation": 247, "user_id": 1499033, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/pc2IU.jpg?s=128&g=1", "display_name": "Sergey Kolbasov", "link": "https://stackoverflow.com/users/1499033/sergey-kolbasov"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1563640815, "post_id": 57126114, "comment_id": 100770075, "body": "@BenjaminHodgson Yes, I think it is."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1563641108, "post_id": 57126114, "comment_id": 100770166, "body": "It seems like shapeless coproduct is essentially a Scala implementation of <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/GHC-Generics.html#t:Generic\" rel=\"nofollow noreferrer\">GHC generics</a>."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1563641211, "post_id": 57126114, "comment_id": 100770194, "body": "...or <a href=\"http://hackage.haskell.org/package/syb\" rel=\"nofollow noreferrer\">scrap your boilerplate</a>; that&#39;s what it actually cites in <a href=\"https://github.com/milessabin/shapeless/blob/master/README.md\" rel=\"nofollow noreferrer\">the readme</a>. Anyways, you&#39;re trying to reproduce something from Scala that Scala has reproduced from Haskell..."}, {"owner": {"reputation": 247, "user_id": 1499033, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/pc2IU.jpg?s=128&g=1", "display_name": "Sergey Kolbasov", "link": "https://stackoverflow.com/users/1499033/sergey-kolbasov"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1563649031, "post_id": 57126114, "comment_id": 100772047, "body": "@leftaroundabout the problem is that I do know how to operate with it in shapeless, like implementing mentioned <code>Adjoin</code>, but not in Haskell"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1563649468, "post_id": 57126114, "comment_id": 100772147, "body": "So why don&#39;t you show exactly what you want to accomplish, and how you do it in Scala?"}], "answers": [{"comments": [{"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1563696260, "post_id": 57128840, "comment_id": 100778916, "body": "Related: &quot;Avoid overlapping instances with closed type families&quot; <a href=\"https://kseo.github.io/posts/2017-02-05-avoid-overlapping-instances-with-closed-type-families.html\" rel=\"nofollow noreferrer\">kseo.github.io/posts/&hellip;</a>"}, {"owner": {"reputation": 247, "user_id": 1499033, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/pc2IU.jpg?s=128&g=1", "display_name": "Sergey Kolbasov", "link": "https://stackoverflow.com/users/1499033/sergey-kolbasov"}, "edited": false, "score": 0, "creation_date": 1563712709, "post_id": 57128840, "comment_id": 100782532, "body": "Thanks, that is awesome! Also, what is the meaning of <code>@</code> near a type?"}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "reply_to_user": {"reputation": 247, "user_id": 1499033, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/pc2IU.jpg?s=128&g=1", "display_name": "Sergey Kolbasov", "link": "https://stackoverflow.com/users/1499033/sergey-kolbasov"}, "edited": false, "score": 1, "creation_date": 1563713467, "post_id": 57128840, "comment_id": 100782699, "body": "@SergeyKolbasov It&#39;s a type application <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#extension-TypeApplications\" rel=\"nofollow noreferrer\">downloads.haskell.org/~ghc/latest/docs/html/users_guide/&hellip;</a> It&#39;s not strictly needed, the alternative is resolving type ambiguities by adding <code>Data.Proxy</code> arguments with normal type annotations."}], "tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": true, "score": 3, "last_activity_date": 1563704331, "last_edit_date": 1563704331, "creation_date": 1563659382, "answer_id": 57128840, "question_id": 57126114, "link": "https://stackoverflow.com/questions/57126114/adjoin-two-generic-eithers-in-haskell/57128840#57128840", "title": "Adjoin two generic Eithers in Haskell", "body": "<p>I wrote another answer but it was incorrect because it didn't recursively flatten  nested <code>Either</code>s. Hopefully this one should work.</p>\n\n<p>Some required extensions:</p>\n\n<pre><code>{-# LANGUAGE DataKinds, MultiParamTypeClasses, FunctionalDependencies, \n             UndecidableInstances, FlexibleInstances, ScopedTypeVariables #-}\n{-# LANGUAGE TypeApplications #-}    -- To enable supplying types with @ \n{-# LANGUAGE AllowAmbiguousTypes #-} -- Not strictly necessary, just to avoid Proxy \n</code></pre>\n\n<p>And the class itself:</p>\n\n<pre><code>class Flatten input result | input -&gt; result where\n    flatten :: input -&gt; result\n\n-- Branch can be used as a kind thanks to DataKinds\ndata Branch = RebalanceNeeded\n            | RebalanceNotNeeded\n            | Atomic\n\ntype family WhichBranch t :: Branch where\n     WhichBranch (Either (Either _ _) _) = RebalanceNeeded\n     WhichBranch (Either _ _)            = RebalanceNotNeeded\n     WhichBranch _                       = Atomic\n\nclass Flatten' (branch :: Branch) input result | branch input -&gt; result where\n    flatten' :: input -&gt; result\n\n-- We always delegate on the auxiliary class \ninstance Flatten' (WhichBranch input) input result =&gt; Flatten input result where\n    flatten = flatten' @(WhichBranch input)\n\n-- The left branch is itself another either. We need to rebalance and keep flattening.\ninstance Flatten (Either x (Either y z)) r \n  =&gt; Flatten' RebalanceNeeded (Either (Either x y) z) r where\n  flatten' e = case e of\n      Left (Left x)  -&gt; flatten @(Either x (Either y z)) (Left x)\n      Left (Right y) -&gt; flatten @(Either x (Either y z)) (Right (Left  y))\n      Right z        -&gt; flatten @(Either x (Either y z)) (Right (Right z))\n\n-- The left branch is not itself an either. We only flatten the right branch.\ninstance (Flatten y y') =&gt; Flatten' RebalanceNotNeeded (Either x y) (Either x y') where\n  flatten' e = case e of\n      Left x  -&gt; Left x\n      Right y -&gt; Right (flatten @y y)\n\ninstance Flatten' Atomic x x where\n  flatten' = id\n</code></pre>\n\n<p>The solution makes use of a <code>WhichBranch</code> type family to scrutinize the leftmost type. The result is fed into an auxiliary typeclass <code>Flatten'</code> that works with the extra information. This is a workaround to avoid annoying \"overlapping instances\" errors.</p>\n\n<p>Another option would be to simply to put <code>{-# OVERLAPPABLE #-}</code> and <code>{-# OVERLAPPING #-}</code> pragmas on the instances and work without the auxiliary class and without the type family.</p>\n\n<p>Example of use:</p>\n\n<pre><code>ghci&gt; :t flatten (undefined :: Either (Either Bool Float) (Either (Either Char Word) Int))\nEither Bool (Either Float (Either Char (Either Word Int)))\n</code></pre>\n\n<p><strong>Edit:</strong> Instead of multi-parameter typeclasess, another way of encoding these <em>unidirectional</em> transformations is with <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html?#associated-data-and-type-families\" rel=\"nofollow noreferrer\">associated type families</a>:</p>\n\n<pre><code>class Flatten input where\n  type Flattened input -- associated type family that \"computes\" the flattened type\n  flatten :: input -&gt; Flattened input\n\nclass Flatten' (branch :: Branch) input where\n  type Flattened' branch input \n  flatten' :: input -&gt; Flattened' branch input\n\ninstance Flatten' (WhichBranch input) input =&gt; Flatten input where\n    type Flattened input = Flattened' (WhichBranch input) input\n    flatten = flatten' @(WhichBranch input)\n\ninstance Flatten                  (Either x (Either y z)) \n  =&gt; Flatten' RebalanceNeeded     (Either (Either x y) z) where\n  type Flattened' RebalanceNeeded (Either (Either x y) z) \n     = Flattened                  (Either x (Either y z))\n  flatten' e = flatten (case e of\n      Left (Left x)  -&gt; Left x\n      Left (Right y) -&gt; Right (Left  y)\n      Right z        -&gt; Right (Right z) \n                                :: Either x (Either y z))\n\ninstance Flatten y =&gt; Flatten' RebalanceNotNeeded (Either x y) where\n  type Flattened' RebalanceNotNeeded (Either x y) = Either x (Flattened y)\n  flatten' = fmap flatten\n\ninstance Flatten' Atomic x where\n  type Flattened' Atomic x = x\n  flatten' = id\n</code></pre>\n\n<p>With the advantage that now we can explicitly <em>ask</em> to compute the result type:</p>\n\n<pre><code>ghci&gt; :kind! (Flattened (Either (Either Bool Float) (Either (Either Char Word) Int)))\nEither Bool (Either Float (Either Char (Either Word Int)))\n</code></pre>\n"}], "owner": {"reputation": 247, "user_id": 1499033, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/pc2IU.jpg?s=128&g=1", "display_name": "Sergey Kolbasov", "link": "https://stackoverflow.com/users/1499033/sergey-kolbasov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 161, "favorite_count": 1, "accepted_answer_id": 57128840, "answer_count": 1, "score": 1, "last_activity_date": 1563704331, "creation_date": 1563636514, "question_id": 57126114, "link": "https://stackoverflow.com/questions/57126114/adjoin-two-generic-eithers-in-haskell", "title": "Adjoin two generic Eithers in Haskell", "body": "<p>I'm looking for a way to join two <code>Either a b</code> and <code>Either c d</code> together, having <code>Either a (Either b (Either c d))</code> as the end result. But it also should be able to recursively \"flat\" two eithers, in case if <code>b ~ Either</code> or/and <code>d ~ Either</code>.</p>\n\n<p>I've tried to define type class with fundep: </p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>class Adjoin a b c | a b -&gt; c where\n  adjoin :: a -&gt; b -&gt; c\n</code></pre>\n\n<p>But couldn't come up with any meaningful instances for the class. I feel it could be achieved through the type families, but I'm not proficient enough for it.</p>\n\n<p>Essentially, I'm trying to reproduce shapeless <a href=\"https://github.com/milessabin/shapeless/blob/master/core/src/main/scala/shapeless/coproduct.scala\" rel=\"nofollow noreferrer\">Coproduct</a> from Scala</p>\n"}, {"tags": ["performance", "haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 5, "creation_date": 1563627860, "post_id": 57124974, "comment_id": 100767167, "body": "Please use <code>Int64</code>, or <code>Int</code> over <code>Integer</code>."}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1563628399, "post_id": 57124974, "comment_id": 100767261, "body": "Try <code>[1::Int .. 10000000]</code>."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1563628850, "post_id": 57124974, "comment_id": 100767367, "body": "Also note both of your timings include two different things: the computations that generate the values, and the I/O that prints them. Your results would be more informative if you kept them apart. For instance <code>print (last [1::Int .. 10000000])</code>) will print just the last element of the list (while using <code>Int</code> instead of <code>Integer</code>, as the other folks here suggest)."}, {"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 0, "creation_date": 1563635280, "post_id": 57124974, "comment_id": 100768791, "body": "Haskell isn&#39;t slow, the code you wrote is slow."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 6, "creation_date": 1563636137, "post_id": 57124974, "comment_id": 100768972, "body": "People, if you&#39;re going to comment make sure you actually have a point! <code>Integer</code> vs constant-size types has little to do with the performance issue here. Nor has the unboxed list structure. The fact is, <code>print</code> appears to be indeed significantly slower than <code>printf</code> in C. But <b>a)</b> it&#39;s pretty silly to be concerned about the performance of <i>printing</i>, because if you have so many numbers that it would matter then <a href=\"https://what-if.xkcd.com/59/\" rel=\"nofollow noreferrer\">don&#39;t print them</a>! (Always use binary formats for large data amounts.) ..."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1563636142, "post_id": 57124974, "comment_id": 100768974, "body": "...So saying \u201cHaskell is slow\u201d because of this is extremely unfair, it&#39;s just that <i>a particular task where it shouldn&#39;t really matter is slow</i>. <b>b)</b> it&#39;s not <i>so darn slow</i>. A factor 5, many languages can only dream of getting that close to C \u2013 in tasks where performance really <i>would</i> matter! Reasonably well-written Haskell is as a rule of thumb a factor 2 slower than C; sometimes even a simple version is close to C and with some effort it&#39;s almost always possible to achieve that."}, {"owner": {"reputation": 1155, "user_id": 962394, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/97268298c366b07e5556567639105ee1?s=128&d=identicon&r=PG", "display_name": "codeshot", "link": "https://stackoverflow.com/users/962394/codeshot"}, "edited": false, "score": 1, "creation_date": 1563636875, "post_id": 57124974, "comment_id": 100769164, "body": "I should point out that both programs had the same economic cost to write and similar costs to understand so the &quot;code you wrote is slow&quot; comment isn&#39;t very informative."}, {"owner": {"reputation": 1155, "user_id": 962394, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/97268298c366b07e5556567639105ee1?s=128&d=identicon&r=PG", "display_name": "codeshot", "link": "https://stackoverflow.com/users/962394/codeshot"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1563637125, "post_id": 57124974, "comment_id": 100769220, "body": "@duplode a computation without I/O is pointless. We could replace it with a heating element and a single print of the final number (which I was told back in 2001 Haskell would do and it was a problem for the debian shootout because it ran all the examples at compile time - but now I come to learn it, it no longer has any natural decent performance at all)."}, {"owner": {"reputation": 1155, "user_id": 962394, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/97268298c366b07e5556567639105ee1?s=128&d=identicon&r=PG", "display_name": "codeshot", "link": "https://stackoverflow.com/users/962394/codeshot"}, "edited": false, "score": 0, "creation_date": 1563637475, "post_id": 57124974, "comment_id": 100769325, "body": "If you read the question you&#39;ll know more, this question is easier to read than others like <a href=\"https://stackoverflow.com/questions/35027952/why-is-haskell-ghc-so-darn-fast\" title=\"why is haskell ghc so darn fast\">stackoverflow.com/questions/35027952/&hellip;</a>"}, {"owner": {"reputation": 1155, "user_id": 962394, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/97268298c366b07e5556567639105ee1?s=128&d=identicon&r=PG", "display_name": "codeshot", "link": "https://stackoverflow.com/users/962394/codeshot"}, "edited": false, "score": 0, "creation_date": 1563637627, "post_id": 57124974, "comment_id": 100769356, "body": "@ThomasM.DuBuisson, this question doesn&#39;t involve a strict function saving up a stack of operations."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1563641903, "post_id": 57124974, "comment_id": 100770354, "body": "@codeshot (1) My point is that your benchmark is, in principle, measuring two things rather than one. If you actually want to measure the performance of <code>print</code>ing ten million elements to the console, your results are meaningful; think of my comment as an attempt to clarify whether that is really the case. (2) There are ways to find out whether the optimisation you describe actually happens: you can check the Core (the intermediate code generated by the compiler), or simply check how the time spent varies with the length of the list."}, {"owner": {"reputation": 1155, "user_id": 962394, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/97268298c366b07e5556567639105ee1?s=128&d=identicon&r=PG", "display_name": "codeshot", "link": "https://stackoverflow.com/users/962394/codeshot"}, "edited": false, "score": 0, "creation_date": 1563642193, "post_id": 57124974, "comment_id": 100770432, "body": "By separate the computation from the I/O do you mean I should do (1 &lt;$ [1..10000000]) so no numbers are computed? It helps the speed a bit, but doesn&#39;t answer the question - I suppose that&#39;s why it&#39;s a comment and not an answer."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1563645904, "post_id": 57124974, "comment_id": 100771375, "body": "@codeshot If you just want to print ten million times you don&#39;t need a list: <code>replicate 10000000 (print 1)</code> will do. In any case, it won&#39;t matter, as you note, because the I/O dwarfs the iteration from <code>1</code> to <code>10000000</code>; furthermore, even not considering that, with your usage pattern the performance cost of using a list should be entirely negligible. (What I originally meant was that the I/O would be a problem if you were trying to benchmark the iteration, but by now it seems clear your question isn&#39;t about that.)"}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1563644835, "post_id": 57127099, "comment_id": 100771116, "body": "Another thing that made a big difference in my testing: constructing the full string with newlines and all and then just calling <code>putStr(Ln)</code> once for the whole <code>String</code> instead of once per line. It seems there&#39;s a bunch of front-matter in <code>putStrLn</code> before it gets to actually dumping characters to the output buffer. It may be that <code>putBSLn</code> has a similar issue and you could get a second cheap win -- although unless you&#39;re using lazy bytestrings the memory cost may be something to consider!"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1563652923, "post_id": 57127099, "comment_id": 100772789, "body": "Another thing to consider is the RTS setup time. Perhaps even <code>main = pure ()</code> takes some time only because the RTS needs to setup GC, etc. (did not test this, though)."}, {"owner": {"reputation": 1155, "user_id": 962394, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/97268298c366b07e5556567639105ee1?s=128&d=identicon&r=PG", "display_name": "codeshot", "link": "https://stackoverflow.com/users/962394/codeshot"}, "edited": false, "score": 0, "creation_date": 1563662445, "post_id": 57127099, "comment_id": 100774628, "body": "main = pure () was reported at 0.00 elapsed. So basic RTS setup isn&#39;t an issue."}, {"owner": {"reputation": 1155, "user_id": 962394, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/97268298c366b07e5556567639105ee1?s=128&d=identicon&r=PG", "display_name": "codeshot", "link": "https://stackoverflow.com/users/962394/codeshot"}, "edited": false, "score": 0, "creation_date": 1563700100, "post_id": 57127099, "comment_id": 100779725, "body": "Thanks for this, but a key part of the question is missing: How does one figure out the cause of performance problems like this (and the remaining 2/5 of a second). One needs to understand what to improve next or it has to be decidable that no improvement is going to be practical."}], "tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": false, "score": 8, "last_activity_date": 1563666806, "last_edit_date": 1563666806, "creation_date": 1563644051, "answer_id": 57127099, "question_id": 57124974, "link": "https://stackoverflow.com/questions/57124974/why-is-this-simple-haskell-program-so-slow/57127099#57127099", "title": "Why is this simple Haskell program so slow?", "body": "<p>On my system your Haskell code takes about 3.2 seconds.</p>\n\n<p>N.B. your C code takes...</p>\n\n<pre><code>time ./fooc | tail -n1\nld: warning: directory not found for option '-L/opt/local/lib'\n10000000\n./fooc  0.92s user 0.03s system 33% cpu 2.863 total\ntail -n1  2.85s user 0.01s system 99% cpu 2.865 total\n</code></pre>\n\n<p>So do note the difference of <code>time a | b</code> and what that means vs <code>time (a | b)</code>.</p>\n\n<p>Haskell is slow in part because (some of this is hypothesis)</p>\n\n<ol>\n<li>By default <code>print</code> and the underlying <code>putStrLn</code> use <code>String</code> which is a linked list of characters.</li>\n<li>UTF encoding</li>\n<li>RTS differences</li>\n</ol>\n\n<p>For 1, the packed variant using Text doesn't perform much differently, perhaps due to issue 2.</p>\n\n<p>For 2, the ByteString variant (packed bytes instead of characters) is more representative of what your C program is doing:</p>\n\n<pre><code>-- Using functions from the Relude package\nmain = traverse_ putBSLn (show &lt;$&gt; [(1::Int)..10000000])\n</code></pre>\n\n<p>Results in</p>\n\n<pre><code>10000000\n./foo  1.55s user 0.08s system 56% cpu 2.904 total\n</code></pre>\n\n<p>So the CPU time is closer to your C program, leading me to hypothesize that this difference is largely about the unnecessary UTF8 handling built into the routines you use by default in Haskell's prelude.</p>\n\n<p>Dead-ends:</p>\n\n<ul>\n<li>I tried <code>NoBuffering</code> and large <code>BlockBuffering</code> with no luck.</li>\n<li>Constructing a large bytestring and printing with a single call wasn't any better (lazy or strict bytestrings).</li>\n<li>Printing via <code>Text</code> instead of <code>String</code> gave only the barest improvement.</li>\n<li>Rendering directly to ByteString instead of by packing values <code>show</code>ed into Strings.  This could be a win, I expect, if done well.</li>\n</ul>\n\n<p>EDIT: I can't believe I forgot about Builder, which is an optimized way to build bytestrings and, in some cases, it fuses well to reduce allocations.  Builder is the underpinning of the above example I already showed but using it directly allows some manual optimization.</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\nimport Data.ByteString.Builder\nimport System.IO (stdout)\nimport Data.Foldable\n\nmain :: IO ()\nmain = do\n    traverse_ (hPutBuilder stdout . (&lt;&gt;\"\\n\") . intDec) [(1::Int)..10000000]\n</code></pre>\n\n<p>Performing at:</p>\n\n<pre><code>./foo  1.05s user 0.13s system 38% cpu 3.048 total\ntail -n1  3.02s user 0.01s system 99% cpu 3.047 total\n</code></pre>\n\n<p>And indeed this is more efficient than the prior, many separate, calls to hPut because as hPutBuilder says:</p>\n\n<blockquote>\n  <p>This function is more efficient than hPut . toLazyByteString because in many cases no buffer allocation has to be done. Moreover, the results of several executions of short Builders are concatenated in the Handles buffer, therefore avoiding unnecessary buffer flushes.</p>\n</blockquote>\n\n<p>So I should add:  4. Haskell was slow in this case because sometimes computations do not fuse and you end up with excess allocation, which isn't free.</p>\n"}], "owner": {"reputation": 1155, "user_id": 962394, "user_type": "registered", "accept_rate": 42, "profile_image": "https://www.gravatar.com/avatar/97268298c366b07e5556567639105ee1?s=128&d=identicon&r=PG", "display_name": "codeshot", "link": "https://stackoverflow.com/users/962394/codeshot"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 297, "favorite_count": 1, "closed_date": 1563672233, "answer_count": 1, "score": 2, "last_activity_date": 1563700176, "creation_date": 1563627656, "last_edit_date": 1563700176, "question_id": 57124974, "link": "https://stackoverflow.com/questions/57124974/why-is-this-simple-haskell-program-so-slow", "closed_reason": "Duplicate", "title": "Why is this simple Haskell program so slow?", "body": "<p>In this trivial program to print all the numbers from 1 to 10000000, a Haskell version and a C version, why is the Haskell one so slow and <strong>what commands help to learn how to improve the Haskell program's performance</strong>?</p>\n\n<p>Below is a report containing all the details necessary to reproduce my exciting event, the sources are printed when making the report including the source of the Makefile:</p>\n\n<pre><code>$ make -B report\ncat Foo.hs\nimport Data.Foldable\nmain = traverse_ print [1..10000000]\ncat Fooc.c\n#include &lt;stdio.h&gt;\n\nint main()\n{\n    for (int n = 0; n &lt; 10000000; ++n)\n    {\n        printf(\"%d\\n\", n+1);\n    }\n}\nghc -O3 Foo.hs -o Foo\ntime ./Foo | tail -n1\n3.45user 0.03system 0:03.49elapsed 99%CPU (0avgtext+0avgdata 4092maxresident)k\n0inputs+0outputs (0major+290minor)pagefaults 0swaps\n10000000\ncc -O3    Fooc.c   -o Fooc\ntime ./Fooc | tail -n1\n0.63user 0.02system 0:00.66elapsed 99%CPU (0avgtext+0avgdata 1468maxresident)k\n0inputs+0outputs (0major+63minor)pagefaults 0swaps\n10000000\ncat Makefile\n.PHONY: printFoo printFooc printMakefile\nprintFoo: Foo.hs\n    cat $^\n\nprintFooc: Fooc.c\n    cat $^\n\nprintMakefile: Makefile\n    cat $^\n\nFooc: CFLAGS=-O3\nFooc: Fooc.c\nFoo: Foo.hs\n    ghc -O3 $^ -o $@\n\n.PHONY: timeFoo timeFooc\ntimeFoo: Foo\n    time ./$^ | tail -n1\ntimeFooc: Fooc\n    time ./$^ | tail -n1\n\n.PHONY: report\nreport: printFoo printFooc timeFoo timeFooc printMakefile\n</code></pre>\n"}, {"tags": ["haskell", "types"], "answers": [{"comments": [{"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 1, "creation_date": 1563621302, "post_id": 57123987, "comment_id": 100765731, "body": "I thought <code>RankNTypes</code> is preferred over <code>Rank2Types</code> these days."}, {"owner": {"reputation": 462, "user_id": 7550201, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QXLJQ.png?s=128&g=1", "display_name": "Jens", "link": "https://stackoverflow.com/users/7550201/jens"}, "edited": false, "score": 0, "creation_date": 1563642272, "post_id": 57123987, "comment_id": 100770453, "body": "@chi, that was a <b>very</b> useful answer that enabled me to understand the problem.  Thank you! I have updated the question with my new found knowledge for others to find :-)"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 5, "last_activity_date": 1563620368, "last_edit_date": 1563620368, "creation_date": 1563619563, "answer_id": 57123987, "question_id": 57123449, "link": "https://stackoverflow.com/questions/57123449/why-is-this-unexpected-type-returned-by-a-higher-order-function/57123987#57123987", "title": "Why is this (unexpected) type returned by a higher order function?", "body": "<blockquote>\n  <p>Why is the signature of <code>isAlive</code> not <code>(t1 -&gt; a -&gt; t -&gt; Bool) -&gt; Bool</code>?</p>\n</blockquote>\n\n<pre><code>isAlive r = r (\\_ health _ -&gt; health &gt; 0)\n</code></pre>\n\n<p>Let's start form the lambda. I think you can see that</p>\n\n<pre><code>(\\_ health _ -&gt; health &gt; 0) :: a -&gt; b -&gt; c -&gt; Bool\n</code></pre>\n\n<p>where <code>b</code> must be both of class <code>Ord</code> (for <code>&gt;</code>) and <code>Num</code> (for <code>0</code>)</p>\n\n<p>Since the argument <code>r</code> takes as input the lambda, it must be a function taking as input the lambda:</p>\n\n<pre><code>r :: (a -&gt; b -&gt; c -&gt; Bool) -&gt; result\n</code></pre>\n\n<p>Finally, <code>isAlive</code> takes <code>r</code> as argument, and returns the same result as <code>r</code>. Hence:</p>\n\n<pre><code>isAlive :: ((a -&gt; b -&gt; c -&gt; Bool) -&gt; result) -&gt; result\n</code></pre>\n\n<p>Adding the constraints and renaming the type variables a bit, we get GHCi's type:</p>\n\n<pre><code>isAlive :: (Ord a, Num a) =&gt; ((t1 -&gt; a -&gt; t -&gt; Bool) -&gt; t2) -&gt; t2\n</code></pre>\n\n<p>Note that this type is more general than this:</p>\n\n<pre><code>isAlive :: (Ord a, Num a) =&gt; ((t1 -&gt; a -&gt; t -&gt; Bool) -&gt; Bool) -&gt; Bool\n</code></pre>\n\n<p>which roughly means \"give me a <code>Bool</code>-generating robot, and I'll give you a <code>Bool</code>\".</p>\n\n<blockquote>\n  <p>What is wrong with my <code>fight</code> function?</p>\n</blockquote>\n\n<pre><code>fight attacker defender = if isAlive attacker then\n                 attacker\n              else\n                 defender\n</code></pre>\n\n<p>This is tricky. The code above calls <code>isAlive attacker</code> and that forces <code>attacker</code> to have type <code>(a -&gt; b -&gt; c -&gt; Bool) -&gt; result</code>. Then, <code>result</code> must be <code>Bool</code> because it is used in the <code>if</code>. Moreover, this makes <code>defender</code> to have the same type as <code>attacker</code> since both branches of <code>if then else</code> must return values of the same type.</p>\n\n<p>Hence, the output of <code>fight</code> must be a \"<code>Bool</code>-generating robot\", i.e. a robot which is no longer able to generate anything else.</p>\n\n<p>This can be fixed using rank-2 types, but if you are a beginner I am not recommending to try this right now. This exercise looks quite advanced for a beginner, since there are a lot of lambdas being passed around. </p>\n\n<p>More technically, you are passing Church-encoded tuples everywhere, and that will fully work only with rank-2 polymorphism. Passing first-order tuples would be much simpler.</p>\n\n<p>Anyway, here's a possible fix. This prints <code>Klaus</code> as the winner.</p>\n\n<pre><code>{-# LANGUAGE Rank2Types #-}\n\nisAlive :: (Ord h, Num h) =&gt; ((n -&gt; h -&gt; a -&gt; Bool) -&gt; Bool) -&gt; Bool\nisAlive r = r (\\_ health _ -&gt; health &gt; 0)\n\n-- A rank-2 polymorphic robot, isomorphic to (n, h, a)\ntype Robot n h a = forall result . (n -&gt; h -&gt; a -&gt; result) -&gt; result\n\nfight :: (Ord h, Num h) =&gt; Robot n h a -&gt; Robot n h a -&gt; Robot n h a\nfight attacker defender = if isAlive attacker\n   then attacker\n   else defender\n\nrobot :: n -&gt; h -&gt; a -&gt; Robot n h a\nrobot name health attack = \\message -&gt; message name health attack\n\nprintRobot :: (Show n, Show h, Show a) =&gt; ((n -&gt; h -&gt; a -&gt; String) -&gt; String) -&gt; String\nprintRobot r = r (\\name health  attack -&gt; \n   \"Name: \" ++ show name ++\n   \", health: \" ++ show health ++\n   \", attack: \" ++ show attack)\n\nklaus, peter :: Robot String Int Int\nklaus = robot \"Klaus\" 50 5\npeter = robot \"Peter\" 60 7\n\nmain :: IO ()\nmain = do\n   let victor = fight klaus peter\n   putStrLn (printRobot victor)\n</code></pre>\n\n<h1>A final note</h1>\n\n<p>I would recommend you add types to each one of your top-level functions. While Haskell can infer those, it is very convenient for the programmer to have types at hand. Further, if you write the type you intend to have, GHC will check it. It often happens that GHC infers a type which was not intended by the programmer, making the code looks fine when it is not. This usually then causes puzzling type errors later on in the program, when the inferred type mismatches with the rest of the code.</p>\n"}], "owner": {"reputation": 462, "user_id": 7550201, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/QXLJQ.png?s=128&g=1", "display_name": "Jens", "link": "https://stackoverflow.com/users/7550201/jens"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 97, "favorite_count": 0, "accepted_answer_id": 57123987, "answer_count": 1, "score": 6, "last_activity_date": 1563662580, "creation_date": 1563615291, "last_edit_date": 1563662580, "question_id": 57123449, "link": "https://stackoverflow.com/questions/57123449/why-is-this-unexpected-type-returned-by-a-higher-order-function", "title": "Why is this (unexpected) type returned by a higher order function?", "body": "<h1>Confused by haskell types [*]</h1>\n\n<p>I am beginning to learn haskell and am confused by the result of haskells type inference (see example below). Unfortunately I am not fluent enough in haskell to formulate the <em>real</em> question, so I have to work by example. </p>\n\n<p><em>[*] As soon as I know the real question, I'll update the caption..</em></p>\n\n<h2>My goal</h2>\n\n<p>I am following the <a href=\"https://www.manning.com/books/get-programming-with-haskell\" rel=\"nofollow noreferrer\">Get programming with haskell</a> book. In lesson 10 a way to 'hold state' is shown:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>\n-- The result of calling robot (`r`) is a function that takes \n-- another function (`message` as argument). The parameters \n-- passed to the initial call to `robot` are treated \n-- as state and can be passed to `message`.\n-- \nrobot name health attack = \\message -&gt; message name health attack\n\ngetName r = r (\\name _ _ -&gt; name)\n\nklaus = robot \"Klaus\" 50 5\n\n*Main&gt; getName klaus\n\"Klaus\"\n</code></pre>\n\n<p>I think I understood the gist of it and tried to create a little robot fight. In the end I wanted something like this:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>klaus = robot \"Klaus\" 50 5\npeter = robot \"Peter\" 50 5\n\nvictor = fight klaus peter\n\ngetName victor\n-- should be \"Klaus\"\n</code></pre>\n\n<h2>My robots</h2>\n\n<p>This is the implementation I wrote:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>robot name health attack = \\message -&gt; message name health attack\n\nisAlive r = r (\\_ health _ -&gt; health &gt; 0)\n\nfight attacker defender = if isAlive attacker then\n                             attacker\n                          else\n                             defender\n\n\n\nprintRobot r = r (\\name health  attack -&gt; \"Name: \" ++ (show name) ++\", health: \" ++ (show health) ++ \", attack: \" ++ (show attack))\n\nklaus = robot \"Klaus\" 50 5\npeter = robot \"Peter\" 60 7\n</code></pre>\n\n<h2>Experimenting in ghci</h2>\n\n<p>The code loads in ghci (<code>:l robots.hs</code>). When I experiment with my code I found out that things don't exactly work out as planned: The type system and I seem to have different ideas of what the resulting types look like.</p>\n\n<p><strong>Please point out where my reasoning is wrong and help me understand the error of my ways :-)</strong></p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>--\n-- in ghci\n--\n\n*Main&gt; :t klaus\n-- I understood: \n-- klaus is a function. I have to pass a function that\n-- takes name, health, and attack as parameters and \n-- returns something of type \"t\". \n--\n-- A result of same type \"t\" is then returned by calling klaus\nklaus :: ([Char] -&gt; Integer -&gt; Integer -&gt; t) -&gt; t\n\n-- check the \"isAlive\" function:\n-- As expected, it returns a Bool\n*Main&gt; :t isAlive klaus\nisAlive klaus :: Bool\n\n-- This is also expected as klaus has health &gt; 0\n*Main&gt; isAlive klaus\nTrue\n\n-- Inspecting the type of `isAlive` confuses me:\n--\n-- I do understand:\n--\n-- The first parameter is my \"robot\". It has to accept a function\n-- that returns a boolean (basically the isAlive logic):\n--\n-- (t1 -&gt; a -&gt; t -&gt; Bool) \n-- - t1: name, ignored\n-- - a: health, needs to be a comparable number \n-- - t: attack value, ignored\n-- - returns boolean value if the health is &gt;0\n--\n-- What I do NOT understand is, why doesn't it have the following type\n-- isAlive :: (Ord a, Num a) =&gt; (t1 -&gt; a -&gt; t -&gt; Bool) -&gt; Bool\n*Main&gt; :t isAlive\nisAlive :: (Ord a, Num a) =&gt; ((t1 -&gt; a -&gt; t -&gt; Bool) -&gt; t2) -&gt; t2\n\n-- The signature of `isAlive` bites me in my simplified \n-- fight club:\n-- If the attacker is alive,  the attacker wins, else \n-- the defender wins:\nfight attacker defender = if isAlive attacker then\n                 attacker\n              else\n                 defender\n\n-- I would expect the \"fight\" function to return a \"robot\".\n-- But it does not:\n*Main&gt; victor = fight klaus peter\n*Main&gt; :t victor\nvictor :: ([Char] -&gt; Integer -&gt; Integer -&gt; Bool) -&gt; Bool\n\n*Main&gt; printRobot klaus\n\"Name: \\\"Klaus\\\", health: 50, attack: 5\"\n*Main&gt; printRobot peter\n\"Name: \\\"Peter\\\", health: 60, attack: 7\"\n*Main&gt; printRobot victor \n\n&lt;interactive&gt;:25:12: error:\n    \u2022 Couldn't match type \u2018[Char]\u2019 with \u2018Bool\u2019\n      Expected type: ([Char] -&gt; Integer -&gt; Integer -&gt; [Char]) -&gt; Bool\n        Actual type: ([Char] -&gt; Integer -&gt; Integer -&gt; Bool) -&gt; Bool\n    \u2022 In the first argument of \u2018printRobot\u2019, namely \u2018victor\u2019\n      In the expression: printRobot victor\n      In an equation for \u2018it\u2019: it = printRobot victor\n\n</code></pre>\n\n<h2>The questions</h2>\n\n<ul>\n<li>Why is the signature of <code>isAlive</code> not <code>(t1 -&gt; a -&gt; t -&gt; Bool) -&gt; Bool</code>?</li>\n<li>What is wrong with my <code>fight</code> function?</li>\n</ul>\n\n<h1>What I have learned so far</h1>\n\n<p>With my current understanding I cannot <em>fix</em> the problem, but now (thanks to the great answer of @chi) I can <em>understand</em> the problem.</p>\n\n<p>For all the other beginners that stumble into the same pitfall, here is my reasoning with a simplified version of the problem:</p>\n\n<ul>\n<li>I build a closure holding two strings <code>s1</code>, <code>s2</code> and an int <code>i1</code> via <code>buildSSIclosure</code>. By \"sending a message\" (passing a function) into the closure I can access the \"state\" of the closure.</li>\n<li>I can write simple accessors <code>getS1</code>, <code>getS2</code>, and <code>getI1</code></li>\n<li>I want to write a function that takes an <code>ssiClosure</code> and gets both the <code>Int</code>, and a <code>[Char]</code> property via the accessors.</li>\n</ul>\n\n<pre class=\"lang-hs prettyprint-override\"><code>-- IMPORTANT: the return value `t` is not bound to a specific type\nbuildSSIclosure :: [Char] -&gt; [Char] -&gt; Int -&gt; ([Char] -&gt; [Char] -&gt; Int -&gt; t) -&gt; t\nbuildSSIclosure s1 s2 i1 = (\\message -&gt; message s1 s2 i1)\n</code></pre>\n\n<p>The definition of <code>buildSSIclosure</code> had <code>t</code> unbound. When any of the accessors is used <em>the <code>t</code> of the <code>ssiClosure</code> instance is bound to a type</em>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>getS1 :: (([Char] -&gt; [Char] -&gt; Int -&gt; [Char]) -&gt; [Char]) -&gt; [Char]\ngetS2 :: (([Char] -&gt; [Char] -&gt; Int -&gt; [Char]) -&gt; [Char]) -&gt; [Char]\ngetI1 :: (([Char] -&gt; [Char] -&gt; Int -&gt; Int) -&gt; Int) -&gt; Int\n\n-- `t` is bound to [Char]\ngetS1 ssiClosure = ssiClosure (\\ s1 _ _ -&gt; s1)\n\n-- `t` is bound to [Char]\ngetS2 ssiClosure = ssiClosure (\\ _ s2 _ -&gt; s2)\n\n-- `t` is bound to int\ngetI1 ssiClosure = ssiClosure (\\ _ _ i1 -&gt; i1)\n</code></pre>\n\n<p>I directly access both parameters of the call to the lambda function\nThis works and will bind <code>t</code> to <code>[Char]</code>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>getS1I1_direct ssiClosure = ssiClosure (\\ s1 _ i1 -&gt; s1 ++ \", \" ++ show i1)\n</code></pre>\n\n<h2>Call two string accessors</h2>\n\n<p>I can access both <code>S1</code> and <code>S2</code> via the accessors.\nThis works because both <code>getS1</code>, and <code>getS2</code> bind <code>t</code> from <code>ssiClosure</code> to <code>[Char]</code>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>getS1S2_indirect ssiClosure = show (getS1 ssiClosure) ++ \", \" ++ show(getS2 ssiClosure)\n</code></pre>\n\n<h2>Access Char and Int</h2>\n\n<p>The next step is to access the int, and the string properties. That will not even compile!</p>\n\n<p>Here is my understanding:</p>\n\n<ul>\n<li>Calling <code>getS1</code> needs <code>t</code> from the closure to be bound to <code>[Char]</code></li>\n<li>Calling <code>getI1</code> needs <code>t</code> from the closure to be bound to <code>Int</code></li>\n</ul>\n\n<p>It cannot be bound to both, so the compiler tells me so:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>getS1I1_indirect ssiClosure = show(getS1 ssiClosure) ++ \", \"  ++ show(getI1 ssiClosure)\n\n    \u2022 Couldn't match type \u2018[Char]\u2019 with \u2018Int\u2019\n      Expected type: ([Char] -&gt; [Char] -&gt; Int -&gt; Int) -&gt; Int\n        Actual type: ([Char] -&gt; [Char] -&gt; Int -&gt; [Char]) -&gt; [Char]\n    \u2022 In the first argument of \u2018getI1\u2019, namely \u2018ssiClosure\u2019\n      In the first argument of \u2018show\u2019, namely \u2018(getI1 ssiClosure)\u2019\n      In the second argument of \u2018(++)\u2019, namely \u2018show (getI1 ssiClosure)\u2019\n</code></pre>\n\n<p>I still don't have to skill to identify the problem by looking at the error. But there is hope ;-)</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 4, "creation_date": 1563566177, "post_id": 57118927, "comment_id": 100756232, "body": "Locally this works. What ghc version do you use?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 100768, "user_id": 1899640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/47374ccb28e4b0d2454b64f7b975bc66?s=128&d=identicon&r=PG", "display_name": "that other guy", "link": "https://stackoverflow.com/users/1899640/that-other-guy"}, "edited": false, "score": 1, "creation_date": 1563566686, "post_id": 57118927, "comment_id": 100756432, "body": "@thatotherguy not really; prior to GHC-8 the <code>Data.Semigroup</code> module was not in the <code>base</code> package but that would give a different error. With the <code>semigroups</code> package installed, the behaviour should be the same."}, {"owner": {"reputation": 143, "user_id": 5862529, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcf15674256a1414fd852cd3d82461ec?s=128&d=identicon&r=PG&f=1", "display_name": "Ewan Brown", "link": "https://stackoverflow.com/users/5862529/ewan-brown"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1563568487, "post_id": 57118927, "comment_id": 100757036, "body": "@WillemVanOnsem I&#39;m currently running 7.10.3. I&#39;ll try updating it?"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 5, "creation_date": 1563569481, "post_id": 57118927, "comment_id": 100757327, "body": "Eeep, yeah that&#39;s ancient.  GHC isn&#39;t like gcc, the open source packages and community assume you&#39;re within 3 releases of the latest."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1563569729, "post_id": 57118927, "comment_id": 100757398, "body": "@ThomasM.DuBuisson but why does it give that error message and not <code>Could not find module \u2018Data.Semigroup\u2019</code>? Or if <code>semigroups</code> is installed, why does it not just work?"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1563569948, "post_id": 57118927, "comment_id": 100757447, "body": "@leftaroundabout Not sure why you&#39;d ask me but... likely because it <i>could</i> find the module Data.Semigroup.  Don&#39;t forget <code>Data.Semigroup</code> was a module in non-base packages for a while before base finally tamed things."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1563571044, "post_id": 57118927, "comment_id": 100757731, "body": "@ThomasM.DuBuisson of course, but then the import should have worked just fine."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1563573396, "post_id": 57118927, "comment_id": 100758334, "body": "@leftaroundabout Not at all, the <code>semigroup</code> package has a module <code>Data.Semigroup</code> but it does not have export a symbol <code>(&lt;&gt;)</code>.  It probably isn&#39;t alone."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1563588654, "post_id": 57118927, "comment_id": 100760619, "body": "@ThomasM.DuBuisson The <code>semigroup</code> package doesn&#39;t exist on Hackage as far as I can tell. The <code>semigroups</code> package does exist, but for every version I could be bothered to check, its <code>Data.Semigroup</code>, if it exists at all (CPP is used to prevent it from existing on newer GHCs), exports the symbol <code>(&lt;&gt;)</code>. So what gives?"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1563590149, "post_id": 57118927, "comment_id": 100760769, "body": "@danielwagner what gives? Searching is hard, let&#39;s go linking: <a href=\"http://hackage.haskell.org/package/Semigroup-0.0.7/docs/Data-Semigroup.html\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/Semigroup-0.0.7/docs/&hellip;</a>"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1563599904, "post_id": 57118927, "comment_id": 100761759, "body": "@ThomasM.DuBuisson Phew! Nice find."}, {"owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1563605200, "post_id": 57118927, "comment_id": 100762546, "body": "@ThomasM.DuBuisson I don&#39;t know how you found that archaeological piece of documentation, but I really would like to read that comment before... hahaha, I was losing my mind trying to find in which version of ghc I could reproduce the error"}, {"owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1563606001, "post_id": 57118927, "comment_id": 100762709, "body": "@leftaroundabout it turns out that the ghc version that is using should be <code>0.0.7</code>, is the only explanaition"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "edited": false, "score": 0, "creation_date": 1563606254, "post_id": 57118927, "comment_id": 100762754, "body": "@DamianLattenero actually more like GHC-6.12 / base-4.2 (from 2010, which is the time of the <code>Semigroup</code> package). Still, I&#39;d say \u201carchaeological document\u201d is a fair description! Do you want to integrate this in your (already great) answer, or should I write it up as Community Wiki?"}, {"owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1563606499, "post_id": 57118927, "comment_id": 100762798, "body": "@leftaroundabout fantastic! Yes I can add it of course! And can you also write a Community wiki? I don&#39;t know if it can be both things, I don&#39;t have much knowledge about community wiki to be honest"}, {"owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1563608971, "post_id": 57118927, "comment_id": 100763247, "body": "@WillemVanOnsem locally works depending on the ghc version, your question is the key in this issue!"}], "answers": [{"tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": true, "score": 8, "last_activity_date": 1563606823, "last_edit_date": 1563606823, "creation_date": 1563568216, "answer_id": 57119287, "question_id": 57118927, "link": "https://stackoverflow.com/questions/57118927/why-is-ghc-not-importing-semigroup/57119287#57119287", "title": "Why is GHC not importing Semigroup ((&lt;&gt;))", "body": "<p><strong>Final Edit</strong></p>\n\n<blockquote>\n  <p>Is there perhaps something wrong with my version of GHC?</p>\n</blockquote>\n\n<p>Absolutely yes, there is something wrong, is too old, to be precise:</p>\n\n<p><code>GHC-6.12 / base-4.2</code> (from 2010, which is the time of the Semigroup package) -- thanks so much @leftaroundabout and @Thomas M. DuBuisson for the contribution!</p>\n\n<p>And that package has not the <code>(Semigroup ((&lt;&gt;)))</code> function. Hence the error you see.</p>\n\n<blockquote>\n  <p>Edit 2</p>\n</blockquote>\n\n<p>After comments, I tried to reproduce the OP environment to reproduce the error too, I installed in stack the ghc version <code>7.10.3</code>, this is how looks the stack.yaml file:</p>\n\n<pre><code>resolver: lts-6.27 \nsystem-ghc: false\npackages:\n- .\n</code></pre>\n\n<p>And after ruining a base stack project with a Main.hs file containing:</p>\n\n<pre><code>module Main where\n\nimport Data.Semigroup\n\nmain :: IO ()\nmain = do\n  putStrLn \"Hello\"\n  putStrLn \"World\"\n</code></pre>\n\n<p>the error I got is</p>\n\n<pre><code>/home/damian/test-semigroup/app/Main.hs:3:8:\n</code></pre>\n\n<blockquote>\n  <p>Could not find module \u2018Data.Semigroup\u2019</p>\n</blockquote>\n\n<pre><code>Use -v to see a list of the files searched for.    \n--  While building package test-semigroup-0.1.0.0 using:\n      /home/damian/.stack/setup-exe-cache/x86_64-linux/Cabal-simple_mPHDZzAJ_1.22.5.0_ghc-7.10.3 --builddir=.stack-work/dist/x86_64-linux/Cabal-1.22.5.0 build lib:test-semigroup exe:test-semigroup-exe --ghc-options \"\"\n    Process exited with code: ExitFailure 1\n</code></pre>\n\n<p>The same happend with older versions:</p>\n\n<ul>\n<li>LTS 3.22 for ghc-7.10.2, </li>\n</ul>\n\n<p>I couldt try with:</p>\n\n<ul>\n<li>LTS 2.22 for ghc-7.8.4, published 4 years ago\nBecause they where to old to run with cabal</li>\n</ul>\n\n<p>and\n - LTS 0.7 for ghc-7.8.3, published 5 years ago\nBecause they I cannot install it in a 64bit OS...</p>\n\n<p>So, to be absolutely sure I tried with all the newer LTS versions one by one, yes... one by one, It took some time but worth the shot:</p>\n\n<ul>\n<li>LTS 13.29 for ghc-8.6.5, published today</li>\n<li>LTS 13.19 for ghc-8.6.4, published 3 months ago</li>\n<li>LTS 13.11 for ghc-8.6.3, published 4 months ago</li>\n<li>LTS 12.26 for ghc-8.4.4, published 7 months ago</li>\n<li>LTS 12.14 for ghc-8.4.3, published 9 months ago</li>\n<li>LTS 11.22 for ghc-8.2.2, published 11 months ago</li>\n<li>LTS 9.21  for ghc-8.0.2, published a year ago</li>\n<li>LTS 7.24  for ghc-8.0.1, published 2 years ago</li>\n</ul>\n\n<p>None of those ghc version could reproduce your log error, so I thought to try a typo maybe:</p>\n\n<pre><code>import Data.Semigroup (Semigroup ((&lt;$&gt;)))\n</code></pre>\n\n<p>or</p>\n\n<pre><code>import Data.Semigroup (Semigroup ((=&gt;&gt;)))\n</code></pre>\n\n<p>And those gave me your error:</p>\n\n<p>/home/damian/test-semigroup/app/Main.hs:3:24: error:</p>\n\n<blockquote>\n  <p><strong>Module \u2018Data.Semigroup\u2019 does not export \u2018Semigroup(())\u2019</strong></p>\n</blockquote>\n\n<ol>\n<li>That means, that the <code>Data.Semigroup</code> module exists in your <code>ghc</code></li>\n<li><code>Semigroup((&lt;&gt;))</code> is not part of that module</li>\n</ol>\n\n<p>Meaning, you must have one of the oldest <code>ghc</code> versions...</p>\n\n<p>So, I just can think that you can try:</p>\n\n<ul>\n<li>Reinstall your ghc, and try it to run it again.</li>\n<li>Please, consider using some tool such as <a href=\"https://docs.haskellstack.org/en/stable/README/\" rel=\"nofollow noreferrer\">stack</a> </li>\n<li>Check your code, look out for some typos or something odd</li>\n</ul>\n\n<p>I stand that my first answer was close though:</p>\n\n<blockquote>\n  <p>Edit 1</p>\n</blockquote>\n\n<p>It has been added in <strong>ghc version <code>8.0.1</code></strong></p>\n\n<p>A quick search in hoogle always helps:</p>\n\n<p><a href=\"https://hoogle.haskell.org/?hoogle=%3C%3E&amp;scope=set%3Astackage\" rel=\"nofollow noreferrer\">Here</a> first link is semigroup &lt;>, <code>(&lt;&gt;) :: Semigroup a =&gt; a -&gt; a -&gt; a</code></p>\n\n<p>and it says:</p>\n\n<p><a href=\"https://i.stack.imgur.com/fpwEA.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/fpwEA.png\" alt=\"enter image description here\"></a></p>\n\n<p>This versions is able since May 2016, and it ghc version is <code>8.0.1</code>.</p>\n\n<p>To see all versions of ghc with its base versions:</p>\n\n<p><a href=\"https://wiki.haskell.org/Base_package\" rel=\"nofollow noreferrer\">https://wiki.haskell.org/Base_package</a></p>\n"}, {"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 4, "last_activity_date": 1563607524, "last_edit_date": 1563607524, "creation_date": 1563606811, "answer_id": 57122592, "question_id": 57118927, "link": "https://stackoverflow.com/questions/57118927/why-is-ghc-not-importing-semigroup/57122592#57122592", "title": "Why is GHC not importing Semigroup ((&lt;&gt;))", "body": "<p>ThomasM.DuBuisson found what must have been the problem (discussion in comments): there are three different packages defining a <code>Data.Semigroup</code> module \u2013</p>\n\n<ul>\n<li><a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Semigroup.html\" rel=\"nofollow noreferrer\"><code>base</code></a>. As of GHC-8, Haskell ships with the semigroup class and -module out of the box, so you don't need to take care for anything. See <a href=\"https://stackoverflow.com/a/57119287/745903\">Damian Lattenero's answer</a> for details.</li>\n<li><p><a href=\"http://hackage.haskell.org/package/semigroups-0.18.1/docs/Data-Semigroup.html\" rel=\"nofollow noreferrer\"><code>semigroups</code></a>. In GHC-7, there was no semigroups class in <code>base</code> but the <code>semigroups</code> package was semi-official part of the base libraries. In fact, this exact module was just copied over to <code>base</code>. The way to write really backwards-compatible code with semigroups is still to depend on the <code>semigroups</code> package: when compiling against new GHC versions, that package just uses the <code>base</code> module, only in old versions does it provide the module itself. See <a href=\"https://github.com/ekmett/semigroups/blob/a54abc71ccb538e9ffd422403bd58ffbf7dd5cf0/semigroups.cabal#L137\" rel=\"nofollow noreferrer\">the <code>.cabal</code> configuration</a></p>\n\n<pre><code>  if impl(ghc &lt; 7.11.20151002)\n    -- starting with GHC 8 these modules are provided by `base`\n    hs-source-dirs: src-ghc7\n    exposed-modules:\n      Data.Semigroup\n      Data.List.NonEmpty\n</code></pre></li>\n<li><p><code>Semigroup</code> is an obsolete package back from 2010. It too exports <a href=\"http://hackage.haskell.org/package/Semigroup-0.0.3/docs/Data-Semigroup.html\" rel=\"nofollow noreferrer\">a <code>Data.Semigroup</code> module</a>, but unlike the <code>semigroups</code> one this is <em>not</em> compatible with the official <code>base</code> module. It does have a <code>Semigroups</code> class, but its method is called <code>.++.</code> rather than <code>&lt;&gt;</code> (probably, to not clash with the operator from <code>Data.Monoid</code> \u2013 that is by now not an issue, because in very new versions <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:-60--62-\" rel=\"nofollow noreferrer\"><code>&lt;&gt;</code> is now in the prelude</a> and already works on semigroups).</p></li>\n</ul>\n\n<p>So, what happened for you is probably the following:</p>\n\n<ol>\n<li>You tried to compile your code</li>\n<li>GHC complained <code>Could not find module \u2018Data.Semigroup\u2019</code>. That's because you're running an old compiler.</li>\n<li>At this point, what you should have done would be installing/depending on the <code>semigroups</code> package. Instead you installed the <code>Semigroup</code> package, which is unfortunately incompatible.</li>\n</ol>\n\n<p>There are two solutions:</p>\n\n<ul>\n<li>Use Cabal-install and allow for your old compiler. IMO this is <em>ok</em>, though you should be prepared to run into other dependency troubles in the future. If you do this, you need to add the <code>semigroups</code> package in the <code>build-depends</code> of your <code>.cabal</code> file.</li>\n<li>Or use Stack to enforce a recent compiler. Select e.g. <code>lts-12.14</code>.</li>\n</ul>\n"}], "owner": {"reputation": 143, "user_id": 5862529, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bcf15674256a1414fd852cd3d82461ec?s=128&d=identicon&r=PG&f=1", "display_name": "Ewan Brown", "link": "https://stackoverflow.com/users/5862529/ewan-brown"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 363, "favorite_count": 1, "accepted_answer_id": 57119287, "answer_count": 2, "score": 2, "last_activity_date": 1563607524, "creation_date": 1563565928, "question_id": 57118927, "link": "https://stackoverflow.com/questions/57118927/why-is-ghc-not-importing-semigroup", "title": "Why is GHC not importing Semigroup ((&lt;&gt;))", "body": "<p>I've been given code by my lecturer that doesn't build in GHCI. As far as I know, it has been building correctly for my classmates.</p>\n\n<p>The code I'm refering to is </p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>import Data.Semigroup  (Semigroup ((&lt;&gt;)))\n</code></pre>\n\n<p>GHCI is throwing this error at me</p>\n\n<pre><code>Module \u2018Data.Semigroup\u2019 does not export \u2018Semigroup((&lt;&gt;))\u2019\n</code></pre>\n\n<p>Should this work? Is there perhaps something wrong with my version of GHC? All other import statements are working.</p>\n"}, {"tags": ["haskell", "types"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1563562132, "post_id": 57118022, "comment_id": 100754807, "body": "I&#39;m not sure what the question really has to do with GADTs (this example certainly doesn&#39;t need one, you can just use a regular ADT with a single constructor). The problem is just that you haven&#39;t specified the necessary <code>Num a</code> constraint on the signature of <code>successor</code>."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1563562297, "post_id": 57118022, "comment_id": 100754873, "body": "Did you forget a <code>Num a</code> constraint in the type of the constructor?"}, {"owner": {"reputation": 41, "user_id": 11691394, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-sDvdQFmB6e0/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rcEHHN_rGfN0FNvhqzkkNNFWm2DZA/mo/photo.jpg?sz=128", "display_name": "Micha\u0142 Tarkowsky", "link": "https://stackoverflow.com/users/11691394/micha%c5%82-tarkowsky"}, "edited": false, "score": 0, "creation_date": 1563563480, "post_id": 57118022, "comment_id": 100755256, "body": "Yeah, I forgot <code>Num a</code> in type constructor, my bad."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 3, "creation_date": 1563563667, "post_id": 57118022, "comment_id": 100755314, "body": "The common way is to put the constraint on functions. You might want to explain why you need to do such an unconventional thing as putting a constraint in a constructor, because otherwise it looks like you&#39;re only creating more problems for yourself."}, {"owner": {"reputation": 41, "user_id": 11691394, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-sDvdQFmB6e0/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rcEHHN_rGfN0FNvhqzkkNNFWm2DZA/mo/photo.jpg?sz=128", "display_name": "Micha\u0142 Tarkowsky", "link": "https://stackoverflow.com/users/11691394/micha%c5%82-tarkowsky"}, "edited": false, "score": 0, "creation_date": 1563564232, "post_id": 57118022, "comment_id": 100755491, "body": "Short version, I&#39;m trying to make a frontend for tensorflow, with shapes of tensors controlled at compile time. For that I&#39;m using singletons, and I need <code>SingI shape</code> to be derived in many places. Trying to avoid too many function constraint, I decided to make tensors contain singletons of their shapes. Still, sometimes <code>SingI s</code> is required, and being able to easily derive it from the context would be nice."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1563565052, "post_id": 57118022, "comment_id": 100755784, "body": "The compiler <i>can</i> infer the constraint, but you are overriding its inferred type by explicitly providing the type <code>NumGadt a -&gt; a</code> (which is just short for <code>forall a . NumGadt a -&gt; a</code>). You aren&#39;t asking about type inference, but about changing the semantics of the implicitly quantified type variable <code>a</code>."}], "answers": [{"comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 0, "creation_date": 1563564986, "post_id": 57118730, "comment_id": 100755769, "body": "I&#39;m pretty sure the <code>{}</code> pattern doesn&#39;t require record syntax in the type."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 6, "last_activity_date": 1563565044, "last_edit_date": 1563565044, "creation_date": 1563564935, "answer_id": 57118730, "question_id": 57118022, "link": "https://stackoverflow.com/questions/57118022/gadts-with-single-constructor/57118730#57118730", "title": "GADTs with single constructor", "body": "<p>You could define a <code>withNum</code> helper which brings the <code>Num a</code> dictionary in scope.</p>\n\n<pre><code>{-# LANGUAGE GADTs, RankNTypes #-}\n\ndata NumGadt a where\n  NumGadt :: Num a =&gt; a -&gt; Int -&gt; String -&gt; Bool -&gt; NumGadt a\n\nwithNum :: NumGadt a -&gt; (Num a =&gt; b) -&gt; b\nwithNum (NumGadt _ _ _ _) y = y\n\ngetNum :: NumGadt a -&gt; a\ngetNum (NumGadt a _ _ _) = a\n\nsuccessor :: NumGadt a -&gt; a\nsuccessor x = withNum x (1 + getNum x)\n</code></pre>\n\n<p>In my view this is not much better than matching against the constructor in <code>successor</code>, even if the name <code>withNum</code> is more self-documenting.</p>\n\n<p>Note that you can even use the shorter record syntax:</p>\n\n<pre><code>successor :: NumGadt a -&gt; a\nsuccessor x@NumGadt{} = 1 + getNum x\n</code></pre>\n"}], "owner": {"reputation": 41, "user_id": 11691394, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-sDvdQFmB6e0/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rcEHHN_rGfN0FNvhqzkkNNFWm2DZA/mo/photo.jpg?sz=128", "display_name": "Micha\u0142 Tarkowsky", "link": "https://stackoverflow.com/users/11691394/micha%c5%82-tarkowsky"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 118, "favorite_count": 0, "answer_count": 1, "score": 4, "last_activity_date": 1563565044, "creation_date": 1563561421, "last_edit_date": 1563563463, "question_id": 57118022, "link": "https://stackoverflow.com/questions/57118022/gadts-with-single-constructor", "title": "GADTs with single constructor", "body": "<p>Here's a sample code:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE GADTs #-}\n\ndata NumGadt a where\n  NumGadt :: Num a =&gt; a -&gt; Int -&gt; String -&gt; Bool -&gt; NumGadt a\n\ngetNum :: NumGadt a -&gt; a\ngetNum (NumGadt a _ _ _) = a\n</code></pre>\n\n<p>Now let's say I want to write a function like this:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>successor :: NumGadt a -&gt; a\nsuccessor x = 1 + getNum x\n</code></pre>\n\n<p>The problem is this would not compile, with an error about <code>No instance for (Num a)</code></p>\n\n<p>A possible solution to this would be</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>successor :: NumGadt a -&gt; a\nsuccessor x@(NumGadt _ _ _ _) = 1 + getNum x\n</code></pre>\n\n<p>but this is rather ugly, and using this in more places would become really ugly.</p>\n\n<p>So question is, is there some way to make the compiler realize that there is only one constructor for this type, and infer constraints from it?</p>\n"}, {"tags": ["haskell", "fold"], "comments": [{"owner": {"reputation": 893, "user_id": 6248287, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/tPegr.jpg?s=128&g=1", "display_name": "\u019b\u019b\u019b", "link": "https://stackoverflow.com/users/6248287/%c6%9b%c6%9b%c6%9b"}, "edited": false, "score": 1, "creation_date": 1563586234, "post_id": 57116664, "comment_id": 100760357, "body": "take a look at the definition of foldr here: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.Base.html#foldr\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/base-4.12.0.0/docs/src/&hellip;</a>   you can see <code>op</code> expects two inputs, the current element and the result of processing the rest of the elements using foldr."}], "answers": [{"tags": [], "owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "is_accepted": false, "score": 5, "last_activity_date": 1563556640, "last_edit_date": 1563556640, "creation_date": 1563556003, "answer_id": 57116885, "question_id": 57116664, "link": "https://stackoverflow.com/questions/57116664/making-filter-using-foldr/57116885#57116885", "title": "Making filter using foldr", "body": "<p><code>foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b</code> loops over an input list of <code>a</code>s and manipulates a <code>b</code> (representing the loop's state). <code>op</code>'s job is to take an <code>a</code> from the input list, the current state <code>b</code>, and compute a new state. <code>foldr</code> makes sure that <code>op</code> is called for every item in the list.</p>\n\n<p>In the case of your <code>filter</code>, <code>b</code> happens to also be a list of <code>a</code>s. So your code is talking about two different lists of <code>a</code>s \u2014 the input list and the output list. Your <code>op</code> has to decide <em>should I put this <code>x</code> in the output list or not?</em></p>\n\n<p>To clarify, here is your code with the variables named a bit more suggestively.</p>\n\n<pre><code>filter :: (a -&gt; Bool) -&gt; [a] -&gt; [a]\nfilter pred = foldr addToOutputIfNecessary initialOutput\n  where\n    initialOutput = []\n    addToOuputIfNecessary itemFromInput currentOutput =\n      if pred itemFromInput\n      then itemFromInput:currentOutput\n      else currentOutput\n</code></pre>\n\n<p>So when we return <code>currentOutput</code> from <code>addToOutputIfNecessary</code>, it's not about telling <code>foldr</code> to continue. (<code>foldr</code> will always continue to the next input element by itself \u2014 you don't need to tell it to continue.) It's just saying that the loop's state hasn't changed this iteration; we've decided not to add an item to the output list.</p>\n\n<p>Hope this helps! Let me know in the comments if there's anything you don't understand.</p>\n"}, {"tags": [], "owner": {"reputation": 69207, "user_id": 1440565, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/ec430cc01ef4cf4ae63ebbe9e8596f72?s=128&d=identicon&r=PG", "display_name": "Code-Apprentice", "link": "https://stackoverflow.com/users/1440565/code-apprentice"}, "is_accepted": true, "score": 3, "last_activity_date": 1563556486, "last_edit_date": 1592644375, "creation_date": 1563556029, "answer_id": 57116894, "question_id": 57116664, "link": "https://stackoverflow.com/questions/57116664/making-filter-using-foldr/57116894#57116894", "title": "Making filter using foldr", "body": "<p>Let's take a look at the type of <code>foldr</code> for a list:</p>\n<pre><code>foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b \n</code></pre>\n<p>Now you are using it like this:</p>\n<pre><code>foldr op z\n</code></pre>\n<p>From the type signature of <code>foldr</code> we see that the function <code>op</code> must return something of type <code>b</code> which is the same type as <code>z</code>. Since you do <code>z = []</code>, this must be a list. So the result of <code>op x xs</code> must be a list.</p>\n<p>Additionally, keep in mind that <code>if...else</code> in Haskell is an <strong>expression</strong>. This means that it must evaluate to some value no matter if the condition is true or false. In other languages, the <code>else</code> is optional because <code>if</code> is a <strong>statement</strong>. In Haskell, the <code>else</code> <strong>is not optional</strong>.</p>\n<blockquote>\n<p>So why do I need to do</p>\n<pre><code>op x xs = if pred x then x : xs else xs\n</code></pre>\n<p>and tell it to continue with xs even if foldr already does the continuing?</p>\n</blockquote>\n<p>One reason is that <code>op</code> must always return a value. This value will be used by <code>foldr</code> to continue its calculation. Without it, <code>foldr</code> is unable to continue, and in fact your code won't even compile as you saw.</p>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 5, "last_activity_date": 1563557609, "last_edit_date": 1563557609, "creation_date": 1563556603, "answer_id": 57117026, "question_id": 57116664, "link": "https://stackoverflow.com/questions/57116664/making-filter-using-foldr/57117026#57117026", "title": "Making filter using foldr", "body": "<p><code>foldr</code> encapsulates the recursion involved in combining an element from the list with the result of folding the rest of the list. <code>xs</code> is not the tail of your input; it's the result of <em>folding</em> the tail of your input.</p>\n\n<p>You can emphasize this a bit by focusing on what you want <code>op</code> to <em>do</em>, and de-emphasizing what it operates on, by refactoring </p>\n\n<pre><code>op x xs = if pred x then x : xs else xs\n</code></pre>\n\n<p>to </p>\n\n<pre><code>-- (x:) xs == x:xs\n-- id xs == xs\nop x xs = (if pred x then (x:) else id) xs\n</code></pre>\n\n<p>which can be eta-reduced to</p>\n\n<pre><code>op x = if pred x then (x:) else id\n</code></pre>\n\n<p>In other words, given the first element of the list, what will you do with it: prepend <code>x</code> it to the recursive result, or return that result as-is?</p>\n"}], "owner": {"reputation": 14927, "user_id": 2719875, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ae764a4524119ce0d93e7d8f0ee2356c?s=128&d=identicon&r=PG&f=1", "display_name": "user2719875", "link": "https://stackoverflow.com/users/2719875/user2719875"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 432, "favorite_count": 0, "accepted_answer_id": 57116894, "answer_count": 3, "score": 3, "last_activity_date": 1563557609, "creation_date": 1563554919, "question_id": 57116664, "link": "https://stackoverflow.com/questions/57116664/making-filter-using-foldr", "title": "Making filter using foldr", "body": "<p>I'm trying to make <code>filter</code> using <code>foldr</code>. I have a solution, but don't know why my version does not work. </p>\n\n<p><code>foldr</code> works like this:</p>\n\n<pre><code>&gt;&gt;&gt;foldr op z (xs:x)\nx op z\n</code></pre>\n\n<p>then repeats, correct? When x is the last element in the list.</p>\n\n<p>Now, I have</p>\n\n<pre><code>myFilter pred = foldr op z\n  where\n    z = []\n    op x xs = if pred x then x\n</code></pre>\n\n<p>this does not work, gives a <code>parse error (possibly incorrect indentation or mismatched brackets)</code> error.</p>\n\n<p>The operation just gives <code>x</code> to <code>pred</code> and if it is <code>true</code>, returns <code>x</code>, otherwise skips it. The way <code>foldr</code> works is that it keeps looping on the <code>xs</code> list that is passed. So why do I need to do </p>\n\n<pre><code> op x xs = if pred x then x : xs else xs\n</code></pre>\n\n<p>and tell it to continue with <code>xs</code> even if <code>foldr</code> already does the continuing?</p>\n"}, {"tags": ["algorithm", "sorting", "haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 5, "creation_date": 1563546039, "post_id": 57114414, "comment_id": 100747491, "body": "This is an insertion algorithm right? You could apply the same &quot;trick&quot; to a mergesort algorithm."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 6, "creation_date": 1563546204, "post_id": 57114414, "comment_id": 100747588, "body": "I&#39;m curious: why did you think insertion sort, a suboptimal O(N^2) algorithm, would be a good idea to start with? Merge sort looks a better candidate to me."}, {"owner": {"reputation": 657, "user_id": 11672176, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RJ2UolcBU3Y/AAAAAAAAAAI/AAAAAAAABb4/PR3tZ6Jz7Bw/photo.jpg?sz=128", "display_name": "BryceTheGrand", "link": "https://stackoverflow.com/users/11672176/brycethegrand"}, "edited": false, "score": 0, "creation_date": 1563546320, "post_id": 57114414, "comment_id": 100747666, "body": "I actually tried out a mergesort algorithm and it performs much faster for lists with no repetition but this outperforms it for repetitive lists. I will try to apply this to a mergesort next."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 3, "creation_date": 1563547453, "post_id": 57114414, "comment_id": 100748339, "body": "This is &quot;just&quot; run-length encoding of an insertion sort&#39;s output, and so cannot change the worst-case asymptotics (except for finite alphabets) because runs cannot be guaranteed to exist. ...but if you must do run-length encoding of your output, I recommend the implementation <code>sort&#39; = toAscList . fromList</code> using the <a href=\"http://hackage.haskell.org/package/multiset-0.3.4.1/docs/Data-MultiSet.html\" rel=\"nofollow noreferrer\">multiset</a> package -- it will have worst-case O(n log n) runtime, the best possible for comparison-based sorts."}, {"owner": {"reputation": 7666, "user_id": 1241193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0331e5e748a0ac3860b68f6cac130ef1?s=128&d=identicon&r=PG", "display_name": "Bob Dalgleish", "link": "https://stackoverflow.com/users/1241193/bob-dalgleish"}, "edited": false, "score": 1, "creation_date": 1563547742, "post_id": 57114414, "comment_id": 100748492, "body": "And, if you want linear time sorting, you can use the discrimination package: <a href=\"https://hackage.haskell.org/package/discrimination\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/discrimination</a>"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1563548559, "post_id": 57114414, "comment_id": 100748913, "body": "Did you try applying run-length encoding to mergesort? There&#39;s no obvious impediment."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 7666, "user_id": 1241193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0331e5e748a0ac3860b68f6cac130ef1?s=128&d=identicon&r=PG", "display_name": "Bob Dalgleish", "link": "https://stackoverflow.com/users/1241193/bob-dalgleish"}, "edited": false, "score": 4, "creation_date": 1563548709, "post_id": 57114414, "comment_id": 100748991, "body": "@BobDalgleish Copying from a comment of mine <a href=\"https://www.reddit.com/r/haskell/comments/5xa82l/algebraic_graphs_with_class_asking_for_feedback/\" rel=\"nofollow noreferrer\">on this reddit post</a>: &quot;linear-time sorting sounds so good, but please do a few small benchmarks before you dive deep. I was playing with it just this week, and in my (admittedly very simplistic) test discrimination used more memory and more time than <code>Data.List.sort</code>, right up to the point that my OOM-killer kicks in, so although it may scale better you may not be able to reach the scales where it matters.&quot;"}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 3, "creation_date": 1563548715, "post_id": 57114414, "comment_id": 100748993, "body": "How did <code>Data.List.sort</code> take 2 seconds to sort 10000 values in reverse order on your system? That should be nearly instantaneous on basically any hardware that can run Haskell. It&#39;s the second best case for the algorithm - it should be only a little slower than just calling reverse."}, {"owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "edited": false, "score": 0, "creation_date": 1571838000, "post_id": 57114414, "comment_id": 103373354, "body": "Already sorted ascending or descentding input such as <code>[10000,9999..1]</code> is a best case for <code>Data.List.sort</code> and it is O(n). It should never take 2 seconds. Make sure you don&#39;t count the displaying time of the resulting list on GHCI. <code>Data.List.sort</code> is one of the best sorting algorithms ever."}], "owner": {"reputation": 657, "user_id": 11672176, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-RJ2UolcBU3Y/AAAAAAAAAAI/AAAAAAAABb4/PR3tZ6Jz7Bw/photo.jpg?sz=128", "display_name": "BryceTheGrand", "link": "https://stackoverflow.com/users/11672176/brycethegrand"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 137, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1563545932, "creation_date": 1563545932, "question_id": 57114414, "link": "https://stackoverflow.com/questions/57114414/what-sorting-algorithm-is-this-and-can-it-be-improved", "title": "What sorting algorithm is this, and can it be improved?", "body": "<p>I have been trying to work on making a good sorting algorithm for a while. At first I thought that insertion sort would be a good idea but with large lists it runs into a similar problem as the Haskell quicksort does with memory.</p>\n\n<p>I then tried to make up my own sorting algorithm that works the same as my insertion sort but it tries to cut down on memory usage and repetition a little bit to improve speed:</p>\n\n<pre><code>modsort' :: (Ord a, Eq a) =&gt; [a] -&gt; [(a, Int)]\nmodsort' [] = []\nmodsort' ls@(x:xs) = insert (x, count x ls) $ modsort' (filter (\\i -&gt; i /= x) xs)\n    where\n        insert :: (Ord a, Eq a) =&gt; (a, Int) -&gt; [(a, Int)] -&gt; [(a, Int)]\n        insert i1 [] = [i1]\n        insert i1@(x, _) i2@((y, f):xs)\n            | x &lt;= y = i1:i2\n            | x &gt;  y = (y, f) : insert i1 xs\n        count :: Eq a =&gt; a -&gt; [a] -&gt; Int\n        count i xs' = count' i xs' 0\n            where count' _ [] n = n\n                  count' i (x:xs) n\n                    | i == x    = count' i xs (n + 1)\n                    | otherwise = count' i xs n\n\nuncompress :: [(a, Int)] -&gt; [a]\nuncompress [] = []\nuncompress ( (v, n) : rest) = repeat' v n ++ uncompress rest\n            where repeat' _ 0 = []\n                  repeat' i n = i : repeat' i (n - 1)\n</code></pre>\n\n<p>Compared to some other algorithms for Haskell I have seen online this one seems a little longer. It scales pretty well for very long lists with a lot of repetition (eg. language: words, letters), but completely flops when the list has little to no repetition (Data.List sort was able to sort [10000,9999..1] in 2 seconds, this took 50). </p>\n\n<p>Is there a way to improve this or some small thing I am overlooking, or should I just try to make a different/better algorithm for sorting?</p>\n"}, {"tags": ["list", "haskell", "monads"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1563530403, "post_id": 57109977, "comment_id": 100739495, "body": "This is not a <code>do</code> block, so no binds are used here."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1563532729, "post_id": 57109977, "comment_id": 100740545, "body": "List bind <code>&gt;&gt;=</code> is <code>concatMap</code>, not <code>foldr</code>."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 5, "last_activity_date": 1563531459, "last_edit_date": 1563531459, "creation_date": 1563530790, "answer_id": 57110116, "question_id": 57109977, "link": "https://stackoverflow.com/questions/57109977/how-to-implement-a-function-using-bind/57110116#57110116", "title": "How to implement a function using bind (&gt;&gt;=)", "body": "<blockquote>\n  <p>To understand bind, i want to implement this as bind.</p>\n</blockquote>\n\n<p>There is no bind here. The bind is added in case of a <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch3.html#x8-470003.14\" rel=\"nofollow noreferrer\"><em><code>do</code> expression</em></a>. The above is not a do-expression, so there is no bind here.</p>\n\n<p>You can however write this with bind, like:</p>\n\n<pre><code>f p xs = xs &gt;&gt;= \\x -&gt; if p x then [x] else []</code></pre>\n\n<p>but this is not a literal mapping of the original function, we simply make use of the <code>instance Monad []</code> implementation here. Nevertheless, your <code>f</code> is just <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:filter\" rel=\"nofollow noreferrer\"><strong><code>filter :: (a -&gt; Bool) -&gt; [a] -&gt; [a]</code></strong></a> here.</p>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 2, "last_activity_date": 1563538960, "last_edit_date": 1563538960, "creation_date": 1563536227, "answer_id": 57111736, "question_id": 57109977, "link": "https://stackoverflow.com/questions/57109977/how-to-implement-a-function-using-bind/57111736#57111736", "title": "How to implement a function using bind (&gt;&gt;=)", "body": "<p>To understand bind, first implement the <em>no-op</em>:</p>\n\n<pre><code>id_list xs   =  concat [ [x]       | x &lt;- xs ]  =  [ y | x &lt;- xs, y &lt;- [x      ] ]\n</code></pre>\n\n<p>Now for the <em>filter</em>, augment it as</p>\n\n<pre><code>filter p xs  =  concat [ [x | p x] | x &lt;- xs ]  =  [ y | x &lt;- xs, y &lt;- [x | p x] ]\n</code></pre>\n\n<p>How is this code using bind, you ask? If we're using <code>MonadComprehensions</code>, it does.</p>\n\n<p>The explicit <code>do</code>-notation re-write is straightforward:</p>\n\n<pre><code>id_list xs   =  do { x &lt;- xs ; y &lt;- [ x      ] ; return y }\nfilter p xs  =  do { x &lt;- xs ; y &lt;- [ x | p x] ; return y }\n</code></pre>\n\n<p>And of course, for lists,</p>\n\n<pre><code>[x]       ==  return x\n[x | p x] ==  if p x then return x else mzero\nmzero     ==  []\nconcat    ==  join\n</code></pre>\n\n<p>This brings us back to an explicitly recursive way to code <code>filter</code> as</p>\n\n<pre><code>filter p []     =  []\nfilter p (x:xs) =  [x | p x] ++ filter p xs\n</code></pre>\n\n<p>With bind, we think in terms of transforming <em>each</em> element of the list <em>individually,</em> into <em>the list of results</em> (none, one, or several) for that one input element. Your <code>foldr</code>-based code breaks this.</p>\n\n<hr>\n\n<p>So, the code itself is just</p>\n\n<pre><code>filter_bind p xs  =  xs  &gt;&gt;=  (\\x -&gt; [x | p x])\n</code></pre>\n\n<p>because we have</p>\n\n<pre><code>xs &gt;&gt;= f  ==  join (fmap f xs) \n          ==  concat (map f xs) \n          ==  concat [ f x | x &lt;- xs ]\n          ==  foldr (++) []\n                     [ f x | x &lt;- xs ]\n</code></pre>\n\n<p>with the last snippet corresponding to the explicitly recursive definition above.</p>\n\n<p>See also</p>\n\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/48960899/how-does-the-list-monad-work-in-this-example/49030523#49030523\">How does the List monad work in this example?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/51172904/haskell-monad-how-does-monad-on-list-work/51178620#51178620\">Haskell Monad - How does Monad on list work?</a></li>\n<li><a href=\"https://stackoverflow.com/search?q=user%3A849891%20list%20monad\">etc.</a></li>\n</ul>\n"}], "owner": {"reputation": 132, "user_id": 7462154, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/701c33c41f8a2cc32229b613c0d32106?s=128&d=identicon&r=PG&f=1", "display_name": "V0lvox337", "link": "https://stackoverflow.com/users/7462154/v0lvox337"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "accepted_answer_id": 57110116, "answer_count": 2, "score": 4, "last_activity_date": 1563539121, "creation_date": 1563530212, "last_edit_date": 1563539121, "question_id": 57109977, "link": "https://stackoverflow.com/questions/57109977/how-to-implement-a-function-using-bind", "title": "How to implement a function using bind (&gt;&gt;=)", "body": "<p>I wrote a filter function:</p>\n\n<pre><code>f :: (a -&gt; Bool) -&gt; [a] -&gt; [a]\nf p xs = case xs of\n         [] -&gt; []\n         x : xs' -&gt; if p x\n                    then x : f p xs'\n                    else f p xs'\n</code></pre>\n\n<p>To understand bind, I want to implement this using bind.\nWhat I was thinking about:</p>\n\n<pre><code>f p xs = xs &gt;&gt;= (\\x xs -&gt; if p x then x : f p xs else f p xs)\n</code></pre>\n\n<p>But I get this error:</p>\n\n<pre><code>* Couldn't match expected type `[a]' with actual type `[a] -&gt; [a]'\n    * The lambda expression `\\ x xs -&gt; ...' has two arguments,\n      but its type `a -&gt; [a]' has only one\n      In the second argument of `(&gt;&gt;=)', namely\n        `(\\ x xs -&gt; if p x then x : f p xs else f p xs)'\n      In the expression:\n        xs &gt;&gt;= (\\ x xs -&gt; if p x then x : f p xs else f p xs)\n    * Relevant bindings include\n        xs :: [a] (bound at &lt;interactive&gt;:104:5)\n        p :: a -&gt; Bool (bound at &lt;interactive&gt;:104:3)\n        f :: (a -&gt; Bool) -&gt; [a] -&gt; [a] (bound at &lt;interactive&gt;:104:1)\n</code></pre>\n\n<p>Successfully did it using <code>foldr</code>:</p>\n\n<pre><code>f p xs = foldr (\\x xs -&gt; if p x then x : f p xs else f p xs) [] xs\n</code></pre>\n\n<p>What's going wrong?</p>\n"}, {"tags": ["haskell", "package"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 5, "creation_date": 1563527754, "post_id": 57109229, "comment_id": 100738126, "body": "<code>Data.Text</code> has <code>splitOn</code>. Is that built into typical distributions now?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1563529097, "post_id": 57109229, "comment_id": 100738817, "body": "To the best of my knowledge C# actually has no standard library. The .NET framework is more or less the <i>de-facto</i> standard, but strictly speaking C# has no standard library."}, {"owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "edited": false, "score": 1, "creation_date": 1563530069, "post_id": 57109229, "comment_id": 100739344, "body": "Do you mean within <code>Prelude</code> - no external libraries? If so you should indicate this in the question as it&#39;s ambiguous."}, {"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "edited": false, "score": 0, "creation_date": 1563536518, "post_id": 57109229, "comment_id": 100742363, "body": "&quot;about base package i.e. Prelude&quot; <code>base</code> package contains much more than just <code>Prelude</code>: <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/base-4.12.0.0</a>"}, {"owner": {"reputation": 2824, "user_id": 187223, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/9ab705e8ee51d24c8e52192f7fde8d76?s=128&d=identicon&r=PG", "display_name": "James Brock", "link": "https://stackoverflow.com/users/187223/james-brock"}, "edited": false, "score": 0, "creation_date": 1607692595, "post_id": 57109229, "comment_id": 115358884, "body": "The most general Haskell split function is <code>splitCap</code> <a href=\"https://hackage.haskell.org/package/replace-megaparsec/docs/Replace-Megaparsec.html#v:splitCap\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/replace-megaparsec/docs/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 121, "user_id": 4956000, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/a58e7c6cf4b4a3756deffa6711867adc?s=128&d=identicon&r=PG&f=1", "display_name": "fsestini", "link": "https://stackoverflow.com/users/4956000/fsestini"}, "edited": false, "score": 4, "creation_date": 1563529490, "post_id": 57109432, "comment_id": 100739045, "body": "This doesn&#39;t really address the question, which was about the reason behind not having splitting functions in the standard library, i.e. <code>base</code>."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 121, "user_id": 4956000, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/a58e7c6cf4b4a3756deffa6711867adc?s=128&d=identicon&r=PG&f=1", "display_name": "fsestini", "link": "https://stackoverflow.com/users/4956000/fsestini"}, "edited": false, "score": 0, "creation_date": 1563529561, "post_id": 57109432, "comment_id": 100739080, "body": "@fsestini: the point is that text processing is usually <i>not</i> done with <code>String</code>s, so it should be part of <code>text</code>."}, {"owner": {"reputation": 895, "user_id": 4626533, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh6.googleusercontent.com/-YD0ktWjS7j0/AAAAAAAAAAI/AAAAAAAACyU/T7UotNQswJ4/photo.jpg?sz=128", "display_name": "Nolan", "link": "https://stackoverflow.com/users/4626533/nolan"}, "edited": false, "score": 0, "creation_date": 1563533699, "post_id": 57109432, "comment_id": 100740986, "body": "Surely the question is about why it&#39;s not in base. Sorry for not mentioning this initially."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 895, "user_id": 4626533, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh6.googleusercontent.com/-YD0ktWjS7j0/AAAAAAAAAAI/AAAAAAAACyU/T7UotNQswJ4/photo.jpg?sz=128", "display_name": "Nolan", "link": "https://stackoverflow.com/users/4626533/nolan"}, "edited": false, "score": 0, "creation_date": 1563534886, "post_id": 57109432, "comment_id": 100741576, "body": "@Nolan: well in short, because it is not in the Haskell report, and often not very useful to do, since the <code>Text</code> module actually is advisable for string processing."}, {"owner": {"reputation": 895, "user_id": 4626533, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh6.googleusercontent.com/-YD0ktWjS7j0/AAAAAAAAAAI/AAAAAAAACyU/T7UotNQswJ4/photo.jpg?sz=128", "display_name": "Nolan", "link": "https://stackoverflow.com/users/4626533/nolan"}, "edited": false, "score": 0, "creation_date": 1563535440, "post_id": 57109432, "comment_id": 100741846, "body": "@WillemVanOnsem there are functions that are in base but not in Haskell report."}, {"owner": {"reputation": 895, "user_id": 4626533, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh6.googleusercontent.com/-YD0ktWjS7j0/AAAAAAAAAAI/AAAAAAAACyU/T7UotNQswJ4/photo.jpg?sz=128", "display_name": "Nolan", "link": "https://stackoverflow.com/users/4626533/nolan"}, "edited": false, "score": 0, "creation_date": 1563535546, "post_id": 57109432, "comment_id": 100741886, "body": "@WillemVanOnsem would you advice using Text instead of String for complete beginners?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 895, "user_id": 4626533, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh6.googleusercontent.com/-YD0ktWjS7j0/AAAAAAAAAAI/AAAAAAAACyU/T7UotNQswJ4/photo.jpg?sz=128", "display_name": "Nolan", "link": "https://stackoverflow.com/users/4626533/nolan"}, "edited": false, "score": 0, "creation_date": 1563536092, "post_id": 57109432, "comment_id": 100742158, "body": "@Nolan: <code>Text</code> provides a similar interface. The only drawback is that you can not make use of more generic list functions. see: <a href=\"https://www.reddit.com/r/haskell/comments/3rrlih/text_or_string/\" rel=\"nofollow noreferrer\">reddit.com/r/haskell/comments/3rrlih/text_or_string</a>"}, {"owner": {"reputation": 895, "user_id": 4626533, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh6.googleusercontent.com/-YD0ktWjS7j0/AAAAAAAAAAI/AAAAAAAACyU/T7UotNQswJ4/photo.jpg?sz=128", "display_name": "Nolan", "link": "https://stackoverflow.com/users/4626533/nolan"}, "edited": false, "score": 0, "creation_date": 1563536953, "post_id": 57109432, "comment_id": 100742608, "body": "@WillemVanOnsem It&#39;s very important and it&#39;s not the only drawback. I can also name having to learn the concept of package, having to learn new modules, having to link external package manually (which is not always possible: imagine online contest or maybe code golf with only base allowed)"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 895, "user_id": 4626533, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh6.googleusercontent.com/-YD0ktWjS7j0/AAAAAAAAAAI/AAAAAAAACyU/T7UotNQswJ4/photo.jpg?sz=128", "display_name": "Nolan", "link": "https://stackoverflow.com/users/4626533/nolan"}, "edited": false, "score": 1, "creation_date": 1563549758, "post_id": 57109432, "comment_id": 100749544, "body": "@Nolan, questions about code golf and contests are usually off-topic here. They&#39;re also of very little interest to most of the Core Libraries Committee (which guides the development of <code>base</code>) and not of great importance to most participants on the <code>libraries@haskell.org</code> mailing list, where most of these decisions are primarily discussed. If you want, you can join that list and write a proposal. I don&#39;t give it great odds."}, {"owner": {"reputation": 895, "user_id": 4626533, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh6.googleusercontent.com/-YD0ktWjS7j0/AAAAAAAAAAI/AAAAAAAACyU/T7UotNQswJ4/photo.jpg?sz=128", "display_name": "Nolan", "link": "https://stackoverflow.com/users/4626533/nolan"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1563551662, "post_id": 57109432, "comment_id": 100750448, "body": "@dfeuer thankyou for guidance. Shouldn&#39;t the committee consider all use cases?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 895, "user_id": 4626533, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh6.googleusercontent.com/-YD0ktWjS7j0/AAAAAAAAAAI/AAAAAAAACyU/T7UotNQswJ4/photo.jpg?sz=128", "display_name": "Nolan", "link": "https://stackoverflow.com/users/4626533/nolan"}, "edited": false, "score": 0, "creation_date": 1563552740, "post_id": 57109432, "comment_id": 100751003, "body": "@Nolan, Haskell started out as a research language. For a number of years it&#39;s also been used in industry. Most people who participate in development of GHC and of Haskell libraries are using it for one of those purposes. Code golf and contests don&#39;t really have much to offer the development of the language or ecosystem for things other than code golf and contests, so it&#39;s going to be a hard sell. That&#39;s not only true of Haskell; I don&#39;t think very many languages not designed specifically for golfing care about that."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 895, "user_id": 4626533, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh6.googleusercontent.com/-YD0ktWjS7j0/AAAAAAAAAAI/AAAAAAAACyU/T7UotNQswJ4/photo.jpg?sz=128", "display_name": "Nolan", "link": "https://stackoverflow.com/users/4626533/nolan"}, "edited": false, "score": 0, "creation_date": 1563555324, "post_id": 57109432, "comment_id": 100752066, "body": "@Nolan, I missed one of the big applications: education. But the teachers don&#39;t care about that either."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 7, "last_activity_date": 1563530084, "last_edit_date": 1563530084, "creation_date": 1563528219, "answer_id": 57109432, "question_id": 57109229, "link": "https://stackoverflow.com/questions/57109229/why-haskell-doesnt-have-split-function/57109432#57109432", "title": "Why Haskell doesn&#39;t have split function?", "body": "<p>Several Haskell modules implement a split function, in fact it even has several variants that are more generic than the variants in Python, C#, Java, etc.</p>\n\n<p>The <a href=\"https://hackage.haskell.org/package/split-0.2.3.3\" rel=\"nofollow noreferrer\"><strong><code>split</code></strong> package [Hackage]</a>, has several <a href=\"https://hackage.haskell.org/package/split-0.2.3.3/docs/Data-List-Split.html#g:2\" rel=\"nofollow noreferrer\"><em>Convenience functions</em></a> to split a slit of <code>a</code>s:</p>\n\n<pre><code><a href=\"https://hackage.haskell.org/package/split-0.2.3.3/docs/Data-List-Split.html#v:splitOn\" rel=\"nofollow noreferrer\">splitOn :: Eq a =&gt; [a] -&gt; [a] -&gt; [[a]]</a>\n<a href=\"https://hackage.haskell.org/package/split-0.2.3.3/docs/Data-List-Split.html#v:splitOneOf\" rel=\"nofollow noreferrer\">splitOneOf :: Eq a =&gt; [a] -&gt; [a] -&gt; [[a]]</a>\n<a href=\"https://hackage.haskell.org/package/split-0.2.3.3/docs/Data-List-Split.html#v:splitWhen\" rel=\"nofollow noreferrer\">splitWhen :: (a -&gt; Bool) -&gt; [a] -&gt; [[a]]</a></code></pre>\n\n<p>For example:</p>\n\n<pre><code>Prelude Data.List.Split&gt; splitOneOf \",&amp;\" \"foo,bar&amp;qux\"\n[\"foo\",\"bar\",\"qux\"]\n</code></pre>\n\n<p>If you want to perform high performance text processing, you usually use <a href=\"https://hackage.haskell.org/package/text-1.2.3.1/docs/Data-Text.html#t:Text\" rel=\"nofollow noreferrer\"><strong><code>Text</code></strong></a> over <code>String</code>s, since these are stored in a more compact way. The <a href=\"https://hackage.haskell.org/package/text-1.2.3.1\" rel=\"nofollow noreferrer\"><strong><code>text</code></strong> package [Hackage]</a> has a function <a href=\"https://hackage.haskell.org/package/text-1.2.3.1/docs/Data-Text.html#v:splitOn\" rel=\"nofollow noreferrer\"><strong><code>splitOn :: Text -&gt; Text -&gt; [Text]</code></strong></a> to split text in a list of <code>Text</code>s. Furthermore you can use <a href=\"https://hackage.haskell.org/package/text-1.2.3.1/docs/Data-Text.html#v:split\" rel=\"nofollow noreferrer\"><strong><code>split :: (Char -&gt; Bool) -&gt; Text -&gt; [Text]</code></strong></a> to split based on a condition of the character. For example:</p>\n\n<pre><code>Prelude Data.Text&gt; :set -XOverloadedStrings\nPrelude Data.Text&gt; splitOn \", \" \"foo,bar, qux, bla, , true\"\n[\"foo,bar\",\"qux\",\"bla\",\"\",\"true\"]\nPrelude Data.Text&gt; import Data.Char\nPrelude Data.Text Data.Char&gt; split isDigit \"foo1bar22true\"\n[\"foo\",\"bar\",\"\",\"true\"]\n</code></pre>\n\n<p><strong>A note on the the <em>standard library</em></strong></p>\n\n<p>The absolute minimum a Haskell standard library should support is defined in <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellpa2.html#x20-192000II\" rel=\"nofollow noreferrer\"><em>Part II: The Haskell 2010 Libraries</em> of the <em>Haskell'10 report</em></a>. The number of operations on <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch20.html#x28-22800020\" rel=\"nofollow noreferrer\"><code>Data.List</code></a> is quite limited.</p>\n\n<p>Then there is the <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/libraries/base-4.12.0.0/Data-List.html\" rel=\"nofollow noreferrer\"><code>Data.List</code></a> library of GHC, but this is, according to <a href=\"https://stackoverflow.com/a/32560351/67579\">@\u00d8rjanJohansen</a> mainly a superset of the functions in the Haskell report, with functions GHC needs <em>itself</em>.</p>\n\n<p>The <a href=\"https://www.haskell.org/platform/contents.html\" rel=\"nofollow noreferrer\">haskell platform</a> aims to distribute a set of standard packages. <code>split</code> is part of the libraries of the <em>full platform</em> as is <code>Data.Text</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 895, "user_id": 4626533, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh6.googleusercontent.com/-YD0ktWjS7j0/AAAAAAAAAAI/AAAAAAAACyU/T7UotNQswJ4/photo.jpg?sz=128", "display_name": "Nolan", "link": "https://stackoverflow.com/users/4626533/nolan"}, "edited": false, "score": 0, "creation_date": 1563534778, "post_id": 57111253, "comment_id": 100741510, "body": "Interesting but doesn&#39;t answer question."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 895, "user_id": 4626533, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh6.googleusercontent.com/-YD0ktWjS7j0/AAAAAAAAAAI/AAAAAAAACyU/T7UotNQswJ4/photo.jpg?sz=128", "display_name": "Nolan", "link": "https://stackoverflow.com/users/4626533/nolan"}, "edited": false, "score": 1, "creation_date": 1563537325, "post_id": 57111253, "comment_id": 100742793, "body": "@Nolan that&#39;s because the question is unanswerable. :) &quot;Why is it that way?&quot; -- <i>&quot;because&quot;</i>. Do you really want the minutes from the committee meeting where this was decided? :)"}, {"owner": {"reputation": 895, "user_id": 4626533, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh6.googleusercontent.com/-YD0ktWjS7j0/AAAAAAAAAAI/AAAAAAAACyU/T7UotNQswJ4/photo.jpg?sz=128", "display_name": "Nolan", "link": "https://stackoverflow.com/users/4626533/nolan"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1563538036, "post_id": 57111253, "comment_id": 100743120, "body": "@WillNess I disagree. I want to hear the arguments, the reasons why it&#39;s not in base."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 895, "user_id": 4626533, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh6.googleusercontent.com/-YD0ktWjS7j0/AAAAAAAAAAI/AAAAAAAACyU/T7UotNQswJ4/photo.jpg?sz=128", "display_name": "Nolan", "link": "https://stackoverflow.com/users/4626533/nolan"}, "edited": false, "score": 1, "creation_date": 1563538701, "post_id": 57111253, "comment_id": 100743480, "body": "@Nolan Then you&#39;re asking the question on the wrong website."}, {"owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1563544849, "post_id": 57111253, "comment_id": 100746890, "body": "I believe @chepner is probably referring to the fact that &quot;there is no actual problem to be solved&quot; and perhaps a hint of &quot;your question is just a rant in disguise&quot;, which are both listed in the Help Center as types of questions you should avoid asking on this site.  The obvious correct answer to your question is &quot;There are no good arguments.&quot;, and if that&#39;s unsatisfying, consider it evidence that your question isn&#39;t a good fit for SO.  Maybe Reddit would be a better forum?"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 895, "user_id": 4626533, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh6.googleusercontent.com/-YD0ktWjS7j0/AAAAAAAAAAI/AAAAAAAACyU/T7UotNQswJ4/photo.jpg?sz=128", "display_name": "Nolan", "link": "https://stackoverflow.com/users/4626533/nolan"}, "edited": false, "score": 0, "creation_date": 1563606796, "post_id": 57111253, "comment_id": 100762841, "body": "@Nolan <a href=\"https://www.dreamsongs.com/10ideas.html\" rel=\"nofollow noreferrer\">dreamsongs.com/10ideas.html</a> :)"}], "tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 6, "last_activity_date": 1563568385, "last_edit_date": 1563568385, "creation_date": 1563534617, "answer_id": 57111253, "question_id": 57109229, "link": "https://stackoverflow.com/questions/57109229/why-haskell-doesnt-have-split-function/57111253#57111253", "title": "Why Haskell doesn&#39;t have split function?", "body": "<p>In a nutshell, that's how the ecosystem rolls.</p>\n\n<p>If we take \"standard library\" literally and look at exactly which modules are specified by <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskell.html#haskellpa1.html\" rel=\"nofollow noreferrer\">the Haskell report</a>, we'll find Haskell's standard library is very minimal -- not even all of <em>base</em> is included. We might reasonably widen our scope a bit, and regard <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/libraries/\" rel=\"nofollow noreferrer\">the libraries bundled with GHC</a> as <em>de facto</em> standard. This second group includes some absolutely fundamental stuff, such as the rest of <em>base</em>, <em>bytestring</em>, <em>text</em>, <em>containers</em>, <em>transformers</em> and <em>mtl</em>. </p>\n\n<p>In any case, the broader point is that the notion of a blessed set of core libraries does not play as much as a role in Haskell practice as it does in some other languages. It is entirely possible for a library to play an important role in the ecosystem without being regarded as somehow standard. The <em>split</em> library <a href=\"https://stackoverflow.com/a/57109432/2751851\">mentioned by Willem</a>, with its <a href=\"https://packdeps.haskellers.com/reverse/split\" rel=\"nofollow noreferrer\">555 reverse dependencies in Hackage</a>, arguably fits the bill.</p>\n"}], "owner": {"reputation": 895, "user_id": 4626533, "user_type": "registered", "accept_rate": 80, "profile_image": "https://lh6.googleusercontent.com/-YD0ktWjS7j0/AAAAAAAAAAI/AAAAAAAACyU/T7UotNQswJ4/photo.jpg?sz=128", "display_name": "Nolan", "link": "https://stackoverflow.com/users/4626533/nolan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 378, "favorite_count": 0, "closed_date": 1563549998, "answer_count": 2, "score": 3, "last_activity_date": 1563568385, "creation_date": 1563527604, "last_edit_date": 1563550086, "question_id": 57109229, "link": "https://stackoverflow.com/questions/57109229/why-haskell-doesnt-have-split-function", "closed_reason": "Opinion-based", "title": "Why Haskell doesn&#39;t have split function?", "body": "<p>In many languages there's a function that breaks strings into parts using specified delimiter. It's often called <code>split</code>. You can find it in Python, C#, Java, JavaScript. But Haskell while being quite mature still lacks such function in the standard library. I know there's a library called <code>split</code> providing exactly this function. But it's not the same as having this function in the standard library.</p>\n\n<p>So while this function is so handy and usefull that many other languages added it to their standard library its actually intersting why Haskell doesn't have it. <strong>What are the arguments behind not having it?</strong></p>\n\n<p>UPD: The question is about <code>base</code> package i.e. Prelude. In other words why does it have <code>words</code> and <code>lines</code> but doesn't have <code>split</code>?</p>\n"}, {"tags": ["haskell", "functional-programming", "applicative"], "comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 3, "creation_date": 1563502337, "post_id": 57104617, "comment_id": 100729989, "body": "You&#39;ll probably find the results much easier to understand if you distinguish between <code>pure Just 3</code> and <code>pure (Just 3)</code>."}, {"owner": {"reputation": 17989, "user_id": 365102, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/e3139989e6548e7deac2cd45253d60df?s=128&d=identicon&r=PG", "display_name": "Mateen Ulhaq", "link": "https://stackoverflow.com/users/365102/mateen-ulhaq"}, "edited": false, "score": 2, "creation_date": 1563502388, "post_id": 57104617, "comment_id": 100730000, "body": "Do you mean: <code>(pure (Just 3)) :: Maybe (Maybe Integer)</code> == <code>Just (Just 3)</code>?"}, {"owner": {"reputation": 17989, "user_id": 365102, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/e3139989e6548e7deac2cd45253d60df?s=128&d=identicon&r=PG", "display_name": "Mateen Ulhaq", "link": "https://stackoverflow.com/users/365102/mateen-ulhaq"}, "edited": false, "score": 0, "creation_date": 1563502529, "post_id": 57104617, "comment_id": 100730019, "body": "FWIW, <code>Just</code> can be thought of as a function with signature <code>a -&gt; Maybe a</code>."}], "answers": [{"tags": [], "owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "is_accepted": true, "score": 10, "last_activity_date": 1563538298, "last_edit_date": 1563538298, "creation_date": 1563506696, "answer_id": 57105111, "question_id": 57104617, "link": "https://stackoverflow.com/questions/57104617/haskell-understanding-the-pure-function-for-applicative-functors/57105111#57105111", "title": "Haskell: Understanding the pure function for Applicative functors", "body": "<blockquote>\n  <p>What happens when you apply pure to a value that's already inside an applicative value? </p>\n</blockquote>\n\n<p>It just gets wrapped in an additional layer. The end result is an applicative value nested inside another applicative value.</p>\n\n<blockquote>\n  <p>E.g. what happens if you do something like <code>pure Just 3</code>?</p>\n</blockquote>\n\n<p>This is an interesting question, although probably not for the reasons you meant. The important point here is to distinguish <code>pure (Just 3)</code> \u2014 which was probably what you meant \u2014 from <code>pure Just 3 = (pure Just) 3</code>, which is what you wrote. This gives two scenarios:</p>\n\n<ul>\n<li><code>pure (Just 3)</code> simply applies <code>pure</code> to the value <code>Just 3</code>, which \u2014 as I discussed above \u2014 gives <code>Just (Just 3)</code>, which is a nested applicative value.</li>\n<li><p><code>(pure Just) 3</code> is an interesting case. Recall the types of <code>pure</code> and <code>Just</code>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>pure :: Applicative f =&gt; a -&gt; f a\nJust :: a -&gt; Maybe a\n-- so:\npure Just :: Applicative f =&gt; f (a -&gt; Maybe a)\n</code></pre>\n\n<p>In other words, <code>pure Just</code> takes the function <code>Just</code> and wraps it inside an applicative value.</p>\n\n<p>Next, we want to take <code>pure Just</code> and apply it to a value <code>3</code>. But we can\u2019t do this, since <code>f (a -&gt; Maybe a)</code> is a value, not a function! So <code>(pure Just) 3</code> should result in a type error.</p>\n\n<p>\u2026except it turns out to typecheck just fine! So we\u2019re missing something. In this case, it turns out there is an applicative instance for functions:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>instance Applicative ((-&gt;) r) where\n  pure x = \\r -&gt; x\n  (&lt;*&gt;) = _irrelevant_here\n</code></pre>\n\n<p>The syntax is a bit funny, but it basically means that <code>r -&gt; ...</code> is an applicative. This particular instance is known as the <em>Reader monad</em>, and it\u2019s very widely used. (For more about this particular data type, see e.g. <a href=\"https://mmhaskell.com/monads-4\" rel=\"nofollow noreferrer\">here</a> or <a href=\"https://hackernoon.com/the-reader-monad-part-1-1e4d947983a8\" rel=\"nofollow noreferrer\">here</a>.) The idea is that <code>r -&gt; a</code> can compute an <code>a</code> given an <code>r</code> input; in this case, <code>pure x</code> creates a function which ignores its input and returns <code>x</code> always, and <code>f &lt;*&gt; x</code> feeds the <code>r</code> input into both <code>f</code> and <code>x</code>, then combines the two. In this case, we\u2019re only using <code>pure</code>, so it\u2019s easy to evaluate <code>(pure Just) 3</code> by hand:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>(pure Just) 3\n= (\\r -&gt; Just) 3\n= Just\n</code></pre>\n\n<p>So the idea here is that <code>pure</code> wraps <code>Just</code> in an applicative value, which in this case happens to be a function; then, we apply this function to <code>3</code>, which gets rid of the wrapper to reveal the original <code>Just</code>.</p></li>\n</ul>\n"}, {"tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": false, "score": 5, "last_activity_date": 1563509557, "last_edit_date": 1563509557, "creation_date": 1563508016, "answer_id": 57105257, "question_id": 57104617, "link": "https://stackoverflow.com/questions/57104617/haskell-understanding-the-pure-function-for-applicative-functors/57105257#57105257", "title": "Haskell: Understanding the pure function for Applicative functors", "body": "<p>First of all, pure has the type:</p>\n\n<pre><code>pure :: Applicative f =&gt; a -&gt; f a\n</code></pre>\n\n<p>To make things simpler, think of the kind of f</p>\n\n<pre><code>:k f \nf :: * -&gt; *\n</code></pre>\n\n<p>and the kind of <code>a</code> is <code>*</code></p>\n\n<p>then the type of <code>a</code>, is just <code>a</code>, any <code>a</code>, the most polymorphic of all (but with kind <code>*</code> remember). So you don't really care the value of a, you just have a restriction, and that's the <code>typeclass</code> Applicative, and the kind of <code>f</code> (remember <code>* -&gt; *</code>)</p>\n\n<p>so in this case:</p>\n\n<pre><code>gchi&gt; pure 3 :: Maybe Int\nghci&gt; Just 3\n</code></pre>\n\n<p>here <code>f</code> is <code>Maybe</code> and <code>a</code> is <code>3</code></p>\n\n<p>In the same way</p>\n\n<pre><code>gchi&gt; pure $ Just 3 :: Maybe (Maybe Int)\ngchi&gt; Just (Just 3)\n</code></pre>\n\n<p>here <code>f</code> is again <code>Maybe</code> and <code>a</code> is <code>Just 3</code></p>\n\n<p>and you can play a little changing the type to pure:</p>\n\n<pre><code>gchi&gt; pure 3 :: [Double]\nghci&gt; [3.0]\n</code></pre>\n\n<p>here, <code>f</code> is [], and <code>a</code> is <code>3</code></p>\n\n<p>same way</p>\n\n<pre><code>ghci&gt; pure [3] :: [[Double]]\nghci&gt; [[3.0]]\n</code></pre>\n\n<p>finally here, <code>f</code> again, is <code>[]</code> and <code>a</code> is [3]</p>\n"}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 246, "favorite_count": 1, "accepted_answer_id": 57105111, "answer_count": 2, "score": 2, "last_activity_date": 1563538298, "creation_date": 1563501628, "last_edit_date": 1563529351, "question_id": 57104617, "link": "https://stackoverflow.com/questions/57104617/haskell-understanding-the-pure-function-for-applicative-functors", "title": "Haskell: Understanding the pure function for Applicative functors", "body": "<p>I am learning about Applicative Functors and the pure function has the following type declaration:</p>\n\n<pre><code>pure :: a -&gt; f a \n</code></pre>\n\n<p>I understand that the pure function takes a value of any type and returns an applicative value with that value inside it. So if the applicative instance was <code>Maybe</code>, <code>pure 3</code> would give <code>Just 3</code>.</p>\n\n<p>However, what happens when you apply pure to a value that's already inside an applicative value? E.g. what happens if you do something like <code>pure Just 3</code>?</p>\n"}, {"tags": ["oop", "haskell", "polymorphism", "subtyping", "adhoc-polymorphism"], "comments": [{"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 2, "creation_date": 1563483972, "post_id": 57102313, "comment_id": 100726192, "body": "Yes, Haskell type classes are a way to achieve ad-hoc polymorphism. Interfaces in C# or Java implement subtype polymorphism: an object that implements an interface is a subtype of that interface."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 3, "creation_date": 1563487051, "post_id": 57102313, "comment_id": 100727247, "body": "Subtyping is simply not in Haskell. This is because subtyping is not compatible with Hindley-Milner type inference. Subtyping is a purely OO concept."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 6, "creation_date": 1563487550, "post_id": 57102313, "comment_id": 100727391, "body": "@AJFarmar rank-2 types with typeclass constraints can be used to achieve, essentially, subtyping. This isn&#39;t usually a very practical thing to do, but it can be very powerful, with the most prominent example being the <a href=\"http://hackage.haskell.org/package/lens\" rel=\"nofollow noreferrer\">lens hierarchy</a>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1563811374, "post_id": 57102313, "comment_id": 100815018, "body": "@AJFarmar, relatedly/more generally, subsumption can be seen as an extremely restricted form of subtyping. <code>(forall a. a -&gt; a) \u2264 (Int -&gt; Int)</code>."}], "answers": [{"comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1563796220, "post_id": 57103109, "comment_id": 100805875, "body": "Types in Haskell are not subtypes of type classes (e.g. Int is not a subtype of Integral) because type classes are not types (e.g. Integral is not a type). There is no type hierarchy. There is a type class hierarchy."}, {"owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "reply_to_user": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1563807491, "post_id": 57103109, "comment_id": 100812850, "body": "@n.m. Thank you so much for helping me improve my answer, I&#39;ve taken your advice and edited the question, I really want a feedback from you, to know if it needs to be improved or if it is fine now, thanks os much for the time"}], "tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": false, "score": 3, "last_activity_date": 1563807400, "last_edit_date": 1563807400, "creation_date": 1563487034, "answer_id": 57103109, "question_id": 57102313, "link": "https://stackoverflow.com/questions/57102313/does-interface-belong-to-ad-hoc-polymorphism-i-e-overloading-or-subtype-polym/57103109#57103109", "title": "Does interface belong to ad hoc polymorphism (i.e. overloading) or subtype polymorphism?", "body": "<p><strong>Types</strong> has not type hierarchy, but <strong>Typeclasses</strong> has. </p>\n\n<p>I wouldn't think about type classes as class inheritance, because you don't have the parent structure, you just have the signature. They may be seen as the classic interfaces of OOP languages, kind of...</p>\n\n<p>But as the text you quoted says:</p>\n\n<blockquote>\n  <p>For example, the <code>(+)</code> operator essentially does something entirely different when applied to floating-point values as compared to when applied to integers</p>\n</blockquote>\n\n<p>Something so simple as <code>(+)</code> function, with types are not so. </p>\n\n<p>You have here a <code>TypeClass</code> hierarchy of <code>Num</code> to respect. For example</p>\n\n<pre><code>plus :: Num a =&gt; a -&gt; a -&gt; a\nplus x y = x + y\n</code></pre>\n\n<p>and there you have (I can count) four direct subtypes <code>Integral</code> (implemented by <code>Int</code> and <code>Integral</code>) and <code>Fractional</code> (implemented by <code>Float</code> and <code>Double</code>). <code>Integral</code> and <code>Fractional</code> typeclasses are subtypes of <code>Num</code> typeclass.</p>\n\n<p>so, look at this function type signatures:</p>\n\n<pre><code>(/) :: Fractional a =&gt; a -&gt; a -&gt; a\n\n(div) :: Integral a =&gt; a -&gt; a -&gt; a\n\n(+) :: Num a =&gt; a -&gt; a -&gt; a\n</code></pre>\n\n<p>each one of those has it's own implementation, and restricts the data type you can use in those type hierarchies of subtypes and supertypes, always talking about the <code>Typeclass</code> and not <strong>the type itself</strong>.</p>\n\n<p>About the relation with OOP:</p>\n\n<p>In Java by example, the Types and The classes are veeeeeeery different things. Look:</p>\n\n<pre><code>List&lt;String&gt; xs = new ArrayList&lt;&gt;();\nList&lt;String&gt; ys = new LinkedList&lt;&gt;();\nxs.add(\"Haskell\");\nys.add(\"Forever\");\n</code></pre>\n\n<p>The type there, is <code>List</code>, but the behavior of those lists is given by the <strong>Class</strong> (ArrayList or LinkedList).\nAnd even more, you can do:</p>\n\n<pre><code>ArrayList&lt;String&gt; ls = new ArrayList&lt;&gt;();\nls.add(\"something);\n</code></pre>\n\n<p>Is valid, the type and the class are the same. </p>\n\n<p>On the other hand, in Haskell is not like that, the <code>(+)</code> method behavior is given by the <strong>implementation of the type according to its typeclass</strong>.</p>\n\n<p>There is an example of a classic useful <code>Typeclass</code> hierarchy in Haskell:</p>\n\n<p><a href=\"https://i.stack.imgur.com/drBdh.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/drBdh.png\" alt=\"Typeclass Hierarchy:\"></a></p>\n"}], "owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 313, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1563807400, "creation_date": 1563482245, "last_edit_date": 1592644375, "question_id": 57102313, "link": "https://stackoverflow.com/questions/57102313/does-interface-belong-to-ad-hoc-polymorphism-i-e-overloading-or-subtype-polym", "title": "Does interface belong to ad hoc polymorphism (i.e. overloading) or subtype polymorphism?", "body": "<p><a href=\"https://wiki.haskell.org/Polymorphism\" rel=\"nofollow noreferrer\">https://wiki.haskell.org/Polymorphism</a> says</p>\n<blockquote>\n<p><strong>Ad-hoc polymorphism</strong> refers to when a value is able to adopt any one of several types because it, or a value it uses, has been given a separate definition for each of those types. For example, the + operator essentially does something entirely different when applied to floating-point values as compared to when applied to integers \u2013 in Python it can even be applied to strings as well. Most languages support at least some ad-hoc polymorphism, but in languages like C it is restricted to only built-in functions and types. Other languages like C++ allow programmers to provide their own <strong>overloading</strong>, supplying multiple definitions of a single function, to be disambiguated by the types of the arguments. In Haskell, this is achieved via the system of <strong>type classes</strong> and class instances.</p>\n<p>Despite the similarity of the name, Haskell's <strong>type classes</strong> are quite\ndifferent from the classes of most object-oriented languages. They\nhave more in common with <strong>interfaces</strong>, in that they specify a series of\nmethods or values by their type signature, to be implemented by an\ninstance declaration.</p>\n</blockquote>\n<p>Does it mean that type classes is a way to achieve overloading i.e. ad hoc polymorphism?</p>\n<p>What kind of polymorphism does interface in OO languages (e.g. Java, C#) belong to, ad hoc polymorphism (i.e. overloading) or subtype polymorphism?</p>\n<ul>\n<li><p>Since type class is similar to interface, is interface a way to achieve overloading i.e. ad hoc polymorphism, just as type class is?</p>\n</li>\n<li><p>Is interface   similar to base class, so is interface a way to achieve subtype polymorphism, just as class inheritance is?</p>\n</li>\n</ul>\n<p>Thanks.</p>\n"}, {"tags": ["haskell", "yesod"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1563480435, "post_id": 57101911, "comment_id": 100724801, "body": "Yes, you can use <code>liftIO</code>, so <code>res &lt;- liftIO funB</code>."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1563480615, "post_id": 57101911, "comment_id": 100724874, "body": "Ahh sorry, read it the opposite way, you can use <code>handler</code>."}], "answers": [{"comments": [{"owner": {"reputation": 505, "user_id": 6621898, "user_type": "registered", "accept_rate": 60, "profile_image": "https://graph.facebook.com/10204980448310749/picture?type=large", "display_name": "Tanmay Bhattacharya", "link": "https://stackoverflow.com/users/6621898/tanmay-bhattacharya"}, "edited": false, "score": 0, "creation_date": 1563486235, "post_id": 57102132, "comment_id": 100727000, "body": "This is exactly what I need ,but I get the variable not in scope handler:: Yesod.Core.Types.HandlerFor Foundation.App (Either String String) -&gt; IO (Either String b0) , is there something I need to import ? I used the yesod scaffolded yesod-postgress template to start building the server"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 505, "user_id": 6621898, "user_type": "registered", "accept_rate": 60, "profile_image": "https://graph.facebook.com/10204980448310749/picture?type=large", "display_name": "Tanmay Bhattacharya", "link": "https://stackoverflow.com/users/6621898/tanmay-bhattacharya"}, "edited": false, "score": 0, "creation_date": 1563526837, "post_id": 57102132, "comment_id": 100737635, "body": "@TanmayBhattacharya: it is defined in the <code>Application</code> module, so you might need to import it in <code>import Application(handler)</code>."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 3, "last_activity_date": 1563481398, "creation_date": 1563481398, "answer_id": 57102132, "question_id": 57101911, "link": "https://stackoverflow.com/questions/57101911/how-to-call-functions-in-handler-monad-from-io-monad/57102132#57102132", "title": "How to call functions in Handler Monad from IO Monad", "body": "<p>If you use the <code>yesod-simple</code> (or friends) template of stack, then by default, the template will contain a function named <a href=\"https://github.com/commercialhaskell/stack-templates/blob/c9d9d5699f3bfd58fef0a279afe23bf3b77ea749/yesod-simple.hsfiles#L606\" rel=\"nofollow noreferrer\"><code>handler</code> [GitHub]</a>:</p>\n\n<blockquote><pre><code>-- | Run a handler\nhandler :: Handler a -&gt; IO a\nhandler h = getAppSettings &gt;&gt;= makeFoundation &gt;&gt;= flip unsafeHandler h</code></pre></blockquote>\n\n<p>This thus enables you to run a <code>Handler a</code> in an <code>IO a</code>.</p>\n\n<p>You can thus run your function like:</p>\n\n<pre><code>funA :: String -&gt; IO ()\nfunA parameter = do\n    res &lt;- <b>handler</b> (funB parameter)\n    case res of\n        Left x -&gt; ...\n        Right y -&gt; ...</code></pre>\n"}], "owner": {"reputation": 505, "user_id": 6621898, "user_type": "registered", "accept_rate": 60, "profile_image": "https://graph.facebook.com/10204980448310749/picture?type=large", "display_name": "Tanmay Bhattacharya", "link": "https://stackoverflow.com/users/6621898/tanmay-bhattacharya"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 154, "favorite_count": 0, "accepted_answer_id": 57102132, "answer_count": 1, "score": 2, "last_activity_date": 1563481398, "creation_date": 1563480303, "question_id": 57101911, "link": "https://stackoverflow.com/questions/57101911/how-to-call-functions-in-handler-monad-from-io-monad", "title": "How to call functions in Handler Monad from IO Monad", "body": "<p>I am building a web application in Yesod .</p>\n\n<p>I have two function of type </p>\n\n<pre><code>funA :: String -&gt; IO ()\nfunB :: String -&gt; Handler (Either a b)\n</code></pre>\n\n<p>Is there any way I can call funB from inside funA ,something of this sort </p>\n\n<pre><code>  res &lt;- funB\n   case res of ...\n</code></pre>\n\n<p>without changing the type of funA .</p>\n\n<p>I am not very clear on what the run function of a monad does, but I have used it in some other libraries to this effect , but for Yesod the runHandler method is for internal use only.Does it have some other method for the same task?</p>\n"}, {"tags": ["haskell", "ghc", "compiler-warnings"], "comments": [{"owner": {"reputation": 84731, "user_id": 510937, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/70b13a9ae1aae1ca1aa6ac8dab4643f2?s=128&d=identicon&r=PG", "display_name": "Bakuriu", "link": "https://stackoverflow.com/users/510937/bakuriu"}, "edited": false, "score": 0, "creation_date": 1563475256, "post_id": 57100591, "comment_id": 100722710, "body": "GHC has the standard <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/using-warnings.html#ghc-flag--Werror\" rel=\"nofollow noreferrer\"><code>-Werror</code></a> flag"}], "answers": [{"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 4, "last_activity_date": 1563480011, "creation_date": 1563480011, "answer_id": 57101860, "question_id": 57100591, "link": "https://stackoverflow.com/questions/57100591/severity-of-ghc-multiple-package-version-warning/57101860#57101860", "title": "Severity of GHC multiple package version warning", "body": "<p>That's not GHC what's warning you about multiple package-versions. GHC just compiles the packages that were specified... which hardly anybody ever does by hand, but let Stack or Cabal do it for them. And in this case it's Cabal giving the warning message.</p>\n\n<p>If different versions cause a problem, you will in practice almost always see it at compile-time. It's most often a missing-instance error, because you're e.g. trying to use the class <code>Foo</code> from <code>pkg-1.0</code> with the type <code>Bar</code> from <code>pkg-2.0</code>. Direct version mismatch of a data type in public interfaces can also happen.<br>\n<em>Theoretically</em>, I think it would also be possible to have an error like <code>(Int,Int)</code> meaning two different things, which the compiler would not catch. However, this kind of change is asking for trouble anyways. Whenever the order of some data fields is not completely obvious and might change in the future, a <code>data</code> record should be used to make sure the compiler can catch it. (This is largely orthogonal to the <code>different-versions-of-same-package</code> issue.)</p>\n\n<p>If you want to be safe from any version-mismatch issues, you can use Stack instead of Cabal. I think this is a good part of the reason why many Haskellers prefer Stack.</p>\n"}], "owner": {"reputation": 2032, "user_id": 3403369, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/2f22e034ed5c2f2adc584dc721718fb4?s=128&d=identicon&r=PG", "display_name": "robx", "link": "https://stackoverflow.com/users/3403369/robx"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 50, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1563482399, "creation_date": 1563474176, "question_id": 57100591, "link": "https://stackoverflow.com/questions/57100591/severity-of-ghc-multiple-package-version-warning", "title": "Severity of GHC multiple package version warning", "body": "<p>GHC warns when a package depends on different instances of the same package via dependencies, e.g.:</p>\n\n<pre><code>Configuring tasty-hspec-1.1.5.1...\nWarning:\n    This package indirectly depends on multiple versions of the same package. \nThis is very likely to cause a compile failure.\n      package hspec-core (hspec-core-2.5.5-H06vLnMfEeIEsZFdji6h0O) requires \nclock-0.7.2-9qwmBbNbGzEOSffjlyarp\n      package tasty (tasty-1.1.0.3-I8Vu9v0lHj8Jlg3jpKXavp) requires \nclock-0.7.2-Cf9UTsaN2AjEpBnoMpmgkU\n</code></pre>\n\n<p>Two things are unclear to me with respect to this warning:</p>\n\n<ol>\n<li>If GHC warns, and the compile doesn't fail, is everything fine? That is, could subtly conflicting instances of the same package still cause bad behaviour? (I'm imagining something like a type <code>(Int, Int)</code> in the public interface, with both instances of the package switching the order of the fields.)</li>\n<li>Is there a way to make GHC fail for this warning?</li>\n</ol>\n"}, {"tags": ["haskell", "polymorphism", "typeclass", "adhoc-polymorphism"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 2, "creation_date": 1563466332, "post_id": 57098679, "comment_id": 100718711, "body": "That&#39;s the only way to achieve that kind of polymorphism, but of course there are still functions like <code>id :: a -&gt; a</code> which are polymorphic in a very different way."}], "answers": [{"tags": [], "owner": {"reputation": 14537, "user_id": 7128034, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/T8aRg.jpg?s=128&g=1", "display_name": "Dami&#225;n Rafael Lattenero", "link": "https://stackoverflow.com/users/7128034/dami%c3%a1n-rafael-lattenero"}, "is_accepted": false, "score": 5, "last_activity_date": 1563478733, "last_edit_date": 1563478733, "creation_date": 1563466431, "answer_id": 57098789, "question_id": 57098679, "link": "https://stackoverflow.com/questions/57098679/when-shall-i-define-polymorphic-functions-by-type-classes-or-by-some-other-ways/57098789#57098789", "title": "When shall I define polymorphic functions by type classes or by some other ways?", "body": "<p>There is a difference between polymorphic fuctions in OOP and in haskell, I say it because the term \"polymorphism \" is usually used in OOP. </p>\n\n<p>Functions over list, by example, are polymorphic:</p>\n\n<pre><code>cons:: a -&gt; [a] -&gt; [a]\ncons x xs = x:xs\n</code></pre>\n\n<p>where a is the polymorphic type, and there is no typeclass there.</p>\n\n<p>By the way, there is a way to implement quickly typeclasses, by default, such as <code>Eq</code> or <code>Show</code>, by example:</p>\n\n<pre><code>data MBool = MTrue | MFalse deriving (Eq, Show)\n</code></pre>\n\n<p>So, the difference is that the typeclass is a constraint, imagine this function with lists:</p>\n\n<pre><code>mapShow :: Show a =&gt;  [a] -&gt; [String]\nmapShow = map show\n</code></pre>\n\n<p>That's different, because now, a is restricted, it can't be any \"a\". It should implement the typeclass <code>Show</code>.</p>\n\n<p>In conclusion, you can see that <code>a</code> type in <code>cons</code> function is more generic or abstract than <code>Show =&gt; a -&gt; a</code>  type in <code>mapShow</code> function.</p>\n"}, {"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 6, "last_activity_date": 1563466694, "creation_date": 1563466694, "answer_id": 57098860, "question_id": 57098679, "link": "https://stackoverflow.com/questions/57098679/when-shall-i-define-polymorphic-functions-by-type-classes-or-by-some-other-ways/57098860#57098860", "title": "When shall I define polymorphic functions by type classes or by some other ways?", "body": "<blockquote>\n  <p>Is type class a way to define polymorphic functions?</p>\n</blockquote>\n\n<p><strong>Yes</strong>, it is <em>a</em> way. But not the only way. For example <em>parametric polymorphism</em> simply means that if you define a function like <code>init :: [a] -&gt; [a]</code>, it will work for any <code>a</code>. Type classes are used for <em>ad-hoc polymorphism</em>: depending on the type, the implementation can be entirely different. This in contrast to <em>parametric polymorphism</em>, where the <code>head</code> function is always the same, regardless the type for <code>a</code>.</p>\n\n<blockquote>\n  <p>Is type class the only way to define polymorphic functions?</p>\n</blockquote>\n\n<p><strong>No</strong>, see the previous section.</p>\n\n<blockquote>\n  <p>Can I define <code>==</code> and <code>/=</code> for <code>Bool</code> (and any other type) without using type class <code>Eq</code>?</p>\n</blockquote>\n\n<p>That depends on whether the implementation is the same for all types or not. You can use the <a href=\"https://downloads.haskell.org/~ghc/6.12.2/docs/html/users_guide/flag-reference.html#id598783\" rel=\"noreferrer\"><strong><code>-XNoImplicitPrelude</code></strong></a> flag to avoid importing the <code>Prelude</code>, and then you can define your own <code>(==)</code> function.</p>\n"}, {"comments": [{"owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "edited": false, "score": 0, "creation_date": 1563481416, "post_id": 57098868, "comment_id": 100725174, "body": "Thanks. Is type class the only way to overload functions in Haskell?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "edited": false, "score": 0, "creation_date": 1563482209, "post_id": 57098868, "comment_id": 100725477, "body": "Depends on what you call \u201coverload\u201d. It is possible to have <i>different functions with the same name</i> in different modules, but you can&#39;t use those polymorphically (basically, the names are qualified/separated already during parsing, like with variables of the same name in different scopes). Polymorphic-overloading does indeed require typeclasses, so if that&#39;s what you want then a class is the right thing to use."}, {"owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "edited": false, "score": 0, "creation_date": 1563482379, "post_id": 57098868, "comment_id": 100725546, "body": "Thanks. What do you mean by &quot;use those polymorphically&quot;?"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "edited": false, "score": 0, "creation_date": 1563483850, "post_id": 57098868, "comment_id": 100726138, "body": "Invoking them by the single name and having the compiler (or runtime) figure out which implementation to use, based on the types."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 7, "last_activity_date": 1563466715, "creation_date": 1563466715, "answer_id": 57098868, "question_id": 57098679, "link": "https://stackoverflow.com/questions/57098679/when-shall-i-define-polymorphic-functions-by-type-classes-or-by-some-other-ways/57098868#57098868", "title": "When shall I define polymorphic functions by type classes or by some other ways?", "body": "<p>You can always write <em>unconstrained</em> polymorphic function, that doesn't require any typeclass. A simple example is</p>\n\n<pre><code>length :: [a] -&gt; Int\n</code></pre>\n\n<p>\u2013 this works without a typeclass, and (well, <em>because</em>) it works for <em>any type</em> <code>a</code> whatsoever. Namely, <code>length</code> doesn't actually care what the <em>values</em> in that list are, it only cares about the <em>structure</em> in which those values are contained. It never actually does anything with those values themselves, and the polymorphic type actually guarantees that.</p>\n\n<p>If the polymorphic task you need is of this form, i.e. a type that you don't actually need to access, you just know <em>it's there</em>, then you should not write/invoke a type class, just use ML-style parametric polymorphism as in <code>length</code>. However, quite often you <em>will</em> need to access the values themselves, inspect them in some way. Doing that without however limiting you to a particular concrete type is what type classes are there for. <code>Eq</code>, as you quoted yourself, is an example.</p>\n"}], "owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 108, "favorite_count": 0, "accepted_answer_id": 57098868, "answer_count": 3, "score": 3, "last_activity_date": 1563478733, "creation_date": 1563466068, "last_edit_date": 1563476519, "question_id": 57098679, "link": "https://stackoverflow.com/questions/57098679/when-shall-i-define-polymorphic-functions-by-type-classes-or-by-some-other-ways", "title": "When shall I define polymorphic functions by type classes or by some other ways?", "body": "<p>I am trying to figure out the purpose of type class, and what else is there if not using type class.</p>\n\n<p>Is type class   a way to define polymorphic functions?</p>\n\n<p>Is type class the only way to define polymorphic functions? For example:</p>\n\n<pre><code>class Eq a where\n    (==), (/=) :: a -&gt; a -&gt; Bool\n    x /= y  =  not (x == y)\n\ninstance Eq Bool where \n    False == False  =  True \n    True  == True   =  True \n    _     == _      =  False\n</code></pre>\n\n<p>Can I define <code>==</code> and <code>/=</code> for <code>Bool</code> (and any other type) without using type class <code>Eq</code>?</p>\n\n<p>Where there is any other way, when shall I use which way to define polymorphic functions, by using type class or by using the other way?</p>\n"}, {"tags": ["haskell", "functional-programming", "functor"], "comments": [{"owner": {"reputation": 121, "user_id": 4956000, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/a58e7c6cf4b4a3756deffa6711867adc?s=128&d=identicon&r=PG&f=1", "display_name": "fsestini", "link": "https://stackoverflow.com/users/4956000/fsestini"}, "edited": false, "score": 4, "creation_date": 1563452964, "post_id": 57094360, "comment_id": 100710346, "body": "Note that since recent versions of GHCi you can get a list of instances for any type T by entering <code>:info T</code>."}, {"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 3, "creation_date": 1563463033, "post_id": 57094360, "comment_id": 100716807, "body": "This question does not show any research effort."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 2, "creation_date": 1563463144, "post_id": 57094360, "comment_id": 100716877, "body": "I&#39;m voting to close this question as off-topic because it&#39;s low effort."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 1, "creation_date": 1563464827, "post_id": 57094360, "comment_id": 100717911, "body": "In the future, I recommend using <a href=\"https://hoogle.haskell.org/\" rel=\"nofollow noreferrer\">hoogle</a> to do research for this kind of question."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 3, "creation_date": 1563465183, "post_id": 57094360, "comment_id": 100718107, "body": "This seems like a perfectly reasonable question to me."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1563471038, "post_id": 57094360, "comment_id": 100720907, "body": "@DanielWagner You have the perspective of an experienced Haskeller (and an experienced programmer). For someone less experienced it&#39;s not always easy to know how to understand the documentation or even where to find it. Besides, there are plenty of questions on Stack Overflow whose answer can be found in the docs; the Q&amp;A format is a good opportunity to explain and expand on the documentation (as Willem has done in his answer)."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 10, "last_activity_date": 1563453320, "last_edit_date": 1563453320, "creation_date": 1563452708, "answer_id": 57094422, "question_id": 57094360, "link": "https://stackoverflow.com/questions/57094360/is-gen-an-instance-of-functor/57094422#57094422", "title": "Is Gen an instance of Functor?", "body": "<p><strong>Yes</strong>. This is described in the <a href=\"https://hackage.haskell.org/package/QuickCheck-2.13.2/docs/Test-QuickCheck.html#t:Gen\" rel=\"noreferrer\">documentation for <strong><code>Gen</code></strong></a>: under the <em>instances</em> section, it shows <code>Functor Gen</code>.</p>\n\n<p>It is <a href=\"https://hackage.haskell.org/package/QuickCheck-2.13.2/docs/src/Test.QuickCheck.Gen.html#line-54\" rel=\"noreferrer\">implemented as [src]</a>:</p>\n\n<blockquote><pre><code>instance Functor Gen where\n  fmap f (MkGen h) =\n    MkGen (\\r n -&gt; f (h r n))</code></pre></blockquote>\n\n<p><code>MkGen</code> is the data constructor of <code>Gen</code>. It contains a function of type <code>QCGen -&gt; Int -&gt; a</code>. What we thus basically do is create a function <code>\\r n -&gt; f (h r n)</code> that thus will \"post-process\" the result of <code>h r n</code>.</p>\n"}], "owner": {"reputation": 1905, "user_id": 8713450, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed61e21ec072346277da9569f1c9f966?s=128&d=identicon&r=PG&f=1", "display_name": "ceno980", "link": "https://stackoverflow.com/users/8713450/ceno980"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 183, "favorite_count": 0, "accepted_answer_id": 57094422, "answer_count": 1, "score": 0, "last_activity_date": 1573920638, "creation_date": 1563452520, "last_edit_date": 1573920638, "question_id": 57094360, "link": "https://stackoverflow.com/questions/57094360/is-gen-an-instance-of-functor", "title": "Is Gen an instance of Functor?", "body": "<p>I am learning about functors in Haskell, and I would like to know whether QuickCheck's <a href=\"https://hackage.haskell.org/package/QuickCheck-2.13.2/docs/Test-QuickCheck.html#t:Gen\" rel=\"nofollow noreferrer\"><code>Gen</code></a> is an instance of <code>Functor</code>? Any insights are appreciated.</p>\n"}, {"tags": ["haskell", "types", "polymorphism", "parametric-polymorphism"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1563425104, "post_id": 57085678, "comment_id": 100696965, "body": "&quot;Which is a polymorphic type: a type or a set of types?&quot; Can this question be given any rigorous interpretation? Types are labels given to terms and other language constructs. Polymorphic types are types, by definition (we&#39;re calling then types after all). Are they <i>also</i> sets of concrete types? Maybe; you dig up a definition of a set from your favourite set theory and check the axioms. Is this ever important? We&#39;re not working in a set theory."}], "answers": [{"comments": [{"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 5, "creation_date": 1563414136, "post_id": 57085894, "comment_id": 100694861, "body": "I believe this is about polymorphism as in <code>id :: a -&gt; a</code>, not polymorphism as in <code>data Maybe a = Nothing | Just a</code>."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1563418162, "post_id": 57085894, "comment_id": 100695600, "body": "@HTNW Possibly, but the question was ambiguous in this regard. @Tim referenced a text saying \u201cA type that contains one or more type variables is called polymorphic\u201d, and a type such as <code>Maybe</code> definitely contains a type variable and so is polymorphic. Besides, as far as I can tell, @Tim\u2019s third question (about different substitutions yielding the same type) only makes sense in the context of data types."}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 2, "creation_date": 1563419595, "post_id": 57085894, "comment_id": 100695867, "body": "I think @HTNW &#39;s concern (please correct me if I&#39;m wrong) has to do with <code>Maybe :: * -&gt; *</code> versus <code>forall a. Maybe a :: *</code>, which is something I can picture being slippery ground for the OP, or more generally for someone still getting used to polymorphism."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1563419890, "post_id": 57085894, "comment_id": 100695922, "body": "@duplode Oh, that&#39;s not what I had in mind. Actually, I really hope it&#39;s not, because I&#39;ve just written the mother of all answers to finally put to rest the &quot;what, exactly, is <code>id :: forall a. a -&gt; a</code>&quot; question, and if your interpretation is what&#39;s meant I&#39;ll have to find somewhere <i>else</i> to place it. (slight /s)"}, {"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "reply_to_user": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 1, "creation_date": 1563420563, "post_id": 57085894, "comment_id": 100696062, "body": "@HTNW Fear not: I agree the question is primarily about things like <code>id :: forall a. a -&gt; a</code>, and so, as far as I can tell, your answer is safe :)"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1563452227, "post_id": 57085894, "comment_id": 100709935, "body": "<code>Maybe</code> is not the same as <code>Maybe a</code>. <code>Maybe</code> is a type <i>constructor</i>, and doesn&#39;t contain <i>any</i> type variables. You can stretch and think of <code>Maybe</code> as a <i>collection</i> of types, but it itself is not a type, polymorphic or otherwise."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1563493274, "post_id": 57085894, "comment_id": 100728543, "body": "Excellent point @chepner \u2014 I actually can\u2019t believe I missed that! Of course a polymorphic type like <code>forall a. a -&gt; a</code> is different to a higher-kinded type like <code>Maybe</code>! (Presumably the polymorphic version of the latter is <code>forall a. Maybe a</code>.) That does invalidate my answer\u2026 I\u2019ll edit it now to avoid any more confusion."}], "tags": [], "owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "is_accepted": false, "score": 0, "last_activity_date": 1563493611, "last_edit_date": 1563493611, "creation_date": 1563413380, "answer_id": 57085894, "question_id": 57085678, "link": "https://stackoverflow.com/questions/57085678/which-is-a-polymorphic-type-a-type-or-a-set-of-types/57085894#57085894", "title": "Which is a polymorphic type: a type or a set of types?", "body": "<p><strong>EDIT:</strong> The answer below turns out not to answer the question. The difference is a subtle mistake in terminology: types like <code>Maybe</code> and <code>[]</code> are <em>higher-kinded</em>, whereas types like <code>forall a. a -&gt; a</code> and <code>forall a. Maybe a</code> are <em>polymorphic</em>. The answer below relates to higher-kinded types, but the question was asked about polymorphic types. I\u2019m still leaving this answer up in case it helps anyone else, but I realise now it\u2019s not really an answer to the question.</p>\n\n<p>I would argue that a <s>polymorphic</s> higher-kinded type is closer to a <strong>set</strong> of types. For instance, you could see <code>Maybe</code> as the set {<code>Maybe Int</code>, <code>Maybe Bool</code>, \u2026}.</p>\n\n<p>However, strictly speaking, this is a bit misleading. To address this in more detail, we need to learn about <em>kinds</em>. Similarly to how types describe values, we say that kinds describe types. The idea is:</p>\n\n<ul>\n<li>A <strong>concrete</strong> type (that is, one which has values) has a kind of <code>*</code>. Examples include <code>Bool</code>, <code>Char</code>, <code>Int</code> and <code>Maybe String</code>, which all have type <code>*</code>. This is denoted e.g. <code>Bool :: *</code>. Note that functions such as <code>Int -&gt; String</code> also have kind <code>*</code>, as these are concrete types which can contain values such as <code>show</code>!</li>\n<li>A type with a <strong>type parameter</strong> has a kind containing arrows. For instance, in the same way that <code>id :: a -&gt; a</code>, we can say that <code>Maybe :: * -&gt; *</code>, since <code>Maybe</code> takes a concrete type as an argument (such as <code>Int</code>), and produces a concrete type as a result (such as <code>Maybe Int</code>). Something like <code>a -&gt; a</code> also has kind <code>* -&gt; *</code>, since it has one type parameter (<code>a</code>) and produces a concrete result (<code>a -&gt; a</code>). You can get more complex kinds as well: for instance, <code>data Foo f x = FooConstr (f x x)</code> has kind <code>Foo :: (* -&gt; * -&gt; *) -&gt; * -&gt; *</code>. (Can you see why?)</li>\n</ul>\n\n<p>(If the above explanation doesn\u2019t make sense, the Learn You a Haskell book has <a href=\"http://learnyouahaskell.com/making-our-own-types-and-typeclasses#kinds-and-some-type-foo\" rel=\"nofollow noreferrer\">a great section on kinds</a> as well.)</p>\n\n<p>So now we can answer your questions properly:</p>\n\n<blockquote>\n  <p>Which is a <s>polymorphic</s> higher-kinded type: a type or a set of types?</p>\n</blockquote>\n\n<p>Neither: a <s>polymorphic</s> higher-kinded type is a <strong>type-level function</strong>, as indicated by the arrows in its kind. For instance, <code>Maybe :: * -&gt; *</code> is a type-level function which converts e.g. <code>Int</code> \u2192 <code>Maybe Int</code>, <code>Bool</code> \u2192 <code>Maybe Bool</code> etc.</p>\n\n<blockquote>\n  <p>Is a <s>polymorphic</s> higher-kinded type with a concrete type substituting its type variable a type?</p>\n</blockquote>\n\n<p><strong>Yes</strong>, when your <s>polymorphic</s> higher-kinded type has a kind <code>* -&gt; *</code> (i.e. it has one type parameter, which accepts a concrete type). When you apply a concrete type <code>Conc :: *</code> to a type <code>Poly :: * -&gt; *</code>, it\u2019s just function application, as detailed above, with the result being <code>Poly Conc :: *</code> i.e. a concrete type.</p>\n\n<blockquote>\n  <p>Is a <s>polymorphic</s> higher-kinded type with different concrete types substituting its type variable considered the same or different types?</p>\n</blockquote>\n\n<p>This question is a bit out of place, as it doesn\u2019t have anything to do with kinds. The answer is definitely <strong>no</strong>: two types like <code>Maybe Int</code> and <code>Maybe Bool</code> are not the same. <code>Nothing</code> may be a member of both types, but only the former contains a value <code>Just 4</code>, and only the latter contains a value <code>Just False</code>.</p>\n\n<p>On the other hand, it <em>is</em> possible to have two different substitutions where the resulting types are <em>isomorphic</em>. (An <em>isomorphism</em> is where two types are different, but equivalent in some way. For instance, <code>(a, b)</code> and <code>(b, a)</code> are isomorphic, despite being the same type. The formal condition is that two types <code>p</code>,<code>q</code> are isomorphic when you can write two inverse functions <code>p -&gt; q</code> and <code>q -&gt; p</code>.)</p>\n\n<p>One example of this is <code>Const</code>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>data Const a b = Const { getConst :: a }\n</code></pre>\n\n<p>This type just ignores its second type parameter; as a result, two types like <code>Const Int Char</code> and <code>Const Int Bool</code> are isomorphic. However, they are <strong>not the same type</strong>: if you make a value of type <code>Const Int Char</code>, but then use it as something of type <code>Const Int Bool</code>, this will result in a type error. This sort of functionality is incredibly useful, as it means you can \u2018tag\u2019 a type <code>a</code> using <code>Const a tag</code>, then use the <code>tag</code> as a marker of information on the type level.</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1563418644, "post_id": 57086005, "comment_id": 100695695, "body": "Values don&#39;t have types; terms have types, and bindings have types... What are you trying to say?"}, {"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 2, "creation_date": 1563422840, "post_id": 57086005, "comment_id": 100696488, "body": "I wanted to give the exact same kind of answer but quicky realised it doesn&#39;t hold water. Is <code>(\\x-&gt;x)</code> a value? Why or why not? What <i>is</i> a value? The Haskell report doesn&#39;t ever define &quot;value&quot; but it does say a value has a type, which <b>can</b> be polymorphic."}, {"owner": {"reputation": 2501, "user_id": 598892, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a22954b638ce69b9994c9e3623953a5?s=128&d=identicon&r=PG", "display_name": "Chris Smith", "link": "https://stackoverflow.com/users/598892/chris-smith"}, "edited": false, "score": 0, "creation_date": 1563507154, "post_id": 57086005, "comment_id": 100730704, "body": "I&#39;m not sure how to be any clearer about what I meant.  It&#39;s a fair point that the Haskell Report uses &quot;value&quot; differently, though.  And also that higher rank polymorphism requires a notion of values having polymorphic types."}], "tags": [], "owner": {"reputation": 2501, "user_id": 598892, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8a22954b638ce69b9994c9e3623953a5?s=128&d=identicon&r=PG", "display_name": "Chris Smith", "link": "https://stackoverflow.com/users/598892/chris-smith"}, "is_accepted": false, "score": 1, "last_activity_date": 1563414558, "creation_date": 1563414558, "answer_id": 57086005, "question_id": 57085678, "link": "https://stackoverflow.com/questions/57085678/which-is-a-polymorphic-type-a-type-or-a-set-of-types/57086005#57086005", "title": "Which is a polymorphic type: a type or a set of types?", "body": "<p>There is some nuance in the word \"type\" here.  <em>Values</em> have concrete types, which cannot be polymorphic.  <em>Expressions</em>, on the other hand, have general types, which can be polymorphic.  If you're thinking of types for values, then a polymorphic type can be thought of loosely as defining sets of possible concrete types.  (At least first-order polymorphic types!  Higher-order polymorphism breaks this intuition.)  But that's not always a particularly useful way of thinking, and it's not a sufficient definition.  It doesn't capture <em>which</em> sets of types can be described in this way (and related notions like parametricity.)</p>\n\n<p>It's a good observation, though, that the same word, \"type\", is used in these two related, but different, ways.</p>\n"}, {"comments": [{"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 1, "creation_date": 1563420160, "post_id": 57086661, "comment_id": 100695988, "body": "Minor nitpick: the notation for type equality is usually <code>a ~ Int</code>, not <code>a := Int</code>."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "edited": false, "score": 4, "creation_date": 1563420289, "post_id": 57086661, "comment_id": 100696018, "body": "I know, but I&#39;m not representing equality. I&#39;m representing substitution, which is a syntactic thing, not logical. Further, the first time I saw <code>~</code>, I was thoroughly confused as to its meaning. I think &quot;Substitute <code>a := Int</code>&quot; is much clearer and understandable."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1563436994, "post_id": 57086661, "comment_id": 100701629, "body": "Great answer. I&#39;d add the remark that in dependently-typed languages, the \u201c<code>\u2200</code> is a kind of function\u201d aspect is much more important, e.g. in Coq <code>forall x : P, Q</code> is equivalent to <code>P -&gt; Q</code> if <code>x</code> doesn&#39;t appear in <code>Q</code>. (If it does appear in <code>Q</code>, then it&#39;s a dependent type which can&#39;t be expressed in Haskell.)"}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": false, "score": 15, "last_activity_date": 1563517322, "last_edit_date": 1563517322, "creation_date": 1563419994, "answer_id": 57086661, "question_id": 57085678, "link": "https://stackoverflow.com/questions/57085678/which-is-a-polymorphic-type-a-type-or-a-set-of-types/57086661#57086661", "title": "Which is a polymorphic type: a type or a set of types?", "body": "<blockquote>\n  <p>Is a polymorphic type with a concrete type substituting its type variable a type?</p>\n</blockquote>\n\n<p>That's the point, yes. However, you need to be careful. Consider:</p>\n\n<pre><code>id :: a -&gt; a\n</code></pre>\n\n<p>That's polymorphic. You can substitute <code>a := Int</code> and get <code>Int -&gt; Int</code>, and <code>a := Float -&gt; Float</code> and get <code>(Float -&gt; Float) -&gt; Float -&gt; Float</code>. However, you cannot say <code>a := Maybe</code> and get <code>id :: Maybe -&gt; Maybe</code>. That just doesn't make sense. Instead, we have to require that you can only substitute concrete types like <code>Int</code> and <code>Maybe Float</code> for <code>a</code>, not abstract ones like <code>Maybe</code>. This is handled with the kind system. This is not too important for your question, so I'll just summarize. <code>Int</code> and <code>Float</code> and <code>Maybe Float</code> are all concrete types (that is, they have values), so we say that they have type <code>Type</code> (the type of a type is often called its kind). <code>Maybe</code> is a function that takes a concrete type as an argument and returns a new concrete type, so we say <code>Maybe :: Type -&gt; Type</code>. In the type <code>a -&gt; a</code>, we say the type variable <code>a</code> must have type <code>Type</code>, so now the substitutions <code>a := Int</code>, <code>a := String</code>, etc. are allowed, while stuff like <code>a := Maybe</code> isn't.</p>\n\n<blockquote>\n  <p>Is a polymorphic type with different concrete types substituting its type variable considered the same or different types?</p>\n</blockquote>\n\n<p>No. Back to <code>a -&gt; a</code>: <code>a := Int</code> gives <code>Int -&gt; Int</code>, but <code>a := Float</code> gives <code>Float -&gt; Float</code>. Not the same.</p>\n\n<blockquote>\n  <p>Which is a polymorphic type: a type or a set of types?</p>\n</blockquote>\n\n<p>Now that's a loaded question. You can skip to the TL;DR at the end, but the question of \"what is a polymorphic type\" is actually really confusing in Haskell, so here's a wall of text.</p>\n\n<p>There are two ways to see it. Haskell started with one, then moved to the other, and now we have a ton of old literature referring to the old way, so the syntax of the modern system tries to maintain compatibility. It's a bit of a hot mess. Consider</p>\n\n<pre><code>id x = x\n</code></pre>\n\n<p>What is the type of <code>id</code>? One point of view is that <code>id :: Int -&gt; Int</code>, and also <code>id :: Float -&gt; Float</code>, and also <code>id :: (Int -&gt; Int) -&gt; Int -&gt; Int</code>, ad infinitum, all simultaneously. This infinite family of types can be summed up with one polymorphic type, <code>id :: a -&gt; a</code>. This point of view gives you the <a href=\"https://en.wikipedia.org/wiki/Hindley%E2%80%93Milner_type_system#Typing_rules\" rel=\"nofollow noreferrer\">Hindley-Milner type system</a>. This is <em>not</em> how modern GHC Haskell works, but this system is what Haskell was based on at its creation.</p>\n\n<p>In Hindley-Milner, there is a hard line between polymorphic types and monomorphic types, and the union of these two groups gives you \"types\" in general. It's not really fair to say that, in HM, polymorphic types (in HM jargon, \"polytypes\") are types. You can't take polytypes as arguments, or return them from functions, or place them in a list. Instead, polytypes are only templates for monotypes. If you squint, in HM, a polymorphic type can be seen as a set of those monotypes that fit the schema.</p>\n\n<p>Modern Haskell is built on System F (plus extensions). In System F,</p>\n\n<pre><code>id = \\x -&gt; x -- rewriting the example\n</code></pre>\n\n<p>is not a complete definition. Therefore we can't even think about giving it a type. Every lambda-bound variable needs a type annotation, but <code>x</code> has no annotation. Worse, we can't even decide on one: <code>\\(x :: Int) -&gt; x</code> is just as good as <code>\\(x :: Float) -&gt; x</code>. In System F, what we do is we write</p>\n\n<pre><code>id = /\\(a :: Type) -&gt; \\(x :: a) -&gt; x\n</code></pre>\n\n<p>using <code>/\\</code> to represent <code>\u039b</code> (upper-case lambda) much as we use <code>\\</code> to represent <code>\u03bb</code>.</p>\n\n<p><code>id</code> is a function taking <em>two</em> arguments. The first argument is a <code>Type</code>, named <code>a</code>. The second argument is an <code>a</code>. The result is also an <code>a</code>. The type signature is:</p>\n\n<pre><code>id :: forall (a :: Type). a -&gt; a\n</code></pre>\n\n<p><code>forall</code> is a new kind of function arrow, basically. Note that it provides a binder for <code>a</code>. In HM, when we said <code>id :: a -&gt; a</code>, we didn't really define what <code>a</code> <em>was</em>. It was a fresh, global variable. By convention, more than anything else, that variable is not used anywhere else (otherwise the <code>Gen</code>eralization rule doesn't apply and everything breaks down). If I had written e.g. <code>inject :: a -&gt; Maybe a</code>, afterwards, the textual occurrences of <code>a</code> would be referring to a new global entity, different from the one in <code>id</code>. In System F, the <code>a</code> in <code>forall a. a -&gt; a</code> actually has scope. It's a \"local variable\" available only for use underneath that <code>forall</code>. The <code>a</code> in <code>inject :: forall a. a -&gt; Maybe a</code> may or may not be the \"same\" <code>a</code>; it doesn't matter, because we have actual scoping rules that keep everything from falling apart.</p>\n\n<p>Because System F has hygienic scoping rules for type variables, polymorphic types are allowed to do everything other types can do. You can take them as arguments</p>\n\n<pre><code>runCont :: forall (a :: Type). (forall (r :: Type). (a -&gt; r) -&gt; r) -&gt; a\nrunCons a f = f a (id a) -- omitting type signatures; you can fill them in\n</code></pre>\n\n<p>You put them in data constructors</p>\n\n<pre><code>newtype Yoneda f a = Yoneda (forall b. (a -&gt; b) -&gt; f b)\n</code></pre>\n\n<p>You can place them in polymorphic containers:</p>\n\n<pre><code>type Bool = forall a. a -&gt; a -&gt; a\ntrue, false :: Bool\ntrue a t f = t\nfalse a t f = f\n\nthueMorse :: [Bool]\nthueMorse = false : true : true : false : _etc\n</code></pre>\n\n<p>There's an important difference from HM. In HM, if something has polymorphic type, it <em>also</em> has, <em><strong>simultaneously</strong></em>, an <em>infinity</em> of monomorphic types. In System F, a thing can only have <em>one</em> type. <code>id = /\\a -&gt; \\(x :: a) -&gt; x</code> has type <code>forall a. a -&gt; a</code>, not <code>Int -&gt; Int</code> or <code>Float -&gt; Float</code>. In order to get an <code>Int -&gt; Int</code> out of <code>id</code>, you have to actually give it an argument: <code>id Int :: Int -&gt; Int</code>, and <code>id Float :: Float -&gt; Float</code>.</p>\n\n<p>Haskell is not System F, however. System F is closer to what GHC calls Core, which is an internal language that GHC compiles Haskell to\u2014basically Haskell without any syntax sugar. <em>Haskell</em> is a Hindley-Milner flavored veneer on top of a System F core. In Haskell, nominally a polymorphic type is a type. They do not act like sets of types. However, polymorphic types are still second class. Haskell doesn't let you actually type <code>forall</code> without <code>-XExplicitForalls</code>. It emulates Hindley-Milner's wonky implicit global variable creation by inserting <code>forall</code>s in certain places. The places where it does so are changed by <code>-XScopedTypeVariables</code>. You can't take polymorphic arguments or have polymorphic fields unless you enable <code>-XRankNTypes</code>. You cannot say things like <code>[forall a. a -&gt; a -&gt; a]</code>, nor can you say <code>id (forall a. a -&gt; a -&gt; a) :: (forall a. a -&gt; a -&gt; a) -&gt; (forall a. a -&gt; a -&gt; a)</code>\u2014you must define e.g. <code>newtype Bool = Bool { ifThenElse :: forall a. a -&gt; a -&gt; a }</code> to wrap the polymorphism under something monomorphic. You cannot explicitly give type arguments unless you enable <code>-XTypeApplications</code>, and then you can write <code>id @Int :: Int -&gt; Int</code>. You cannot write type lambdas (<code>/\\</code>), <em>period</em>; instead, they are inserted implicitly whenever possible. If you define <code>id :: forall a. a -&gt; a</code>, then you cannot even write <code>id</code> in Haskell. It will always be implicitly expanded to an application, <code>id @_</code>.</p>\n\n<p><strong>TL;DR</strong>: In Haskell, a polymorphic type is a type. It's not treated as a set of types, or a rule/schema for types, or whatever. However, due to historical reasons, they are treated as second class citizens. By default, it looks like they are treated as mere sets of types, if you squint a bit. Most restrictions on them can be lifted with suitable language extensions, at which point they look more like \"just types\". The one remaining big restriction (no impredicative instantiations allowed) is rather fundamental and cannot be erased, but that's fine because there's a workaround.</p>\n"}], "owner": {"reputation": 1, "user_id": 156458, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/3PCjR.png?s=128&g=1", "display_name": "Tim", "link": "https://stackoverflow.com/users/156458/tim"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1058, "favorite_count": 4, "answer_count": 3, "score": 11, "last_activity_date": 1563517322, "creation_date": 1563410971, "last_edit_date": 1563470272, "question_id": 57085678, "link": "https://stackoverflow.com/questions/57085678/which-is-a-polymorphic-type-a-type-or-a-set-of-types", "title": "Which is a polymorphic type: a type or a set of types?", "body": "<p>Programming in Haskell by Hutton says:</p>\n\n<blockquote>\n  <p>A type that contains one or more type variables is called polymorphic.</p>\n</blockquote>\n\n<p>Which is a polymorphic type: a type or a set of types?</p>\n\n<p>Is a polymorphic type with a concrete type substituting its type variable a type?</p>\n\n<p>Is a polymorphic type with different concrete types substituting its type variable considered the same or different types?  </p>\n"}]