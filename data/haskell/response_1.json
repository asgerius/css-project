[{"tags": ["haskell", "cabal", "hackage"], "comments": [{"owner": {"reputation": 11412, "user_id": 617159, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fc43cf2d76ce0981a21c0e5a817f96f5?s=128&d=identicon&r=PG", "display_name": "Lambda Fairy", "link": "https://stackoverflow.com/users/617159/lambda-fairy"}, "edited": false, "score": 0, "creation_date": 1421270654, "post_id": 27952013, "comment_id": 44300482, "body": "Does it work if you add <code>network-uri &gt;= 2.6</code> and <code>network &gt;= 2.6</code> to the <code>build-depends</code>?"}, {"owner": {"reputation": 247, "user_id": 2104932, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/bs98N.jpg?s=128&g=1", "display_name": "matchwood", "link": "https://stackoverflow.com/users/2104932/matchwood"}, "reply_to_user": {"reputation": 11412, "user_id": 617159, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fc43cf2d76ce0981a21c0e5a817f96f5?s=128&d=identicon&r=PG", "display_name": "Lambda Fairy", "link": "https://stackoverflow.com/users/617159/lambda-fairy"}, "edited": false, "score": 0, "creation_date": 1421273722, "post_id": 27952013, "comment_id": 44301948, "body": "@LambdaFairy That does clear that error, thank you! I figured from the compiler error that I might be able to fix it that way, but I didn&#39;t want to start fiddling with that until I was sure it wasn&#39;t related to the ghc version etc."}, {"owner": {"reputation": 11412, "user_id": 617159, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fc43cf2d76ce0981a21c0e5a817f96f5?s=128&d=identicon&r=PG", "display_name": "Lambda Fairy", "link": "https://stackoverflow.com/users/617159/lambda-fairy"}, "edited": false, "score": 0, "creation_date": 1421275319, "post_id": 27952013, "comment_id": 44302678, "body": "Great! I&#39;ve posted that as an answer below."}], "answers": [{"comments": [{"owner": {"reputation": 247, "user_id": 2104932, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/bs98N.jpg?s=128&g=1", "display_name": "matchwood", "link": "https://stackoverflow.com/users/2104932/matchwood"}, "edited": false, "score": 1, "creation_date": 1421280848, "post_id": 27953719, "comment_id": 44304663, "body": "Great, thanks. Just thought I&#39;d add that hackage-server.cabal references network in multiple build-dependencies (for hackage-mirror, tests and so on) and all of these need to be changed."}], "tags": [], "owner": {"reputation": 11412, "user_id": 617159, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fc43cf2d76ce0981a21c0e5a817f96f5?s=128&d=identicon&r=PG", "display_name": "Lambda Fairy", "link": "https://stackoverflow.com/users/617159/lambda-fairy"}, "is_accepted": true, "score": 0, "last_activity_date": 1421274940, "creation_date": 1421274940, "answer_id": 27953719, "question_id": 27952013, "link": "https://stackoverflow.com/questions/27952013/hackage-server-fails-to-build-are-there-specific-ghc-cabal-version-requirement/27953719#27953719", "title": "hackage-server fails to build - are there specific ghc/cabal version requirements?", "body": "<p><a href=\"https://hackage.haskell.org/package/network-uri\" rel=\"nofollow\"><code>network-uri</code></a> was <a href=\"http://haskell.1045720.n5.nabble.com/Splitting-Network-URI-from-the-network-package-td5753966.html\" rel=\"nofollow\">split from <code>network</code></a> a while ago, but it looks like Hackage hasn't been updated with that change.</p>\n\n<p>As a workaround, open <code>hackage-server.cabal</code> and add these lines to <code>build-dependencies</code>:</p>\n\n<pre><code>network &gt;= 2.6,\nnetwork-uri &gt;= 2.6\n</code></pre>\n\n<p>That should get it working again.</p>\n"}], "owner": {"reputation": 247, "user_id": 2104932, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/bs98N.jpg?s=128&g=1", "display_name": "matchwood", "link": "https://stackoverflow.com/users/2104932/matchwood"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 176, "favorite_count": 0, "accepted_answer_id": 27953719, "answer_count": 1, "score": 2, "last_activity_date": 1421274940, "creation_date": 1421268040, "last_edit_date": 1421273544, "question_id": 27952013, "link": "https://stackoverflow.com/questions/27952013/hackage-server-fails-to-build-are-there-specific-ghc-cabal-version-requirement", "title": "hackage-server fails to build - are there specific ghc/cabal version requirements?", "body": "<p>I am trying to build and run a copy of the Hackage server <a href=\"https://github.com/haskell/hackage-server\" rel=\"nofollow\">https://github.com/haskell/hackage-server</a>. I followed the instructions here <a href=\"https://github.com/haskell/hackage-server/wiki\" rel=\"nofollow\">https://github.com/haskell/hackage-server/wiki</a> and also the instructions in the readme. Whichever I try, when trying to build with ghc 7.8.4 and cabal 1.22 I receive the following error:</p>\n\n<pre><code>Preprocessing executable 'hackage-server' for hackage-server-0.5.0...\nMain.hs:40:8:\nCould not find module \u2018Network.URI\u2019\nIt is a member of the hidden package \u2018network-uri-2.6.0.1\u2019.\nPerhaps you need to add \u2018network-uri\u2019 to the build-depends in your .cabal file.\nIt is a member of the hidden package \u2018network-2.4.2.3\u2019.\nPerhaps you need to add \u2018network\u2019 to the build-depends in your .cabal file.\n</code></pre>\n\n<p>I have also tried using the latest Haskell Platform, and I get the same failure message.</p>\n\n<p>I'm trying to work out if this is a bug in the current master branch of hackage-server or if it is something to do with the way I installed ghc or cabal.</p>\n\n<p>EDIT: I've tried again with the Ubuntu 14.04 repo haskell-platform (ghc 7.6.3, cabal 1.16) and the same error happens.</p>\n"}, {"tags": ["haskell", "typeclass"], "comments": [{"owner": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 4, "creation_date": 1421267025, "post_id": 27951718, "comment_id": 44298579, "body": "String formatting is part of the Char instance, via the showList method."}], "answers": [{"tags": [], "owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "is_accepted": true, "score": 13, "last_activity_date": 1421267214, "creation_date": 1421267214, "answer_id": 27951817, "question_id": 27951718, "link": "https://stackoverflow.com/questions/27951718/how-is-the-instance-of-show-for-string-written/27951817#27951817", "title": "How is the instance of Show for String written?", "body": "<p>The <code>Show</code> typeclass actually has three member functions, <code>show</code>, <code>showsPrec</code>, and <code>showList</code>.  In the instance for <code>Show Char</code>, the <code>showList</code> function is overloaded to output quote marks and shove all the letters together without delimiters:</p>\n\n<p>From <a href=\"https://hackage.haskell.org/package/base-4.7.0.2/docs/src/GHC-Show.html#Show\" rel=\"noreferrer\"><code>GHC.Show</code></a>:</p>\n\n<pre><code>instance  Show Char  where\n    showsPrec _ '\\'' = showString \"'\\\\''\"\n    showsPrec _ c    = showChar '\\'' . showLitChar c . showChar '\\''\n\n    showList cs = showChar '\"' . showLitString cs . showChar '\"'\n</code></pre>\n\n<p>Where <a href=\"https://hackage.haskell.org/package/base-4.7.0.2/docs/src/GHC-Show.html#showLitString\" rel=\"noreferrer\"><code>showLitString</code></a> is defined as:</p>\n\n<pre><code>showLitString :: String -&gt; ShowS\n-- | Same as 'showLitChar', but for strings\n-- It converts the string to a string using Haskell escape conventions\n-- for non-printable characters. Does not add double-quotes around the\n-- whole thing; the caller should do that.\n-- The main difference from showLitChar (apart from the fact that the\n-- argument is a string not a list) is that we must escape double-quotes\nshowLitString []         s = s\nshowLitString ('\"' : cs) s = showString \"\\\\\\\"\" (showLitString cs s)\nshowLitString (c   : cs) s = showLitChar c (showLitString cs s)\n</code></pre>\n\n<p>So there is no <code>Show String</code> instance, it's simply that <code>Show Char</code> defines how to call <code>show</code> on <code>[Char]</code> values specifically.</p>\n"}], "owner": {"reputation": 9657, "user_id": 143813, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/8d1b60d97a4941619b7e38b2e39ed847?s=128&d=identicon&r=PG", "display_name": "gappy", "link": "https://stackoverflow.com/users/143813/gappy"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 831, "favorite_count": 0, "accepted_answer_id": 27951817, "answer_count": 1, "score": 5, "last_activity_date": 1421267214, "creation_date": 1421266869, "question_id": 27951718, "link": "https://stackoverflow.com/questions/27951718/how-is-the-instance-of-show-for-string-written", "title": "How is the instance of Show for String written?", "body": "<p>I have a basic question about definining instances of typeclasses. I am using the Show typeclass as an example, and I am considering only the function show within the class. The Show instance for a concrete type like Bool is simple</p>\n\n<pre><code>instance Show Bool where\n  show x = {function of x here}\n</code></pre>\n\n<p>but for String it is not:</p>\n\n<pre><code>instance Show String where\n  show x = {function of x here}\n</code></pre>\n\n<p>produces understandably an error</p>\n\n<pre><code>Illegal instance declaration for \u2018Formatter String\u2019\n  (All instance types must be of the form (T t1 ... tn)\n   where T is not a synonym.\n   Use TypeSynonymInstances if you want to disable this.)\nIn the instance declaration for \u2018Formatter String\u2019\n</code></pre>\n\n<p>and of course the following is not allowed:</p>\n\n<pre><code>instance Show [Char] where\n  show x = {function of x here}\n</code></pre>\n\n<p>I could define a newtype</p>\n\n<pre><code>newtype String2 = String2 String \ninstance Formatter String2 where\n  format (String2 x) = {function of x here}\n</code></pre>\n\n<p>which however does not allow me to do show \"test\", as I am able to do in Haskell. </p>\n\n<p>What essential feature of typeclasses am I missing?</p>\n"}, {"tags": ["haskell", "typeclass"], "answers": [{"comments": [{"owner": {"reputation": 1491, "user_id": 3599370, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/b557a9c32458f9db0335cb458648e78a?s=128&d=identicon&r=PG&f=1", "display_name": "d125q", "link": "https://stackoverflow.com/users/3599370/d125q"}, "edited": false, "score": 1, "creation_date": 1421266367, "post_id": 27951378, "comment_id": 44298282, "body": "Ah! I suppose I was confused by the fact that both the type and the value constructor(s) were named <code>Frank</code>... thank you!"}, {"owner": {"reputation": 28662, "user_id": 10311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4ee697b9dc2411d50fb66a4f330ba4df?s=128&d=identicon&r=PG", "display_name": "porges", "link": "https://stackoverflow.com/users/10311/porges"}, "reply_to_user": {"reputation": 1491, "user_id": 3599370, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/b557a9c32458f9db0335cb458648e78a?s=128&d=identicon&r=PG&f=1", "display_name": "d125q", "link": "https://stackoverflow.com/users/3599370/d125q"}, "edited": false, "score": 3, "creation_date": 1421266935, "post_id": 27951378, "comment_id": 44298537, "body": "Yes, that can be a little confusing at first. Just remember that if you see a CapitalizedIdentifier in a type signature/class declaration/etc it&#39;s going to be a type name and everywhere else it&#39;s going to be a constructor."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "reply_to_user": {"reputation": 1491, "user_id": 3599370, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/b557a9c32458f9db0335cb458648e78a?s=128&d=identicon&r=PG&f=1", "display_name": "d125q", "link": "https://stackoverflow.com/users/3599370/d125q"}, "edited": false, "score": 1, "creation_date": 1421267945, "post_id": 27951378, "comment_id": 44298989, "body": "@d125q More specifically, type names don&#39;t share the same namespace as value constructor names and function/value names."}], "tags": [], "owner": {"reputation": 28662, "user_id": 10311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4ee697b9dc2411d50fb66a4f330ba4df?s=128&d=identicon&r=PG", "display_name": "porges", "link": "https://stackoverflow.com/users/10311/porges"}, "is_accepted": true, "score": 7, "last_activity_date": 1421266039, "last_edit_date": 1421266039, "creation_date": 1421265556, "answer_id": 27951378, "question_id": 27951328, "link": "https://stackoverflow.com/questions/27951328/type-vs-value-constructors-in-typeclasses/27951378#27951378", "title": "Type vs. value constructors in typeclasses", "body": "<p>You're still using the value constructor. You can use types that have record fields without having to use the record syntax to construct them, so <code>Frank x</code> does the same thing as <code>Frank { frankField = x }</code>.</p>\n\n<p>If you have more than one record field, e.g.:</p>\n\n<pre><code>data Frank a b = Frank { frankA :: a, frankB :: b } \n</code></pre>\n\n<p>... then the fields appear in the order you have written them in, so you can do:</p>\n\n<pre><code>-- With x :: a, y :: b\nFrank x y\n</code></pre>\n"}], "owner": {"reputation": 1491, "user_id": 3599370, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/b557a9c32458f9db0335cb458648e78a?s=128&d=identicon&r=PG&f=1", "display_name": "d125q", "link": "https://stackoverflow.com/users/3599370/d125q"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 135, "favorite_count": 0, "accepted_answer_id": 27951378, "answer_count": 1, "score": 3, "last_activity_date": 1445604560, "creation_date": 1421265411, "last_edit_date": 1445604560, "question_id": 27951328, "link": "https://stackoverflow.com/questions/27951328/type-vs-value-constructors-in-typeclasses", "title": "Type vs. value constructors in typeclasses", "body": "<p>I am learning Haskell and am confused by <a href=\"http://learnyouahaskell.com/making-our-own-types-and-typeclasses#kinds-and-some-type-foo\" rel=\"nofollow\">this example</a>.</p>\n\n<p>Consider the following:</p>\n\n<pre><code>class Tofu t where\n    tofu :: j a -&gt; t a j\n\ndata Frank a b = Frank {frankField :: b a} deriving (Show)\n\ninstance Tofu Frank where\n    tofu x = Frank x\n</code></pre>\n\n<p>Why is it that when making <code>Frank</code> an instance of <code>Tofu</code>, we provide (as far as I understand), a type constructor <code>Frank x</code>, instead of a value constructor, i.e. <code>tofu x = Frank {frankField = x}</code>?</p>\n"}, {"tags": ["haskell", "parsec"], "comments": [{"owner": {"reputation": 13626, "user_id": 492865, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c69a2080e68c8606961a18aba3a08ec?s=128&d=identicon&r=PG", "display_name": "Yuras", "link": "https://stackoverflow.com/users/492865/yuras"}, "edited": false, "score": 1, "creation_date": 1421267355, "post_id": 27950324, "comment_id": 44298724, "body": "Looks like a word or two are missing in the last sentence. What exactly you feed, what you expect and what you get? Can you minimize the code snippet?"}], "answers": [{"tags": [], "owner": {"reputation": 20862, "user_id": 376113, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/d3a5bd12fe6d876527a3cf4ac0de5fc6?s=128&d=identicon&r=PG", "display_name": "mb14", "link": "https://stackoverflow.com/users/376113/mb14"}, "is_accepted": true, "score": 2, "last_activity_date": 1421331058, "last_edit_date": 1421331058, "creation_date": 1421312368, "answer_id": 27959824, "question_id": 27950324, "link": "https://stackoverflow.com/questions/27950324/how-to-stop-a-endby-in-parsec/27959824#27959824", "title": "How to stop a endBy in Parsec", "body": "<p>I found the problem: <code>space</code> includes line-feed, <code>'\\n'</code>.</p>\n"}], "owner": {"reputation": 20862, "user_id": 376113, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/d3a5bd12fe6d876527a3cf4ac0de5fc6?s=128&d=identicon&r=PG", "display_name": "mb14", "link": "https://stackoverflow.com/users/376113/mb14"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 241, "favorite_count": 0, "accepted_answer_id": 27959824, "answer_count": 1, "score": 1, "last_activity_date": 1421331058, "creation_date": 1421261423, "question_id": 27950324, "link": "https://stackoverflow.com/questions/27950324/how-to-stop-a-endby-in-parsec", "title": "How to stop a endBy in Parsec", "body": "<p>I'm trying to write a csv-like parser using Parsec. So far so good.\nThe parser decode the header and process everything fine.\nNow, I'm trying to skip some comments at the beginning of the file. The comment starts with <code>#</code> (or empty line).\nIf I do that, the <code>endBy</code> loop doesn't when the header start but instead fails.</p>\n\n<p>Here is my code:</p>\n\n<pre><code>csvParser = do\n   -- skipping comment bit\n   P.endBy ((P.char '#' &gt;&gt; P.many (P.noneOf \"\\n\"))\n            &lt;|&gt; P.many P.space\n           ) eol\n\n   -- real parsing starting\n   header &lt;- parseHeader\n   eol\n   case header of\n       [\"style\", \"number\", \"quantity\", \"length\", \"width\", \"height\"] -&gt; parsePL\n       otherwise -&gt; error $ \"Can't decore following header:\" ++ (show header)\n\n\n   where parseHeader = P.sepBy cell sep\n         sep = P.char ','\n         eol = P.char '\\n'\n         cell = P.many (P.noneOf \",\\n\")\n         cellp = do x &lt;- cell ; sep; return x\n         today = \"2015/01/15\" :: Date\n\n         readR :: String -&gt; Rational\n         readR x = toRational x' where\n                   x' = read x :: Float\n         parsePL = P.endBy (do\n               style &lt;- cellp\n               numberOfBox &lt;- read &lt;$&gt; cellp\n               numberPerBox &lt;- cellp\n               length &lt;- readR &lt;$&gt; cellp\n               width &lt;-  readR &lt;$&gt; cellp\n               height &lt;- readR &lt;$&gt; cell\n\n               return (style, numberOfBox, length, width, height, \"\", 0, \"\",  today)\n               ) eol\n</code></pre>\n"}, {"tags": ["haskell", "negation", "happy"], "comments": [{"owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "edited": false, "score": 0, "creation_date": 1421263150, "post_id": 27950155, "comment_id": 44296531, "body": "what can operand look like?"}, {"owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "edited": false, "score": 0, "creation_date": 1421263326, "post_id": 27950155, "comment_id": 44296626, "body": "also, this is not material to your question, but I&#39;m curious about your definition of types. A list of types appears to begin with a comma - is that right?"}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "reply_to_user": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "edited": false, "score": 0, "creation_date": 1421264421, "post_id": 27950155, "comment_id": 44297234, "body": "@user5402 Neither of those details matters. It should be sufficient to know that <code>types</code> is always exactly the same everywhere it appears as is <code>operand</code>. In reality <code>types</code> is defined so that it can&#39;t begin with a <code>,</code>. It&#39;s essentially <code>types&#39; : type | types&#39; &#39;,&#39; type</code> and <code>types : {- empty -} | types&#39;</code>."}], "answers": [{"tags": [], "owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "is_accepted": false, "score": 2, "last_activity_date": 1421266741, "creation_date": 1421266741, "answer_id": 27951689, "question_id": 27950155, "link": "https://stackoverflow.com/questions/27950155/specify-order-of-alternatives-in-happy-parser/27951689#27951689", "title": "Specify order of alternatives in happy parser", "body": "<p>Basically you have what's called a shift/reduce conflict. You can google \"resolve shift/reduce conflict\" for more info and resources.</p>\n\n<p>The basic idea in resolving shift/reduce conflicts is to refactor the grammar. For instance, this grammar is ambiguous:</p>\n\n<pre><code>%token id comma int\nA : B comma int\nB : id     \n  | id comma B\n</code></pre>\n\n<p>The shift/reduce conflict can be eliminated by refactoring it as:</p>\n\n<pre><code>A : B int\nB : id comma\n  | id comma B\n</code></pre>\n\n<p>In your case you could try something like this:</p>\n\n<pre><code>type : simple               {0}\n     | func                 {0}\n     | funcptr              {0}\n\nsimple : 'void'             {0}\n       | simple '*'         {0}\n       | funcptr '*'        {0}\n\nfunc : type '(' type ')'    {0}\n\nfuncptr : func '*'          {0}\n</code></pre>\n\n<p>The idea is this:</p>\n\n<ul>\n<li><em>simple</em> matches any type that is not a function or function pointer</li>\n<li><em>func</em> matches any function type</li>\n<li><em>funcptr</em> matches any function pointer type</li>\n</ul>\n\n<p>That said, many of the things I've attempted to do in grammars I've found are better accomplished by analyzing the parse tree after it's been created.</p>\n"}], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 100, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1421274782, "creation_date": 1421260878, "last_edit_date": 1421274782, "question_id": 27950155, "link": "https://stackoverflow.com/questions/27950155/specify-order-of-alternatives-in-happy-parser", "title": "Specify order of alternatives in happy parser", "body": "<p>I am working on a <a href=\"https://www.haskell.org/happy/\" rel=\"nofollow\">Happy</a> parser for a language with the following types, and many more.</p>\n\n<pre><code>type :: { ... }\ntype :\n    'void'                { ... }\n  | type '*'              { ... } {- pointer    -}\n  | type '(' types ')'    { ... } {- function   -}\n  | ...                           {- many more! -}\n\ntypes :: { ... }\n    {- empty -}           { ... }\n  | types ',' type        { ... }\n</code></pre>\n\n<p>The language has apparently ambiguous syntax for calls. </p>\n\n<pre><code>callable :: { ... }\ncallable :\n    type                   operand    { ... }    {- return type -}\n  | type '(' types ')' '*' operand    { ... }    {- return and argument types -}\n</code></pre>\n\n<p>The second rule does not have the same meaning as the first when <code>type</code> takes on the type of a function pointer.</p>\n\n<p>The ambiguity can be removed by adding a special rule for a type that isn't a function pointer. Barring doing so and duplicating all of the type definitions to produce something like</p>\n\n<pre><code>callable :: { ... }\ncallable :\n    typeThatIsNotAFunctionPointer operand    { ... }\n  | type '(' types ')' '*'        operand    { ... }\n</code></pre>\n\n<p>How can I specify that the alternative <code>type operand</code> is only legal when the <code>type '(' types ')' '*' operand</code> alternative fails?</p>\n\n<p>There are many questions on stack overflow about why a grammar has ambiguities (I found at least 7), and some about how to remove an ambiguity, but none about how to specify how to resolve an ambiguity.</p>\n\n<h3>Undesirable Solution</h3>\n\n<p>I'm aware that I can refactor the grammar for types to a giant convoluted mess. </p>\n\n<pre><code>neverConstrainedType :: { ... }\nneverConstrainedType :\n    'int'                 { ... }\n  | ...                   {- many more! -}\n\nvoidType :: { ... }\nvoidType :\n    'void'\n\npointerType :: { ... }\npointerType :\n    type '*'              { ... } {- pointer    -}\n\nfunctionType :: { ... }\n    type '(' types ')'    { ... } {- function    -}\n\ntype :: { ... }\ntype :\n    neverConstrainedType  { ... }\n  | voidType              { ... }\n  | pointerType           { ... }\n  | functionType          { ... }\n\ntypeNonVoid :: { ... }    {- this already exists -}\ntypeNonVoid : \n    neverConstrainedType  { ... }\n  | pointerType           { ... }\n  | functionType          { ... }\n\ntypeNonPointer :: { ... }\ntypeNonPointer :\n    neverConstrainedType  { ... }\n  | voidType              { ... }\n  | functionType          { ... }\n\ntypeNonFunction :: { ... }\ntypeNonFunction :\n    neverConstrainedType  { ... }\n  | voidType              { ... }\n  | functionType          { ... }\n\ntypeNonFunctionPointer :: { ... }\ntypeNonFunctionPointer :\n    typeNonPointer        { ... }\n  | typeNonFunction '*'   { ... }\n</code></pre>\n\n<p>And then define <code>callable</code> as</p>\n\n<pre><code>callable :: { ... }\ncallable :\n    typeNonFunctionPointer                    operand    { ... }\n  | type                   '(' types ')' '*'  operand    { ... }\n</code></pre>\n"}, {"tags": ["haskell", "literate-programming"], "answers": [{"tags": [], "owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "is_accepted": false, "score": 3, "last_activity_date": 1421255642, "creation_date": 1421255642, "answer_id": 27948653, "question_id": 27947945, "link": "https://stackoverflow.com/questions/27947945/code-is-not-defined-perhaps-you-forgot-to-include-lhs2tex-fmt-when-using-l/27948653#27948653", "title": "`code&#39; is not defined; perhaps you forgot to include &quot;lhs2TeX.fmt&quot;? When using lhs2TeX", "body": "<pre><code>\\documentclass{article}\n%include polycode.fmt\n\\begin{document}\n</code></pre>\n\n<p>The <code>%include</code> line is required, you could include <code>code.fmt</code> instead, but it will result uglier code blocks.</p>\n"}], "owner": {"reputation": 1654, "user_id": 3128177, "user_type": "registered", "accept_rate": 29, "profile_image": "https://www.gravatar.com/avatar/8edafe4e6093864c46e71839232b06df?s=128&d=identicon&r=PG", "display_name": "nmiculinic", "link": "https://stackoverflow.com/users/3128177/nmiculinic"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 397, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1421255642, "creation_date": 1421253360, "question_id": 27947945, "link": "https://stackoverflow.com/questions/27947945/code-is-not-defined-perhaps-you-forgot-to-include-lhs2tex-fmt-when-using-l", "title": "`code&#39; is not defined; perhaps you forgot to include &quot;lhs2TeX.fmt&quot;? When using lhs2TeX", "body": "<p>I installed lhs2TeX from Linux Mint 17.1 repositories and get the following error when trying to convert the file.</p>\n\n<pre><code>`code' is not defined;\nperhaps you forgot to include \"lhs2TeX.fmt\"?\n</code></pre>\n\n<p>Error line reported is first line of code in haskell</p>\n\n<p>The calling line is:</p>\n\n<pre><code>lhs2TeX file.lhs -o file.tex\n</code></pre>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "is_accepted": true, "score": 42, "last_activity_date": 1421253531, "creation_date": 1421253531, "answer_id": 27947999, "question_id": 27947925, "link": "https://stackoverflow.com/questions/27947925/haskell-prelude-read-no-parse-string/27947999#27947999", "title": "Haskell Prelude.read: no parse String", "body": "<p>This is because the string representation you have is not the string representation of a <code>String</code>, it needs quotes embedded in the string itself:</p>\n\n<pre><code>&gt; read \"\\\"asdf\\\"\" :: String\n\"asdf\"\n</code></pre>\n\n<p>This is so that <code>read . show === id</code> for <code>String</code>:</p>\n\n<pre><code>&gt; show \"asdf\"\n\"\\\"asdf\\\"\"\n&gt; read $ show \"asdf\" :: String\n\"asdf\"\n</code></pre>\n\n<p>As a side note, it's always a good idea to instead use the <code>readMaybe</code> function from <code>Text.Read</code>:</p>\n\n<pre><code>&gt; :t readMaybe\nreadMaybe :: Read a =&gt; String -&gt; Maybe a\n&gt; readMaybe \"asdf\" :: Maybe String\nNothing\n&gt; readMaybe \"\\\"asdf\\\"\" :: Maybe String\nJust \"asdf\"\n</code></pre>\n\n<p>This avoids the (in my opinion) broken <code>read</code> function which raises an exception on parse failure.</p>\n"}], "owner": {"reputation": 2550, "user_id": 1366643, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/QFRXO.jpg?s=128&g=1", "display_name": "Herokiller", "link": "https://stackoverflow.com/users/1366643/herokiller"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 26879, "favorite_count": 6, "accepted_answer_id": 27947999, "answer_count": 1, "score": 28, "last_activity_date": 1518179011, "creation_date": 1421253308, "last_edit_date": 1518179011, "question_id": 27947925, "link": "https://stackoverflow.com/questions/27947925/haskell-prelude-read-no-parse-string", "title": "Haskell Prelude.read: no parse String", "body": "<p>from haskell examples <a href=\"http://learnyouahaskell.com/types-and-typeclasses\" rel=\"noreferrer\">http://learnyouahaskell.com/types-and-typeclasses</a></p>\n\n<pre><code>ghci&gt; read \"5\" :: Int  \n5  \nghci&gt; read \"5\" :: Float  \n5.0  \nghci&gt; (read \"5\" :: Float) * 4  \n20.0  \nghci&gt; read \"[1,2,3,4]\" :: [Int]  \n[1,2,3,4]  \nghci&gt; read \"(3, 'a')\" :: (Int, Char)  \n(3, 'a')  \n</code></pre>\n\n<p>but when I try</p>\n\n<pre><code>read \"asdf\" :: String \n</code></pre>\n\n<p>or</p>\n\n<pre><code>read \"asdf\" :: [Char]\n</code></pre>\n\n<p>I get exception </p>\n\n<blockquote>\n  <p>Prelude.read No Parse</p>\n</blockquote>\n\n<p>What am I doing wrong here?</p>\n"}, {"tags": ["haskell", "existential-type"], "comments": [{"owner": {"reputation": 31301, "user_id": 1598537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c214754fba6f3a238a93af85a0ab4f58?s=128&d=identicon&r=PG", "display_name": "AndrewC", "link": "https://stackoverflow.com/users/1598537/andrewc"}, "edited": false, "score": 0, "creation_date": 1421247982, "post_id": 27945916, "comment_id": 44287162, "body": "I find that this sort of thing is easier to do with a GADT. You can have the existential quantification and the class constraint, but the syntax is so much cleaner and easier."}, {"owner": {"reputation": 911, "user_id": 867610, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/4478f1b6b8af5c91dd6d37b817c8d313?s=128&d=identicon&r=PG", "display_name": "knick", "link": "https://stackoverflow.com/users/867610/knick"}, "reply_to_user": {"reputation": 31301, "user_id": 1598537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c214754fba6f3a238a93af85a0ab4f58?s=128&d=identicon&r=PG", "display_name": "AndrewC", "link": "https://stackoverflow.com/users/1598537/andrewc"}, "edited": false, "score": 0, "creation_date": 1421248778, "post_id": 27945916, "comment_id": 44287686, "body": "Thanks for the tip. I should really read up on GADTs too."}], "answers": [{"comments": [{"owner": {"reputation": 911, "user_id": 867610, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/4478f1b6b8af5c91dd6d37b817c8d313?s=128&d=identicon&r=PG", "display_name": "knick", "link": "https://stackoverflow.com/users/867610/knick"}, "edited": false, "score": 0, "creation_date": 1421248884, "post_id": 27946091, "comment_id": 44287746, "body": "Great, my code now compiles :) And thanks for the explanation."}, {"owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "reply_to_user": {"reputation": 911, "user_id": 867610, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/4478f1b6b8af5c91dd6d37b817c8d313?s=128&d=identicon&r=PG", "display_name": "knick", "link": "https://stackoverflow.com/users/867610/knick"}, "edited": false, "score": 0, "creation_date": 1421249431, "post_id": 27946091, "comment_id": 44288070, "body": "I amended the answer a bit. There is slight difference between <code>RankNType</code> and <code>ExistentialQuantification</code> approach."}, {"owner": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 1, "creation_date": 1421254623, "post_id": 27946091, "comment_id": 44291553, "body": "The two versions are not slightly different, they are very different.  In one the variable is universally quantified in the other existentially.  It makes a huge difference to how you can use the function."}, {"owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "reply_to_user": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 0, "creation_date": 1421255334, "post_id": 27946091, "comment_id": 44291983, "body": "@augustss, Do you have a use case in mind, where one approach works and other is almost impossible? E.g. for <a href=\"https://ocharles.org.uk/blog/guest-posts/2014-12-19-existential-quantification.html\" rel=\"nofollow noreferrer\">24 days of GHC extensions</a> example both approaches would work equally well?"}, {"owner": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 1, "creation_date": 1421266922, "post_id": 27946091, "comment_id": 44298532, "body": "@Oleg I&#39;m on my phone so my reply will be short.  With universal quantification, after pattern matching you can use the function with a type of your choice (many different, if you want).  With existential quantification, after pattern matching the type variable has a fixed type, but you don&#39;t know which one; it behaves as an abstract type."}], "tags": [], "owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "is_accepted": true, "score": 1, "last_activity_date": 1421249192, "last_edit_date": 1421249192, "creation_date": 1421248160, "answer_id": 27946091, "question_id": 27945916, "link": "https://stackoverflow.com/questions/27945916/haskell-constructing-a-type-that-uses-existential-quantification/27946091#27946091", "title": "Haskell - constructing a type that uses existential quantification", "body": "<p>If you rewrite your <code>F</code> definition as below it will work:</p>\n\n<pre><code>{-# LANGUAGE RankNTypes #-}\n\nclass C a where\n\ndata F = F (forall a. C a =&gt; a -&gt; Int)\n\nmakeF :: F\nmakeF = F $ const 1\n</code></pre>\n\n<p>I'm trying to understand why myself:</p>\n\n<p>Your original type says \"there exists <code>a</code> which is instance of <code>C</code>, and we have function <code>a -&gt; Int</code>\".\nSo to construct existential type, we have to state which <code>a</code> we have:</p>\n\n<pre><code>{-# LANGUAGE ExistentialQuantification #-}\n\nclass C a where\n\ndata F = forall a. C a =&gt; F (a -&gt; Int)\n\n-- Implement class for Unit\ninstance C () where\n\nmakeF :: F\nmakeF = F $ (const 1 :: () -&gt; Int)\n</code></pre>\n\n<hr>\n\n<p>These aren't exactly equivalent definitions:</p>\n\n<pre><code>data G = forall a . C a =&gt; G {\n  value :: a         -- is a value! could be e.g. `1` or `()`\n  toInt :: a -&gt; Int, -- Might be `id`\n}\n\ndata G' = G' {\n  value' :: C a =&gt; a          -- will be something for every type of instance `C`\n  toInt' :: C a =&gt; a -&gt; Int, -- again, by parametericity uses only `C` stuff\n}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 911, "user_id": 867610, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/4478f1b6b8af5c91dd6d37b817c8d313?s=128&d=identicon&r=PG", "display_name": "knick", "link": "https://stackoverflow.com/users/867610/knick"}, "edited": false, "score": 1, "creation_date": 1421249715, "post_id": 27946371, "comment_id": 44288239, "body": "Thanks for the explanation. This gives me a more intuitive feel for what is going on. It seems that Existential Types aren&#39;t really what I want here. I need to be able to compose my F&#39;s to create new F&#39;s without knowing what the concrete type that implements C is."}, {"owner": {"reputation": 31301, "user_id": 1598537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c214754fba6f3a238a93af85a0ab4f58?s=128&d=identicon&r=PG", "display_name": "AndrewC", "link": "https://stackoverflow.com/users/1598537/andrewc"}, "reply_to_user": {"reputation": 911, "user_id": 867610, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/4478f1b6b8af5c91dd6d37b817c8d313?s=128&d=identicon&r=PG", "display_name": "knick", "link": "https://stackoverflow.com/users/867610/knick"}, "edited": false, "score": 0, "creation_date": 1421262120, "post_id": 27946371, "comment_id": 44295999, "body": "@knick Is it important that the compiler doesn&#39;t know what the concrete type is? I ask in case your usage scenario can do with polymorphism rather than existential types."}], "tags": [], "owner": {"reputation": 64094, "user_id": 476408, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/2bc1bffafe7aa29ef900b98d1fd1e94e?s=128&d=identicon&r=PG", "display_name": "J. Abrahamson", "link": "https://stackoverflow.com/users/476408/j-abrahamson"}, "is_accepted": false, "score": 3, "last_activity_date": 1421248923, "creation_date": 1421248923, "answer_id": 27946371, "question_id": 27945916, "link": "https://stackoverflow.com/questions/27945916/haskell-constructing-a-type-that-uses-existential-quantification/27946371#27946371", "title": "Haskell - constructing a type that uses existential quantification", "body": "<p>The problem is that <code>const 1</code> has type <code>forall a . C a =&gt; a -&gt; Int</code>. When you pass that to <code>F</code> we lose the opportunity to ever talk about the type <code>a</code> again excepting that it is an element of type <code>C</code>.</p>\n\n<p>Unfortunately, we've never determined what <code>a</code> must be!</p>\n\n<p>In particular, GHC handles existentials like this by passing in the <em>dictionary</em> for the typeclass C corresponding to whatever type actually ends up in the existential. Since we never provided GHC enough information to find that dictionary it gives us a type error.</p>\n\n<p>So to fix this we must instantiate <code>C</code> somewhere</p>\n\n<pre><code>instance C Int\n</code></pre>\n\n<p>and then pass a function which determines that the forgotten type <code>a</code> actually is an instance of <code>C</code></p>\n\n<pre><code>let x = F (const 1 :: Int -&gt; Int)\n</code></pre>\n"}], "owner": {"reputation": 911, "user_id": 867610, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/4478f1b6b8af5c91dd6d37b817c8d313?s=128&d=identicon&r=PG", "display_name": "knick", "link": "https://stackoverflow.com/users/867610/knick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 136, "favorite_count": 0, "accepted_answer_id": 27946091, "answer_count": 2, "score": 2, "last_activity_date": 1421249192, "creation_date": 1421247676, "question_id": 27945916, "link": "https://stackoverflow.com/questions/27945916/haskell-constructing-a-type-that-uses-existential-quantification", "title": "Haskell - constructing a type that uses existential quantification", "body": "<p>In the code below I have defined a data type F using existential quantification. I would like values of type F to hold functions that accept a single argument and produce, say, an Int as the result. The argument needs to implement a type class which I've called C, but left empty for now. </p>\n\n<p>This is my first attempt at existential types. I am clearly doing something wrong as I don't seem to be able to create values of type F.</p>\n\n<pre><code>{-# LANGUAGE ExistentialQuantification #-}\n\nclass C a where\n\ndata F = forall a. C a =&gt; F (a-&gt;Int)\n\nmakeF :: F\nmakeF = F $ const 1\n</code></pre>\n\n<p>How can I fix this compile error?</p>\n\n<pre><code>No instance for (C a0) arising from a use of `F'\nIn the expression: F\nIn the expression: F $ const 1\nIn an equation for `makeF': makeF = F $ const 1\n</code></pre>\n"}, {"tags": ["haskell", "instance", "typeclass"], "comments": [{"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 2, "creation_date": 1421246592, "post_id": 27945450, "comment_id": 44286192, "body": "To clarify - if the answer was &quot;because no one have thought about it&quot;, it would at least justify constructing a proposal."}, {"owner": {"reputation": 30739, "user_id": 1804599, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/v91P3.jpg?s=128&g=1", "display_name": "rightfold", "link": "https://stackoverflow.com/users/1804599/rightfold"}, "edited": false, "score": 0, "creation_date": 1421246720, "post_id": 27945450, "comment_id": 44286289, "body": "I could imagine confusion when multiple wildcards were used, e.g. <code>instance C (T _ _) where ...</code>."}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "reply_to_user": {"reputation": 30739, "user_id": 1804599, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/v91P3.jpg?s=128&g=1", "display_name": "rightfold", "link": "https://stackoverflow.com/users/1804599/rightfold"}, "edited": false, "score": 0, "creation_date": 1421246781, "post_id": 27945450, "comment_id": 44286328, "body": "@\u0440\u044b\u0442\u0444\u043e\u043b\u0434 What is confusing in your example? The kind of T (<code>* -&gt; * -&gt; *</code>) gets reduced to <code>*</code> properly, with two first parameters ignored."}, {"owner": {"reputation": 30739, "user_id": 1804599, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/v91P3.jpg?s=128&g=1", "display_name": "rightfold", "link": "https://stackoverflow.com/users/1804599/rightfold"}, "edited": false, "score": 0, "creation_date": 1421246824, "post_id": 27945450, "comment_id": 44286349, "body": "Because it&#39;d be unclear whether they are the same or different type variables."}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "reply_to_user": {"reputation": 30739, "user_id": 1804599, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/v91P3.jpg?s=128&g=1", "display_name": "rightfold", "link": "https://stackoverflow.com/users/1804599/rightfold"}, "edited": false, "score": 0, "creation_date": 1421247076, "post_id": 27945450, "comment_id": 44286510, "body": "@\u0440\u044b\u0442\u0444\u043e\u043b\u0434 Haskell report <a href=\"https://www.haskell.org/onlinereport/haskell2010/haskellch4.html#x10-770004.3.2\" rel=\"nofollow noreferrer\">explicitly forbids</a> using the same names for instance declarations, or, IOW, you can&#39;t create an instance for a subset of possible type values for a given kind. Which prompts me to write my own answer, I suppose."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 1, "creation_date": 1421247752, "post_id": 27945450, "comment_id": 44286990, "body": "Why would you need this feature?  For values, they have a type and that type has constructors.  We pattern match on the constructors of a particular type.  For types, we have kinds like <code>*</code>, <code>* -&gt; *</code>, <code>* -&gt; * -&gt; *</code>, etc, and we can &quot;pattern match&quot; on constructors of those kinds.  When you write <code>instance Functor (T a)</code>, you&#39;re &quot;matching&quot; on the kind <code>* -&gt; *</code> with the type constructor <code>T a</code>, but it wouldn&#39;t be useful to write something like <code>instance Functor _ where</code> because the constructors for kind <code>* -&gt; *</code> are unbounded, while the constructors for a given type are finite...."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1421247808, "post_id": 27945450, "comment_id": 44287028, "body": "...It might be useful with full dependent types, though, or if we could make our own kinds more easily.  I&#39;m not well versed enough in this area of mathematics to know if this would even be possible."}, {"owner": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 3, "creation_date": 1421254822, "post_id": 27945450, "comment_id": 44291678, "body": "It&#39;s a feature that would sometimes be useful, but Haskell doesn&#39;t have it.  Personally, I use variables like _a, _b etc. for type variables that never matter."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 1, "creation_date": 1421430716, "post_id": 27945450, "comment_id": 44370610, "body": "@bheklilr It would be useful for a reason analogous to why underscores are useful in function definitions: as human-readable, machine-checkable documentation that the type variable plays no important role, and in particular doesn&#39;t appear in the instance context."}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1421290960, "post_id": 27945810, "comment_id": 44307022, "body": "Surely this restriction makes it <i>more</i> acceptable to allow <code>_</code> in instances, since it answers the ambiguity question of &quot;Are the two <code>_</code> in <code>instance C (T _ _)</code> equal or not?&quot; with a firm &quot;No!&quot;, and in fact suggests an implementation strategy of simply inserting fresh type variable names in place of each underscore. I mean it&#39;s not as if <code>f a a = a</code> is a valid function definition, either."}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1421314088, "post_id": 27945810, "comment_id": 44314155, "body": "@DanielWagner That&#39;s an interesting remark! I&#39;ll have to dig around that particular area a bit more, but it might just be it could be worth a proposal."}], "tags": [], "owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "is_accepted": true, "score": 6, "last_activity_date": 1421247369, "last_edit_date": 1592644375, "creation_date": 1421247369, "answer_id": 27945810, "question_id": 27945450, "link": "https://stackoverflow.com/questions/27945450/why-cant-i-underscore-ignore-type-variables-when-creating-a-type-class-instan/27945810#27945810", "title": "Why can&#39;t I underscore (ignore) type variables when creating a type class instance?", "body": "<p>In short, type class instance parameters don't abide the rules of pattern matching, for which <code>_</code> is designed to work as I'd like it to.</p>\n<p>Haskell explicitely forbids creating instances where type variables repeat:</p>\n<blockquote>\n<p>An instance declaration introduces an instance of a class. Let class cx =&gt; C u where { cbody } be a class declaration. The general form of the corresponding instance declaration is: <code>instance cx\u2032 =&gt; C (T u1 \u2026 uk) where { d }</code> where k \u2265 0. The type (T u<sub>1</sub> \u2026 u<sub>k</sub>) must take the form of a type constructor T applied to simple type variables u<sub>1</sub>, \u2026 u<sub>k</sub>; furthermore, T must not be a type synonym, and the ui must all be distinct.</p>\n<p>This prohibits instance declarations such as:</p>\n<pre><code> instance C (a,a) where ...  \n instance C (Int,a) where ...  \n instance C [[a]] where ...\n</code></pre>\n</blockquote>\n<p>The possibility to &quot;type-pattern-match&quot; in instance declarations is most probably way more complicated and might have different implications, so I can see why <code>_</code> wasn't introduced;.</p>\n"}], "owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 493, "favorite_count": 0, "accepted_answer_id": 27945810, "answer_count": 1, "score": 7, "last_activity_date": 1421247369, "creation_date": 1421246275, "question_id": 27945450, "link": "https://stackoverflow.com/questions/27945450/why-cant-i-underscore-ignore-type-variables-when-creating-a-type-class-instan", "title": "Why can&#39;t I underscore (ignore) type variables when creating a type class instance?", "body": "<p>Here's a simple example:</p>\n\n<pre><code>data T a b = T a b deriving (Show)\n\ninstance Functor (T a) where\n    fmap f (T x y) = T x (f y)\n</code></pre>\n\n<p>Why can't I omit the <code>a</code> in the instance declaration, and write something like:</p>\n\n<pre><code>instance Functor (T _) where\n</code></pre>\n\n<p>?</p>\n\n<p>The type of <code>a</code> is obviously irrelevant for that instance! (And it would be <em>really</em> more readable in my opinion).</p>\n\n<p>It's obvious we can ignore <em>values</em> of function parameters. Why not allow ignoring values of type variables?</p>\n"}, {"tags": ["haskell", "intellij-idea", "ghc", "ghc-mod"], "comments": [{"owner": {"reputation": 8473, "user_id": 1796269, "user_type": "registered", "accept_rate": 25, "profile_image": "https://www.gravatar.com/avatar/3bbfae902e1399d8ff4ad1c4a8d7b0d2?s=128&d=identicon&r=PG", "display_name": "NightRa", "link": "https://stackoverflow.com/users/1796269/nightra"}, "edited": false, "score": 1, "creation_date": 1423845630, "post_id": 27943929, "comment_id": 45327810, "body": "There is an incompatability with cabal 1.22, GHC 7.8 and the currect ghc-modi. You should downgrade to cabal 1.20 or upgrade to GHC 7.10 and it should fix the issue."}], "answers": [{"tags": [], "owner": {"reputation": 2779, "user_id": 977026, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/15b767a2c3503f273e9ad5270e4efdc1?s=128&d=identicon&r=PG", "display_name": "Schiavini", "link": "https://stackoverflow.com/users/977026/schiavini"}, "is_accepted": true, "score": 7, "last_activity_date": 1422630226, "creation_date": 1422630226, "answer_id": 28238676, "question_id": 27943929, "link": "https://stackoverflow.com/questions/27943929/intellij-haskell-plugin-ghc-modi-failed-with-error/28238676#28238676", "title": "IntelliJ Haskell plugin: ghc-modi failed with error", "body": "<p>This question has been answered by Atsky on <a href=\"https://github.com/Atsky/haskell-idea-plugin/issues/77#issuecomment-70365638\">GitHub</a>:</p>\n\n<blockquote>\n  <p>This is internal problem of ghc-mod. It fails to read file <code>dist/setup-config</code> for some reason.\n  Try to remove <code>dist</code> folder from your project and then run <code>cabal config</code>.</p>\n</blockquote>\n"}], "owner": {"reputation": 2779, "user_id": 977026, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/15b767a2c3503f273e9ad5270e4efdc1?s=128&d=identicon&r=PG", "display_name": "Schiavini", "link": "https://stackoverflow.com/users/977026/schiavini"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1457, "favorite_count": 0, "accepted_answer_id": 28238676, "answer_count": 1, "score": 9, "last_activity_date": 1422630226, "creation_date": 1421241581, "question_id": 27943929, "link": "https://stackoverflow.com/questions/27943929/intellij-haskell-plugin-ghc-modi-failed-with-error", "title": "IntelliJ Haskell plugin: ghc-modi failed with error", "body": "<p>I just installed IntelliJ idea and the official Haskell plugin.\nIntelliJ couldn't find ghc-modi.exe, so I installed ghc-mod through cabal.</p>\n\n<p>However, after importing my cabal project, I am still receiving the following error:</p>\n\n<blockquote>\n  <p>ghc-modi failed with error: NG BUG: GMECabalFlags (GMEString \"extractField: failed extracting configFlags from input, input contained `configFlags'? False\")</p>\n</blockquote>\n\n<p>How can I solve or get more information on this error?</p>\n\n<p>Thanks in advance.</p>\n"}, {"tags": ["haskell", "parsec"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 2, "creation_date": 1421243276, "post_id": 27943603, "comment_id": 44284166, "body": "The type will probably be <code>Parser X</code>, where X is the type that <code>Val</code> produces. I believe this has to do with the monomorphism restriction, so added <code>{-# LANGUAGE NoMonomorphismRestriction #-}</code> to your file may fix it."}, {"owner": {"reputation": 3542, "user_id": 2984585, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/d8b299670c2e1512831e7d2026a8d350?s=128&d=identicon&r=PG", "display_name": "ditoslav", "link": "https://stackoverflow.com/users/2984585/ditoslav"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1421243872, "post_id": 27943603, "comment_id": 44284506, "body": "Now that I think of it it does sound silly that I didn&#39;t try that but I suppose I need a lot more practice with this to grok it. It didn&#39;t occur to me that simply stating <code>:: Parser Char</code> would provide the info he needed. How come the ghci gets it?"}, {"owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "edited": false, "score": 1, "creation_date": 1421245309, "post_id": 27943603, "comment_id": 44285415, "body": "ghci has <code>NoMonomorphismRestriction</code> enabled. from <a href=\"https://www.haskell.org/haskellwiki/Monomorphism_restriction\" rel=\"nofollow noreferrer\">haskell.org/haskellwiki/Monomorphism_restriction</a>: The monomorphism restriction is turned on by default in compiled modules, and turned off by default at the GHCi prompt (since GHC 7.8.1)."}], "owner": {"reputation": 3542, "user_id": 2984585, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/d8b299670c2e1512831e7d2026a8d350?s=128&d=identicon&r=PG", "display_name": "ditoslav", "link": "https://stackoverflow.com/users/2984585/ditoslav"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 126, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1421240589, "creation_date": 1421240589, "question_id": 27943603, "link": "https://stackoverflow.com/questions/27943603/parsec-error-when-using-char-in-different-context", "title": "Parsec error when using char in different context", "body": "<p>I'm trying to support String variables in my language and have found the parser which I need:</p>\n\n<pre><code>strP :: Parser String\nstrP = between (char '\"') (char '\"') (many1 $ noneOf \"\\\"\")\n</code></pre>\n\n<p>and I can use it from GHCi but when I add it to my code in:</p>\n\n<pre><code>stri = Val &lt;$&gt; VString &lt;$&gt; (between (char '\"') (char '\"') (many1 $ noneOf \"\\\"\"))\n</code></pre>\n\n<p>it complains that</p>\n\n<pre><code>No instance for (Text.Parsec.Prim.Stream s0 m0 Char)\n  arising from a use of `char'\nThe type variables `s0', `m0' are ambiguous\nPossible fix: add a type signature that fixes these type variable(s)\n</code></pre>\n\n<p>But honestly I have no idea what the types should be :/</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 3, "creation_date": 1421239803, "post_id": 27943048, "comment_id": 44282048, "body": "A case statement might be prettier here: <code>case args of { fileName:command:commandArgs -&gt; dispatch fileName command commandArgs; _ -&gt; putStrLn invalidCallingSignature }</code>, but it&#39;s really just a matter of personal preference.  The case statement would mean that a list traversal for finding the length would not be necessary, though."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1421243004, "post_id": 27943048, "comment_id": 44284000, "body": "Add a <code>do</code> after the <code>else</code>, or alternatively an <code>in</code> after <code>= args</code>."}], "tags": [], "owner": {"reputation": 60956, "user_id": 8922, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/f1634a09333f7b391db92e1d2bea6253?s=128&d=identicon&r=PG", "display_name": "Sebastian Redl", "link": "https://stackoverflow.com/users/8922/sebastian-redl"}, "is_accepted": true, "score": 7, "last_activity_date": 1421245324, "last_edit_date": 1421245324, "creation_date": 1421238764, "answer_id": 27943048, "question_id": 27942977, "link": "https://stackoverflow.com/questions/27942977/why-i-get-not-in-scope-exception-message/27943048#27943048", "title": "Why I get &quot;Not in scope&quot; exception message?", "body": "<p>There <code>where</code> clause applies to the function as a whole, and the indentation is misleading you. What the compiler sees is:</p>\n\n<pre><code>main = do\n    args &lt;- getArgs\n    if length args &lt; 2 then \n        putStrLn invalidCallingSignature \n    else\n        dispatch fileName command commandArgs\n  where (fileName : command : commandArgs) = args\n</code></pre>\n\n<p>So <code>args</code> is not visible. You want a do-notation <code>let</code>:</p>\n\n<pre><code>main = do\n    args &lt;- getArgs\n    if length args &lt; 2 then \n        putStrLn invalidCallingSignature \n    else do\n        let (fileName : command : commandArgs) = args\n        dispatch fileName command commandArgs\n</code></pre>\n"}], "owner": {"reputation": 10045, "user_id": 1306132, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/kVX7T.png?s=128&g=1", "display_name": "Andrey Bushman", "link": "https://stackoverflow.com/users/1306132/andrey-bushman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 274, "favorite_count": 0, "accepted_answer_id": 27943048, "answer_count": 1, "score": 2, "last_activity_date": 1421245324, "creation_date": 1421238523, "question_id": 27942977, "link": "https://stackoverflow.com/questions/27942977/why-i-get-not-in-scope-exception-message", "title": "Why I get &quot;Not in scope&quot; exception message?", "body": "<p>I learn Haskell. My code:</p>\n\n<pre><code>main = do\n  args &lt;- getArgs\n  if length args &lt; 2 then \n    putStrLn invalidCallingSignature \n  else\n    dispatch fileName command commandArgs\n    where (fileName : command : commandArgs) = args -- But I get an Exception: src3.hs:22:48: Not in scope: `args'\n</code></pre>\n\n<p>I am confused by exception I get for last code row. Why I get it?</p>\n"}, {"tags": ["haskell", "higher-rank-types"], "comments": [{"owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "edited": false, "score": 0, "creation_date": 1421241996, "post_id": 27942828, "comment_id": 44283347, "body": "the problem is similar to <a href=\"http://stackoverflow.com/questions/27887907/transducers-in-haskell-and-the-monomorphism-restriction\" title=\"transducers in haskell and the monomorphism restriction\">stackoverflow.com/questions/27887907/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 5184, "user_id": 1935631, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/0e4d0d6c5ce5e9350cacc818ee350347?s=128&d=identicon&r=PG", "display_name": "Sassa NF", "link": "https://stackoverflow.com/users/1935631/sassa-nf"}, "edited": false, "score": 0, "creation_date": 1421244247, "post_id": 27944035, "comment_id": 44284727, "body": "I upvoted your answer, but kudos goes to @chi, for he explained the &quot;why&quot; part of the question, too."}, {"owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "reply_to_user": {"reputation": 5184, "user_id": 1935631, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/0e4d0d6c5ce5e9350cacc818ee350347?s=128&d=identicon&r=PG", "display_name": "Sassa NF", "link": "https://stackoverflow.com/users/1935631/sassa-nf"}, "edited": false, "score": 1, "creation_date": 1421244495, "post_id": 27944035, "comment_id": 44284895, "body": "Ah true, you could annotate the <code>(.)</code> in <code>g . block</code> to get it work with <code>type</code> true. But that is so cumbersome, I didn&#39;t even mentioned it :)"}], "tags": [], "owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "is_accepted": false, "score": 3, "last_activity_date": 1421241898, "creation_date": 1421241898, "answer_id": 27944035, "question_id": 27942828, "link": "https://stackoverflow.com/questions/27942828/rankntypes-doesnt-match-return-type/27944035#27944035", "title": "RankNTypes doesn&#39;t match return type", "body": "<p>Using <code>newtype</code> for <code>Block</code> will keep <code>s</code> existential. Otherwise it will \"leak\" out</p>\n\n<hr>\n\n<p>With original definition:</p>\n\n<pre><code>type Block = forall s . STVector s Int -&gt; ST s Int\ntype Exp = Int -&gt; Int -&gt; Block\n</code></pre>\n\n<p>You could simplify failing example (<code>main</code>) to:</p>\n\n<pre><code>g . block\n</code></pre>\n\n<p>You'd like it's type to be:</p>\n\n<pre><code>g . block :: [Block] -&gt; Int\n</code></pre>\n\n<p>But as the written out types of the components are:</p>\n\n<pre><code>block :: forall s. [forall s0. STVector s0 Int -&gt; ST s0 Int] -&gt; (STVector s Int -&gt; ST s Int)\ng :: (forall s1. STVector s1 Int -&gt; ST s1 Int) -&gt; Int\n</code></pre>\n\n<p>Then when composed with <code>(.)</code>, GHC keeps <code>s</code> general:</p>\n\n<pre><code>g . block :: forall s . [forall s0. STVector s0 Int -&gt; ST s0 Int] -&gt; Int\n</code></pre>\n\n<p>and tries to unify:</p>\n\n<pre><code>forall s1. STVector s1 Int -&gt; ST s1 Int -- and\n(STVector s Int -&gt; ST s Int)\n</code></pre>\n\n<hr>\n\n<p>With <code>newtype</code> everything works perfectly (and no need for <code>ImpredicativeTypes</code>):</p>\n\n<pre><code>{-# LANGUAGE RankNTypes #-}\nimport Control.Monad.ST\nimport Data.Vector.Unboxed (Vector)\nimport qualified Data.Vector.Unboxed as U\nimport Data.Vector.Unboxed.Mutable (STVector)\nimport qualified Data.Vector.Unboxed.Mutable as UM\n\ntype Exp = Int -&gt; Int -&gt; Block\nnewtype Block = Block { unBlock :: forall s . STVector s Int -&gt; ST s Int }\n\nblock :: [Block] -&gt; Block\nblock [] = Block $ \\_ -&gt; return 0  -- mapM doesn't work, either - ok, I kinda see why\nblock (e:es) = Block $ \\a -&gt; do x &lt;- unBlock e a\n                                xs &lt;- unBlock (block es) a\n                                return $ x + xs\n\ncopy :: Exp\ncopy i j = Block $ \\a -&gt; do\n        aj &lt;- a `UM.unsafeRead` j\n        UM.unsafeWrite a i aj\n        return 1\n\n\nf :: Block -&gt; Vector Int -&gt; Int\nf (Block blk) ua = runST $ U.thaw ua &gt;&gt;= blk\n\ng :: Block -&gt; Int\ng blk = f blk $ U.fromListN 12 [1..]\n\nmain = print . g $ block [copy 10 1]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 11986, "user_id": 3237465, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/vOArX.png?s=128&g=1", "display_name": "user3237465", "link": "https://stackoverflow.com/users/3237465/user3237465"}, "edited": false, "score": 0, "creation_date": 1421268127, "post_id": 27944561, "comment_id": 44299096, "body": "<code>($)</code> is a magic operator, so you can write <code>main = print $ g $ block [copy 10 1]</code> as well."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 3, "last_activity_date": 1421243602, "creation_date": 1421243602, "answer_id": 27944561, "question_id": 27942828, "link": "https://stackoverflow.com/questions/27942828/rankntypes-doesnt-match-return-type/27944561#27944561", "title": "RankNTypes doesn&#39;t match return type", "body": "<p>While I'd prefer the solution @Oleg posted, I'd like to share an alternative.</p>\n\n<p>Replace</p>\n\n<pre><code>main = print . g $ block [copy 10 1]\n</code></pre>\n\n<p>with</p>\n\n<pre><code>main = print (g (block [copy 10 1]))\n</code></pre>\n\n<p>Reason: impredicative types make it hard for the compiler to guess the type of <code>(.)</code> and <code>($)</code> above.</p>\n\n<p>Another option would be to annotate <code>(.)</code> and <code>($)</code> with their instantiated type -- this would be rather cumbersome, though.</p>\n"}], "owner": {"reputation": 5184, "user_id": 1935631, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/0e4d0d6c5ce5e9350cacc818ee350347?s=128&d=identicon&r=PG", "display_name": "Sassa NF", "link": "https://stackoverflow.com/users/1935631/sassa-nf"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 98, "favorite_count": 1, "accepted_answer_id": 27944561, "answer_count": 2, "score": 2, "last_activity_date": 1421243602, "creation_date": 1421238034, "question_id": 27942828, "link": "https://stackoverflow.com/questions/27942828/rankntypes-doesnt-match-return-type", "title": "RankNTypes doesn&#39;t match return type", "body": "<p>Using <code>RankNTypes</code>, I define a type that doesn't depend on a type variable. Is this the right way to go around the case below?</p>\n\n<p>I need to define a few functions to be used inside <code>ST s</code>, which, of course, doesn't depend on <code>s</code>. Yet, this causes a problem that an expression of <code>Exp</code> with two <code>Int</code>s applied to it doesn't result in a <code>Block</code>. Why?</p>\n\n<p>Here is a reproducer:</p>\n\n<pre><code>import Control.Monad.ST\nimport Data.Vector.Unboxed (Vector)\nimport qualified Data.Vector.Unboxed as U\nimport Data.Vector.Unboxed.Mutable (STVector)\nimport qualified Data.Vector.Unboxed.Mutable as UM\n\ntype Exp = Int -&gt; Int -&gt; Block\ntype Block = forall s . STVector s Int -&gt; ST s Int\n\nblock :: [Block] -&gt; Block\nblock [] _ = return 0  -- mapM doesn't work, either - ok, I kinda see why\nblock (e:es) a = do x &lt;- e a\n                    xs &lt;- block es a\n                    return $ x+xs\n\ncopy :: Exp\ncopy i j a = do\n        aj &lt;- a `UM.unsafeRead` j\n        UM.unsafeWrite a i aj\n        return 1\n\n\nf :: Block -&gt; Vector Int -&gt; Int\nf blk ua = runST $ U.thaw ua &gt;&gt;= blk\n\ng :: Block -&gt; Int\ng blk = f blk $ U.fromListN 12 [1..]\n\nmain = print . g $ block [copy 10 1]\n</code></pre>\n\n<p>The error I get points at the last line:</p>\n\n<pre><code>Couldn't match type `STVector s0 Int -&gt; ST s0 Int'\n              with `forall s. STVector s Int -&gt; ST s Int'\nExpected type: Block\n  Actual type: STVector s0 Int -&gt; ST s0 Int\nIn the return type of a call of `block'\nProbable cause: `block' is applied to too few arguments\nIn the second argument of `($)', namely `block [copy 10 1]'\nIn the expression: print . g $ block [copy 10 1]\n</code></pre>\n\n<p>The difference between the expected and actual type is the <code>forall s.</code> bit, as far as I can tell.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 18999, "user_id": 825637, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/825a58fde1ef99db42c5354dab6cd472?s=128&d=identicon&r=PG", "display_name": "MasterMastic", "link": "https://stackoverflow.com/users/825637/mastermastic"}, "edited": false, "score": 4, "creation_date": 1421234478, "post_id": 27941690, "comment_id": 44279152, "body": "Those really are equal, I find it silly too. My guess is that the author wanted to be explicit."}], "answers": [{"tags": [], "owner": {"reputation": 19480, "user_id": 2491900, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/W8FMW.jpg?s=128&g=1", "display_name": "shree.pat18", "link": "https://stackoverflow.com/users/2491900/shree-pat18"}, "is_accepted": false, "score": 6, "last_activity_date": 1421234779, "last_edit_date": 1421234779, "creation_date": 1421234455, "answer_id": 27941708, "question_id": 27941690, "link": "https://stackoverflow.com/questions/27941690/implementation-of-null-function/27941708#27941708", "title": "Implementation of null function", "body": "<p>Because <code>_</code> literally means anything apart from explicitly specified patterns. When you specify <code>(_:_)</code> it means anything which can be represented as a list containing at least 1 element, without bothering with what or even how many elements the list actually contains. Since the case with an explicit pattern for empty list is already present, <code>(_:_)</code> might as well be replaced by <code>_</code>.</p>\n\n<p>However, representing it as <code>(_:_)</code> gives you the flexibility to not even explicitly pass the empty list pattern. In fact, this will work:</p>\n\n<pre><code>-- | Test whether a list is empty.\nnull                    :: [a] -&gt; Bool    \nnull (_:_)              =  False\nnull _                  =  True\n</code></pre>\n\n<p><a href=\"http://rextester.com/NAPVX82204\" rel=\"noreferrer\">Demo</a></p>\n"}, {"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1501592547, "post_id": 27941881, "comment_id": 77838084, "body": "Does anybody have an idea why this post is so absurdly popular?"}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 41, "last_activity_date": 1450919974, "last_edit_date": 1450919974, "creation_date": 1421234999, "answer_id": 27941881, "question_id": 27941690, "link": "https://stackoverflow.com/questions/27941690/implementation-of-null-function/27941881#27941881", "title": "Implementation of null function", "body": "<p>You can't just turn the clauses around with your solution:</p>\n\n<pre><code>mNull' :: [a] -&gt; Bool\nmNull' _  = False\nmNull' [] = True\n</code></pre>\n\n<p>this \nwill <em>always</em> yield <code>False</code>, even if you pass an empty list. Because the runtime doesn't ever consider the <code>[]</code> clause, it immediately sees <code>_</code> matches anything. (GHC will warn you about such an overlapping pattern.)</p>\n\n<p>On the other hand,</p>\n\n<pre><code>null' :: [a] -&gt; Bool\nnull' (_:_) = False\nnull' []    = True\n</code></pre>\n\n<p>still works correctly, because <code>(_:_)</code> fails to match the particular case of an empty list.</p>\n\n<p>That in itself doesn't really give the two explicit clauses an advantage. However, in more complicated code, writing out all the mutually excluse options has one benefit: if you've forgotten one option, the compiler can also warn you about that! Whereas a <code>_</code> can and will just handle any case not dealt with by the previous clauses, even if that's not actually correct.</p>\n"}, {"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 4, "last_activity_date": 1423588778, "creation_date": 1423588778, "answer_id": 28437835, "question_id": 27941690, "link": "https://stackoverflow.com/questions/27941690/implementation-of-null-function/28437835#28437835", "title": "Implementation of null function", "body": "<p>I'll add on to what leftaroundabout said. This is not really a potential concern for the list type, but in general, data types sometimes get modified. If you have an ill-conceived</p>\n\n<pre><code>data FavoriteFood = Pizza\n                  | SesameSpinachPancake\n                  | ChanaMasala\n</code></pre>\n\n<p>and later you learn to like <code>DrunkenNoodles</code> and add it to the list, all your functions that pattern match on the type will need to be expanded. If you've used any <code>_</code> patterns, you will need to find them manually; the compiler can't help you. If you've matched each thing explicitly, you can turn on <code>-fwarn-incomplete-patterns</code> and GHC will tell you about every spot you've missed.</p>\n"}], "owner": {"reputation": 4090, "user_id": 1223253, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/RsJjQ.jpg?s=128&g=1", "display_name": "TorbenJ", "link": "https://stackoverflow.com/users/1223253/torbenj"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1679, "favorite_count": 0, "accepted_answer_id": 27941881, "answer_count": 3, "score": 26, "last_activity_date": 1450919974, "creation_date": 1421234385, "last_edit_date": 1424937114, "question_id": 27941690, "link": "https://stackoverflow.com/questions/27941690/implementation-of-null-function", "title": "Implementation of null function", "body": "<p>I have to learn Haskell for university and therefor I'm using learnyouahaskell.com for the beginning.<br>I always used imperative languages so I decided to practice Haskell by coding a lot more than I would for other languages.<br>\nI started to implement several functions to work with lists such as <code>head</code>, <code>tail</code>, <code>init</code>,...<br>\nAt some point I looked up the implementations of these functions to compare to mine and I stumbled upon the null function defined in <code>List.lhs</code>.</p>\n\n<p>null's implementation:</p>\n\n<pre><code>-- | Test whether a list is empty.\nnull                    :: [a] -&gt; Bool\nnull []                 =  True\nnull (_:_)              =  False\n</code></pre>\n\n<p>my implementation:<br></p>\n\n<pre><code>mNull :: [a] -&gt; Bool\nmNull []        = True\nmNull _         = False\n</code></pre>\n\n<p>I know there are no stupid questions even for such simple questions :)<br>\nSo my question is why the original implementation uses <code>(_:_)</code> instead of just <code>_</code>?<br>\nIs there any advantage in using <code>(_:_)</code> or are there any edge cases I don't know of?<br>\nI can't really imagine any advantage because <code>_</code> catches everything.</p>\n"}, {"tags": ["haskell", "ghc", "type-families"], "comments": [{"owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 2, "creation_date": 1421221348, "post_id": 27936725, "comment_id": 44272434, "body": "My gut says it shouldn&#39;t be possible since it would need to violate parametricity."}], "answers": [{"tags": [], "owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "is_accepted": false, "score": 12, "last_activity_date": 1421223308, "last_edit_date": 1495540663, "creation_date": 1421222428, "answer_id": 27938236, "question_id": 27936725, "link": "https://stackoverflow.com/questions/27936725/is-it-possible-to-write-fmap-for-this-data-type-involving-a-type-family/27938236#27938236", "title": "Is it possible to write fmap for this data type involving a type family?", "body": "<p>I tend to reason about these kind higher kind programs using Agda.</p>\n\n<p>The problem here is that you want to pattern match on <code>*</code> (<code>Set</code> in Agda), violate parametericity, as mentioned in the comment. That is not good, so you cannot just do it. You have to provide witness. I.e. following is not possible</p>\n\n<pre><code>P : Set \u2192 Set \u2192 Set\nP Unit b = b\nP a b = a \u00d7 b\n</code></pre>\n\n<p>You can overcome the limitiation by using aux type:</p>\n\n<pre><code>P : Aux \u2192 Set \u2192 Set\nP auxunit b     = b\nP (auxpair a) b = a \u00d7 b\n</code></pre>\n\n<p>Or in Haskell:</p>\n\n<pre><code>data Aux x a = AuxUnit x | AuxPair x a\n\ntype family P (x :: Aux * *) :: * where\n  P (AuxUnit x) = x\n  P (AuxPair x a) = (x, a)\n</code></pre>\n\n<p>But doing so you'll have problems expressing <code>T</code>, as you need to pattern match on its parameter again, to select right <code>Aux</code> constructor.</p>\n\n<hr>\n\n<p>\"Simple\" solution, is to express <code>T a ~ Integer</code> when <code>a ~ ()</code>, and <code>T a ~ (Integer, a)</code> directly:</p>\n\n<pre><code>module fmap where\n\nrecord Unit : Set where\n  constructor tt\n\ndata \u22a5 : Set where\n\ndata Nat : Set where\n  zero : Nat\n  suc : Nat \u2192 Nat\n\ndata _\u2261_ {\u2113} {a : Set \u2113} : a \u2192 a \u2192 Set \u2113 where\n  refl : {x : a} \u2192 x \u2261 x\n\n\u00ac_ : \u2200 {\u2113} \u2192 Set \u2113 \u2192 Set \u2113\n\u00ac x = x \u2192 \u22a5\n\n-- GADTs\ndata T : Set \u2192 Set1 where\n  tunit : Nat \u2192 T Unit\n  tpair : (a : Set) \u2192 \u00ac (a \u2261 Unit) \u2192 a \u2192 T a\n\ntest : T Unit \u2192 Nat\ntest (tunit x) = x\ntest (tpair .Unit contra _) with contra refl\ntest (tpair .Unit contra x) | ()\n</code></pre>\n\n<p>You can try to encode this in Haskell to.</p>\n\n<p>You can express it using e.g. <a href=\"https://stackoverflow.com/questions/17749756/idiomatic-haskell-type-inequality\">&#39;idiomatic&#39; Haskell type inequality</a></p>\n\n<p>I'll leave the Haskell version as an exercise :)</p>\n\n<hr>\n\n<p><em>Hmm</em> or did you meant by <code>data T a = T Integer (P (T a) a)</code>:</p>\n\n<pre><code>T () ~ Integer \u00d7 (P (T ()) ())\n     ~ Integer \u00d7 (T ())\n     ~ Integer \u00d7 Integer \u00d7 ... -- infinite list of integers?\n\n-- a /= ()\nT a ~ Integer \u00d7 (P (T a) a)\n    ~ Integer \u00d7 (T a \u00d7 a) ~ Integer \u00d7 T a \u00d7 a\n    ~ Integer \u00d7 Integer \u00d7 ... \u00d7 a \u00d7 a\n</code></pre>\n\n<p>Those are easier to encode directly as well.</p>\n"}], "owner": {"reputation": 341, "user_id": 1131058, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5dbcc7a4a2e591831a4d6e385adc6f58?s=128&d=identicon&r=PG", "display_name": "Sebastien", "link": "https://stackoverflow.com/users/1131058/sebastien"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 203, "favorite_count": 2, "answer_count": 1, "score": 12, "last_activity_date": 1421223308, "creation_date": 1421215432, "question_id": 27936725, "link": "https://stackoverflow.com/questions/27936725/is-it-possible-to-write-fmap-for-this-data-type-involving-a-type-family", "title": "Is it possible to write fmap for this data type involving a type family?", "body": "<p>Given the following type family (supposed to reflect the isomorphism A\u00d71 \u2245 A)</p>\n\n<pre><code>type family P (x :: *) (a :: *) :: * where\n  P x () = x\n  P x a  = (x, a)\n</code></pre>\n\n<p>and data type defined in terms thereof</p>\n\n<pre><code>data T a = T Integer (P (T a) a)\n</code></pre>\n\n<p>is it possible by some type hackery to write a <code>Functor</code> instance for the latter?</p>\n\n<pre><code>instance Functor T where\n  fmap f = undefined  -- ??\n</code></pre>\n\n<p>Intuitively, it's obvious what to do depending on the type of <code>f</code>, but I don't know how to express it in Haskell.</p>\n"}, {"tags": ["haskell", "recursion", "io", "pattern-matching", "type-mismatch"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1421202292, "post_id": 27934755, "comment_id": 44267180, "body": "Please start at the beginning. Write <i>one</i> function. Make sure it compiles. Test it. If you&#39;re having trouble, ask a question here about the <i>one</i> function. Then move on to the next. Here you&#39;ve dumped a whole messy slew of code and said &quot;It doesn&#39;t work. Help me.&quot; Not too many will be interested in digging through all that."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1421202459, "post_id": 27934755, "comment_id": 44267223, "body": "Unrelatedly, it looks like you&#39;re using strings to represent what a LISP or Scheme programmer would use symbols for. In Haskell, we typically try, when we can, to use enumeration types for that. Write something like <code>data FSMState = Start | Stop | A | ...</code>. However, there are usually more natural representations of FSMs in Haskell."}, {"owner": {"reputation": 3, "user_id": 4451428, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-Xw5Sju0QfNY/AAAAAAAAAAI/AAAAAAAAABc/RVimzpazXJQ/photo.jpg?sz=128", "display_name": "Andreas Burmeister", "link": "https://stackoverflow.com/users/4451428/andreas-burmeister"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1421203453, "post_id": 27934755, "comment_id": 44267457, "body": "@dfeuer Like I didn&#39;t think of that... I am well aware that what I posted is not a concise question. But I think I indicated that I am not sure <i>which</i> part of the code the problem arises from, so I better posted <i>all</i> of it. On top of that, I have ofted read posts where an overly short question lead to even more questions, because the context or even the meaning was left unclear. So to refine my request: I am especially unsure about the <code>changeState</code> part. The questions remain: Is my understanding of <code>let</code> correct? Is there an obvious type mismatch I caused? Is the idea of recursion correct?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1421203834, "post_id": 27934755, "comment_id": 44267545, "body": "No, <code>changeState</code> makes no sense that I can see. You don&#39;t need/want a <code>do</code> block there at all, as far as I can tell, and I have no idea what you mean about &quot;old states&quot;. Isn&#39;t there just one current state and one next state?"}, {"owner": {"reputation": 3, "user_id": 4451428, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-Xw5Sju0QfNY/AAAAAAAAAAI/AAAAAAAAABc/RVimzpazXJQ/photo.jpg?sz=128", "display_name": "Andreas Burmeister", "link": "https://stackoverflow.com/users/4451428/andreas-burmeister"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1421204248, "post_id": 27934755, "comment_id": 44267630, "body": "Yes, there is of course always only one current state and one next state. However, if I want to print to the command line which states are being used, i.e. the transitions from start state to next to next ... to final state, I see two ways: 1. Do that in the recursive function. I would then need to define it as IO, but would actually like to keep it pure. 2. Build up a String oldStates recursively, that I return with the function and can print out later on."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1421205457, "post_id": 27934755, "comment_id": 44267859, "body": "The canonical way to record things as you go is using a writer monad. You likely want to use a big old combo platter called <code>RWST</code>, which can be found in the <code>mtl</code> package that comes with GHC. But I reiterate: you&#39;re trying to do too much at once. Smaller pieces, please! It&#39;s not just about asking the question, but about building up your own understanding of how things are done in Haskell before you try to go for big complicated things. I&#39;m a (relative) beginner myself, and it&#39;s frustrating, yes, but that&#39;s how it is."}], "answers": [{"tags": [], "owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "is_accepted": true, "score": 0, "last_activity_date": 1421208426, "creation_date": 1421208426, "answer_id": 27935696, "question_id": 27934755, "link": "https://stackoverflow.com/questions/27934755/trouble-with-type-matching-and-io-in-a-recursive-function/27935696#27935696", "title": "Trouble with type matching and IO in a recursive function", "body": "<p>You can get things to compile by just changing the second clause of the <code>changeState</code> function to:</p>\n\n<pre><code>changeState startState (x:xs) stateTransitions =\n    let (currentState, oldStates) = changeState xs startState stateTransitions\n        newState = findKey x (findKey currentState stateTransitions)\n        oldStates2 = (oldStates ++ currentState ++ \" -(\" ++ [x] ++ \")-&gt; \")\n    in (newState, oldStates2)\n</code></pre>\n\n<p>We've 1) removed the <em>do</em>, 2) combined the <em>let</em> clauses and 3) renamed the second occurrence of the <em>oldState</em> variable to <em>oldState2</em>. In Haskell we don't redefine variables - we just create a variable with a new name. Complete code is available here: <a href=\"http://lpaste.net/118404\" rel=\"nofollow\">http://lpaste.net/118404</a></p>\n\n<p>When you write:</p>\n\n<pre><code>(new, old) = changeState ...\n</code></pre>\n\n<p>you are saying that changeState is a pure function. If you define <code>changeState</code> with <code>do ... return (...)</code> you are saying it is a monadic computation and when you call it you need to use the arrow <code>&lt;-</code> in a <code>do</code> block:</p>\n\n<pre><code>(new, old) &lt;- changeState ...\n</code></pre>\n\n<p>Since <code>changeState</code> is a pure function (doesn't need to do IO) you might as well keep it as a pure function, so there is no reason to use <code>do</code> and <code>return</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 1706, "user_id": 1840613, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2dfd4d21060ccd9b972864e0f6cb8c4?s=128&d=identicon&r=PG", "display_name": "Jeremy List", "link": "https://stackoverflow.com/users/1840613/jeremy-list"}, "is_accepted": false, "score": 0, "last_activity_date": 1421208579, "creation_date": 1421208579, "answer_id": 27935723, "question_id": 27934755, "link": "https://stackoverflow.com/questions/27934755/trouble-with-type-matching-and-io-in-a-recursive-function/27935723#27935723", "title": "Trouble with type matching and IO in a recursive function", "body": "<p>The problem is that <code>do</code> notation and the <code>return</code> function don't do what you think they do. In Haskell: <code>return</code> doesn't signify that a function should end (even though it's most commonly seen at the end of functions); it just means that the argument should be wrapped in a <code>Monad</code>. Because the type of your function with all arguments applied is (String,String) the compiler thought you were trying to use something like this: (won't actually compile without GHC extensions, and will throw exceptions if used because I used <code>undefined</code>)</p>\n\n<pre><code>instance Monad ((,) String) where\n  (&gt;&gt;=) = undefined :: (String,a) -&gt; (a -&gt; (String,b)) -&gt; (String,b)\n  return = undefined :: a -&gt; (String,a)\n</code></pre>\n\n<p>But the compiler already knew that <code>(String,String) -&gt; (String,String)</code> doesn't match <code>a -&gt; (String,a)</code> so it didn't get as far as checking whether or not the instance exists.\nFixing this problem revealed another one: you define <code>oldStates</code> twice in the same function, which doesn't work in Haskell unless the two definitions are in different scopes.</p>\n\n<p>This is your function modified to compile properly, but I haven't tested it.</p>\n\n<pre><code>changeState :: String -&gt; String -&gt; [(String, [(Char,String)])] -&gt; (String, String)\n\nchangeState startState [] _ = (startState, \"\")\n\nchangeState startState (x:xs) stateTransitions = let\n    (currentState, oldStates) = changeState xs startState stateTransitions\n    newState = findKey x (findKey currentState stateTransitions)\n    oldStates' = (oldStates ++ currentState ++ \" -(\" ++ [x] ++ \")-&gt; \")\n    in (newState, oldStates')\n</code></pre>\n"}], "owner": {"reputation": 3, "user_id": 4451428, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-Xw5Sju0QfNY/AAAAAAAAAAI/AAAAAAAAABc/RVimzpazXJQ/photo.jpg?sz=128", "display_name": "Andreas Burmeister", "link": "https://stackoverflow.com/users/4451428/andreas-burmeister"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 101, "favorite_count": 0, "accepted_answer_id": 27935696, "answer_count": 2, "score": 0, "last_activity_date": 1421208579, "creation_date": 1421201321, "question_id": 27934755, "link": "https://stackoverflow.com/questions/27934755/trouble-with-type-matching-and-io-in-a-recursive-function", "title": "Trouble with type matching and IO in a recursive function", "body": "<p>I'm experiencing some problems and can't find their reason. I am currently using the most recent version of GHCi portable - but to face the truth: It is my first time using Haskell, so as usual the problem is probably the user and not so much the system...</p>\n\n<p>Problems that arise include:</p>\n\n<ul>\n<li>I am not completely sure I got the difference between <code>let x = 0</code> and <code>x &lt;- 0</code> right. I understand that <code>let</code> is to be used with pure functions, <code>&lt;-</code> with side effects (IO)? Someone please explain that to me once again.</li>\n<li>I have mismatchings between types, namely <code>String</code> and <code>(String,[Char])</code> (and sometimes others...). The compiler tells me that <code>String</code> was expected, although I clearly defined the function as <code>(String,String)</code>. What's going on? Did I somewhere make a mistake with the pattern matching?</li>\n<li>The recursion does not work as expected (i.e. doesn't work at all apparently). If someone could help me with that, I would be very grateful.</li>\n</ul>\n\n<hr>\n\n<p>Here's what I want to do:<br>\nI am trying to write a little program that implements a finite state machine accepting a word. That means it takes a set of states, one of which is the start state, a list of accepting states, and a number of transition rules. (The alphabets which represent the possible input and states are somewhat implicit.) I don't want to go into too much detail about FSMs here.  </p>\n\n<p>However, this is how I figured a way to define such a FSM could look:  </p>\n\n<pre><code>\"a(b+|c+)\"\n\"start\"\n[\"b\",\"c\"]\n[\n(\"start\",   [('a',\"a\"),                         ('_',\"reject\")]),\n(\"a\",       [           ('b',\"b\"),  ('c',\"c\"),  ('_',\"reject\")]),\n(\"b\",       [           ('b',\"b\"),              ('_',\"reject\")]),\n(\"c\",       [                       ('c',\"c\"),  ('_',\"reject\")]),\n(\"reject\",  [                                   ('_',\"reject\")])\n]\n</code></pre>\n\n<p>In the first line, we have short description of what the FSM is supposed to accept (in form of a regex in this case). It is only used to display it once.<br>\nThe second line defines the start state, the third line a list of accepting states.<br>\nAll following lines together are the transition rules. In this example, if we are in state \"start\" and read an input 'a', the next state is \"a\", if we read anything else, it is \"reject\". <em>(I am aware that I have not yet implemented the '_' meaning an else and the program will crash if an input is read for which no transition is defined.)</em></p>\n\n<p>So here comes the program:</p>\n\n<pre><code>module FSM where\n\nimport System.IO\n\nmain :: IO ()\nmain = do\n    putStr \"Enter file name: \"\n    fileName &lt;- getLine\n    (description, startState, acceptingStates, stateTransitions) &lt;- (readDef fileName)\n    putStrLn (\"FSM description: \" ++ description)\n    putStr \"Enter FSM input: \"\n    input &lt;- getLine\n    let input = reverse input\n    putStrLn \"----------------\"\n    let (finalState, oldStates) = changeState input startState stateTransitions\n    putStrLn (oldStates ++ finalState)\n    checkAcception finalState acceptingStates\n\n--reads the specified .fsm file and returns\n--  the description of the FSM (first line),\n--  the start state (second line),\n--  the list of accepting states (third line),\n--  and the list of tuples containing all states and transitions (remaining lines)\nreadDef :: String -&gt; IO (String, String, [String], [(String, [(Char,String)])])\nreadDef fileName = do\n    contents &lt;- readFile (fileName ++ \".fsm\")\n    let lineList = lines contents\n    let description = read (head lineList)\n    let startState = read (lineList !! 1)\n    let acceptingStates = read (lineList !! 2)\n    let stateTransitions = read (filter (/='\\t') (concat (drop 3 lineList)))\n    return (description, startState, acceptingStates, stateTransitions)\n\n--recursive function that takes the input, start state, and state transitions\n--and computes the new state by a call to itself with the old state and a part of the input\nchangeState :: String -&gt; String -&gt; [(String, [(Char,String)])] -&gt; (String, String)\n\nchangeState startState [] _ = (startState, \"\")\n\nchangeState startState (x:xs) stateTransitions = do\n    let (currentState, oldStates) = changeState xs startState stateTransitions\n    let newState = findKey x (findKey currentState stateTransitions)\n    let oldStates = (oldStates ++ currentState ++ \" -(\" ++ [x] ++ \")-&gt; \")\n    return (newState, oldStates)\n\n--helper function to find a key in a list of tuples and return the corresponding value\n--(because we are not using the map notation in the .fsm file)\nfindKey :: (Eq k) =&gt; k -&gt; [(k,v)] -&gt; v\nfindKey key xs = snd . head . filter (\\(k,v) -&gt; key == k) $ xs\n\n--checks for a given state whether or not it is in the list of accepting states\ncheckAcception :: String -&gt; [String] -&gt; IO ()\ncheckAcception finalState acceptingStates = do\n    let accept = any (==finalState) acceptingStates\n    if accept\n        then putStrLn \"Input accepted!!\"\n        else putStrLn \"Input rejected!!\"\n</code></pre>\n\n<p>The idea is to have the user choose a file from which the definition is loaded (<code>readDef</code>, works like a charm). He is then prompted to enter some input the FSM works on.<br>\nThe recursive <code>changeState</code> then does the actual work (doesn't work as well...).<br>\nFinally, the sequence of states and transitions is displayed and it is checked whether the final state is an accepting state (<code>checkAcceptance</code>).</p>\n\n<hr>\n\n<p>Now, don't try to optimize what I have written. I know, the way the definition is modeled can be improved and many of the lines I wrote can be written far shorter using some high order Haskell foo. But please just help me with the issues listed above (and of course help me make it work).<br>\nThanks a lot in advance.</p>\n\n<p>One last thing: I'm trying some Haskell for a seminar at my university, so if someone from the Software Architecture Group googled my code and reads this: Hi :)</p>\n"}, {"tags": ["haskell", "types", "ghc"], "answers": [{"comments": [{"owner": {"reputation": 339, "user_id": 2016967, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/0c8c24288ef00bfed7018f0cf4cf4b0d?s=128&d=identicon&r=PG", "display_name": "Gowtham Kaki", "link": "https://stackoverflow.com/users/2016967/gowtham-kaki"}, "edited": false, "score": 1, "creation_date": 1421247687, "post_id": 27934664, "comment_id": 44286932, "body": "Thanks very much, dfeuer and Cactus. I did write my example initially using Datakinds. But, OutsideIn JFP paper makes no guarantees about type inference in presence datakinds (the paper pre-dates datakinds promotion paper). So, I removed datakinds to see if type inference works."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 8, "last_activity_date": 1421214493, "last_edit_date": 1421214493, "creation_date": 1421200611, "answer_id": 27934664, "question_id": 27934337, "link": "https://stackoverflow.com/questions/27934337/ghc-could-not-infer-types-in-presence-of-gadts-and-type-families/27934664#27934664", "title": "GHC could not infer types in presence of GADTs and Type Families", "body": "<p>I haven't read more than a drop of the paper, which is well over my head, but I believe the problem is almost certainly caused by the type family. You have a function of type</p>\n\n<pre><code>Vec a n1 -&gt; Vec a n2 -&gt; Vec a (Plus n1 n2)\n</code></pre>\n\n<p>but type inference, in principle, has no way to recognize that. I could add to your code a second type family,</p>\n\n<pre><code>type family Plus' (a :: *) (b :: *) :: *\ntype instance Plus' Zero b = b\ntype instance Plus' (Succ a) b = Succ (Plus' a b)\n</code></pre>\n\n<p>that looks just like <code>Plus</code> but with a different name. Inference has no way to figure out whether you want <code>Plus</code> or <code>Plus'</code>. Inference never chooses, and never lets itself get into a position where it might have to choose (without some really unpleasant things like <code>IncoherentInstances</code>). So inference could only be valid here <em>if it were valid without <code>Plus</code> existing</em>. I don't know nearly enough about the theory behind type checking, but I don't think type families can be inferred out of nowhere.</p>\n\n<p>I believe what the paper means is that inference remains useful in the presence of all these things, and remains just as good as it is without them. You can, for example, write code that <em>uses</em> your <code>append</code> function and that does not have a type signature:</p>\n\n<pre><code>append3 a b c = a `append` b `append` c\n</code></pre>\n\n<p>Extra bonus note: <code>DataKinds</code> and closed type families make some of the code rather easier to understand. I would write your code like this:</p>\n\n<pre><code>data Nat = Zero | Succ Nat\n\ntype family Plus (a :: Nat) (b :: Nat) :: Nat where\n  Plus Zero b = b\n  Plus (Succ a) b = Succ (Plus a b)\n\ndata Vec :: * -&gt; Nat -&gt; * where\n  VNil :: Vec a Zero\n  VCons :: a -&gt; Vec a n -&gt; Vec a (Succ n)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 339, "user_id": 2016967, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/0c8c24288ef00bfed7018f0cf4cf4b0d?s=128&d=identicon&r=PG", "display_name": "Gowtham Kaki", "link": "https://stackoverflow.com/users/2016967/gowtham-kaki"}, "edited": false, "score": 0, "creation_date": 1421247495, "post_id": 27937043, "comment_id": 44286794, "body": "Thanks for the great answer, Oleg. Also, thanks for the link to the paper on function promotion. One question: I understand that function promotion will make it easier to write rich types for functions like append, but I don&#39;t see how it helps in type inference. For instance, in my example Plus is already a type-level function, and, as you point out, OutsideIn is unaware of Plus when inferring types. So, will it make any difference if Plus is promoted from the value level instead of being defined at the type level?"}, {"owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "reply_to_user": {"reputation": 339, "user_id": 2016967, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/0c8c24288ef00bfed7018f0cf4cf4b0d?s=128&d=identicon&r=PG", "display_name": "Gowtham Kaki", "link": "https://stackoverflow.com/users/2016967/gowtham-kaki"}, "edited": false, "score": 0, "creation_date": 1421247703, "post_id": 27937043, "comment_id": 44286943, "body": "@GowthamKaki If we could promote (at least some simplest) anonymous functions, than you&#39;ll be able to write type for <code>NonEmpty</code> <code>append</code> without relying on the out-of-context name - and maybe even infer it!"}], "tags": [], "owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "is_accepted": false, "score": 4, "last_activity_date": 1421217201, "creation_date": 1421217201, "answer_id": 27937043, "question_id": 27934337, "link": "https://stackoverflow.com/questions/27934337/ghc-could-not-infer-types-in-presence-of-gadts-and-type-families/27937043#27937043", "title": "GHC could not infer types in presence of GADTs and Type Families", "body": "<p>Say we have following definition:</p>\n\n<pre><code>append VNil         v2 = v2\nappend (VCons x xs) v2 = VCons x (append xs v2)\n</code></pre>\n\n<p>It's obvious from the definition that:</p>\n\n<pre><code>append :: Vec a n -&gt; Vec a m -&gt; Vec a p\n</code></pre>\n\n<p>As if you don't mind the <code>Nat</code> index in <code>Vec</code>, it's HM-type and everything should go simply.</p>\n\n<p>Then we could write out constraints for <code>n</code>, <code>m</code> and <code>p</code>:</p>\n\n<pre><code>appendIndex Zero m ~ m                          -- from VNil case\nappendIndex (Succ n) m ~ Succ (appendIndex n m) -- from VCons case\n</code></pre>\n\n<p>I didn't read the JFP paper, but I think that <em>OutsideIn</em> can't solve this constraints. It has to be able to solve them without any context i.e. knowing that somewhere is <code>Plus</code>.</p>\n\n<p>It could solve the constraint with something like (pseudosyntax, type lambda):</p>\n\n<pre><code>append :: Vec a n -&gt; Vec a m -&gt; Vec a (rec f (\u03bb n \u2192 case n of { Zero -&gt; m ; Succ n' -&gt; Succ (f n') }))\n</code></pre>\n\n<p>And with even smarter compiler the anonymous definition of plus could be unified with <code>Plus</code> or <code>Plus'</code> when function is used.</p>\n\n<hr>\n\n<p>It's worth taking advice from a simpler paper: <a href=\"http://research.microsoft.com/en-us/um/people/simonpj/papers/boxy/\" rel=\"nofollow\">FPH: First-class Polymorphism for Haskell,</a>, especially for top-level definitions:</p>\n\n<ul>\n<li>If type is HM it can be inferred</li>\n<li>Other types (RankN) should be annotated, cannot be inferred.</li>\n</ul>\n\n<hr>\n\n<p>As for non-trivial example, I guess there can't be one as GHC type language doesn't have (even non-recursive) anonymous type functions (AFAIK).</p>\n\n<p>Even the quite simple (non-recursive in types) example fails</p>\n\n<pre><code>data NonEmpty :: * -&gt; Bool -&gt; * where\n  VNil :: NonEmpty a False\n  VCons :: a -&gt; NonEmpty a b -&gt; NonEmpty a True\n\nappend VNil         v2 = v2\nappend (VCons x xs) v2 = VCons x (append xs v2)\n</code></pre>\n\n<p>as it have to infer</p>\n\n<pre><code>appendIndex True b = True\nappendIndex False b = b\n</code></pre>\n\n<p>which is essentially <code>||</code> on a type level. GHC doesn't support (yet?) function promotion. So you can't even write</p>\n\n<pre><code>append :: NonEmpty a x -&gt; NonEmpty b y -&gt; NonEmpty b (x '|| y)\n</code></pre>\n\n<p>But there are developments towards making it possible <a href=\"http://www.cis.upenn.edu/~eir/papers/2014/promotion/promotion.pdf\" rel=\"nofollow\">http://www.cis.upenn.edu/~eir/papers/2014/promotion/promotion.pdf</a></p>\n"}], "owner": {"reputation": 339, "user_id": 2016967, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/0c8c24288ef00bfed7018f0cf4cf4b0d?s=128&d=identicon&r=PG", "display_name": "Gowtham Kaki", "link": "https://stackoverflow.com/users/2016967/gowtham-kaki"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 129, "favorite_count": 0, "accepted_answer_id": 27934664, "answer_count": 2, "score": 3, "last_activity_date": 1421217201, "creation_date": 1421197972, "question_id": 27934337, "link": "https://stackoverflow.com/questions/27934337/ghc-could-not-infer-types-in-presence-of-gadts-and-type-families", "title": "GHC could not infer types in presence of GADTs and Type Families", "body": "<p>I have a simple length-indexed vector type and an <code>append</code> function over length-indexed vectors:</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\n{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n\nmodule LengthIndexedList where\n\n  data Zero\n  data Succ a\n\n  type family Plus (a :: *) (b :: *) :: *\n  type instance Plus Zero b = b\n  type instance Plus (Succ a) b = Succ (Plus a b)\n\n  data Vec :: * -&gt; * -&gt; * where\n    VNil :: Vec a Zero\n    VCons :: a -&gt; Vec a n -&gt; Vec a (Succ n)\n\n  -- If you remove the following type annotation, type inference\n  -- fails.\n  -- append :: Vec a n1 -&gt; Vec a n2 -&gt; Vec a (Plus n1 n2)\n  append v1 v2 = case v1 of\n    VNil -&gt; v2\n    (VCons x xs) -&gt; VCons x (append xs v2)\n</code></pre>\n\n<p>Compilation fails as GHC cannot infer a type for the <code>append</code> function. I understand that type inference is tricky in presence of GADTs and Type Families partly due to polymorphic recursion. Nevertheless, as per Vytiniotis et al's <a href=\"http://research.microsoft.com/en-us/um/people/simonpj/papers/constraints/jfp-outsidein.pdf\" rel=\"nofollow\">JFP paper</a>  GHC7's type inference should work in presence of \"type classes + GADTs + type families\". In this context, I have two questions:</p>\n\n<ol>\n<li>Why isn't type inference working for the above example (I am using GHC7)? </li>\n<li>What is a non-trivial example involving GADTs and Type Functions (like the <code>append</code> above)  for which GHC can infer types?  </li>\n</ol>\n"}, {"tags": ["haskell", "concurrency", "profiling", "stm", "haskell-pipes"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1421201285, "post_id": 27933941, "comment_id": 44266951, "body": "How many OS threads are you giving it?"}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 3, "creation_date": 1421203661, "post_id": 27933941, "comment_id": 44267507, "body": "Yes please, did you compile with <code>-threaded</code> and run with <code>-N</code>? And how many cores do you have in your machine?"}, {"owner": {"reputation": 10726, "user_id": 889902, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/ops76.png?s=128&g=1", "display_name": "Wojciech Danilo", "link": "https://stackoverflow.com/users/889902/wojciech-danilo"}, "edited": false, "score": 0, "creation_date": 1421217772, "post_id": 27933941, "comment_id": 44271076, "body": "I tried both - with and without <code>-threaded</code> and running with <code>+RTS -N8</code>. The results are funny - the pipes version behaves yet much slower (whole example goes from 1s to 4s!), Chan is lot slower also and <code>unagi</code> is faster about 20%. I&#39;ve got 8 cores here (modern i7)"}, {"owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "edited": false, "score": 1, "creation_date": 1421229340, "post_id": 27933941, "comment_id": 44276325, "body": "Seems like <code>TChan</code> version performs better than <code>MVar</code> when threaded (as it should!): <a href=\"https://gist.github.com/phadej/ca603306992cee39ce9d\" rel=\"nofollow noreferrer\">gist.github.com/phadej/ca603306992cee39ce9d</a>"}, {"owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "edited": false, "score": 1, "creation_date": 1421229612, "post_id": 27933941, "comment_id": 44276479, "body": "The <code>MVar</code> version behaviour is different from <i>chans</i>. Writing in chan is non-blocking (assuming there is space in the buffer), where writing in-non-empty <code>MVar</code> is blocking. In your benchmark writes and reads are aligned nicely, so <code>MVar</code> isn&#39;t bottlenecking anything."}, {"owner": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 0, "creation_date": 1448211645, "post_id": 27933941, "comment_id": 55479391, "body": "The benchmark for pipes is wrong because it pointlessly introduces 20 calls for major gc into each sample pipes program."}, {"owner": {"reputation": 10726, "user_id": 889902, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/ops76.png?s=128&g=1", "display_name": "Wojciech Danilo", "link": "https://stackoverflow.com/users/889902/wojciech-danilo"}, "reply_to_user": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 0, "creation_date": 1448482687, "post_id": 27933941, "comment_id": 55612240, "body": "@Michael could you point where the error is?"}, {"owner": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 0, "creation_date": 1449069031, "post_id": 27933941, "comment_id": 55846793, "body": "The calls to <code>performGC</code> are not needed in this particular case <a href=\"http://sprunge.us/JQYP\" rel=\"nofollow noreferrer\">sprunge.us/JQYP</a>  Try <code>test</code> to see if it is doing anything different. (I&#39;m not sure I remember all the relevant bits; I went through this several times.) For more complex cases you would need <code>spawn&#39;</code> in place of <code>spawn</code>, for still others, you would have needed <code>performGC</code>. &#39;performGC&#39; was nice because it covered all cases, and a case that can no longer be replicated: in its distinctive uses case it doesn&#39;t work with recent ghcs anyway."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1421215504, "post_id": 27936212, "comment_id": 44270299, "body": "So is there a reason for that, or can we expect a fix?"}, {"owner": {"reputation": 10726, "user_id": 889902, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/ops76.png?s=128&g=1", "display_name": "Wojciech Danilo", "link": "https://stackoverflow.com/users/889902/wojciech-danilo"}, "edited": false, "score": 0, "creation_date": 1421217982, "post_id": 27936212, "comment_id": 44271152, "body": "Ugh, the performance difference is huge. If I change some values (100 producers, 10000 consumers, the unagi performs in 0.64s, while pipes-concurrent in about 70s!, this is over 100 times slower)"}, {"owner": {"reputation": 34015, "user_id": 1026598, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/e4cf2da845e7862bd0b0e4edd405f77d?s=128&d=identicon&r=PG", "display_name": "Gabriel Gonzalez", "link": "https://stackoverflow.com/users/1026598/gabriel-gonzalez"}, "edited": false, "score": 2, "creation_date": 1421249869, "post_id": 27936212, "comment_id": 44288356, "body": "The API is unlikely to change for <code>pipes-concurrency</code>.  The library emphasizes ease of use and correctness over performance."}, {"owner": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "edited": false, "score": 1, "creation_date": 1421343454, "post_id": 27936212, "comment_id": 44331760, "body": "In this particular case it seems the trouble is all with <code>performGC</code> as the results I put up suggest."}, {"owner": {"reputation": 2831, "user_id": 183792, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9ddcfbc6c31012fd25384f6301363347?s=128&d=identicon&r=PG&f=1", "display_name": "Michael", "link": "https://stackoverflow.com/users/183792/michael"}, "reply_to_user": {"reputation": 10726, "user_id": 889902, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/ops76.png?s=128&g=1", "display_name": "Wojciech Danilo", "link": "https://stackoverflow.com/users/889902/wojciech-danilo"}, "edited": false, "score": 1, "creation_date": 1421696276, "post_id": 27936212, "comment_id": 44449153, "body": "@WojciechDanilo  It is now clear to me that the correct statement is something like &quot;Unagi-Chan is about 4 times as fast as pipes-concurrency&quot;"}], "tags": [], "owner": {"reputation": 34015, "user_id": 1026598, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/e4cf2da845e7862bd0b0e4edd405f77d?s=128&d=identicon&r=PG", "display_name": "Gabriel Gonzalez", "link": "https://stackoverflow.com/users/1026598/gabriel-gonzalez"}, "is_accepted": false, "score": 5, "last_activity_date": 1421212180, "creation_date": 1421212180, "answer_id": 27936212, "question_id": 27933941, "link": "https://stackoverflow.com/questions/27933941/haskell-fast-concurrent-queue/27936212#27936212", "title": "Haskell fast concurrent queue", "body": "<p>If I had to guess why <code>pipes-concurrency</code> perform more poorly, it's because every read and write is wrapped in an <code>STM</code> transaction, whereas the other libraries use more efficient low-level concurrency primitives.</p>\n"}, {"comments": [{"owner": {"reputation": 206, "user_id": 3943027, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4b609c6568ccf94f887297f33ebc9f62?s=128&d=identicon&r=PG&f=1", "display_name": "Pierre R", "link": "https://stackoverflow.com/users/3943027/pierre-r"}, "edited": false, "score": 1, "creation_date": 1421273760, "post_id": 27949458, "comment_id": 44301966, "body": "Thanks for the detail answer. As a more general concern, is there a good implementation of a fast logger library for Haskell used in production ? By logging I do mean the same as @Danilo (not some trace messages that you might want to enable in development)"}, {"owner": {"reputation": 10726, "user_id": 889902, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/ops76.png?s=128&g=1", "display_name": "Wojciech Danilo", "link": "https://stackoverflow.com/users/889902/wojciech-danilo"}, "reply_to_user": {"reputation": 206, "user_id": 3943027, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4b609c6568ccf94f887297f33ebc9f62?s=128&d=identicon&r=PG&f=1", "display_name": "Pierre R", "link": "https://stackoverflow.com/users/3943027/pierre-r"}, "edited": false, "score": 1, "creation_date": 1421331624, "post_id": 27949458, "comment_id": 44323698, "body": "@pierreR - we are using internally a fast logging library in our company and we are right now developing it second version. It is just in finish stage, is very extensible and allows for multi-threaded logging. You should expect it will be released opensource on hackage in a day or two. I&#39;ll write here about it :)"}, {"owner": {"reputation": 10726, "user_id": 889902, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/ops76.png?s=128&g=1", "display_name": "Wojciech Danilo", "link": "https://stackoverflow.com/users/889902/wojciech-danilo"}, "reply_to_user": {"reputation": 206, "user_id": 3943027, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4b609c6568ccf94f887297f33ebc9f62?s=128&d=identicon&r=PG&f=1", "display_name": "Pierre R", "link": "https://stackoverflow.com/users/3943027/pierre-r"}, "edited": false, "score": 2, "creation_date": 1421376017, "post_id": 27949458, "comment_id": 44345342, "body": "@PierreR: here it is! a fast, &amp; extensible logging library for you! <a href=\"https://hackage.haskell.org/package/logger\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/logger</a> (or on github: <a href=\"https://github.com/wdanilo/haskell-logger\" rel=\"nofollow noreferrer\">github.com/wdanilo/haskell-logger</a>)"}], "tags": [], "owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "is_accepted": true, "score": 18, "last_activity_date": 1421258404, "creation_date": 1421258404, "answer_id": 27949458, "question_id": 27933941, "link": "https://stackoverflow.com/questions/27933941/haskell-fast-concurrent-queue/27949458#27949458", "title": "Haskell fast concurrent queue", "body": "<p>So I can give you a little overview of some of the analysis of <code>Chan</code> and <code>TQueue</code> (which <code>pipes-concurrency</code> is using internally here) that motivated some design decisions that went into <code>unagi-chan</code>. I'm not sure if it will answer your question. I recommend forking different queues and playing with variations while benchmarking to get a real good sense of what is going on.</p>\n\n<h2>Chan</h2>\n\n<p><code>Chan</code> looks like:</p>\n\n<pre><code>data Chan a\n = Chan (MVar (Stream a)) -- pointer to \"head\", where we read from\n        (MVar (Stream a)) -- pointer to \"tail\", where values written to\n\ntype Stream a = MVar (ChItem a)\ndata ChItem a = ChItem a (Stream a)\n</code></pre>\n\n<p>It's a linked-list of <code>MVar</code>s. The two <code>MVar</code>s in the <code>Chan</code> type act as pointers to the current head and tail of the list, respectively. This is what a write looks like:</p>\n\n<pre><code>writeChan :: Chan a -&gt; a -&gt; IO () \nwriteChan (Chan _ writeVar) val = do \n    new_hole &lt;- newEmptyMVar   mask_ $ do\n    old_hole &lt;- takeMVar writeVar           -- [1]\n    putMVar old_hole (ChItem val new_hole)  -- [2]\n    putMVar writeVar new_hole               -- [3]\n</code></pre>\n\n<p>At 1 the writer takes a lock on the write end, at 2 our item <code>a</code> is made available to the reader, and at 3 the write end is unlocked for other writers. </p>\n\n<p>This actually performs pretty well in a single-consumer/single-producer scenario (see <a href=\"http://hackage.haskell.org/package/unagi-chan\" rel=\"noreferrer\">the graph here</a>) because reads and writes don't contend. But once you have multiple concurrent writers you can start having trouble:</p>\n\n<ul>\n<li><p>a writer that hits 1 while another writer is at 2 will block and be descheduled (the fastest I've been able to measure a context switch is ~150ns (pretty darn fast); there are probably situations where it is much slower). So when you get many writers contending\nyou're basically making a big round-trip through the scheduler, onto a wait-queue for the <code>MVar</code> and then finally the write can complete.</p></li>\n<li><p>When a writer gets descheduled (because it timed out) while at 2, it holds onto a lock and no writes will be allowed to complete until it can be rescheduled again; this becomes more of an issue when we're <em>over-subscribed</em>, i.e. when our threads/core ratio is high.</p></li>\n</ul>\n\n<p>Finally, using an <code>MVar</code>-per-item requires some overhead in terms of allocation, and more importantly when we accumulate many mutable objects we can cause a lot of GC pressure.</p>\n\n<h2>TQueue</h2>\n\n<p><code>TQueue</code> is great because <code>STM</code> makes it super simple to reason about its correctness. It's a functional dequeue-style queue, and a <code>write</code> consists of simply reading the writer stack, consing our element, and writing it back:</p>\n\n<pre><code>data TQueue a = TQueue (TVar [a])\n                       (TVar [a])\n\nwriteTQueue :: TQueue a -&gt; a -&gt; STM ()\nwriteTQueue (TQueue _ write) a = do  \n  listend &lt;- readTVar write   -- a transaction with a consistent \n  writeTVar write (a:listend) -- view of memory\n</code></pre>\n\n<p>If after a <code>writeTQueue</code> writes its new stack back, another interleaved write does the same, one of the writes will be retried. As more <code>writeTQueue</code>s are interleaved the effect of contention is worsened. However performance degrades much more slowly than in <code>Chan</code> because there is only a single <code>writeTVar</code> operation that can void competing <code>writeTQueue</code>s, and the transaction is very small (just a read and a <code>(:)</code>).</p>\n\n<p>A read works by \"dequeuing\" the stack from the write side, reversing it, and storing the reversed stack in its own variable for easy \"popping\" (altogether this gives us amortized O(1) push and pop)</p>\n\n<pre><code>readTQueue :: TQueue a -&gt; STM a\nreadTQueue (TQueue read write) = do\n  xs &lt;- readTVar read\n  case xs of\n    (x:xs') -&gt; do writeTVar read xs'\n                  return x\n    [] -&gt; do ys &lt;- readTVar write\n             case ys of\n               [] -&gt; retry\n               _  -&gt; case reverse ys of\n                       [] -&gt; error \"readTQueue\"\n                       (z:zs) -&gt; do writeTVar write []\n                                    writeTVar read zs\n                                    return z\n</code></pre>\n\n<p>Readers have a symmetrical moderate contention issue to writers. In the general case readers and writers don't contend, however when the reader stack is depleted readers are contending with other readers and writers. I suspect if you pre-loaded a <code>TQueue</code> with enough values and then launched 4 readers and 4 writers you might be able to induce livelock as the reverse struggled to complete before the next write. It's also interesting to note that unlike with <code>MVar</code>, a write to a <code>TVar</code> on which many readers are waiting wakes them all simultabeously (this might be more or less efficient, depending on the scenario).</p>\n\n<p>I suspect you don't see much of the weaknesses of <code>TQueue</code> in your test; primarily you're seeing the moderate effects of write contention and the overhead of a lot of allocating and GC'ing a lot of mutable objects.</p>\n\n<h2>unagi-chan</h2>\n\n<p><code>unagi-chan</code> was designed firstly to handle contention well. It's conceptually very simple, but the implementation has some complexities</p>\n\n<pre><code>data ChanEnd a = ChanEnd AtomicCounter (IORef (Int , Stream a))\n\ndata Stream a = Stream (Array (Cell a)) (IORef (Maybe (Stream a)))\n\ndata Cell a = Empty | Written a | Blocking (MVar a)\n</code></pre>\n\n<p>Read and write sides of the queue share the <code>Stream</code> on which they coordinate passing values (from writer to reader) and indications of blocking (from reader to writer), and read and write sides each have an independent atomic counter. A write works like:</p>\n\n<ol>\n<li><p>a writer calls the atomic <code>incrCounter</code> on the write counter to receive its unique index on which to coordinate with its (single) reader</p></li>\n<li><p>the writer finds its cell and performs a CAS of <code>Written a</code></p></li>\n<li><p>if successful it exits, else it sees that a reader has beat it and is blocking (or proceeding to block), so it does a <code>(\\Blocking v)-&gt; putMVar v a)</code> and exits.</p></li>\n</ol>\n\n<p>A read works in a similar and obvious way.</p>\n\n<p>The first innovation is to make the point of contention an atomic operation which doesn't degrade under contention (as a CAS/retry loop or a Chan-like lock would). Based on simple benchmarking and experimenting, the <a href=\"http://hackage.haskell.org/package/atomic-primops-0.6.1.1/docs/Data-Atomics.html#v:fetchAddByteArrayInt\" rel=\"noreferrer\">fetch-and-add primop, exposed by the <code>atomic-primops</code> library</a> works best.</p>\n\n<p>Then in 2 both reader and writer need perform only one compare-and-swap (the fast path for the reader is a simple non-atomic read) to finish coordination. </p>\n\n<p>So to try to make <code>unagi-chan</code> good, we </p>\n\n<ul>\n<li><p>use fetch-and-add to handle the point of contention </p></li>\n<li><p>use lockfree techniques such that when we're oversubscribed a thread being descheduled at inopportune times doesn't block progress for other threads (a blocked writer may block at most the reader \"assigned\" to it by the counter; read caveats re. async exceptions in <code>unagi-chan</code> docs, and note that <code>Chan</code> has nicer semantics here)</p></li>\n<li><p>use an array to store our elements, which has better locality (but see below) lower overhead per element and puts less pressure on the GC</p></li>\n</ul>\n\n<p>A final note re. using an array: concurrent writes to an array are generally a bad idea for scaling because you cause a lot of cache-coherence traffic as cachelines are invalidated back and forth across your writer threads. The general term is \"false sharing\". But there are also upsides cache-wise and downsides to alternative designs that I can think of that would stripe writes or something; I've been experimenting with this a bit but don't have anything conclusive at the moment. </p>\n\n<p>One place where we legitimately are concerned with false sharing is in our counter, which we align and pad to 64 bytes; this did indeed show up in benchmarks, and the only downside is the increased memory usage.</p>\n"}], "owner": {"reputation": 10726, "user_id": 889902, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/ops76.png?s=128&g=1", "display_name": "Wojciech Danilo", "link": "https://stackoverflow.com/users/889902/wojciech-danilo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2773, "favorite_count": 11, "accepted_answer_id": 27949458, "answer_count": 2, "score": 25, "last_activity_date": 1421696402, "creation_date": 1421195015, "last_edit_date": 1421197115, "question_id": 27933941, "link": "https://stackoverflow.com/questions/27933941/haskell-fast-concurrent-queue", "title": "Haskell fast concurrent queue", "body": "<p><strong>The Problem</strong></p>\n\n<p>Hello! I'm writing a logging library and I would love to create a logger, that would run in separate thread, while all applications threads would just send messages to it. I want to find the most performant solution for this problem. I need simple unboud queue here.</p>\n\n<p><strong>Approaches</strong></p>\n\n<p>I've created some tests to see how available solutions perform and I get very strange results here. I tested 4 implementations (source code provided below) based on:</p>\n\n<ol>\n<li><a href=\"https://hackage.haskell.org/package/pipes-concurrency\">pipes-concurrency</a></li>\n<li><a href=\"https://hackage.haskell.org/package/base-4.7.0.2/docs/Control-Concurrent-Chan.html\">Control.Concurrent.Chan</a></li>\n<li><a href=\"https://hackage.haskell.org/package/unagi-chan-0.3.0.1\">Control.Concurrent.Chan.Unagi</a></li>\n<li><a href=\"http://chimera.labs.oreilly.com/books/1230000000929/ch07.html#sec_conc-logger\">MVar based as described in the book \"Parallel and Concurrent Programming in Haskell\"</a> Please note that this technique gives us bounded queues of capacity 1 - it's used only for tests</li>\n</ol>\n\n<p><strong>Tests</strong></p>\n\n<p>Here is the source code used for testing:</p>\n\n<pre><code>{-# LANGUAGE NoMonomorphismRestriction #-}\n\nimport Control.Concurrent (threadDelay)\nimport Control.Monad (forever)\nimport Pipes\nimport qualified Pipes.Concurrent as Pipes\nimport Control.Applicative\nimport Control.Monad (replicateM_)\nimport System.Environment (getArgs)\n\nimport Control.Concurrent.Chan\nimport Control.Concurrent (forkIO)\nimport qualified Control.Concurrent.Chan.Unagi as U\nimport Control.Concurrent.MVar\nimport Criterion.Main\n\ndata Event = Msg String | Status | Quit deriving (Show)\n\n----------------------------------------------------------------------\n-- Pipes\n----------------------------------------------------------------------\n\npipesLogMsg = yield (Msg \"hello\")\npipesManyLogs num = replicateM_ num pipesLogMsg\n\npipesAddProducer num o = Pipes.forkIO $ do runEffect $ (pipesManyLogs num) &gt;-&gt; Pipes.toOutput o\n                                           Pipes.performGC\n\npipesHandler max = loop 0\n  where\n    loop mnum = do\n        if mnum == max\n            then lift $ pure ()\n            else do event &lt;- await\n                    case event of\n                        Msg _  -&gt; loop (mnum + 1)\n                        Status -&gt; (lift $ putStrLn (show mnum)) *&gt; loop mnum\n                        Quit   -&gt; return ()\n\n----------------------------------------------------------------------\n-- Chan\n----------------------------------------------------------------------\n\nchanAddProducer num ch = forkIO $ chanManyLogs num ch\nchanManyLogs num ch = replicateM_ num (writeChan ch (Msg \"hello\"))\nchanHandler ch max = handlerIO (readChan ch) max\n\n----------------------------------------------------------------------\n-- Unagi-Chan\n----------------------------------------------------------------------\n\nuchanAddProducer num ch = forkIO $ uchanManyLogs num ch\nuchanManyLogs num ch = replicateM_ num (U.writeChan ch (Msg \"hello\"))\nuchanHandler ch max = handlerIO (U.readChan ch) max\n\n----------------------------------------------------------------------\n-- MVars\n----------------------------------------------------------------------\n\nmvarAddProducer num m = forkIO $ mvarManyLogs num m\nmvarManyLogs num m = replicateM_ num (putMVar m (Msg \"hello\"))\nmvarHandler m max = handlerIO (takeMVar m) max\n\n----------------------------------------------------------------------\n-- Utils\n----------------------------------------------------------------------\n\nhandlerIO f max = loop 0 where\n    loop mnum = do\n        if mnum == max \n            then pure ()\n            else do event &lt;- f\n                    case event of\n                         Msg _  -&gt; loop (mnum + 1)\n                         Status -&gt; putStrLn (show mnum) *&gt; loop mnum\n                         Quit   -&gt; return ()\n\n----------------------------------------------------------------------\n-- Main\n----------------------------------------------------------------------\n\nmain = defaultMain [\n      bench \"pipes\" $ nfIO $ do\n        (output, input) &lt;- Pipes.spawn Pipes.Unbounded\n        replicateM_ prodNum (pipesAddProducer msgNum output)\n        runEffect $ Pipes.fromInput input &gt;-&gt; pipesHandler totalMsg\n    , bench \"Chan\" $ nfIO $ do\n        ch &lt;- newChan\n        replicateM_ prodNum (chanAddProducer msgNum ch)\n        chanHandler ch totalMsg\n    , bench \"Unagi-Chan\" $ nfIO $ do\n        (inCh, outCh) &lt;- U.newChan\n        replicateM_ prodNum (uchanAddProducer msgNum inCh)\n        uchanHandler outCh totalMsg\n    , bench \"MVar\" $ nfIO $ do\n        m &lt;- newEmptyMVar\n        replicateM_ prodNum (mvarAddProducer msgNum m)\n        mvarHandler m totalMsg\n    ]\n  where\n    prodNum  = 20\n    msgNum   = 1000\n    totalMsg = msgNum * prodNum\n</code></pre>\n\n<p>You can compile it with <code>ghc -O2 Main.hs</code> and just run it.\nThe tests create 20 message producers, each producing 1000000 messages.</p>\n\n<p><strong>Results</strong></p>\n\n<pre><code>benchmarking pipes\ntime                 46.68 ms   (46.19 ms .. 47.31 ms)\n                     0.999 R\u00b2   (0.999 R\u00b2 .. 1.000 R\u00b2)\nmean                 47.59 ms   (47.20 ms .. 47.95 ms)\nstd dev              708.3 \u03bcs   (558.4 \u03bcs .. 906.1 \u03bcs)\n\nbenchmarking Chan\ntime                 4.252 ms   (4.171 ms .. 4.351 ms)\n                     0.995 R\u00b2   (0.991 R\u00b2 .. 0.998 R\u00b2)\nmean                 4.233 ms   (4.154 ms .. 4.314 ms)\nstd dev              244.8 \u03bcs   (186.3 \u03bcs .. 333.5 \u03bcs)\nvariance introduced by outliers: 35% (moderately inflated)\n\nbenchmarking Unagi-Chan\ntime                 1.209 ms   (1.198 ms .. 1.224 ms)\n                     0.996 R\u00b2   (0.993 R\u00b2 .. 0.999 R\u00b2)\nmean                 1.267 ms   (1.244 ms .. 1.308 ms)\nstd dev              102.4 \u03bcs   (61.70 \u03bcs .. 169.3 \u03bcs)\nvariance introduced by outliers: 62% (severely inflated)\n\nbenchmarking MVar\ntime                 1.746 ms   (1.714 ms .. 1.774 ms)\n                     0.997 R\u00b2   (0.995 R\u00b2 .. 0.998 R\u00b2)\nmean                 1.716 ms   (1.694 ms .. 1.739 ms)\nstd dev              73.99 \u03bcs   (65.32 \u03bcs .. 85.48 \u03bcs)\nvariance introduced by outliers: 29% (moderately inflated)\n</code></pre>\n\n<p><strong>Question</strong></p>\n\n<p>I would love to ask you why the pipes-concurrent version performs so slow and why it is so much slower than even the chan based. I'm very surprised, that the MVar one is the fastest from all the versions - could anybody tell more, why we get this results and if can we do better in any case?</p>\n"}, {"tags": ["haskell", "monads"], "comments": [{"owner": {"reputation": 1706, "user_id": 1840613, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2dfd4d21060ccd9b972864e0f6cb8c4?s=128&d=identicon&r=PG", "display_name": "Jeremy List", "link": "https://stackoverflow.com/users/1840613/jeremy-list"}, "edited": false, "score": 0, "creation_date": 1421210878, "post_id": 27932794, "comment_id": 44269063, "body": "I&#39;m surprised it doesn&#39;t infer <code>a :: (Num b, Monad m) =&gt; m b</code>"}, {"owner": {"reputation": 10726, "user_id": 889902, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/ops76.png?s=128&g=1", "display_name": "Wojciech Danilo", "link": "https://stackoverflow.com/users/889902/wojciech-danilo"}, "edited": false, "score": 0, "creation_date": 1421218253, "post_id": 27932794, "comment_id": 44271245, "body": "If you want to compile the program, enable <code>-XNoMonomorphismRestriction</code> :)"}], "answers": [{"comments": [{"owner": {"reputation": 4587, "user_id": 815409, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/799175f170f7352129f1ebf636be91d7?s=128&d=identicon&r=PG", "display_name": "Giorgio", "link": "https://stackoverflow.com/users/815409/giorgio"}, "edited": false, "score": 0, "creation_date": 1421189160, "post_id": 27932863, "comment_id": 44263442, "body": "Ok, so the result is of type <code>IO Int</code>. This makes sense."}, {"owner": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "reply_to_user": {"reputation": 4587, "user_id": 815409, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/799175f170f7352129f1ebf636be91d7?s=128&d=identicon&r=PG", "display_name": "Giorgio", "link": "https://stackoverflow.com/users/815409/giorgio"}, "edited": false, "score": 7, "creation_date": 1421189217, "post_id": 27932863, "comment_id": 44263463, "body": "@Giorgio No, <code>IO Integer</code>. The number is defaulted according to Haskell&#39;s normal defaulting rules."}, {"owner": {"reputation": 4587, "user_id": 815409, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/799175f170f7352129f1ebf636be91d7?s=128&d=identicon&r=PG", "display_name": "Giorgio", "link": "https://stackoverflow.com/users/815409/giorgio"}, "reply_to_user": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "edited": false, "score": 0, "creation_date": 1421189434, "post_id": 27932863, "comment_id": 44263559, "body": "@kosmikus: OK. Thanks."}, {"owner": {"reputation": 4587, "user_id": 815409, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/799175f170f7352129f1ebf636be91d7?s=128&d=identicon&r=PG", "display_name": "Giorgio", "link": "https://stackoverflow.com/users/815409/giorgio"}, "reply_to_user": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "edited": false, "score": 0, "creation_date": 1421190105, "post_id": 27932863, "comment_id": 44263833, "body": "@kosmikus: See my extra example: 5 has indeed gotten type <code>Integer</code>."}], "tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": true, "score": 24, "last_activity_date": 1421188995, "creation_date": 1421188995, "answer_id": 27932863, "question_id": 27932794, "link": "https://stackoverflow.com/questions/27932794/what-is-the-type-of-return-5-in-haskell-when-no-context-is-given/27932863#27932863", "title": "What is the type of return 5 in Haskell when no context is given?", "body": "<p>The monad is <code>IO</code>. This is a minor quirk of the behaviour of GHCi. It tries to unify the type of your input with <code>IO a</code>; if it succeeds, it runs that <code>IO</code> action and tries to <code>show</code> the result. If you give it something other than an <code>IO</code> action, it simply tries to <code>show</code> the value.</p>\n\n<p>It\u2019s for the same reason that these produce the same output:</p>\n\n<pre><code>Prelude&gt; \"hello\"\n\"hello\"\nPrelude&gt; print \"hello\"\n\"hello\"\n</code></pre>\n"}], "owner": {"reputation": 4587, "user_id": 815409, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/799175f170f7352129f1ebf636be91d7?s=128&d=identicon&r=PG", "display_name": "Giorgio", "link": "https://stackoverflow.com/users/815409/giorgio"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 634, "favorite_count": 0, "accepted_answer_id": 27932863, "answer_count": 1, "score": 13, "last_activity_date": 1421190010, "creation_date": 1421188735, "last_edit_date": 1495535446, "question_id": 27932794, "link": "https://stackoverflow.com/questions/27932794/what-is-the-type-of-return-5-in-haskell-when-no-context-is-given", "title": "What is the type of return 5 in Haskell when no context is given?", "body": "<p>In <a href=\"https://stackoverflow.com/questions/24071729/what-monadic-type-return-return-function\">this question</a> the OP asks what the type of the expression <code>return 5</code> is and the answer has already been given in that question: it is a generic type, as can be verified by typing</p>\n\n<pre><code>:t return 5\n</code></pre>\n\n<p>in the Haskell interpreter:</p>\n\n<pre><code>return 5 :: (Num a, Monad m) =&gt; m a\n</code></pre>\n\n<p>The specific implementation of <code>return</code> is determined by the context in which it appears: type inference will restrict <code>m</code> to a specific monad such as <code>Maybe</code>, <code>[]</code>, <code>IO</code>, and so on.</p>\n\n<p>I can also force the interpreter to pick a specific monad by specifying the type, e.g.</p>\n\n<pre><code>Prelude&gt; return 5 :: Maybe Int\nJust 5\nPrelude&gt; return 5 :: [Int]\n[5]\n</code></pre>\n\n<p>and so on.</p>\n\n<p>Now if I type the expression <code>return 5</code> without specifying a type, I get:</p>\n\n<pre><code>Prelude&gt; return 5\n5\n</code></pre>\n\n<p>which is quite surprising to me: I would rather have expected the interpreter to tell me that it cannot pick an appropriate implementation of <code>return</code> because it cannot infer the monadic type to be used.</p>\n\n<p>So my question is: what specific monad has Haskell used here? And based on what criteria was this monad chosen?</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>Thanks for the answer! In fact, if I try to compile this program:</p>\n\n<pre><code>module Main\nwhere\n\na = return 5\n\nmain :: IO ()\nmain = putStrLn \"This program should not compile\"\n</code></pre>\n\n<p>I get an error:</p>\n\n<pre><code>No instance for (Monad m0) arising from a use of `return'\nThe type variable `m0' is ambiguous\nRelevant bindings include\n  a :: m0 Integer (bound at invalid_return.hs:4:1)\nNote: there are several potential instances:\n  instance Monad ((-&gt;) r) -- Defined in `GHC.Base'\n  instance Monad IO -- Defined in `GHC.Base'\n  instance Monad [] -- Defined in `GHC.Base'\n  ...plus one other\nIn the expression: return 5\nIn an equation for `a': a = return 5\n</code></pre>\n\n<p>So it only works in GHCi for the reasons explained by Jon.</p>\n"}, {"tags": ["haskell", "types"], "comments": [{"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1421187215, "post_id": 27932422, "comment_id": 44262602, "body": "Try to desugar the <code>do</code> notation. You will see that <code>fg&#39;</code> and <code>fg&#39;&#39;</code> look <i>very</i> different."}], "answers": [{"tags": [], "owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "is_accepted": true, "score": 3, "last_activity_date": 1421187884, "creation_date": 1421187884, "answer_id": 27932624, "question_id": 27932422, "link": "https://stackoverflow.com/questions/27932422/in-haskell-how-to-transfer-the-functions-defined-without-do-notation-to-the-fun/27932624#27932624", "title": "In haskell, how to transfer the functions defined without do notation to the function defined with do?", "body": "<p>You're saying that <code>b = lookup a tb</code>.  This means that <code>b</code> has the same type as <code>lookup a tb</code>, and <code>lookup :: Eq a =&gt; a -&gt; [(a, b)] -&gt; Maybe b</code>.  So <code>b :: Maybe b</code>.  Next, <code>c = lookup b tc</code> means that <code>c</code> has the same type as <code>lookup b tc</code>.  Since <code>b :: Maybe b</code>, <code>lookup b :: [(Maybe b, c)] -&gt; Maybe c</code> (remember that the type variables chosen are irrelevant, so long as they're consistent), and <code>c :: Maybe c</code>.  Since lists in Haskell are homogeneous, <code>[b, c]</code> means that <code>b</code> and <code>c</code> have the same type, so <code>Maybe b ~ Maybe c</code> implies <code>b ~ c</code>.  Since <code>fg''</code> returns a value of <code>Just [b, c]</code>, this means that <code>Just [b, c] :: Maybe [Maybe b]</code>.</p>\n\n<p>The <code>&lt;-</code> syntax in Haskell is not equivalent to <code>=</code> in a <code>let</code>.  In your case, <code>fg'</code> could be turned into a function without <code>do</code> using the <code>&gt;&gt;=</code> operator, which for <code>Maybe</code> has the type</p>\n\n<pre><code>(&gt;&gt;=) :: Maybe a -&gt; (a -&gt; Maybe b) -&gt; Maybe b\n</code></pre>\n\n<p>And can be used as</p>\n\n<pre><code>fg''' a tb tc =\n    lookup a tb &gt;&gt;= (\\b -&gt;            -- b &lt;- lookup a tb\n        lookup b tc &gt;&gt;= (\\c -&gt;        -- c &lt;- lookup b tc\n            Just [b, c]               -- Just [b, c]\n        )\n    )\n</code></pre>\n\n<p>Think of <code>&gt;&gt;=</code> as feeding the value wrapped in a monad forward into a function that returns a new monadic value.  For <code>Maybe</code>, this operator will short circuit if the <code>Maybe a</code> turns out to be <code>Nothing</code>, since it won't have a value to feed forward into the <code>(a -&gt; Maybe b)</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 3, "last_activity_date": 1421187990, "creation_date": 1421187990, "answer_id": 27932647, "question_id": 27932422, "link": "https://stackoverflow.com/questions/27932422/in-haskell-how-to-transfer-the-functions-defined-without-do-notation-to-the-fun/27932647#27932647", "title": "In haskell, how to transfer the functions defined without do notation to the function defined with do?", "body": "<p>The monad laws ensure that</p>\n\n<pre><code>do x &lt;- return y   -- note the return here\n   ...\n</code></pre>\n\n<p>is equivalent to</p>\n\n<pre><code>do let x = y\n   ...\n</code></pre>\n\n<p>Note, however, that without the <code>return</code> above, the two <code>x</code>s in the code above have a different type, so they can never be equivalent. This is because if <code>y :: m a</code>, then the first piece of code has <code>x :: a</code>, while the second uses <code>x :: m a</code>, and <code>a</code> and <code>m a</code> are always different types.</p>\n\n<p>For instance,</p>\n\n<pre><code>do x &lt;- [1]\n   return x\n</code></pre>\n\n<p>evaluates to <code>[1]</code>. Instead,</p>\n\n<pre><code>do let x = [1]\n   return x\n</code></pre>\n\n<p>evaluates to <code>[[1]]</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 3975, "user_id": 1031627, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/yamFN.jpg?s=128&g=1", "display_name": "Luka Horvat", "link": "https://stackoverflow.com/users/1031627/luka-horvat"}, "is_accepted": false, "score": 1, "last_activity_date": 1421188146, "creation_date": 1421188146, "answer_id": 27932677, "question_id": 27932422, "link": "https://stackoverflow.com/questions/27932422/in-haskell-how-to-transfer-the-functions-defined-without-do-notation-to-the-fun/27932677#27932677", "title": "In haskell, how to transfer the functions defined without do notation to the function defined with do?", "body": "<p>In <code>do</code> notation, the <code>&lt;-</code> takes the value out of the <code>Monad</code> (<code>Maybe</code> in this case) and let's you manipulate that value in the code that follows.\nBut that's not the only thing that it does.</p>\n\n<p>It also applies the 'characteristic' of the <code>Monad</code> in question. The characteristic of maybe is that if the value on the right side of the arrow is <code>Nothing</code>, it doesn't do any unwrapping (because there's nothing to unwrap) and just fails the whole computation, so that the result of the whole thing is also <code>Nothing</code>.</p>\n\n<p>A <code>let</code> binding doesn't do anything like that. It just assigns a new name to some existing value so when you do <code>let a = lookup b tb</code> the <code>a</code> is still of the type <code>Maybe something</code>. On the other hand, when you unwrap it like <code>a &lt;- lookup b tb</code>, the type of <code>a</code> is <code>something</code>.</p>\n"}], "owner": {"reputation": 97, "user_id": 4451068, "user_type": "registered", "accept_rate": 83, "profile_image": "https://graph.facebook.com/100006580601533/picture?type=large", "display_name": "Troy  Yao", "link": "https://stackoverflow.com/users/4451068/troy-yao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 102, "favorite_count": 1, "accepted_answer_id": 27932624, "answer_count": 3, "score": 0, "last_activity_date": 1421188146, "creation_date": 1421187030, "question_id": 27932422, "link": "https://stackoverflow.com/questions/27932422/in-haskell-how-to-transfer-the-functions-defined-without-do-notation-to-the-fun", "title": "In haskell, how to transfer the functions defined without do notation to the function defined with do?", "body": "<p>I am new in Haskell. Now I have some problems about type.\nIt is said that the function: </p>\n\n<pre><code>fg a tb tc = case lookup a tb of\n    Nothing -&gt; Nothing\n    Just b -&gt; case lookup b tc of\n        Nothing -&gt; Nothing\n        Just c -&gt; Just [b,c]\n</code></pre>\n\n<p>is the same as the function:</p>\n\n<pre><code>fg' a tb tc = do\n    b &lt;- lookup a tb\n    c &lt;- lookup b tc\n    Just [b,c]\n</code></pre>\n\n<p>Their type are both fg :: (Eq t, Eq a) => a -> [(a, t)] -> [(t, t)] -> Maybe [t]</p>\n\n<p>However, the function below is treated as a different one: </p>\n\n<pre><code>fg'' a tb tc = do\n    let     \n        b = lookup a tb\n        c = lookup b tc\n    Just [b,c]\n</code></pre>\n\n<p>Its type is fg'':: (Eq b, Eq a) => a -> [(a, b)] -> [(Maybe b, b)] -> Maybe [Maybe b].\nThese confuses me. Do anyone can explain why?</p>\n"}, {"tags": ["parsing", "haskell", "parsec"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 1, "creation_date": 1421180386, "post_id": 27930653, "comment_id": 44258872, "body": "What would you gain in this function by knowing if <code>Exp</code> is a <code>Cmd</code>?  You don&#39;t seem to want to make any decision off of this.  Would it be more like <code>makeStatement (Expr (Cmd _ _)) vt = Nothing; makeStatement _ vt = Just vt</code>?"}, {"owner": {"reputation": 3542, "user_id": 2984585, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/d8b299670c2e1512831e7d2026a8d350?s=128&d=identicon&r=PG", "display_name": "ditoslav", "link": "https://stackoverflow.com/users/2984585/ditoslav"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1421180567, "post_id": 27930653, "comment_id": 44258983, "body": "I need to run the command in case it has something to do with the IO"}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1421180620, "post_id": 27930653, "comment_id": 44259021, "body": "So do you need your <code>makeStatement</code> to return an <code>IO</code> action instead?  You won&#39;t be able to &quot;run&quot; a command presumably without performing an IO action."}, {"owner": {"reputation": 3542, "user_id": 2984585, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/d8b299670c2e1512831e7d2026a8d350?s=128&d=identicon&r=PG", "display_name": "ditoslav", "link": "https://stackoverflow.com/users/2984585/ditoslav"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1421180833, "post_id": 27930653, "comment_id": 44259139, "body": "No. I want <code>makeStatement</code> to return vt after evaluating exp"}, {"owner": {"reputation": 3542, "user_id": 2984585, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/d8b299670c2e1512831e7d2026a8d350?s=128&d=identicon&r=PG", "display_name": "ditoslav", "link": "https://stackoverflow.com/users/2984585/ditoslav"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1421180908, "post_id": 27930653, "comment_id": 44259188, "body": "I suppose I want something with deepseq but I do not know how to use it"}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 2, "creation_date": 1421181009, "post_id": 27930653, "comment_id": 44259230, "body": "What do you want to happen from forcing the evaluation of a <code>Cmd</code> value?"}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 3, "creation_date": 1421183522, "post_id": 27930653, "comment_id": 44260607, "body": "@DominikDitoIvosevic Do you think that forcing evaluation of an IO action causes it to be executed? It doesn&#39;t - that&#39;s the whole point of IO."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1421184106, "post_id": 27930653, "comment_id": 44260949, "body": "Forcing the evaluation of an expression can only affect the memory footage and run time (possibly including non termination) of your program. It can not &quot;do&quot; anything else. Why do you want to force evaluation?"}], "answers": [{"tags": [], "owner": {"reputation": 3975, "user_id": 1031627, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/yamFN.jpg?s=128&g=1", "display_name": "Luka Horvat", "link": "https://stackoverflow.com/users/1031627/luka-horvat"}, "is_accepted": true, "score": 4, "last_activity_date": 1421187593, "creation_date": 1421187593, "answer_id": 27932553, "question_id": 27930653, "link": "https://stackoverflow.com/questions/27930653/how-to-force-execution-of-a-function-and-then-return-a-simple-something-else-in/27932553#27932553", "title": "How to force execution of a function and then return a simple something else in haskell", "body": "<p>Firstly, you're probably going to need some composite type to represent the three possible types your expressions can return.\nSomething like</p>\n\n<pre><code>data Value = Number Int | Boolean Bool | String String | Unit\n</code></pre>\n\n<p>The <code>Unit</code> one is for expressions that don't return anything.\nNow, since <em>some</em> of your expressions might have side-effects, you're definitely going to have to wrap <em>everything</em> up into IO. It doesn't matter that there are pure expressions because the compiler doesn't know which one is which.</p>\n\n<pre><code>eval :: VarTable -&gt; Expression -&gt; IO Value\n</code></pre>\n\n<p>Now your <code>makeStatement</code> (something like <code>runStatement</code> might be a better name) would look like this</p>\n\n<pre><code>makeStatement :: Statement -&gt; VarTable -&gt; IO VarTable\nmakeStatement (Exp exp)    vt = eval exp &gt;&gt; return vt\nmakeStatement (If cond th) vt = do\n    c &lt;- eval cond\n    case c of\n        Boolean True -&gt; makeStatement th vt\n        _            -&gt; return vt --maybe handle the case where c isn't even Boolean\n...\n</code></pre>\n\n<p>With this setup you can see that we can do what I'm guessing you wanted. <code>eval</code>uate the expression, and then discard it's result and just return the <code>VarTable</code> unchanged.</p>\n"}], "owner": {"reputation": 3542, "user_id": 2984585, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/d8b299670c2e1512831e7d2026a8d350?s=128&d=identicon&r=PG", "display_name": "ditoslav", "link": "https://stackoverflow.com/users/2984585/ditoslav"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 0, "accepted_answer_id": 27932553, "answer_count": 1, "score": 0, "last_activity_date": 1421187593, "creation_date": 1421179894, "last_edit_date": 1421180441, "question_id": 27930653, "link": "https://stackoverflow.com/questions/27930653/how-to-force-execution-of-a-function-and-then-return-a-simple-something-else-in", "title": "How to force execution of a function and then return a simple something else in haskell", "body": "<p>So I'm making my own primitive shell language parser and I thought I would make my commands (such as cd) expressions so that I can leave some space for them to return values.</p>\n\n<p>Now I have made some kind of parser and I have a naked expression in my statement consumer.</p>\n\n<p>I hope for your sake that I do not have to provide you with the whole code. This is the problematic part:</p>\n\n<pre><code>-- it has other patterns...\nmakeStatement :: Statement -&gt; VarTable -&gt; Maybe VarTable\nmakeStatement (Exp exp) vt = ??? \nmakeStatement (If ..........\n...\n\ndata Expression = Val   Int\n                | Booly  Bool\n                | Var   String\n                | Cmd String [String]\n                  deriving (Show)\n\ndata Statement = Assignment String Expression\n               | If Expression Statement\n               | IfElse Expression Statement Statement\n               | Exp Expression\n                deriving (Show)\neval :: VarTable -&gt; Expression -&gt; Maybe Int\n</code></pre>\n\n<p>So I want to force execution of exp in case its a <code>Cmd</code> but return the same vt it began with.</p>\n"}, {"tags": ["haskell", "syntax"], "comments": [{"owner": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "edited": false, "score": 0, "creation_date": 1421172263, "post_id": 27928503, "comment_id": 44254150, "body": "It&#39;s part of a <a href=\"https://en.wikibooks.org/wiki/Haskell/List_processing#List_comprehensions\" rel=\"nofollow noreferrer\">list comprehension</a>."}, {"owner": {"reputation": 53905, "user_id": 2864740, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/e7a05a144f218bde07b659bc98e1ca7d?s=128&d=identicon&r=PG&f=1", "display_name": "user2864740", "link": "https://stackoverflow.com/users/2864740/user2864740"}, "edited": false, "score": 0, "creation_date": 1421172715, "post_id": 27928503, "comment_id": 44254401, "body": "It&#39;s an award construct to try and show, without knowing what the construct is .. but the title should probably contain <i>some</i> example for such questions."}], "answers": [{"tags": [], "owner": {"reputation": 17641, "user_id": 16800, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea1de76c4c343fc844135e18da8a80f1?s=128&d=identicon&r=PG", "display_name": "Guvante", "link": "https://stackoverflow.com/users/16800/guvante"}, "is_accepted": true, "score": 5, "last_activity_date": 1421172280, "creation_date": 1421172280, "answer_id": 27928571, "question_id": 27928503, "link": "https://stackoverflow.com/questions/27928503/what-does-y-0-mean/27928571#27928571", "title": "What does &quot;y &lt;- [0..]&quot; mean?", "body": "<p>A <a href=\"https://www.haskell.org/haskellwiki/List_comprehension\">list comprehension</a>. It can be interpreted as \"for each y in [0..]\".</p>\n"}, {"tags": [], "owner": {"reputation": 7087, "user_id": 966097, "user_type": "registered", "accept_rate": 97, "profile_image": "https://www.gravatar.com/avatar/ee7b96184af7d8545fa8516b847401a2?s=128&d=identicon&r=PG", "display_name": "Mike H-R", "link": "https://stackoverflow.com/users/966097/mike-h-r"}, "is_accepted": false, "score": 0, "last_activity_date": 1421172317, "creation_date": 1421172317, "answer_id": 27928582, "question_id": 27928503, "link": "https://stackoverflow.com/questions/27928503/what-does-y-0-mean/27928582#27928582", "title": "What does &quot;y &lt;- [0..]&quot; mean?", "body": "<p>this means a function taking x that returns the sum of ((x to the power of y) over y factorial for y ranging from 0 to 9).</p>\n"}], "owner": {"reputation": 2067, "user_id": 1708960, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/39280172449cbd6609c6ca41dcf73d5a?s=128&d=identicon&r=PG&f=1", "display_name": "rel1x", "link": "https://stackoverflow.com/users/1708960/rel1x"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 148, "favorite_count": 0, "accepted_answer_id": 27928571, "answer_count": 2, "score": 0, "last_activity_date": 1421177389, "creation_date": 1421172078, "last_edit_date": 1421177389, "question_id": 27928503, "link": "https://stackoverflow.com/questions/27928503/what-does-y-0-mean", "title": "What does &quot;y &lt;- [0..]&quot; mean?", "body": "<p>I don't understand what <code>y &lt;- [0..]</code> means here. Is it a variable definition?</p>\n\n<pre><code>f x = sum $ take 10 [x**y/product [1..y] | y &lt;- [0..]]\n</code></pre>\n"}, {"tags": ["haskell", "fold", "type-mismatch", "algebraic-data-types"], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 6, "creation_date": 1421174291, "post_id": 27928806, "comment_id": 44255303, "body": "I don&#39;t know Miranda either, but I&#39;d be surprised if it allowed such a thing. I suspect the informal presentation hypothesis is closer to the truth than the mistaken combination, but you&#39;d have to ask John Hughes (and if you have the chance to ask him questions, you might be better off asking him something more interesting)."}, {"owner": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 4, "creation_date": 1421247849, "post_id": 27928806, "comment_id": 44287065, "body": "It&#39;s not written in any particular functional language, and the exact code from the paper has not been through a compiler.  I&#39;ve tried persuading John to update his paper with Haskell code, but he&#39;s too busy.  But if someone else did it, I&#39;m sure he&#39;d accept the contribution."}, {"owner": {"reputation": 46235, "user_id": 2541573, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z1qtP.png?s=128&g=1", "display_name": "jub0bs", "link": "https://stackoverflow.com/users/2541573/jub0bs"}, "reply_to_user": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 0, "creation_date": 1421289615, "post_id": 27928806, "comment_id": 44306739, "body": "@augustss Thanks for that :)"}, {"owner": {"reputation": 46235, "user_id": 2541573, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z1qtP.png?s=128&g=1", "display_name": "jub0bs", "link": "https://stackoverflow.com/users/2541573/jub0bs"}, "reply_to_user": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 0, "creation_date": 1421427826, "post_id": 27928806, "comment_id": 44369074, "body": "@augustss By the way, if you ever manage to persuade John to update his paper, there is a typo on page 4: <code>sum (Cons n list) = num + sum list</code>. Out of curiosity, what exactly did you mean by &quot;if someone else did it&quot;?"}, {"owner": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 0, "creation_date": 1421463668, "post_id": 27928806, "comment_id": 44381869, "body": "If someone else redid the paper with Haskell."}, {"owner": {"reputation": 6181, "user_id": 1025555, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/GBIIj.png?s=128&g=1", "display_name": "Good Night Nerd Pride", "link": "https://stackoverflow.com/users/1025555/good-night-nerd-pride"}, "reply_to_user": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 0, "creation_date": 1431872409, "post_id": 27928806, "comment_id": 48672789, "body": "@augustss, formality issues aside, I&#39;m much more confused that Hughes didn&#39;t come up with this one-liner instead: <code>foldtree f g a (Node label subtrees) = f label (foldr (g . foldtree f g a) a subtrees)</code>. No type issues there. Check out my answer below for details. Maybe Hughes would be so embarrassed about this mistake that he immediately wants to redo the paper himself :)"}], "tags": [], "owner": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "is_accepted": true, "score": 7, "last_activity_date": 1421173486, "last_edit_date": 1421173486, "creation_date": 1421173058, "answer_id": 27928806, "question_id": 27928290, "link": "https://stackoverflow.com/questions/27928290/what-about-john-hughes-foldtree-am-i-misunderstanding/27928806#27928806", "title": "What about John Hughes&#39; `foldtree` am I misunderstanding?", "body": "<p>A proper definition should consist of a pair of mutually recursive functions, one for folding <em>trees</em> and one for folding <em>forests</em> (lists of trees):</p>\n\n<pre><code>foldtree :: (a -&gt; c -&gt; b) -&gt; (b -&gt; c -&gt; c) -&gt; c -&gt; Treeof a -&gt; b\nfoldtree f g a (Node label subtrees) = f label (foldforest f g a subtrees)\n\nfoldforest :: (a -&gt; c -&gt; b) -&gt; (b -&gt; c -&gt; c) -&gt; c -&gt; Listof (Treeof a) -&gt; c\nfoldforest f g a (Cons subtree rest) = g (foldtree f g a subtree) (foldforest f g a rest)\nfoldforest f g a Nil                 = a\n</code></pre>\n\n<p>I think the author has mistakenly combined two different (but closely related) functions together.  I suspect what the author wrote is not really Haskell but more of a Haskell-like pseudocode, so the code was just used to present the algorithm in an informal way.</p>\n\n<p>Note that the paper seems to suggest it's Miranda, a predecessor of Haskell, but I can't confirm if this is legal Miranda code either.</p>\n"}, {"tags": [], "owner": {"reputation": 6181, "user_id": 1025555, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/GBIIj.png?s=128&g=1", "display_name": "Good Night Nerd Pride", "link": "https://stackoverflow.com/users/1025555/good-night-nerd-pride"}, "is_accepted": false, "score": 1, "last_activity_date": 1431871705, "last_edit_date": 1431871705, "creation_date": 1431870677, "answer_id": 30287528, "question_id": 27928290, "link": "https://stackoverflow.com/questions/27928290/what-about-john-hughes-foldtree-am-i-misunderstanding/30287528#30287528", "title": "What about John Hughes&#39; `foldtree` am I misunderstanding?", "body": "<p>Rufflewind's answer is the most obvious way to fix the questionable definition of <code>foldtree</code> from Hughes' famous paper. Yet there is a much more concise and modular solution requiring only one line of code and reusing <code>foldr</code>. Scroll to the bottom of this post to see this definition. Keep on reading for some kind of derivation of the definition.</p>\n\n<p>Compare Rufflewind's  definition of <code>foldforest</code>:</p>\n\n<pre><code>foldforest f g a (Cons subtree rest) = g (foldtree f g a subtree) (foldforest f g a rest)\nfoldforest f g a Nil                 = a\n</code></pre>\n\n<p>...with Hughes' (slightly changed) definition of <code>foldr</code> from the paper:</p>\n\n<pre><code>foldr f a (Cons e rest)              = f e (foldr f a rest)\nfoldr f a Nil                        = a\n</code></pre>\n\n<p>Don't they both look awfully similar? In fact the only difference is that in <code>foldforest</code> we apply <code>foldtree f g a</code> to <code>subtree</code> and (through recursion) to all the other elements in the list of subtrees before \"merging\" them with <code>g</code>. Can we define an operator that does this and can be passed to <code>foldr</code>?</p>\n\n<p>Let's take a closer look at the core of <code>foldforest</code> where the actual work is done: <code>g (foldtree f g a subtree)</code>. Using function composition (defined in Hughes' paper as <code>(f . g) h = f (g h)</code>) we can express this part differently:</p>\n\n<pre><code>foldforest f g a (Cons subtree rest) = (g . foldtree f g a) subtree (foldforest f g a rest)\n</code></pre>\n\n<p>Now let's define <code>h = (g . foldtree f g a)</code> for brevity and pass a concrete list of subtrees to <code>foldforest</code> unfolding the recursion using our new notation:</p>\n\n<pre><code>foldforest f g a (Cons subtree1 (Cons subtree2 Nil)) \n                                     = h subtree1 (h subtree2 a)\n</code></pre>\n\n<p>What does it look like to unfold the recursion of a similar call to <code>foldr</code>?</p>\n\n<pre><code>foldr f a (Cons subtree1 (Cons subtree2 Nil))\n                                     = f subtree1 (f subtree2 a)\n</code></pre>\n\n<p>It is now obvious that we were able to extract an operator from <code>foldforest</code> which we can pass to <code>foldr</code> along with a starting state <code>a</code> and a list of <code>Treeof</code>s. The complete definition of <code>foldtree</code>, maximizing modularity and conciseness, should therefor be:</p>\n\n<pre><code>foldtree f g a (Node label subtrees) = f label (foldr (g . foldtree f g a) a subtrees)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 11, "user_id": 11642411, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6bcaeedf5db79e4d06e17e9297897e79?s=128&d=identicon&r=PG", "display_name": "Marcelo M&#243;dolo", "link": "https://stackoverflow.com/users/11642411/marcelo-m%c3%b3dolo"}, "is_accepted": false, "score": 1, "last_activity_date": 1560429499, "last_edit_date": 1560429499, "creation_date": 1560429416, "answer_id": 56580657, "question_id": 27928290, "link": "https://stackoverflow.com/questions/27928290/what-about-john-hughes-foldtree-am-i-misunderstanding/56580657#56580657", "title": "What about John Hughes&#39; `foldtree` am I misunderstanding?", "body": "<p>Searching on Google I found the link <a href=\"https://gist.github.com/vu3rdd/14f10df24fbeffda09ae\" rel=\"nofollow noreferrer\">https://gist.github.com/vu3rdd/14f10df24fbeffda09ae</a> where the author informs that the document has been updated and is available at <a href=\"http://www.cse.chalmers.se/~rjmh/Papers/whyfp.pdf\" rel=\"nofollow noreferrer\">http://www.cse.chalmers.se/~rjmh/Papers/whyfp.pdf</a>.</p>\n\n<p>Author John Hughes even apologizes for the examples not being on haskell!</p>\n\n<blockquote>\n  <p>This paper dates from 1984, and circulated as a Chalmers memo for many\n  years. Slightly revised versions appeared in 1989 and 1990 as [Hug90]\n  and [Hug89]. This version is based on the original Chalmers memo nroff\n  source, lightly edited for LaTeX and to bring it closer to the\n  published versions, and with one or two errors corrected. Please\n  excuse the slightly oldfashioned type-setting, and the fact that the\n  examples are not in Haskell!</p>\n</blockquote>\n\n<p>Below the corrections presented by the author...</p>\n\n<pre><code>redtree f g a (node label subtrees) =\n    f label (redtree\u2019 f g a subtrees)\nredtree\u2019 f g a (cons subtree rest) =\n    g (redtree f g a subtree) (redtree\u2019 f g a rest)\nredtree\u2019 f g a nil = a\n</code></pre>\n"}], "owner": {"reputation": 46235, "user_id": 2541573, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z1qtP.png?s=128&g=1", "display_name": "jub0bs", "link": "https://stackoverflow.com/users/2541573/jub0bs"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 329, "favorite_count": 0, "accepted_answer_id": 27928806, "answer_count": 3, "score": 8, "last_activity_date": 1560429499, "creation_date": 1421171216, "last_edit_date": 1444155562, "question_id": 27928290, "link": "https://stackoverflow.com/questions/27928290/what-about-john-hughes-foldtree-am-i-misunderstanding", "title": "What about John Hughes&#39; `foldtree` am I misunderstanding?", "body": "<p>John Hughes, in his famous article entitled <a href=\"http://worrydream.com/refs/Hughes-WhyFunctionalProgrammingMatters.pdf\" rel=\"nofollow\"><em>Why Functional Programming Matters</em></a>, describes data types for lists and <em>ordered labelled trees</em>,</p>\n\n<blockquote>\n<pre><code>listof * ::= Nil | Cons * (listof *)\ntreeof * ::= Node * (listof (treeof *))\n</code></pre>\n</blockquote>\n\n<p>and a function called <code>foldtree</code>,</p>\n\n<blockquote>\n<pre><code>foldtree f g a (Node label subtrees) =\n         f label (foldtree f g a subtrees)\n\nfoldtree f g a (Cons subtree rest) =\n         g (foldtree f g a subtree) (foldtree f g a rest)\n\nfoldtree f g a Nil = a\n</code></pre>\n</blockquote>\n\n<p>I've implemented those two data types in Haskell and I'm currently trying to implement <code>foldtree</code>,</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>data Listof a = Nil | Cons a (Listof a)\n    deriving (Read, Show, Eq)\n\n-- implementation of some list functions... (skipped)\n\ndata Treeof a = Node a (Listof (Treeof a))\n    deriving (Read, Show, Eq)\n\nfoldtree f g a (Node label subtrees) = f label (foldtree f g a subtrees)\nfoldtree f g a (Cons subtree rest)   = g (foldtree f g a subtree) (foldtree f g a rest)\nfoldtree f g a Nil                   = a\n</code></pre>\n\n<p>but I'm getting type mismatches:</p>\n\n<pre><code>Couldn't match expected type \u2018Treeof t\u2019\n            with actual type \u2018Listof (Treeof t)\u2019\nRelevant bindings include\n  subtrees :: Listof (Treeof t) (bound at whyFunMatters.hs:27:28)\n  label :: t (bound at whyFunMatters.hs:27:22)\n  f :: t -&gt; t1 -&gt; t1 (bound at whyFunMatters.hs:27:10)\n  foldtree :: (t -&gt; t1 -&gt; t1)\n              -&gt; (t1 -&gt; t1 -&gt; t1) -&gt; t1 -&gt; Treeof t -&gt; t1\n    (bound at whyFunMatters.hs:27:1)\nIn the fourth argument of \u2018foldtree\u2019, namely \u2018subtrees\u2019\nIn the second argument of \u2018f\u2019, namely \u2018(foldtree f g a subtrees)\u2019\n</code></pre>\n\n<p>(etc.)</p>\n\n<p>After thinking some more about Hughes (pseudo)implementation of <code>foldtree</code>, I'm not so sure I understand it, and those type mismatches now seem obvious to me. More specifically, the type of <code>foldtree</code>'s fourth argument doesn't seem consistent across the three patterns:</p>\n\n<ul>\n<li>in the first pattern, that argument has type <code>Treeof a</code>, whereas</li>\n<li>in the last two patterns, it has type <code>Listof (Treeof a)</code>.</li>\n</ul>\n\n<p>What am I missing?</p>\n"}, {"tags": ["haskell", "types"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1421167822, "post_id": 27927126, "comment_id": 44251599, "body": "Where is <code>auxFood</code> defined?  And the syntax <code>(Meat d b) n = ...</code> isn&#39;t valid.  What is <code>n</code> supposed to be here?"}, {"owner": {"reputation": 107, "user_id": 3086819, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/cbf8d23f588037ac2ffcd32aabde49a6?s=128&d=identicon&r=PG&f=1", "display_name": "user3086819", "link": "https://stackoverflow.com/users/3086819/user3086819"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1421168214, "post_id": 27927126, "comment_id": 44251844, "body": "I forgot auxFood, it&#39;s in now. N is supposed to be the counter that  increases by 1 every time &quot;meat&quot; has been found(in the recursion)."}], "answers": [{"tags": [], "owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "is_accepted": false, "score": 3, "last_activity_date": 1421168089, "creation_date": 1421168089, "answer_id": 27927361, "question_id": 27927126, "link": "https://stackoverflow.com/questions/27927126/conversion-to-another-datatype/27927361#27927361", "title": "Conversion to another Datatype", "body": "<p>The code looks a little bit confused. What you <em>might</em> want to do is define a function that adds two baskets together:</p>\n\n<pre><code>addBaskets b1 b2 = Basket {butter = butter b1 + butter b2, apple = ...\n</code></pre>\n\n<p>And then you could do something like</p>\n\n<pre><code>food2basket (Butter i)   = emptyBasket {butter = i}\nfood2basket (Apple  i b) = addBaskets (emptyBasket {apple = i}) (food2basket b)\nfood2basket (Meat   i b) = addBaskets (emptyBasket {meat  = i}) (food2basket b)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "edited": false, "score": 0, "creation_date": 1421172054, "post_id": 27927729, "comment_id": 44254048, "body": "Give a man food, and he eats for a day... [Sorry, no relevance here, I just had to. ;-) ]"}, {"owner": {"reputation": 3782, "user_id": 751533, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/c991993ee238fbae918f93f46edac3cd?s=128&d=identicon&r=PG", "display_name": "David Sanders", "link": "https://stackoverflow.com/users/751533/david-sanders"}, "reply_to_user": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "edited": false, "score": 0, "creation_date": 1421173534, "post_id": 27927729, "comment_id": 44254869, "body": "Hehe, right...but he&#39;s probably been thinking about this one for a while.  Now that he knows the last step, that still probably helps with the learning process.  Sorry to poach the answer, by the way."}], "tags": [], "owner": {"reputation": 3782, "user_id": 751533, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/c991993ee238fbae918f93f46edac3cd?s=128&d=identicon&r=PG", "display_name": "David Sanders", "link": "https://stackoverflow.com/users/751533/david-sanders"}, "is_accepted": true, "score": 1, "last_activity_date": 1421169277, "creation_date": 1421169277, "answer_id": 27927729, "question_id": 27927126, "link": "https://stackoverflow.com/questions/27927126/conversion-to-another-datatype/27927729#27927729", "title": "Conversion to another Datatype", "body": "<p>Here's a more complete solution:</p>\n\n<pre><code>addBaskets :: Basket -&gt; Basket -&gt; Basket\naddBaskets b1 b2 =\n    Basket (butter b1 + butter b2) (apple b1 + apple b2) ((m1 + m2), (w1 + w2))\n    where (m1, w1) = meat b1\n          (m2, w2) = meat b2\n\nfood2basket :: Food -&gt; Basket\nfood2basket (Butter x)  = emptyBasket { butter = x }\nfood2basket (Apple x f) = addBaskets emptyBasket { apple = x } (food2basket f)\nfood2basket (Meat x f)  = addBaskets emptyBasket { meat = (1, x) } (food2basket f)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 3782, "user_id": 751533, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/c991993ee238fbae918f93f46edac3cd?s=128&d=identicon&r=PG", "display_name": "David Sanders", "link": "https://stackoverflow.com/users/751533/david-sanders"}, "edited": false, "score": 0, "creation_date": 1421169582, "post_id": 27927795, "comment_id": 44252621, "body": "Yeah, this makes more sense.  The original poster&#39;s representation of food orders is confusing."}, {"owner": {"reputation": 107, "user_id": 3086819, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/cbf8d23f588037ac2ffcd32aabde49a6?s=128&d=identicon&r=PG&f=1", "display_name": "user3086819", "link": "https://stackoverflow.com/users/3086819/user3086819"}, "edited": false, "score": 0, "creation_date": 1421170626, "post_id": 27927795, "comment_id": 44253247, "body": "Nice one, I&#39;m not good with monoids so I was limiting myself with pattern matching &amp; recursion. I didn&#39;t know how to call a recursion since I had to &quot;obey&quot; to a certain Type."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "reply_to_user": {"reputation": 107, "user_id": 3086819, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/cbf8d23f588037ac2ffcd32aabde49a6?s=128&d=identicon&r=PG&f=1", "display_name": "user3086819", "link": "https://stackoverflow.com/users/3086819/user3086819"}, "edited": false, "score": 1, "creation_date": 1421170795, "post_id": 27927795, "comment_id": 44253336, "body": "@user3086819 My intention with this answer was to provide you with more information about the general structure of your problem, not to serve as a complete solution to exactly what you had.  I figured it was pretty likely that the type <code>Food</code> was given to you to work with, but I wanted to highlight that it would make more sense to use a different data structure and utilize some of the more generic features of Haskell to solve the problem instead of rolling your own solution.  I had plenty of exercises like that at uni myself, I just find them to be counterproductive to good design."}], "tags": [], "owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "is_accepted": false, "score": 3, "last_activity_date": 1421170488, "last_edit_date": 1421170488, "creation_date": 1421169479, "answer_id": 27927795, "question_id": 27927126, "link": "https://stackoverflow.com/questions/27927126/conversion-to-another-datatype/27927795#27927795", "title": "Conversion to another Datatype", "body": "<p>Expanding on MathematicalOrchid's answer, this pattern looks a lot like a <code>Monoid</code>:</p>\n\n<pre><code>import Data.Monoid\n\ninstance Monoid Basket where\n    mempty = Basket 0 0 (0, 0)  -- Same as emptyBasket\n    mappend (Basket b1 a1 (m1, d1)) (Basket b2 a2 (m2, d2))\n        = Basket (b1 + b2) (a1 + a2) (m1 + m2, d1 + d2)\n</code></pre>\n\n<p>And if you instead wrote your <code>Food</code> type as</p>\n\n<pre><code>data FoodItem\n    = Butter Int\n    | Apple Int\n    | Meat Double\n    deriving (Eq, Show)\n</code></pre>\n\n<p>Then you could have</p>\n\n<pre><code>type Food = [FoodItem]\n\nfoodItemToBasket :: FoodItem -&gt; Basket\nfoodItemToBasket (Butter i) = mempty { butter = i }\nfoodItemToBasket (Apple  i) = mempty { apple = i }\nfoodItemToBasket (Meat   d) = mempty { meat = (1, d) }\n</code></pre>\n\n<p>Then you can simply use <code>map foodItemToBasket</code> and <code>mconcat</code>:</p>\n\n<pre><code>foodToBasket :: Food -&gt; Basket\nfoodToBasket = mconcat . map foodItemToBasket\n</code></pre>\n\n<p>Now the conversion of each item to a basket it much simpler and doesn't contain recursion, and the act of combining these baskets together is handled by <code>mconcat</code>, a more generic function provided by <code>Data.Monoid</code>.</p>\n\n<p>However, if you do want a recursive data structure you can actually seriously overcomplicate things by turning to the <code>Free</code> monad.  I'll gloss over the details, but it lets you do this (you need <code>DeriveFunctor</code> to compile this):</p>\n\n<pre><code>data FoodF f\n    = Butter' Int\n    | Apple' Int f\n    | Meat' Double f\n    deriving (Functor, Show)\n\ntype Food' = Free FoodF\n\nbutter' :: Int -&gt; Food' ()\nbutter' i = liftF $ Butter' i\n\napple' :: Int -&gt; Food' ()\napple' i = liftF $ Apple' i ()\n\nmeat' :: Double -&gt; Food' ()\nmeat' d = liftF $ Meat' d ()\n\nfood'ToBasket :: Food' () -&gt; Basket\nfood'ToBasket (Free (Butter' i)) = mempty { butter = i }\nfood'ToBasket (Free (Apple' i f)) = mempty { apple = i } &lt;&gt; food'ToBasket f\nfood'ToBasket (Free (Meat'  d f)) = mempty { meat = (1, d)} &lt;&gt; food'ToBasket f\nfood'ToBasket (Pure ()) = mempty\n\nandrew :: Food' ()\nandrew = do\n    apple' 1\n    meat' 0.6\n    meat' 0.7\n    apple' 1\n    butter' 1\n</code></pre>\n\n<p>And now you can do</p>\n\n<pre><code>&gt; food'ToBasket andrew\nBasket { butter = 1, apple = 2, meat = (2, 1.2999999999998)}\n</code></pre>\n\n<p>(The imprecise weight is due to IEEE floating point format rounding errors, information on this is scattered all over the internet)</p>\n\n<p>Why you would want to go this route is silly, I just thought it was interesting that your definition of <code>Food</code> fit the pattern to do this.  It does give you a nice monad instance for free that lets you simply list the different items a person has using do notation and then <code>food'ToBasket</code> handles \"interpreting\" this monad structure into a basket.  It does mean that something like</p>\n\n<pre><code>&gt; food'ToBasket (butter' 1 &gt;&gt; apple' 1 &gt;&gt; meat' 0.5)\nBasket { butter = 1, apple = 0, meat = (0, 0.0)}\n</code></pre>\n\n<p>So instead of having a compile-time check that <code>Butter'</code> is the last item in the structure you essentially have short-circuiting whenever <code>Butter'</code> is encountered, just like <code>Nothing</code> will short-circuit a <code>Maybe</code> computation.</p>\n"}], "owner": {"reputation": 107, "user_id": 3086819, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/cbf8d23f588037ac2ffcd32aabde49a6?s=128&d=identicon&r=PG&f=1", "display_name": "user3086819", "link": "https://stackoverflow.com/users/3086819/user3086819"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 61, "favorite_count": 0, "accepted_answer_id": 27927729, "answer_count": 3, "score": 1, "last_activity_date": 1447863589, "creation_date": 1421167357, "last_edit_date": 1447863589, "question_id": 27927126, "link": "https://stackoverflow.com/questions/27927126/conversion-to-another-datatype", "title": "Conversion to another Datatype", "body": "<p>I have the following datatypes:</p>\n\n<pre><code>data Food = Butter Int | Apple Int Food | Meat Double Food deriving (Show)\n\ndata Basket = Basket { butter, apple :: Int, meat :: (Int,Double) } deriving (Show)\n</code></pre>\n\n<p>Basket contains the amount of butter and apples, the amount of meat and its overall weight(as Double).</p>\n\n<p>I'm trying to write a function <strong>food2basket :: Food -> Basket</strong> that allows me to convert a value of the type Food into a value of the type Basket.</p>\n\n<p>So if I declared this instance of Food:</p>\n\n<pre><code>     andrew = Apple 1 ( Meat 0.60 ( Meat 0.70 ( Apple 1 ( Butter 1 ))))\n</code></pre>\n\n<p>By applying the function I'd get the following result</p>\n\n<pre><code> food2basket andrew == {butter = 1, apple= 2, meat = (2,1.30)}\n</code></pre>\n\n<p>So far my code looks like: </p>\n\n<pre><code>emptyBasket = Basket {butter = 0, apple= 0, meat = (0,0)}\nfood2basket (Butter i)      = emptyBasket {butter = i}\nfood2basket (Apple i b)     = anotherBasket{apple = i + (apple anotherBasket)}\n    where anotherBasket     = food2basket b\nfood2basket (Meat d b)      = auxFood (Meat d b) 0\n    where\n         auxFood(Meat d b) n= emptyBasket { meat = (n+1,d)} -- missing recursion\n</code></pre>\n\n<p>It is working up to \"Apple\" part, even tough I found it difficult to use recursion inside the brackets. That's why I used anotherBasket and the where-clause, which is quite confusing.\nAs feared I can't manage to do the same with Meat. (It does no recursion (yet))</p>\n\n<p>I'd like to resolve the whole function with pattern matching.</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 247, "user_id": 4441586, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-wtwj0CDF2fU/AAAAAAAAAAI/AAAAAAAAABI/MKN2fXgHWc4/photo.jpg?sz=128", "display_name": "Jubl", "link": "https://stackoverflow.com/users/4441586/jubl"}, "edited": false, "score": 0, "creation_date": 1421170427, "post_id": 27927341, "comment_id": 44253114, "body": "I have no idea how to incorporate what you are saying. I don&#39;t understand why I would want to remove anything (only replace). Could you possibly give a few more hints?"}, {"owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "reply_to_user": {"reputation": 247, "user_id": 4441586, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-wtwj0CDF2fU/AAAAAAAAAAI/AAAAAAAAABI/MKN2fXgHWc4/photo.jpg?sz=128", "display_name": "Jubl", "link": "https://stackoverflow.com/users/4441586/jubl"}, "edited": false, "score": 0, "creation_date": 1421170702, "post_id": 27927341, "comment_id": 44253296, "body": "<code>removeCat</code> is an example of how to process a string character-by-character. It demonstrates how to perform an action when you see a pattern in the string. You can use this idea to replace <code>[1]</code> and <code>[2]</code> with other strings."}], "tags": [], "owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "is_accepted": false, "score": 1, "last_activity_date": 1421168430, "last_edit_date": 1421168430, "creation_date": 1421168029, "answer_id": 27927341, "question_id": 27927115, "link": "https://stackoverflow.com/questions/27927115/replacing-ints-with-strings/27927341#27927341", "title": "Replacing Ints with Strings", "body": "<p>You could use <code>words</code>, but then you lose information about the white space between the words - i.e. <code>words \"a b\"</code> equals <code>words \"a  b\"</code>. Maybe this is not important, but it is something to keep in mind.</p>\n\n<p>Without providing the exact solution, here is a function which replaces <em>a</em> with <em>a'</em> and <em>b</em> with <em>b'</em> in a list:</p>\n\n<pre><code>replace a a' b b' [] = []       -- base case\nreplace a a' b b' (x:xs) =  c : replace a a' b b' xs\n   where c = if x == a then a' else if x == b then b' else x\n</code></pre>\n\n<p>Perhaps you can figure out how to adapt this to your problem.</p>\n\n<p>Note also that this function may be written using <code>map</code>:</p>\n\n<pre><code>replace a a' b b' xs = map f xs\n  where f x = if x == a then a' else if x == b then b' else x\n</code></pre>\n\n<p>Another approach to this kind of string processing is to pattern match against the characters. Here is a function which removes all occurrences of \"cat\" from a string:</p>\n\n<pre><code>removeCat :: String -&gt; String\nremoveCat ('c':'a':'t':rest)   = rest   -- \"cat\" found so remove it\nremoveCat (x:rest)             = x : removeCat rest\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 247, "user_id": 4441586, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-wtwj0CDF2fU/AAAAAAAAAAI/AAAAAAAAABI/MKN2fXgHWc4/photo.jpg?sz=128", "display_name": "Jubl", "link": "https://stackoverflow.com/users/4441586/jubl"}, "edited": false, "score": 0, "creation_date": 1421187010, "post_id": 27930936, "comment_id": 44262489, "body": "Can you explain what the line, &quot;else (take 1 input)++(recurse 1)&quot; means? I&#39;m a bit confused by it, especially the 1."}, {"owner": {"reputation": 62252, "user_id": 1435869, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TrEd9.jpg?s=128&g=1", "display_name": "karakfa", "link": "https://stackoverflow.com/users/1435869/karakfa"}, "reply_to_user": {"reputation": 247, "user_id": 4441586, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-wtwj0CDF2fU/AAAAAAAAAAI/AAAAAAAAABI/MKN2fXgHWc4/photo.jpg?sz=128", "display_name": "Jubl", "link": "https://stackoverflow.com/users/4441586/jubl"}, "edited": false, "score": 0, "creation_date": 1421246431, "post_id": 27930936, "comment_id": 44286085, "body": "in essence it&#39;s like moving the pointer to the next character on the input text to try the match again since the previous match failed."}], "tags": [], "owner": {"reputation": 62252, "user_id": 1435869, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TrEd9.jpg?s=128&g=1", "display_name": "karakfa", "link": "https://stackoverflow.com/users/1435869/karakfa"}, "is_accepted": false, "score": 0, "last_activity_date": 1421181017, "creation_date": 1421181017, "answer_id": 27930936, "question_id": 27927115, "link": "https://stackoverflow.com/questions/27927115/replacing-ints-with-strings/27930936#27930936", "title": "Replacing Ints with Strings", "body": "<h1>If this is for a homework problem please don't copy verbatim.</h1>\n\n<p>It's easier to solve the generic problem.  </p>\n\n<p>First, you need a <code>replace</code> function to replace a substring.  A straightforward implementation can be</p>\n\n<pre><code>replace :: String -&gt; String -&gt; String -&gt; String\nreplace old new [] = []\nreplace old new input = if (take n input == old) then new++(recurse n)\n                    else (take 1 input)++(recurse 1)\n                    where n = length old\n                          recurse k = replace old new $ drop k input \n</code></pre>\n\n<p>tries to match the \"old\" from the beginning of input and if matched replace and skip the length of old, if not matched move one position and repeat.</p>\n\n<p>So far so good, this will replace all occurrences of \"old\" to \"new\".  However, you need multiple different replacements.  For that let's write another function.  To minimize validations assume we paired all replacements.</p>\n\n<pre><code>replaceAll :: [(String,String)] -&gt; String -&gt; String\nreplaceAll [] input = input\nreplaceAll ((old,new):xs) input = replaceAll xs $ replace old new input\n</code></pre>\n\n<p>You can make the top level signature better by defining a type such as</p>\n\n<pre><code>type Novel = (String,String,Int)\n</code></pre>\n\n<p>finally,</p>\n\n<pre><code>refer :: [Novel] -&gt; String -&gt; String\nrefer [] text = text\nrefer ns text = replaceAll p text\n                   where p = [ (\"[\"++show i++\"]\",format n) | (i,n) &lt;- zip [1..] ns]\n</code></pre>\n\n<p>notice that the citation input is derived from the position of the Novels.</p>\n"}], "owner": {"reputation": 247, "user_id": 4441586, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-wtwj0CDF2fU/AAAAAAAAAAI/AAAAAAAAABI/MKN2fXgHWc4/photo.jpg?sz=128", "display_name": "Jubl", "link": "https://stackoverflow.com/users/4441586/jubl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1421201631, "creation_date": 1421167320, "last_edit_date": 1421201631, "question_id": 27927115, "link": "https://stackoverflow.com/questions/27927115/replacing-ints-with-strings", "title": "Replacing Ints with Strings", "body": "<p>I need help with an exercise. I'm trying to write a function called \"refer\" that will take a list of novels and any given text with citations ([n]) and will return that text with the citations replaced by the novel's name.</p>\n\n<p>refer will have the following signature of: </p>\n\n<pre><code>refer :: [(String, String, Int)] -&gt; String -&gt; String\n</code></pre>\n\n<p>For example, this is how it will be ran:</p>\n\n<pre><code>&gt; refer [(\"author1\", \"novel1\", 1999),(\"author2\", \"novel2\", 2000)] txt\n&gt; \"novel1(author1, 1999) and novel2(author2, 2000) are my favorite books of all time, but I like novel2(author2, 2000) the most!\"\n</code></pre>\n\n<p>I wrote a function called, txt, which will show my text that I will use.</p>\n\n<pre><code>txt :: String\ntxt = \"[1] and [2] are my favorite books of all time, but I like [2] the most!\"\n</code></pre>\n\n<p>I wrote a helper function called, format, which will help me format the novels from (\"author1\", \"novel1\", 1999) to \"novel1(author1, 1999)\"</p>\n\n<pre><code>format :: (String, String, Int) -&gt; String\nformat (name, novel, yearInt) = novel  ++ \" (\" ++ name ++\n                            \", \" ++ (show yearInt) ++ \")\" \n</code></pre>\n\n<p>WHAT I THINK I NEED TO DO:</p>\n\n<p>Step 1: I need to use words to break the input into a list of strings.<br>\nStep 2: I should make a helper function to parse through the list and if I find a citation, I should use format to replace that citation and recursively parse through the rest of the list until I've checked everything.<br>\nStep 3: Make a helper function to convert the string representation of the citation number into an <code>Int</code> (possibly, <code>unwords</code>) since I have to replace the citation with its corresponding element in the given list.<br>\nStep 4: Then I need to use <code>rewords</code> to turn my updated list back into a string.</p>\n\n<p>WHAT I HAVE SO FAR:</p>\n\n<pre><code>refer :: [(String, String, Int)] -&gt; String -&gt; String\nrefer [] \"\" = \"\"\nrefer books txt = [string'| y &lt;- words txt, ........... ]\n-- I'm trying to say that I want to take the inputted list of\n-- novels and text and turn them all into strings and store\n-- them into y which will be represented by string'. I am not\n-- sure what to do after this.\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1421171626, "post_id": 27927098, "comment_id": 44253811, "body": "Adding type signatures to top-level bindings like <code>f</code> can help in fixing these kind of issues. Without a signature GHC can infer a type you did not meant to use, and report the error much later, often causing surprise and confusion in the programmer."}], "answers": [{"comments": [{"owner": {"reputation": 2067, "user_id": 1708960, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/39280172449cbd6609c6ca41dcf73d5a?s=128&d=identicon&r=PG&f=1", "display_name": "rel1x", "link": "https://stackoverflow.com/users/1708960/rel1x"}, "edited": false, "score": 0, "creation_date": 1421168827, "post_id": 27927183, "comment_id": 44252221, "body": "Oh, I can&#39;t do that <code>f n = map (n&#47;) [1..fromIntegral n]</code> :( How I can fix it?"}, {"owner": {"reputation": 3975, "user_id": 1031627, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/yamFN.jpg?s=128&g=1", "display_name": "Luka Horvat", "link": "https://stackoverflow.com/users/1031627/luka-horvat"}, "reply_to_user": {"reputation": 2067, "user_id": 1708960, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/39280172449cbd6609c6ca41dcf73d5a?s=128&d=identicon&r=PG&f=1", "display_name": "rel1x", "link": "https://stackoverflow.com/users/1708960/rel1x"}, "edited": false, "score": 0, "creation_date": 1421168983, "post_id": 27927183, "comment_id": 44252294, "body": "You need to convert the <code>n</code> you&#39;re dividing as well. So <code>(fromIntegral n &#47;)</code>"}], "tags": [], "owner": {"reputation": 3975, "user_id": 1031627, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/yamFN.jpg?s=128&g=1", "display_name": "Luka Horvat", "link": "https://stackoverflow.com/users/1031627/luka-horvat"}, "is_accepted": true, "score": 3, "last_activity_date": 1421167913, "last_edit_date": 1421167913, "creation_date": 1421167533, "answer_id": 27927183, "question_id": 27927098, "link": "https://stackoverflow.com/questions/27927098/error-with-divides-haskell/27927183#27927183", "title": "Error with divides, Haskell", "body": "<p>Your <code>n</code> is an <code>Int</code> which isn't a <code>Fractional</code> type. Those are the ones that support division using the <code>/</code> operator. You can either replace <code>/</code> with <code>div</code> to get integer division (truncates to whole numbers) or you can add <code>fromIntegral</code> to convert the <code>n</code> to the correct type.</p>\n\n<p>Your code should look something like </p>\n\n<pre><code> f n = map (4/) [1..fromIntegral n]\n</code></pre>\n\n<p>To clarify a bit more: Your function f ultimately does division on the parameter that's given to it. This leads the type inference engine to determine that those parameters should be <code>Fractional</code> types. Then you use that function in your <code>main</code> you explicitly give it an <code>Int</code>. </p>\n\n<p>That's why the error says \"You gave me an <code>Int</code>. There's no instance for <code>Fractional Int</code> (read as, '<code>Int</code> isn't a <code>Fractional</code> type') and I need it to be because you're passing an <code>Int</code> into something that requires that instance.\"</p>\n"}], "owner": {"reputation": 2067, "user_id": 1708960, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/39280172449cbd6609c6ca41dcf73d5a?s=128&d=identicon&r=PG&f=1", "display_name": "rel1x", "link": "https://stackoverflow.com/users/1708960/rel1x"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 63, "favorite_count": 0, "accepted_answer_id": 27927183, "answer_count": 1, "score": 1, "last_activity_date": 1421167913, "creation_date": 1421167271, "question_id": 27927098, "link": "https://stackoverflow.com/questions/27927098/error-with-divides-haskell", "title": "Error with divides, Haskell", "body": "<p>My code, where n = 4:</p>\n\n<pre><code>f n = map (4/) [1..n]\n\nmain = do\n    n &lt;- getLine\n    print(f (product(map read $ words n :: [Int])))\n</code></pre>\n\n<p>If I use in terminal <code>map (4/) [1..n]</code> I get a right answer: <code>[4.0,2.0,1.3333333333333333,1.0]</code>.\nBut in my program it's doesn't work, error message is: <code>No instance for (Fractional Int) arising from a use of</code>f'`\nWhere is my mistake?</p>\n"}, {"tags": ["haskell", "binary"], "comments": [{"owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "edited": false, "score": 0, "creation_date": 1421253378, "post_id": 27926789, "comment_id": 44290732, "body": "I just came across this article <a href=\"http://ruhaskell.org/posts/utils/2015/01/15/npy-parsing.html\" rel=\"nofollow noreferrer\">(link)</a> on parsing npy files in Haskell. It&#39;s in Russian, but Google translate seems to do a decent job."}, {"owner": {"reputation": 2396, "user_id": 1423473, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ce97cc5a38992847cc85da5a47944d3a?s=128&d=identicon&r=PG", "display_name": "erthalion", "link": "https://stackoverflow.com/users/1423473/erthalion"}, "reply_to_user": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "edited": false, "score": 0, "creation_date": 1421298273, "post_id": 27926789, "comment_id": 44308640, "body": "Thx, but this is my article, partially based on this question =)"}], "answers": [{"tags": [], "owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "is_accepted": true, "score": 2, "last_activity_date": 1421167331, "creation_date": 1421167331, "answer_id": 27927119, "question_id": 27926789, "link": "https://stackoverflow.com/questions/27926789/haskell-read-double-from-binary-file/27927119#27927119", "title": "Haskell: read [Double] from binary file", "body": "<p>You should try the <code>getFloat...</code> and <code>getDouble...</code> functions from the <code>cereal</code> package <a href=\"http://hackage.haskell.org/package/cereal-0.4.1.1/docs/Data-Serialize-IEEE754.html\" rel=\"nofollow\">(link)</a>.</p>\n\n<p>What your code is doing is reading a 64-bit integer value and converting that do a Double.</p>\n"}, {"tags": [], "owner": {"reputation": 2336, "user_id": 799829, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/736cd516c29ee2f6cdc2c8f454a36bb9?s=128&d=identicon&r=PG", "display_name": "Tim", "link": "https://stackoverflow.com/users/799829/tim"}, "is_accepted": false, "score": 1, "last_activity_date": 1421167799, "creation_date": 1421167799, "answer_id": 27927274, "question_id": 27926789, "link": "https://stackoverflow.com/questions/27926789/haskell-read-double-from-binary-file/27927274#27927274", "title": "Haskell: read [Double] from binary file", "body": "<p>Unfortunately, what should work</p>\n\n<pre><code>     v &lt;- get :: Double\n</code></pre>\n\n<p>doesn't since <code>Data.Binary</code> doesn't use an IEEE754 encoding of doubles (it stores the result of <code>decodeFloat</code>).  Hence a good choice is to use the cereal package.  At least within GHC I've gotten <code>unsafeCoerce</code> on a <code>Word64</code> to work for similar tasks as well.</p>\n\n<pre><code>    bitsToDouble :: Word64 -&gt; Double\n    bitsToDouble = unsafeCoerce\n</code></pre>\n\n<p>Probably <code>cereal</code> is a safer way of doing this.</p>\n"}], "owner": {"reputation": 2396, "user_id": 1423473, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ce97cc5a38992847cc85da5a47944d3a?s=128&d=identicon&r=PG", "display_name": "erthalion", "link": "https://stackoverflow.com/users/1423473/erthalion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 221, "favorite_count": 0, "accepted_answer_id": 27927119, "answer_count": 2, "score": 0, "last_activity_date": 1421167799, "creation_date": 1421166363, "last_edit_date": 1421166680, "question_id": 27926789, "link": "https://stackoverflow.com/questions/27926789/haskell-read-double-from-binary-file", "title": "Haskell: read [Double] from binary file", "body": "<p>I have a file with binary data (more precisely, it's a npy file = header data + raw binary data). This data ([0.1, 0.2, 0.3, 0.4] for tests) can be successfully readed by this code in C++ (skipped):</p>\n\n<pre><code>int word_size = 8;\ndouble *data;\narr = new char[size*word_size];\nsize_t nread = fread(arr, word_size, size, file);\nif(nread != size)\n    *data = reinterpret_cast&lt;double *&gt;(arr);\n</code></pre>\n\n<p>I'm trying to implement this in Haskell:</p>\n\n<pre><code>data Header = Header {\n    {- other fields -}\n    npyData         :: [Double]\n    } deriving (Show)\n\ngetNpyData = do\n    empty &lt;- isEmpty\n    if empty\n        then return []\n        else do \n            v &lt;- getWord64be\n            rest &lt;- getNpyData\n            return (fromIntegral v : rest)\n\nnpyHeader :: Get Header\nnpyHeader = do\n    {-other fields -}\n    npyData &lt;- getNpyData\n    return Header {\n        {- other fields -}\n        npyData=npyData\n    }\n\n\nmain = do\n    file &lt;- openBinaryFile \"test.npy\" ReadMode\n    input &lt;- BL.hGetContents file\n    let npyParsedData = runGet npyHeader input\n    print $ npyData npyParsedData\n</code></pre>\n\n<p>This gives to me incorrect results for <code>npyData</code> (other variables are ok):</p>\n\n<pre><code>[1.1140104038263667e19,1.114010403826367e19,3.6893488147419515e18,1.1140104038263675e19]\n</code></pre>\n\n<p>Can anybody tell me, what is wrong in this code?</p>\n"}, {"tags": ["list", "variables", "haskell", "tree"], "comments": [{"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 3, "creation_date": 1421166398, "post_id": 27926773, "comment_id": 44250594, "body": "<code>(a, b)</code> can be thought of as one value, actually. And the answer is, I think, <i>no</i>, or at least <i>no, unless</i> you&#39;re fine with using SYB."}, {"owner": {"reputation": 31301, "user_id": 1598537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c214754fba6f3a238a93af85a0ab4f58?s=128&d=identicon&r=PG", "display_name": "AndrewC", "link": "https://stackoverflow.com/users/1598537/andrewc"}, "edited": false, "score": 0, "creation_date": 1421167974, "post_id": 27926773, "comment_id": 44251705, "body": "As a side issue, you have more syntax than you need. you could do the equivalent structure <code>List a b = Leaf a b | Node a (List a b)</code> and then define the two patterns as <code>top (Leaf a _) = a</code> and <code>top (Node a _) = a</code>."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1421175118, "post_id": 27926773, "comment_id": 44255779, "body": "The word &#39;Variable&#39; is a curse word in Haskell-Land. The word is <i>datatype</i>, not &#39;datavariable&#39;."}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 3, "last_activity_date": 1421251886, "last_edit_date": 1421251886, "creation_date": 1421172462, "answer_id": 27928617, "question_id": 27926773, "link": "https://stackoverflow.com/questions/27926773/haskell-data-variable/27928617#27928617", "title": "Haskell data variable", "body": "<p>If you're comfortable with it, you can refactor your type as:</p>\n\n<pre><code>data List a b = L (a, Either b (List a b)) deriving Show\n</code></pre>\n\n<p>Then,</p>\n\n<pre><code>func :: List a b -&gt; a\nfunc (L (a,_)) = a\n</code></pre>\n\n<p>Previous values like</p>\n\n<pre><code>Leaf (a, b)\nNode (a, list)\n</code></pre>\n\n<p>are now written as</p>\n\n<pre><code>L (a, Left b)\nL (a, Right list)\n</code></pre>\n\n<p>Depending on your code, this might be more convenient to use. </p>\n\n<p>However, keep in mind that if you need to access the second component of the pair, you need to pattern match anyway. It is likely that your current datatype is more convenient, overall, than this alternative.</p>\n"}, {"tags": [], "owner": {"reputation": 1216, "user_id": 2213309, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/1V1xj.jpg?s=128&g=1", "display_name": "flappix", "link": "https://stackoverflow.com/users/2213309/flappix"}, "is_accepted": false, "score": 0, "last_activity_date": 1421247059, "creation_date": 1421247059, "answer_id": 27945689, "question_id": 27926773, "link": "https://stackoverflow.com/questions/27926773/haskell-data-variable/27945689#27945689", "title": "Haskell data variable", "body": "<p>I \"solved\" it by adding a help function returning the first value</p>\n\n<pre><code>gf (Leaf (a, b)) = a\ngf (Node (a, b)) = a\n</code></pre>\n\n<p>So I can always use this function</p>\n\n<pre><code>func x = gf x\n</code></pre>\n\n<p>There are still two pattern matches but in case of more complex functions expecting more than one argument it is useful to avoid a lot of pattern matches</p>\n\n<p>i.e</p>\n\n<pre><code>addValues (Leaf (a, b)) (Leaf (c, d)) (Leaf (e, f)) = a + c + e \naddValues (Leaf (a, b)) (Leaf (c, d)) (Node (e, f)) = a + c + e \naddValues (Leaf (a, b)) (Node (c, d)) (Leaf (e, f)) = a + c + e \naddValues (Leaf (a, b)) (Node (c, d)) (Node (e, f)) = a + c + e \naddValues (Node (a, b)) (Leaf (c, d)) (Leaf (e, f)) = a + c + e \naddValues (Node (a, b)) (Leaf (c, d)) (Node (e, f)) = a + c + e \naddValues (Node (a, b)) (Node (c, d)) (Leaf (e, f)) = a + c + e \naddValues (Node (a, b)) (Node (c, d)) (Node (e, f)) = a + c + e\n</code></pre>\n\n<p>can now be written as</p>\n\n<pre><code>addValues (a, b, c) = (gf a) + (gf b) + (gf c)\n</code></pre>\n"}], "owner": {"reputation": 1216, "user_id": 2213309, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/1V1xj.jpg?s=128&g=1", "display_name": "flappix", "link": "https://stackoverflow.com/users/2213309/flappix"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 126, "favorite_count": 0, "accepted_answer_id": 27928617, "answer_count": 2, "score": 0, "last_activity_date": 1448187602, "creation_date": 1421166307, "last_edit_date": 1448187602, "question_id": 27926773, "link": "https://stackoverflow.com/questions/27926773/haskell-data-variable", "title": "Haskell data variable", "body": "<p>I have this simple list structure where every leaf holds two values (a and b) and every node holds one value (a)</p>\n\n<pre><code>data List a b = Leaf (a, b) | Node (a, (List a b)) deriving Show\n</code></pre>\n\n<p>And I have this function just returning the value of a node or the first value of a leaf</p>\n\n<pre><code>func (Leaf (a, b)) = a\nfunc (Node (a, c)) = a\n</code></pre>\n\n<p>Is there a way avoid one of these pattern matches? In fact I'm working on a ternary-tree and functions which have more than one argument, so I have a lot of pattern matches which are all doing the same thing.</p>\n\n<p>I thought about something like this</p>\n\n<pre><code>func (var (a, b)) = a\n</code></pre>\n\n<p>where var can be a leaf or a node, but this does not work.</p>\n"}, {"tags": ["haskell", "monads"], "comments": [{"owner": {"reputation": 134362, "user_id": 83805, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/68c3dd15d6cd5d99a63113843d7e1c1b?s=128&d=identicon&r=PG", "display_name": "Don Stewart", "link": "https://stackoverflow.com/users/83805/don-stewart"}, "edited": false, "score": 0, "creation_date": 1421164488, "post_id": 27925814, "comment_id": 44249288, "body": "What do you mean by &quot;non-pure functions may be programmed imperatively&quot;?"}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "reply_to_user": {"reputation": 134362, "user_id": 83805, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/68c3dd15d6cd5d99a63113843d7e1c1b?s=128&d=identicon&r=PG", "display_name": "Don Stewart", "link": "https://stackoverflow.com/users/83805/don-stewart"}, "edited": false, "score": 0, "creation_date": 1421164598, "post_id": 27925814, "comment_id": 44249370, "body": "@DonStewart 99% he means <code>do</code> notation."}, {"owner": {"reputation": 17898, "user_id": 562440, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/4nedy.jpg?s=128&g=1", "display_name": "Raffael", "link": "https://stackoverflow.com/users/562440/raffael"}, "reply_to_user": {"reputation": 134362, "user_id": 83805, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/68c3dd15d6cd5d99a63113843d7e1c1b?s=128&d=identicon&r=PG", "display_name": "Don Stewart", "link": "https://stackoverflow.com/users/83805/don-stewart"}, "edited": false, "score": 0, "creation_date": 1421164600, "post_id": 27925814, "comment_id": 44249373, "body": "@DonStewart: that within the procedure an expression or statement may be individually evaluated, its value stored in a variable and the variable used in a following expression or statement - something like that"}, {"owner": {"reputation": 17898, "user_id": 562440, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/4nedy.jpg?s=128&g=1", "display_name": "Raffael", "link": "https://stackoverflow.com/users/562440/raffael"}, "reply_to_user": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 0, "creation_date": 1421164630, "post_id": 27925814, "comment_id": 44249392, "body": "@BartekBanachewicz: that&#39;s pretty much what I am referring to"}, {"owner": {"reputation": 243, "user_id": 13679816, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7b02acae66c6a347786eb93e8cbead85?s=128&d=identicon&r=PG", "display_name": "atravers", "link": "https://stackoverflow.com/users/13679816/atravers"}, "edited": false, "score": 0, "creation_date": 1599950360, "post_id": 27925814, "comment_id": 112935483, "body": "Possibly related: <a href=\"https://stackoverflow.com/questions/32569852/how-does-the-monad-based-io-design-of-haskell-contrasts-with-one-based-on-tagg\" title=\"how does the monad based io design of haskell contrasts with one based on tagg\">stackoverflow.com/questions/32569852/&hellip;</a> ."}], "answers": [{"comments": [{"owner": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 7, "creation_date": 1421164215, "post_id": 27925892, "comment_id": 44249072, "body": "I just want to emphasize the &quot;NO&quot; even more.  Monads allow you to do a lot more than just adding impure functions would."}, {"owner": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 0, "creation_date": 1421164498, "post_id": 27925892, "comment_id": 44249294, "body": "Yes, I just wanted to give you some extra support. :)"}, {"owner": {"reputation": 17898, "user_id": 562440, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/4nedy.jpg?s=128&g=1", "display_name": "Raffael", "link": "https://stackoverflow.com/users/562440/raffael"}, "edited": false, "score": 0, "creation_date": 1421165041, "post_id": 27925892, "comment_id": 44249647, "body": "I guess I just have to gain more in depth experience with Monads to understand your answer - nonetheless maybe there is a simplified, yet concrete example to clarify your point? The maybe Monad as I understood it is mostly just an abbreviation for a if-expression and state is the result of non-purity - as far as I understand."}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "reply_to_user": {"reputation": 17898, "user_id": 562440, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/4nedy.jpg?s=128&g=1", "display_name": "Raffael", "link": "https://stackoverflow.com/users/562440/raffael"}, "edited": false, "score": 0, "creation_date": 1421165330, "post_id": 27925892, "comment_id": 44249845, "body": "@Raffael I could give you an example that uses one of the pure instances, but it would be essentially copying it from its manual. I can point you to reading more directly, though. <a href=\"http://adit.io/posts/2013-06-10-three-useful-monads.html\" rel=\"nofollow noreferrer\"><i>Three Useful Monads</i></a> explains Reader, Writer and State. <a href=\"http://learnyouahaskell.com/a-fistful-of-monads\" rel=\"nofollow noreferrer\"><i>A Fistful of Monads</i></a> from LYAH shows basic principles and explores the use of <code>Maybe</code>. After reading and understanding those, you should see that your original &quot;pure/impure&quot; distinction was very narrow."}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "reply_to_user": {"reputation": 17898, "user_id": 562440, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/4nedy.jpg?s=128&g=1", "display_name": "Raffael", "link": "https://stackoverflow.com/users/562440/raffael"}, "edited": false, "score": 1, "creation_date": 1421165592, "post_id": 27925892, "comment_id": 44250034, "body": "@Raffael <code>State</code> isn&#39;t impure (it&#39;s mostly a wrapper for <code>(a -&gt; a)</code> functions), and <code>Maybe</code> is indeed a bit similar to an &quot;if&quot;-chain, but in a much nicer form in its monadic appearance. Again, refer to the articles for more detailed-explanations."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1421167006, "post_id": 27925892, "comment_id": 44251077, "body": "Adding to this, it makes entirely sure that actions occur in in the order intended."}, {"owner": {"reputation": 4587, "user_id": 815409, "user_type": "registered", "accept_rate": 76, "profile_image": "https://www.gravatar.com/avatar/799175f170f7352129f1ebf636be91d7?s=128&d=identicon&r=PG", "display_name": "Giorgio", "link": "https://stackoverflow.com/users/815409/giorgio"}, "edited": false, "score": 0, "creation_date": 1421191458, "post_id": 27925892, "comment_id": 44264335, "body": "@BartekBanachewicz: Good that you pointed out that state isn&#39;t impure per se. The line of reasoning is often: state requires side effects which are impure (non referentially transparent), i.e. state ==&gt; impure. On the other hand, whether you loose referential transparency depends on how you model state."}], "tags": [], "owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "is_accepted": true, "score": 16, "last_activity_date": 1421164269, "last_edit_date": 1592644375, "creation_date": 1421163786, "answer_id": 27925892, "question_id": 27925814, "link": "https://stackoverflow.com/questions/27925814/arent-monads-essentially-just-conceptual-sugar/27925892#27925892", "title": "Aren&#39;t Monads essentially just &quot;conceptual&quot; sugar?", "body": "<h1>No.</h1>\n<p>Monads have nothing to do with purity or impurity in principle. It just so happens that <code>IO</code> models impure code nicely, but <code>Monad</code> class can be used perfectly right for instances like <code>State</code> or <code>Maybe</code>, which are absolutely pure.</p>\n<p>Monads also  allow expressing complex <em>context hierarchies</em> (as I choose to call them) in a very explicit way. &quot;pure/impure&quot; isn't the only division you might want to make. Consider <code>authorized</code>/<code>unauthorized</code>, for example. The list of possible uses goes on and on... I'd encourage you to look at other commonly used instances, like <code>ST</code>, <code>STM</code>, <code>RWS</code>, &quot;restricted IO&quot; and friends to get a better understanding of the possibilities.</p>\n<p>Soon enough you'll start making your own monads, tailored to the problem at hand.</p>\n"}, {"tags": [], "owner": {"reputation": 7803, "user_id": 190744, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ia1FC.jpg?s=128&g=1", "display_name": "Stephen Diehl", "link": "https://stackoverflow.com/users/190744/stephen-diehl"}, "is_accepted": false, "score": 11, "last_activity_date": 1421164263, "creation_date": 1421164263, "answer_id": 27926066, "question_id": 27925814, "link": "https://stackoverflow.com/questions/27925814/arent-monads-essentially-just-conceptual-sugar/27926066#27926066", "title": "Aren&#39;t Monads essentially just &quot;conceptual&quot; sugar?", "body": "<blockquote>\n  <p>B/c as I came to understand Monads - this is exactly their purpose.</p>\n</blockquote>\n\n<p>Monads in their full generality have nothing to do with purity/impurity or imperative sequencing. So <strong>no</strong>, monads are most certainly not conceptual sugar for effect encapsulation if I understood your question.</p>\n\n<p>Consider that overwhelmingly most of the monads in the Prelude: <code>List</code>, <code>Reader</code>, <code>State</code>, <code>Cont</code>, <code>Either</code>, <code>(-&gt;)</code> have nothing to do with effects or IO. It's a very common misconception to assume that IO is the \"canonical\" monad, while in fact it's really a degenerate case.</p>\n"}, {"comments": [{"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 0, "creation_date": 1421166020, "post_id": 27926588, "comment_id": 44250320, "body": "In C++, hopefully we&#39;ll see a much more elegant <code>std::optional</code>. Nullability of pointers in C++, C and Java has always been a source of stupid errors."}, {"owner": {"reputation": 4328, "user_id": 1473927, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AO6Ui.jpg?s=128&g=1", "display_name": "Jonathan Cast", "link": "https://stackoverflow.com/users/1473927/jonathan-cast"}, "reply_to_user": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 1, "creation_date": 1421167394, "post_id": 27926588, "comment_id": 44251345, "body": "@BartekBanachewicz 30 seconds googling suggests <code>std::optional</code> isn&#39;t actually standardized yet (and that it lacks equivalents of <code>liftM</code> and <code>&gt;&gt;=</code>, which would probably be good additions)."}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 0, "creation_date": 1421167469, "post_id": 27926588, "comment_id": 44251391, "body": "Oh, <code>optional</code> isn&#39;t going to be a Monad; I was just referring to your pointer remark."}, {"owner": {"reputation": 4328, "user_id": 1473927, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AO6Ui.jpg?s=128&g=1", "display_name": "Jonathan Cast", "link": "https://stackoverflow.com/users/1473927/jonathan-cast"}, "reply_to_user": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 0, "creation_date": 1421168180, "post_id": 27926588, "comment_id": 44251825, "body": "I know, I&#39;m just trying to make sure I understand myself before I try clarifying my answer."}], "tags": [], "owner": {"reputation": 4328, "user_id": 1473927, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AO6Ui.jpg?s=128&g=1", "display_name": "Jonathan Cast", "link": "https://stackoverflow.com/users/1473927/jonathan-cast"}, "is_accepted": false, "score": 4, "last_activity_date": 1421165767, "creation_date": 1421165767, "answer_id": 27926588, "question_id": 27925814, "link": "https://stackoverflow.com/questions/27925814/arent-monads-essentially-just-conceptual-sugar/27926588#27926588", "title": "Aren&#39;t Monads essentially just &quot;conceptual&quot; sugar?", "body": "<blockquote>\n  <p>B/c as I came to understand Monads - this is exactly their purpose.</p>\n</blockquote>\n\n<p>This: <a href=\"http://homepages.inf.ed.ac.uk/wadler/topics/monads.html#monads\" rel=\"nofollow\">http://homepages.inf.ed.ac.uk/wadler/topics/monads.html#monads</a> was the first paper on monads in Haskell:</p>\n\n<blockquote>\n  <p>Category theorists invented monads in the 1960's to concisely express certain aspects of universal algebra.</p>\n</blockquote>\n\n<p>So right away you can see that monads have nothing to do with \"pure\" / \"impure\" computations.  The most common monad (in the world!) is <code>Maybe</code>:</p>\n\n<pre><code>data Maybe a\n  = Nothing\n  | Just a\n\ninstance Monad Maybe where\n    return = Just\n    Nothing &gt;&gt;= f = Nothing\n    Just x &gt;&gt;= f = f x\n</code></pre>\n\n<p>The monad is the four-tuple <code>(Maybe, liftM, return, join)</code>, where:</p>\n\n<pre><code>liftM :: (a -&gt; b) -&gt; Maybe a -&gt; Maybe b\nliftM f mb = mb &gt;&gt;= return . f\n\njoin :: Maybe (Maybe a) -&gt; Maybe a\njoin Nothing = Nothing\njoin (Just mb) = mb\n</code></pre>\n\n<p>Note that <code>liftM</code> takes a <em>non-<code>Maybe</code></em> function (not pure!) and applies it to a <code>Maybe</code>, while <code>join</code> takes a two-level <code>Maybe</code> and simplifies it to a single layer (so <code>Just</code> in the result comes from having two layers of <code>Just</code>:</p>\n\n<pre><code>join (Just (Just x)) = Just x\n</code></pre>\n\n<p>while <code>Nothing</code> in the result can come from a <code>Nothing</code> at either layer:</p>\n\n<pre><code>join Nothing = Nothing\njoin (Just Nothing) = Nothing\n</code></pre>\n\n<p>).  We can translate these terms as follows:</p>\n\n<ul>\n<li><code>Maybe</code>: a value that may or may not be present.</li>\n<li><code>liftM</code>: apply this function to the value if present, otherwise do nothing.</li>\n<li><code>return</code>: take this value that is present and inject it into the extra structure of a <code>Maybe</code>.</li>\n<li><code>join</code>: take a (value that may or may not be present) that may or may not be present and erase the distinction between the two layers of 'may or may not be present'.</li>\n</ul>\n\n<p>Now, <code>Maybe</code> is a perfectly suitable data type.  In scripting languages, it's expressed just by using <code>undef</code> or the equivalent to express <code>Nothing</code>, and representing <code>Just x</code> the same way as <code>x</code>.  In C/C++, it's expressed by using a pointer type <code>t*</code>, and allowing the pointer to be <code>NULL</code>.  In Scala, there's an explicit container type: <a href=\"http://www.scala-lang.org/api/current/index.html#scala.Option\" rel=\"nofollow\">http://www.scala-lang.org/api/current/index.html#scala.Option</a> .  So you can't say \"oh, that's just exceptions\" because languages with exceptions still want to be able to express 'no value here' without throwing an exception, and then apply functions if the value is there (which is why Scala's Option type has a <code>foreach</code> method).  But 'apply this function if the value is there' is precisely what <code>Maybe</code>'s <code>&gt;&gt;=</code> does!  So it's a very useful operation.</p>\n\n<p>You'll notice that C and the scripting languages don't generally allow the distinction between <code>Nothing</code> and <code>Just Nothing</code> to be made --- a value is either present or not.  In a functional language --- like Haskell --- it's interesting to allow both versions, which is why we need <code>join</code> to erase that distinction when we're done with it.  (And, mathematically, it's nicer to define <code>&gt;&gt;=</code> in terms of <code>liftM</code> and <code>join</code> than the other way around).</p>\n\n<p>Incidentally, to clear up the common mis-conception about Haskell and IO: GHC's implementation of IO wrappers up the side-effectfulness of GHC's implementation of I/O.  Even that is a terrible design decision of GHC --- imperative (which is different than impure!) I/O can be modeled monadically without impurity at any level of the system.  You don't need side effects (at any layer of the system) to do I/O!</p>\n"}], "owner": {"reputation": 17898, "user_id": 562440, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/4nedy.jpg?s=128&g=1", "display_name": "Raffael", "link": "https://stackoverflow.com/users/562440/raffael"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 272, "favorite_count": 2, "accepted_answer_id": 27925892, "answer_count": 3, "score": 4, "last_activity_date": 1421165767, "creation_date": 1421163537, "question_id": 27925814, "link": "https://stackoverflow.com/questions/27925814/arent-monads-essentially-just-conceptual-sugar", "title": "Aren&#39;t Monads essentially just &quot;conceptual&quot; sugar?", "body": "<p>Let's assume we allow <strong>two</strong> types of functions in Haskell:</p>\n\n<ul>\n<li>strictly pure (as usual)</li>\n<li>potentially non-pure (procedures)</li>\n</ul>\n\n<p>The distinction would be made f.x. by declaring that a dot (\".\") as first letter of a function name declares it as a non-pure procedure.</p>\n\n<p>And further we would set the rules:</p>\n\n<ul>\n<li>pure functions may be called by pure and non-pure functions</li>\n<li>non-pure functions may only be called by non-pure functions</li>\n<li><strong>and</strong>: non-pure functions may be programmed imperatively</li>\n</ul>\n\n<p>With this syntactical sugar and specifications at hand - would there still be a need for Monads? Is there anything Monads could do which above rule set would not allow?</p>\n\n<p>B/c as I came to understand Monads - this is exactly their purpose. Just that very smart people managed to achieve this purely by means of functional methods with a cathegory theoretical tool set at hand.</p>\n"}, {"tags": ["haskell", "io", "getline", "string", "monoids"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 2, "creation_date": 1421163254, "post_id": 27925558, "comment_id": 44248369, "body": "I believe that <code>sequence</code> for the <code>IO</code> monad is not lazy enough for this to work, it will try to evaluate the entire list of <code>IO</code> actions before returning the result."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1421173192, "post_id": 27925558, "comment_id": 44254681, "body": "BTW, you can avoid the intermediate infinite list if you simply use <code>getLine&#39; = getLine &gt;&gt;= \\s -&gt; if s&#47;=&quot;&quot; then return s else getLine&#39;</code>. Still, the monoid approach is interesting."}], "answers": [{"comments": [{"owner": {"reputation": 387, "user_id": 671374, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/672b6acfa8efc76001a0baada0cb23fe?s=128&d=identicon&r=PG", "display_name": "Sparshong", "link": "https://stackoverflow.com/users/671374/sparshong"}, "edited": false, "score": 0, "creation_date": 1421314247, "post_id": 27928580, "comment_id": 44314231, "body": "Thank you for your very detailed answer. It seems sequence is not lazy for the IO Monad, which makes sense as it is important to guarantee ordering of IO. I still have much to learn in Monads/Monoid!"}], "tags": [], "owner": {"reputation": 31301, "user_id": 1598537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c214754fba6f3a238a93af85a0ab4f58?s=128&d=identicon&r=PG", "display_name": "AndrewC", "link": "https://stackoverflow.com/users/1598537/andrewc"}, "is_accepted": true, "score": 1, "last_activity_date": 1421172303, "last_edit_date": 1495540465, "creation_date": 1421172303, "answer_id": 27928580, "question_id": 27925558, "link": "https://stackoverflow.com/questions/27925558/reading-lines-in-haskell-until-non-empty-string/27928580#27928580", "title": "Reading lines in haskell until non-empty string", "body": "<p>Your thinking is excellent. Monoid is a great structure for this, but sadly as bheklilr points out, <code>sequence</code> is going to perform all the IO regardless.</p>\n\n<h2>Theory vs practicality with a nod to Alternative</h2>\n\n<p>It would be nice to make <code>instance Monoid (IO String)</code> but we'd have to wrap it in a <code>newtype</code> to get it to compile, but then we'd lose some interoperability with other IO, so let's just write the functions without the instance.</p>\n\n<p>I like to use <code>&lt;&gt;</code> instead of <code>mappend</code>, but it's taken, and <code>&lt;|&gt;</code> is also taken for <code>Alternative</code>, which is like a Monoid structure for Applicative functors, and you should certainly look into it. I wrote a bit about Alternative in <a href=\"https://stackoverflow.com/a/13174738/1598537\">this answer</a>.</p>\n\n<p>Anyway, let's use <code>&lt;||&gt;</code> and copy the fixity of <code>&lt;&gt;</code>:</p>\n\n<pre><code>infixr 6 &lt;||&gt;\n</code></pre>\n\n<h2>Making a Monoid of a Monad of Eq Monoids</h2>\n\n<p>We can make a monoid out of <code>IO String</code> because we can check the value returned to see if it's <code>\"\"</code> and then do the next action if not. That's equivalent to using <code>==</code> to check whether we have <code>mempty</code>, so we can generalise to <code>IO s</code> as long as <code>s</code> is a Monoid with an Eq instance. Secondly, we don't need it to be <code>IO</code>, we could use any Monad:</p>\n\n<pre><code>(&lt;||&gt;) :: (Monoid s, Eq s, Monad m) =&gt; m s -&gt; m s -&gt; m s\nm &lt;||&gt; n = do\n    x &lt;- m\n    if x == mempty then n else return x\n</code></pre>\n\n<p>Notice that that's lazy about computing <code>n</code> - it doesn't bother if we're happy with the output of <code>m</code>. We could then define <code>main = getLine &lt;||&gt; getLine &lt;||&gt; getLine &gt;&gt;= print</code> to give the user up to 3 chances of entering something non-blank for us to print.</p>\n\n<h2>Identity and list concatenation</h2>\n\n<p>Mathematically that's a monoid with identity</p>\n\n<pre><code>msempty :: (Monoid s, Monad m) =&gt; m s\nmsempty = return mempty\n</code></pre>\n\n<p>Let's also define the equivalent of <code>mconcat :: Monoid s =&gt; [s] -&gt; s</code>:</p>\n\n<pre><code>msconcat :: (Monoid s, Eq s, Monad m) =&gt; [m s] -&gt; m s\nmsconcat = foldr (&lt;||&gt;) (return mempty)\n</code></pre>\n\n<p>Which lets us rewrite as <code>main = msconcat [getLine,getLine,getLine] &gt;&gt;= print</code></p>\n\n<h2>Lazily combining infinitely many monadic monoids</h2>\n\n<p>The real test of laziness here is infinite lists of actions:</p>\n\n<pre><code>main = msconcat (repeat getLine) &gt;&gt;= print\n</code></pre>\n\n<p>That works fine, and terminates within a finite time if the user ever does something other than enter nothing. Hooray!</p>\n"}], "owner": {"reputation": 387, "user_id": 671374, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/672b6acfa8efc76001a0baada0cb23fe?s=128&d=identicon&r=PG", "display_name": "Sparshong", "link": "https://stackoverflow.com/users/671374/sparshong"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1600, "favorite_count": 1, "accepted_answer_id": 27928580, "answer_count": 1, "score": 1, "last_activity_date": 1421172303, "creation_date": 1421162738, "question_id": 27925558, "link": "https://stackoverflow.com/questions/27925558/reading-lines-in-haskell-until-non-empty-string", "title": "Reading lines in haskell until non-empty string", "body": "<p>I am trying to read lines from input in Haskell until I find a non-empty line.\nActually, I know how to do it simply using the following code:</p>\n\n<pre><code>notEmpty [] = return \"\"\nnotEmpty (l:xs) = do\n  s &lt;- l\n  if s /= \"\" then return s\n             else notEmpty xs\n\ngetLine' = notEmpty $ repeat getLine\n</code></pre>\n\n<p>Test (I typed two empty lines then 'foo'):</p>\n\n<pre><code>*&gt; getLine'\n\n\nfoo\n\"foo\"\n</code></pre>\n\n<p>However, for the sake of exercise, I am trying to achieve this using Monoids (<a href=\"http://learnyouahaskell.com/functors-applicative-functors-and-monoids#monoids\" rel=\"nofollow\">http://learnyouahaskell.com/functors-applicative-functors-and-monoids#monoids</a>), trying to mimick the First/getFirst Monoid (see link).</p>\n\n<p>I first created a Monoid on lists that fits my needs (concatenation only keeps the first argument):</p>\n\n<pre><code>newtype FirstSt a = FirstSt { getFirstSt :: [a] }\n    deriving (Eq, Ord, Read, Show)\n\ninstance Monoid (FirstSt a) where\n    mempty = FirstSt []\n    FirstSt [] `mappend` x = x\n    FirstSt s  `mappend` _ = FirstSt s\n</code></pre>\n\n<p>Which works well on a infinite list of strings (thanks to laziness):</p>\n\n<pre><code>&gt; getFirstSt . mconcat . map FirstSt $ [\"\", \"\", \"foo\", \"\", \"bar\"] ++ repeat \"\"\n\"foo\"\n</code></pre>\n\n<p>However, I can't get it to work in the IO Monad. I tried the following:</p>\n\n<pre><code>ioFirstSt = (=&lt;&lt;) (return . FirstSt)\ngetLine'' = getFirstSt &lt;$&gt; mconcat &lt;$&gt; (sequence . map ioFirstSt $ repeat getLine)\n</code></pre>\n\n<p>Which has the correct type:</p>\n\n<pre><code>*&gt; :t getLine''\ngetLine'' :: IO [Char]\n</code></pre>\n\n<p>However, Haskell keeps wanting to evaluate the whole list before giving it to <code>mconcat</code>...\nIn there a way to keep laziness while navigating in the Monoid/Monad scope?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1421162837, "post_id": 27925545, "comment_id": 44248075, "body": "Why would it be <code>[4, 2, 1.3333333333, 1]</code>?"}, {"owner": {"reputation": 2067, "user_id": 1708960, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/39280172449cbd6609c6ca41dcf73d5a?s=128&d=identicon&r=PG&f=1", "display_name": "rel1x", "link": "https://stackoverflow.com/users/1708960/rel1x"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1421162920, "post_id": 27925545, "comment_id": 44248145, "body": "[1,2,3,4] =&gt; 4/1, 4/2, 4/3, 4/4"}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 0, "creation_date": 1421163046, "post_id": 27925545, "comment_id": 44248231, "body": "Uhm, <code>f n = [1..n]</code>. Also learn how to use <code>$</code> and <code>.</code>, we&#39;re not writing Lisp here."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1421163159, "post_id": 27925545, "comment_id": 44248307, "body": "@pertpoert: obviously, but why would it be <code>[4&#47;1, 4&#47;2, 4&#47;3, 4&#47;4]</code>?"}, {"owner": {"reputation": 2067, "user_id": 1708960, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/39280172449cbd6609c6ca41dcf73d5a?s=128&d=identicon&r=PG&f=1", "display_name": "rel1x", "link": "https://stackoverflow.com/users/1708960/rel1x"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1421163229, "post_id": 27925545, "comment_id": 44248352, "body": "@leftaroundabout <code>f n = take n (iterate (\\x-&gt;(4&#47;(x+1))) 1)</code>"}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 1, "creation_date": 1421163442, "post_id": 27925545, "comment_id": 44248521, "body": "<code>f n = map (4&#47;) [1..n]</code> ?"}, {"owner": {"reputation": 10281, "user_id": 1033448, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d64fdbd293e80580b1c702998cb6e740?s=128&d=identicon&r=PG", "display_name": "Anton Guryanov", "link": "https://stackoverflow.com/users/1033448/anton-guryanov"}, "edited": false, "score": 0, "creation_date": 1421163444, "post_id": 27925545, "comment_id": 44248523, "body": "Look closely at what <code>iterate</code> does. You need to map a <code>[1..n]</code> list, no need to use <code>iterate</code>."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1421163492, "post_id": 27925545, "comment_id": 44248553, "body": "@pertpoert Are you sure you wouldn&#39;t instead want <code>map (\\x -&gt; 4 &#47; (x + 1)) [1..]</code> instead?  <code>iterate</code> uses the last result as input to the function and repeatedly applies it.  <code>take 5 $ iterate (+1) 1 == [1, 2, 3, 4, 5]</code>, for example."}], "answers": [{"comments": [{"owner": {"reputation": 62252, "user_id": 1435869, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TrEd9.jpg?s=128&g=1", "display_name": "karakfa", "link": "https://stackoverflow.com/users/1435869/karakfa"}, "reply_to_user": {"reputation": 2067, "user_id": 1708960, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/39280172449cbd6609c6ca41dcf73d5a?s=128&d=identicon&r=PG&f=1", "display_name": "rel1x", "link": "https://stackoverflow.com/users/1708960/rel1x"}, "edited": false, "score": 2, "creation_date": 1421169309, "post_id": 27927258, "comment_id": 44252472, "body": "that will be a different function.  However, it&#39;s the same issue: mixing different numerical types.  You have to change it to <code>f n = sum $ map (fromIntegral n&#47;) $ map fromIntegral [1..n]</code>"}], "tags": [], "owner": {"reputation": 62252, "user_id": 1435869, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TrEd9.jpg?s=128&g=1", "display_name": "karakfa", "link": "https://stackoverflow.com/users/1435869/karakfa"}, "is_accepted": true, "score": 2, "last_activity_date": 1421167735, "creation_date": 1421167735, "answer_id": 27927258, "question_id": 27925545, "link": "https://stackoverflow.com/questions/27925545/mistake-in-iterate-haskell/27927258#27927258", "title": "Mistake in iterate, Haskell", "body": "<p>Define f as </p>\n\n<pre><code>   f :: Int -&gt; Double\n   f n = sum $ map (4/) $ map fromIntegral [1..n]\n</code></pre>\n\n<p>you have to watch for mixing numerical types in computations.  Now your function should work</p>\n\n<pre><code>&gt; f $ product (map read $ words \"23 4 32\" :: [Int])\n34.259639888367765\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 4328, "user_id": 1473927, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/AO6Ui.jpg?s=128&g=1", "display_name": "Jonathan Cast", "link": "https://stackoverflow.com/users/1473927/jonathan-cast"}, "is_accepted": false, "score": 0, "last_activity_date": 1421170732, "creation_date": 1421170732, "answer_id": 27928137, "question_id": 27925545, "link": "https://stackoverflow.com/questions/27925545/mistake-in-iterate-haskell/27928137#27928137", "title": "Mistake in iterate, Haskell", "body": "<p>Try writing it in C:</p>\n\n<pre><code>f n = take n $ iterate (1+) 1\n</code></pre>\n\n<p>translates to</p>\n\n<pre><code>void\nf(int n) {\n    int i;\n    double t = 1;\n\n    for (i = 0; i &lt; n; i++) {\n        printf(\"%g\\n\", t);\n        t = 1 + t;\n    }\n}\n</code></pre>\n\n<p>So</p>\n\n<pre><code>f n = take n (iterate (\\x-&gt;(4/(x+1))) 1)\n</code></pre>\n\n<p>translates to</p>\n\n<pre><code>void\nf(int n) {\n    int i;\n    double t = 1;\n\n    for (i = 0; i &lt; n; i++) {\n        printf(\"%g\\n\", t);\n        t = 4 / (t + 1);\n    }\n}\n</code></pre>\n\n<p>which has the same effect.  You're doing the division <code>(4 /)</code> in between the <code>(1 +)</code> additions, which is why you're getting the wrong answer.  In C, you put <code>4 / t</code> in the output and <code>1 + t</code> when updating the temporary:</p>\n\n<pre><code>void\nf(int n) {\n    int i;\n    double t = 1;\n\n    for (i = 0; i &lt; n; i++) {\n        printf(\"%g\\n\", t / 4);\n        t = t + 1;\n    }\n}\n</code></pre>\n\n<p>and the Haskell equivalent of that is using two list functions:</p>\n\n<pre><code>f n = take n $ map (4/) $ iterate (1+) 1\n</code></pre>\n"}], "owner": {"reputation": 2067, "user_id": 1708960, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/39280172449cbd6609c6ca41dcf73d5a?s=128&d=identicon&r=PG&f=1", "display_name": "rel1x", "link": "https://stackoverflow.com/users/1708960/rel1x"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 78, "favorite_count": 0, "accepted_answer_id": 27927258, "answer_count": 2, "score": 0, "last_activity_date": 1421170732, "creation_date": 1421162711, "last_edit_date": 1421167302, "question_id": 27925545, "link": "https://stackoverflow.com/questions/27925545/mistake-in-iterate-haskell", "title": "Mistake in iterate, Haskell", "body": "<p>My program, where <code>n = 4</code>:</p>\n\n<pre><code>f n = take n (iterate (1+) 1)\n\nmain = do\n    n &lt;- getLine\n    print(f (product(map read $ words n :: [Int])))\n</code></pre>\n\n<p>if <code>f n = take n (iterate (1+) 1)</code>  my answer is <code>[1,2,3,4]</code>. If each element in list divides on 4 answer is <code>[4, 2, 1.3333333333, 1]</code>.</p>\n\n<p>I modify code <code>f n = take n (iterate (\\x-&gt;(4/(x+1))) 1)</code> but now my answer is wrong: it's <code>[1.0,2.0,1.3333333333333333,1.7142857142857144]</code>, not <code>[4, 2, 1.3333333333, 1]</code>. </p>\n\n<p>Where is my mistake?</p>\n"}, {"tags": ["haskell", "polymorphism", "dependent-type", "data-kinds", "type-kinds"], "comments": [{"owner": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "edited": false, "score": 7, "creation_date": 1421161027, "post_id": 27924699, "comment_id": 44246898, "body": "All of these types are uninhabited. So one question is why you&#39;d want to pattern match, and on what exactly?"}, {"owner": {"reputation": 3644, "user_id": 1465116, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1987d0ba73cb23a47a25dbfe0b36106e?s=128&d=identicon&r=PG", "display_name": "Athan Clark", "link": "https://stackoverflow.com/users/1465116/athan-clark"}, "reply_to_user": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "edited": false, "score": 0, "creation_date": 1421165305, "post_id": 27924699, "comment_id": 44249834, "body": "I think I misunderstood the goal &amp; capacities of the <code>singletons</code> library."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 2, "creation_date": 1421175783, "post_id": 27924699, "comment_id": 44256179, "body": "You can have types indexed by other types. The typical example is &quot;Vec&quot;: <code>data Vec n a where Nil :: Vec Z a; Cons :: a -&gt; Vec n a -&gt; Vec (S n) a</code>. In a dependently typed language, you could write <code>pure : (n : Nat) -&gt; a -&gt; Vec n a</code>, but this is impossible in haskell, so <code>singletons</code> will automatically generate a type like <code>data SNat (n :: Nat) where SZ :: SNat Z; SS :: SNat n -&gt; SNat (S n)</code>, so you can &quot;fake&quot; dependent types and write <code>pure :: SNat n -&gt; a -&gt; Vec n a</code>."}], "answers": [{"comments": [{"owner": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "edited": false, "score": 1, "creation_date": 1421188887, "post_id": 27925396, "comment_id": 44263325, "body": "Note that while it&#39;s fine that you seem to accept only things of kind <code>*</code> as &quot;types&quot;, there are many people who would call everything that has a kind a &quot;type&quot; (rather than a &quot;type-level entity&quot;)."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": true, "score": 4, "last_activity_date": 1421162246, "creation_date": 1421162246, "answer_id": 27925396, "question_id": 27924699, "link": "https://stackoverflow.com/questions/27924699/unusual-kinds-and-data-constructors/27925396#27925396", "title": "Unusual Kinds and Data Constructors", "body": "<p>There is no<sup>1</sup> such thing as \"types with kinds other than <code>*</code>\". Kind <code>*</code> is <em>the</em> kind for types, much like <code>Int</code> is <em>the</em> type for machine-sized numbers; other kinds  may contain stuff that resembles types or can be converted to types or is used to index types or whatever &ndash; but is not <em>types as such</em>, merely \"type level entities\".</p>\n\n<hr>\n\n<p><sup>1</sup><sub>As usually, I disregard unbox-kinds here.</sub></p>\n"}], "owner": {"reputation": 3644, "user_id": 1465116, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1987d0ba73cb23a47a25dbfe0b36106e?s=128&d=identicon&r=PG", "display_name": "Athan Clark", "link": "https://stackoverflow.com/users/1465116/athan-clark"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 90, "favorite_count": 1, "accepted_answer_id": 27925396, "answer_count": 1, "score": 4, "last_activity_date": 1421162246, "creation_date": 1421160170, "question_id": 27924699, "link": "https://stackoverflow.com/questions/27924699/unusual-kinds-and-data-constructors", "title": "Unusual Kinds and Data Constructors", "body": "<p>I don't know how I didn't notice this, but data constructors and function definitions alike can't use types with kinds other than <code>*</code> and it's variants <code>* -&gt; *</code> etc., due to <code>(-&gt;)</code>'s kind signature, even under <code>-XPolyKinds</code>.</p>\n\n<p>Here is the code I have tried:</p>\n\n<pre><code>{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE KindSignatures #-}\n\ndata Nat = S Nat | Z\n\ndata Foo where\n  Foo :: 'Z -&gt; Foo -- Fails\n\nfoo :: 'Z -&gt; Int -- Fails\nfoo _ = 1\n</code></pre>\n\n<p>The error I'm getting is the following:</p>\n\n<pre><code>&lt;interactive&gt;:8:12:\n    Expected a type, but \u2018Z\u2019 has kind \u2018Nat\u2019\n    In the type signature for \u2018foo\u2019: foo :: 'Z -&gt; Int\n</code></pre>\n\n<p>Why shouldn't we allow pattern matching with non-traditional kinds? </p>\n"}, {"tags": ["algorithm", "haskell", "sudoku"], "answers": [{"tags": [], "owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "is_accepted": false, "score": 1, "last_activity_date": 1421152060, "creation_date": 1421152060, "answer_id": 27922196, "question_id": 27921948, "link": "https://stackoverflow.com/questions/27921948/expand-function-of-a-sudoku-solver-in-haskell/27922196#27922196", "title": "Expand function of a sudoku solver in Haskell", "body": "<p>In case anybody else was wondering,</p>\n\n<pre><code>type Matrix a = [a]\ntype Choices  = [Value]\ntype Value    = Char\n</code></pre>\n\n<p>This is</p>\n\n<pre><code>expand m = [rows ++ ... ++ rows 2 | c &lt;- cs]\n</code></pre>\n\n<p>where <code>...</code> is</p>\n\n<pre><code>[ row1 ++ ([c] : row2) ]\n</code></pre>\n\n<p>The various local variables are defined in the <code>where</code> block. In other words, we're searching the input matrix and breaking it into a pair of results.</p>\n\n<p>If your question is \"what does this all <em>mean</em>?\", then frankly, I have no idea. This code isn't what I'd call \"intuitive\".</p>\n"}, {"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 6, "last_activity_date": 1421153804, "creation_date": 1421153804, "answer_id": 27922750, "question_id": 27921948, "link": "https://stackoverflow.com/questions/27921948/expand-function-of-a-sudoku-solver-in-haskell/27922750#27922750", "title": "Expand function of a sudoku solver in Haskell", "body": "<p>The code you link is nicely commented, fortunately. Quoting from above the function:</p>\n\n<blockquote>\n  <p>The function expand behaves in the same way as collapse, except that\n  it only collapses the first square with more than one choice:</p>\n</blockquote>\n\n<p>Intuitively, the function <code>expand</code> takes a sudoku and finds the first cell in which more than one choice are still possible. Then, it expands that choice, generating many sudokus each one having a particular choice. That is, it turns (roughly):</p>\n\n<pre><code>[ some data ... , [ data, ... [1,2,3] ... data ] , other data ]\n</code></pre>\n\n<p>into</p>\n\n<pre><code>[[ some data ... , [ data, ... [1] ... data ] , other data ]\n,[ some data ... , [ data, ... [2] ... data ] , other data ]\n,[ some data ... , [ data, ... [3] ... data ] , other data ]]\n</code></pre>\n\n<p>The key lines are these:</p>\n\n<pre><code> (rows1,row:rows2) = break (any (not . single)) m\n</code></pre>\n\n<p>Here, <code>row</code> is the first row in which there's a cell having a non-single choice. <code>rows1,rows2</code> are the before/after rows in the sudoku.</p>\n\n<pre><code> (row1,cs:row2)    = break (not . single) row\n</code></pre>\n\n<p>Here, <code>cs</code> is the first cell of <code>row</code> having a non-single choice. <code>row1,row2</code> are the left/right parts in that <code>row</code>.</p>\n"}], "owner": {"reputation": 745, "user_id": 4190098, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/228c3cd5541d852e48042ad49e5cb7e0?s=128&d=identicon&r=PG&f=1", "display_name": "Selphiron", "link": "https://stackoverflow.com/users/4190098/selphiron"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 220, "favorite_count": 1, "accepted_answer_id": 27922750, "answer_count": 2, "score": 2, "last_activity_date": 1421153804, "creation_date": 1421151201, "question_id": 27921948, "link": "https://stackoverflow.com/questions/27921948/expand-function-of-a-sudoku-solver-in-haskell", "title": "Expand function of a sudoku solver in Haskell", "body": "<p>I have difficulties to understand a part of <a href=\"http://www.cs.dartmouth.edu/~cs8/F2011/notes/11/Sudoku.lhs\" rel=\"nofollow\">this</a> part of a sudoku solver. I don't get how the expand function works. </p>\n\n<pre><code>expand                :: Matrix Choices -&gt; [Matrix Choices]\nexpand m              =\n   [rows1 ++ [row1 ++ [c] : row2] ++ rows2 | c &lt;- cs]\n   where\n      (rows1,row:rows2) = break (any (not . single)) m\n      (row1,cs:row2)    = break (not . single) row\n</code></pre>\n\n<p>What happens here? A brief explanation would be very helpful.</p>\n"}, {"tags": ["haskell", "syntax", "ghci", "hugs"], "comments": [{"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "edited": false, "score": 3, "creation_date": 1421152182, "post_id": 27921890, "comment_id": 44241360, "body": "AFAIK, Hugs is old and no longer supported. It could just be a bug. However, I&#39;m surprised that you indent <code>in</code> further than <code>let</code> and GHC still accepts it..."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "edited": false, "score": 1, "creation_date": 1421153040, "post_id": 27921890, "comment_id": 44241883, "body": "@MathematicalOrchid That is needed otherwise a single line <code>let x=5 in ...</code> would be rejected. Note that the position of <code>let</code> is also irrelevant (as long as it does not close an open block by being too on the left), it&#39;s the position of the first non-char after <code>let</code> that matters. The <code>in</code> will close the <code>let</code> block anywhere that might be (if on the right, it causes a parse error, and the standard IIRC states that in such case you close a block and retry parsing -- yes, it&#39;s tricky...)"}, {"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 3, "creation_date": 1421155214, "post_id": 27921890, "comment_id": 44243137, "body": "Uewwww, this signature is terrible! Use some aliases at least."}, {"owner": {"reputation": 11, "user_id": 4430920, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-LZAzVMy-DQA/AAAAAAAAAAI/AAAAAAAAACc/HeViXpWlIyA/photo.jpg?sz=128", "display_name": "Frederik Vreys", "link": "https://stackoverflow.com/users/4430920/frederik-vreys"}, "edited": false, "score": 1, "creation_date": 1421156738, "post_id": 27921890, "comment_id": 44244015, "body": "Pretty new to Haskell, didn&#39;t know what aliases were. But thanks for mentioning it, will use it from now on!"}], "answers": [{"comments": [{"owner": {"reputation": 326119, "user_id": 85371, "user_type": "registered", "accept_rate": 43, "profile_image": "https://www.gravatar.com/avatar/6d52c235ec6dd15f30bab444103e7af2?s=128&d=identicon&r=PG", "display_name": "sehe", "link": "https://stackoverflow.com/users/85371/sehe"}, "edited": false, "score": 0, "creation_date": 1421156522, "post_id": 27922372, "comment_id": 44243889, "body": "Ow. I thought my edit was immaterial... Sorry about this"}], "tags": [], "owner": {"reputation": 199084, "user_id": 56338, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/92fb4563ddc5ceeaa8b19b60a7a172f4?s=128&d=identicon&r=PG", "display_name": "sth", "link": "https://stackoverflow.com/users/56338/sth"}, "is_accepted": false, "score": 5, "last_activity_date": 1421152642, "creation_date": 1421152642, "answer_id": 27922372, "question_id": 27921890, "link": "https://stackoverflow.com/questions/27921890/haskell-syntax-error-unexpected-possibly-due-to-bad-layout/27922372#27922372", "title": "Haskell syntax error: unexpected `;&#39; possibly due to bad layout", "body": "<p>According to <a href=\"https://www.haskell.org/hugs/pages/users_guide/haskell98.html\" rel=\"noreferrer\">https://www.haskell.org/hugs/pages/users_guide/haskell98.html</a>, Hugs doesn't support Unicode identifiers. This probably leads to the syntax error.</p>\n"}, {"tags": [], "owner": {"reputation": 3, "user_id": 4437163, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bd6f80eb54821ebbacd272524feff23d?s=128&d=identicon&r=PG&f=1", "display_name": "R4y", "link": "https://stackoverflow.com/users/4437163/r4y"}, "is_accepted": false, "score": 0, "last_activity_date": 1421245256, "last_edit_date": 1421245256, "creation_date": 1421220588, "answer_id": 27937778, "question_id": 27921890, "link": "https://stackoverflow.com/questions/27921890/haskell-syntax-error-unexpected-possibly-due-to-bad-layout/27937778#27937778", "title": "Haskell syntax error: unexpected `;&#39; possibly due to bad layout", "body": "<p>It really looks like the the Problem comes with the Unicode identifiers. When I run your code i get</p>\n\n<p><code>3:12: lexical error (UTF-8 decoding error)</code></p>\n\n<p>But it is important if the file is an already compiled one or not. If its an <code>exe</code>, dont use <code>runhaskell</code>. That could cause the Problem too. And a little hint for the future, your code is much easier to read, when you use more spaces between words and punctuation marks.</p>\n"}], "owner": {"reputation": 11, "user_id": 4430920, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-LZAzVMy-DQA/AAAAAAAAAAI/AAAAAAAAACc/HeViXpWlIyA/photo.jpg?sz=128", "display_name": "Frederik Vreys", "link": "https://stackoverflow.com/users/4430920/frederik-vreys"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 518, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1421245256, "creation_date": 1421151082, "last_edit_date": 1421156588, "question_id": 27921890, "link": "https://stackoverflow.com/questions/27921890/haskell-syntax-error-unexpected-possibly-due-to-bad-layout", "title": "Haskell syntax error: unexpected `;&#39; possibly due to bad layout", "body": "<p>For quite some time now I have been receiving this error on the fourth line :\n    Syntax error in declaration (unexpected `;', possibly due to bad layout)\nIn the following code snippet:</p>\n\n<pre><code>import Data.Maybe    \n\nleesIngredi\u00ebnten:: Int-&gt;[[Char]]-&gt;[Int]-&gt;[Maybe [Char]]-&gt;[[Char]]-&gt;([Int], [Maybe [Char]], [[Char]])\nleesIngredi\u00ebnten 0 _ hoevs eenhs naams = (hoevs, eenhs, naams)\nleesIngredi\u00ebnten n (line:lines) hoevs eenhs naams =\n                 let \n                     (hoev, eenh, naam) = leesLijn line\n                     in  \n                       leesIngredi\u00ebnten (n-1) lines (hoev:hoevs) (eenh:eenhs) (naam:naams)\n</code></pre>\n\n<p>After searching on the internet I found what the error meant, but the point is I don't see my mistake. (probably because I wrote the code)</p>\n\n<p>The weird thing is, Hugs is the one complaining where GHCi has nothing to complain.</p>\n\n<p>Thanks in advance!  </p>\n"}, {"tags": ["haskell", "intellij-idea"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1421158101, "post_id": 27918237, "comment_id": 44244853, "body": "<code>ghc-mod-0.3.0</code> is ancient! The current version is <code>5.2.1.2</code>. Try installing something recent."}, {"owner": {"reputation": 1764, "user_id": 2478883, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/ys9QL.png?s=128&g=1", "display_name": "Ryoichiro Oka", "link": "https://stackoverflow.com/users/2478883/ryoichiro-oka"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1421179923, "post_id": 27918237, "comment_id": 44258599, "body": "But how do you do it through cabal?"}, {"owner": {"reputation": 31301, "user_id": 1598537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c214754fba6f3a238a93af85a0ab4f58?s=128&d=identicon&r=PG", "display_name": "AndrewC", "link": "https://stackoverflow.com/users/1598537/andrewc"}, "edited": false, "score": 0, "creation_date": 1421190309, "post_id": 27918237, "comment_id": 44263913, "body": "@RyoichiroOka Just checking: did you do <code>cabal update</code> first?"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1421208861, "post_id": 27918237, "comment_id": 44268626, "body": "@RyoichiroOka You can specify the version to be installed on the command line: <code>cabal install ghc-mod-5.2.1.2</code>. Perhaps the <a href=\"https://www.haskell.org/cabal/release/cabal-1.14.0/doc/users-guide/installing-packages.html\" rel=\"nofollow noreferrer\">user guide</a> or <code>cabal help</code> will be useful in the future."}, {"owner": {"reputation": 1764, "user_id": 2478883, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/ys9QL.png?s=128&g=1", "display_name": "Ryoichiro Oka", "link": "https://stackoverflow.com/users/2478883/ryoichiro-oka"}, "reply_to_user": {"reputation": 31301, "user_id": 1598537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c214754fba6f3a238a93af85a0ab4f58?s=128&d=identicon&r=PG", "display_name": "AndrewC", "link": "https://stackoverflow.com/users/1598537/andrewc"}, "edited": false, "score": 3, "creation_date": 1421230929, "post_id": 27918237, "comment_id": 44277171, "body": "@AndrewC Yes I did. Maybe I have forgot. @user2407038 Thank you for the latest number,, I succeeded to install ghc-mod.exe and ghc-modi.exe. And now I ran into another question: In IntelliJ I set paths of <code>cabal executable</code>, <code>cabal data path</code>, <code>ghc-mod executable</code> and <code>ghc-modi executable</code>. Every time I open up the project, IntelliJ claims &quot;<code>ghc-modi failed with error: NG BUG: GMECabalFlags (GMEString &quot;extractField: failed extracting configFlags from input, input contained `configFlags&#39;? False&quot;)</code>&quot;. What does this mean?"}], "owner": {"reputation": 1764, "user_id": 2478883, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/ys9QL.png?s=128&g=1", "display_name": "Ryoichiro Oka", "link": "https://stackoverflow.com/users/2478883/ryoichiro-oka"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 1204, "favorite_count": 0, "answer_count": 0, "score": 4, "last_activity_date": 1478641998, "creation_date": 1421139517, "last_edit_date": 1478641998, "question_id": 27918237, "link": "https://stackoverflow.com/questions/27918237/windows-8-ghc-mod-installation-fails", "title": "Windows 8 ghc-mod installation fails", "body": "<p>I'm trying to work on Haskell in IntelliJ IDEA on Windows 8.</p>\n\n<p>I installed the latest Haskell plugin, and found that it requires ghc.exe, cabal.exe and ghc-mod.exe prepared. Haskell Platform (x64) originally contains ghc.exe and cabal.exe, so what I need in order to make the plugin work is ghc-mod.exe.</p>\n\n<p>Just as many guides say, I tried installing it through cabal like this:</p>\n\n<pre><code>cabal install ghc-mod\n</code></pre>\n\n<p>It failed installing haskell-src-exts in the middle of the process, so I installed happy and tried the same command again. Then it succeeded to install src-exts, yet not ghc-mod. Cabal produced this error log:</p>\n\n<pre><code>Building ghc-mod-0.3.0...\nPreprocessing executable 'ghc-mod' for ghc-mod-0.3.0...\n[1 of 6] Compiling Param            ( Param.hs, dist\\dist-sandbox-67612b7f\\build\\ghc-mod\\ghc-mod-tmp\\Param.o )\n[2 of 6] Compiling Lang             ( Lang.hs, dist\\dist-sandbox-67612b7f\\build\\ghc-mod\\ghc-mod-tmp\\Lang.o )\n[3 of 6] Compiling List             ( List.hs, dist\\dist-sandbox-67612b7f\\build\\ghc-mod\\ghc-mod-tmp\\List.o )\n[4 of 6] Compiling Check            ( Check.hs, dist\\dist-sandbox-67612b7f\\build\\ghc-mod\\ghc-mod-tmp\\Check.o )\n[5 of 6] Compiling Browse           ( Browse.hs, dist\\dist-sandbox-67612b7f\\build\\ghc-mod\\ghc-mod-tmp\\Browse.o )\n\nBrowse.hs:41:72:\n    Not in scope: data constructor `ExplicitForall'\n    Perhaps you meant `ExplicitForAll' (imported from Language.Haskell.Exts.Extension)\n</code></pre>\n\n<p>This doesn't make sense to me at all. What can I do?</p>\n"}, {"tags": ["haskell", "casting"], "comments": [{"owner": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "edited": false, "score": 2, "creation_date": 1421130569, "post_id": 27916098, "comment_id": 44230806, "body": "Hint 1: look at your definition of <code>Num</code>: how do you expect Haskell to calculate subtraction with only the definitions you&#39;ve provided? Hint 2: If you&#39;re using GHC 7.8+, turn on all warnings (<code>-Wall</code>)."}, {"owner": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "edited": false, "score": 0, "creation_date": 1421130848, "post_id": 27916098, "comment_id": 44230905, "body": "Note that in the <a href=\"https://hackage.haskell.org/package/base/docs/Prelude.html#t:Num\" rel=\"nofollow noreferrer\">documentation for <code>Num</code></a>, it says: &quot;Minimal complete definition: <code>(+), (*), abs, signum, fromInteger, (negate | (-))</code>."}, {"owner": {"reputation": 375, "user_id": 2533786, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/2cada3fb91b06579b0ab2b186695b32d?s=128&d=identicon&r=PG", "display_name": "bimmo", "link": "https://stackoverflow.com/users/2533786/bimmo"}, "reply_to_user": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "edited": false, "score": 0, "creation_date": 1421131098, "post_id": 27916098, "comment_id": 44230995, "body": "So would Haskell produces negative numbers by adding the negative? Is that the regression? WHY IS THERE NO WARNING! Also, I use 7.6.3."}, {"owner": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "edited": false, "score": 5, "creation_date": 1421131957, "post_id": 27916098, "comment_id": 44231320, "body": "No, the problem is that because you are expected to provide either a definition for <code>negate</code> or <code>(-)</code>, so that the other one can be automatically computed via the default definition.  But since you don&#39;t have either one defined, Haskell will invoke the default definition of <code>(-)</code>, which invokes the default definition of <code>negate</code>, which invokes the same default definition of <code>(-)</code>, ad infinitum ..."}, {"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "edited": false, "score": 1, "creation_date": 1421137617, "post_id": 27916098, "comment_id": 44233570, "body": "Didn&#39;t they add a pragma to the latest GHC to catch cases like this?"}], "answers": [{"comments": [{"owner": {"reputation": 375, "user_id": 2533786, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/2cada3fb91b06579b0ab2b186695b32d?s=128&d=identicon&r=PG", "display_name": "bimmo", "link": "https://stackoverflow.com/users/2533786/bimmo"}, "edited": false, "score": 0, "creation_date": 1421200532, "post_id": 27917457, "comment_id": 44266789, "body": "Thank you for such a detailed answer. I used the cast in &#39;show&#39; to get decimal notation. I have since fixed the warnings from -Wall."}, {"owner": {"reputation": 375, "user_id": 2533786, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/2cada3fb91b06579b0ab2b186695b32d?s=128&d=identicon&r=PG", "display_name": "bimmo", "link": "https://stackoverflow.com/users/2533786/bimmo"}, "edited": false, "score": 0, "creation_date": 1421201084, "post_id": 27917457, "comment_id": 44266902, "body": "I have but one other question: Why does Haskell do <code>negate (SRatio 2)</code> and not <code>SRatio (-2)</code>? If this isn&#39;t the case, how does Haskell perform a cast?"}, {"owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "reply_to_user": {"reputation": 375, "user_id": 2533786, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/2cada3fb91b06579b0ab2b186695b32d?s=128&d=identicon&r=PG", "display_name": "bimmo", "link": "https://stackoverflow.com/users/2533786/bimmo"}, "edited": false, "score": 0, "creation_date": 1421213506, "post_id": 27917457, "comment_id": 44269711, "body": "I added a section explaining <code>negate</code>."}], "tags": [], "owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "is_accepted": true, "score": 8, "last_activity_date": 1421213475, "last_edit_date": 1421213475, "creation_date": 1421136432, "answer_id": 27917457, "question_id": 27916098, "link": "https://stackoverflow.com/questions/27916098/why-does-haskell-hang-upon-casting-a-literal-to-my-type/27917457#27917457", "title": "Why does Haskell hang upon casting a literal to my type?", "body": "<p>Even without any warnings enabled I get when loading the snippet into ghci (7.8.3):</p>\n\n<pre><code>SRational.hs:9:10: Warning:\n    No explicit implementation for\n      either \u2018negate\u2019 or \u2018-\u2019\n    In the instance declaration for \u2018Num SafeRational\u2019\n</code></pre>\n\n<p>i.e. one have to be defined. Their default definitions are mutually recursive:</p>\n\n<pre><code>x - y               = x + negate y\nnegate x            = 0 - x\n</code></pre>\n\n<hr>\n\n<p>Also with enabled <code>-Wall</code> you catch another bugs:</p>\n\n<pre><code>SRational.hs:26:5: Warning:\n    Pattern match(es) are non-exhaustive\n    In an equation for \u2018/\u2019:\n        Patterns not matched:\n            SRatioNaN _\n            (SRatio _) SRatioNaN\n</code></pre>\n\n<p>What happens when you divide anything by <code>SRatioNaN</code>, e.g. <code>0 / SRatioNaN</code> ?</p>\n\n<hr>\n\n<h2>Other review comments:</h2>\n\n<p>You can define show by:</p>\n\n<pre><code>instance Show (SafeRational) where\n    show (SRatio x) = show x\n    show SRatioNaN  = \"NaN\"\n</code></pre>\n\n<p>As another <code>-Wall</code> warning hints, you (unnecessarily, losing information) convert the <code>Rational</code> to <code>Double</code> in between.</p>\n\n<hr>\n\n<pre><code>(+) _ _                     = SRatioNaN -- Good?\n</code></pre>\n\n<p>Yes, yet</p>\n\n<pre><code>SRatio a + SRatio b         = SRatio (a + b)\n_ + _                       = SRatioNan\n</code></pre>\n\n<p>reads better (IMHO).</p>\n\n<hr>\n\n<p>Why literal <code>-2</code> is transformed into <code>fromInteger (-2 :: Integer)</code>? The reason is in the <a href=\"https://www.haskell.org/onlinereport/exps.html\" rel=\"nofollow\">Haskell Report</a> (3.4 Operator Applications):</p>\n\n<blockquote>\n  <p>The special form -e denotes prefix negation, the only prefix operator in Haskell , and is syntax for <code>negate (e)</code>. The binary <code>-</code> operator does not necessarily refer to the definition of <code>-</code> in the Prelude; it may be rebound by the module system. However, unary <code>-</code> will always refer to the <code>negate</code> function defined in the Prelude. There is no link between the local meaning of the <code>-</code> operator and unary negation.</p>\n</blockquote>\n\n<p>So <code>-2</code> is transformed into <code>negate (fromInteger (2 :: Integer))</code>.</p>\n\n<p>That's odd and discussed feature of Haskell: <a href=\"https://www.haskell.org/haskellwiki/Unary_operator\" rel=\"nofollow\">https://www.haskell.org/haskellwiki/Unary_operator</a> <a href=\"https://ghc.haskell.org/trac/haskell-prime/wiki/NegativeSyntax\" rel=\"nofollow\">https://ghc.haskell.org/trac/haskell-prime/wiki/NegativeSyntax</a></p>\n"}], "owner": {"reputation": 375, "user_id": 2533786, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/2cada3fb91b06579b0ab2b186695b32d?s=128&d=identicon&r=PG", "display_name": "bimmo", "link": "https://stackoverflow.com/users/2533786/bimmo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 317, "favorite_count": 0, "accepted_answer_id": 27917457, "answer_count": 1, "score": 1, "last_activity_date": 1421213475, "creation_date": 1421130379, "question_id": 27916098, "link": "https://stackoverflow.com/questions/27916098/why-does-haskell-hang-upon-casting-a-literal-to-my-type", "title": "Why does Haskell hang upon casting a literal to my type?", "body": "<p>I have written a wrapper type for Rational that NaN's a division by zero instead of crashing the program. The code compiles without error or warning. Here is (hopefully, all) the relevant code:</p>\n\n<pre><code>data SafeRational =\n    SRatio Rational |\n    SRatioNaN\n\ninstance Show (SafeRational) where\n    show (SRatio x) = show . fromRational $ x\n    show SRatioNaN  = \"NaN\"\n\ninstance Num (SafeRational) where\n    (+) (SRatio a) (SRatio b)   = SRatio (a+b)\n    (+) _ _                     = SRatioNaN -- Good?\n    (*) (SRatio a) (SRatio b)   = SRatio (a*b)\n    (*) _ _                     = SRatioNaN\n    signum (SRatio a)           = SRatio (signum a)\n    signum SRatioNaN                = SRatio 0\n    abs (SRatio a)              = SRatio (abs a)\n    abs SRatioNaN               = SRatioNaN\n    fromInteger a               = SRatio (fromInteger a)\n\ninstance Enum (SafeRational) where\n    fromEnum (SRatio x)     = fromEnum x\n    fromEnum SRatioNaN      = 0\n    toEnum x                = SRatio $ toEnum x\n\ninstance Fractional (SafeRational) where\n    (/) (SRatio a) (SRatio b)\n        | b == 0    = SRatioNaN\n        | otherwise = SRatio (a / b)\n    fromRational a  = SRatio a\n</code></pre>\n\n<p>A problem arises when I attempt to 'cast' a negative literal number to <code>SafeRational</code>. Haskell hangs as if it has entered an infinite regress. Positive numbers and zero do not behave oddly, only numbers below zero. Because I use Haskell as a mathematical tool, I do not often play with class declarations and I am afraid that I do not know how to debug the problem. Would someone please explain it?</p>\n\n<pre><code>*GHCi&gt; 0-2 :: SafeRational       -- makes Haskell sad\n_\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 2, "creation_date": 1421127128, "post_id": 27915211, "comment_id": 44229803, "body": "The function you are trying to implement is <code>lookup</code>. You can also implement it (approximately) as <code>\\i d -&gt; [(k,v) | (k,v) &lt;- d, k == i]</code>. This says &quot;take all the key,value pairs in d such that the key is equal to the given search key, and yield that key,value pair&quot;. Your function doesn&#39;t work in part because <code>head</code> and <code>tail</code> operate on <i>lists</i> and tuples (things like <code>(1, &#39;a&#39;)</code>) are <i>not</i> lists. For tuples, you should use fst and snd, or better yet, pattern matching."}, {"owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "edited": false, "score": 1, "creation_date": 1421132721, "post_id": 27915211, "comment_id": 44231616, "body": "If you have trouble getting a type signature right, try leaving it out, and then ask GHCi (in this case, with <code>:t getCharByNum</code>) what it infers the type to be."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1421141692, "post_id": 27915211, "comment_id": 44235615, "body": "BTW, the somehow &quot;standard&quot; implementation for this is to use <code>fromEnum&#47;toEnum</code> to convert to integer and back, and add the offset in the meanwhile. There&#39;s no need of building a lookup table."}], "answers": [{"comments": [{"owner": {"reputation": 2512, "user_id": 2325380, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/SvFan.jpg?s=128&g=1", "display_name": "Mark Karavan", "link": "https://stackoverflow.com/users/2325380/mark-karavan"}, "edited": false, "score": 0, "creation_date": 1421129370, "post_id": 27915472, "comment_id": 44230432, "body": "Yes, pattern matching and the range are much a much better way to do this.  I am still struggling with the Type Signature though."}], "tags": [], "owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "is_accepted": false, "score": 3, "last_activity_date": 1421127205, "creation_date": 1421127205, "answer_id": 27915472, "question_id": 27915211, "link": "https://stackoverflow.com/questions/27915211/number-character-mapping-in-haskell-with-list-comprehension/27915472#27915472", "title": "Number-Character mapping in Haskell with list comprehension", "body": "<p>Your problem is that you are using <code>head</code> and <code>last</code>, which apply to lists only, while your <code>vector</code> is a tuple.  You need to use <code>fst</code> and <code>snd</code> instead.  Or even better, you can use pattern matching:</p>\n\n<pre><code>getCharByNum num = [ c | (n,c) &lt;- zippedChars, num == n ]\n</code></pre>\n\n<p>By the way, <code>[ x | x &lt;- [1..26]]</code> is the same as just <code>[1..26]</code>, and similarly for the character list.</p>\n"}, {"tags": [], "owner": {"reputation": 401, "user_id": 516002, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/75dbde88be03ab4695c5eafeaf7971fd?s=128&d=identicon&r=PG", "display_name": "Bas Dirks", "link": "https://stackoverflow.com/users/516002/bas-dirks"}, "is_accepted": true, "score": 1, "last_activity_date": 1421156561, "last_edit_date": 1421156561, "creation_date": 1421154779, "answer_id": 27923023, "question_id": 27915211, "link": "https://stackoverflow.com/questions/27915211/number-character-mapping-in-haskell-with-list-comprehension/27923023#27923023", "title": "Number-Character mapping in Haskell with list comprehension", "body": "<p>Integral is a typeclass. Integral is not a type. a is an instance of Integral, so we declare this at the beginning of the signature.</p>\n\n<pre><code>zippedChars :: Integral a =&gt; [(a, Char)]\nzippedChars = zip [1..26] ['a'..'z']\n\ngetCharByNum :: Integral a =&gt; a -&gt; String\ngetCharByNum num = [ c | (n,c) &lt;- zippedChars, num == n ]\n\n&gt;&gt;&gt; getCharByNum 3\n'c'\n</code></pre>\n\n<p>A suggestion:</p>\n\n<pre><code>&gt;&gt;&gt; ['a'..'z'] !! 4\n'c'\n</code></pre>\n"}], "owner": {"reputation": 2512, "user_id": 2325380, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/SvFan.jpg?s=128&g=1", "display_name": "Mark Karavan", "link": "https://stackoverflow.com/users/2325380/mark-karavan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 389, "favorite_count": 0, "accepted_answer_id": 27923023, "answer_count": 2, "score": 1, "last_activity_date": 1421156561, "creation_date": 1421125518, "last_edit_date": 1421129484, "question_id": 27915211, "link": "https://stackoverflow.com/questions/27915211/number-character-mapping-in-haskell-with-list-comprehension", "title": "Number-Character mapping in Haskell with list comprehension", "body": "<p>I have a simple function in Haskell that takes a list of tuples like this: <code>[(1,'a'),(2,'b')..(26,'z')]</code>, and returns a letter value based on the number input.  So ideally,</p>\n\n<pre><code>getCharByNum 3\n&gt; \"c\"\n</code></pre>\n\n<p>I'm attempting this by using a list comprehension, and filtering out every tuple that doesn't contain that number.</p>\n\n<pre><code>zippedChars = zip [ x | x &lt;- [1..26]]  [ x | x &lt;- ['a'..'z']]\ngetCharByNum :: (Integral a) =&gt; a -&gt; [Char]\ngetCharByNum num = [ head vector | vector &lt;- zippedChars, num == last vector ]\n</code></pre>\n\n<p>I think this makes sense...getCharByNum is a function that takes an Integer, and returns a (short) list of Chars.  But GHCI throws this error:</p>\n\n<pre><code>Couldn't match expected type `[a]'\n            with actual type `(Integer, Char)'\nIn the first argument of `last', namely `vector'\nIn the second argument of `(==)', namely `last vector'\nIn the expression: num == last vector\n</code></pre>\n\n<p>How do you correctly construct a type signature that allows this function to run?  (I know that this can be easily done with an index, or even more easily with Data.Char.ord, but I'm trying to understand list comprehensions better)</p>\n\n<p>EDIT: I've cleaned the code a bit:</p>\n\n<pre><code>zippedChars = zip [1..26] ['a'..'z']\ngetCharByNum :: Integral -&gt; [Char]\ngetCharByNum num = [ c | (n,c) &lt;- zippedChars, num == n ]\n</code></pre>\n\n<p>But I am still getting this error:</p>\n\n<pre><code>folds.hs:50:18:\n    Expecting one more argument to `Integral'\n    In the type signature for `getCharByNum':\n      getCharByNum :: (Integral) -&gt; [Char]\nFailed, modules loaded: none.\n</code></pre>\n\n<p>This is a function that takes one Integer and returns a list of Chars, so I am not sure what I am missing.</p>\n"}, {"tags": ["parsing", "haskell"], "comments": [{"owner": {"reputation": 5004, "user_id": 3994249, "user_type": "registered", "accept_rate": 49, "profile_image": "https://www.gravatar.com/avatar/7cf7bda9bf2e7ce27e821289608eca33?s=128&d=identicon&r=PG", "display_name": "eguneys", "link": "https://stackoverflow.com/users/3994249/eguneys"}, "edited": false, "score": 0, "creation_date": 1441194897, "post_id": 27915143, "comment_id": 52577827, "body": "asking a question and not wanting it&#39;s answer is quite dumb, if you don&#39;t want to see the answer just don&#39;t look at it, I have the same problem and stuck thanks to you."}], "answers": [{"tags": [], "owner": {"reputation": 17809, "user_id": 1088108, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/63781cd38e91aa346a3849bc3ef3e550?s=128&d=identicon&r=PG&f=1", "display_name": "&#216;rjan Johansen", "link": "https://stackoverflow.com/users/1088108/%c3%98rjan-johansen"}, "is_accepted": true, "score": 2, "last_activity_date": 1421126318, "creation_date": 1421126318, "answer_id": 27915331, "question_id": 27915143, "link": "https://stackoverflow.com/questions/27915143/writing-parser-for-s-expressions/27915331#27915331", "title": "Writing Parser for S Expressions", "body": "<p>I am very suspicious of <code>zeroOrMore spaces</code>, because <code>spaces</code> is usually a parser which <em>itself</em> parses zero or more spaces.  Which means that it can parse <em>the empty string</em> if there aren't any spaces at that point. In particular, the <code>spaces</code> parser <em>always succeeds</em>.</p>\n\n<p>But when you apply <code>zeroOrMore</code> to a parser that always succeeds, the combined parser will never stop - because <code>zeroOrMore</code> only stops trying again once its parser argument fails.</p>\n\n<p>As an aside, <code>Applicative</code> expressions like <code>(\\_ _ x _ _ _ -&gt; x) &lt;$&gt; ... &lt;*&gt; ... &lt;*&gt; ......</code> which only use a single of the subparsers can usually be written more succinctly with the <code>*&gt;</code> and <code>&lt;*</code> combinators:</p>\n\n<pre><code>... *&gt; ... *&gt; x_parser_here &lt;* ... &lt;* ...\n</code></pre>\n"}], "owner": {"reputation": 37991, "user_id": 409976, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/9ccda0b49cc974197399eae01ebd6850?s=128&d=identicon&r=PG", "display_name": "Kevin Meredith", "link": "https://stackoverflow.com/users/409976/kevin-meredith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 331, "favorite_count": 0, "accepted_answer_id": 27915331, "answer_count": 1, "score": 0, "last_activity_date": 1421126318, "creation_date": 1421125078, "last_edit_date": 1495540682, "question_id": 27915143, "link": "https://stackoverflow.com/questions/27915143/writing-parser-for-s-expressions", "title": "Writing Parser for S Expressions", "body": "<p>I'm trying to write a Parser for <a href=\"https://stackoverflow.com/questions/27894888/parsing-s-expression\">S Expressions</a> from Prof. Yorgey's <a href=\"http://www.cis.upenn.edu/~cis194/spring13/hw/11-applicative2.pdf\" rel=\"nofollow noreferrer\">2013 homework</a>.</p>\n\n<p><code>newtype Parser a = Parser { runParser :: String -&gt; Maybe (a, String) }</code></p>\n\n<p>Given the following definitions, presented in the homework:</p>\n\n<pre><code>type Ident = String\n\n-- An \"atom\" is either an integer value or an identifier.\ndata Atom = N Integer | I Ident\n  deriving Show\n\n-- An S-expression is either an atom, or a list of S-expressions.\ndata SExpr = A Atom\n           | Comb [SExpr]\n  deriving Show\n</code></pre>\n\n<p>I wrote a parser for <code>Parser Atom</code> and <code>Parser SExpr</code> for <code>A Atom</code>.</p>\n\n<pre><code>parseAtom :: Parser Atom\nparseAtom = alt n i\n   where n = (\\_ z -&gt; N z) &lt;$&gt; spaces &lt;*&gt; posInt\n         i = (\\ _ z -&gt; I z) &lt;$&gt; spaces &lt;*&gt; ident\n\nparseAAtom :: Parser SExpr\nparseAAtom = fmap (\\x -&gt; A x) parseAtom \n</code></pre>\n\n<p>Then, I attempted to write a parser to handle a <code>Parser SExpr</code> for the <code>Comb ...</code> case:</p>\n\n<pre><code>parseComb :: Parser SExpr\nparseComb = (\\_ _ x _ _ _ -&gt; x) &lt;$&gt; (zeroOrMore spaces) &lt;*&gt; (char '(') &lt;*&gt; \n                                     (alt parseAAtom parseComb) &lt;*&gt; (zeroOrMore spaces) \n                                        &lt;*&gt; (char ')') &lt;*&gt; (zeroOrMore spaces)\n</code></pre>\n\n<p>Assuming that <code>parseComb</code> was right, I could simply make usage of <code>oneOrMore</code> for <code>Parser [SExpr]</code>.</p>\n\n<pre><code>parseCombElements :: Parser [SExpr]\nparseCombElements = oneOrMore parseComb\n</code></pre>\n\n<p>So, my two last functions compile, but running <code>runParser parseComb \"( foo )\"</code> never terminates.</p>\n\n<p>What's wrong with my <code>parseComb</code> definition? Please don't give me the whole answer, but rather a hint - for my own learning.</p>\n"}, {"tags": ["haskell", "imap"], "comments": [{"owner": {"reputation": 9142, "user_id": 1442918, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7490251da02084a2e2720e20029d2bff?s=128&d=identicon&r=PG", "display_name": "Max", "link": "https://stackoverflow.com/users/1442918/max"}, "edited": false, "score": 0, "creation_date": 1421125531, "post_id": 27915002, "comment_id": 44229356, "body": "Does your password have spaces? Do you have any way of capturing the output it generates?"}, {"owner": {"reputation": 7575, "user_id": 663299, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/f3a117b27e019d6d19b46698a21c8a11?s=128&d=identicon&r=PG", "display_name": "mhwombat", "link": "https://stackoverflow.com/users/663299/mhwombat"}, "edited": false, "score": 0, "creation_date": 1421145151, "post_id": 27915002, "comment_id": 44237527, "body": "This is just a wild guess, but are you on Windows by any chance? If so, it could be related to the <code>\\r\\n</code> vs <code>\\n</code> thing."}, {"owner": {"reputation": 5428, "user_id": 57246, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/65a1be62dd6dee67ab4391b410740ec9?s=128&d=identicon&r=PG", "display_name": "David", "link": "https://stackoverflow.com/users/57246/david"}, "edited": false, "score": 0, "creation_date": 1421151803, "post_id": 27915002, "comment_id": 44241145, "body": "I&#39;m on OS X (10.10). No spaces but there is a &#39;%&#39; character in the password. If either spaces or a special character is screwing things up then it doesn&#39;t well for the reliability of HaskellNet. I have no idea how to capture output. This experiment was going to be my one last shot at trying to use Haskell for something real but I&#39;m not expert."}, {"owner": {"reputation": 9142, "user_id": 1442918, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7490251da02084a2e2720e20029d2bff?s=128&d=identicon&r=PG", "display_name": "Max", "link": "https://stackoverflow.com/users/1442918/max"}, "edited": false, "score": 1, "creation_date": 1421166835, "post_id": 27915002, "comment_id": 44250928, "body": "Try placing quotes around the password.  I suspect the library may not automatically quote the password."}, {"owner": {"reputation": 5428, "user_id": 57246, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/65a1be62dd6dee67ab4391b410740ec9?s=128&d=identicon&r=PG", "display_name": "David", "link": "https://stackoverflow.com/users/57246/david"}, "edited": false, "score": 0, "creation_date": 1421169673, "post_id": 27915002, "comment_id": 44252664, "body": "Thank you --- that did it. I put  \\&quot; at each end of the password."}, {"owner": {"reputation": 9142, "user_id": 1442918, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7490251da02084a2e2720e20029d2bff?s=128&d=identicon&r=PG", "display_name": "Max", "link": "https://stackoverflow.com/users/1442918/max"}, "edited": false, "score": 0, "creation_date": 1421174121, "post_id": 27915002, "comment_id": 44255211, "body": "I will change my comment to an answer."}], "answers": [{"tags": [], "owner": {"reputation": 9142, "user_id": 1442918, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7490251da02084a2e2720e20029d2bff?s=128&d=identicon&r=PG", "display_name": "Max", "link": "https://stackoverflow.com/users/1442918/max"}, "is_accepted": true, "score": 2, "last_activity_date": 1421174140, "creation_date": 1421174140, "answer_id": 27929113, "question_id": 27915002, "link": "https://stackoverflow.com/questions/27915002/excess-characters-error-when-trying-to-use-haskellnet-for-imap/27929113#27929113", "title": "Excess characters error when trying to use HaskellNet for IMAP", "body": "<p>Try placing quotes around the password. I suspect the library may not automatically quote the password.</p>\n"}, {"comments": [{"owner": {"reputation": 5428, "user_id": 57246, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/65a1be62dd6dee67ab4391b410740ec9?s=128&d=identicon&r=PG", "display_name": "David", "link": "https://stackoverflow.com/users/57246/david"}, "edited": false, "score": 0, "creation_date": 1421243383, "post_id": 27940625, "comment_id": 44284226, "body": "Nice --- unfortunately the &#39;fetch&#39; command doesn&#39;t work so I had to give up and switch to Python (sigh)."}, {"owner": {"reputation": 5428, "user_id": 57246, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/65a1be62dd6dee67ab4391b410740ec9?s=128&d=identicon&r=PG", "display_name": "David", "link": "https://stackoverflow.com/users/57246/david"}, "edited": false, "score": 0, "creation_date": 1421252123, "post_id": 27940625, "comment_id": 44289882, "body": "Just for grins I got the update and now &#39;fetch&#39; seems to work. Very strange (and frustrating)"}, {"owner": {"reputation": 121, "user_id": 1136696, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bb86644f50f8ab104a5c989864b3be3c?s=128&d=identicon&r=PG", "display_name": "Lemol-C", "link": "https://stackoverflow.com/users/1136696/lemol-c"}, "reply_to_user": {"reputation": 5428, "user_id": 57246, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/65a1be62dd6dee67ab4391b410740ec9?s=128&d=identicon&r=PG", "display_name": "David", "link": "https://stackoverflow.com/users/57246/david"}, "edited": false, "score": 0, "creation_date": 1421263908, "post_id": 27940625, "comment_id": 44296950, "body": "Yes, the <a href=\"https://github.com/jtdaugherty/HaskellNet/issues/27\" rel=\"nofollow noreferrer\">problem with the fetch</a> was also known and fixed in <a href=\"https://hackage.haskell.org/package/HaskellNet\" rel=\"nofollow noreferrer\">0.4.1</a>. If you find more problems, please feel free to ask or <a href=\"https://github.com/jtdaugherty/HaskellNet/issues/\" rel=\"nofollow noreferrer\">report it in github</a>."}], "tags": [], "owner": {"reputation": 121, "user_id": 1136696, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bb86644f50f8ab104a5c989864b3be3c?s=128&d=identicon&r=PG", "display_name": "Lemol-C", "link": "https://stackoverflow.com/users/1136696/lemol-c"}, "is_accepted": false, "score": 0, "last_activity_date": 1421230924, "creation_date": 1421230924, "answer_id": 27940625, "question_id": 27915002, "link": "https://stackoverflow.com/questions/27915002/excess-characters-error-when-trying-to-use-haskellnet-for-imap/27940625#27940625", "title": "Excess characters error when trying to use HaskellNet for IMAP", "body": "<p>Due to this question the bug was fixed in <a href=\"https://hackage.haskell.org/package/HaskellNet-0.4.1/changelog\" rel=\"nofollow\">version 0.4.1</a> of HaskellNet, so if you upgrade to the new version you can just enter the password as it is (without quoting it).</p>\n"}], "owner": {"reputation": 5428, "user_id": 57246, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/65a1be62dd6dee67ab4391b410740ec9?s=128&d=identicon&r=PG", "display_name": "David", "link": "https://stackoverflow.com/users/57246/david"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 270, "favorite_count": 0, "accepted_answer_id": 27929113, "answer_count": 2, "score": 1, "last_activity_date": 1421230924, "creation_date": 1421124159, "question_id": 27915002, "link": "https://stackoverflow.com/questions/27915002/excess-characters-error-when-trying-to-use-haskellnet-for-imap", "title": "Excess characters error when trying to use HaskellNet for IMAP", "body": "<p>Thought I'd try to experiment again with Haskell to build a simple imap client. I tried the simple example that comes with HaskellNet  (see below). However, I get the error </p>\n\n<blockquote>\n  <p>user error (BAD: parse error: excess characters at end of command)</p>\n</blockquote>\n\n<p>From inserting print statements, I've determined that this is being caused by the login function. Any idea how to fix this?</p>\n\n<pre><code>main = do\n  con &lt;- connectIMAPPort imapServer imapPort\n  login con username password\n  mboxes &lt;- list con\n  mapM print mboxes\n  select con \"INBOX\"\n  msgs &lt;- search con [ALLs]\n  mapM_ (\\x -&gt; print x) (take 4 msgs)\n  forM_ (take 4msgs) (\\x -&gt; fetch con x &gt;&gt;= print)\n</code></pre>\n"}, {"tags": ["haskell", "memory"], "comments": [{"owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "edited": false, "score": 5, "creation_date": 1421117281, "post_id": 27914140, "comment_id": 44227592, "body": "Does using <code>Data.Map.Strict</code> instead of <code>Data.Map</code> make a difference?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1421120072, "post_id": 27914140, "comment_id": 44228182, "body": "Unrelatedly, you should consider using <code>Data.IntMap</code> or <code>Data.IntMap.Strict</code>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 3, "creation_date": 1421120131, "post_id": 27914140, "comment_id": 44228194, "body": "What is <code>closure</code>? What are <code>various parameters</code>? You should really post actual code that is actually capable of running."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 2, "creation_date": 1421121578, "post_id": 27914140, "comment_id": 44228489, "body": "1. Have you profiled your code? If not, you should do so. 2. You should post a minimum working example. If there are any obvious &quot;mistakes&quot;, they can only be spotted by seeing actual code which will actually run. More importantly, by cutting out code to get a MWE, you may stumble upon the problem yourself."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1421121600, "post_id": 27914140, "comment_id": 44228492, "body": "In line with a popular old blog post: Don&#39;t guess where the memory is going, ask the computer to tell you.  GHC had some great tools. Use them and don&#39;t black box debug unless you really need to."}, {"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "edited": false, "score": 0, "creation_date": 1421137798, "post_id": 27914140, "comment_id": 44233644, "body": "&quot;My code uses absurd amounts of RAM&quot; usually implies some kind of strictness / laziness bug. You probably have something that builds a giant unevaluated expression that only gets executed right at the end. Without seeing the full code, it&#39;s very hard for us to guess where that might be."}, {"owner": {"reputation": 7575, "user_id": 663299, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/f3a117b27e019d6d19b46698a21c8a11?s=128&d=identicon&r=PG", "display_name": "mhwombat", "link": "https://stackoverflow.com/users/663299/mhwombat"}, "edited": false, "score": 1, "creation_date": 1421145318, "post_id": 27914140, "comment_id": 44237616, "body": "Here is a <a href=\"http://neilmitchell.blogspot.ie/2013/02/chasing-space-leak-in-shake.html\" rel=\"nofollow noreferrer\">useful guide</a> on how to use profiling to find space leaks."}], "owner": {"reputation": 21, "user_id": 1965102, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/afbcb45f3e1d1f228dd57792447483c3?s=128&d=identicon&r=PG", "display_name": "ejamadsen", "link": "https://stackoverflow.com/users/1965102/ejamadsen"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 217, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1421153400, "creation_date": 1421116811, "last_edit_date": 1421153400, "question_id": 27914140, "link": "https://stackoverflow.com/questions/27914140/high-memory-usage-in-haskell-program", "title": "High memory usage in Haskell program", "body": "<p>I am experiencing very high memory consumption in a Haskell program. I have tried to simplify the situation with a short pseudo-Haskell example. In my real program with some test data the LF (logframe) is 24MB after all insertions has been done. In this case the program uses 2GB of memory!</p>\n\n<p>My theory is that this happens because each stage of the final logframe is kept in memory until the function terminates, even though I am only interested in the logframe that has been calculated when the recursion bottoms out. Can someone verify or dismiss that this is the case? And if this is the cause of the problem, can anyone come up with a suggestion for how to structure the program to avoid the heavy use of memory? I have tried to replace the <code>let</code> expression with <code>ex (ex lf1)</code> but this only yielded a small decrease in memory use.</p>\n\n<pre><code>import qualified Data.Map as Map\ntype LF = Map.Map Int Bool\nex :: various parameters -&gt; LF -&gt; LF\nex case1 lf = lf\nex case2 lf = let lf1 = ex lf \n                  lf2 = ex lf1\n              in lf2\nex case3 lf = ex(Map.insert some-int some-bool lf)\n</code></pre>\n\n<p>Really hoping that someone can help! And please let me know if you need some real code, I just thought this was the easiest way to explain and understand the problem :)</p>\n\n<p><strong>UPDATE</strong>: </p>\n\n<ul>\n<li><p>Sorry, the \"ex\"-function made calls to a function called \"closure\". This is edited to be recursive calls to \"ex\" itself.</p></li>\n<li><p>I have tried using Data.IntMap.Strict instead with no luck.</p></li>\n<li><p>I have pasted some runnable code <a href=\"http://pastebin.com/nYiwfJWQ\" rel=\"nofollow\" title=\"Regular expression parser.\">here</a>. It is a regular expression parser which generates an NFA from a regular expression and simulates the input string in the NFA. The relevant code to look at is \"simulate\" which starts the computation and invokes recursive calls to \"closure\" and \"step\". \"re2nfa\" is just there to be able to test the code - I am 100% sure that this function if the cause of the high memory consumption.</p></li>\n<li><p>There are comments at the end of the code with examples of how to call the simulate function.</p></li>\n<li><p>I will read up on profiling techniques and see if I can pinpoint the problem.</p></li>\n</ul>\n"}, {"tags": ["haskell", "fold"], "comments": [{"owner": {"reputation": 18999, "user_id": 825637, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/825a58fde1ef99db42c5354dab6cd472?s=128&d=identicon&r=PG", "display_name": "MasterMastic", "link": "https://stackoverflow.com/users/825637/mastermastic"}, "edited": false, "score": 0, "creation_date": 1421113026, "post_id": 27913577, "comment_id": 44226614, "body": "It&#39;s counter-intuitive to what a lot of programmers are used to in terms of API, but it is intuitive and fitting in terms of the actual fold operation. The order you are given is inverted because the operation is inverted, so to speak."}], "answers": [{"comments": [{"owner": {"reputation": 18999, "user_id": 825637, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/825a58fde1ef99db42c5354dab6cd472?s=128&d=identicon&r=PG", "display_name": "MasterMastic", "link": "https://stackoverflow.com/users/825637/mastermastic"}, "edited": false, "score": 0, "creation_date": 1421112524, "post_id": 27913633, "comment_id": 44226489, "body": "It&#39;s not afaik; in your example the order is just irrelevant."}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "reply_to_user": {"reputation": 18999, "user_id": 825637, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/825a58fde1ef99db42c5354dab6cd472?s=128&d=identicon&r=PG", "display_name": "MasterMastic", "link": "https://stackoverflow.com/users/825637/mastermastic"}, "edited": false, "score": 0, "creation_date": 1421112554, "post_id": 27913633, "comment_id": 44226498, "body": "I really don&#39;t understand what you mean by &quot;it&#39;s not afaik&quot;.  The example illustrates evaluation order with parentheses, it is irrelevant that the order is irrelevant."}, {"owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "reply_to_user": {"reputation": 18999, "user_id": 825637, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/825a58fde1ef99db42c5354dab6cd472?s=128&d=identicon&r=PG", "display_name": "MasterMastic", "link": "https://stackoverflow.com/users/825637/mastermastic"}, "edited": false, "score": 0, "creation_date": 1421112673, "post_id": 27913633, "comment_id": 44226527, "body": "@MasterMastic: It&#39;s not relevant that the result would be different.  I&#39;m just illustrating the structure of how the function is evaluated."}, {"owner": {"reputation": 18999, "user_id": 825637, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/825a58fde1ef99db42c5354dab6cd472?s=128&d=identicon&r=PG", "display_name": "MasterMastic", "link": "https://stackoverflow.com/users/825637/mastermastic"}, "edited": false, "score": 0, "creation_date": 1421112770, "post_id": 27913633, "comment_id": 44226548, "body": "True, I had just removed that comment. The following is what I meant to illustrate through it before noticing I&#39;m not :P <code>foldl :: (b -&gt; a -&gt; b) -&gt; b -&gt; [a] -&gt; b</code> while <code>foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b</code>. <code>foldl</code> takes the accumulator first and argument second, while <code>foldr</code> takes the argument first and accumulator second."}, {"owner": {"reputation": 18999, "user_id": 825637, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/825a58fde1ef99db42c5354dab6cd472?s=128&d=identicon&r=PG", "display_name": "MasterMastic", "link": "https://stackoverflow.com/users/825637/mastermastic"}, "edited": false, "score": 0, "creation_date": 1421113105, "post_id": 27913633, "comment_id": 44226637, "body": "What I had meant to write in the commented I removed was: <code>foldl (-) 0 [1..10] == foldr (flip (-)) 0 [1..10]</code> which is -55."}], "tags": [], "owner": {"reputation": 181215, "user_id": 82294, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/5c5f910416e2b92bb73fa59c56fe695d?s=128&d=identicon&r=PG", "display_name": "Dietrich Epp", "link": "https://stackoverflow.com/users/82294/dietrich-epp"}, "is_accepted": true, "score": 7, "last_activity_date": 1421113926, "last_edit_date": 1421113926, "creation_date": 1421112388, "answer_id": 27913633, "question_id": 27913577, "link": "https://stackoverflow.com/questions/27913577/why-does-foldr-invert-foldls-parameters/27913633#27913633", "title": "Why does foldr invert foldl&#39;s parameters?", "body": "<p>Both <code>foldr</code> and <code>foldl</code> pass the list to the function with the arguments in the same order.</p>\n\n<pre><code>foldr (+) 0 [1, 2, 3] = 1 + (2 + (3 + 0))\nfoldl (+) 0 [1, 2, 3] = ((0 + 1) + 2) + 3\n</code></pre>\n\n<p>That's all there is to it.</p>\n\n<pre><code>&gt; foldr (\\x y -&gt; \"(\" ++ show x ++ \" + \" ++ y ++ \")\") \"0\" [1, 2, 3]\n\"(1 + (2 + (3 + 0)))\"\n&gt; foldl (\\x y -&gt; \"(\" ++ x ++ \" + \" ++ show y ++ \")\") \"0\" [1, 2, 3]\n\"(((0 + 1) + 2) + 3)\"\n</code></pre>\n\n<h2>Math</h2>\n\n<p>Suppose you have a monoid, M:</p>\n\n<pre><code>identity :: M\nop :: M -&gt; M -&gt; M\n\n-- Monoid laws:\n-- x `op` (y `op` z) = (x `op` y) `op` z\n-- x `op` identity = x\n-- identity `op` x = x\n</code></pre>\n\n<p>The way <code>foldr</code> and <code>foldl</code> are defined, <code>foldr</code> and <code>foldl</code> always give the same result, assuming <code>op</code> is total.  They're just different ways of parenthesizing the same expression.</p>\n\n<pre><code>foldr op identity == foldl op identity\n</code></pre>\n\n<p>For example,</p>\n\n<pre><code>concat :: [[a]] -&gt; [a]\n-- both definitions give same result\nconcat = foldr (++) []\nconcat = foldl (++) []\n\nsum :: Num a =&gt; [a] -&gt; a\n-- both definitions give same result\nsum = foldr (+) 0\nsum = foldl (+) 0\n\nproduct :: Num a =&gt; [a] -&gt; a\n-- both definitions give same result\nproduct = foldr (*) 1\nproduct = foldl (*) 1\n</code></pre>\n\n<p>For non-associative operations, this is irrelevant because <code>foldr</code> and <code>foldl</code> won't generally give the same result.  For commutative operations, this is irrelevant because <code>foldr</code> and <code>foldl</code> will give the same result no matter what order the arguments go in.  This is only helpful for monoids in general.</p>\n\n<p>Or, put another way, you can think of <code>foldr</code> and <code>foldl</code> as tools for transforming the free monoid (a.k.a the list) into another monoid of your choosing.</p>\n"}, {"tags": [], "owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "is_accepted": false, "score": 2, "last_activity_date": 1421122066, "creation_date": 1421122066, "answer_id": 27914716, "question_id": 27913577, "link": "https://stackoverflow.com/questions/27913577/why-does-foldr-invert-foldls-parameters/27914716#27914716", "title": "Why does foldr invert foldl&#39;s parameters?", "body": "<p>If you think of <code>foldr</code> as replacing <code>(:)</code> and <code>[]</code> in the list, then the order of arguments passed to the function makes perfect sense:</p>\n\n<pre><code>xs =           x1  :  x2  :  x3  :  ...  :  []\nfoldr f a xs = x1 `f` x2 `f` x3 `f` ... `f` a\n</code></pre>\n"}], "owner": {"reputation": 2512, "user_id": 2325380, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/SvFan.jpg?s=128&g=1", "display_name": "Mark Karavan", "link": "https://stackoverflow.com/users/2325380/mark-karavan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 347, "favorite_count": 0, "accepted_answer_id": 27913633, "answer_count": 2, "score": 2, "last_activity_date": 1421122066, "creation_date": 1421111986, "last_edit_date": 1421114655, "question_id": 27913577, "link": "https://stackoverflow.com/questions/27913577/why-does-foldr-invert-foldls-parameters", "title": "Why does foldr invert foldl&#39;s parameters?", "body": "<p>This is a very, very simple foldl function: it takes a list, and returns the same list:</p>\n\n<pre><code>identityL :: (Integral a) =&gt; [a] -&gt; [a]\nidentityL xs = foldl (\\ acc x -&gt; acc ++ [x]) [] xs\n</code></pre>\n\n<p>I tried to do the same thing with foldr, thinking that all I had to do was change foldl to foldr and flip \"acc\" and \"[x]\" around the \"++\".  But apparently, you need to flip the parameters as well:</p>\n\n<pre><code>identityR :: (Integral a) =&gt; [a] -&gt; [a]\nidentityR xs = foldr (\\ x acc -&gt; [x] ++ acc) [] xs\n</code></pre>\n\n<p>This seems very counter-intuitive, for a function that seems to serve the purpose of linearly processing a list against an accumulator.  I am probably approaching the concept incorrectly; is there a simple model of the fold that justifies the weirdness of flipping the parameters?</p>\n\n<p>EDIT: This was silly; as pointed out, the parameter orderings offset each other. The following code works: </p>\n\n<pre><code>identityR :: (Integral a) =&gt; [a] -&gt; [a]\nidentityR xs = foldr (\\ acc x -&gt; [acc] ++ x) [] xs\n</code></pre>\n\n<p>I saw this before, but it bothers me because the <code>acc</code> should be a list and not need list encapsulation, whereas the <code>x</code> should.</p>\n\n<p>However, when you look at what the folds are really doing, it makes perfect sense to invert the <code>x</code> and <code>acc</code> variables.</p>\n\n<p>Given the list [1,2,3], identityL is successively ++'ing an <code>[x]</code> to the existing <code>acc</code>:</p>\n\n<pre><code>((([] ++ [1]) ++ [2]) ++ [3])\n</code></pre>\n\n<p>whereas identityR is successively ++'ing an <code>acc</code> to the starting <code>[x]</code>:</p>\n\n<pre><code>([1] ++ ([2] ++ ([3] ++ [])))\n</code></pre>\n"}, {"tags": ["haskell", "gtk2hs"], "answers": [{"comments": [{"owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "edited": false, "score": 0, "creation_date": 1421418535, "post_id": 27985850, "comment_id": 44363070, "body": "Someone with more <code>gtk2hs</code> knowledge should probably transform <code>onPathRightClick</code> into a proper <code>Signal view (TreePath -&gt; IO ())</code> but I don&#39;t know enough about the library to do that."}, {"owner": {"reputation": 2319, "user_id": 2211273, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/6d55ba6b0f08aed750502866c7e7ee77?s=128&d=identicon&r=PG", "display_name": "Kritzefitz", "link": "https://stackoverflow.com/users/2211273/kritzefitz"}, "edited": false, "score": 0, "creation_date": 1421431877, "post_id": 27985850, "comment_id": 44371181, "body": "I need the information what column was clicked, to modify the list I started with (<code>initialData</code> in the example). Unfortunately the <code>TreeViewColumn</code> I get, doesn&#39;t contain this information. So I can&#39;t figure out what data to modify."}, {"owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "reply_to_user": {"reputation": 2319, "user_id": 2211273, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/6d55ba6b0f08aed750502866c7e7ee77?s=128&d=identicon&r=PG", "display_name": "Kritzefitz", "link": "https://stackoverflow.com/users/2211273/kritzefitz"}, "edited": false, "score": 1, "creation_date": 1421555127, "post_id": 27985850, "comment_id": 44402453, "body": "I&#39;ve edited my answer to look up the column index before passing it to the callback. Another thing you could do is to attach a custom attribute (by using <code>objectCreateAttribute</code>) to the <code>TreeViewColumn</code>s containing whatever column key you need. I got that working as well, but it requires far more plumbing."}], "tags": [], "owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "is_accepted": true, "score": 1, "last_activity_date": 1421555054, "last_edit_date": 1495542437, "creation_date": 1421417632, "answer_id": 27985850, "question_id": 27912520, "link": "https://stackoverflow.com/questions/27912520/tables-reacting-to-click-events-on-a-per-cell-basis/27985850#27985850", "title": "Tables reacting to click events on a per-cell basis", "body": "<p>You can adopt the solution described in \n<a href=\"https://stackoverflow.com/a/7566697/477476\">this Python answer</a>.</p>\n\n<p>A <code>buttonPressEvent</code> callback can be installed in your <code>prepareCols</code> function that checks that the event is a right mouse click, and then decodes the event coordinates into a <code>TreeStore</code> path:</p>\n\n<pre><code>onPathRightClick :: (TreeViewClass view) \n                 =&gt; view\n                 -&gt; (TreePath -&gt; Int -&gt; IO ()) \n                 -&gt; IO (ConnectId view)\nonPathRightClick view callback =\n    on view buttonReleaseEvent $ (return False &lt;*) $ runMaybeT $ do\n        RightButton &lt;- lift eventButton\n        (x, y) &lt;- lift eventCoordinates\n        let x' = round x\n            y' = round y\n        (path, col, _cellpoint) &lt;- MaybeT . liftIO $ treeViewGetPathAtPos view (x', y')\n        colIdx &lt;- MaybeT . liftIO $ findIndex (== col) &lt;$&gt; treeViewGetColumns view\n        liftIO $ callback path colIdx\n\nprepareCols :: TreeView -&gt; ListStore [String] -&gt; IO ()\nprepareCols view store = do\n    size &lt;- listStoreGetSize store\n    mapM_ (addColumn view store) [0..size-1]\n    void $ onPathRightClick view $ \\path col -&gt; do\n        putStrLn . unwords $ [ \"Column:\" , show col]\n        putStrLn . unwords $ [ \"Path:\" , show path]\n</code></pre>\n"}], "owner": {"reputation": 2319, "user_id": 2211273, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/6d55ba6b0f08aed750502866c7e7ee77?s=128&d=identicon&r=PG", "display_name": "Kritzefitz", "link": "https://stackoverflow.com/users/2211273/kritzefitz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 132, "favorite_count": 0, "accepted_answer_id": 27985850, "answer_count": 1, "score": 3, "last_activity_date": 1421555054, "creation_date": 1421105132, "last_edit_date": 1421431816, "question_id": 27912520, "link": "https://stackoverflow.com/questions/27912520/tables-reacting-to-click-events-on-a-per-cell-basis", "title": "Tables reacting to click events on a per-cell basis", "body": "<p>I have a timetable to display in a table.</p>\n\n<p>Here is a sample of my current solution:</p>\n\n<pre><code>import Graphics.UI.Gtk\nimport Control.Monad.IO.Class\n\nmain = do\n  initGUI\n  window &lt;- windowNew\n  view &lt;- treeViewNew\n  store &lt;- listStoreNew initialData\n  treeViewSetModel view store\n  containerAdd window view\n  prepareCols view store\n  window `on` deleteEvent $ liftIO mainQuit &gt;&gt; return False\n  widgetShowAll window\n  mainGUI\n\ninitialData :: [[String]]\ninitialData = [[\"foo\", \"bar\"], [\"baz\", \"42\"]]\n\nprepareCols :: TreeView -&gt; ListStore [String] -&gt; IO ()\nprepareCols view store = do\n  size &lt;- listStoreGetSize store\n  mapM_ (addColumn view store) [0..size-1]\n\naddColumn :: TreeView -&gt; ListStore [String] -&gt; Int -&gt; IO ()\naddColumn view store i = addTextColumn view store (!! i) $ show i\n\naddTextColumn :: (TreeViewClass view\n                 , TreeModelClass (model row)\n                 , TypedTreeModelClass model\n                 )\n                =&gt; view -&gt; model row -&gt; (row -&gt; String) -&gt; String -&gt; IO ()\naddTextColumn view model f name = do\n  col &lt;- treeViewColumnNew\n  rend &lt;- cellRendererTextNew\n  treeViewColumnSetTitle col name\n  treeViewColumnPackStart col rend True\n  cellLayoutSetAttributes col rend model (\\row -&gt; [ cellText := f row ])\n  treeViewColumnSetExpand col True\n  treeViewAppendColumn view col\n  return ()\n</code></pre>\n\n<p>Now I would like to make every cell right-clickable, but gtk2hs only offers to make a row activable, without information which cell was activated, or make the column <em>header</em> clickable.</p>\n\n<p>What would be the way to go in gtk2hs, for a table that responds to click events with information, about which row and column was clicked (For the column a numeric index would be perfect, so I can use this index to modify the list I started with), without resorting to nasty things, like using a <code>Table</code> and deleting/adding labels to it at runtime.</p>\n\n<p>Im using gtk2hs (gtk3) version 0.12.5.6</p>\n"}, {"tags": ["haskell", "haskell-linear"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 1, "creation_date": 1421097192, "post_id": 27910808, "comment_id": 44221099, "body": "What values were you using?  It could be due to the IEEE floating point format instead of the linear package&#39;s math."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1421097311, "post_id": 27910808, "comment_id": 44221177, "body": "Scratch that, the normalize function uses the <code>Linear.Epsilon.nearZero</code> function, it is definitely truncating your values."}], "answers": [{"comments": [{"owner": {"reputation": 2846, "user_id": 4347335, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7e6f293a134a5defec74e12cae42cc?s=128&d=identicon&r=PG&f=1", "display_name": "cchalmers", "link": "https://stackoverflow.com/users/4347335/cchalmers"}, "edited": false, "score": 1, "creation_date": 1421099904, "post_id": 27910974, "comment_id": 44222436, "body": "Your <code>normalize&#39;</code> is just <code>signorm</code> (also in <code>Linear.Metric</code>)."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "reply_to_user": {"reputation": 2846, "user_id": 4347335, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/eb7e6f293a134a5defec74e12cae42cc?s=128&d=identicon&r=PG&f=1", "display_name": "cchalmers", "link": "https://stackoverflow.com/users/4347335/cchalmers"}, "edited": false, "score": 0, "creation_date": 1421099950, "post_id": 27910974, "comment_id": 44222467, "body": "@cchalmers I&#39;ll point that out then, I have no previous experience with the <code>linear</code> package, so I&#39;m just going off of reading the source and poking around a bit."}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 0, "creation_date": 1421104992, "post_id": 27910974, "comment_id": 44224409, "body": "Interesting, just to make sure - what is exactly the meaning of signorm? Is it doing something else (with the signals, maybe?) or is it exactly just a normalize without truncation?"}], "tags": [], "owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "is_accepted": false, "score": 3, "last_activity_date": 1421100027, "last_edit_date": 1421100027, "creation_date": 1421097831, "answer_id": 27910974, "question_id": 27910808, "link": "https://stackoverflow.com/questions/27910808/linear-package-truncating-values-close-to-0-when-using-normalize/27910974#27910974", "title": "&quot;Linear&quot; package truncating values close to 0 when using `normalize`", "body": "<p>Looking at the <a href=\"https://hackage.haskell.org/package/linear-1.15.5/docs/src/Linear-Metric.html#normalize\" rel=\"nofollow\">source</a> for <code>normalize</code>, you'll see that it's defined as</p>\n\n<pre><code>-- | Normalize a 'Metric' functor to have unit 'norm'. This function\n-- does not change the functor if its 'norm' is 0 or 1.\nnormalize :: (Floating a, Metric f, Epsilon a) =&gt; f a -&gt; f a\nnormalize v = if nearZero l || nearZero (1-l) then v else fmap (/sqrt l) v\n  where l = quadrance v\n</code></pre>\n\n<p>What this means is that if the magnitude of your points is really close to 0 you're going to end up with the wrong value.  To avoid this you can write your own <code>normalize</code> function without this check as</p>\n\n<pre><code>normalize' :: (Floating a, Metric f) =&gt; f a -&gt; f a\nnormalize' v = fmap (/ sqrt l) v where l = quadrance v\n</code></pre>\n\n<p>And with any luck it should solve your problem.</p>\n\n<p>Another way around this might be to scale up your values, perform the computations, then scale them back down, something like</p>\n\n<pre><code>normalize' factor = (* factor) . normalize . (/ factor)\n</code></pre>\n\n<p>So you might call</p>\n\n<pre><code>normalize' 10e-10 (V3 1e-10 2e-10 3e-10)\n</code></pre>\n\n<p>instead, but this could easily introduce rounding errors due to how IEEE floating point numbers are stored.</p>\n\n<p><strong>EDIT:</strong> As cchalmers points out this is already implemented as <code>signorm</code> in <code>Linear.Metric</code>, so use that function instead.</p>\n"}], "owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 0, "answer_count": 1, "score": 3, "last_activity_date": 1563316154, "creation_date": 1421097090, "last_edit_date": 1563316154, "question_id": 27910808, "link": "https://stackoverflow.com/questions/27910808/linear-package-truncating-values-close-to-0-when-using-normalize", "title": "&quot;Linear&quot; package truncating values close to 0 when using `normalize`", "body": "<p>I've spent a few minutes debugging a problem that tracked down to \"Linear\" truncating values that are close to zero when using \"Linear.normalize\". Specifically, I was taking the cross product of very small triangles and normalizing the result, which, surprisingly, behaved wrongly until I noticed what was wrong and multiplied the cross product by 10000.</p>\n\n<p>Why is that even necessary? How can I get rid of that behavior? </p>\n\n<p>Edit: just for fun, <a href=\"https://www.youtube.com/watch?v=GPXRSdsNdEE&amp;feature=youtu.be\" rel=\"nofollow\">here is a video of the bug</a>. Notice that the sphere loses the color when the number of triangles approximating it is big enough? Yes, good luck debugging that...!</p>\n"}, {"tags": ["haskell", "gtk2hs"], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 0, "last_activity_date": 1421093688, "creation_date": 1421093688, "answer_id": 27910027, "question_id": 27909759, "link": "https://stackoverflow.com/questions/27909759/signal-to-cellrenderermodeactivatable/27910027#27910027", "title": "Signal to CellRendererModeActivatable", "body": "<p>The docs at <a href=\"https://developer.gnome.org/gtk3/stable/GtkCellRenderer.html\" rel=\"nofollow\">https://developer.gnome.org/gtk3/stable/GtkCellRenderer.html</a> state:</p>\n\n<blockquote>\n  <p>A cell renderer can be \u201cactivatable\u201d like GtkCellRendererToggle, which\n  toggles when it gets activated by a mouse click, or it can be\n  \u201ceditable\u201d like GtkCellRendererText, which allows the user to edit the\n  text using a GtkEntry. To make a cell renderer activatable or\n  editable, you have to implement the GtkCellRendererClass.activate or\n  GtkCellRendererClass.start_editing virtual functions, respectively.</p>\n</blockquote>\n\n<p>Therefore, no signals are used by the mode. This seem to be confirmed by the C struct</p>\n\n<pre><code>struct GtkCellRendererClass {\n  /* vtable - not signals */\n  ...\n  gboolean           (* activate)          (GtkCellRenderer      *cell,\n                                            GdkEvent             *event,\n                                            GtkWidget            *widget,\n                                            const gchar          *path,\n                                            const GdkRectangle   *background_area,\n                                            const GdkRectangle   *cell_area,\n                                            GtkCellRendererState  flags);\n  GtkCellEditable *  (* start_editing)     (GtkCellRenderer      *cell,\n                                            GdkEvent             *event,\n                                            GtkWidget            *widget,\n                                            const gchar          *path,\n                                            const GdkRectangle   *background_area,\n                                            const GdkRectangle   *cell_area,\n                                            GtkCellRendererState  flags);\n}\n</code></pre>\n"}], "owner": {"reputation": 2319, "user_id": 2211273, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/6d55ba6b0f08aed750502866c7e7ee77?s=128&d=identicon&r=PG", "display_name": "Kritzefitz", "link": "https://stackoverflow.com/users/2211273/kritzefitz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 38, "favorite_count": 0, "accepted_answer_id": 27910027, "answer_count": 1, "score": 0, "last_activity_date": 1421093688, "creation_date": 1421092649, "question_id": 27909759, "link": "https://stackoverflow.com/questions/27909759/signal-to-cellrenderermodeactivatable", "title": "Signal to CellRendererModeActivatable", "body": "<p>The <code>CellRenderer</code> of gtk2hs has a property <code>cellMode</code>. If it's set to <code>CellRendererModeActivateble</code>, what signal gets emitted? I can't find one in the documentation.</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 64805, "user_id": 286871, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/xNBpr.png?s=128&g=1", "display_name": "Tikhon Jelvis", "link": "https://stackoverflow.com/users/286871/tikhon-jelvis"}, "is_accepted": true, "score": 7, "last_activity_date": 1421091820, "last_edit_date": 1421091820, "creation_date": 1421091452, "answer_id": 27909451, "question_id": 27909405, "link": "https://stackoverflow.com/questions/27909405/why-i-cant-use-the-cnt-hgetcontents-h-expression-instead-of-cnt/27909451#27909451", "title": "Why I can&#39;t use the (cnt &lt;- hGetContents h) expression instead of cnt?", "body": "<p>The problem is that <code>cnt &lt;- hGetContents h</code> is <strong>not</strong> an expression, it's some special syntax sugar inside <a href=\"http://en.wikibooks.org/wiki/Haskell/do_notation\" rel=\"noreferrer\">do notation</a>. This means it is a different way of writing the following normal Haskell code:</p>\n\n<pre><code>hGetContents h &gt;&gt;= \\ cnt -&gt; {- rest of do block -}\n</code></pre>\n\n<p>The part before the <code>{- rest of the do block -}</code> is not a whole expression here, because the rest of the do block is needed to complete the lambda's body.</p>\n\n<p>You could desugar it manually to get something like:</p>\n\n<pre><code>hGetContents h &gt;&gt;= \\ cnt -&gt; mapM_ putStrLn (lines cnt)\n</code></pre>\n\n<p>or the point-free version</p>\n\n<pre><code>hGetContents h &gt;&gt;= mapM_ putStrLn . lines\n</code></pre>\n\n<p>You can tell that it's a special expression because it introduces a new identifier (<code>cnt</code>) that you can use in the rest of your code, outside of the expression itself. This is not something that normal Haskell expressions get to do (at least without compile-time magic).</p>\n"}, {"tags": [], "owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "is_accepted": false, "score": 2, "last_activity_date": 1421091675, "creation_date": 1421091675, "answer_id": 27909514, "question_id": 27909405, "link": "https://stackoverflow.com/questions/27909405/why-i-cant-use-the-cnt-hgetcontents-h-expression-instead-of-cnt/27909514#27909514", "title": "Why I can&#39;t use the (cnt &lt;- hGetContents h) expression instead of cnt?", "body": "<p><code>cnt &lt;- hGetContents h</code> is essentially syntactical sugar for <code>hGetContents h &gt;&gt;= \\cnt -&gt;</code>.</p>\n\n<p>It is <em>not</em> an expression, it is sugar intended for its own line in a do-block.</p>\n\n<p>If you still want to keep it on one line, you can do this, though you will not be able to refer to the file's contents later on:</p>\n\n<pre><code>import System.IO\n\nmain = do\n  h &lt;- openFile \"text.txt\" ReadMode  \n  hGetContents h &gt;&gt;= mapM_ putStrLn . lines\n  hClose h\n</code></pre>\n"}], "owner": {"reputation": 10045, "user_id": 1306132, "user_type": "registered", "accept_rate": 80, "profile_image": "https://i.stack.imgur.com/kVX7T.png?s=128&g=1", "display_name": "Andrey Bushman", "link": "https://stackoverflow.com/users/1306132/andrey-bushman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "accepted_answer_id": 27909451, "answer_count": 2, "score": 3, "last_activity_date": 1421091820, "creation_date": 1421091288, "question_id": 27909405, "link": "https://stackoverflow.com/questions/27909405/why-i-cant-use-the-cnt-hgetcontents-h-expression-instead-of-cnt", "title": "Why I can&#39;t use the (cnt &lt;- hGetContents h) expression instead of cnt?", "body": "<p>I learn Haskell. It works fine:</p>\n\n<pre><code>import System.IO\n\nmain = do\n  h &lt;- openFile \"text.txt\" ReadMode\n  cnt &lt;- hGetContents h\n  mapM_ putStrLn $ lines cnt\n  hClose h\n</code></pre>\n\n<p>But this isn't working:</p>\n\n<pre><code>import System.IO\n\nmain = do\n  h &lt;- openFile \"text.txt\" ReadMode  \n  mapM_ putStrLn $ lines (cnt &lt;- hGetContents h)\n  hClose h\n</code></pre>\n\n<p>Why my second variant isn't working? I expected both variants are equal, because the <code>(cnt &lt;- hGetContents h)</code> is an expression and returns the value too.</p>\n"}, {"tags": ["haskell", "monads", "monadplus"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1421091226, "post_id": 27909373, "comment_id": 44218105, "body": "What are the error messages?  Always post the compiler errors you see."}, {"owner": {"reputation": 1260, "user_id": 2333093, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/b56a75856f517f32235c142a2deec150?s=128&d=identicon&r=PG", "display_name": "Marco", "link": "https://stackoverflow.com/users/2333093/marco"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1421091724, "post_id": 27909373, "comment_id": 44218375, "body": "Sorry, the errors were quite long. I added them and fixed the example."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1421092256, "post_id": 27909373, "comment_id": 44218649, "body": "Add a type signature to <code>test1,...</code>: probably you want these to be of type <code>Maybe (Int,[Int])</code> or something similar. GHC picked <code>Integer</code> instead of <code>Int</code> for you. Once this type is fixed, you now can see that your function <code>singleElemOnly</code> returns only that <code>Int&#47;Integer</code> type, while its signature promises that it works at any type <code>a</code> (and not only for <code>Int</code>). This is the type error that GHC reports."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1421092424, "post_id": 27909373, "comment_id": 44218738, "body": "Further, it is not clear to me what your last function should do. Can you edit your question explaining what you are trying to achieve? My guess at the moment is something like <code>f [] = mzero ; f (x:_) = return x</code> but it&#39;s hard to tell."}, {"owner": {"reputation": 1260, "user_id": 2333093, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/b56a75856f517f32235c142a2deec150?s=128&d=identicon&r=PG", "display_name": "Marco", "link": "https://stackoverflow.com/users/2333093/marco"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1421092892, "post_id": 27909373, "comment_id": 44218986, "body": "@chi Sorry, I updated the question with the latest code and error and a better explanation of what I want to achieve."}], "answers": [{"tags": [], "owner": {"reputation": 21417, "user_id": 925978, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/06e4467a5bd1538a92cefb20db07897a?s=128&d=identicon&r=PG&f=1", "display_name": "crockeea", "link": "https://stackoverflow.com/users/925978/crockeea"}, "is_accepted": false, "score": 1, "last_activity_date": 1421092262, "last_edit_date": 1421092262, "creation_date": 1421091893, "answer_id": 27909571, "question_id": 27909373, "link": "https://stackoverflow.com/questions/27909373/trouble-understanding-error-handling-with-monads/27909571#27909571", "title": "Trouble understanding error handling with monads", "body": "<p>First, <a href=\"https://www.haskell.org/hoogle/\" rel=\"nofollow\">hoogle</a> is your friend. You can look up signatures and find that <code>getFirst</code> is just <code>fst</code>, <code>getSecond</code> is <code>snd</code>, and your implementation of <code>getValue</code> can be written as <code>fromMaybe false</code>.</p>\n\n<p>In terms of the error messages, <code>value</code> has the type <code>(Integral i) =&gt; Maybe i</code> (or something close, I don't have a compiler right now), which is one possible value that <code>singleElemOnly</code> returns. But the signature <code>(MonadPlus m) =&gt; [a] -&gt; m a</code> says that it must return <strong>any</strong> <code>MonadPlus</code> that the caller wants. </p>\n\n<p>Similarly, if you are running this in GHCi, then the type of <code>test2</code> defaults to <code>Maybe (Integer, [Integer])</code>, but <code>singleElemOnly</code> must be able to return <strong>any</strong> <code>Integral</code> type.</p>\n"}, {"comments": [{"owner": {"reputation": 1260, "user_id": 2333093, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/b56a75856f517f32235c142a2deec150?s=128&d=identicon&r=PG", "display_name": "Marco", "link": "https://stackoverflow.com/users/2333093/marco"}, "edited": false, "score": 0, "creation_date": 1421096010, "post_id": 27909877, "comment_id": 44220571, "body": "This is almost perfect! But now I need to somehow get <code>test1</code> into it as a parameter and that part still eludes me. <code>singleElemOnly (fmap snd test2)</code> does not work, it complains that it &quot;couldn&#39;t match type <code>Maybe</code> with <code>[]</code>&quot;?"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 1, "creation_date": 1421097657, "post_id": 27909877, "comment_id": 44221356, "body": "<code>singleElemOnly</code> takes a list. <code>fmap snd test</code> has type <code>Maybe [Int]</code>. You can do <code>fmap (singleElement . snd) test</code> but this gets you a <code>Maybe (Maybe [Int])</code>. You probably want <code>fmap snd test &gt;&gt;= singleElement</code>."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 2, "last_activity_date": 1421093122, "creation_date": 1421093122, "answer_id": 27909877, "question_id": 27909373, "link": "https://stackoverflow.com/questions/27909373/trouble-understanding-error-handling-with-monads/27909877#27909877", "title": "Trouble understanding error handling with monads", "body": "<p>I will translate from your specification:</p>\n\n<blockquote>\n  <p>If the list contains no elements, I want to return an error. </p>\n</blockquote>\n\n<pre><code>f [] = mzero\n</code></pre>\n\n<blockquote>\n  <p>If the\n  list contains exactly 1 element, I want to return that element as a\n  Monad. </p>\n</blockquote>\n\n<pre><code>f [x] = return x\n</code></pre>\n\n<blockquote>\n  <p>If the list contains more than 1 element, I want to return an\n  error.</p>\n</blockquote>\n\n<pre><code>f (_:_:_) = mzero\n</code></pre>\n\n<p>So, putting everything together:</p>\n\n<pre><code>singleElemOnly :: (MonadPlus m) =&gt; [a] -&gt; m a\nsingleElemOnly []  = mzero\nsingleElemOnly [x] = return x\nsingleElemOnly _   = mzero\n       -- a _ catches everything else, no need to write the exact pattern\n</code></pre>\n\n<p>Or even more simply, since the third case includes the first:</p>\n\n<pre><code>singleElemOnly :: (MonadPlus m) =&gt; [a] -&gt; m a\nsingleElemOnly [x] = return x\nsingleElemOnly _   = mzero\n</code></pre>\n"}], "owner": {"reputation": 1260, "user_id": 2333093, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/b56a75856f517f32235c142a2deec150?s=128&d=identicon&r=PG", "display_name": "Marco", "link": "https://stackoverflow.com/users/2333093/marco"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 96, "favorite_count": 0, "accepted_answer_id": 27909877, "answer_count": 2, "score": 1, "last_activity_date": 1613970856, "creation_date": 1421091165, "last_edit_date": 1613970856, "question_id": 27909373, "link": "https://stackoverflow.com/questions/27909373/trouble-understanding-error-handling-with-monads", "title": "Trouble understanding error handling with monads", "body": "<p>I'm trying to build a function which returns me the single element from a list. The list is part of a <code>Maybe (Int,[Int])</code> tupel.</p>\n\n<p>If the list contains no elements, I want to return an error.\nIf the list contains exactly 1 element, I want to return that element as a Monad.\nIf the list contains more than 1 element, I want to return an error.</p>\n\n<p>I'm a bit lost and cannot see how to make this rather simple thing work.\nHere is what I have so far:</p>\n\n<pre><code>import Control.Monad\n\ntest1 = Just (1,[2,3]) :: Maybe (Int,[Int])\ntest2 = Just (2,[1]) :: Maybe (Int,[Int])\ntest3 = Just (3,[]) :: Maybe (Int,[Int])\n\ngetValue :: Maybe Bool -&gt; Bool\ngetValue (Just x) = x\ngetValue Nothing = False\n\nsingleElemOnly :: (MonadPlus m) =&gt; [a] -&gt; m a\nsingleElemOnly x = let result = test2\n                       value = fmap fst result\n                       isEmpty = fmap null (fmap snd result)\n                   in if (getValue isEmpty) then value else mzero\n</code></pre>\n\n<p>Unfortunately the error messages I am getting when trying to compile this are of absolutely no use to me as a beginner..</p>\n\n<pre><code>Playground.hs:15:50:\n    Could not deduce (a ~ Int)\n    from the context (MonadPlus m)\n      bound by the type signature for\n                 singleElemOnly :: MonadPlus m =&gt; [a] -&gt; m a\n      at Playground.hs:11:19-45\n      `a' is a rigid type variable bound by\n          the type signature for singleElemOnly :: MonadPlus m =&gt; [a] -&gt; m a\n          at Playground.hs:11:19\n    Expected type: m a\n      Actual type: Maybe Int\n    Relevant bindings include\n      x :: [a]\n        (bound at Playground.hs:12:16)\n      singleElemOnly :: [a] -&gt; m a\n        (bound at Playground.hs:12:1)\n    In the expression: value\n    In the expression: if (getValue isEmpty) then value else mzero\n\nPlayground.hs:15:50:\n    Could not deduce (m ~ Maybe)\n    from the context (MonadPlus m)\n      bound by the type signature for\n                 singleElemOnly :: MonadPlus m =&gt; [a] -&gt; m a\n      at Playground.hs:11:19-45\n      `m' is a rigid type variable bound by\n          the type signature for singleElemOnly :: MonadPlus m =&gt; [a] -&gt; m a\n          at Playground.hs:11:19\n    Expected type: m a\n      Actual type: Maybe Int\n    Relevant bindings include\n      singleElemOnly :: [a] -&gt; m a\n        (bound at Playground.hs:12:1)\n    In the expression: value\n    In the expression: if (getValue isEmpty) then value else mzero\n</code></pre>\n\n<p>Any help much appreciated!</p>\n"}, {"tags": ["list", "haskell", "recursion", "list-comprehension"], "answers": [{"comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 1, "creation_date": 1421089709, "post_id": 27909023, "comment_id": 44217281, "body": "I&#39;d like to mention that this is essentially the <code>map</code> function specialized for <code>div3</code>."}, {"owner": {"reputation": 204954, "user_id": 1903116, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/w6Ffg.jpg?s=128&g=1", "display_name": "thefourtheye", "link": "https://stackoverflow.com/users/1903116/thefourtheye"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 1, "creation_date": 1421089772, "post_id": 27909023, "comment_id": 44217311, "body": "@bheklilr Since he already knows list comprehension, we can safely assume that he knows about <code>map</code> as well, I guess. :)"}], "tags": [], "owner": {"reputation": 204954, "user_id": 1903116, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/w6Ffg.jpg?s=128&g=1", "display_name": "thefourtheye", "link": "https://stackoverflow.com/users/1903116/thefourtheye"}, "is_accepted": true, "score": 4, "last_activity_date": 1421089662, "creation_date": 1421089662, "answer_id": 27909023, "question_id": 27908807, "link": "https://stackoverflow.com/questions/27908807/list-comprehension-to-recursion-haskell/27909023#27909023", "title": "List Comprehension to Recursion [Haskell]", "body": "<p>You are almost there.</p>\n\n<ol>\n<li><p>First define the division function separately</p>\n\n<pre><code>div3 :: Int -&gt; Maybe Int -&gt; Maybe Double\ndiv3 i (Just n) | n &gt; 0 = Just (fromIntegral i / fromIntegral n)\ndiv3 i _                = Nothing\n</code></pre></li>\n<li><p>Then, for each item in the list, call the <code>div3</code> and concatenate it with the result of the recursive call to <code>divideList</code>, like this</p>\n\n<pre><code>divideList :: Int -&gt; [Maybe Int] -&gt; [Maybe Double]\ndivideList _ [] = []\ndivideList m (x:xs) = (div3 m x):(divideList m xs)\n</code></pre></li>\n</ol>\n\n<p>Here,</p>\n\n<pre><code>divideList _ [] = []\n</code></pre>\n\n<p>is called the <em>base condition</em> of your recursion. That decides when your recursion ends.</p>\n"}, {"tags": [], "owner": {"reputation": 28456, "user_id": 1094403, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/3770aa7eae5c211921493abd0d2c9f5a?s=128&d=identicon&r=PG", "display_name": "Luis Casillas", "link": "https://stackoverflow.com/users/1094403/luis-casillas"}, "is_accepted": false, "score": 3, "last_activity_date": 1421096692, "last_edit_date": 1421096692, "creation_date": 1421096213, "answer_id": 27910614, "question_id": 27908807, "link": "https://stackoverflow.com/questions/27908807/list-comprehension-to-recursion-haskell/27910614#27910614", "title": "List Comprehension to Recursion [Haskell]", "body": "<p>What I always recommend is this: do <strong>not</strong> write direct recursive solutions like what you're trying to do.  They're not idiomatic, they're harder to read, and they get pretty hard to write once you're doing anything complex.</p>\n\n<p>Instead, figure out how to write your solution with standard library functions like <code>map</code>, <code>filter</code> and so on.  Then, as an exercise, write your own versions of those library functions.  In this case:</p>\n\n<pre><code>divideList m xs = map div2 xs\n    where\n        div2 (Just n) | n &gt; 0   = Just (fromIntegral m / fromIntegral n)\n        div2 _                  = Nothing\n\n-- Apply the function `f` to each element of the list, returning a list of the results,\n-- in the order of the corresponding arguments.\nmap f []     = _   -- Fill me in\nmap f (x:xs) = _   -- Fill me in\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 52258, "user_id": 375232, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/h3OwD.png?s=128&g=1", "display_name": "Landei", "link": "https://stackoverflow.com/users/375232/landei"}, "is_accepted": false, "score": 1, "last_activity_date": 1421159318, "creation_date": 1421159318, "answer_id": 27924413, "question_id": 27908807, "link": "https://stackoverflow.com/questions/27908807/list-comprehension-to-recursion-haskell/27924413#27924413", "title": "List Comprehension to Recursion [Haskell]", "body": "<p>I'd suggest to write first a function for the division of two integral numbers. It must return a <code>Maybe Double</code>, as the calculation isn't always possible.</p>\n\n<pre><code>div2 m n = if n &lt;= 0 then Nothing else Just (fromIntegral m / fromIntegral n)\n</code></pre>\n\n<p>Then you just need to apply this function to every element of the list, which can be done with <code>map</code>. However, as the number is \"hidden\" in a <code>Maybe</code>, you can use the function <code>(&gt;&gt;=)</code> to \"unwrap\" it (when it isn't a <code>Nothing</code>, which stays a <code>Nothing</code>, as we want).</p>\n\n<pre><code>divideList m xs = map (&gt;&gt;= div2 m) xs\n</code></pre>\n\n<p>Or shorter:</p>\n\n<pre><code>divideList m = map (&gt;&gt;= div2 m)\n</code></pre>\n"}], "owner": {"reputation": 107, "user_id": 3086819, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/cbf8d23f588037ac2ffcd32aabde49a6?s=128&d=identicon&r=PG&f=1", "display_name": "user3086819", "link": "https://stackoverflow.com/users/3086819/user3086819"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1160, "favorite_count": 0, "accepted_answer_id": 27909023, "answer_count": 3, "score": 1, "last_activity_date": 1421159318, "creation_date": 1421088727, "question_id": 27908807, "link": "https://stackoverflow.com/questions/27908807/list-comprehension-to-recursion-haskell", "title": "List Comprehension to Recursion [Haskell]", "body": "<p>I have the following function, which divides a list of Maybes with an Int input.</p>\n\n<pre><code>divideList :: Int -&gt; [Maybe Int] -&gt; [Maybe Double]\n</code></pre>\n\n<p>i.e. </p>\n\n<pre><code> divideList 100 [Just 5, Just 4, Nothing]   == [Just 20, Just 25.0, Nothing]\n</code></pre>\n\n<p>As a reminder the Maybe datatype is defined as follows:</p>\n\n<pre><code> data Maybe a = Nothing | Just a\n</code></pre>\n\n<p>My code looks(and works) as followings:</p>\n\n<pre><code>divideList m xs = [ div2 x | x &lt;- xs]\n    where\n        div2 (Just n) | n &gt; 0   = Just (fromIntegral m / fromIntegral n)\n        div2 _                  = Nothing\n</code></pre>\n\n<p>Now I'm trying to write the same function again, but this time just with recursion and without list comprehensions. However I can't seem to get it working.</p>\n\n<p>Here's my (wrong) guess:</p>\n\n<pre><code>divideList m xs = div2  x \n    where\n        div2 (Just x) | x &gt; 0   = Just (fromIntegral m / fromIntegral x)\n        div2 _                  = Nothing\n</code></pre>\n"}, {"tags": ["haskell", "infinite"], "comments": [{"owner": {"reputation": 9139, "user_id": 773228, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/baaecdda322cf4462a0dd018d7959b1e?s=128&d=identicon&r=PG&f=1", "display_name": "Justin Wood", "link": "https://stackoverflow.com/users/773228/justin-wood"}, "edited": false, "score": 0, "creation_date": 1421081886, "post_id": 27906791, "comment_id": 44213249, "body": "Can you show us the error you are receiving?"}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 1, "creation_date": 1421082085, "post_id": 27906791, "comment_id": 44213371, "body": "It could be that <code>checkSudokuValid</code> is what is taking a very long time.  Do some experimentation with <code>head $ filter checkSudokusValid $ take n sudokus</code> where you increase <code>n</code> until you find where it runs out of memory.  See if you can find an element in <code>sudokus</code> that causes <code>checkSudokusValid</code> to run out of memory."}, {"owner": {"reputation": 8270, "user_id": 502816, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/adf1b075c5dbb1469e4bc56e02ea5093?s=128&d=identicon&r=PG", "display_name": "MrGlass", "link": "https://stackoverflow.com/users/502816/mrglass"}, "reply_to_user": {"reputation": 9139, "user_id": 773228, "user_type": "registered", "accept_rate": 62, "profile_image": "https://www.gravatar.com/avatar/baaecdda322cf4462a0dd018d7959b1e?s=128&d=identicon&r=PG&f=1", "display_name": "Justin Wood", "link": "https://stackoverflow.com/users/773228/justin-wood"}, "edited": false, "score": 0, "creation_date": 1421082363, "post_id": 27906791, "comment_id": 44213542, "body": "@JustinWood No error, GHCI just exits and I get &quot;Killed&quot;. Googling has led me toward memory as the cause of that, but its mostly an educated guess."}, {"owner": {"reputation": 8270, "user_id": 502816, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/adf1b075c5dbb1469e4bc56e02ea5093?s=128&d=identicon&r=PG", "display_name": "MrGlass", "link": "https://stackoverflow.com/users/502816/mrglass"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1421082894, "post_id": 27906791, "comment_id": 44213860, "body": "Still tracing it, but it seems like @bheklilr was onto something"}, {"owner": {"reputation": 8270, "user_id": 502816, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/adf1b075c5dbb1469e4bc56e02ea5093?s=128&d=identicon&r=PG", "display_name": "MrGlass", "link": "https://stackoverflow.com/users/502816/mrglass"}, "edited": false, "score": 0, "creation_date": 1421083543, "post_id": 27906791, "comment_id": 44214236, "body": "<code>take 1 $ drop 1599999 sudokus</code> is causing a similar crash, so it seems like my list itself is causing the issue, and not my filter. I guess my permutations function is FUBAR"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1421084038, "post_id": 27906791, "comment_id": 44214533, "body": "I doubt this has much to do with it, but <code>foldr (==) True</code> is a very strange thing to write. Perhaps you meant <code>and</code>, which is <code>foldr (&amp;&amp;) True</code>, or perhaps you meant <code>(\\xs -&gt; and $ zipWith (==) xs (tail xs))</code>."}, {"owner": {"reputation": 8270, "user_id": 502816, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/adf1b075c5dbb1469e4bc56e02ea5093?s=128&d=identicon&r=PG", "display_name": "MrGlass", "link": "https://stackoverflow.com/users/502816/mrglass"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1421085371, "post_id": 27906791, "comment_id": 44215176, "body": "@dfeuer Correct me if I&#39;m wrong, but since my list input to foldr should only be booleans, (==) and (&amp;&amp;) would be equivalent, no? I guess (&amp;&amp;) might be more efficient."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1421085705, "post_id": 27906791, "comment_id": 44215336, "body": "@MrGlass, no, folding <code>(==)</code> will not do what you think it will do. For example <code>foldr (==) True [a,b] = a == (b == True) = (a &amp;&amp; b) || (not a &amp;&amp; not b) = a == b</code>, but then <code>foldr (==) True [a,b,c] = a == (b == c) = (a &amp;&amp; b==c) || (not a &amp;&amp; b&#47;=c)</code> and you have something very strange already. It would probably actually be rather interesting to try to come up with a simple explanation of what <code>foldr (==) True</code> actually does, but it&#39;s certainly not something you&#39;re likely to see in the wild."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1421086191, "post_id": 27906791, "comment_id": 44215568, "body": "This looks like a 3D sudoku variant. Is that right?"}, {"owner": {"reputation": 8270, "user_id": 502816, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/adf1b075c5dbb1469e4bc56e02ea5093?s=128&d=identicon&r=PG", "display_name": "MrGlass", "link": "https://stackoverflow.com/users/502816/mrglass"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1421086361, "post_id": 27906791, "comment_id": 44215652, "body": "@dfeuer Just a regular sudoku, but because im just structuring it with lists of lists it might look 3d."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1421095845, "post_id": 27906791, "comment_id": 44220487, "body": "@dfeuer <code>(False ==)</code> is <code>not</code> and <code>(True ==)</code> is <code>id</code>. So <code>foldr (==) True</code> tells whether there are an even or odd number of <code>False</code>s in the argument list."}], "answers": [{"comments": [{"owner": {"reputation": 8270, "user_id": 502816, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/adf1b075c5dbb1469e4bc56e02ea5093?s=128&d=identicon&r=PG", "display_name": "MrGlass", "link": "https://stackoverflow.com/users/502816/mrglass"}, "edited": false, "score": 0, "creation_date": 1421085728, "post_id": 27907645, "comment_id": 44215346, "body": "That seems to run a bit faster but still dies."}], "tags": [], "owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "is_accepted": false, "score": 0, "last_activity_date": 1421084035, "creation_date": 1421084035, "answer_id": 27907645, "question_id": 27906791, "link": "https://stackoverflow.com/questions/27906791/filtering-infinite-list-causing-memory-overload-in-haskell-ghci/27907645#27907645", "title": "Filtering infinite list causing memory overload in Haskell/GHCI", "body": "<p>Try using:</p>\n\n<pre><code>genPermutations list length = sequence (replicate length list)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 8270, "user_id": 502816, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/adf1b075c5dbb1469e4bc56e02ea5093?s=128&d=identicon&r=PG", "display_name": "MrGlass", "link": "https://stackoverflow.com/users/502816/mrglass"}, "edited": false, "score": 0, "creation_date": 1421095285, "post_id": 27909207, "comment_id": 44220192, "body": "That code for genPermutations generates a lot of duplicates. Also, permutations doesn&#39;t allow multiple entries of the same value in the permutation (EG, for permutations of the list [1..3] I want [1,1,1,1,1] to be included"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 8270, "user_id": 502816, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/adf1b075c5dbb1469e4bc56e02ea5093?s=128&d=identicon&r=PG", "display_name": "MrGlass", "link": "https://stackoverflow.com/users/502816/mrglass"}, "edited": false, "score": 0, "creation_date": 1421095387, "post_id": 27909207, "comment_id": 44220250, "body": "@MrGlass, ah, that&#39;s a point, and I can fix it, but your problem will remain."}, {"owner": {"reputation": 8270, "user_id": 502816, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/adf1b075c5dbb1469e4bc56e02ea5093?s=128&d=identicon&r=PG", "display_name": "MrGlass", "link": "https://stackoverflow.com/users/502816/mrglass"}, "edited": false, "score": 0, "creation_date": 1421095478, "post_id": 27909207, "comment_id": 44220292, "body": "I always knew time would be an issue. Thats why i was trying to get 1 just to prove my concept, and was shocked to get the killed process. I&#39;m happy to leave my machine churning through this for a few days for a result."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 2, "last_activity_date": 1421090391, "creation_date": 1421090391, "answer_id": 27909207, "question_id": 27906791, "link": "https://stackoverflow.com/questions/27906791/filtering-infinite-list-causing-memory-overload-in-haskell-ghci/27909207#27909207", "title": "Filtering infinite list causing memory overload in Haskell/GHCI", "body": "<p>The problem is definitely in the generation code, and not the checking code (although there are a lot of things that should be changed in both). Specifically, your <code>genPermutations</code> implementation seems to use more and more RAM as it goes. I haven't figured out why that is yet, but if you use</p>\n\n<pre><code>genPermutations xs n = map (take n) $ permutations xs\n</code></pre>\n\n<p>the memory use goes down to constant. This will not, however, actually make your program work, for at least two reasons.</p>\n\n<p>One reason is that your validity test is wrong; as I mentioned before, folding <code>(==)</code> does not do what you think. What you meant to do was</p>\n\n<pre><code>checkSudukoValid x = (all screenLineForDuplicates x) &amp;&amp; (all \nscreenLineForDuplicates $ transposeSudoku x)\n    where transposeSudoku x = transpose(map (\\x -&gt; map transpose x )  x)\n          screenLineForDuplicates [[],[],[]] = True\n          screenLineForDuplicates [a:al,b:bl,c:cl] = check &amp;&amp; screenLineForDuplicates [al,bl,cl]\n              where check = (length line)  == (length $ nub line)\n                    line = concat [a,b,c]\n</code></pre>\n\n<p>This is terribly inefficient, but I think it's probably correct.</p>\n\n<p>The other reason is more serious: using either my version of <code>genPermutations</code> or yours, you will get a huge number of invalid puzzles before you hit the first valid one. I wasn't patient enough to wait for it.</p>\n"}], "owner": {"reputation": 8270, "user_id": 502816, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/adf1b075c5dbb1469e4bc56e02ea5093?s=128&d=identicon&r=PG", "display_name": "MrGlass", "link": "https://stackoverflow.com/users/502816/mrglass"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 132, "favorite_count": 1, "answer_count": 2, "score": 2, "last_activity_date": 1421090391, "creation_date": 1421081023, "question_id": 27906791, "link": "https://stackoverflow.com/questions/27906791/filtering-infinite-list-causing-memory-overload-in-haskell-ghci", "title": "Filtering infinite list causing memory overload in Haskell/GHCI", "body": "<p>I'm trying to write some Haskell code that will spit out a bunch of valid sudoku puzzles. Heres the code I have so far:</p>\n\n<pre><code>import Data.List (nub, permutations, transpose)\n\n-- Recursively build list of possible permutations of a certain length, allowing duplicates\ngenPermutations list length\n    | length &lt;= 0 = [[]]\n    | length == 1 = [[a] | a &lt;- list]\n    | otherwise = [[a]++b | a &lt;- list, b &lt;- genPermutations list $ length - 1]\n\n-- Generate as flat list of length 9, then format\nsquares = [[take 3 a,take 3 $ drop 3 a, drop 6 a] | a &lt;- permutations [1..9]]\nsudokus = [[take 3 a,take 3 $ drop 3 a, drop 6 a] | a &lt;- genPermutations squares 9]\n\n-- Takes a sudoku as a 4d array, return True/Flase based on rules of sudoku\n-- Does not check for duplicates within a square because generated sudokus shouldn't have any\ncheckSudukoValid x = (foldr (==) True $ map screenLineForDuplicates x) &amp;&amp; (foldr (==) True $ map screenLineForDuplicates $ transposeSudoku x)\n    where transposeSudoku x = transpose(map (\\x -&gt; map transpose x )  x)\n          screenLineForDuplicates [[],[],[]] = True\n          screenLineForDuplicates [a:al,b:bl,c:cl] = check &amp;&amp; screenLineForDuplicates [al,bl,cl]\n              where check = (length line)  == (length $ nub line)\n                    line = concat [a,b,c]\n\n\n-- Known good sudoku for testing\nknownGood = [[[[9,8,3],[6,1,4],[5,2,7]],[[6,5,7],[2,8,9],[4,3,1]],[[2,4,1],[5,7,3],[9,6,8]]],[[[8,6,5],[4,3,1],[7,9,2]],[[3,2,4],[7,9,8],[1,6,5]],[[7,1,9],[6,5,2],[3,8,4]]],[[[2,7,8],[3,5,9],[1,4,6]],[[5,1,3],[8,4,6],[9,7,2]],[[4,9,6],[1,2,7],[8,3,5]]]]\n</code></pre>\n\n<p>The important part of this code is that it generates a list of possibly valid sudoku puzzles &amp; a method to that if a single puzzle is valid. From my understanding, I should be able to just filter said list to get out some valid sudokus:\n<code>head $ filter checkSudukoValid sudokus</code></p>\n\n<p>When I run this, GHCI kills my process, which seems to be because of memory issues. What I don't understand is why I am running into memory problems. Shouldn't haskell be lazily filtering through the items in the list one at a time? Why would this take up significantly more memory than, say <code>filter checkSudukoValid $ take 5 sudokus</code></p>\n\n<p>What am I missing about how Haskell handles infinite list that would cause this? Is there a standard solution to making this more lazy that would cause me not to run into memory issues?</p>\n"}, {"tags": ["haskell", "fold"], "comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 3, "creation_date": 1421081614, "post_id": 27906660, "comment_id": 44213100, "body": "You can conceive of many instances where foldr takes more than 2 arguments, for example, <code>foldr (\\f g x -&gt; f (g x)) (\\x -&gt; x)</code>."}, {"owner": {"reputation": 46235, "user_id": 2541573, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z1qtP.png?s=128&g=1", "display_name": "jub0bs", "link": "https://stackoverflow.com/users/2541573/jub0bs"}, "edited": false, "score": 0, "creation_date": 1421082176, "post_id": 27906660, "comment_id": 44213425, "body": "I&#39;m not sure I would use <code>foldr</code> to implement your <code>compress</code> function. What should happen if the argument is the empty list?"}, {"owner": {"reputation": 6093, "user_id": 4293020, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/352ea26cb808b26c421ab55184231322?s=128&d=identicon&r=PG", "display_name": "Simon Gibbons", "link": "https://stackoverflow.com/users/4293020/simon-gibbons"}, "edited": false, "score": 0, "creation_date": 1421082591, "post_id": 27906660, "comment_id": 44213677, "body": "The <code>foldr</code> implementation would be fine you would just need to have a pattern first which can deal with the case of an empty list <code>compress&#39; [] = []</code>"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 6093, "user_id": 4293020, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/352ea26cb808b26c421ab55184231322?s=128&d=identicon&r=PG", "display_name": "Simon Gibbons", "link": "https://stackoverflow.com/users/4293020/simon-gibbons"}, "edited": false, "score": 0, "creation_date": 1464807819, "post_id": 27906660, "comment_id": 62640589, "body": "@SimonGibbons, another approach that works with any <code>Foldable</code> and that plays well with list fusion is to use a <code>Maybe</code> for the accumulator."}], "answers": [{"tags": [], "owner": {"reputation": 6093, "user_id": 4293020, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/352ea26cb808b26c421ab55184231322?s=128&d=identicon&r=PG", "display_name": "Simon Gibbons", "link": "https://stackoverflow.com/users/4293020/simon-gibbons"}, "is_accepted": false, "score": 4, "last_activity_date": 1421082445, "last_edit_date": 1421082445, "creation_date": 1421081167, "answer_id": 27906819, "question_id": 27906660, "link": "https://stackoverflow.com/questions/27906660/does-haskells-foldr-always-take-a-two-parameter-lambda/27906819#27906819", "title": "Does haskell&#39;s foldr always take a two-parameter lambda?", "body": "<p>As with all things in haskell have a look at the <em>types</em> of things to guide your way you can do this for any function in <code>ghci</code>.</p>\n\n<p>Looking at this for foldr we see:</p>\n\n<pre><code>Prelude&gt; :t foldr\nfoldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b\n</code></pre>\n\n<p>This slightly abstract string can be written in english as:</p>\n\n<p><code>foldr</code> is a function that takes </p>\n\n<p>1 ) a function with two parameters one of type <code>a</code> and one of type <code>b</code> and returns something of type <code>b</code></p>\n\n<p>2 ) A value of type <code>b</code></p>\n\n<p>3 ) A list of values of type <code>a</code></p>\n\n<p>And returns a value of type <code>b</code></p>\n\n<p>Where <code>a</code> and <code>b</code> are type variables (see <a href=\"http://learnyouahaskell.com/types-and-typeclasses\" rel=\"nofollow\">here</a> for a good tutorial on them) which can be filled in with any type you like.</p>\n"}, {"tags": [], "owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "is_accepted": true, "score": 18, "last_activity_date": 1421085273, "last_edit_date": 1421085273, "creation_date": 1421081581, "answer_id": 27906939, "question_id": 27906660, "link": "https://stackoverflow.com/questions/27906660/does-haskells-foldr-always-take-a-two-parameter-lambda/27906939#27906939", "title": "Does haskell&#39;s foldr always take a two-parameter lambda?", "body": "<p><code>foldr</code> takes a function of 2 arguments, but this doesn't prevent it from taking a function of 3 arguments provided that function has the right type signature.</p>\n\n<p>If we had a function</p>\n\n<pre><code>g :: x -&gt; y -&gt; z -&gt; w\n</code></pre>\n\n<p>With</p>\n\n<pre><code>foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b\n</code></pre>\n\n<p>Where we want to pass <code>g</code> to <code>foldr</code>, then <code>(a -&gt; b -&gt; b) ~ (x -&gt; y -&gt; z -&gt; w)</code> (where <code>~</code> is type equality).  Since <code>-&gt;</code> is right associative, this means we can write <code>g</code>'s signature as</p>\n\n<pre><code>x -&gt; y -&gt; (z -&gt; w)\n</code></pre>\n\n<p>and its meaning is the same.  Now we've produced a function of two parameters that returns a function of one parameter.  In order to unify this with the type <code>a -&gt; b -&gt; b</code>, we just need to line up the arguments:</p>\n\n<pre><code>a -&gt;   |  x -&gt;\nb -&gt;   |  y -&gt; \nb      |  (z -&gt; w)\n</code></pre>\n\n<p>This means that <code>b ~ z -&gt; w</code>, so <code>y ~ b ~ z -&gt; w</code> and <code>a ~ x</code> so <code>g</code>'s type really has to be</p>\n\n<pre><code>g :: x -&gt; (z -&gt; w) -&gt; (z -&gt; w)\n</code></pre>\n\n<p>implying</p>\n\n<pre><code>foldr g :: (z -&gt; w) -&gt; [x] -&gt; (z -&gt; w)\n</code></pre>\n\n<p>This is certainly not impossible, although more unlikely.  Our accumulator is a function instead, and to me this begs to be demonstrated with DiffLists:</p>\n\n<pre><code>type DiffList a = [a] -&gt; [a]\n\nappend :: a -&gt; DiffList a -&gt; DiffList a\nappend x dl = \\xs -&gt; dl xs ++ [x]\n\nreverse' :: [a] -&gt; [a]\nreverse' xs = foldr append (const []) xs $ []\n</code></pre>\n\n<p>Note that <code>foldr append (const []) xs</code> returns a function which we apply to <code>[]</code> to reverse a list.  In this case we've given an alias to functions of the type <code>[a] -&gt; [a]</code> called <code>DiffList</code>, but it's really no different than having written</p>\n\n<pre><code>append :: a -&gt; ([a] -&gt; [a]) -&gt; [a] -&gt; [a]\n</code></pre>\n\n<p>which is a function of 3 arguments.</p>\n"}, {"comments": [{"owner": {"reputation": 20860, "user_id": 2034787, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/78471a5b1bfa8b48d2056ff99a875f50?s=128&d=identicon&r=PG", "display_name": "\u05d2\u05dc\u05e2\u05d3 \u05d1\u05e8\u05e7\u05df", "link": "https://stackoverflow.com/users/2034787/%d7%92%d7%9c%d7%a2%d7%93-%d7%91%d7%a8%d7%a7%d7%9f"}, "edited": false, "score": 0, "creation_date": 1464800202, "post_id": 27908378, "comment_id": 62636469, "body": "Thanks, this is helping me understand this answer, <a href=\"http://stackoverflow.com/questions/37526740/why-is-the-f-version-of-this-program-6x-faster-than-the-haskell-one/37527523\" title=\"why is the f version of this program 6x faster than the haskell one\">stackoverflow.com/questions/37526740/&hellip;</a> . But by the way, changing the last two lines as you suggested to <code>where f x k = \\w -&gt; if x==w then k w else x : k w</code> doesn&#39;t seem to work. I get this: <code>*Main&gt; compress [2,3,3] =&gt; [2,3,3]</code>"}, {"owner": {"reputation": 20860, "user_id": 2034787, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/78471a5b1bfa8b48d2056ff99a875f50?s=128&d=identicon&r=PG", "display_name": "\u05d2\u05dc\u05e2\u05d3 \u05d1\u05e8\u05e7\u05df", "link": "https://stackoverflow.com/users/2034787/%d7%92%d7%9c%d7%a2%d7%93-%d7%91%d7%a8%d7%a7%d7%9f"}, "edited": false, "score": 0, "creation_date": 1464802811, "post_id": 27908378, "comment_id": 62637974, "body": "Could you please help me understand how the return value of <code>f x k w</code> is also a function - if you say that the accumulator is a function, doesn&#39;t that mean that it stays a function throughout the fold? If, in your example, <code>k</code> is a function that takes one argument, then <code>k x</code> and <code>x : k x</code> already include the argument, and since as I understand, the accumulator each time becomes the return value of <code>f</code>, doesn&#39;t it then become <code>k x</code> (or <code>x : k x</code>), which is just a list, rather than a function?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 20860, "user_id": 2034787, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/78471a5b1bfa8b48d2056ff99a875f50?s=128&d=identicon&r=PG", "display_name": "\u05d2\u05dc\u05e2\u05d3 \u05d1\u05e8\u05e7\u05df", "link": "https://stackoverflow.com/users/2034787/%d7%92%d7%9c%d7%a2%d7%93-%d7%91%d7%a8%d7%a7%d7%9f"}, "edited": false, "score": 0, "creation_date": 1464802960, "post_id": 27908378, "comment_id": 62638075, "body": "I wrote <code>k w</code> but I should have written <code>k x</code> -- edited."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 20860, "user_id": 2034787, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/78471a5b1bfa8b48d2056ff99a875f50?s=128&d=identicon&r=PG", "display_name": "\u05d2\u05dc\u05e2\u05d3 \u05d1\u05e8\u05e7\u05df", "link": "https://stackoverflow.com/users/2034787/%d7%92%d7%9c%d7%a2%d7%93-%d7%91%d7%a8%d7%a7%d7%9f"}, "edited": false, "score": 0, "creation_date": 1464803039, "post_id": 27908378, "comment_id": 62638134, "body": "<code>f x k</code> is a function, <code>f x k w</code> is a list. The first function <code>f x k</code> indeed takes <code>w</code> as argument, and returns a list. <code>k</code> is a similar function."}, {"owner": {"reputation": 20860, "user_id": 2034787, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/78471a5b1bfa8b48d2056ff99a875f50?s=128&d=identicon&r=PG", "display_name": "\u05d2\u05dc\u05e2\u05d3 \u05d1\u05e8\u05e7\u05df", "link": "https://stackoverflow.com/users/2034787/%d7%92%d7%9c%d7%a2%d7%93-%d7%91%d7%a8%d7%a7%d7%9f"}, "edited": false, "score": 0, "creation_date": 1464803079, "post_id": 27908378, "comment_id": 62638161, "body": "is <code>k x</code> a function? If the accumulator takes on that value, <code>k x</code>, how does the accumulator stay a function?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 20860, "user_id": 2034787, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/78471a5b1bfa8b48d2056ff99a875f50?s=128&d=identicon&r=PG", "display_name": "\u05d2\u05dc\u05e2\u05d3 \u05d1\u05e8\u05e7\u05df", "link": "https://stackoverflow.com/users/2034787/%d7%92%d7%9c%d7%a2%d7%93-%d7%91%d7%a8%d7%a7%d7%9f"}, "edited": false, "score": 1, "creation_date": 1464808310, "post_id": 27908378, "comment_id": 62640812, "body": "No, <code>k x</code> is a list. <code>k</code> is a function. The accumulator stays a function because it changes from <code>k</code> (a function) to <code>\\w -&gt; if ...</code> (another function, which is also <code>f x k</code>)"}, {"owner": {"reputation": 113, "user_id": 1663197, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b7c055b7bb6a0bbbbd3e71fd90e1a346?s=128&d=identicon&r=PG", "display_name": "AleXoundOS", "link": "https://stackoverflow.com/users/1663197/alexoundos"}, "edited": false, "score": 0, "creation_date": 1561898342, "post_id": 27908378, "comment_id": 100202206, "body": "Btw, is it possible to adapt <code>foldM</code> to this 3-parameter technique?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 113, "user_id": 1663197, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b7c055b7bb6a0bbbbd3e71fd90e1a346?s=128&d=identicon&r=PG", "display_name": "AleXoundOS", "link": "https://stackoverflow.com/users/1663197/alexoundos"}, "edited": false, "score": 1, "creation_date": 1561901691, "post_id": 27908378, "comment_id": 100202793, "body": "@AleXoundOS I don&#39;t think so, since the result of <code>foldM</code> is in a monad, so returning <code>m (a-&gt;b)</code> won&#39;t let us pass the third argument. We could transform that into <code>a -&gt; m b</code>, but in that case the monadic effect can not depend on <code>a</code>, so it&#39;s not completely general."}, {"owner": {"reputation": 113, "user_id": 1663197, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b7c055b7bb6a0bbbbd3e71fd90e1a346?s=128&d=identicon&r=PG", "display_name": "AleXoundOS", "link": "https://stackoverflow.com/users/1663197/alexoundos"}, "edited": false, "score": 0, "creation_date": 1561907846, "post_id": 27908378, "comment_id": 100204157, "body": "I could only satisfy compiler with <code>f :: (c -&gt; IO [b]) -&gt; a -&gt; IO (c -&gt; IO [b])</code> for <code>foldM</code> and make no use of it. In simple terms, I need that 2nd <code>c</code> to be accessible as an argument, but it&#39;s inside my output context. Wondered if it&#39;s still possible to avoid tuples for a temporary accumulator, so to speak. @chi, thank you for the explanation."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 4, "last_activity_date": 1464803108, "last_edit_date": 1464803108, "creation_date": 1421087075, "answer_id": 27908378, "question_id": 27906660, "link": "https://stackoverflow.com/questions/27906660/does-haskells-foldr-always-take-a-two-parameter-lambda/27908378#27908378", "title": "Does haskell&#39;s foldr always take a two-parameter lambda?", "body": "<p>It turns out that you can solve your <code>compress</code> problem using a <code>foldr</code> with a three-argument function.</p>\n\n<pre><code>compress :: Eq a =&gt; [a] -&gt; [a]\ncompress [] = []\ncompress (z:zs) = z : foldr f (const []) zs z\n  where f x k w | x==w      = k x\n                | otherwise = x : k x\n</code></pre>\n\n<p>Let's dissect that. First, we can improve readability by changing the last two lines to</p>\n\n<pre><code>  where f x k = \\w -&gt; if x==w then k x else x : k x\n</code></pre>\n\n<p>This makes it evident that a ternary function is nothing but a binary function returning a unary function. The advantage of looking at it in this way is that <code>foldr</code> is best understood when passed a binary function. Indeed, we <em>are</em> passing a binary function, which just happens to return a function.</p>\n\n<p>Let's focus on types now: </p>\n\n<pre><code>f :: a -&gt; (a -&gt; [a]) -&gt; (a -&gt; [a])\nf    x    k\n</code></pre>\n\n<p>So, <code>x::a</code> is the element of the list we are folding on. Function <code>k</code> is the result of the fold on the list tail. The result of <code>f x k</code> is something having the same type as <code>k</code>.</p>\n\n<pre><code>\\w -&gt; if ....    :: (a -&gt; [a])\n</code></pre>\n\n<p>The overall idea behind this anonymous function is as follows. The parameter <code>k</code> plays the same role as <code>acc</code> in the OP code, except it is a function expecting the <em>previous</em> element <code>w</code> in the list before producing the accumulated compressed list.</p>\n\n<p>Concretely, we use now <code>k x</code> when we used <code>acc</code>, passing on the current element to the next step, since by that time <code>x</code> will become the previous element <code>w</code>. At the top-level, we pass <code>z</code> to the function which is returned by <code>foldr f (const [])</code>.</p>\n\n<p>This <code>compress</code> variant is lazy, unlike the posted solution. In fact, the posted solution needs to scan the whole list before starting producing something: this is due to (<code>\\x acc -&gt; ...)</code> being strict in <code>acc</code>, and to the use of <code>last xs</code>. Instead, the above compress outputs list elements in a \"streaming\" fashion. Indeed, it works with infinite lists as well:</p>\n\n<pre><code>&gt; take 10 $ compress [1..]\n[1,2,3,4,5,6,7,8,9,10]\n</code></pre>\n\n<p>That being said, I think using a <code>foldr</code> here feels a bit weird: the code above is arguably less readable than the explicit recursion.</p>\n"}], "owner": {"reputation": 2512, "user_id": 2325380, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/SvFan.jpg?s=128&g=1", "display_name": "Mark Karavan", "link": "https://stackoverflow.com/users/2325380/mark-karavan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 4247, "favorite_count": 2, "accepted_answer_id": 27906939, "answer_count": 3, "score": 9, "last_activity_date": 1464803108, "creation_date": 1421080569, "question_id": 27906660, "link": "https://stackoverflow.com/questions/27906660/does-haskells-foldr-always-take-a-two-parameter-lambda", "title": "Does haskell&#39;s foldr always take a two-parameter lambda?", "body": "<p>Haskell newb here</p>\n\n<p>I'm working on this problem in haskell:</p>\n\n<pre><code>(**) Eliminate consecutive duplicates of list elements.\nIf a list contains repeated elements they should be replaced with a single copy of the element. The order of the elements should not be changed.\n\nExample:\n* (compress '(a a a a b c c a a d e e e e))\n(A B C A D E)\n</code></pre>\n\n<p>The solution (which I had to look up) uses foldr:</p>\n\n<pre><code>compress' :: (Eq a) =&gt; [a] -&gt; [a]\ncompress' xs = foldr (\\x acc -&gt; if x == (head acc) then acc else x:acc) [last xs] xs\n</code></pre>\n\n<p>This foldr, according to the solution, takes two parameters, x and acc.  It would seem like all foldr's take these parameters; is there any exception to this?  Like a foldr that takes 3 or more?  If not, is this convention redundant and can the formula be written with less code?</p>\n"}, {"tags": ["haskell", "haskell-linear"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1421078948, "post_id": 27906115, "comment_id": 44211497, "body": "The <a href=\"https://hackage.haskell.org/package/linear-1.16\" rel=\"nofollow noreferrer\"><code>linear</code></a> package does not export <code>Data.Linear</code>, can you link to the library you&#39;re using?"}, {"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1421079033, "post_id": 27906115, "comment_id": 44211555, "body": "Woops, it was a typo. Thanks."}, {"owner": {"reputation": 1545, "user_id": 2670439, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/wFcPA.jpg?s=128&g=1", "display_name": "SwiftsNamesake", "link": "https://stackoverflow.com/users/2670439/swiftsnamesake"}, "edited": false, "score": 0, "creation_date": 1501722039, "post_id": 27906115, "comment_id": 77907240, "body": "<a href=\"https://hackage.haskell.org/package/linear-1.20.7/docs/Linear-Vector.html#v:scaled\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/linear-1.20.7/docs/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 0, "creation_date": 1421079618, "post_id": 27906348, "comment_id": 44211925, "body": "Oh. That&#39;s awkward, I didn&#39;t expect the type to be so flexible and was looking for a &quot;scale&quot; function. This makes complete sense. Thank you."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "edited": false, "score": 3, "creation_date": 1421087369, "post_id": 27906348, "comment_id": 44216148, "body": "@Viclib: well... it makes <i>some</i> sense, but not really &quot;complete sense&quot;. That <code>Num</code> instance is mathematically rather adventurous. Of course, Edward knows what he&#39;s doing, still I recommend the <a href=\"http://hackage.haskell.org/package/vector-space\" rel=\"nofollow noreferrer\">vector-space package</a> for a better interface. Scaling is expressed with <a href=\"http://hackage.haskell.org/package/vector-space-0.8.7/docs/Data-VectorSpace.html#v:-42--94-\" rel=\"nofollow noreferrer\"><code>*^</code></a> there."}], "tags": [], "owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "is_accepted": true, "score": 7, "last_activity_date": 1421079522, "creation_date": 1421079522, "answer_id": 27906348, "question_id": 27906115, "link": "https://stackoverflow.com/questions/27906115/how-do-you-scale-a-vector-using-the-haskell-library-linear/27906348#27906348", "title": "How do you scale a vector using the Haskell library, Linear?", "body": "<p>The <code>linear</code> library exports an instance of <code>Num a =&gt; Num (V3 a)</code>, so you can actually just do</p>\n\n<pre><code>&gt; point * 2\nV3 2 4 6\n</code></pre>\n\n<p>If you use GHCi, you can see what it means for <code>2 :: V3 Int</code>:</p>\n\n<pre><code>&gt; 2 :: V3 Int\nV3 2 2 2\n</code></pre>\n\n<p>So the implementation of <code>fromInteger</code> for <code>V3</code> would look like</p>\n\n<pre><code>fromInteger n = V3 n' n' n' where n' = fromInteger n\n</code></pre>\n\n<p>This means you can do things like</p>\n\n<pre><code>&gt; point + 2\nV3 3 4 5\n&gt; point - 2\nV3 (-1) 0 1\n&gt; abs point\nV3 1 2 3\n&gt; signum point\nV3 1 1 1\n&gt; negate point\nV3 (-1) (-2) (-3)\n</code></pre>\n\n<p><code>V3</code> also implements <code>Fractional</code>, so you should be able to use <code>/</code> and co. when your point contains <code>Fractional</code> values.  However, the use of <code>fmap</code> is more general, you can convert your <code>V3 Int</code> into <code>V3 String</code>, for example:</p>\n\n<pre><code>&gt; fmap show point\nV3 \"1\" \"2\" \"3\"\n</code></pre>\n\n<p>The <code>fmap</code> function will let you apply a function of type <code>a -&gt; b</code> to a <code>V3 a</code> to get a <code>V3 b</code> without any restrictions on the output type (necessarily so).  Using <code>fmap</code> is not wrong, it's just not as readable as using the normal arithmetic operators.  Most Haskellers wouldn't have any problems reading it, though, <code>fmap</code> is a very general tool that shows up for just about every type out there.</p>\n"}], "owner": {"reputation": 44680, "user_id": 1031791, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/fb710534fda446d2286074bb7692e65a?s=128&d=identicon&r=PG", "display_name": "MaiaVictor", "link": "https://stackoverflow.com/users/1031791/maiavictor"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 623, "favorite_count": 0, "accepted_answer_id": 27906348, "answer_count": 1, "score": 5, "last_activity_date": 1563316176, "creation_date": 1421078754, "last_edit_date": 1563316176, "question_id": 27906115, "link": "https://stackoverflow.com/questions/27906115/how-do-you-scale-a-vector-using-the-haskell-library-linear", "title": "How do you scale a vector using the Haskell library, Linear?", "body": "<p>This is a simple question about style. I've been using:</p>\n\n<pre><code>import Linear\npoint  = V3 1 2 3\nscaled = fmap (* 2) point\n</code></pre>\n\n<p>Or...</p>\n\n<pre><code>scaled = (* 2) &lt;$&gt; point\n</code></pre>\n\n<p>Is this the intended way, or is there a proper multiplication by scalar operator?</p>\n"}, {"tags": ["haskell", "monad-transformers", "applicative"], "comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1421071966, "post_id": 27903650, "comment_id": 44206916, "body": "Stacking transformers is not quite the same as composing functors. Hence &quot;composing applicatives always yields an applicative&quot; doesn&#39;t really help."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1421072299, "post_id": 27903650, "comment_id": 44207148, "body": "...if you&#39;re ok with <code>(Monad f) =&gt; </code>, then the task is of course simple: just inline the definition of <code>&gt;&gt;=</code> into the definition of <code>ap</code>, and simplify."}], "answers": [{"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1421071621, "post_id": 27903782, "comment_id": 44206713, "body": "That uses a monadic bind."}, {"owner": {"reputation": 17837, "user_id": 1923190, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/D0JyZ.jpg?s=128&g=1", "display_name": "Simon H", "link": "https://stackoverflow.com/users/1923190/simon-h"}, "edited": false, "score": 0, "creation_date": 1421072205, "post_id": 27903782, "comment_id": 44207075, "body": "That&#39;s OK, because f is a Monad by defintion of a Transformer. I just need to de-minify the rest..."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1421074665, "post_id": 27903782, "comment_id": 44208725, "body": "@leftaroundabout Fixed."}], "tags": [], "owner": {"reputation": 6093, "user_id": 4293020, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/352ea26cb808b26c421ab55184231322?s=128&d=identicon&r=PG", "display_name": "Simon Gibbons", "link": "https://stackoverflow.com/users/4293020/simon-gibbons"}, "is_accepted": true, "score": 2, "last_activity_date": 1421074658, "last_edit_date": 1421074658, "creation_date": 1421071467, "answer_id": 27903782, "question_id": 27903650, "link": "https://stackoverflow.com/questions/27903650/implementing-applicative-for-statet/27903782#27903782", "title": "Implementing Applicative (&lt;*&gt;) for StateT", "body": "<p>An implementation (taken from <a href=\"https://github.com/NICTA/course\" rel=\"nofollow\">Tony Morris' functional programming course</a>) could be</p>\n\n<pre><code>(&lt;*&gt;) :: (Functor f, Monad f) =&gt;\n  StateT s f (a -&gt; b)\n  -&gt; StateT s f a\n  -&gt; StateT s f b\nStateT f &lt;*&gt; StateT a =\n  StateT (\\s -&gt; (\\(g, t) -&gt; (\\(z, u) -&gt; (g z, u)) &lt;$&gt; a t) =&lt;&lt; f s)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 17837, "user_id": 1923190, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/D0JyZ.jpg?s=128&g=1", "display_name": "Simon H", "link": "https://stackoverflow.com/users/1923190/simon-h"}, "is_accepted": false, "score": 4, "last_activity_date": 1421073432, "creation_date": 1421073432, "answer_id": 27904425, "question_id": 27903650, "link": "https://stackoverflow.com/questions/27903650/implementing-applicative-for-statet/27904425#27904425", "title": "Implementing Applicative (&lt;*&gt;) for StateT", "body": "<p>Tony uses some alternative notation, and Simon's answer is very terse, so here is what I ended up with:</p>\n\n<pre><code>-- (&lt;*&gt;) :: StateT s f (a -&gt; b) -&gt; State s f a -&gt; State s f b\ninstance (Monad f, Applicative f) =&gt; Applicative (StateT s f) where\n    pure a =  StateT $ \\s -&gt; pure (a, s)\n    StateT f &lt;*&gt; StateT a =\n        StateT $ \\s -&gt; \n                f s &gt;&gt;= \\(g, t) -&gt;                   -- (f s) :: m (a-&gt;b, s)\n                    let mapper = \\(z, u) -&gt; (g z, u) -- :: (a, s) -&gt; (b, s)\n                    in fmap mapper (a t)             -- (a t) :: m (a, s)\n</code></pre>\n\n<p>I had to declare f also a Monad, but that is OK as it is part of the definition of a Monad transformer, as I understand it.</p>\n"}], "owner": {"reputation": 17837, "user_id": 1923190, "user_type": "registered", "accept_rate": 62, "profile_image": "https://i.stack.imgur.com/D0JyZ.jpg?s=128&g=1", "display_name": "Simon H", "link": "https://stackoverflow.com/users/1923190/simon-h"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 372, "favorite_count": 1, "accepted_answer_id": 27903782, "answer_count": 2, "score": 3, "last_activity_date": 1421074658, "creation_date": 1421071067, "last_edit_date": 1495540663, "question_id": 27903650, "link": "https://stackoverflow.com/questions/27903650/implementing-applicative-for-statet", "title": "Implementing Applicative (&lt;*&gt;) for StateT", "body": "<p>This question has been asked <a href=\"https://stackoverflow.com/questions/18673525/is-it-possible-to-implement-applicative-m-applicative-statet-s-m\">before</a>, but without a real answer. In fact the accepted answer suggests that it is not possible, despite the fact that</p>\n\n<ul>\n<li>StateT is a Monad, and hence a superset of Applicative. As a result, the standard libraries simply use <code>(&lt;*&gt;) = ap</code></li>\n<li>(as Petr notes) composing applicatives always yields an applicative.</li>\n</ul>\n\n<p>One of the implementations of MaybeT I've read about used</p>\n\n<pre><code>liftA2 (&lt;*&gt;) :: (Applicative f, Applicative f1) =&gt; f (f1 (a -&gt; b)) -&gt; f (f1 a) -&gt; f (f1 b)\n</code></pre>\n\n<p>to implement Applicative but I can't make that work here. My work in progress has tried lots of options around the following:</p>\n\n<pre><code>-- (&lt;*&gt;) :: StateT s f (a -&gt; b) -&gt; State s f a -&gt; State s f b\ninstance (Applicative f) =&gt; Applicative (StateT s f) where\n    pure a =  StateT $ \\s -&gt; pure (a, s)\n    (StateT f) &lt;*&gt; (StateT g) = StateT $ \\s -&gt;          -- f :: s -&gt; m (a -&gt; b, s),  g :: s -&gt; m (a, s)\n                                    let\n                                        mabs = f s          -- mabs :: m (a -&gt; b, s)\n                                        mab = fmap fst mabs\n                                        ms' = fmap snd mabs\n\n                                    in undefined\n</code></pre>\n\n<p>I'm wondering what I am missing, and hoping that I will learn something about Applicative in the process.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 2134, "user_id": 2623659, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d1bd33f70a971bf89c7719005d477e2b?s=128&d=identicon&r=PG", "display_name": "ach", "link": "https://stackoverflow.com/users/2623659/ach"}, "edited": false, "score": 5, "creation_date": 1421036745, "post_id": 27895196, "comment_id": 44191521, "body": "As a guess: perhaps you meant <code>fTest :: (Foldable t, Num a) =&gt; [t a -&gt; a]</code>?"}, {"owner": {"reputation": 4173, "user_id": 593975, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/f9550b19b4c3f1dc5b72ae7c4123d817?s=128&d=identicon&r=PG", "display_name": "guthrie", "link": "https://stackoverflow.com/users/593975/guthrie"}, "reply_to_user": {"reputation": 2134, "user_id": 2623659, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d1bd33f70a971bf89c7719005d477e2b?s=128&d=identicon&r=PG", "display_name": "ach", "link": "https://stackoverflow.com/users/2623659/ach"}, "edited": false, "score": 0, "creation_date": 1421069095, "post_id": 27895196, "comment_id": 44205205, "body": "Thanks; I thought I had tried that, but it does work. Yet still trying to name same type using a type alias (as in Ftst above) fails (either with or without the list notation) - why?"}], "answers": [{"comments": [{"owner": {"reputation": 4173, "user_id": 593975, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/f9550b19b4c3f1dc5b72ae7c4123d817?s=128&d=identicon&r=PG", "display_name": "guthrie", "link": "https://stackoverflow.com/users/593975/guthrie"}, "edited": false, "score": 0, "creation_date": 1421069948, "post_id": 27895614, "comment_id": 44205725, "body": "Thank you, I had not tried this before and this is very helpful. It is interesting then that moving the quantification outside the list constructor does work (comments above). Offhand it would seem to be the same issue - applying list constructor to the polymorphic type, just declared differently. I am not clear on why even this adjusted form <code>(Foldable t, Num a) =&gt; [t a -&gt; a]</code> can be used in a type signature, but not a type alias."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 4173, "user_id": 593975, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/f9550b19b4c3f1dc5b72ae7c4123d817?s=128&d=identicon&r=PG", "display_name": "guthrie", "link": "https://stackoverflow.com/users/593975/guthrie"}, "edited": false, "score": 1, "creation_date": 1421072495, "post_id": 27895614, "comment_id": 44207283, "body": "@guthrie The difference is about whether the context <code>(Foldable t, Num a)</code> (which requires an implicit <code>forall</code>) is inside or outside the list type constructor. As for type aliases, since they can appear anywhere (including as the type of a function&#39;s argument), they must be monomorphic for all resulting types to be rank 1."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 12, "last_activity_date": 1421039072, "creation_date": 1421039072, "answer_id": 27895614, "question_id": 27895196, "link": "https://stackoverflow.com/questions/27895196/haskell-illegal-polymorphic-type/27895614#27895614", "title": "Haskell - Illegal Polymorphic type?", "body": "<p>This restriction on Haskell's type system is in place to simplify type inference and checking. Type inference with predicative rank-1 types (see below) is decidable and has a relatively simple implementation. Type inference with rank-2 types is decidable but quite complicated, to the point that I don't know any language with an implementation of rank-2 type inference. Type inference for types of rank 3 and above is flat-out undecidable. Impredicative types also complicate things considerably; GHC used to have an implementation which allowed type-checking (and some very limited inference) with impredicative types, but it was so complicated that it was ripped out later. (Some values which only typecheck with impredicative types are still accepted by GHC at the moment, but I think this is not considered a \"stable\" feature.)</p>\n\n<p>Quick definitions: rank-1 types have all quantification and class constraints \"outside\" the type, so all rank-1 types are of the form</p>\n\n<pre><code>forall a_1 ... a_m. (C_1, ..., C_n) =&gt; t\n</code></pre>\n\n<p>Rank-2 types allow function arguments to have rank-1 types; and in general rank n types allow function arguments to have rank (n-1) types.</p>\n\n<p>Predicativity answers the question of what types can be substituted for type variables. If only monomorphic types (though potentially with type variables!) can be substituted, you are in a predicative system; impredicative types allow you to substitute a polymorphic type for a type variable. By extension, parametric data types in predicative systems can only accept monomorphic types as arguments. Thus, for example, your example which applies the <code>[]</code> type constructor to the type <code>forall t a. (Foldable t, Num a) =&gt; t a -&gt; a</code> is trying to apply a constructor to a polymorphic type, hence is only valid in an impredicative system.</p>\n"}], "owner": {"reputation": 4173, "user_id": 593975, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/f9550b19b4c3f1dc5b72ae7c4123d817?s=128&d=identicon&r=PG", "display_name": "guthrie", "link": "https://stackoverflow.com/users/593975/guthrie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1822, "favorite_count": 2, "accepted_answer_id": 27895614, "answer_count": 1, "score": 5, "last_activity_date": 1421039072, "creation_date": 1421036041, "question_id": 27895196, "link": "https://stackoverflow.com/questions/27895196/haskell-illegal-polymorphic-type", "title": "Haskell - Illegal Polymorphic type?", "body": "<p>Why does the single usage of this type compile, but putting it into a list fails?</p>\n\n<pre><code>ft1  :: (Foldable t, Num a) =&gt; t a -&gt; a\nft1   =   (F.foldl (+)  0)\n\nfTest :: [(Foldable t, Num a) =&gt; t a -&gt; a ]\nfTest = [ F.foldl (+)  0 ]\n</code></pre>\n\n<p>The latter gives the error:</p>\n\n<pre><code>folding.hs:80:10:\n    Illegal polymorphic or qualified type:\n      (Foldable t, Num a) =&gt; t a -&gt; a\n    Perhaps you intended to use ImpredicativeTypes\n    In the type signature for `fTest':\n      fTest :: [(Foldable t, Num a) =&gt; t a -&gt; a]\n</code></pre>\n\n<p>Simliarly, trying to name it fails (differently):</p>\n\n<pre><code>type Ftst t a = (Foldable t, Num a) =&gt; t a -&gt; a\n\nfolding.hs:80:1:\n    Illegal polymorphic or qualified type:\n      (Foldable t, Num a) =&gt; t a -&gt; a\n    Perhaps you intended to use RankNTypes or Rank2Types\n    In the type declaration for `Ftst'\n</code></pre>\n"}, {"tags": ["haskell", "s-expression"], "answers": [{"tags": [], "owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "is_accepted": true, "score": 6, "last_activity_date": 1421034233, "creation_date": 1421034233, "answer_id": 27895006, "question_id": 27894888, "link": "https://stackoverflow.com/questions/27894888/parsing-s-expression/27895006#27895006", "title": "Parsing S Expression", "body": "<p>I believe it would be something like</p>\n\n<pre><code>Comb\n    [ A (I \"bar\")\n    , Comb\n        [ A (I \"foo\")\n        ]\n    , A (N 3)\n    , A (N 5)\n    , A (N 874)\n    ]\n</code></pre>\n\n<p>Whenever you encounter an open parenthesis you would start a new <code>Comb</code> expression, so <code>(foo)</code> is <code>Comb [A (I \"foo\")]</code> while <code>foo</code> is simply <code>A (I \"foo\")</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "is_accepted": false, "score": 5, "last_activity_date": 1421034284, "creation_date": 1421034284, "answer_id": 27895018, "question_id": 27894888, "link": "https://stackoverflow.com/questions/27894888/parsing-s-expression/27895018#27895018", "title": "Parsing S Expression", "body": "<p>I'll assume the Ident type is a String.</p>\n\n<ul>\n<li><em>bar</em> as an Atom is <code>I \"bar\"</code>, and as an SExpr is <code>A (I \"bar\")</code></li>\n<li>ditto for <em>foo</em></li>\n<li><em>(foo)</em> is an SExpr and is constructed as <code>Comb [ A (I \"foo\") ]</code></li>\n<li><em>3</em> as an Atom is <code>N 3</code> and as an SExpr is <code>A (N 3)</code></li>\n<li>ditto for <em>5</em> and <em>874</em></li>\n<li>the complete construction of <em>(bar (foo) 3 5 874)</em> (which is an SExpr) is  </li>\n</ul>\n\n<p>.</p>\n\n<pre><code>Comb [ A (I \"bar\")\n     , Comb [ A (I \"foo\") ]\n     , A (N 3)\n     , A (N 5)\n     , A (N 874)\n     ]\n</code></pre>\n"}], "owner": {"reputation": 37991, "user_id": 409976, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/9ccda0b49cc974197399eae01ebd6850?s=128&d=identicon&r=PG", "display_name": "Kevin Meredith", "link": "https://stackoverflow.com/users/409976/kevin-meredith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 613, "favorite_count": 1, "accepted_answer_id": 27895006, "answer_count": 2, "score": 1, "last_activity_date": 1421034284, "creation_date": 1421033205, "question_id": 27894888, "link": "https://stackoverflow.com/questions/27894888/parsing-s-expression", "title": "Parsing S Expression", "body": "<p>Given the following definitions that make up an <strong>S Expression</strong> from Prof. Yorgey's <a href=\"http://www.cis.upenn.edu/~cis194/spring13/hw/11-applicative2.pdf\" rel=\"nofollow\">course</a>:</p>\n\n<p><code>data Atom = N Integer | I Ident deriving Show</code></p>\n\n<p>and </p>\n\n<p><code>data SExpr = A Atom | Comb [SExpr]</code> \nderiving Show</p>\n\n<p>What should the full data type be (in Haskell) for the following?</p>\n\n<p><em>(bar (foo) 3 5 874)</em></p>\n"}, {"tags": ["haskell", "monads"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 3, "creation_date": 1421035040, "post_id": 27893608, "comment_id": 44191163, "body": "I think Wadler is using &quot;single-threaded&quot; in a way that&#39;s only vaguely related to the usual meaning. He defines it early in the paper as, &quot;if there are no other pointers to the array extant when the update operation is performed&quot; then the operation is single-threaded. So the trick is to show that there&#39;s only one reference to the array available at any given point in program execution."}, {"owner": {"reputation": 1622, "user_id": 1054800, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/881102db0abfb0d08ff131c472ce4991?s=128&d=identicon&r=PG", "display_name": "abelard2008", "link": "https://stackoverflow.com/users/1054800/abelard2008"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1421035824, "post_id": 27893608, "comment_id": 44191350, "body": "@DanielWagner,Thank you! After repeating to read this paper, I also saw this phrase and agreed with you!"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1421052402, "post_id": 27893608, "comment_id": 44196332, "body": "&quot;I want to know what path is best for understanding Haskell&#39;s Monad&quot;... first, there is no such thing as &quot;Haskell&#39;s Monad&quot;. Monads are <a href=\"https://en.wikipedia.org/wiki/Monad_%28category_theory%29\" rel=\"nofollow noreferrer\">a mathematical concept</a>, the properties of which can be found in various Haskell types. We then call those types <i>monads</i> and make them an instance of the <code>Monad</code> type class. That&#39;s all there is to it. \u2014 Regarding &quot;how to best understand monads&quot;, you just need to write lots of code, and fool around with whatever you think might work. Reading a general Haskell tutorial is a great starting point."}], "answers": [{"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 3, "last_activity_date": 1421073588, "last_edit_date": 1421073588, "creation_date": 1421033465, "answer_id": 27894924, "question_id": 27893608, "link": "https://stackoverflow.com/questions/27893608/whats-the-relationship-between-monad-and-single-threaded/27894924#27894924", "title": "what&#39;s the relationship between Monad and single threaded?", "body": "<p>In Haskell, something like <code>[(\"ok\", 0), (\"no\", 1)]</code> is <em>not</em> an array<code>*</code>, but rather a <em>list</em>. Haskell lists are immutable, so you don't even have to think about them changing. Arrays are another story. There are actually two very different things, both called arrays: immutable arrays and mutable arrays.</p>\n\n<p>Immutable arrays are just alternative representations of certain sorts of <em>functions</em> along with some information about their domains.</p>\n\n<p>Wadler is discussing mutable arrays, which can actually be changed. We don't actually handle these arrays directly; rather, we deal with values that serve as pointers to them. In languages like ML, Java, C, etc., you can \"follow\" a pointer any time you have one to access or modify the value(s) it points to. But that would completely break Haskell's referential transparency, which is critical to both understanding and optimizing it.</p>\n\n<p>So what we do instead is encapsulate the changes to an array within an abstract monad. All sorts of things are going on under the hood that break the rules, but what gets exposed to you, the programmer, is guaranteed to make sense. There are actually two monads that can support mutable arrays in GHC: <code>IO</code> and <code>ST s</code>. <code>ST s</code> lets you, in a pure function, make an array, mutate it all sorts of ways, and then produce a pure result. <code>IO</code>, on the other hand, lets you intermix array creation and modifications with other <code>IO</code> actions.</p>\n\n<p><code>*</code> In GHC, it might be an array, because GHC offers an extension called <code>OverloadedLists</code>, but even in GHC it's very <em>unlikely</em> to be an array.</p>\n"}], "owner": {"reputation": 1622, "user_id": 1054800, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/881102db0abfb0d08ff131c472ce4991?s=128&d=identicon&r=PG", "display_name": "abelard2008", "link": "https://stackoverflow.com/users/1054800/abelard2008"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 208, "favorite_count": 2, "answer_count": 1, "score": 3, "last_activity_date": 1421073588, "creation_date": 1421021467, "last_edit_date": 1421023209, "question_id": 27893608, "link": "https://stackoverflow.com/questions/27893608/whats-the-relationship-between-monad-and-single-threaded", "title": "what&#39;s the relationship between Monad and single threaded?", "body": "<p>When I study Monod I want to know what path is best for understanding Haskell's Monad. Many people such as <a href=\"http://bartoszmilewski.com/2011/01/09/monads-for-the-curious-programmer-part-1/\" rel=\"nofollow\">Bartosz Milewski</a> proposed that  <a href=\"http://homepages.inf.ed.ac.uk/wadler/papers/marktoberdorf/baastad.pdf\" rel=\"nofollow\">Monads for functional programming</a> is the best material. After reading a part of this paper I got the same feeling, but in <code>4.2 Array transforms</code>, I have no idea how to understand the summary about Monad as I miss some foundation in the bottom part of page 16:</p>\n\n<p>\"Making M into an abstract data type guarantees that single threading is\npreserved, and hence it is safe to implement assignment with an in-place update.\nThe use of data abstraction is essential for this purpose. Otherwise, one could\nwrite programs such as <code>(\\x -&gt; (assign i v x ; assign i w x ))</code> that violate the single threading property.\"</p>\n\n<p>I don't know why Philip Wadler discuss <code>single threading</code> here? <code>data M a = State -&gt; (a, State)</code> must be very important for guaranteeing single threading, why?</p>\n\n<p>For that I implement the code of this section <code>4.2 Array transforms</code>, where I assume that my Array is like <code>Arr [(\"ok\", 0), (\"no\", 1)]</code>, and <code>index</code> is string, value is <code>Int</code>:</p>\n\n<pre><code>type M a = State -&gt; (a, State)\ndata Arr = Arr [(Id, Val)] deriving (Show)\ntype State = Arr\ntype Id = String\ntype Val = Int\ntype Ix = Id\n\nupdate ix val arr = updateNew ix val arr (Arr [])\n           where updateNew ix val (Arr (x:xs)) (Arr newArr) = \n                case (fst x) == ix of\n                   True -&gt; Arr (newArr ++ ((ix,val):xs))\n                   False -&gt; updateNew ix val (Arr xs) (Arr (newArr ++ [x]))\n\nassign :: Ix -&gt; Val -&gt; M ()\nassign i v = \\x -&gt; ((), update i v x)\n</code></pre>\n\n<p>But this is not helpful for me to understand the above summary. I hope one enthusiastic person to explain more about it!</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "edited": false, "score": 0, "creation_date": 1421025325, "post_id": 27893511, "comment_id": 44189245, "body": "So you just want to count the number of times the words <code>[1]</code> and <code>[2]</code> occur in a string?"}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 2, "creation_date": 1421025779, "post_id": 27893511, "comment_id": 44189343, "body": "Write a function <code>f :: String -&gt; Bool</code> which is true iff the input string is a &quot;pointer&quot;. Then your function is exactly as you&#39;ve described it: <code>length . filter f . words</code>."}], "answers": [{"tags": [], "owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "is_accepted": false, "score": 1, "last_activity_date": 1421025613, "creation_date": 1421025613, "answer_id": 27894079, "question_id": 27893511, "link": "https://stackoverflow.com/questions/27893511/searching-through-a-string/27894079#27894079", "title": "Searching through a String", "body": "<p>Here is a hypothetical ghci session:</p>\n\n<pre><code>ghci&gt; words txt\n[ \"[1]\", \"and\", \"[2]\", \"are\", \"friends\", \"who\", ...]\n\nghci&gt; filter (\\w -&gt; w == \"[1]\" || w == \"[2]\") (words txt)\n[ \"[1]\", \"[2]\", \"[2]\" ]\n\nghci&gt; length ( filter (\\w -&gt; w == \"[1]\" || w == \"[2]\") (words txt) )\n3\n</code></pre>\n\n<p>You can make the last expression more readable using the <code>$</code> operator:</p>\n\n<pre><code>length $ filter (\\w -&gt; w == \"[1]\" || w == \"[2]\") $ words txt\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1421177551, "post_id": 27928429, "comment_id": 44257198, "body": "Since <code>OverloadedStrings</code> is normally off by default, you shouldn&#39;t need <code>{-# LANGUAGE NoOverloadedStrings #-}</code> unless the <code>.cabal</code> file for your project turns it on by default."}], "tags": [], "owner": {"reputation": 455, "user_id": 3094101, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/944937c3ec4c2870650aa1d4fb229f17?s=128&d=identicon&r=PG&f=1", "display_name": "leo", "link": "https://stackoverflow.com/users/3094101/leo"}, "is_accepted": false, "score": 1, "last_activity_date": 1421171778, "creation_date": 1421171778, "answer_id": 27928429, "question_id": 27893511, "link": "https://stackoverflow.com/questions/27893511/searching-through-a-string/27928429#27928429", "title": "Searching through a String", "body": "<p>If you want to be able to find all patterns of type [Int] in a string \u2013 such as [3], [465], etc. and not only [1] and [2] the easiest would be to use regular expression:</p>\n\n<pre><code>{-# LANGUAGE NoOverloadedStrings #-}\n\nimport Text.Regex.Posix\n\ntxt :: String\ntxt = \"[1] and [2] are friends who grew up together who \" ++\n      \"went to the same school and got the same degrees.\" ++\n      \"They eventually opened up a store named [2] which was pretty successful.\"\n\npointer :: String -&gt; Int\npointer source = source =~ \"\\\\[[0-9]{1,}\\\\]\"\n</code></pre>\n\n<p>We can now run:</p>\n\n<pre><code>pointer txt\n&gt; 3\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 401, "user_id": 516002, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/75dbde88be03ab4695c5eafeaf7971fd?s=128&d=identicon&r=PG", "display_name": "Bas Dirks", "link": "https://stackoverflow.com/users/516002/bas-dirks"}, "is_accepted": false, "score": 1, "last_activity_date": 1421243383, "creation_date": 1421243383, "answer_id": 27944499, "question_id": 27893511, "link": "https://stackoverflow.com/questions/27893511/searching-through-a-string/27944499#27944499", "title": "Searching through a String", "body": "<p>This works for single digit \"pointers\":</p>\n\n<pre><code>pointer :: String -&gt; Int\npointer ('[':_:']':xs) = 1 + pointer xs\npointer (_:        xs) = pointer xs\npointer _              = 0\n</code></pre>\n\n<p>This is better handled with parser combinators like those provided by ie. <a href=\"https://hackage.haskell.org/package/parsec\" rel=\"nofollow\">Parsec</a>, but this might be overkill.</p>\n"}], "owner": {"reputation": 356, "user_id": 4392949, "user_type": "registered", "accept_rate": 42, "profile_image": "https://lh5.googleusercontent.com/-nBwze4RbYJw/AAAAAAAAAAI/AAAAAAAAAE8/acyTL4RQNEk/photo.jpg?sz=128", "display_name": "Joffrey Baratheon", "link": "https://stackoverflow.com/users/4392949/joffrey-baratheon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "answer_count": 3, "score": 1, "last_activity_date": 1421243383, "creation_date": 1421020455, "last_edit_date": 1421020755, "question_id": 27893511, "link": "https://stackoverflow.com/questions/27893511/searching-through-a-string", "title": "Searching through a String", "body": "<p>I found a good example in a book that I'm trying to tackle. I'm trying to write a function called, \"pointer\" with the signature as, <code>pointer :: String -&gt; Int</code>. It is going to take text with \"pointers\" that look like, [Int], and then return the total number of pointers found.</p>\n\n<p>The text that the pointer function will examine will look like:</p>\n\n<pre><code>txt :: String\ntxt = \"[1] and [2] are friends who grew up together who \" ++\n      \"went to the same school and got the same degrees.\" ++\n      \"They eventually opened up a store named [2] which was pretty successful.\"\n</code></pre>\n\n<p>In the command line, we will run the code as follows:</p>\n\n<pre><code>&gt; pointer txt \n3\n</code></pre>\n\n<p>The 3 signifies the number of pointers that were found.</p>\n\n<p>WHAT I UNDERSTAND:</p>\n\n<ul>\n<li><p>I get that \"words\" will break down a string into a list with words.\nExample: </p>\n\n<blockquote>\n  <p>words \"where are all of these apples?\"</p>\n</blockquote>\n\n<p>[\"where\",\"are\",\"all\",\"of\",\"these\",\"apples?\"]</p></li>\n<li><p>I get that \"filter\" will choose a specific element(s) in a list.\nExample:</p>\n\n<blockquote>\n  <p>filter (>3) [1,5,6,4,3]</p>\n</blockquote>\n\n<pre><code>     [5,6,4]\n</code></pre></li>\n<li><p>I get that \"length\" will return the length of a list</p></li>\n</ul>\n\n<p>WHAT I THINK I NEED TO DO:</p>\n\n<pre><code>Step 1) look at txt and then break it down into single words until you have a long list of words.\nStep 2) use filter to examine the list for [1] or [2]. Once found, filter will place these pointers into an list.\nStep 3) call the length function on the resulting list.\n</code></pre>\n\n<p>PROBLEM BEING FACED:</p>\n\n<p>I'm having a tough time trying to take everything I know and implementing it.</p>\n"}, {"tags": ["list", "haskell", "numbers"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1421019739, "post_id": 27893357, "comment_id": 44188065, "body": "Here&#39;s a hint: try defining a helper function <code>addLnatCarry :: Int -&gt; [Int] -&gt; [Int] -&gt; [Int]</code> which takes as a first argument a carry digit (or a <code>Bool</code> telling whether there&#39;s a carry if you prefer)."}, {"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "edited": false, "score": 0, "creation_date": 1421053691, "post_id": 27893357, "comment_id": 44196933, "body": "Pro-tip: <code>[Int]</code> is <i>not</i> an array. It&#39;s a list."}, {"owner": {"reputation": 33, "user_id": 4443445, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/740f3fd4765812bc6ee5e4d1dbd51306?s=128&d=identicon&r=PG&f=1", "display_name": "Lutka", "link": "https://stackoverflow.com/users/4443445/lutka"}, "edited": false, "score": 0, "creation_date": 1421065239, "post_id": 27893357, "comment_id": 44203076, "body": "Thanks - changed array to list in the topic. It&#39;s what I thought , but that was what I was given by someone who knows the stuff."}], "answers": [{"comments": [{"owner": {"reputation": 33, "user_id": 4443445, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/740f3fd4765812bc6ee5e4d1dbd51306?s=128&d=identicon&r=PG&f=1", "display_name": "Lutka", "link": "https://stackoverflow.com/users/4443445/lutka"}, "edited": false, "score": 0, "creation_date": 1421187120, "post_id": 27893429, "comment_id": 44262546, "body": "Thanks a lot for your help :-) That&#39;s the way I took when I was starting with it. It&#39;s what I got working (what doesn&#39;t include real carry) addLnat&#39; c (x:xs) (y:ys) = d : addLnat&#39; 0 xs ys \twhere d = if c+x+y &lt; 9 then x+y else c+x+y-((quot (c+x+y) 10)*10) When I want to include real carry as a variable, it doesn&#39;t work  addLnat&#39; c (x:xs) (y:ys) = d : addLnat&#39; cr xs ys \twhere d = if c+x+y &lt; 9 then x+y else c+x+y-((quot (c+x+y) 10)*10) cr = 0 My guess is wrong syntax, but I cannot get it right :-("}], "tags": [], "owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "is_accepted": false, "score": 2, "last_activity_date": 1421019817, "creation_date": 1421019817, "answer_id": 27893429, "question_id": 27893357, "link": "https://stackoverflow.com/questions/27893357/how-to-add-values-from-two-lists-extra-condition-in-haskell/27893429#27893429", "title": "How to add values from two lists (+extra condition) in Haskell", "body": "<p>You need to write a version of addLnat which accepts a carry parameter:</p>\n\n<pre><code>addLnat' c (x:xs) (y:ys) = d : addLnat c' xs ys\n  where d = if c+x+y &gt; 9 then ... else ...\n        c' = ... the next carry bit ...\n</code></pre>\n\n<p>There are a lot more details and corner cases to consider, but this is the basic idea.\nFinally,</p>\n\n<pre><code>addLnat xs ys = addLnat' 0 xs ys  -- initially the carry is 0\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2559, "user_id": 2660970, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/31deb30c1f8cf14c92fdf597e38568a8?s=128&d=identicon&r=PG", "display_name": "ig-melnyk", "link": "https://stackoverflow.com/users/2660970/ig-melnyk"}, "is_accepted": true, "score": 2, "last_activity_date": 1421020678, "last_edit_date": 1421020678, "creation_date": 1421020335, "answer_id": 27893493, "question_id": 27893357, "link": "https://stackoverflow.com/questions/27893357/how-to-add-values-from-two-lists-extra-condition-in-haskell/27893493#27893493", "title": "How to add values from two lists (+extra condition) in Haskell", "body": "<p>I am not very good at haskell but maybe this can help ; </p>\n\n<pre><code>add::[Int]-&gt;[Int]-&gt;[Int]\nadd x y = add' 0 x y\n</code></pre>\n\n<p>There we define a function add that will use add' to add two lists The main idea is to \"save\" carry and carefully work with corner cases. Here carry is saved in \"variable\" rest </p>\n\n<pre><code>    add'::Int-&gt;[Int]-&gt;[Int]-&gt;[Int]\n    add' 0 x []      = x \n    add' rest (x:[]) (y:[]) = [(r `mod` 10),(r `div` 10)]\n       where r = x+y+rest\n    add' y (x:xs) [] = add' (r `div` 10) ((r `mod` 10):xs) [] \n       where r = x+y\n    add' rest (x:xs) (y:ys) = (r `mod` 10) : (add' (r `div` 10) xs ys)\n       where r = x+y+rest \n</code></pre>\n\n<p>List x must be bigger than list y but that's not a problem </p>\n\n<pre><code>add [5,7,8] [4,3,2]  =&gt; [9,0,1,1] (correct)\nadd [1,2,3] [4,5,6]  =&gt; [5,7,9,0] (correct)\n</code></pre>\n"}], "owner": {"reputation": 33, "user_id": 4443445, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/740f3fd4765812bc6ee5e4d1dbd51306?s=128&d=identicon&r=PG&f=1", "display_name": "Lutka", "link": "https://stackoverflow.com/users/4443445/lutka"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 688, "favorite_count": 0, "accepted_answer_id": 27893493, "answer_count": 2, "score": 3, "last_activity_date": 1421252827, "creation_date": 1421019158, "last_edit_date": 1421252827, "question_id": 27893357, "link": "https://stackoverflow.com/questions/27893357/how-to-add-values-from-two-lists-extra-condition-in-haskell", "title": "How to add values from two lists (+extra condition) in Haskell", "body": "<p>I got a problem with this exercise. I've been trying to solve it for a long time searching for stuff, but I am unable to. </p>\n\n<p>Define functions:</p>\n\n<pre><code>addLnat :: [Int] -&gt; [Int] -&gt; [Int]\nmulLnat :: [Int] -&gt; [Int] -&gt; [Int]\n</code></pre>\n\n<p>addLnat adds numbers from two arrays eg.</p>\n\n<pre><code>addLnat [4,5,6] [8,5,2] -&gt;  [2,1,9]\n</code></pre>\n\n<p>as [4+8 gives 2 carry 1, 5+5+1 gives 1 carry 1, 6+2+1 = 9]</p>\n\n<p>Lnat, is a \"list natural number\", represented as a list of base-10 digits, least significant first.  So the number 654 is [4,5,6]. </p>\n\n<p>What I got is:</p>\n\n<pre><code>addLnat :: [Int] -&gt; [Int] -&gt; [Int]\naddLnat _ [] = []\naddLnat [] _ = []\naddLnat (x:xs) (y:ys) = (if (x+y) &gt; 9 then x+y-10 else (x+y)):(addLnat xs ys)\n</code></pre>\n\n<p>I adding number and ignoring carry. Not sure how to solve it.\n<strong>Any help would be much appreciated.</strong> </p>\n\n<hr>\n\n<p>I have improved the solution as per <strong>user5402</strong> comment, so created addLnat' cr xs ys, but when I what to pass carry as a parameter it fails to load - most probable that I am getting the syntax wrong:(\n(cr is 0 only for now and it will be replaced by maths).</p>\n\n<pre><code>addLnat' c (x:xs) (y:ys) = d : addLnat' cr xs ys \nwhere d = if c+x+y &lt; 9 then x+y else c+x+y-((quot (c+x+y) 10)*10) \ncr = 0 \n</code></pre>\n\n<p>Any ideas?  </p>\n"}, {"tags": ["haskell", "dependent-type", "data-kinds", "type-kinds"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 3, "creation_date": 1421018651, "post_id": 27893092, "comment_id": 44187790, "body": "The use of <code>DataKinds</code> means every data declaration creates a fresh kind, doesn&#39;t it? e.g. <code>data Nat = Z | S Nat</code> creates a new kind <code>Nat</code> inhabited by types <code>Z :: Nat</code> and <code>S :: Nat -&gt; Nat</code>."}, {"owner": {"reputation": 3644, "user_id": 1465116, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1987d0ba73cb23a47a25dbfe0b36106e?s=128&d=identicon&r=PG", "display_name": "Athan Clark", "link": "https://stackoverflow.com/users/1465116/athan-clark"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1421018781, "post_id": 27893092, "comment_id": 44187828, "body": "That&#39;s correct, but only if the promoted type is a proper Haskell98 data type. In my case, I&#39;m finding myself needing to promote something that looks like <code>data Foo (x :: Bar) (y :: Bar) = Foo | ...</code>, where <code>Bar</code> is a kind. This won&#39;t promote with <code>-XDataKinds</code> - I will need to <i>manually</i> promote it, with the same names. This would also be really useful for wanting to promote GADTs, too."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1421019473, "post_id": 27893092, "comment_id": 44188016, "body": "I&#39;ve read your question several times now, and I&#39;m having a bit of trouble figuring out just what it is you need/are proposing. It <i>seems</i> like you are asking to declare a new kind inhabited by some new types that are themselves inhabited at the term level -- which at the moment is impossible. Is that what you are asking for, or something else? If it&#39;s something else, a smallish use case would be quite illuminating. As for promoting GADTs, I believe that is still an open research question."}, {"owner": {"reputation": 3644, "user_id": 1465116, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1987d0ba73cb23a47a25dbfe0b36106e?s=128&d=identicon&r=PG", "display_name": "Athan Clark", "link": "https://stackoverflow.com/users/1465116/athan-clark"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1421076290, "post_id": 27893092, "comment_id": 44209839, "body": "@DanielWagner You&#39;re very close. I&#39;m not sure if I need the types inhabited at the term level (like singletons), but I very much would like to declare a kind independent of it&#39;s types, then ad-hoc declare types to be inhabitants of the previously defined kind.  It&#39;s not clear, I know, but if I could simply declare a Kind, then create inhabitant types of that kind in a different expression, that would be ideal. I&#39;m not sure if I <i>need</i> terms for these types, but they wouldn&#39;t hurt either.  Ideally, I would like to do <code>data FooKind :: BOX where</code>, then <code>data Bar a :: FooKind where ...</code>."}, {"owner": {"reputation": 12426, "user_id": 570682, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/f9d9bb1af07214310ce8bd601760492a?s=128&d=identicon&r=PG", "display_name": "Lambdageek", "link": "https://stackoverflow.com/users/570682/lambdageek"}, "edited": false, "score": 1, "creation_date": 1421077185, "post_id": 27893092, "comment_id": 44210355, "body": "@AthanClark I think you&#39;re asking if there&#39;s a way to declare new open world kinds in GHC in addition to <code>k1 -&gt; ... kN -&gt; *</code> and <code>k1 -&gt; ... -&gt; kM -&gt; Constraint</code>.  As far as I know, the answer is &quot;no&quot;.  All the other kinds in GHC arise as promotions of (closed) datatypes."}], "answers": [{"comments": [{"owner": {"reputation": 3644, "user_id": 1465116, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1987d0ba73cb23a47a25dbfe0b36106e?s=128&d=identicon&r=PG", "display_name": "Athan Clark", "link": "https://stackoverflow.com/users/1465116/athan-clark"}, "edited": false, "score": 0, "creation_date": 1421079803, "post_id": 27905706, "comment_id": 44212030, "body": "Systems like Agda help alleviate this need, correct?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 3644, "user_id": 1465116, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1987d0ba73cb23a47a25dbfe0b36106e?s=128&d=identicon&r=PG", "display_name": "Athan Clark", "link": "https://stackoverflow.com/users/1465116/athan-clark"}, "edited": false, "score": 2, "creation_date": 1421082310, "post_id": 27905706, "comment_id": 44213506, "body": "@AthanClark I&#39;m not an Agda expert, and I don&#39;t know whether it supports declaring open types (at higher strata) or not. I would be kind of surprised if it did."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 1, "last_activity_date": 1421077573, "creation_date": 1421077573, "answer_id": 27905706, "question_id": 27893092, "link": "https://stackoverflow.com/questions/27893092/declaring-and-working-with-kinds-in-haskell/27905706#27905706", "title": "Declaring and working with Kinds in Haskell", "body": "<p>In current GHC (7.8 at time of writing), one cannot separate the declaration of a fresh kind from the declaration of its type-level inhabitants.</p>\n"}], "owner": {"reputation": 3644, "user_id": 1465116, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/1987d0ba73cb23a47a25dbfe0b36106e?s=128&d=identicon&r=PG", "display_name": "Athan Clark", "link": "https://stackoverflow.com/users/1465116/athan-clark"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 122, "favorite_count": 1, "accepted_answer_id": 27905706, "answer_count": 1, "score": 3, "last_activity_date": 1421077573, "creation_date": 1421017164, "last_edit_date": 1421018327, "question_id": 27893092, "link": "https://stackoverflow.com/questions/27893092/declaring-and-working-with-kinds-in-haskell", "title": "Declaring and working with Kinds in Haskell", "body": "<p>I've been playing with Haskell's <code>-XDataKinds</code> feature quite a lot recently, and have found myself wanting to <em>create</em> a kind.</p>\n\n<p>I'm not sure if my wishes can come true, but from Edward Kmett's <a href=\"http://hackage.haskell.org/package/constraints-0.4.1.3/docs/Data-Constraint.html\" rel=\"nofollow\">constraints package</a>, there seems to be a declared kind <code>Constraint</code> (with sort <code>BOX</code>), which says to be defined in <code>GHC.Prim</code>, but I couldn't find it.</p>\n\n<p>Is there any way to declare a kind in Haskell or GHC, manually? This would probably need manual assertion that data types declared with <code>data</code> would be of the proper kind. My idea is something like the following:</p>\n\n<pre><code>data Foo :: BOX\n\ndata Bar a :: Foo where\n  Bar :: a -&gt; Bar a\n</code></pre>\n"}, {"tags": ["haskell", "parallel-processing", "set"], "answers": [{"comments": [{"owner": {"reputation": 307, "user_id": 2977382, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/3bd2926aaeeb439998afe8de517106df?s=128&d=identicon&r=PG&f=1", "display_name": "terminix00", "link": "https://stackoverflow.com/users/2977382/terminix00"}, "edited": false, "score": 0, "creation_date": 1421075956, "post_id": 27892889, "comment_id": 44209619, "body": "I see. So building the branches where the element is exponentiated and when it is not takes care of all the possible subsequences? Thanks."}], "tags": [], "owner": {"reputation": 2027, "user_id": 270654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6db8e6e1cf36dfcc4c4d59e4b5827344?s=128&d=identicon&r=PG", "display_name": "nemetroid", "link": "https://stackoverflow.com/users/270654/nemetroid"}, "is_accepted": false, "score": 2, "last_activity_date": 1421015850, "creation_date": 1421015850, "answer_id": 27892889, "question_id": 27892435, "link": "https://stackoverflow.com/questions/27892435/optimization-possible-or-use-parallel-computing/27892889#27892889", "title": "Optimization possible or use parallel computing", "body": "<p>As you suggest, there is some room for optimization here without resorting to parallelizing things (which, keep in mind, can at best give a 4x speedup if you're going from one to four parallel threads).</p>\n\n<p>What the <code>subsequences</code> function is doing is essentially going through the list, and for each element it creates two execution branches: one where that element is included, and one where it isn't. I.e., <code>subsequences [1,2,3]</code> does:</p>\n\n<pre><code>                           start\n                   /-------/   \\-------\\         (take 1 or not)\n             [1,..]                    [..]\n            /      \\                  /    \\     (take 2 or not)\n    [1,2,..]        [1,..]       [2,..]    [..]\n      /  \\           /  \\         /  \\     /  \\  (take 3 or not)\n[1,2,3]  [1,2]   [1,3]  [1]   [2,3]  [2] [3]  []\n</code></pre>\n\n<p>The result of <code>subsequences [1,2,3]</code> is then a list containing the leaf nodes at the bottom.</p>\n\n<p>Now, at each of the intermediate nodes (i.e. <code>[1,2,..]</code>), we can check the result of applying the value function (i.e., the sum of squares or cubes or etc.) to the numbers already taken. If we're already above the target, there's no point in continuing that branch. If we write this subsequence generation logic by ourselves, we can do that:</p>\n\n<pre><code>findNums :: Int -&gt; Int -&gt; Int\nfindNums a b = findNums' a b 1 0\n\nfindNums' :: Int -&gt; Int -&gt; Int -&gt; Int -&gt; Int\nfindNums' a b c s\n  | s + c^b &gt; a  = 0\n  | s + c^b == a = 1\n  | otherwise    = findNums' a b (c+1) (s + c^b) +\n                   findNums' a b (c+1) s\n</code></pre>\n\n<p>Here <code>c</code> is our counter and <code>s</code> is the sum of the powers of the numbers we have picked. There are three cases in <code>findNums'</code>:</p>\n\n<p>In the first case, we check whether including this number would make us go above target. In that case, this branch is not going to give any valid results, so we terminate it and indicate that it contains no solution by returning 0.</p>\n\n<p>In the second case, we check whether including this number would put us right on spot. In that case we return 1, essentially noting that we have found a solution.</p>\n\n<p>If none of these are true, we recurse further with two different branches: one where we add <code>c^b</code> to our sum, and one where we refrain from doing so. We add the results together, which means that the result here will be the number of branches below this point that have found a valid solution.</p>\n"}, {"comments": [{"owner": {"reputation": 307, "user_id": 2977382, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/3bd2926aaeeb439998afe8de517106df?s=128&d=identicon&r=PG&f=1", "display_name": "terminix00", "link": "https://stackoverflow.com/users/2977382/terminix00"}, "edited": false, "score": 0, "creation_date": 1421020902, "post_id": 27893057, "comment_id": 44188331, "body": "Oh my lord. I don&#39;t know where to begin to understand whats going on. I understand the purpose of the benchmarking. I understand that you are creating a &quot;Forest&quot; with subsequencesTree. I&#39;ll start with that function first. In this part <code>subsequencesTree (x:xs) = Node x rest : rest where rest = subsequencesTree xs</code>, I see how you are creating a node but I am not sure how you are placing it inside the forest. Is there an in depth explanation for this behavior?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 307, "user_id": 2977382, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/3bd2926aaeeb439998afe8de517106df?s=128&d=identicon&r=PG&f=1", "display_name": "terminix00", "link": "https://stackoverflow.com/users/2977382/terminix00"}, "edited": false, "score": 0, "creation_date": 1421022348, "post_id": 27893057, "comment_id": 44188634, "body": "@user2977382 Well, <code>type Forest a = [Tree a]</code>, right? So a forest is just a list of trees. And the subsequences of <code>xs</code> either include the first element of <code>xs</code> or they don&#39;t. So <code>Node x rest</code> is a tree where all paths start with the element <code>x</code>, and <code>rest</code> is a forest where each tree has paths that don&#39;t start with <code>x</code>. And <code>Node x rest : rest</code> is the forest that includes both -- hence has paths that include <code>x</code> and paths that don&#39;t."}, {"owner": {"reputation": 307, "user_id": 2977382, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/3bd2926aaeeb439998afe8de517106df?s=128&d=identicon&r=PG&f=1", "display_name": "terminix00", "link": "https://stackoverflow.com/users/2977382/terminix00"}, "edited": false, "score": 0, "creation_date": 1421025917, "post_id": 27893057, "comment_id": 44189378, "body": "Okay, this tree constructs all the possible sequences? And you are sifting out the relevant trees with takeWhileTree based on the predicate of the sum of the tree being less than a?"}, {"owner": {"reputation": 307, "user_id": 2977382, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/3bd2926aaeeb439998afe8de517106df?s=128&d=identicon&r=PG&f=1", "display_name": "terminix00", "link": "https://stackoverflow.com/users/2977382/terminix00"}, "edited": false, "score": 0, "creation_date": 1421087025, "post_id": 27893057, "comment_id": 44215979, "body": "Kind of unrelated but I had a question on Monoids and Monads that I would like clarification on. From what I think I understand is that Monoids are functors that map objects to objects inside of a group? Monads are a subset of Monoids where the objects are functions? Is this thinking correct?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 307, "user_id": 2977382, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/3bd2926aaeeb439998afe8de517106df?s=128&d=identicon&r=PG&f=1", "display_name": "terminix00", "link": "https://stackoverflow.com/users/2977382/terminix00"}, "edited": false, "score": 0, "creation_date": 1421087285, "post_id": 27893057, "comment_id": 44216104, "body": "@user2977382 That is probably worth fleshing out into a complete question on MathOverflow, or perhaps even here in the haskell tag of StackOverflow. A comment can&#39;t really do the question justice (I&#39;m not sure I understand your proposed equivalences yet) and certainly won&#39;t do the answer justice. In particular, the kinds of monoids and monads don&#39;t match, so any statement like &quot;monoids are monads&quot; or &quot;monads are monoids&quot; are going to need a bit of careful detail to make sense."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 7, "last_activity_date": 1421018538, "last_edit_date": 1421018538, "creation_date": 1421016934, "answer_id": 27893057, "question_id": 27892435, "link": "https://stackoverflow.com/questions/27892435/optimization-possible-or-use-parallel-computing/27893057#27893057", "title": "Optimization possible or use parallel computing", "body": "<p>Let's take a tour through a few things.</p>\n\n<h1>Benchmarking</h1>\n\n<p>First up: let's make sure we're actually making improvements as we go! For that, we'll need some benchmarks. The <a href=\"http://hackage.haskell.org/package/criterion\" rel=\"noreferrer\">criterion</a> package is perfect for this. We'll also make sure to compile with optimizations (so <code>-O2</code> on all calls to GHC). Here's how simple setting up a benchmark can be:</p>\n\n<pre><code>import Criterion.Main\n\n-- your code goes here\n\nmain = defaultMain\n    [ bench \"findNums 100 2\" (nf (uncurry findNums) (100, 2))\n    , bench \"findNums 800 2\" (nf (uncurry findNums) (800, 2))\n    ]\n</code></pre>\n\n<p>One could also implement the benchmark as <code>nf (findNums 100) 2</code>, but I choose this way so that we can't \"cheat\" by precomputing a lookup table for <code>100</code>, thus pushing all the work into the benchmark setup rather than the part where the benchmark is actually run. Here's the result for the original implementation:</p>\n\n<pre><code>benchmarking 100 2\ntime                 762.7 ns   (757.4 ns .. 768.5 ns)\n                     1.000 R\u00b2   (1.000 R\u00b2 .. 1.000 R\u00b2)\nmean                 762.5 ns   (760.4 ns .. 765.3 ns)\nstd dev              7.706 ns   (6.378 ns .. 10.59 ns)\n\nbenchmarking 800 2\ntime                 29.17 s    (28.28 s .. 29.87 s)\n                     1.000 R\u00b2   (1.000 R\u00b2 .. 1.000 R\u00b2)\nmean                 29.26 s    (29.08 s .. 29.35 s)\nstd dev              159.2 ms   (0.0 s .. 165.2 ms)\nvariance introduced by outliers: 19% (moderately inflated)\n</code></pre>\n\n<h1>Use libraries</h1>\n\n<p>Now, the low-hanging fruit is to use existing implementations of things and hope their authors did something better than us. To that end, we'll use the standard function <code>(^)</code> instead of <code>pow</code>, and <code>integerRoot</code> from the <a href=\"http://hackage.haskell.org/package/arithmoi\" rel=\"noreferrer\">arithmoi</a> package instead of <code>root</code>. Additionally, we'll swap out the lazy <code>foldr</code> for a strict <code>foldl</code>. For my own sanity, I also reformatted the very long line into short ones. The full result now looks like this:</p>\n\n<pre><code>import Criterion.Main\nimport Data.List\nimport Math.NumberTheory.Powers\n\nsum' :: Num a =&gt; [a] -&gt; a\nsum' = foldl' (+) 0\n\nfindNums :: Int -&gt; Int -&gt; Int\nfindNums a b = length\n    [ xs\n    | xs &lt;- drop 1 . subsequences $ [x ^ b | x &lt;- [1..c]]\n    , sum' xs == a\n    ] where c = integerRoot b a\n\nmain = defaultMain\n    [ bench \"100 2\" (nf (uncurry findNums) (100, 2))\n    , bench \"800 2\" (nf (uncurry findNums) (800, 2))\n    ]\n</code></pre>\n\n<p>Benchmark results look like this now:</p>\n\n<pre><code>benchmarking 100 2\ntime                 722.8 ns   (721.3 ns .. 724.3 ns)\n                     1.000 R\u00b2   (1.000 R\u00b2 .. 1.000 R\u00b2)\nmean                 722.6 ns   (721.4 ns .. 724.1 ns)\nstd dev              4.440 ns   (3.738 ns .. 5.674 ns)\n\nbenchmarking 800 2\ntime                 17.16 s    (16.93 s .. 17.64 s)\n                     1.000 R\u00b2   (1.000 R\u00b2 .. 1.000 R\u00b2)\nmean                 17.05 s    (16.99 s .. 17.15 s)\nstd dev              88.10 ms   (0.0 s .. 94.58 ms)\n</code></pre>\n\n<p>A little under twice as fast with very little effort. Nice!</p>\n\n<h1>Better algorithm</h1>\n\n<p>A significant problem with <code>subsequences</code> is that, even if we compute that <code>sum' [x,y,z] &gt; a</code>, we still look at all the longer subsequences that start with <code>[x,y,z]</code>. Given the structure of <code>subsequences</code>' return type, there's not much we can do about that; so let's design an implementation that gives us a bit more structure. We'll build a tree, where paths from the root to any internal node give us a subsequence.</p>\n\n<pre><code>import Data.Tree\n\nsubsequences :: [a] -&gt; Forest a\nsubsequences [] = []\nsubsequences (x:xs) = Node x rest : rest where\n    rest = subsequences xs\n</code></pre>\n\n<p>(Just for fun, this produces exponentially large semantic trees with very small space usage -- roughly as much space as the original list -- due to aggressive subtree sharing.) What's cool about this representation is if we break off the search, we cut off huge swaths of uninteresting results. This can be realized by implementing something like <code>takeWhile</code> for lists:</p>\n\n<pre><code>takeWhileTree :: Monoid m =&gt; (m -&gt; Bool) -&gt; Forest m -&gt; Forest m\ntakeWhileTree predicate = goForest mempty where\n    goForest m forest = forest &gt;&gt;= goTree m\n    goTree   m (Node m' children) =\n        [Node m (goForest (m &lt;&gt; m') children) | predicate m']\n</code></pre>\n\n<p>Let's give it a try. Complete code is now:</p>\n\n<pre><code>import Criterion.Main\nimport Data.Foldable\nimport Data.Monoid\nimport Data.Tree\nimport Math.NumberTheory.Powers\n\nsubsequencesTree :: [a] -&gt; Forest a\nsubsequencesTree [] = []\nsubsequencesTree (x:xs) = Node x rest : rest where\n    rest = subsequencesTree xs\n\ntakeWhileTree :: Monoid m =&gt; (m -&gt; Bool) -&gt; Forest m -&gt; Forest m\ntakeWhileTree predicate = goForest mempty where\n    goForest m forest = forest &gt;&gt;= goTree m\n    goTree   m (Node m' children) = let m'' = m &lt;&gt; m' in\n        [Node m' (goForest m'' children) | predicate m'']\n\nleaves :: Forest a -&gt; [[a]]\nleaves [] = [[]]\nleaves forest = do\n    Node x children &lt;- forest\n    xs &lt;- leaves children\n    return (x:xs)\n\nfindNums :: Int -&gt; Int -&gt; Int\nfindNums a b = length\n    [ xs\n    | xs &lt;- leaves\n          . takeWhileTree (&lt;= Sum a)\n          . subsequencesTree\n          $ [Sum (x ^ b) | x &lt;- [1..c]]\n    , fold xs == Sum a\n    ] where c = integerRoot b a\n\nmain = defaultMain\n    [ bench \"100 2\" (nf (uncurry findNums) (100, 2))\n    , bench \"800 2\" (nf (uncurry findNums) (800, 2))\n    ]\n</code></pre>\n\n<p>This looks like a lot of work, but from the timings, it really pays off:</p>\n\n<pre><code>benchmarking 100 2\ntime                 16.67 \u03bcs   (16.53 \u03bcs .. 16.77 \u03bcs)\n                     0.999 R\u00b2   (0.999 R\u00b2 .. 1.000 R\u00b2)\nmean                 16.60 \u03bcs   (16.52 \u03bcs .. 16.72 \u03bcs)\nstd dev              325.4 ns   (270.5 ns .. 444.1 ns)\nvariance introduced by outliers: 17% (moderately inflated)\n\nbenchmarking 800 2\ntime                 22.59 ms   (22.26 ms .. 22.89 ms)\n                     0.999 R\u00b2   (0.999 R\u00b2 .. 1.000 R\u00b2)\nmean                 22.44 ms   (22.34 ms .. 22.57 ms)\nstd dev              260.3 \u03bcs   (191.6 \u03bcs .. 332.2 \u03bcs)\n</code></pre>\n\n<p>That's a speedup factor of about 1000 on <code>findNums 800 2</code>.</p>\n\n<h1>Parallelization</h1>\n\n<p>I had a go at parallelizing this by using <code>concat</code> and <code>parMap</code> in <code>takeWhileTree</code> instead of <code>(&gt;&gt;=)</code>, so that separate branches of the tree would be explored in parallel. In every case the overhead of parallelizing far outweighed the benefit of having several threads. Good thing we put that benchmark in place at the beginning!</p>\n"}, {"tags": [], "owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "is_accepted": false, "score": 0, "last_activity_date": 1421018746, "last_edit_date": 1421018746, "creation_date": 1421017866, "answer_id": 27893189, "question_id": 27892435, "link": "https://stackoverflow.com/questions/27892435/optimization-possible-or-use-parallel-computing/27893189#27893189", "title": "Optimization possible or use parallel computing", "body": "<p>In this case it is useful to write a function which returns\nthe actual sequences because that function can be written\nrecursively in terms of itself.</p>\n\n<p>To simplify things, let's just consider sums of squares.\nAlso, we will first consider ordered sequences (with\nrepeated values allowed); later we will look at how to modify the\nalgorithm to produce only unordered sequences without any repeated\nnumbers.</p>\n\n<p>Here is our first attempt. The algorithm is based on this idea:</p>\n\n<blockquote>\n  <p>Idea 1:</p>\n  \n  <p>To obtain a sequence whose sum of squares is <em>n</em>, first\n  pick a value <em>c</em> and a sequence <em>xs</em> whose sum of squares\n  is <em>n-c*c</em> and put the two together.</p>\n</blockquote>\n\n<pre><code> -- an integer sqrt function\n isqrt n = floor $ (sqrt (fromIntegral n) :: Double)\n\n pows2a :: Int -&gt; [ [Int] ]\n pows2a n\n   | n &lt; 0     = []\n   | n == 0    = [ [] ]\n   | otherwise = [ (c:xs) | c &lt;- [start,start-1..1], xs &lt;- pows2a (n-c*c) ]\n     where start = isqrt n\n</code></pre>\n\n<p>This works, but returns permutations of solutions as well as solutions with\nrepeated elements - e.g. <code>pos2a 6</code> returns <code>[2,1,1]</code>, <code>[1,2,1]</code>, <code>[1,1,2]</code> and <code>[1,1,1,1,1,1]</code>.</p>\n\n<p>To only return unordered sequences (without repetition) we\nuse this idea:</p>\n\n<blockquote>\n  <p>Idea 2:</p>\n  \n  <p>To obtain a sequence whose sum of squares is <em>n</em>, first\n  pick a value <em>c</em> and a sequence <em>xs</em> whose sum of squares\n  is <em>n-c*c</em> and all of whose elements are &lt; <em>c</em> and\n  put the two together.</p>\n</blockquote>\n\n<p>This is just a slight modification of our first algorithm:</p>\n\n<pre><code> pows2b :: Int -&gt; [[Int]]\n pows2b n\n   | n &lt; 0     = []\n   | n == 0    = [ [] ]\n   | otherwise =  [ (c:xs) | c &lt;- [start, start-1..1], xs &lt;- pows2b (n-c*c), all (&lt; c) xs ]\n   where\n     start = isqrt n\n</code></pre>\n\n<p>This works but a call like <code>pows2b 100</code> takes a long time to complete because we are making calls to <code>pows2b</code> with the same argument multiple times.</p>\n\n<p>We can solve that problem by memoizing the results, and this is what <code>pows2c</code> does:</p>\n\n<pre><code> powslist = map pows2c [0..]\n pows2c n\n   | n == 0    = [ [] ]\n   | otherwise = [ (c:xs) | c &lt;- [s,s-1..1], xs &lt;- powslist !! (n-c*c), all (&lt; c) xs ]\n   where s = isqrt n\n</code></pre>\n\n<p>Here the recursive call with argument <code>n-c*c</code> is replaced by a lookup into a list which is a way of caching the answer.</p>\n"}], "owner": {"reputation": 307, "user_id": 2977382, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/3bd2926aaeeb439998afe8de517106df?s=128&d=identicon&r=PG&f=1", "display_name": "terminix00", "link": "https://stackoverflow.com/users/2977382/terminix00"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 127, "favorite_count": 1, "accepted_answer_id": 27893057, "answer_count": 3, "score": 1, "last_activity_date": 1421018746, "creation_date": 1421012621, "last_edit_date": 1421013033, "question_id": 27892435, "link": "https://stackoverflow.com/questions/27892435/optimization-possible-or-use-parallel-computing", "title": "Optimization possible or use parallel computing", "body": "<p>I have this problem where I need to find the number of sums of powers that are equal to a number. So for example:</p>\n\n<p>An input of \n<code>100 2</code> would yield an output of <code>3</code> because <code>100 = 10^2 = 6^2 + 8^2 = 1^2 + 3^2 + 4^2 + 5^2 + 7^2</code> and an input of <code>100 3</code> would yield an output of 1 because <code>100 = 1^3 + 2^3 + 3^3 + 4^3</code> </p>\n\n<p>So my function for solving this problem is:</p>\n\n<pre><code>findNums :: Int -&gt; Int -&gt; Int\nfindNums a b = length [xs | xs &lt;- (drop 1 .) subsequences [pow x b | x &lt;- [1..c]], foldr (+) (head xs) (tail xs) == a] where c = root a b 0 \n\nroot :: Int -&gt; Int -&gt; Int -&gt; Int\nroot n a i\n    | pow i a &lt;= n &amp;&amp; pow (i+1) a &gt; n = i\n    | otherwise = root n a (i+1)\n\npow :: Int -&gt; Int -&gt; Int\npow _ 0 = 1\npow n a = n * pow n (a - 1)\n</code></pre>\n\n<p>I find all the possible values that are able to be in my set of numbers that will add up to the desired number. Then I find all possible sublists inside that list and see how many of those add up to the desired number. This works but since it is an exhaustive search it takes a long time for inputs like <code>800 2</code>. Is it possible to optimize the sequences such  that only the \"plausible\" subsequences are returned? Or is it better to look at parallel computation for this sort of problem?</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 247, "user_id": 4441586, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-wtwj0CDF2fU/AAAAAAAAAAI/AAAAAAAAABI/MKN2fXgHWc4/photo.jpg?sz=128", "display_name": "Jubl", "link": "https://stackoverflow.com/users/4441586/jubl"}, "edited": false, "score": 0, "creation_date": 1421013163, "post_id": 27892176, "comment_id": 44186195, "body": "I updated my question. I have a function that creates a list of Ints (year&#39;) and a function that finds the sum of a list of Ints (sum&#39;), but I am having trouble tying it all together."}], "tags": [], "owner": {"reputation": 713, "user_id": 2123737, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/319770365a555574de7b3994c63c3c27?s=128&d=identicon&r=PG", "display_name": "Syd Kerckhove", "link": "https://stackoverflow.com/users/2123737/syd-kerckhove"}, "is_accepted": false, "score": 0, "last_activity_date": 1421011252, "last_edit_date": 1492087233, "creation_date": 1421010826, "answer_id": 27892176, "question_id": 27892035, "link": "https://stackoverflow.com/questions/27892035/list-average-for-ints/27892176#27892176", "title": "List Average for Ints", "body": "<p>Hint:</p>\n\n<pre><code>year' :: [(String, String, Int)] -&gt; [Int]\nyear' = map (\\(_,_,i) -&gt; i)\n</code></pre>\n\n<p>Oh, and if you find something that works, put it up on <a href=\"https://codereview.stackexchange.com/\">https://codereview.stackexchange.com/</a> , as you say you're new to Haskell.</p>\n"}, {"comments": [{"owner": {"reputation": 247, "user_id": 4441586, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-wtwj0CDF2fU/AAAAAAAAAAI/AAAAAAAAABI/MKN2fXgHWc4/photo.jpg?sz=128", "display_name": "Jubl", "link": "https://stackoverflow.com/users/4441586/jubl"}, "edited": false, "score": 0, "creation_date": 1421014765, "post_id": 27892304, "comment_id": 44186621, "body": "I&#39;m a bit confused on where you&#39;re getting &quot;books&quot; from and what the year function is supposed to look like. I&#39;m still pretty lost. Also, the avgPub is not supposed to take in one argument of a string so &quot;avgPub books = average (years books)&quot; doesn&#39;t quite make sense (avgPub :: [(String, String, Int)] -&gt; Int)."}, {"owner": {"reputation": 2027, "user_id": 270654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6db8e6e1cf36dfcc4c4d59e4b5827344?s=128&d=identicon&r=PG", "display_name": "nemetroid", "link": "https://stackoverflow.com/users/270654/nemetroid"}, "reply_to_user": {"reputation": 247, "user_id": 4441586, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-wtwj0CDF2fU/AAAAAAAAAAI/AAAAAAAAABI/MKN2fXgHWc4/photo.jpg?sz=128", "display_name": "Jubl", "link": "https://stackoverflow.com/users/4441586/jubl"}, "edited": false, "score": 0, "creation_date": 1421016049, "post_id": 27892304, "comment_id": 44186997, "body": "<code>books</code> is just the name of the first argument to <code>avgPub</code>. It doesn&#39;t have to represent a string, it can be a <code>[(String, String, Int)]</code>. I added in how <code>year</code> can be written."}, {"owner": {"reputation": 247, "user_id": 4441586, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-wtwj0CDF2fU/AAAAAAAAAAI/AAAAAAAAABI/MKN2fXgHWc4/photo.jpg?sz=128", "display_name": "Jubl", "link": "https://stackoverflow.com/users/4441586/jubl"}, "edited": false, "score": 0, "creation_date": 1421021689, "post_id": 27892304, "comment_id": 44188476, "body": "Thank you for your time! This was EXTREMELY helpful!"}], "tags": [], "owner": {"reputation": 2027, "user_id": 270654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6db8e6e1cf36dfcc4c4d59e4b5827344?s=128&d=identicon&r=PG", "display_name": "nemetroid", "link": "https://stackoverflow.com/users/270654/nemetroid"}, "is_accepted": true, "score": 2, "last_activity_date": 1421016033, "last_edit_date": 1421016033, "creation_date": 1421011654, "answer_id": 27892304, "question_id": 27892035, "link": "https://stackoverflow.com/questions/27892035/list-average-for-ints/27892304#27892304", "title": "List Average for Ints", "body": "<p>You're on the right track with <code>year' :: [(String, String, Int)] -&gt; Int</code>. You want to somehow extract the year field from all the records to be able to average them.</p>\n\n<p>The easiest way to do this is to write a function that takes a <em>single</em> record and extracts the year. I.e. like this:</p>\n\n<pre><code>year :: (String, String, Int) -&gt; Int\nyear (_, _, i) = i\n</code></pre>\n\n<p>(note that the first argument is not a list)</p>\n\n<p>Then you can make another function, <code>years</code>, to get a list of <code>Int</code>s from a list of records:</p>\n\n<pre><code>years :: [(String, String, Int)] -&gt; [Int]\nyears xs = map year xs\n</code></pre>\n\n<p>Then all you need to do is to put this together with code for calculating the average of a list of <code>Int</code>s:</p>\n\n<pre><code>average :: [Int] -&gt; Int\naverage xs = (sum xs) `div` (length xs)\n</code></pre>\n\n<p>To tie it together:</p>\n\n<pre><code>avgPub books = average (years books)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 247, "user_id": 4441586, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-wtwj0CDF2fU/AAAAAAAAAAI/AAAAAAAAABI/MKN2fXgHWc4/photo.jpg?sz=128", "display_name": "Jubl", "link": "https://stackoverflow.com/users/4441586/jubl"}, "edited": false, "score": 0, "creation_date": 1421016200, "post_id": 27892765, "comment_id": 44187051, "body": "I&#39;m pretty confused right now so let me back up. I have a function called avgPub which takes a list of 2 Strings and an Int. The user can type in the command line multiple sets of books (e.g. avgPub [(&quot;publisher&quot;, &quot;book&quot;, 1920), (&quot;publisher1&quot;, &quot;book1&quot;, 1989), (&quot;publisher2&quot;, &quot;book2&quot;, 1920)...]). I understand how to extract the years and place them into a list, as shown by my &quot; year&#39; &quot; function. I know how to find the average of a list, as shown by my average&#39; function. That being said, I still don&#39;t understand how to apply what you suggested into the information that I have."}, {"owner": {"reputation": 247, "user_id": 4441586, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-wtwj0CDF2fU/AAAAAAAAAAI/AAAAAAAAABI/MKN2fXgHWc4/photo.jpg?sz=128", "display_name": "Jubl", "link": "https://stackoverflow.com/users/4441586/jubl"}, "edited": false, "score": 0, "creation_date": 1421017137, "post_id": 27892765, "comment_id": 44187316, "body": "According to what you are saying, I&#39;m getting this (link to JPG screenshot): <a href=\"http://puu.sh/eoiL7/8e03d849df.png\" rel=\"nofollow noreferrer\">puu.sh/eoiL7/8e03d849df.png</a> , but I can&#39;t figure out how to get it to work. I&#39;m getting these errors: <a href=\"http://puu.sh/eoiZr/ffacf90de6.png\" rel=\"nofollow noreferrer\">puu.sh/eoiZr/ffacf90de6.png</a>"}, {"owner": {"reputation": 34889, "user_id": 86604, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/329af917389e6cf8e146c03012f5319a?s=128&d=identicon&r=PG", "display_name": "Ingo", "link": "https://stackoverflow.com/users/86604/ingo"}, "reply_to_user": {"reputation": 247, "user_id": 4441586, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-wtwj0CDF2fU/AAAAAAAAAAI/AAAAAAAAABI/MKN2fXgHWc4/photo.jpg?sz=128", "display_name": "Jubl", "link": "https://stackoverflow.com/users/4441586/jubl"}, "edited": false, "score": 0, "creation_date": 1421086950, "post_id": 27892765, "comment_id": 44215947, "body": "This is because your year&#39; function should be (String,String,Int) -&gt; Int. Adapt the type and remove the map from it. (I know you followed the advice of someone, but honestly, think about how you would extract the year from a single book that is not in a list?)"}], "tags": [], "owner": {"reputation": 34889, "user_id": 86604, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/329af917389e6cf8e146c03012f5319a?s=128&d=identicon&r=PG", "display_name": "Ingo", "link": "https://stackoverflow.com/users/86604/ingo"}, "is_accepted": false, "score": 0, "last_activity_date": 1421014904, "creation_date": 1421014904, "answer_id": 27892765, "question_id": 27892035, "link": "https://stackoverflow.com/questions/27892035/list-average-for-ints/27892765#27892765", "title": "List Average for Ints", "body": "<p>For the \"tying it all together\" part, as a beginner, you can write code in the following style:</p>\n\n<pre><code>avgPub books = result where\n    result = average yearlist\n    yearlist = map year' books\n</code></pre>\n\n<p>After a while, you'll shorten this to</p>\n\n<pre><code>avgPub = average . map year'\n</code></pre>\n"}], "owner": {"reputation": 247, "user_id": 4441586, "user_type": "registered", "accept_rate": 64, "profile_image": "https://lh5.googleusercontent.com/-wtwj0CDF2fU/AAAAAAAAAAI/AAAAAAAAABI/MKN2fXgHWc4/photo.jpg?sz=128", "display_name": "Jubl", "link": "https://stackoverflow.com/users/4441586/jubl"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1531, "favorite_count": 0, "accepted_answer_id": 27892304, "answer_count": 3, "score": 4, "last_activity_date": 1421301944, "creation_date": 1421009988, "last_edit_date": 1421301944, "question_id": 27892035, "link": "https://stackoverflow.com/questions/27892035/list-average-for-ints", "title": "List Average for Ints", "body": "<p>I'm new to Haskell and Stackoverflow and I'm trying to teach myself Haskell programming and I'm doing a series of exercises from a book I downloaded and was wondering if you guys could help me out here.</p>\n\n<p>I'm trying to write a function called avgPub which returns the average of all the years of publication for a series of books. The function arguments are: avgPub :: [(String, String, Int)] -> Int. An example of input/output is,</p>\n\n<pre><code>&gt; avgPub [(\"publisher\", \"book\", 1920), (\"publisher1\", \"book1\", 1989), (\"publisher2\", \"book2\", 1920)]\n1943\n</code></pre>\n\n<p>Yesterday, I learned about div, sum, and map, but I'm not sure how to tie it all together for this problem (as the exercise is hinting at). I think that to find the average of a list of Ints, you do <code>list (x:xs) = (sum (x:xs))</code>div<code>length</code>, but we are dealing with more than just Ints so this won't work.</p>\n\n<p>I'm having trouble figuring out how to tie it all together.</p>\n"}, {"tags": ["haskell", "complex-numbers", "hugs"], "answers": [{"comments": [{"owner": {"reputation": 478, "user_id": 1518684, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/9b7fccc66662ecef6e0448dd94c2815e?s=128&d=identicon&r=PG", "display_name": "Milos", "link": "https://stackoverflow.com/users/1518684/milos"}, "edited": false, "score": 0, "creation_date": 1421006888, "post_id": 27891321, "comment_id": 44184042, "body": "Thanks, Daniel, after those bugs were fixed program works just fine. :)"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 4, "last_activity_date": 1421005533, "creation_date": 1421005533, "answer_id": 27891321, "question_id": 27891217, "link": "https://stackoverflow.com/questions/27891217/computing-complex-polynom-value/27891321#27891321", "title": "Computing complex polynom value", "body": "<p>There are at least two bugs I spot. The one causing your problem is that your base case for <code>(^%)</code> is too high, so</p>\n\n<pre><code>&gt; (1,1) ^% 0\n*** Exception: stack overflow\n</code></pre>\n\n<p>Fix it by changing the base case to</p>\n\n<pre><code>k ^% 0 = (1, 0)\n</code></pre>\n\n<p>The second is that you have no base case for <code>vredKompPol</code>, which you can fix by adding a clause like</p>\n\n<pre><code>vredKompPol [] _ = (0, 0)\n</code></pre>\n\n<p>With these two changes, I get:</p>\n\n<pre><code>*Main&gt; vredKompPol [((1,1),2),((1,1),0)] (0,0)\n(1,1)\n</code></pre>\n\n<p>That looks right to me.</p>\n"}, {"comments": [{"owner": {"reputation": 478, "user_id": 1518684, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/9b7fccc66662ecef6e0448dd94c2815e?s=128&d=identicon&r=PG", "display_name": "Milos", "link": "https://stackoverflow.com/users/1518684/milos"}, "edited": false, "score": 0, "creation_date": 1421013890, "post_id": 27891353, "comment_id": 44186392, "body": "Thanks for your answer and for the tip about ghci, I&#39;ll switch to it eventually, but for now I have to deal with hugs."}], "tags": [], "owner": {"reputation": 2027, "user_id": 270654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6db8e6e1cf36dfcc4c4d59e4b5827344?s=128&d=identicon&r=PG", "display_name": "nemetroid", "link": "https://stackoverflow.com/users/270654/nemetroid"}, "is_accepted": false, "score": 3, "last_activity_date": 1421007092, "last_edit_date": 1421007092, "creation_date": 1421005783, "answer_id": 27891353, "question_id": 27891217, "link": "https://stackoverflow.com/questions/27891217/computing-complex-polynom-value/27891353#27891353", "title": "Computing complex polynom value", "body": "<p>The problem is that your implementation of <code>%^</code> is only defined for <code>n &gt;= 1</code>, but you're trying to use it with <code>n = 0</code>, which never reaches the base case (<code>n = 1</code>).</p>\n\n<p>Now, hugs is out of development so I would recommend using ghci instead. In ghci, you can debug similar problems like this:</p>\n\n<pre><code>[jakob:~]$ ghci foo.hs\nGHCi, version 7.8.4: http://www.haskell.org/ghc/  :? for help\nLoading package ghc-prim ... linking ... done.\nLoading package integer-gmp ... linking ... done.\nLoading package base ... linking ... done.\n[1 of 1] Compiling Main             ( foo.hs, interpreted )\nOk, modules loaded: Main.\n</code></pre>\n\n<p>Set a flag to enable breaking on Ctrl-c:</p>\n\n<pre><code>*Main&gt; :set -fbreak-on-error\n</code></pre>\n\n<p>Trace the problematic function:</p>\n\n<pre><code>*Main&gt; :trace vredKompPol [((1,1),2),((1,1),0)] (0,0)\n</code></pre>\n\n<p>After a little while, press Ctrl-c to stop execution.</p>\n\n<pre><code>^CStopped at &lt;exception thrown&gt;\n_exception :: e = _\n</code></pre>\n\n<p><code>:history</code> shows the execution history.</p>\n\n<pre><code>[&lt;exception thrown&gt;] *Main&gt; :history\n-1  : *% (foo.hs:6:1-56)\n-2  : ^% (foo.hs:10:15-31)\n-3  : ^% (foo.hs:10:22-24)\n-4  : ^% (foo.hs:(9,1)-(10,31))\n-5  : ^% (foo.hs:10:16-25)\n-6  : *% (foo.hs:6:1-56)\n-7  : ^% (foo.hs:10:15-31)\n-8  : ^% (foo.hs:10:22-24)\n-9  : ^% (foo.hs:(9,1)-(10,31))\n-10 : ^% (foo.hs:10:16-25)\n-11 : *% (foo.hs:6:1-56)\n-12 : ^% (foo.hs:10:15-31)\n-13 : ^% (foo.hs:10:22-24)\n-14 : ^% (foo.hs:(9,1)-(10,31))\n-15 : ^% (foo.hs:10:16-25)\n-16 : *% (foo.hs:6:1-56)\n-17 : ^% (foo.hs:10:15-31)\n-18 : ^% (foo.hs:10:22-24)\n-19 : ^% (foo.hs:(9,1)-(10,31))\n-20 : ^% (foo.hs:10:16-25)\n...\n</code></pre>\n\n<p>Use <code>:back</code> to move up the execution history in order to inspect the arguments using <code>:show bindings</code>:</p>\n\n<pre><code>[&lt;exception thrown&gt;] *Main&gt; :back\nLogged breakpoint at foo.hs:6:1-56\n_result :: Komp\n[-1: foo.hs:6:1-56] *Main&gt; :show bindings\n_exception :: e = _\n_result :: Komp = _\n</code></pre>\n\n<p>Nothing interesting here (probably because it's the function that was executing when Ctrl-c was pressed). Move up a step and try again:</p>\n\n<pre><code>[-1: foo.hs:6:1-56] *Main&gt; :back\nLogged breakpoint at foo.hs:10:15-31\n_result :: Komp\nk :: Komp\nn :: Int\n[-2: foo.hs:10:15-31] *Main&gt; :show bindings\n_exception :: e = _\nn :: Int = -12390\nk :: Komp = (0,0)\n_result :: Komp = _\n[-2: foo.hs:10:15-31] *Main&gt; \n</code></pre>\n\n<p>So, it's executing on line 10 with <code>n = -12390</code>. This suggests a problem with non-terminating recursion.</p>\n"}], "owner": {"reputation": 478, "user_id": 1518684, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/9b7fccc66662ecef6e0448dd94c2815e?s=128&d=identicon&r=PG", "display_name": "Milos", "link": "https://stackoverflow.com/users/1518684/milos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 91, "favorite_count": 0, "accepted_answer_id": 27891321, "answer_count": 2, "score": 0, "last_activity_date": 1421007092, "creation_date": 1421004815, "question_id": 27891217, "link": "https://stackoverflow.com/questions/27891217/computing-complex-polynom-value", "title": "Computing complex polynom value", "body": "<p>I want to compute value of a complex polynomial at the given point, in haskell.</p>\n\n<p>Polynomial is given as a list of <code>((Int,Int),Int)</code> elements, where the pair <code>(Int,Int)</code> stands for real and imaginary unit of the quotient, and the remaining <code>Int</code> represents degree. Therefore, value of the polynomial in complex point <code>x</code> is computed as the sum of <code>a_i*(x^t)</code> where <code>a_i</code> is the <code>i</code>th quotient and <code>t</code> degree.</p>\n\n<p>Here is my <code>haskell</code> code:</p>\n\n<pre><code>type Komp = (Int, Int)\n(+%) :: Komp -&gt; Komp -&gt; Komp\n(r1, i1) +% (r2, i2)    = (r1+r2, i1+i2)\n\n(*%) :: Komp -&gt; Komp -&gt; Komp\n(r1, i1) *% (r2, i2)    = (r1*r2 - i1*i2, r1*i2 + i1*r2)\n\n(^%) :: Komp -&gt; Int -&gt; Komp\nk ^% 1      = k\nk ^% n      = (k ^% (n-1)) *% k\n\nvredKompPol :: [(Komp,Int)] -&gt; Komp -&gt; Komp\nvredKompPol ((k,s):poli) t  = k*%(t^%s) +% (vredKompPol poli t)\n</code></pre>\n\n<p><code>+%</code>, <code>*%</code> and <code>^%</code> are nothing more but operations <code>+</code>, <code>*</code> and <code>^</code> defined over complex numbers represented by the type <code>Komp</code>.</p>\n\n<p>It loads fine with hugs, but execution:</p>\n\n<pre><code>Main&gt; vredKompPol [((1,1),2),((1,1),0)] (0,0)\n</code></pre>\n\n<p>throws an error:</p>\n\n<p><code>ERROR - Control Stack Overflow</code></p>\n\n<p>which I don't know why it happens or how to debug it.</p>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 7204, "user_id": 4333347, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/6b091d5e3973e6f65ec16442c3b1b16b?s=128&d=identicon&r=PG", "display_name": "buydadip", "link": "https://stackoverflow.com/users/4333347/buydadip"}, "edited": false, "score": 0, "creation_date": 1421004438, "post_id": 27891118, "comment_id": 44183154, "body": "Ah, I see. I guess I could probably use <code>import Prelude hiding (...)</code> as well, although that would perhaps be pointless."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 7204, "user_id": 4333347, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/6b091d5e3973e6f65ec16442c3b1b16b?s=128&d=identicon&r=PG", "display_name": "buydadip", "link": "https://stackoverflow.com/users/4333347/buydadip"}, "edited": false, "score": 1, "creation_date": 1421006642, "post_id": 27891118, "comment_id": 44183940, "body": "@Bolboa Yes, you could. But the youn would need to implement those functions -- your code provided only their type signatures, not their actual code."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 4, "last_activity_date": 1421004274, "creation_date": 1421004274, "answer_id": 27891118, "question_id": 27891064, "link": "https://stackoverflow.com/questions/27891064/haskell-function-to-convert-lower-case-char-to-uppercase-char/27891118#27891118", "title": "Haskell-function to convert lower case char to uppercase char", "body": "<p>Remove these lines:</p>\n\n<pre><code>fromEnum :: Char -&gt; Int\ntoEnum :: Int -&gt; Char\n</code></pre>\n\n<p>These functions are already defined by the standard library. By adding the above lines, you are attempting to redefine them, which triggers the error.</p>\n\n<p>The tutorial probably is mentioning they exist, and is not inviting you to add these functions in your program.</p>\n"}], "owner": {"reputation": 7204, "user_id": 4333347, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/6b091d5e3973e6f65ec16442c3b1b16b?s=128&d=identicon&r=PG", "display_name": "buydadip", "link": "https://stackoverflow.com/users/4333347/buydadip"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1185, "favorite_count": 0, "closed_date": 1421694248, "accepted_answer_id": 27891118, "answer_count": 1, "score": 0, "last_activity_date": 1421004984, "creation_date": 1421003960, "question_id": 27891064, "link": "https://stackoverflow.com/questions/27891064/haskell-function-to-convert-lower-case-char-to-uppercase-char", "closed_reason": "Duplicate", "title": "Haskell-function to convert lower case char to uppercase char", "body": "<p>I've stumbled across some code in a Haskell tutorial that does not seem to work for me.</p>\n\n<pre><code>fromEnum :: Char -&gt; Int\ntoEnum :: Int -&gt; Char\n\noffset :: Int\noffset = fromEnum 'A' - fromEnum 'a'\n\ntoUpper :: Char -&gt; Char\ntoUpper ch = toEnum (fromEnum ch + offset)\n</code></pre>\n\n<p>The text book from which this excerpt is taken states that the following conversion function will convert a lower case Char to an upper case one. However when I try running the script I get the following error message:</p>\n\n<pre><code>eval.hs:1:1:\n    The type signature for \u2018fromEnum\u2019 lacks an accompanying binding\n      (The type signature must be given where \u2018fromEnum\u2019 is declared)\n\neval.hs:2:1:\n    The type signature for \u2018toEnum\u2019 lacks an accompanying binding\n      (The type signature must be given where \u2018toEnum\u2019 is declared)\nFailed, modules loaded: none.\n</code></pre>\n\n<p>I'm new to Haskell, so can someone tell me what I'm missing here? Is the textbook wrong? </p>\n"}, {"tags": ["haskell", "monads", "monadplus"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 0, "creation_date": 1420997755, "post_id": 27889780, "comment_id": 44180995, "body": "Maybe is one possible MonadPlus, there are many others. If you want to work with any possible MonadPlus, don&#39;t use Maybe functions, they are too specific."}], "answers": [{"comments": [{"owner": {"reputation": 1260, "user_id": 2333093, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/b56a75856f517f32235c142a2deec150?s=128&d=identicon&r=PG", "display_name": "Marco", "link": "https://stackoverflow.com/users/2333093/marco"}, "edited": false, "score": 0, "creation_date": 1420999067, "post_id": 27890106, "comment_id": 44181411, "body": "After I fixed the error in the above if-statement, the code compiled. However, when trying to run it, e.g. by calling <code>head&#39; []</code>, I get: No instance for (MonadPlus m0) arising from a use of &#39;it&#39;  The type variable &#39;m0&#39; is ambiguous  Note: there are several potential instances:    instance MonadPlus Maybe -- Defined in &#39;Control.Monad&#39;    instance MonadPlus [] -- Defined in &#39;Control.Monad&#39;  In the first argument of &#39;print&#39;, namely &#39;it&#39;"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 1260, "user_id": 2333093, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/b56a75856f517f32235c142a2deec150?s=128&d=identicon&r=PG", "display_name": "Marco", "link": "https://stackoverflow.com/users/2333093/marco"}, "edited": false, "score": 2, "creation_date": 1421000965, "post_id": 27890106, "comment_id": 44181973, "body": "@Marco When you use a polymorphic type, you have to specify the concrete type at which you want to use it. This is done e.g. by writing <code>head&#39; [] :: Maybe (Int, [Int])</code> or by using it in a suitable context e.g. <code>f (head&#39; [])</code> where <code>f</code> has type <code>Maybe (Int,[Int]) -&gt; ...</code>. Of course, instead of <code>Maybe</code> you can use any other <code>MonadPlus</code>, and instead of <code>Int</code> anything else. The same issue is found with <code>read &quot;32&quot;</code>, for instance."}, {"owner": {"reputation": 1260, "user_id": 2333093, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/b56a75856f517f32235c142a2deec150?s=128&d=identicon&r=PG", "display_name": "Marco", "link": "https://stackoverflow.com/users/2333093/marco"}, "edited": false, "score": 0, "creation_date": 1421001104, "post_id": 27890106, "comment_id": 44182017, "body": "Ha, that makes sense. Thank you!"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 3, "last_activity_date": 1420998083, "creation_date": 1420998083, "answer_id": 27890106, "question_id": 27889780, "link": "https://stackoverflow.com/questions/27889780/error-handling-with-monadplus/27890106#27890106", "title": "Error handling with MonadPlus", "body": "<p>Try this:</p>\n\n<pre><code>head' :: MonadPlus m =&gt; [a] -&gt; m (a,[a])\nhead' xs = if null xs then mzero then return (head xs, tail xs)\n</code></pre>\n\n<p><code>mzero</code> is the \"nothing\" or (indeed) \"zero\" value, which you can use here to model the absence of a result. It has type <code>m x</code> for any type <code>x</code> and monad with zero <code>m</code>, so it fits here.</p>\n\n<p>Instead, <code>return</code> wraps any value in any monad. In particular, you can insert our <code>(a,[a])</code> pair inside <code>m</code>. (This does not even require the monad to be a <code>MonadPlus</code>)</p>\n\n<p>Note how in the code above we did not mention any specific monad: the code is indeed generic, so that it can work with any <code>MonadPlus</code>.</p>\n\n<p>Lastly, I used <code>null</code> instead of <code>length ... &gt; 0</code> since <code>null</code> only examines the first constructor in the list, while <code>length ... &gt; 0</code> has to traverse it all.</p>\n\n<p>You can actually remove the check by switching to pattern matching:</p>\n\n<pre><code>head' :: MonadPlus m =&gt; [a] -&gt; m (a,[a])\nhead' []     = mzero\nhead' (x:xs) = return (x, xs)\n</code></pre>\n"}], "owner": {"reputation": 1260, "user_id": 2333093, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/b56a75856f517f32235c142a2deec150?s=128&d=identicon&r=PG", "display_name": "Marco", "link": "https://stackoverflow.com/users/2333093/marco"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 176, "favorite_count": 0, "accepted_answer_id": 27890106, "answer_count": 1, "score": 0, "last_activity_date": 1613970883, "creation_date": 1420996297, "last_edit_date": 1613970883, "question_id": 27889780, "link": "https://stackoverflow.com/questions/27889780/error-handling-with-monadplus", "title": "Error handling with MonadPlus", "body": "<p>Got stuck again while trying to learn some Haskell. What I'm trying to do is implementing a combined <code>head/tail</code> method for lists with error handling. The signature must look like this:</p>\n\n<pre><code>head' :: MonadPlus m =&gt; [a] -&gt; m (a,[a])\n</code></pre>\n\n<p>However I'm a bit lost at how error handling with MonadPlus works. I tried the following:</p>\n\n<pre><code>head' xs = if (length xs &gt; 0) then Just(head xs, tail xs) else Nothing\n</code></pre>\n\n<p>but it complains: Expected type: m (a, [a]) Actual type: Maybe (a, [a]). Just for fun I also tried:</p>\n\n<pre><code>head' xs = if (length xs &gt; 0) then Just(head xs, tail xs) else Nothing `mplus` Nothing\n</code></pre>\n\n<p>but not only does that look redundant, it also does not work either.</p>\n\n<p>Any hints appreciated!</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 5054, "user_id": 548515, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55624bebc921a03713d00a91c9e58a36?s=128&d=identicon&r=PG", "display_name": "Hans Lub", "link": "https://stackoverflow.com/users/548515/hans-lub"}, "edited": false, "score": 3, "creation_date": 1420993395, "post_id": 27889194, "comment_id": 44179478, "body": "I don&#39;t see the connection between your question and the title of your post. Please explain or change the title."}, {"owner": {"reputation": 301, "user_id": 3231622, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/d7073eae5a881e7ee7ae9a2aea9b5e0a?s=128&d=identicon&r=PG&f=1", "display_name": "user3231622", "link": "https://stackoverflow.com/users/3231622/user3231622"}, "reply_to_user": {"reputation": 5054, "user_id": 548515, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55624bebc921a03713d00a91c9e58a36?s=128&d=identicon&r=PG", "display_name": "Hans Lub", "link": "https://stackoverflow.com/users/548515/hans-lub"}, "edited": false, "score": 0, "creation_date": 1420994061, "post_id": 27889194, "comment_id": 44179727, "body": "@HansLub: I try to create a function rewrite that supports both rewrite :: Logic (Logic t1 t2) t -&gt; Bool AND rewrite :: Logic Bool Bool -&gt; Bool."}, {"owner": {"reputation": 5054, "user_id": 548515, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55624bebc921a03713d00a91c9e58a36?s=128&d=identicon&r=PG", "display_name": "Hans Lub", "link": "https://stackoverflow.com/users/548515/hans-lub"}, "edited": false, "score": 0, "creation_date": 1420995999, "post_id": 27889194, "comment_id": 44180378, "body": "that is much clearer, thanks!"}], "answers": [{"comments": [{"owner": {"reputation": 301, "user_id": 3231622, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/d7073eae5a881e7ee7ae9a2aea9b5e0a?s=128&d=identicon&r=PG&f=1", "display_name": "user3231622", "link": "https://stackoverflow.com/users/3231622/user3231622"}, "edited": false, "score": 0, "creation_date": 1420993646, "post_id": 27889263, "comment_id": 44179568, "body": "This proposed solution doesn&#39;t seem to give you the ability to make a type: &quot;And (And True False) True&quot;?"}, {"owner": {"reputation": 713, "user_id": 2123737, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/319770365a555574de7b3994c63c3c27?s=128&d=identicon&r=PG", "display_name": "Syd Kerckhove", "link": "https://stackoverflow.com/users/2123737/syd-kerckhove"}, "reply_to_user": {"reputation": 301, "user_id": 3231622, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/d7073eae5a881e7ee7ae9a2aea9b5e0a?s=128&d=identicon&r=PG&f=1", "display_name": "user3231622", "link": "https://stackoverflow.com/users/3231622/user3231622"}, "edited": false, "score": 0, "creation_date": 1420993740, "post_id": 27889263, "comment_id": 44179596, "body": "No, you would need <code>And (And (Lit True) (Lit False)) (Lit True)</code>, but I know of no way to do what you&#39;re describing. Haskell is staticly typed, you see. You can&#39;t just use two kinds of types in a data structure."}], "tags": [], "owner": {"reputation": 713, "user_id": 2123737, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/319770365a555574de7b3994c63c3c27?s=128&d=identicon&r=PG", "display_name": "Syd Kerckhove", "link": "https://stackoverflow.com/users/2123737/syd-kerckhove"}, "is_accepted": false, "score": 0, "last_activity_date": 1420993101, "creation_date": 1420993101, "answer_id": 27889263, "question_id": 27889194, "link": "https://stackoverflow.com/questions/27889194/multiple-function-definitions-with-same-function-name/27889263#27889263", "title": "Multiple function definitions with same function name", "body": "<p>How about this:</p>\n\n<pre><code>data MyLogic = Lit Bool\n             | And MyLogic MyLogic deriving Show\n\nrewrite :: Mylogic -&gt; Bool\nrewrite (Lit b) = b\nrewrite (And a b) = rewrite a &amp;&amp; rewrite b\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 301, "user_id": 3231622, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/d7073eae5a881e7ee7ae9a2aea9b5e0a?s=128&d=identicon&r=PG&f=1", "display_name": "user3231622", "link": "https://stackoverflow.com/users/3231622/user3231622"}, "edited": false, "score": 0, "creation_date": 1420993808, "post_id": 27889265, "comment_id": 44179619, "body": "This proposed solution doesn&#39;t seem to give you the ability to execute &quot;rewrite (And True True)&quot;?"}], "tags": [], "owner": {"reputation": 12819, "user_id": 845414, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8fbe63f77ce3f9656c62b27db4d8583b?s=128&d=identicon&r=PG", "display_name": "Johannes Kuhn", "link": "https://stackoverflow.com/users/845414/johannes-kuhn"}, "is_accepted": false, "score": 0, "last_activity_date": 1420993108, "creation_date": 1420993108, "answer_id": 27889265, "question_id": 27889194, "link": "https://stackoverflow.com/questions/27889194/multiple-function-definitions-with-same-function-name/27889265#27889265", "title": "Multiple function definitions with same function name", "body": "<p>I'd build it like this</p>\n\n<pre><code>data MyLogic a = And (MyLogic a) a  deriving Show\n\nrewrite :: (MyLogic Bool) -&gt; Bool\nrewrite (And f False) = False\nrewrite (And f True) = rewrite f\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1420996174, "post_id": 27889702, "comment_id": 44180455, "body": "The first instance should use <code>&amp;&amp;</code>, and I think this whole approach will fail the coherence check if you make it general enough. Unless maybe you&#39;re really really careful."}, {"owner": {"reputation": 5054, "user_id": 548515, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55624bebc921a03713d00a91c9e58a36?s=128&d=identicon&r=PG", "display_name": "Hans Lub", "link": "https://stackoverflow.com/users/548515/hans-lub"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1420996296, "post_id": 27889702, "comment_id": 44180490, "body": "@dfeuer: Your proposal makes sense, but is not relevant to the problem &quot;how do I define an ad-hoc polymorphic function <code>rewrite</code>&quot;"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1420996550, "post_id": 27889702, "comment_id": 44180576, "body": "My point is that if you try to make it accept <code>And</code> in the <i>second</i> argument, things will get very tricky, and maybe even impossible without the rightfully dreaded <code>IncoherentInstances</code>."}, {"owner": {"reputation": 5054, "user_id": 548515, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55624bebc921a03713d00a91c9e58a36?s=128&d=identicon&r=PG", "display_name": "Hans Lub", "link": "https://stackoverflow.com/users/548515/hans-lub"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1420996925, "post_id": 27889702, "comment_id": 44180690, "body": "Yes, of course. I answered the question in the title, which makes sense, and considered the accompanying example (which makes a little less sense)  as just that, an example. How to generalise this example is a different, much more difficult, question."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1420997354, "post_id": 27889702, "comment_id": 44180865, "body": "It actually didn&#39;t turn out to be so bad. See my answer."}, {"owner": {"reputation": 5054, "user_id": 548515, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55624bebc921a03713d00a91c9e58a36?s=128&d=identicon&r=PG", "display_name": "Hans Lub", "link": "https://stackoverflow.com/users/548515/hans-lub"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1420999208, "post_id": 27889702, "comment_id": 44181467, "body": "Neat! Maybe the example makes sense after all, though I am not totally convinced of the usefulness of promoting an ordinary algebraic datatype   <code>data MyLogic  = BoolC | MylogicC Mylogic Mylogic</code> to the kind level. But this is the price to pay if one wants a solution &quot;without using functions instead of types&quot;, I guess."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1421002336, "post_id": 27889702, "comment_id": 44182424, "body": "I guess this sort of thinking could lead toward type-driven EDSL optimization, but it sounds kind of painful."}], "tags": [], "owner": {"reputation": 5054, "user_id": 548515, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/55624bebc921a03713d00a91c9e58a36?s=128&d=identicon&r=PG", "display_name": "Hans Lub", "link": "https://stackoverflow.com/users/548515/hans-lub"}, "is_accepted": true, "score": 4, "last_activity_date": 1420995834, "creation_date": 1420995834, "answer_id": 27889702, "question_id": 27889194, "link": "https://stackoverflow.com/questions/27889194/multiple-function-definitions-with-same-function-name/27889702#27889702", "title": "Multiple function definitions with same function name", "body": "<p><em>Multiple function definitions with the same name</em> is just another name for ad-hoc polymorphism, and that's what Haskell typeclasses are for.</p>\n\n<pre><code>{-# LANGUAGE FlexibleInstances, FlexibleContexts #-}\n\ndata MyLogic f a = And f a  deriving Show\n\nclass Rewritable a where\n   rewrite :: a -&gt; Bool\n\ninstance Rewritable (MyLogic Bool Bool) where\n  rewrite(And a b)\n     | a == False = False\n     | b == False = False\n     | otherwise = True\n\n\ninstance Rewritable (MyLogic a b) =&gt; Rewritable  (MyLogic (MyLogic a b)  Bool) where\n  rewrite(And x c) = rewrite $ And (rewrite x) c\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 4, "last_activity_date": 1421353312, "last_edit_date": 1421353312, "creation_date": 1420997452, "answer_id": 27890004, "question_id": 27889194, "link": "https://stackoverflow.com/questions/27889194/multiple-function-definitions-with-same-function-name/27890004#27890004", "title": "Multiple function definitions with same function name", "body": "<p>Here's a generalization (completion, really) of Hans Lub's approach that should work with any expression of the sort you're considering.</p>\n\n<pre><code>{-# LANGUAGE FlexibleInstances, FlexibleContexts #-}\nmodule MyLogic where\n\ndata MyLogic f a = And f a  deriving Show\n\nclass Rewritable a where\n   rewrite :: a -&gt; Bool\n\ninstance Rewritable Bool where\n  rewrite = id\n\ninstance Rewritable (MyLogic Bool Bool) where\n  rewrite(And a b) = a &amp;&amp; b\n\ninstance Rewritable (MyLogic a b)\n    =&gt; Rewritable  (MyLogic (MyLogic a b)  Bool) where\n  rewrite(And x c) = rewrite $ And (rewrite x) c\n\ninstance Rewritable (MyLogic a b)\n    =&gt; Rewritable  (MyLogic Bool (MyLogic a b)) where\n  rewrite(And c x) = rewrite $ And c (rewrite x)\n\ninstance (Rewritable (MyLogic a b), Rewritable (MyLogic c d))\n    =&gt; Rewritable (MyLogic (MyLogic a b) (MyLogic c d)) where\n  rewrite(And x y) = rewrite $ And (rewrite x) (rewrite y)\n</code></pre>\n"}], "owner": {"reputation": 301, "user_id": 3231622, "user_type": "registered", "accept_rate": 69, "profile_image": "https://www.gravatar.com/avatar/d7073eae5a881e7ee7ae9a2aea9b5e0a?s=128&d=identicon&r=PG&f=1", "display_name": "user3231622", "link": "https://stackoverflow.com/users/3231622/user3231622"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 561, "favorite_count": 1, "accepted_answer_id": 27889702, "answer_count": 4, "score": 0, "last_activity_date": 1421353312, "creation_date": 1420992699, "last_edit_date": 1421312164, "question_id": 27889194, "link": "https://stackoverflow.com/questions/27889194/multiple-function-definitions-with-same-function-name", "title": "Multiple function definitions with same function name", "body": "<p>How would it be possible in Haskell, to be able to solve (without using functions instead of types):</p>\n\n<p>rewrite(And True False) = False<br>\nrewrite(And (And True False) True) = False\n...</p>\n\n<p>I tried the following </p>\n\n<pre><code>data MyLogic f a = And f a  deriving Show\n\nrewrite(And a b)\n | a == False = False\n | b == False = False\n | otherwise = True\n\nrewrite(And (And a b) c) = ...\n</code></pre>\n\n<p>But haskell compiler complains that a might not be a bool in the first rewrite.</p>\n"}, {"tags": ["haskell", "higher-rank-types", "transducer", "monomorphism-restriction"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1420986482, "post_id": 27887907, "comment_id": 44177211, "body": "This is because of type inference with higher ranks. The monomorphism restriction does not matter here. No easy fix, I guess, except adding a type annotation or moving to a pointful definition."}, {"owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1420987870, "post_id": 27887907, "comment_id": 44177603, "body": "Type annotations don&#39;t help: <code>let map :: Collection c =&gt; (a -&gt; b) -&gt; c a -&gt; c b; map f = reduce (mapping f)</code> still produces the same error."}, {"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1420989132, "post_id": 27887907, "comment_id": 44178010, "body": "The type error tells you exactly what the problem is. The type of <code>mapping</code> is silently changed to move the <code>forall</code> to the left-hand side (try <code>:t mapping</code>). This is a valid (semantics-preserving) transformation, but the typechecker expects the type <code>Transducer a b</code> proper, not <code>Reducer t a -&gt; Reducer t b</code> (which <i>could</i> be distinct types). But when you write <code>reduce (mapping f)</code>, the typechecker sees the application of <code>mapping f</code> must have type <code>forall t. Reducer t b -&gt; Reducer t a</code>, which is the correct type for an argument to <code>reduce</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 7, "creation_date": 1420989682, "post_id": 27887907, "comment_id": 44178194, "body": "<code>let map = ((.) :: (Transducer a b -&gt; c a -&gt; c b) -&gt; ((a -&gt; b) -&gt; Transducer a b) -&gt; (a -&gt; b) -&gt; (c a -&gt; c b)) reduce mapping</code> works but... yuck. It&#39;s the <code>(.)</code> that needs the annotation."}, {"owner": {"reputation": 607, "user_id": 2436412, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/07531356cc096dc9551e1ac5983f651d?s=128&d=identicon&r=PG", "display_name": "Heimdell", "link": "https://stackoverflow.com/users/2436412/heimdell"}, "edited": false, "score": 0, "creation_date": 1420991580, "post_id": 27887907, "comment_id": 44178857, "body": "Try <code>data-fix</code>, which gives you more general case than transducers, called <code>F-algebras</code>. Transducers essentially are F-algebras, but only for list-shaped structures."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1420998795, "post_id": 27887907, "comment_id": 44181338, "body": "@chi, couldn&#39;t that be done as well by annotating the type of each operand? Still not fun, but not nearly as ugly."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 3, "creation_date": 1421000069, "post_id": 27887907, "comment_id": 44181688, "body": "@dfeuer No, annotating the operands does not suffice. The problem is that if you write <code>f (x :: forall a. ...)</code> and <code>f</code> has a polymorphic type <code>b -&gt; ...</code>, then <code>b</code> is not instantiated to <code>forall a. ...</code> since type variables can be instantiated during inference to monotypes, only. What happens is that <code>a</code> gets instantiated to some fresh skolem constant <code>a0</code> and then <code>f</code> does no longer receive a fully polymorphic value. (Or at least, this is what I understood -- I&#39;m definitely not an expert about how exactly GHC does inference)"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 5, "creation_date": 1421000393, "post_id": 27887907, "comment_id": 44181796, "body": "@dfeuer A much simpler explanation: if <code>reduce</code> is declared as having type <code>T</code>, using <code>reduce :: T</code> instead of just <code>reduce</code> does not tell GHC anything it does not already know. Type signatures matter when they tell GHC how to specialize a more general type: here <code>reduce</code> and <code>mapping</code> are used with their full generality, so no specialization is needed. Instead, <code>(.)</code> is specialized."}, {"owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "edited": false, "score": 1, "creation_date": 1421242086, "post_id": 27887907, "comment_id": 44283430, "body": "I encountered the question with similar problem, and hopefully managed to explain why <code>type</code> doesn&#39;t work better there: <a href=\"http://stackoverflow.com/a/27944035/1308058\">stackoverflow.com/a/27944035/1308058</a>"}], "answers": [{"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1421058900, "post_id": 27899430, "comment_id": 44199571, "body": "Seems reasonable here to make it a <code>newtype</code>. Mind though, a lot of great stuff you can with <code>lens</code>es depends on the open-lying <code>forall</code> in the simple <code>type</code>, and wouldn&#39;t quite work with newtypes. Not sure how much that might be the case also for transducers."}, {"owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1421059156, "post_id": 27899430, "comment_id": 44199671, "body": "Composing transducers can be done by making them a <code>Category</code>."}, {"owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1421089036, "post_id": 27899430, "comment_id": 44216958, "body": "Edited answer a bit, add link to reddit answer"}, {"owner": {"reputation": 1235, "user_id": 3086454, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7fe13e8bdaaf213c71c5413ea1f17819?s=128&d=identicon&r=PG&f=1", "display_name": "d12frosted", "link": "https://stackoverflow.com/users/3086454/d12frosted"}, "edited": false, "score": 0, "creation_date": 1441370107, "post_id": 27899430, "comment_id": 52664449, "body": "is it possible to implement <code>taking</code> transducer in similar manner to <code>mapping</code> or <code>filtering</code>? Tried to do so - but failed :( For me the most difficult part is to reuse <code>taking</code> in order to decrement <code>n</code>."}, {"owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "reply_to_user": {"reputation": 1235, "user_id": 3086454, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7fe13e8bdaaf213c71c5413ea1f17819?s=128&d=identicon&r=PG&f=1", "display_name": "d12frosted", "link": "https://stackoverflow.com/users/3086454/d12frosted"}, "edited": false, "score": 0, "creation_date": 1441374113, "post_id": 27899430, "comment_id": 52667144, "body": "@d12frosted <code>taking</code> should be a stateful transducer. To fit in this types above, it should be possible to write <code>take n = foldr (taking n insert) empty</code>, for some <code>taking</code>. You soon realise it&#39;s not possible. <code>take</code> is structurally inductive in <code>n</code>, not the list (like <code>map</code> or <code>filter</code>). By making <code>newtype AutoReducer a b = a -&gt; b -&gt; (b, AutoReducer a b)</code> it could be possible, but I didn&#39;t tried."}, {"owner": {"reputation": 1235, "user_id": 3086454, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/7fe13e8bdaaf213c71c5413ea1f17819?s=128&d=identicon&r=PG&f=1", "display_name": "d12frosted", "link": "https://stackoverflow.com/users/3086454/d12frosted"}, "edited": false, "score": 0, "creation_date": 1441529006, "post_id": 27899430, "comment_id": 52708860, "body": "I see. Thank you for you response. I should try playing with <code>AutoReducer</code> then."}], "tags": [], "owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "is_accepted": true, "score": 5, "last_activity_date": 1585718289, "last_edit_date": 1585718289, "creation_date": 1421057098, "answer_id": 27899430, "question_id": 27887907, "link": "https://stackoverflow.com/questions/27887907/transducers-in-haskell-and-the-monomorphism-restriction/27899430#27899430", "title": "Transducers in Haskell and the monomorphism restriction", "body": "<p>If you make <code>Transducer</code> a <code>newtype</code>, than the GHC will work out the types much better. Existential type variable won't escape the scope &mdash; transducer will stay polymorphic.</p>\n\n<p>In other words, with below definition <code>map = reduce . mapping</code> works</p>\n\n<pre><code>{-# LANGUAGE RankNTypes #-}\n\nimport Prelude hiding (foldr, map, (.), id)\nimport Control.Category\nimport Data.Foldable\n\ntype Reducer b a = a -&gt; b -&gt; b\nnewtype Transducer a b = MkTrans { unTrans :: forall t. Reducer t b -&gt; Reducer t a }\n\nclass Foldable c =&gt; Collection c where\n    insert :: a -&gt; c a -&gt; c a\n    empty  :: c a\n\ninstance Collection [] where\n  insert = (:)\n  empty = []\n\nreduce :: Collection c =&gt; Transducer a b -&gt; c a -&gt; c b\nreduce f = foldr (unTrans f insert) empty\n\nmapping :: (a -&gt; b) -&gt; Transducer a b\nmapping f = MkTrans $ \\g x -&gt; g (f x)\n\nfiltering :: (a -&gt; Bool) -&gt; Transducer a a\nfiltering f = MkTrans $ \\g x y -&gt; if f x then g x y else y\n\nmap :: Collection c =&gt; (a -&gt; b) -&gt; c a -&gt; c b\nmap = reduce . mapping\n\nfilter :: Collection c =&gt; (a -&gt; Bool) -&gt; c a -&gt; c a\nfilter = reduce . filtering\n\ninstance Category Transducer where\n  id = MkTrans id\n  MkTrans f . MkTrans g = MkTrans $ \\x -&gt; g (f x)\n\ndub :: Num a =&gt; a -&gt; a\ndub x = x + x\n\ntest1 :: [Int]\ntest1 = reduce (filtering even . mapping dub) [1..10]\n-- [2,4,6,8,10,12,14,16,18,20]\n\ntest2 :: [Int]\ntest2 = reduce (mapping dub . filtering even) [1..10]\n-- [4,8,12,16,20]\n</code></pre>\n\n<hr>\n\n<pre><code>*Main&gt; :t reduce . mapping\nreduce . mapping :: Collection c =&gt; (a -&gt; b) -&gt; c a -&gt; c b\n</code></pre>\n\n<hr>\n\n<p>Also you could want to check <a href=\"http://www.reddit.com/r/haskell/comments/2cv6l4/clojures_transducers_are_perverse_lenses/\" rel=\"nofollow noreferrer\">http://www.reddit.com/r/haskell/comments/2cv6l4/clojures_transducers_are_perverse_lenses/</a>\nwhere definition is <code>type Transducer a b =:: (a -&gt; Constant (Endo x) a) -&gt; (b -&gt; Constant (Endo x) b)</code> and various other. Also other interesting discussion.</p>\n"}], "owner": {"reputation": 67060, "user_id": 783743, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/835bdcdab3e4bf466f0d59f809c50035?s=128&d=identicon&r=PG", "display_name": "Aadit M Shah", "link": "https://stackoverflow.com/users/783743/aadit-m-shah"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 314, "favorite_count": 0, "accepted_answer_id": 27899430, "answer_count": 1, "score": 6, "last_activity_date": 1585718289, "creation_date": 1420984823, "question_id": 27887907, "link": "https://stackoverflow.com/questions/27887907/transducers-in-haskell-and-the-monomorphism-restriction", "title": "Transducers in Haskell and the monomorphism restriction", "body": "<p>I implemented transducers in Haskell as follows:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE RankNTypes #-}\n\nimport Prelude hiding (foldr)\nimport Data.Foldable\n\ntype Reducer b a = a -&gt; b -&gt; b\ntype Transducer a b = forall t. Reducer t b -&gt; Reducer t a\n\nclass Foldable c =&gt; Collection c where\n    insert :: a -&gt; c a -&gt; c a\n    empty  :: c a\n\nreduce :: Collection c =&gt; Transducer a b -&gt; c a -&gt; c b\nreduce f = foldr (f insert) empty\n\nmapping :: (a -&gt; b) -&gt; Transducer a b\nmapping f g x = g (f x)\n</code></pre>\n\n<p>Now I want to define a generic <code>map</code> function. Hence I load the above code into GHCi:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>Prelude&gt; :load Transducer\n[1 of 1] Compiling Main             ( Transducer.hs, interpreted )\nOk, modules loaded: Main.\n*Main&gt; let map = reduce . mapping\n\n&lt;interactive&gt;:3:20:\n    Couldn't match type \u2018Reducer t0 b1 -&gt; Reducer t0 a1\u2019\n                  with \u2018forall t. Reducer t b -&gt; Reducer t a\u2019\n    Expected type: (a1 -&gt; b1) -&gt; Transducer a b\n      Actual type: (a1 -&gt; b1) -&gt; Reducer t0 b1 -&gt; Reducer t0 a1\n    Relevant bindings include\n      map :: (a1 -&gt; b1) -&gt; c a -&gt; c b (bound at &lt;interactive&gt;:3:5)\n    In the second argument of \u2018(.)\u2019, namely \u2018mapping\u2019\n    In the expression: reduce . mapping\n*Main&gt; let map f = reduce (mapping f)\n*Main&gt; :t map\nmap :: Collection c =&gt; (a -&gt; b) -&gt; c a -&gt; c b\n</code></pre>\n\n<p>So I can't define <code>map = reduce . mapping</code>. However, I can define <code>map f = reduce (mapping f)</code>.</p>\n\n<p>I believe that this problem is caused by the monomorphism restriction. I would really like to write <code>map = reduce . mapping</code> instead of <code>map f = reduce (mapping f)</code>. Hence, I have two questions:</p>\n\n<ol>\n<li>What's causing this problem? Is it indeed the monomorphism restriction?</li>\n<li>How do I fix this problem?</li>\n</ol>\n"}, {"tags": ["haskell", "sandbox", "cabal"], "comments": [{"owner": {"reputation": 361, "user_id": 4011383, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fc91cbebfef922ecd15477c3a96d8f8f?s=128&d=identicon&r=PG&f=1", "display_name": "Michal Seweryn", "link": "https://stackoverflow.com/users/4011383/michal-seweryn"}, "edited": false, "score": 2, "creation_date": 1420981297, "post_id": 27887249, "comment_id": 44175627, "body": "what cabal version are you using? 18+?"}, {"owner": {"reputation": 227, "user_id": 4272112, "user_type": "registered", "accept_rate": 75, "profile_image": "https://graph.facebook.com/1817717969/picture?type=large", "display_name": "Georgi D. Georgiev", "link": "https://stackoverflow.com/users/4272112/georgi-d-georgiev"}, "reply_to_user": {"reputation": 361, "user_id": 4011383, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fc91cbebfef922ecd15477c3a96d8f8f?s=128&d=identicon&r=PG&f=1", "display_name": "Michal Seweryn", "link": "https://stackoverflow.com/users/4011383/michal-seweryn"}, "edited": false, "score": 0, "creation_date": 1420981391, "post_id": 27887249, "comment_id": 44175655, "body": "cabal-install version 1.16.0.2 using version 1.16.0 of the Cabal library"}], "answers": [{"comments": [{"owner": {"reputation": 227, "user_id": 4272112, "user_type": "registered", "accept_rate": 75, "profile_image": "https://graph.facebook.com/1817717969/picture?type=large", "display_name": "Georgi D. Georgiev", "link": "https://stackoverflow.com/users/4272112/georgi-d-georgiev"}, "edited": false, "score": 0, "creation_date": 1420981763, "post_id": 27887374, "comment_id": 44175777, "body": "sorry for the dumb question"}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1469052462, "post_id": 27887374, "comment_id": 64384788, "body": "I ran these lines. I got a message like &quot;cabal-install installed version 1.24&quot;. But when I run <code>cabal --version</code>, I still get <code>cabal 16.0.2</code>. Do you know what&#39;s going on ?"}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1469052681, "post_id": 27887374, "comment_id": 64384874, "body": "same problem <a href=\"http://stackoverflow.com/questions/27826656/cabal-install-cabal-install-doesnt-update-cabal-version-in-osx\">here</a>"}, {"owner": {"reputation": 46777, "user_id": 1100107, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/8789d3da0b482bcd8e562bfdf3687c74?s=128&d=identicon&r=PG", "display_name": "St&#233;phane Laurent", "link": "https://stackoverflow.com/users/1100107/st%c3%a9phane-laurent"}, "edited": false, "score": 0, "creation_date": 1469055965, "post_id": 27887374, "comment_id": 64385846, "body": "Solution for Ubuntu <a href=\"https://stackoverflow.com/questions/25902613/upgrade-cabal-on-ubuntu-14-04\">here</a>"}, {"owner": {"reputation": 534, "user_id": 12243262, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a53af68e571b1fb8e4c3be6d02cf8672?s=128&d=identicon&r=PG&f=1", "display_name": "rambi", "link": "https://stackoverflow.com/users/12243262/rambi"}, "edited": false, "score": 0, "creation_date": 1614323184, "post_id": 27887374, "comment_id": 117355422, "body": "Same problem with cabal-install 3.4.0.0 (archlinux)"}, {"owner": {"reputation": 881859, "user_id": 100297, "user_type": "moderator", "profile_image": "https://www.gravatar.com/avatar/24780fb6df85a943c7aea0402c843737?s=128&d=identicon&r=PG", "display_name": "Martijn Pieters", "link": "https://stackoverflow.com/users/100297/martijn-pieters"}, "reply_to_user": {"reputation": 534, "user_id": 12243262, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a53af68e571b1fb8e4c3be6d02cf8672?s=128&d=identicon&r=PG&f=1", "display_name": "rambi", "link": "https://stackoverflow.com/users/12243262/rambi"}, "edited": false, "score": 0, "creation_date": 1615638907, "post_id": 27887374, "comment_id": 117756429, "body": "@rambi: see <a href=\"https://stackoverflow.com/q/58272366\">Haskell Cabal v2 and Sandbox</a>: <i>There are no sandboxes. You can install packages and they end up in the user&#39;s cabal store</i>"}], "tags": [], "owner": {"reputation": 4451, "user_id": 297366, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2052e7ed1430a47647e6e3538a7f2c6f?s=128&d=identicon&r=PG", "display_name": "Miikka", "link": "https://stackoverflow.com/users/297366/miikka"}, "is_accepted": true, "score": 18, "last_activity_date": 1420981365, "creation_date": 1420981365, "answer_id": 27887374, "question_id": 27887249, "link": "https://stackoverflow.com/questions/27887249/trying-out-cabal-sandbox-init-and-cabal-not-recognizing-the-command-sandbox/27887374#27887374", "title": "Trying out &quot;cabal sandbox init&quot; and cabal not recognizing the command &quot;sandbox&quot;", "body": "<p>Is your Cabal/cabal-install version new enough? Sandboxes were introduced in Cabal 1.18. You can check the version with command <code>cabal --version</code>.</p>\n\n<p>You might be able to upgrade with these commands:</p>\n\n<pre><code>cabal update\ncabal install Cabal cabal-install\n</code></pre>\n"}], "owner": {"reputation": 227, "user_id": 4272112, "user_type": "registered", "accept_rate": 75, "profile_image": "https://graph.facebook.com/1817717969/picture?type=large", "display_name": "Georgi D. Georgiev", "link": "https://stackoverflow.com/users/4272112/georgi-d-georgiev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 2957, "favorite_count": 0, "accepted_answer_id": 27887374, "answer_count": 1, "score": 19, "last_activity_date": 1420981756, "creation_date": 1420980623, "last_edit_date": 1420981756, "question_id": 27887249, "link": "https://stackoverflow.com/questions/27887249/trying-out-cabal-sandbox-init-and-cabal-not-recognizing-the-command-sandbox", "title": "Trying out &quot;cabal sandbox init&quot; and cabal not recognizing the command &quot;sandbox&quot;", "body": "<p>I'm trying out the tutorial about making a simple website with scotty but I get an error when I try the command \"cabal sandbox init\":</p>\n\n<pre><code>cabal: unrecognised command: sandbox (try --help)\n</code></pre>\n\n<p>Does anyone know what is wrong?</p>\n"}, {"tags": ["haskell", "monads"], "answers": [{"comments": [{"owner": {"reputation": 3542, "user_id": 2984585, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/d8b299670c2e1512831e7d2026a8d350?s=128&d=identicon&r=PG", "display_name": "ditoslav", "link": "https://stackoverflow.com/users/2984585/ditoslav"}, "edited": false, "score": 0, "creation_date": 1420979129, "post_id": 27886938, "comment_id": 44174959, "body": "I have said what I want ti do and there is no other code related to this"}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 3, "last_activity_date": 1420978658, "creation_date": 1420978658, "answer_id": 27886938, "question_id": 27886602, "link": "https://stackoverflow.com/questions/27886602/how-can-i-create-a-non-evaluated-mapping-in-haskell/27886938#27886938", "title": "How can I create a non-evaluated mapping in Haskell?", "body": "<p>Your question is a bit unclear, because you haven't actually explained what you want the code to do. But something looks fishy. Specifically, <code>mapM putStrLn stoJeLuka</code> is an <code>IO</code> action that <em>produces</em> a list; it's not actually a list. So calling <code>intersperse</code> on it will produce a type error. You probably meant to use <code>map</code> or <code>fmap</code> rather than <code>mapM</code>. I'm guessing your code may actually do that already, and you're complaining about when those things get executed relative to some other code you're not showing.</p>\n"}, {"tags": [], "owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "is_accepted": true, "score": 4, "last_activity_date": 1420980846, "last_edit_date": 1420980846, "creation_date": 1420978729, "answer_id": 27886946, "question_id": 27886602, "link": "https://stackoverflow.com/questions/27886602/how-can-i-create-a-non-evaluated-mapping-in-haskell/27886946#27886946", "title": "How can I create a non-evaluated mapping in Haskell?", "body": "<p><code>mapM</code> is pretty much <code>sequence . map</code>, which means that it <em>will</em> be evaluated and made into an action.</p>\n\n<p>You want to simply <code>map putStrLn</code> - that will create a list of type <code>[IO ()]</code> without carrying out the desired action. When you want it to be printed, simply <code>sequence</code> that list, or call <code>foldl (&gt;&gt;) (return ())</code> on it, like within <code>mapM_</code>.</p>\n"}], "owner": {"reputation": 3542, "user_id": 2984585, "user_type": "registered", "accept_rate": 71, "profile_image": "https://www.gravatar.com/avatar/d8b299670c2e1512831e7d2026a8d350?s=128&d=identicon&r=PG", "display_name": "ditoslav", "link": "https://stackoverflow.com/users/2984585/ditoslav"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 89, "favorite_count": 0, "accepted_answer_id": 27886946, "answer_count": 2, "score": 1, "last_activity_date": 1420989822, "creation_date": 1420976342, "last_edit_date": 1420989822, "question_id": 27886602, "link": "https://stackoverflow.com/questions/27886602/how-can-i-create-a-non-evaluated-mapping-in-haskell", "title": "How can I create a non-evaluated mapping in Haskell?", "body": "<p>I have this function</p>\n\n<pre><code>let tid = forkIO $ sequence_ ioOps\nlet ioOps = take 200 $ cycle $ intersperse (threadDelay (1000000*60*20)) $ mapM putStrLn stoJeLuka\n</code></pre>\n\n<p>and I know it's not pretty but I'm only hacking away.</p>\n\n<p>I'm trying to run a script which at specific periods outputs one of the strings provided in the <code>stoJeLuka :: [String]</code>.</p>\n\n<p>My issue was that my <code>mapM</code> evaluates the <code>putStrLn</code> before I would like it to.\nHow do I only create a <code>list :: [IO a]</code> without evaluating these <code>putStrLn</code>'s?</p>\n"}, {"tags": ["haskell", "happy"], "answers": [{"tags": [], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "is_accepted": true, "score": 2, "last_activity_date": 1420970061, "creation_date": 1420970061, "answer_id": 27885782, "question_id": 27885679, "link": "https://stackoverflow.com/questions/27885679/reference-variable-in-quasiquoted-llvm/27885782#27885782", "title": "Reference variable in quasiquoted LLVM", "body": "<p>Fiddling around some more, the following worked</p>\n\n<pre><code>alloc :: Type -&gt; Instruction\nalloc t = [lli|alloc $type:t|]\n</code></pre>\n\n<p>The string <code>\"type\"</code> was in <a href=\"https://hackage.haskell.org/package/llvm-general-quote-0.2.0.0/docs/src/LLVM-General-Quote-Parser-Tokens.html\" rel=\"nofollow\">the source code</a> and other examples contain text like <code>$exp:e1</code> without explaining what it it.</p>\n"}], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 55, "favorite_count": 0, "accepted_answer_id": 27885782, "answer_count": 1, "score": 2, "last_activity_date": 1421002507, "creation_date": 1420969078, "last_edit_date": 1421002507, "question_id": 27885679, "link": "https://stackoverflow.com/questions/27885679/reference-variable-in-quasiquoted-llvm", "title": "Reference variable in quasiquoted LLVM", "body": "<p>How do you pass a variable into a quasiquoted section?</p>\n\n<p>I'm using <a href=\"https://hackage.haskell.org/package/llvm-general-quote-0.2.0.0\" rel=\"nofollow\">llvm-quote-general</a> and would like to pass a <code>Type</code> into an instruction I'm building with the quasiquoter. </p>\n\n<p>I can build an instruction from just text:</p>\n\n<pre><code>alloci64 :: Instruction\nalloci64 = [lli|alloc i64|]\n</code></pre>\n\n<p>I'd like to be able to pass in a type. What is the syntax to do so? </p>\n\n<pre><code>alloc :: Type -&gt; Instruction\nalloc t = [lli|alloc t|]\n</code></pre>\n\n<p>I've tried all of the following, and none of them have worked. They result in <code>lexer error</code>s.</p>\n\n<pre><code>[lli|alloc $t|]\n[lli|alloc $$t|]\n[lli|alloc $t$|]\n[lli|alloc $$t$$|]\n</code></pre>\n\n<p>The quasiquoter in the library was generated with happy. Looking through the source code, the closest thing I can find to a token in relation to anti quotation is the symbol <code>happy_dollar_dollar</code>, which doesn't seem to be defined anywhere.</p>\n\n<p><em>Edit: I solved the problem for <code>Type</code>s; an example is <code>[lli|alloc $type:t]</code></em></p>\n\n<h3>Operands</h3>\n\n<p>I solved the problem with <code>Type</code>s, but still can't figure out how to anti-quote things in general. I'd like to use <code>Operand</code>s building an instruction. Trying to do so results in an error.</p>\n\n<pre><code>add' :: Operand -&gt; Operand -&gt; Instruction\nadd' a b = [lli|add $opr:a $opr:b|]\n                    ^\n                    parse error on `ANTI_OPR'\n</code></pre>\n\n<p>The <a href=\"https://github.com/tvh/llvm-general-quote/blob/master/src/LLVM/General/Quote/Parser/Lexer.x\" rel=\"nofollow\">pre-happy source</a> suggests that all of the following, including <code>$opr:</code> should do something</p>\n\n<pre><code>&lt;0&gt; {\n \"$dl:\"           / { allowAnti } { lexAnti Tanti_dl }\n \"$dlM:\"           / { allowAnti } { lexAntiM Tanti_dl }\n \"$tt:\"           / { allowAnti } { lexAnti Tanti_tt }\n \"$ttM:\"           / { allowAnti } { lexAntiM Tanti_tt }\n \"$def:\"          / { allowAnti } { lexAnti Tanti_def }\n \"$defM:\"          / { allowAnti } { lexAntiM Tanti_def }\n \"$defs:\"         / { allowAnti } { lexAnti Tanti_defs }\n \"$defsM:\"         / { allowAnti } { lexAntiM Tanti_defs }\n \"$bb:\"           / { allowAnti } { lexAnti Tanti_bb }\n \"$bbM:\"           / { allowAnti } { lexAntiM Tanti_bb }\n \"$bbs:\"          / { allowAnti } { lexAnti Tanti_bbs }\n \"$bbsM:\"          / { allowAnti } { lexAntiM Tanti_bbs }\n \"$instr:\"        / { allowAnti } { lexAnti Tanti_instr }\n \"$instrM:\"        / { allowAnti } { lexAntiM Tanti_instr }\n \"$instrs:\"       / { allowAnti } { lexAnti Tanti_instrs }\n \"$instrsM:\"       / { allowAnti } { lexAntiM Tanti_instrs }\n \"$type:\"         / { allowAnti } { lexAnti Tanti_type }\n \"$typeM:\"         / { allowAnti } { lexAntiM Tanti_type }\n \"$opr:\"          / { allowAnti } { lexAnti Tanti_opr }\n \"$oprM:\"          / { allowAnti } { lexAntiM Tanti_opr }\n \"$const:\"        / { allowAnti } { lexAnti Tanti_const }\n \"$constM:\"        / { allowAnti } { lexAntiM Tanti_const }\n \"$id:\"           / { allowAnti } { lexAnti Tanti_id }\n \"$idM:\"           / { allowAnti } { lexAntiM Tanti_id }\n \"$gid:\"          / { allowAnti } { lexAnti Tanti_gid }\n \"$gidM:\"          / { allowAnti } { lexAntiM Tanti_gid }\n \"$param:\"        / { allowAnti } { lexAnti Tanti_param }\n \"$paramM:\"        / { allowAnti } { lexAntiM Tanti_param }\n \"$params:\"       / { allowAnti } { lexAnti Tanti_params }\n \"$paramsM:\"       / { allowAnti } { lexAntiM Tanti_params }\n}\n</code></pre>\n"}, {"tags": ["list", "haskell", "pattern-matching", "parse-error"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 1, "creation_date": 1420968206, "post_id": 27885499, "comment_id": 44172382, "body": "colon in <code>(y:x)</code> to <code>(y,x)</code>..."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1420972362, "post_id": 27885499, "comment_id": 44173249, "body": "A better way of doing this would be making a function <code>swap (a,b) = (b,a)</code> and making <code>inverse = map swap</code>."}, {"owner": {"reputation": 28488, "user_id": 402884, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/35583fe46c2cde92467710cc7ceff266?s=128&d=identicon&r=PG", "display_name": "Chris Martin", "link": "https://stackoverflow.com/users/402884/chris-martin"}, "edited": false, "score": 0, "creation_date": 1504684974, "post_id": 27885499, "comment_id": 79100218, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/8561762/haskell-parse-error-in-pattern\">Haskell: Parse error in pattern</a>"}], "answers": [{"tags": [], "owner": {"reputation": 204954, "user_id": 1903116, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/w6Ffg.jpg?s=128&g=1", "display_name": "thefourtheye", "link": "https://stackoverflow.com/users/1903116/thefourtheye"}, "is_accepted": true, "score": 6, "last_activity_date": 1420967880, "last_edit_date": 1420967880, "creation_date": 1420967400, "answer_id": 27885526, "question_id": 27885499, "link": "https://stackoverflow.com/questions/27885499/haskell-syntax-error-in-my-function/27885526#27885526", "title": "Haskell syntax error in my function", "body": "<p>You just have to surround the unpacked tuple and the rest of the list, like this</p>\n\n<pre><code>inverse ((x, y):xs) = (y, x) : inverse xs\n</code></pre>\n\n<p>Apart from this, you can use the <a href=\"https://www.haskell.org/platform/doc/2013.2.0.0/ghc-doc/libraries/base-4.6.0.1/Data-Tuple.html#v:swap\"><code>Data.Tuple</code> package's <code>swap</code> function</a>, like this</p>\n\n<pre><code>Prelude&gt; import Data.Tuple\nPrelude Data.Tuple&gt; map swap [(1, 2), (3, 4)]\n[(2,1),(4,3)]\n</code></pre>\n"}], "owner": {"reputation": 1233, "user_id": 101326, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/b67dd441d570e1913e87396718b70f48?s=128&d=identicon&r=PG", "display_name": "anru ", "link": "https://stackoverflow.com/users/101326/anru"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 86, "favorite_count": 0, "accepted_answer_id": 27885526, "answer_count": 1, "score": 2, "last_activity_date": 1504684964, "creation_date": 1420967138, "last_edit_date": 1504684964, "question_id": 27885499, "link": "https://stackoverflow.com/questions/27885499/haskell-syntax-error-in-my-function", "title": "Haskell syntax error in my function", "body": "<p>I have tried to write a function that takes a list pair, and swaps the\npair elements</p>\n\n<pre><code>inverse :: [(a,b)] -&gt; [(b,a)]\ninverse [] = []\ninverse (x,y):xs = (y:x): inverse xs\n</code></pre>\n\n<p>I have loaded this function via Prelude, it gives me following error:</p>\n\n<blockquote>\n  <p>mydefs.hs:11:1: Parse error in pattern: inverse</p>\n</blockquote>\n\n<p>This is line 11, <code>inverse (x,y):xs = (y:x): inverse xs</code></p>\n"}, {"tags": ["haskell", "template-haskell"], "comments": [{"owner": {"reputation": 1178, "user_id": 1940209, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/247799acb8cb63c48d278c09eb455283?s=128&d=identicon&r=PG", "display_name": "aavogt", "link": "https://stackoverflow.com/users/1940209/aavogt"}, "edited": false, "score": 1, "creation_date": 1421113443, "post_id": 27884817, "comment_id": 44226714, "body": "<code>let x = () in $(stringE $ Data.Generics.gshow &#39;x)</code> evaluates to <code>&quot;(Name (OccName \\&quot;x\\&quot;) (NameL (1627422417)))&quot;</code>"}], "answers": [{"comments": [{"owner": {"reputation": 1835, "user_id": 1337806, "user_type": "registered", "accept_rate": 32, "profile_image": "https://www.gravatar.com/avatar/ff032a1a9ace832d80ad4cf65ccf8567?s=128&d=identicon&r=PG", "display_name": "sam boosalis", "link": "https://stackoverflow.com/users/1337806/sam-boosalis"}, "edited": false, "score": 0, "creation_date": 1421115708, "post_id": 27913781, "comment_id": 44227243, "body": "yeah, that&#39;s my plan B, it&#39;s safer but uglier (and maybe compile-time slower). I edited the question."}], "tags": [], "owner": {"reputation": 1178, "user_id": 1940209, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/247799acb8cb63c48d278c09eb455283?s=128&d=identicon&r=PG", "display_name": "aavogt", "link": "https://stackoverflow.com/users/1940209/aavogt"}, "is_accepted": false, "score": 1, "last_activity_date": 1421113711, "creation_date": 1421113711, "answer_id": 27913781, "question_id": 27884817, "link": "https://stackoverflow.com/questions/27884817/does-template-haskell-name-quoting-desugar-x-to-nameg/27913781#27913781", "title": "does Template Haskell name quoting desugar &#39;x to NameG?", "body": "<p>Since ' quoted names are known at compile time, why don't you change name to be in the Q monad:</p>\n\n<pre><code>name :: Name -&gt; ExpQ\nname (Name occ (NameG _ pkg mod)) = [| Unique occ pkg mod |]\nname n = fail $ \"invalid name: \"++ gshow n\n</code></pre>\n\n<p>Then you use  <code>$(name 'show) :: Unique</code> instead of <code>name 'show :: Unique</code>. If you get an invalid <code>Name</code> (say somebody uses <code>mkName</code>), that failure will show up at compile time.</p>\n"}], "owner": {"reputation": 1835, "user_id": 1337806, "user_type": "registered", "accept_rate": 32, "profile_image": "https://www.gravatar.com/avatar/ff032a1a9ace832d80ad4cf65ccf8567?s=128&d=identicon&r=PG", "display_name": "sam boosalis", "link": "https://stackoverflow.com/users/1337806/sam-boosalis"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 135, "favorite_count": 1, "answer_count": 1, "score": 4, "last_activity_date": 1421745742, "creation_date": 1420960156, "last_edit_date": 1421745742, "question_id": 27884817, "link": "https://stackoverflow.com/questions/27884817/does-template-haskell-name-quoting-desugar-x-to-nameg", "title": "does Template Haskell name quoting desugar &#39;x to NameG?", "body": "<p>Can I always expect the single single-quote syntax to desugar to the <code>NameG</code> constructor? e.g. does</p>\n\n<pre><code>'x\n</code></pre>\n\n<p>always desugar to</p>\n\n<pre><code>(Name (OccName \"x\") (NameG VarName (PkgName \"some-package\") (ModName \"SomeModule\")))\n</code></pre>\n\n<p>This information must always be there, after name resolution, which is the stage Template Haskell runs after, right? And I haven't been able to quote local names, though I'm only interested in quoting top-level names.</p>\n\n<p>Context: I want to write a function that returns the uniquely-qualified identifier. It's a partial function because I can't constrain the input, as Template Haskell doesn't have any GADTs or anything, while I don't want to wrap the output in uncertainty. And I don't want to use a quasi-quoter or splice, if <code>'</code> will do. I want to prove that this partial function is safe at runtime when used as above, <strong>quoting top-level names in the same module</strong>, given:</p>\n\n<pre><code>name (Name occ (NameG _ pkg mod)) = Unique occ pkg mod\n</code></pre>\n\n<p>I want to have a function like:</p>\n\n<pre><code>(&lt;=&gt;) :: Name -&gt; a -&gt; Named a\n</code></pre>\n\n<p>given:</p>\n\n<pre><code>data Named a = Named a Unique\n</code></pre>\n\n<p>to annotate variable bindings:</p>\n\n<pre><code>x = 'x\n &lt;=&gt; ...\n</code></pre>\n\n<p>without the user needing to use the heavy splice syntax <code>$(name ...)</code>, and invoke splicing at compile time:</p>\n\n<pre><code>x = $(name 'x)\n &lt;=&gt; ...\n</code></pre>\n\n<p>The user will be writing <strong>a lot</strong> of these, for configuration.</p>\n\n<p><a href=\"https://downloads.haskell.org/~ghc/7.8.3/docs/html/users_guide/template-haskell.html\" rel=\"nofollow\">https://downloads.haskell.org/~ghc/7.8.3/docs/html/users_guide/template-haskell.html</a> and <a href=\"https://hackage.haskell.org/package/template-haskell-2.8.0.0/docs/src/Language-Haskell-TH-Syntax.html#Name\" rel=\"nofollow\">https://hackage.haskell.org/package/template-haskell-2.8.0.0/docs/src/Language-Haskell-TH-Syntax.html#Name</a> didn't say.</p>\n\n<p>(p.s. I'd also like to know if the double single-quote syntax (e.g. <code>''T</code>) had the analogous guarantee, though I'd expect them to be the same).</p>\n"}, {"tags": ["list", "haskell"], "answers": [{"comments": [{"owner": {"reputation": 1045, "user_id": 595209, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/b04a1a76307194241bcb1daf843b2405?s=128&d=identicon&r=PG", "display_name": "Justin M", "link": "https://stackoverflow.com/users/595209/justin-m"}, "edited": false, "score": 0, "creation_date": 1420953132, "post_id": 27884140, "comment_id": 44169991, "body": "Ah, I did not even think to make that distinction. Thank you!"}], "tags": [], "owner": {"reputation": 204954, "user_id": 1903116, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/w6Ffg.jpg?s=128&g=1", "display_name": "thefourtheye", "link": "https://stackoverflow.com/users/1903116/thefourtheye"}, "is_accepted": true, "score": 7, "last_activity_date": 1420954401, "last_edit_date": 1420954401, "creation_date": 1420952785, "answer_id": 27884140, "question_id": 27884116, "link": "https://stackoverflow.com/questions/27884116/haskell-99-problems-7-prepend-vs-append-to-list/27884140#27884140", "title": "Haskell 99 Problems #7: Prepend vs Append to List", "body": "<p>Actually <a href=\"http://hackage.haskell.org/package/base-4.7.0.2/docs/Prelude.html#v:-43--43-\"><code>++</code></a> is the concatenation operator, which expects both the operators to be a list in this particular case. Since <code>flatten</code> returns a list, <code>++</code> concatenates them happily.</p>\n\n<p>But, <code>:</code> just prepends only one item to a list. Since <code>flatten x</code> in <code>flatten x : flatten (List xs)</code> returns a list, <code>:</code> throws this error.</p>\n"}], "owner": {"reputation": 1045, "user_id": 595209, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/b04a1a76307194241bcb1daf843b2405?s=128&d=identicon&r=PG", "display_name": "Justin M", "link": "https://stackoverflow.com/users/595209/justin-m"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 235, "favorite_count": 0, "accepted_answer_id": 27884140, "answer_count": 1, "score": 1, "last_activity_date": 1420954401, "creation_date": 1420952611, "last_edit_date": 1420953160, "question_id": 27884116, "link": "https://stackoverflow.com/questions/27884116/haskell-99-problems-7-prepend-vs-append-to-list", "title": "Haskell 99 Problems #7: Prepend vs Append to List", "body": "<p>This passes:</p>\n\n<pre><code>data Nested List a = Elem a | List [NestedList a]\nflatten :: NestedList a -&gt; [a]\nflatten (Elem a) = [a]\nflatten (List (x:xs)) = flatten x ++ flatten (List xs)\nflatten (List []) = []\n</code></pre>\n\n<p>This fails:</p>\n\n<pre><code>data NestedList a = Elem a | List [NestedList a]\nflatten :: NestedList a -&gt; [a]\nflatten (Elem a) = [a]\nflatten (List (x:xs)) = flatten x : flatten (List xs)\nflatten (List []) = []\n</code></pre>\n\n<p>Error is:</p>\n\n<pre><code>Couldn't match expected type `a' with actual type `[a]'\n  `a' is a rigid type variable bound by\n      the type signature for flatten :: NestedList a -&gt; [a]\n      at 007.hs:2:12\nRelevant bindings include\n  xs :: [NestedList a] (bound at 007.hs:4:18)\n  x :: NestedList a (bound at 007.hs:4:16)\n  flatten :: NestedList a -&gt; [a] (bound at 007.hs:3:1)\nIn the first argument of `(:)', namely `flatten x'\nIn the expression: flatten x : flatten (List xs)\n</code></pre>\n\n<p>The difference is <code>++</code> instead of <code>:</code>. I know the former appends, the latter prepends, but why doesn't <code>:</code> work in this case? I don't understand the error.</p>\n"}, {"tags": ["haskell", "recursion"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 1, "creation_date": 1420950470, "post_id": 27883944, "comment_id": 44169588, "body": "Hint: Look at <a href=\"http://hackage.haskell.org/package/base-4.7.0.2/docs/src/GHC-Base.html#map\" rel=\"nofollow noreferrer\"><code>map</code></a> for ideas."}, {"owner": {"reputation": 1435, "user_id": 3792504, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e1e342dc9ed03c2039e7cde0dab4214e?s=128&d=identicon&r=PG&f=1", "display_name": "TheCriticalImperitive", "link": "https://stackoverflow.com/users/3792504/thecriticalimperitive"}, "edited": false, "score": 0, "creation_date": 1420950825, "post_id": 27883944, "comment_id": 44169633, "body": "Do you want it to return <code>String</code> (i.e. <code>[Char]</code>) which uses &quot;\\n&quot; in between each citation, or do you want to return <code>[String]</code>?"}, {"owner": {"reputation": 356, "user_id": 4392949, "user_type": "registered", "accept_rate": 42, "profile_image": "https://lh5.googleusercontent.com/-nBwze4RbYJw/AAAAAAAAAAI/AAAAAAAAAE8/acyTL4RQNEk/photo.jpg?sz=128", "display_name": "Joffrey Baratheon", "link": "https://stackoverflow.com/users/4392949/joffrey-baratheon"}, "edited": false, "score": 0, "creation_date": 1420950828, "post_id": 27883944, "comment_id": 44169634, "body": "I don&#39;t understand how map would help me here. What I understand of map is that it takes a function and a list and you can manipulate items in that list with arithmetic operations."}, {"owner": {"reputation": 356, "user_id": 4392949, "user_type": "registered", "accept_rate": 42, "profile_image": "https://lh5.googleusercontent.com/-nBwze4RbYJw/AAAAAAAAAAI/AAAAAAAAAE8/acyTL4RQNEk/photo.jpg?sz=128", "display_name": "Joffrey Baratheon", "link": "https://stackoverflow.com/users/4392949/joffrey-baratheon"}, "reply_to_user": {"reputation": 1435, "user_id": 3792504, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e1e342dc9ed03c2039e7cde0dab4214e?s=128&d=identicon&r=PG&f=1", "display_name": "TheCriticalImperitive", "link": "https://stackoverflow.com/users/3792504/thecriticalimperitive"}, "edited": false, "score": 0, "creation_date": 1420950897, "post_id": 27883944, "comment_id": 44169647, "body": "@TheCriticalImperitive I&#39;m not returning a list. I&#39;m returning a String. It&#39;s returning it the same way that novel is returning it."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1420952649, "post_id": 27883944, "comment_id": 44169905, "body": "@JoffreyBaratheon <code>map</code> can perform any operation to the items of a list, not just arithmetic. A <code>String</code> is the same as a list of <code>Char</code>s in Haskell. In fact, the type <code>String</code> is just a synonym for <code>[Char]</code>."}, {"owner": {"reputation": 356, "user_id": 4392949, "user_type": "registered", "accept_rate": 42, "profile_image": "https://lh5.googleusercontent.com/-nBwze4RbYJw/AAAAAAAAAAI/AAAAAAAAAE8/acyTL4RQNEk/photo.jpg?sz=128", "display_name": "Joffrey Baratheon", "link": "https://stackoverflow.com/users/4392949/joffrey-baratheon"}, "reply_to_user": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1420952740, "post_id": 27883944, "comment_id": 44169921, "body": "@DavidYoung You&#39;re right, I misspoke and it wouldn&#39;t let me edit my comment. The thing is, I found some pdf text that I&#39;m following and I&#39;m on a chapter for recursion and mapping is the next one. It&#39;s telling me to do this purely recursively."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1420954253, "post_id": 27883944, "comment_id": 44170165, "body": "Note that your function would typically be described by a Haskell programmer as taking a tuple (3-tuple to be precise) of two <code>String</code>s and an <code>Int</code>. A function of type <code>String -&gt; String -&gt; Int -&gt; String</code> would be considered to take two <code>String</code>s and an <code>Int</code>. An SML programmer, however, would agree with your terminology."}], "answers": [{"comments": [{"owner": {"reputation": 356, "user_id": 4392949, "user_type": "registered", "accept_rate": 42, "profile_image": "https://lh5.googleusercontent.com/-nBwze4RbYJw/AAAAAAAAAAI/AAAAAAAAAE8/acyTL4RQNEk/photo.jpg?sz=128", "display_name": "Joffrey Baratheon", "link": "https://stackoverflow.com/users/4392949/joffrey-baratheon"}, "edited": false, "score": 0, "creation_date": 1420952263, "post_id": 27884046, "comment_id": 44169841, "body": "I&#39;m trying to do this recursively, though. I found some pdf text that I&#39;m following and I&#39;m on a chapter for recursion and mapping is the next one. It&#39;s telling me to do this purely recursively. And it didn&#39;t say anything about having to import anything."}, {"owner": {"reputation": 1435, "user_id": 3792504, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e1e342dc9ed03c2039e7cde0dab4214e?s=128&d=identicon&r=PG&f=1", "display_name": "TheCriticalImperitive", "link": "https://stackoverflow.com/users/3792504/thecriticalimperitive"}, "reply_to_user": {"reputation": 356, "user_id": 4392949, "user_type": "registered", "accept_rate": 42, "profile_image": "https://lh5.googleusercontent.com/-nBwze4RbYJw/AAAAAAAAAAI/AAAAAAAAAE8/acyTL4RQNEk/photo.jpg?sz=128", "display_name": "Joffrey Baratheon", "link": "https://stackoverflow.com/users/4392949/joffrey-baratheon"}, "edited": false, "score": 0, "creation_date": 1420952766, "post_id": 27884046, "comment_id": 44169928, "body": "Ah, if you haven&#39;t learned about <code>map</code> yet then the above would be introducing too much too soon. See my updated answer."}, {"owner": {"reputation": 356, "user_id": 4392949, "user_type": "registered", "accept_rate": 42, "profile_image": "https://lh5.googleusercontent.com/-nBwze4RbYJw/AAAAAAAAAAI/AAAAAAAAAE8/acyTL4RQNEk/photo.jpg?sz=128", "display_name": "Joffrey Baratheon", "link": "https://stackoverflow.com/users/4392949/joffrey-baratheon"}, "edited": false, "score": 0, "creation_date": 1420953542, "post_id": 27884046, "comment_id": 44170057, "body": "I don&#39;t understand what you mean by, &quot;use ++ and &quot;\\n\\&quot;.&quot; I&#39;m supposed to use the novel function in there. I have to use novel in the recursion. I apologize if I wasn&#39;t clear. Thank you for taking the time out of your day for this."}, {"owner": {"reputation": 1435, "user_id": 3792504, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e1e342dc9ed03c2039e7cde0dab4214e?s=128&d=identicon&r=PG&f=1", "display_name": "TheCriticalImperitive", "link": "https://stackoverflow.com/users/3792504/thecriticalimperitive"}, "reply_to_user": {"reputation": 356, "user_id": 4392949, "user_type": "registered", "accept_rate": 42, "profile_image": "https://lh5.googleusercontent.com/-nBwze4RbYJw/AAAAAAAAAAI/AAAAAAAAAE8/acyTL4RQNEk/photo.jpg?sz=128", "display_name": "Joffrey Baratheon", "link": "https://stackoverflow.com/users/4392949/joffrey-baratheon"}, "edited": false, "score": 0, "creation_date": 1420955540, "post_id": 27884046, "comment_id": 44170363, "body": "A very common pattern is something like this: recur (x:xs) = x ++ recur xs. So take out the first item, do something to it then call your original function with the rest of the list."}, {"owner": {"reputation": 1435, "user_id": 3792504, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e1e342dc9ed03c2039e7cde0dab4214e?s=128&d=identicon&r=PG&f=1", "display_name": "TheCriticalImperitive", "link": "https://stackoverflow.com/users/3792504/thecriticalimperitive"}, "reply_to_user": {"reputation": 356, "user_id": 4392949, "user_type": "registered", "accept_rate": 42, "profile_image": "https://lh5.googleusercontent.com/-nBwze4RbYJw/AAAAAAAAAAI/AAAAAAAAAE8/acyTL4RQNEk/photo.jpg?sz=128", "display_name": "Joffrey Baratheon", "link": "https://stackoverflow.com/users/4392949/joffrey-baratheon"}, "edited": false, "score": 0, "creation_date": 1420955703, "post_id": 27884046, "comment_id": 44170388, "body": "If you still have trouble I strongly recommend you read the recursion chapter in LYAH : <a href=\"http://learnyouahaskell.com/recursion\" rel=\"nofollow noreferrer\">learnyouahaskell.com/recursion</a>"}, {"owner": {"reputation": 356, "user_id": 4392949, "user_type": "registered", "accept_rate": 42, "profile_image": "https://lh5.googleusercontent.com/-nBwze4RbYJw/AAAAAAAAAAI/AAAAAAAAAE8/acyTL4RQNEk/photo.jpg?sz=128", "display_name": "Joffrey Baratheon", "link": "https://stackoverflow.com/users/4392949/joffrey-baratheon"}, "edited": false, "score": 0, "creation_date": 1420962072, "post_id": 27884046, "comment_id": 44171365, "body": "I just got done reading it. It looked at common haskell functions (maximum, replicate, take, reverse, repeat, zip, elem) and redid them using recursion, as well as &quot;Haskellifying&quot; my favorite, Quicksort. I understand how to do these examples, but, I won&#39;t lie, I&#39;m still frustrated with this problem. I&#39;m still stuck. I feel pretty dumb right now because I feel like the answer is really obvious. Could you possibly give another really good hint?"}, {"owner": {"reputation": 1435, "user_id": 3792504, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e1e342dc9ed03c2039e7cde0dab4214e?s=128&d=identicon&r=PG&f=1", "display_name": "TheCriticalImperitive", "link": "https://stackoverflow.com/users/3792504/thecriticalimperitive"}, "reply_to_user": {"reputation": 356, "user_id": 4392949, "user_type": "registered", "accept_rate": 42, "profile_image": "https://lh5.googleusercontent.com/-nBwze4RbYJw/AAAAAAAAAAI/AAAAAAAAAE8/acyTL4RQNEk/photo.jpg?sz=128", "display_name": "Joffrey Baratheon", "link": "https://stackoverflow.com/users/4392949/joffrey-baratheon"}, "edited": false, "score": 0, "creation_date": 1420966676, "post_id": 27884046, "comment_id": 44172115, "body": "That&#39;s alright, mental blanks can happen to everyone. If quicksort does, <code>sortstart ++ x ++ sortend</code>, and maximum does <code>max x (maximum xs)</code> your function will do something similar. What you need is <code>_ ++ _</code>. The left side calls <code>novel</code> with the head of the list, while the right side recursively calls <code>cite</code>. In pseudocode: &quot;use novel on head of the list ++ cite with the rest of the list&quot;. This keeps going recursively until &quot;the rest of the list&quot; is [] and you end up with: <code>novel x1 ++ (novel x2 ++ (novel x3 ++ []))</code>."}, {"owner": {"reputation": 1435, "user_id": 3792504, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e1e342dc9ed03c2039e7cde0dab4214e?s=128&d=identicon&r=PG&f=1", "display_name": "TheCriticalImperitive", "link": "https://stackoverflow.com/users/3792504/thecriticalimperitive"}, "reply_to_user": {"reputation": 356, "user_id": 4392949, "user_type": "registered", "accept_rate": 42, "profile_image": "https://lh5.googleusercontent.com/-nBwze4RbYJw/AAAAAAAAAAI/AAAAAAAAAE8/acyTL4RQNEk/photo.jpg?sz=128", "display_name": "Joffrey Baratheon", "link": "https://stackoverflow.com/users/4392949/joffrey-baratheon"}, "edited": false, "score": 1, "creation_date": 1420966867, "post_id": 27884046, "comment_id": 44172157, "body": "I&#39;ll leave the answer at the end of this comment. If you get really stuck take a look. It can be pretty frustrating when you just draw a blank and you just want to move on, so if you reach that point the answer is..................: <code>cite (x:xs) = novel x ++ &quot;\\n&quot; ++ cite xs</code>"}], "tags": [], "owner": {"reputation": 1435, "user_id": 3792504, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e1e342dc9ed03c2039e7cde0dab4214e?s=128&d=identicon&r=PG&f=1", "display_name": "TheCriticalImperitive", "link": "https://stackoverflow.com/users/3792504/thecriticalimperitive"}, "is_accepted": true, "score": 5, "last_activity_date": 1420952655, "last_edit_date": 1420952655, "creation_date": 1420951619, "answer_id": 27884046, "question_id": 27883944, "link": "https://stackoverflow.com/questions/27883944/recursion-in-haskell/27884046#27884046", "title": "Recursion in Haskell", "body": "<p>Perhaps this will give you a head start:</p>\n\n<pre><code>cite :: [(String, String, Int)] -&gt; String\ncite [] = \"\"\ncite (x:xs) = undefined -- put your code that recursively calls cite in here, hint: use ++ and \"\\n\\\"\n</code></pre>\n\n<p>The pattern match <code>(x:xs)</code> says this, give me the first item in the list <code>x</code> and the tail of the list <code>xs</code>. It would be the same as writing this:</p>\n\n<pre><code>cite xs' = let x = head xs'\n               xs = tail xs'\n           in  undefined -- your code here\n</code></pre>\n\n<p>Or even</p>\n\n<pre><code>cite xs' = undefined -- your code here\n    where\n        x = head xs'\n        xs = tail xs'\n</code></pre>\n\n<p>Hope that helps push you in the right direction.</p>\n\n<p><strong>EDIT: OP asked for how to do this recursively, below is my original answer:</strong></p>\n\n<p>You should probably re-write your base case to say <code>cite [] = \"\"</code>. It doesn't really make a difference, but it will help with code readability.</p>\n\n<p>Let's start by putting \":t map novel\" into ghci to see what you get:</p>\n\n<pre><code>&gt; :t map novel\nmap novel :: [([Char], [Char], Int)] -&gt; [[Char]]\n</code></pre>\n\n<p>Which we can rewrite as: <code>map novel :: [(String, String, Int)] -&gt; [String]</code></p>\n\n<p>How? Because <code>map</code> does a transformation of one type <code>a</code> to another type <code>b</code> and applies it to every item in a list. The first argument of <code>map</code> is any function which takes one argument. Exactly what <code>novel</code> does.</p>\n\n<p>But that doesn't give us what you need, we'll end up with a list of Strings instead of a String:</p>\n\n<pre><code>&gt; cite [(\"author1\", \"book1\", year1), (\"author2\", \"book2\", year2), (\"author3\", \"book3\", year3)]\n[\"book1 (author1, year1)\",\"book2 (author2, year2)\",\"book3 (author3, year3)\"]\n</code></pre>\n\n<p>And you would like it to be a single string separated by a newline character \"\\n\". Is there a function that can take a list of strings and concatenate them into one string, but intercalate a separator between them?</p>\n\n<p>First let's describe such a function: <code>String -&gt; [String] -&gt; String</code>. Next we chuck it into Hoogle to see what we get: <a href=\"https://www.haskell.org/hoogle/?hoogle=String+-%3E+%5BString%5D+-%3E+String\" rel=\"noreferrer\">https://www.haskell.org/hoogle/?hoogle=String+-%3E+%5BString%5D+-%3E+String</a></p>\n\n<p>Ah, that second function <code>intercalate</code> sounds like what we need. It doesn't just work on Strings, it works on any list. How would it work? Something like this:</p>\n\n<pre><code>&gt; import Data.List (intercalate)\n&gt; intercalate \"\\n\" [\"List\",\"Of\",\"Strings\"]\n\"List\\nOf\\nStrings\"\n</code></pre>\n\n<p>So now you can combine intercalate and map to get what you are after. I'll leave the definition for <code>cite</code> up to you. </p>\n\n<p>EDIT: Completely forgot, there is actually a specialised function for this. If you just search for <code>[String] -&gt; String</code> in Hoogle you'll find <a href=\"http://hackage.haskell.org/package/base-4.7.0.2/docs/Prelude.html#v%3Aunlines\" rel=\"noreferrer\"><code>unlines</code></a></p>\n"}, {"tags": [], "owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "is_accepted": false, "score": 1, "last_activity_date": 1420984846, "last_edit_date": 1420984846, "creation_date": 1420981788, "answer_id": 27887436, "question_id": 27883944, "link": "https://stackoverflow.com/questions/27883944/recursion-in-haskell/27887436#27887436", "title": "Recursion in Haskell", "body": "<p>There's a reasonably simple way of doing this.</p>\n\n<p>First, map <code>novel</code> to each element of the given list, then use <code>Data.List.intersperse</code> to fill the gaps with newlines. This is my implementation:</p>\n\n<pre><code>import Data.List (intersperse)\n\ncite :: [(String, String, Int)] -&gt; String\ncite bs = intersperse '\\n' (map novel bs)\n</code></pre>\n\n<p>Or, in a more elegant points-free style:</p>\n\n<pre><code>cite = intersperse '\\n' . map novel\n</code></pre>\n\n<p>One could also write a nice, efficient recursive function:</p>\n\n<pre><code>cite []     = \"\"\ncite [x]    = novel x\ncite (x:xs) = novel x ++ '\\n' : cite xs\n</code></pre>\n\n<p>In future problems such as this, keep in mind functions such as <code>map</code> and <code>foldr</code> - these are two of the most integral parts of Haskell and functional programming. Also, your pattern matches need to be enclosed in parentheses.</p>\n"}], "owner": {"reputation": 356, "user_id": 4392949, "user_type": "registered", "accept_rate": 42, "profile_image": "https://lh5.googleusercontent.com/-nBwze4RbYJw/AAAAAAAAAAI/AAAAAAAAAE8/acyTL4RQNEk/photo.jpg?sz=128", "display_name": "Joffrey Baratheon", "link": "https://stackoverflow.com/users/4392949/joffrey-baratheon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 263, "favorite_count": 0, "accepted_answer_id": 27884046, "answer_count": 2, "score": 2, "last_activity_date": 1420984846, "creation_date": 1420950283, "last_edit_date": 1420954208, "question_id": 27883944, "link": "https://stackoverflow.com/questions/27883944/recursion-in-haskell", "title": "Recursion in Haskell", "body": "<p>I'm still learning Haskell and I'm doing a few exercises, but I'm in a jam. So I have a function called \"novel\" which takes 2 Strings and an Int \n(<code>novel :: (String, String, Int) -&gt; String</code>) for its arguments. Novel's input/output must look like the following:</p>\n\n<pre><code>&gt; novel (\"Rowling\", \"Harry Potter\", 1998)\n\"Harry Potter (Rowling, 1998)\"\n</code></pre>\n\n<p>This is my code for my novel function which works as explained above:</p>\n\n<pre><code>novel :: (String, String, Int) -&gt; String\nnovel (author, book, year) = book ++ \" (\" ++ author ++ \", \" ++ (show year) ++ \")\" \n</code></pre>\n\n<p>I am trying to write a new function called, \"cite\" (<code>cite :: [(String, String, Int)] -&gt; String</code>). Cite's input/output should look like the following:</p>\n\n<pre><code>&gt; cite [(\"author1\", \"book1\", year1), (\"author2\", \"book2\", year2), (\"author3\", \"book3\", year3)]\n\"book1 (author1, year1)\nbook2 (author2, year2)\nbook3 (author3, year3)\"\n</code></pre>\n\n<p>I am trying to use \"novel,\" recursively, in order to get the desired output, but I am not sure how to go about this.</p>\n\n<p>What I've tried:</p>\n\n<pre><code>cite :: [(String, String, Int)] -&gt; String                -- | Listed arguments\ncite [] = \"\"                                             -- | Base Case\ncite x:xs = [(novel (author, book, year)), (novel (author, book, year)), (novel (author, book, year))]\n</code></pre>\n\n<p>This is honestly as far as I got. Obviously, it doesn't work, but I am not sure what to do from here.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 3, "creation_date": 1420945195, "post_id": 27883414, "comment_id": 44168768, "body": "Check out <a href=\"http://learnyouahaskell.com/functors-applicative-functors-and-monoids\" rel=\"nofollow noreferrer\">learnyouahaskell.com/functors-applicative-functors-and-monoi&zwnj;&#8203;ds</a> and search for &quot;Another instance of Functor that we&#39;ve been dealing with all along but didn&#39;t know was a Functor is (-&gt;) r.&quot;"}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 0, "creation_date": 1420968622, "post_id": 27883414, "comment_id": 44172462, "body": "As a side note, the type that everyone is spelling <code>(-&gt;) r</code> might be more intuitively rendered as <code>(r -&gt;)</code>, so if <code>fmap :: (a -&gt; b) -&gt; f a -&gt; f b</code> then when <code>f</code> is <code>(r -&gt;)</code>, you get <code>(.) :: (a -&gt; b) -&gt; (r -&gt; a) -&gt; (r -&gt; b)</code>."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1420979505, "post_id": 27883414, "comment_id": 44175062, "body": "They are exactly the same, but <code>fmap</code> and <code>&lt;$&gt;</code> work polymorphically on any functor."}, {"owner": {"reputation": 18999, "user_id": 825637, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/825a58fde1ef99db42c5354dab6cd472?s=128&d=identicon&r=PG", "display_name": "MasterMastic", "link": "https://stackoverflow.com/users/825637/mastermastic"}, "edited": false, "score": 0, "creation_date": 1421100998, "post_id": 27883414, "comment_id": 44222884, "body": "The short version: <code>(&lt;$&gt;) = fmap</code>, the <code>fmap</code> instance for functions happens to be <code>(.)</code>. Regarding functions there are no differences whatsoever."}], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1420944423, "post_id": 27883456, "comment_id": 44168645, "body": "It seems to me that some mention should be made of another generalization of <code>(.)</code>, from <code>Control.Category</code>. Also of the advantages of using a non-generalized version."}, {"owner": {"reputation": 441, "user_id": 573190, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/583d724f95975ff111de43d2dabd8cf0?s=128&d=identicon&r=PG", "display_name": "Brendan", "link": "https://stackoverflow.com/users/573190/brendan"}, "edited": false, "score": 0, "creation_date": 1420944445, "post_id": 27883456, "comment_id": 44168650, "body": "I understand the gist of your reply; I&#39;m quite new to Haskell and I&#39;m unsure what you mean by the &quot;<code>((-&gt;) r)</code> instance for <code>Functor</code>&quot;."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1420947529, "post_id": 27883456, "comment_id": 44169191, "body": "Actually, there are a lot of instances that come with GHC that aren&#39;t on that list. That only shows the instances in <code>base</code>, so it doesn&#39;t include the ones in <code>array</code>, <code>vector</code>, <code>containers</code>, <code>transformers</code>, <code>mtl</code>, etc."}, {"owner": {"reputation": 5707, "user_id": 1186208, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e601af8314cff7e7cca5647125e5a5ed?s=128&d=identicon&r=PG", "display_name": "Christian Conkle", "link": "https://stackoverflow.com/users/1186208/christian-conkle"}, "edited": false, "score": 1, "creation_date": 1420952755, "post_id": 27883456, "comment_id": 44169925, "body": "I usually call it &quot;the <code>Functor</code> instance for <code>((-&gt;) r)</code>.&quot; If you follow Eric&#39;s link, you probably have to scroll down a little bit to find it. In its entirety, it is <code>instance Functor ((-&gt;) r) where { fmap = (.) }</code>. The LYAH chapter dfeuer linked in a comment to your question will probably help you understand."}], "tags": [], "owner": {"reputation": 21417, "user_id": 925978, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/06e4467a5bd1538a92cefb20db07897a?s=128&d=identicon&r=PG&f=1", "display_name": "crockeea", "link": "https://stackoverflow.com/users/925978/crockeea"}, "is_accepted": false, "score": 7, "last_activity_date": 1420968231, "last_edit_date": 1420968231, "creation_date": 1420944206, "answer_id": 27883456, "question_id": 27883414, "link": "https://stackoverflow.com/questions/27883414/difference-between-function-composition-operator-and-fmap/27883456#27883456", "title": "Difference between function composition operator (.) and fmap (&lt;$&gt;)", "body": "<p>To find information about the <code>Functor</code> instance for functions, match up the types to find the relevant instance:</p>\n\n<pre><code>fmap :: (a -&gt; b) -&gt; f a -&gt; f b\n</code></pre>\n\n<p>Then here <code>a ~ Int</code>, <code>b ~ Int</code> and <code>f ~ (-&gt;) Int</code>.</p>\n\n<p>You can see all of the <code>Functor</code> instances that come with GHC <a href=\"http://hackage.haskell.org/package/base-4.7.0.2/docs/Data-Functor.html#v:-60--36-\" rel=\"nofollow\">here</a>. <code>(-&gt;)</code> is just an infix type operator with two type parameters. We usually see it applied as <code>Int -&gt; Int</code>, but this is equivalent to <code>(-&gt;) Int Int</code>. \nThere is a <code>Functor</code> instance for the (partially applied) type <code>(-&gt;) r</code> (for any type <code>r::*</code>). </p>\n\n<p>Looking at the <a href=\"http://hackage.haskell.org/package/base-4.7.0.2/docs/src/GHC-Base.html#line-65\" rel=\"nofollow\"><code>((-&gt;) r)</code> instance for <code>Functor</code></a>, we see that <code>fmap = (.)</code>, so there is no practical difference between <code>(+3) . (+2)</code> and <code>fmap (+3) (+2)</code> (same as <code>(+3) &lt;$&gt; (+2)</code>. </p>\n"}, {"comments": [{"owner": {"reputation": 21417, "user_id": 925978, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/06e4467a5bd1538a92cefb20db07897a?s=128&d=identicon&r=PG&f=1", "display_name": "crockeea", "link": "https://stackoverflow.com/users/925978/crockeea"}, "edited": false, "score": 0, "creation_date": 1420987357, "post_id": 27883814, "comment_id": 44177464, "body": "I find the statement &quot;<code>fmap (+3) (+2)</code> evaluates to <code>\\x-&gt;(\\x&#39; -&gt; x&#39;+3) (x+2)</code>&quot; misleading: for functions, <code>fmap=(.)</code>, so <code>fmap (+3) (+2)</code> evaluates precisely to <code>(+3) . (+2)</code>."}], "tags": [], "owner": {"reputation": 1435, "user_id": 3792504, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e1e342dc9ed03c2039e7cde0dab4214e?s=128&d=identicon&r=PG&f=1", "display_name": "TheCriticalImperitive", "link": "https://stackoverflow.com/users/3792504/thecriticalimperitive"}, "is_accepted": true, "score": 8, "last_activity_date": 1420950369, "last_edit_date": 1420950369, "creation_date": 1420948716, "answer_id": 27883814, "question_id": 27883414, "link": "https://stackoverflow.com/questions/27883414/difference-between-function-composition-operator-and-fmap/27883814#27883814", "title": "Difference between function composition operator (.) and fmap (&lt;$&gt;)", "body": "<p>The functions <code>fmap</code> and <code>&lt;$&gt;</code> both have the same type:</p>\n\n<pre><code>&gt; :t fmap\nfmap :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b\n&gt; :t (&lt;$&gt;)\n(&lt;$&gt;) :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b\n</code></pre>\n\n<p>While the function <code>.</code> is</p>\n\n<pre><code>&gt; :t (.)\n(.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c\n</code></pre>\n\n<p>So how is it possible that we can use <code>fmap</code> on a function and end up with <code>.</code>? I'm assuming you understand what a Functor is, so now you have to understand that \"functions\" are Functors. How so?</p>\n\n<pre><code>&gt; :i (-&gt;)\ndata (-&gt;) a b   -- Defined in `GHC.Prim'\ninstance Monad ((-&gt;) r) -- Defined in `GHC.Base'\ninstance Functor ((-&gt;) r) -- Defined in `GHC.Base'\ninstance Applicative ((-&gt;) a) -- Defined in `Control.Applicative'\n</code></pre>\n\n<p>Unlike <code>Just</code>, <code>[]</code> and <code>Left</code>, functions do not have a constructor that can be used. The Functor instance is applied to the syntax itself. We can see from :info in ghci that the syntactic arrow <code>-&gt;</code> actually has an instance for functor.</p>\n\n<p>What happens when we look at the type of +3?</p>\n\n<pre><code>&gt; :t (+3)\n(+3) :: Num a =&gt; a -&gt; a\n</code></pre>\n\n<p>So the function (+3) is a Functor that accepts an a and returns an a. When we use <code>fmap</code> on a Functor and that also gives us back a Functor, we get nested Functors:</p>\n\n<pre><code>&gt; :t fmap Just (Just 3)\nfmap Just (Just 3) :: Num a =&gt; Maybe (Maybe a)\n&gt; :t fmap (replicate 5) [1,2,3]\nfmap (replicate 5) [1,2,3] :: Num a =&gt; [[a]]\n</code></pre>\n\n<p>Likewise, when we apply <code>fmap</code> to two functions we get a function inside a function. The only difference is that they are fused together:</p>\n\n<pre><code>&gt; :t (fmap (+3) (+2))\n(fmap (+3) (+2)) :: Num a =&gt; a -&gt; a\n</code></pre>\n\n<p>Why doesn't this result in the type <code>(-&gt;) (-&gt;) a a</code>? We have to remember that the first argument of <code>fmap</code> is a function <code>(a -&gt; b)</code> and <strong>not necessarily</strong> a Functor. So when we do <code>fmap g (Just 5)</code> we can have any transformation. But whenever we perform <code>fmap</code> on a function we know that it will <strong>always</strong> result with a function inside of a function.</p>\n\n<p>Thus <code>fmap (+3) (+2)</code> evaluates to something like this: <code>\\x -&gt; (\\x' -&gt; x' + 3) (x + 2)</code>. That is a really roundabout way of writing <code>(+3) . (+2)</code>.</p>\n\n<pre><code>&gt; :t (fmap (+3) (+2))\n(fmap (+3) (+2)) :: Num a =&gt; a -&gt; a\n&gt; :t ((.) (+3) (+2))\n((.) (+3) (+2)) :: Num a =&gt; a -&gt; a\n</code></pre>\n\n<p>Normally to get around the concat problem <code>(Maybe (Maybe a))</code> or <code>[[a]]</code> we actually need to rely on it being a <code>Monad a</code>, so that we can use a bind <code>&gt;&gt;=</code>. But functions <code>(-&gt;)</code> are a special case because we know that every single time we use <code>fmap</code> on a function, it will always give us a function in side of a function. This cannot be said for any other Functor except <code>-&gt;</code>. As such we can be sure to always concatenate <code>fmap</code> on functions.</p>\n\n<p>Therefore any <code>f &lt;$&gt; g == f . g</code></p>\n\n<p>Edit: A quick side note, if you do this <code>fmap (+) (+0)</code> you end up with a function inside a function. In this case the monadic bind (<code>&gt;&gt;=</code>) is actually needed to concatenate the functions:</p>\n\n<pre><code>&gt; :t fmap (+) (+0)\nfmap (+) (+0) :: Num a =&gt; a -&gt; a -&gt; a\n&gt; :t (+0) &gt;&gt;= (+)\n(+0) &gt;&gt;= (+) :: Num b =&gt; b -&gt; b\n&gt; let bindfunc = (+0) &gt;&gt;= (+)\n&gt; bindfunc 5\n10\n</code></pre>\n\n<p>Which is not entirely unlike the behaviour we get when we do <code>[1,2] &gt;&gt;= replicate 5</code>:</p>\n\n<pre><code>&gt; [1,2] &gt;&gt;= replicate 5\n[1,1,1,1,1,2,2,2,2,2]\n</code></pre>\n"}], "owner": {"reputation": 441, "user_id": 573190, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/583d724f95975ff111de43d2dabd8cf0?s=128&d=identicon&r=PG", "display_name": "Brendan", "link": "https://stackoverflow.com/users/573190/brendan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 887, "favorite_count": 1, "accepted_answer_id": 27883814, "answer_count": 2, "score": 5, "last_activity_date": 1420968231, "creation_date": 1420943669, "question_id": 27883414, "link": "https://stackoverflow.com/questions/27883414/difference-between-function-composition-operator-and-fmap", "title": "Difference between function composition operator (.) and fmap (&lt;$&gt;)", "body": "<p>Currently reading through <a href=\"http://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html\" rel=\"noreferrer\">this article</a> (which is pretty brilliant btw) and have a pretty simple question:</p>\n\n<p>If I combine two functions like <code>(+3)</code> and <code>(+2)</code> with <code>&lt;$&gt;</code>, it seems to give me a new function that adds 5 to whatever is passed to it. If I do the same with the function composition operator, i.e. <code>(+3) . (+2)</code>, would it not do the same thing? If that is true, is there a relationship here between these two operators such that they do the same thing in this simple case?</p>\n\n<p>Is this even an intelligent question?</p>\n"}, {"tags": ["haskell", "yesod"], "comments": [{"owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "edited": false, "score": 0, "creation_date": 1420938187, "post_id": 27882155, "comment_id": 44167592, "body": "Do you have <code>import Text.Cassius</code> in your program?"}, {"owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "reply_to_user": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "edited": false, "score": 0, "creation_date": 1420943673, "post_id": 27882155, "comment_id": 44168525, "body": "Yes, but the <code>cassiusMixin</code> function does not seem to exist (<a href=\"https://www.fpcomplete.com/hoogle?q=cassiusMixin\" rel=\"nofollow noreferrer\">fpcomplete.com/hoogle?q=cassiusMixin</a>)."}, {"owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "edited": false, "score": 0, "creation_date": 1420946632, "post_id": 27882155, "comment_id": 44169058, "body": "Ah - it seems to have last appeared in <code>hamlet-0.5.1.2</code> released in 2010. There is a QuasiQuoter called <code>cassius</code> in the <code>shakespeare</code> package, but no <code>cassiusMixin</code>."}, {"owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "edited": false, "score": 0, "creation_date": 1421220003, "post_id": 27882155, "comment_id": 44271927, "body": "Looks like it just reappeared in the latest shakespeare package: <a href=\"http://hackage.haskell.org/package/shakespeare-2.0.3/docs/Text-Cassius.html\" rel=\"nofollow noreferrer\">hackage.haskell.org/package/shakespeare-2.0.3/docs/&hellip;</a>"}], "owner": {"reputation": 8813, "user_id": 389119, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/05241abffd72dcdcd1dc9d6833706ba9?s=128&d=identicon&r=PG", "display_name": "antoyo", "link": "https://stackoverflow.com/users/389119/antoyo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 87, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1421093152, "creation_date": 1420931448, "last_edit_date": 1421093152, "question_id": 27882155, "link": "https://stackoverflow.com/questions/27882155/how-to-create-cassius-mixin", "title": "How to create Cassius Mixin", "body": "<p>How can I create a CSS mixin with Cassius (from Yesod Haskell Web Framework)\u00a0?</p>\n\n<p>For instance, this code:</p>\n\n<pre><code>transition val = [cassiusMixin|\n-webkit-transition: #{val}\n-moz-transition: #{val}\n-ms-transition: #{val}\n-o-transition: #{val}\ntransition: #{val}\n|]\n</code></pre>\n\n<p>does not work because <code>cassiusMixin</code> does not exist.</p>\n\n<p>Is there a way to create a mixin with cassius?</p>\n\n<p>If not, is cassius a limited version of lucius?</p>\n"}, {"tags": ["haskell", "ghc", "compiler-optimization", "read-eval-print-loop", "ghci"], "answers": [{"comments": [{"owner": {"reputation": 18999, "user_id": 825637, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/825a58fde1ef99db42c5354dab6cd472?s=128&d=identicon&r=PG", "display_name": "MasterMastic", "link": "https://stackoverflow.com/users/825637/mastermastic"}, "edited": false, "score": 0, "creation_date": 1420948258, "post_id": 27881726, "comment_id": 44169287, "body": "So it seems to me this could be a way to actually time functions and roughly measure performances through GHCi. Can you or anyone approve or disapprove?"}, {"owner": {"reputation": 10726, "user_id": 889902, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/ops76.png?s=128&g=1", "display_name": "Wojciech Danilo", "link": "https://stackoverflow.com/users/889902/wojciech-danilo"}, "edited": false, "score": 0, "creation_date": 1420989138, "post_id": 27881726, "comment_id": 44178013, "body": "@ChristianConkle have you seen this topic? <a href=\"http://stackoverflow.com/questions/27541609/difference-in-performance-of-compiled-accelerate-code-ran-from-ghci-and-shell\" title=\"difference in performance of compiled accelerate code ran from ghci and shell\">stackoverflow.com/questions/27541609/&hellip;</a>"}, {"owner": {"reputation": 5707, "user_id": 1186208, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e601af8314cff7e7cca5647125e5a5ed?s=128&d=identicon&r=PG", "display_name": "Christian Conkle", "link": "https://stackoverflow.com/users/1186208/christian-conkle"}, "reply_to_user": {"reputation": 10726, "user_id": 889902, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/ops76.png?s=128&g=1", "display_name": "Wojciech Danilo", "link": "https://stackoverflow.com/users/889902/wojciech-danilo"}, "edited": false, "score": 0, "creation_date": 1420999254, "post_id": 27881726, "comment_id": 44181484, "body": "@WojciechDanilo - Yes. I just posted a comment there. (I don&#39;t think I can @ notify you in that topic because you haven&#39;t commented yet.)"}, {"owner": {"reputation": 35444, "user_id": 656912, "user_type": "registered", "accept_rate": 66, "profile_image": "https://www.gravatar.com/avatar/ce95c01cbd4f90f014d988ae5c8a422d?s=128&d=identicon&r=PG", "display_name": "orome", "link": "https://stackoverflow.com/users/656912/orome"}, "edited": false, "score": 1, "creation_date": 1444744685, "post_id": 27881726, "comment_id": 54024101, "body": "I <a href=\"https://ghc.haskell.org/trac/ghc/ticket/10965\" rel=\"nofollow noreferrer\">crash</a> when I try including <code>{-# OPTIONS_GHC -fobject-code -O #-}</code>."}], "tags": [], "owner": {"reputation": 5707, "user_id": 1186208, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e601af8314cff7e7cca5647125e5a5ed?s=128&d=identicon&r=PG", "display_name": "Christian Conkle", "link": "https://stackoverflow.com/users/1186208/christian-conkle"}, "is_accepted": true, "score": 13, "last_activity_date": 1420928455, "last_edit_date": 1420928455, "creation_date": 1420927629, "answer_id": 27881726, "question_id": 27881725, "link": "https://stackoverflow.com/questions/27881725/how-can-i-load-optimized-code-in-ghci/27881726#27881726", "title": "How can I load optimized code in GHCI?", "body": "<p>Either use <code>ghci -fobject-code -O Test.hs</code> or <code>cabal repl --ghc-options=\"-fobject-code -O\"</code>. In more detail:</p>\n\n<ol>\n<li><p>ghci must be invoked with the <a href=\"https://downloads.haskell.org/~ghc/7.8.3/docs/html/users_guide/ghci-obj.html\" rel=\"noreferrer\"><code>-fobject-code</code> flag</a>.</p></li>\n<li><p>Optimization flag(s) must be given <em>after</em> <code>-fobject-code</code> on the command line, or in an OPTIONS_GHC pragma at the top of the module. Trying <code>ghc --interactive -O -fobject-code</code> produces a warning that \"-O conflicts with --interactive; -O ignored.\" This is perhaps a bug.</p></li>\n<li><p>If you're working on a cabalized project and using <code>cabal repl</code>, you need to pass the flags either on the command line (i.e. <code>cabal repl --ghc-options=\"-fobject-code -O\"</code>) or in a pragma. Cabal (currently) discards optimization flags set in the .cabal file with <code>ghc-options</code> when invoking ghci; in fact, it explicitly sets <code>-O0</code> instead. This is perhaps a bug.</p></li>\n</ol>\n\n<p>Note in any case that you sometimes need to force recompilation manually when switching between optimized and unoptimized mode. Build artifacts are, for some reason, not invalidated when the optimization flags change so long as <code>-fobject-code</code> remains on. If, starting from a clean slate, you have <code>-fobject-code</code> set in your .cabal file, run <code>cabal repl</code> which compiles the module, and then remember you need to set -O on the command line and run <code>cabal repl --ghc-options=-O</code>, ghc will happily load the previously-compiled, unoptimized module. This is also perhaps a bug.</p>\n\n<p>The most reliable scenario for testing a single module seems to be to put <code>{-# OPTIONS_GHC -fobject-code -O #-}</code> at the top of the module. You will get optimized code no matter how you invoke ghci. I haven't investigated what happens in multi-module situations where some but not all modules have the pragma.</p>\n\n<p>Incidentally, note that only code <em>in the module</em> is optimized. Even with optimization on, evaluating <code>g</code> in the repl will always produce <code>False</code>, because the repl input is not subject to rewrite rules.</p>\n"}], "owner": {"reputation": 5707, "user_id": 1186208, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e601af8314cff7e7cca5647125e5a5ed?s=128&d=identicon&r=PG", "display_name": "Christian Conkle", "link": "https://stackoverflow.com/users/1186208/christian-conkle"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1377, "favorite_count": 7, "accepted_answer_id": 27881726, "answer_count": 1, "score": 10, "last_activity_date": 1420928455, "creation_date": 1420927629, "last_edit_date": 1420927939, "question_id": 27881725, "link": "https://stackoverflow.com/questions/27881725/how-can-i-load-optimized-code-in-ghci", "title": "How can I load optimized code in GHCI?", "body": "<p>I am writing a module that relies on optimization. I want to test this module in ghci. But starting ghc in <code>--interactive</code> mode automatically disables optimization; if I compile the module with <code>-O</code> and then try to load it in an interactive session, <code>ghc</code> insists on loading it in interpreted mode.</p>\n\n<p>For a simple test case to distinguish optimized and unoptimized modules, <code>isOptimized</code> below evaluates to <code>True</code> with optimization on, but <code>False</code> with optimization off:</p>\n\n<pre><code>isOptimized :: Bool\nisOptimized = g\n\ng :: Bool\ng = False\n\n{-# NOINLINE g #-}\n{-# RULES \"g/True\"  g = True #-}\n</code></pre>\n"}, {"tags": ["function", "haskell", "precision"], "comments": [{"owner": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "edited": false, "score": 4, "creation_date": 1420923598, "post_id": 27881130, "comment_id": 44163905, "body": "Try using <a href=\"https://hackage.haskell.org/package/base/docs/Foreign-Storable.html#v:sizeOf\" rel=\"nofollow noreferrer\"><code>sizeOf</code></a> and multiply by 8?"}, {"owner": {"reputation": 1308, "user_id": 2248754, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0f3fdf7274a422a407b9554e822c96e8?s=128&d=identicon&r=PG", "display_name": "OllieB", "link": "https://stackoverflow.com/users/2248754/ollieb"}, "reply_to_user": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "edited": false, "score": 0, "creation_date": 1420924447, "post_id": 27881130, "comment_id": 44164132, "body": "Thanks, very simple as I suspected. Do you want to make that the answer ?"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 2, "creation_date": 1420924877, "post_id": 27881130, "comment_id": 44164247, "body": "Also notice that Haskell only specifies <code>Int</code>s must be at least 29 bits.  GHC, the most common compiler, uses machine native precision."}, {"owner": {"reputation": 1308, "user_id": 2248754, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0f3fdf7274a422a407b9554e822c96e8?s=128&d=identicon&r=PG", "display_name": "OllieB", "link": "https://stackoverflow.com/users/2248754/ollieb"}, "edited": false, "score": 0, "creation_date": 1420925946, "post_id": 27881130, "comment_id": 44164562, "body": "I don&#39;t actually need 32 or 64 bits, but I do need to know exactly how many I have. I&#39;m implementing an LFSR model, which involves shifting in new state to an existing state, and doing it efficeintly requires knowing how far to shift"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 1, "creation_date": 1420926465, "post_id": 27881130, "comment_id": 44164702, "body": "@OllieB Then use a fixed width integral from <code>Data.Word</code> or <code>Data.Int</code> (ex: Word32, Int16, etc).  Don&#39;t make code work for one architecture (ex: 32-bit) and not others!"}, {"owner": {"reputation": 1308, "user_id": 2248754, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0f3fdf7274a422a407b9554e822c96e8?s=128&d=identicon&r=PG", "display_name": "OllieB", "link": "https://stackoverflow.com/users/2248754/ollieb"}, "edited": false, "score": 0, "creation_date": 1420927176, "post_id": 27881130, "comment_id": 44164914, "body": "If I can get the precision of Int, I can make portable code, hence the question. My current solution is use a Int64, but I prefer more general code."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1420927975, "post_id": 27881130, "comment_id": 44165127, "body": "@OllieB What makes you say <code>Int64</code> is not portable?"}, {"owner": {"reputation": 1308, "user_id": 2248754, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0f3fdf7274a422a407b9554e822c96e8?s=128&d=identicon&r=PG", "display_name": "OllieB", "link": "https://stackoverflow.com/users/2248754/ollieb"}, "edited": false, "score": 1, "creation_date": 1420928561, "post_id": 27881130, "comment_id": 44165300, "body": "It is, but it may not be optimal for the machine in question."}, {"owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "edited": false, "score": 0, "creation_date": 1420990597, "post_id": 27881130, "comment_id": 44178513, "body": "Bear in mind that the Haskell standard only guarantees 30 bits (i.e. from -(2^29) to 2^29-1 inclusive). It is true that GHC provides 32 bits on 32 bit machines and 64 bits on 64 bit machines, but you should not rely on that."}, {"owner": {"reputation": 1308, "user_id": 2248754, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0f3fdf7274a422a407b9554e822c96e8?s=128&d=identicon&r=PG", "display_name": "OllieB", "link": "https://stackoverflow.com/users/2248754/ollieb"}, "edited": false, "score": 0, "creation_date": 1420995849, "post_id": 27881130, "comment_id": 44180328, "body": "I&#39;m aware of that. The implementation I require uses 23 bits of state, which is well within the minimum. Its a good point for others looking for reference though."}], "answers": [{"comments": [{"owner": {"reputation": 1308, "user_id": 2248754, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0f3fdf7274a422a407b9554e822c96e8?s=128&d=identicon&r=PG", "display_name": "OllieB", "link": "https://stackoverflow.com/users/2248754/ollieb"}, "edited": false, "score": 0, "creation_date": 1420926012, "post_id": 27881358, "comment_id": 44164584, "body": "That is a good solution. I&#39;ll see what else pops up, as I&#39;ve seen 2 ways I&#39;ve not thought of so far."}], "tags": [], "owner": {"reputation": 41142, "user_id": 262667, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/dd09cc9b40b956f93a00f5b464469d11?s=128&d=identicon&r=PG", "display_name": "Olivier Verdier", "link": "https://stackoverflow.com/users/262667/olivier-verdier"}, "is_accepted": false, "score": 4, "last_activity_date": 1420925100, "creation_date": 1420925100, "answer_id": 27881358, "question_id": 27881130, "link": "https://stackoverflow.com/questions/27881130/find-haskell-int-precision/27881358#27881358", "title": "Find Haskell Int precision", "body": "<p>One possibility is</p>\n\n<pre><code>import Data.Bits\n\ngetPrecision = popCount (maxBound :: Int) + 1\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "is_accepted": false, "score": 1, "last_activity_date": 1420926273, "creation_date": 1420926273, "answer_id": 27881520, "question_id": 27881130, "link": "https://stackoverflow.com/questions/27881130/find-haskell-int-precision/27881520#27881520", "title": "Find Haskell Int precision", "body": "<p>You could use <a href=\"https://hackage.haskell.org/package/base/docs/Foreign-Storable.html#v:sizeOf\" rel=\"nofollow\"><code>sizeOf</code></a> but this comes with the caveat that the type must not have any padding bits.</p>\n\n<pre><code>import Foreign (Storable, sizeOf)\n\ngetPrecision :: Storable a =&gt; a -&gt; Int\ngetPrecision dummy = sizeOf dummy * 8\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "edited": false, "score": 0, "creation_date": 1420990736, "post_id": 27883626, "comment_id": 44178568, "body": "If you are just asking for the size of an Int then bitSize should be fine."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "edited": false, "score": 1, "creation_date": 1420992485, "post_id": 27883626, "comment_id": 44179192, "body": "@PaulJohnson, yes, but I believe it&#39;s deprecated, so I wouldn&#39;t particularly recommend it."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 2, "last_activity_date": 1420946419, "last_edit_date": 1420946419, "creation_date": 1420946053, "answer_id": 27883626, "question_id": 27881130, "link": "https://stackoverflow.com/questions/27881130/find-haskell-int-precision/27883626#27883626", "title": "Find Haskell Int precision", "body": "<p>The cleanest way, for recent libraries (the ones that ship with GHC 7.8 or later), is to use <code>finiteBitSize</code> from <code>Data.Bits</code>. This is exactly the function you requested. With earlier versions, you can use <code>bitSize</code>, also from <code>Data.Bits</code>, a non-total version of the same thing. Specifically, <code>bitSize</code> will throw an exception if it's given something like <code>Integer</code> that doesn't have a bit size. <code>finiteBitSize</code> is in the <code>FiniteBits</code> subclass, so applying it to an <code>Integer</code> will give a type error. There's also a <code>bitSizeMaybe</code> in recent libraries, but that seems generally less useful.</p>\n"}], "owner": {"reputation": 1308, "user_id": 2248754, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/0f3fdf7274a422a407b9554e822c96e8?s=128&d=identicon&r=PG", "display_name": "OllieB", "link": "https://stackoverflow.com/users/2248754/ollieb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 1, "accepted_answer_id": 27883626, "answer_count": 3, "score": 2, "last_activity_date": 1420946419, "creation_date": 1420923357, "question_id": 27881130, "link": "https://stackoverflow.com/questions/27881130/find-haskell-int-precision", "title": "Find Haskell Int precision", "body": "<p>Int in Haskell uses the machines native precision. I know I can query the bounds using maxBound and minBound. Is there a similar way of querying the precision width?</p>\n\n<p>Something like</p>\n\n<pre><code>getPrecision :: Int -&gt; Int\n</code></pre>\n\n<p>which returns say either 32 or 64. </p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "edited": false, "score": 2, "creation_date": 1420923392, "post_id": 27881112, "comment_id": 44163839, "body": "You have an unclosed parenthesis.  Instead of using <code>putStr.printf</code>, consider using <code>print</code>.  Also, please post the error message you&#39;re getting."}, {"owner": {"reputation": 374, "user_id": 3785289, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/4wlxn.jpg?s=128&g=1", "display_name": "Lakshman", "link": "https://stackoverflow.com/users/3785289/lakshman"}, "reply_to_user": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "edited": false, "score": 0, "creation_date": 1420923581, "post_id": 27881112, "comment_id": 44163899, "body": "@Rufflewind Thanks for your reply. while copying I missed that. even with that(closed parenthesis)I am getting error."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1420924014, "post_id": 27881112, "comment_id": 44164038, "body": "@Lakshman As Rufflewind says, you should also use <code>print</code>. What error are you getting?"}, {"owner": {"reputation": 374, "user_id": 3785289, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/4wlxn.jpg?s=128&g=1", "display_name": "Lakshman", "link": "https://stackoverflow.com/users/3785289/lakshman"}, "reply_to_user": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "edited": false, "score": 0, "creation_date": 1420924405, "post_id": 27881112, "comment_id": 44164121, "body": "@Rufflewind Here is ideone link of my code also error message.<a href=\"http://ideone.com/BkIxbM\" rel=\"nofollow noreferrer\">ideone.com/BkIxbM</a> , Also can you please help me with similar thing in Haskell as My c++ code does."}, {"owner": {"reputation": 7872, "user_id": 440302, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/e785baf6d4a2626b8649d5b538c51858?s=128&d=identicon&r=PG", "display_name": "Rufflewind", "link": "https://stackoverflow.com/users/440302/rufflewind"}, "edited": false, "score": 1, "creation_date": 1420924720, "post_id": 27881112, "comment_id": 44164209, "body": "@Lakshman: Please edit the additional information into your question."}], "answers": [{"comments": [{"owner": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1420938683, "post_id": 27881377, "comment_id": 44167711, "body": "I disagree that using printf is less idiomatic. It is obviously shorter - but more importantly, the &quot;printf language&quot; is ubiquitous, so it is not any less clear to use printf."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 13807, "user_id": 2407038, "user_type": "registered", "accept_rate": 64, "profile_image": "https://www.gravatar.com/avatar/538f6f4a9aa43841841de7d8e8b169fc?s=128&d=identicon&r=PG&f=1", "display_name": "user2407038", "link": "https://stackoverflow.com/users/2407038/user2407038"}, "edited": false, "score": 0, "creation_date": 1420971246, "post_id": 27881377, "comment_id": 44172966, "body": "@user2407038 Clearly printf is idiomatic in C. In other languages I do not see format strings used very frequently. You can print everything in C++,Java,Python,Perl,PHP,... without ever knowing what a format string is. I do agree that all these languages have their own variant of <code>printf</code>, but IMO it it used only in very special cases."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 3, "last_activity_date": 1420925199, "creation_date": 1420925199, "answer_id": 27881377, "question_id": 27881112, "link": "https://stackoverflow.com/questions/27881112/writing-string-and-integer-to-stdout-in-haskell/27881377#27881377", "title": "Writing String and integer to stdout in Haskell", "body": "<p>Use <code>forM_ [1..n::Int]</code> to let the compiler know the type you want for <code>n</code>. Otherwise there's not enough information for the <code>readLn</code> to typecheck. </p>\n\n<pre><code>main :: IO ()\nmain = do\n    n &lt;- readLn\n    forM_ [1..n::Int] (\\i -&gt; do\n        m &lt;- readLn\n        printf \"Case %d: %d\\n\" i (solve m))\n</code></pre>\n\n<p><code>printf</code> is not so used in Haskell when you do not need its fancy features (e.g. <code>%04d</code> or more complex format strings). A more idiomatic way could be</p>\n\n<pre><code>main :: IO ()\nmain = do\n    n &lt;- readLn\n    forM_ [1..n::Int] (\\i -&gt; do\n        m &lt;- readLn\n        putStrLn $ \"Case \" ++ show i ++ \": \" ++ show (solve m)\n</code></pre>\n\n<p>The function <code>show</code> converts almost anything to a string.</p>\n"}], "owner": {"reputation": 374, "user_id": 3785289, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/4wlxn.jpg?s=128&g=1", "display_name": "Lakshman", "link": "https://stackoverflow.com/users/3785289/lakshman"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1489, "favorite_count": 0, "accepted_answer_id": 27881377, "answer_count": 1, "score": 0, "last_activity_date": 1420935283, "creation_date": 1420923258, "last_edit_date": 1420935283, "question_id": 27881112, "link": "https://stackoverflow.com/questions/27881112/writing-string-and-integer-to-stdout-in-haskell", "title": "Writing String and integer to stdout in Haskell", "body": "<p>I am new to Haskell and I want to know how to print string and integer value returned by some function in Haskell as we simply do in C++.</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint solve(int a) {\n  return a * a;\n}\n\nint main() {\n  int cases, number;\n  cin &gt;&gt; cases;\n\n  for (int cs = 1; cs &lt;= cases; cs++) {\n    cin  &gt;&gt; number; \n    cout &lt;&lt; \"Case \" &lt;&lt; cs &lt;&lt; \": \" &lt;&lt; solve(number) &lt;&lt; endl;\n  }\n\n  return 0;\n}\n</code></pre>\n\n<p>I tried similar in Haskell but no luck and getting error.</p>\n\n<pre><code>solve :: Int -&gt; Integer\nsolve = \u2026\n\nmain = do\n  n &lt;- readLn\n  forM_ [1..n] (\\i -&gt; do\n    m &lt;- readLn\n    printf \"Case %d: %d\" i (solve m))\n</code></pre>\n"}, {"tags": ["haskell", "types"], "comments": [{"owner": {"reputation": 2133, "user_id": 2494576, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69dcf21a7cf379c1f25476d80a73338f?s=128&d=identicon&r=PG", "display_name": "felix-eku", "link": "https://stackoverflow.com/users/2494576/felix-eku"}, "edited": false, "score": 1, "creation_date": 1420920184, "post_id": 27880535, "comment_id": 44162773, "body": "Why can&#39;t you just use another type variable like <code>z</code> instead of <code>Any</code>?"}, {"owner": {"reputation": 219, "user_id": 314239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/382877ee4bad4640c6be37d92ca5e8ab?s=128&d=identicon&r=PG", "display_name": "BT.", "link": "https://stackoverflow.com/users/314239/bt"}, "reply_to_user": {"reputation": 2133, "user_id": 2494576, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69dcf21a7cf379c1f25476d80a73338f?s=128&d=identicon&r=PG", "display_name": "felix-eku", "link": "https://stackoverflow.com/users/2494576/felix-eku"}, "edited": false, "score": 0, "creation_date": 1420920270, "post_id": 27880535, "comment_id": 44162803, "body": "because the function I plan to use Any in looks like this [(Any,x)] -&gt; [(y, Any)] -&gt; [(x,y)] on input of [(&quot;a&quot;,2),(3,4)]"}, {"owner": {"reputation": 7803, "user_id": 190744, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ia1FC.jpg?s=128&g=1", "display_name": "Stephen Diehl", "link": "https://stackoverflow.com/users/190744/stephen-diehl"}, "edited": false, "score": 1, "creation_date": 1420920283, "post_id": 27880535, "comment_id": 44162806, "body": "This is going to very brittle, I&#39;m not sure why you want an existential Any type if you could never use it for anything specific. <code>Data.Dynamic</code> is the preferred way to handle types that are not known until runtime."}, {"owner": {"reputation": 2133, "user_id": 2494576, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69dcf21a7cf379c1f25476d80a73338f?s=128&d=identicon&r=PG", "display_name": "felix-eku", "link": "https://stackoverflow.com/users/2494576/felix-eku"}, "reply_to_user": {"reputation": 31301, "user_id": 1598537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c214754fba6f3a238a93af85a0ab4f58?s=128&d=identicon&r=PG", "display_name": "AndrewC", "link": "https://stackoverflow.com/users/1598537/andrewc"}, "edited": false, "score": 0, "creation_date": 1420920327, "post_id": 27880535, "comment_id": 44162820, "body": "@AndrewC that will not help"}, {"owner": {"reputation": 2133, "user_id": 2494576, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69dcf21a7cf379c1f25476d80a73338f?s=128&d=identicon&r=PG", "display_name": "felix-eku", "link": "https://stackoverflow.com/users/2494576/felix-eku"}, "reply_to_user": {"reputation": 31301, "user_id": 1598537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c214754fba6f3a238a93af85a0ab4f58?s=128&d=identicon&r=PG", "display_name": "AndrewC", "link": "https://stackoverflow.com/users/1598537/andrewc"}, "edited": false, "score": 0, "creation_date": 1420920596, "post_id": 27880535, "comment_id": 44162941, "body": "@AndrewC tested it and it did not work (at least not with GHC 7.8.3)"}, {"owner": {"reputation": 31301, "user_id": 1598537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c214754fba6f3a238a93af85a0ab4f58?s=128&d=identicon&r=PG", "display_name": "AndrewC", "link": "https://stackoverflow.com/users/1598537/andrewc"}, "edited": false, "score": 0, "creation_date": 1420920665, "post_id": 27880535, "comment_id": 44162960, "body": "@BT That would work with a type signature of <code>[(a,x)] -&gt; [(y, b)] -&gt; [(x,y)]</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1420920860, "post_id": 27880535, "comment_id": 44163044, "body": "You can&#39;t pass <code>2</code> since it is of type <code>forall a. Num a =&gt; a</code> which is not type <code>Any</code>. The only thing you can pass is <code>undefined</code> and similar bottoms."}, {"owner": {"reputation": 219, "user_id": 314239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/382877ee4bad4640c6be37d92ca5e8ab?s=128&d=identicon&r=PG", "display_name": "BT.", "link": "https://stackoverflow.com/users/314239/bt"}, "edited": false, "score": 0, "creation_date": 1420920987, "post_id": 27880535, "comment_id": 44163088, "body": "Tried Dynamic library and it kind of works, but I can&#39;t change all of the arguments first.  So, no not really."}, {"owner": {"reputation": 219, "user_id": 314239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/382877ee4bad4640c6be37d92ca5e8ab?s=128&d=identicon&r=PG", "display_name": "BT.", "link": "https://stackoverflow.com/users/314239/bt"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1420921125, "post_id": 27880535, "comment_id": 44163134, "body": "@chi - Well that bites.  It may be reasonable, but still darn."}, {"owner": {"reputation": 14069, "user_id": 1769720, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5815db653a13a7122066f811caa020a7?s=128&d=identicon&r=PG", "display_name": "didierc", "link": "https://stackoverflow.com/users/1769720/didierc"}, "edited": false, "score": 1, "creation_date": 1420921977, "post_id": 27880535, "comment_id": 44163414, "body": "I think you need to add these details about how you plan to use your type back in your question, and perhaps also indicate how you will produce that data which will be filtered by your function."}, {"owner": {"reputation": 14069, "user_id": 1769720, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5815db653a13a7122066f811caa020a7?s=128&d=identicon&r=PG", "display_name": "didierc", "link": "https://stackoverflow.com/users/1769720/didierc"}, "edited": false, "score": 1, "creation_date": 1420922068, "post_id": 27880535, "comment_id": 44163440, "body": "My intuition is that you could do it simply with already existing standard functions by rethinking your whole algorithm."}, {"owner": {"reputation": 31301, "user_id": 1598537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c214754fba6f3a238a93af85a0ab4f58?s=128&d=identicon&r=PG", "display_name": "AndrewC", "link": "https://stackoverflow.com/users/1598537/andrewc"}, "reply_to_user": {"reputation": 2133, "user_id": 2494576, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69dcf21a7cf379c1f25476d80a73338f?s=128&d=identicon&r=PG", "display_name": "felix-eku", "link": "https://stackoverflow.com/users/2494576/felix-eku"}, "edited": false, "score": 0, "creation_date": 1420927053, "post_id": 27880535, "comment_id": 44164879, "body": "@chaosmasttter Ah I see now - bottom is the only element of the type <code>forall a . a</code>."}, {"owner": {"reputation": 31301, "user_id": 1598537, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c214754fba6f3a238a93af85a0ab4f58?s=128&d=identicon&r=PG", "display_name": "AndrewC", "link": "https://stackoverflow.com/users/1598537/andrewc"}, "edited": false, "score": 2, "creation_date": 1420927106, "post_id": 27880535, "comment_id": 44164896, "body": "@BT. Why do you actually want this? If you give more context to your problem, you&#39;ll perhaps get some good advice."}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 5, "last_activity_date": 1420921149, "creation_date": 1420921149, "answer_id": 27880806, "question_id": 27880535, "link": "https://stackoverflow.com/questions/27880535/haskell-how-to-build-the-heterogeneous-type-any/27880806#27880806", "title": "Haskell : How to build the Heterogeneous Type Any", "body": "<p>It seems from the comments the real question is: how do I type a list written with the literal syntax <code>[\"a\", False]</code>?</p>\n\n<p>The answer (fortunately!) is \"you can't\".</p>\n\n<p>You <em>can</em> make an existential type, and wrap each element with the existential. If you want to do this, you can do that this way:</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\ndata Box where\n    Box :: a -&gt; Box\n</code></pre>\n\n<p>Then the list <code>[Box \"a\", Box False]</code> will be well typed at type <code>[Box]</code>. However, if you're willing to apply a function to each element, then you might as well skip all the type shenanigans and do something like this instead:</p>\n\n<pre><code>toss :: a -&gt; ()\ntoss _ = ()\n</code></pre>\n\n<p>Then <code>[toss \"a\", toss False]</code> has the very understandable type <code>[()]</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 219, "user_id": 314239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/382877ee4bad4640c6be37d92ca5e8ab?s=128&d=identicon&r=PG", "display_name": "BT.", "link": "https://stackoverflow.com/users/314239/bt"}, "edited": false, "score": 0, "creation_date": 1420921416, "post_id": 27880827, "comment_id": 44163237, "body": "Ugh, I forgot about the producer.  That would completely destroy the type safety.  Sad."}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 6, "last_activity_date": 1420938946, "last_edit_date": 1420938946, "creation_date": 1420921247, "answer_id": 27880827, "question_id": 27880535, "link": "https://stackoverflow.com/questions/27880535/haskell-how-to-build-the-heterogeneous-type-any/27880827#27880827", "title": "Haskell : How to build the Heterogeneous Type Any", "body": "<p>I think there's a fundamental misunderstanding about the <code>Any</code> type. Let me explain through a few examples. </p>\n\n<p>An \"Any-producer\" function</p>\n\n<pre><code>f :: ... -&gt; Any\n</code></pre>\n\n<p>can be used to produce a value which is of any type: it returns a string which is also an integer and a pair and an elephant at the same time. Concretely, it returns bottom (or it does not return at all, if you prefer).</p>\n\n<p>An \"Any-consumer\" function</p>\n\n<pre><code>f :: Any -&gt; ...\n</code></pre>\n\n<p><em>expects</em> to be fed with a value of any type: the <em>caller</em> has to provide a string which is also an integer and a pair and an elephant at the same time. Concretely, the caller has to pass bottom.</p>\n\n<p>You are trying to pass <code>2</code>, which is <em>not</em> of any type -- it only is of any <em>numeric</em> type. Hence the type error.</p>\n\n<p>If you wanted to write a function that accepts anything, you should write</p>\n\n<pre><code>type Any = exists a. a  -- INVALID Haskell\nf :: Any -&gt; ...\n</code></pre>\n\n<p>but alas, Haskell does not allow this kind of existential types. If you want that type you have to box it:</p>\n\n<pre><code>data Any = forall a . Any a\nf :: Any -&gt; ...\n\ncaller = f (Any 'd')\n</code></pre>\n\n<p>Alternatively, you can hoist the <code>exists</code> to the top-level. Since it is in negative position, it becomes a <code>forall</code></p>\n\n<pre><code>f :: (exists a. a) -&gt; ...\n-- becomes\nf :: forall a. (a -&gt; ...)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 219, "user_id": 314239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/382877ee4bad4640c6be37d92ca5e8ab?s=128&d=identicon&r=PG", "display_name": "BT.", "link": "https://stackoverflow.com/users/314239/bt"}, "edited": false, "score": 0, "creation_date": 1420921545, "post_id": 27880834, "comment_id": 44163289, "body": "Kind of complicates everything that I was trying to do this with.  But, thank you for your answer.  It&#39;s rather cool."}], "tags": [], "owner": {"reputation": 2133, "user_id": 2494576, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/69dcf21a7cf379c1f25476d80a73338f?s=128&d=identicon&r=PG", "display_name": "felix-eku", "link": "https://stackoverflow.com/users/2494576/felix-eku"}, "is_accepted": false, "score": 3, "last_activity_date": 1420921304, "creation_date": 1420921304, "answer_id": 27880834, "question_id": 27880535, "link": "https://stackoverflow.com/questions/27880535/haskell-how-to-build-the-heterogeneous-type-any/27880834#27880834", "title": "Haskell : How to build the Heterogeneous Type Any", "body": "<p>It can not work, because your <code>Any</code> is in fact <code>All</code>. It can only be constructed from a expression which has every type (something like <code>undefined</code>).</p>\n\n<p>You will need to use <code>{-# LANGUAGE ExistentialQuantification #-} to build a real</code>Any`:</p>\n\n<pre><code>data Any = forall a . Any a\n</code></pre>\n\n<p>This needs to be a data type, so you will have to create values by using the <code>Any</code> constructor but now you can do something like this:</p>\n\n<pre><code>f :: [(x, Any)] -&gt; [(Any, y)] -&gt; [(x,y)]\nf ((x, _) : xs) ((_, y) : ys) = (x,y) : f xs ys\nf _ _ = []\n\n&gt; f [(\"hi\", Any 'a'),(\"you\", Any 3)] [(Any \"a\", 2),(Any Nothing, 4)]\n[(\"hi\",2),(\"you\",4)]\n</code></pre>\n"}], "owner": {"reputation": 219, "user_id": 314239, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/382877ee4bad4640c6be37d92ca5e8ab?s=128&d=identicon&r=PG", "display_name": "BT.", "link": "https://stackoverflow.com/users/314239/bt"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 0, "accepted_answer_id": 27880827, "answer_count": 3, "score": 3, "last_activity_date": 1420938946, "creation_date": 1420919571, "question_id": 27880535, "link": "https://stackoverflow.com/questions/27880535/haskell-how-to-build-the-heterogeneous-type-any", "title": "Haskell : How to build the Heterogeneous Type Any", "body": "<p>I'd like to build a type to match up to anything but never be used.</p>\n\n<p>Example:</p>\n\n<pre><code>type Any = forall a. a\nf :: (x, Any) -&gt; (Any, y) -&gt; (x,y)\nf (x,_) (_,y) = (x,y)\n</code></pre>\n\n<p>This compiles just fine with <code>{-# LANGUAGE ImpredicativeTypes #-}</code> but if I try</p>\n\n<pre><code>f (\"hi\", 2) (3, (1, 2))\n</code></pre>\n\n<p>I get the error:</p>\n\n<pre><code>&lt;interactive&gt;:19:9:\n    No instance for (Num a) arising from the literal `2'\n    Possible fix:\n      add (Num a) to the context of a type expected by the context: a\n    In the expression: 2\n    In the first argument of `f', namely `(\"hi\", 2)'\n    In the expression: f (\"hi\", 2) (3, (1, 2))\n\n&lt;interactive&gt;:19:13:\n    No instance for (Num a) arising from the literal `3'\n    Possible fix:\n      add (Num a) to the context of a type expected by the context: a\n    In the expression: 3\n    In the second argument of `f', namely `(3, (1, 2))'\n    In the expression: f (\"hi\", 2) (3, (1, 2))\n</code></pre>\n\n<p>Which would be fine if I just wanted x and y to be Num, but what I plan to do with this needs to be much more flexible then that.  I understand that <code>forall a. a</code> matches to all types but can only pass a thunk that can never be computed and bottom.  But, I have no desire to ever look into the Any type.</p>\n"}, {"tags": ["json", "parsing", "haskell", "recursion"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1420921372, "post_id": 27878788, "comment_id": 44163209, "body": "You&#39;ll help yourself a lot -- probably to the point you will be able to answer your own question, but certainly to the point where people may be interested in taking a look at your problem -- if you minimize this code. That&#39;s just standard debugging practice."}], "answers": [{"tags": [], "owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "is_accepted": true, "score": 2, "last_activity_date": 1420940734, "creation_date": 1420940734, "answer_id": 27883160, "question_id": 27878788, "link": "https://stackoverflow.com/questions/27878788/recursive-json-parsing-in-haskell/27883160#27883160", "title": "Recursive JSON parsing in Haskell", "body": "<p>The problem is that your have defined Snapshot as:</p>\n\n<pre><code>data Snapshot = Snapshot Timestamp Version DocumentOrDirectory\n</code></pre>\n\n<p>but your FromJSON instance is:</p>\n\n<pre><code>where parser (JSON.Object v') = Snapshot &lt;$&gt; v' JSON..: T.pack \"version\"\n                                         &lt;*&gt; v' JSON..: T.pack \"timestamp\"\n                                         &lt;*&gt; v' JSON..: T.pack \"artifact\"\n</code></pre>\n\n<p>i.e. - you have the order of the fields mixed up.</p>\n"}], "owner": {"reputation": 5242, "user_id": 50962, "user_type": "registered", "accept_rate": 91, "profile_image": "https://www.gravatar.com/avatar/e39b7acdae85aedee02487bed17ff5f6?s=128&d=identicon&r=PG", "display_name": "altern", "link": "https://stackoverflow.com/users/50962/altern"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 159, "favorite_count": 0, "closed_date": 1421179513, "accepted_answer_id": 27883160, "answer_count": 1, "score": 1, "last_activity_date": 1420940734, "creation_date": 1420909462, "last_edit_date": 1420910201, "question_id": 27878788, "link": "https://stackoverflow.com/questions/27878788/recursive-json-parsing-in-haskell", "closed_reason": "Not suitable for this site", "title": "Recursive JSON parsing in Haskell", "body": "<p>I have following piece of haskell code. Even though it is too long, you can copy-paste it and it will work right away:</p>\n\n<pre><code>module DebugVersionJSON where\n\nimport Data.Attoparsec.Char8\nimport qualified Data.Aeson as JSON\nimport qualified Data.Text as T\nimport qualified Data.ByteString.Char8 as BS\nimport Control.Applicative\nimport Control.Monad\nimport qualified Data.HashMap.Strict as HashMap\n\ndata VersionCompound = NumberPlaceholder                      -- X\n                     | Number Int                           -- 1, 2, 3, ..., 45, ... \n                     deriving (Show)\n\ninstance Eq VersionCompound where\n    NumberPlaceholder == NumberPlaceholder = True\n    (Number v1) == (Number v2)            = (v1 == v2)\n    _ == _                                 = False\n\ntype NumberOfDimensions = VersionCompound\n\nversionCompoundToString :: VersionCompound -&gt; String\nversionCompoundToString (Number n) = (show n)\nversionCompoundToString NumberPlaceholder = \"x\"\n\nparseVersionCompound :: Parser VersionCompound\nparseVersionCompound =\n     ( string (BS.pack \"x\")    &gt;&gt; return NumberPlaceholder)\n &lt;|&gt; ( string (BS.pack \"X\")    &gt;&gt; return NumberPlaceholder)\n &lt;|&gt; ( decimal &gt;&gt;= \\num -&gt; return (Number num) )\n\ndata VersionNumber = VersionCompound VersionCompound\n                    | VersionNumber VersionCompound VersionNumber\n                    deriving (Show)\n\ninstance Eq VersionNumber where\n    ( VersionCompound vc1 ) == ( VersionCompound vc2 ) = (vc1 == vc2)\n    ( VersionNumber vc1 vn1 ) == ( VersionNumber vc2 vn2 ) = (vc1 == vc2 &amp;&amp; vn1 == vn2)\n    ( VersionNumber vc1 vn1 ) == ( VersionCompound vc2 ) = (vc1 == vc2 &amp;&amp; vn1 == (VersionCompound NumberPlaceholder) ) \n    ( VersionCompound vc1 ) == ( VersionNumber vc2 vn2) = (vc1 == vc2 &amp;&amp; vn2 == (VersionCompound NumberPlaceholder) )\n\nversionNumberToString :: VersionNumber -&gt; String\nversionNumberToString (VersionNumber vc vn) = (versionCompoundToString vc) ++ \".\" ++ (versionNumberToString vn)\nversionNumberToString (VersionCompound vc) = (versionCompoundToString vc)\n\nparseVersionNumber :: Parser VersionNumber\nparseVersionNumber = do\n    ds &lt;- sepBy1 parseVersionCompound (char '.')\n    let vs = map VersionCompound ds\n    return (foldr1 (\\(VersionCompound vc) -&gt; VersionNumber vc) vs )\n\ndata MaturityLevel = Dev\n                   | Test\n                   | User\n                   | ReleaseCandidate\n                   | Prod\n                   deriving (Show, Enum, Ord, Eq)\n\nparseMaturity :: Parser MaturityLevel\nparseMaturity = \n        ( string (BS.pack \"Dev\") &gt;&gt; return Dev)\n    &lt;|&gt; ( string (BS.pack \"Test\") &gt;&gt; return Test)\n    &lt;|&gt; ( string (BS.pack \"User\") &gt;&gt; return User)\n    &lt;|&gt; ( string (BS.pack \"ReleaseCandidate\") &gt;&gt; return ReleaseCandidate)\n    &lt;|&gt; ( string (BS.pack \"Prod\") &gt;&gt; return Prod)\n\ndata Version = MaturityVersion MaturityLevel VersionNumber  -- Dev/1.x.0, Test/1.x.3, User/1.x.4, User/2.5.1, ...\n            | Version VersionNumber\n\ninstance Show Version where\n    show version = versionToString version\n\ninstance Eq Version where\n    (Version vn1) == (Version vn2) = (vn1 == vn2)\n    (Version vn1) == (MaturityVersion ml vn2) = (ml == Dev) &amp;&amp; vn1 == vn2\n    (MaturityVersion ml vn1) == (Version vn2) = (ml == Dev) &amp;&amp; vn1 == vn2\n    (MaturityVersion ml1 vn1) == (MaturityVersion ml2 vn2)      = ( ml1 == ml2 ) &amp;&amp; (vn1 == vn2)\n\nversionToString :: Version -&gt; String\nversionToString (MaturityVersion maturityLevel versionNumber) = (show maturityLevel) ++ \"/\" ++ (versionNumberToString versionNumber)\nversionToString (Version versionNumber) = (versionNumberToString versionNumber)\n\ninstance JSON.ToJSON Version where\n    toJSON version = \n        JSON.object [ T.pack \"version\" JSON..= (T.pack $ show version)]\n\ninstance JSON.FromJSON Version where\n    parseJSON (JSON.Object v) = liftM stringToVersion ( v JSON..: T.pack \"version\" )\n    parseJSON _ = mzero\n\nparseVersion :: Parser Version\nparseVersion = do { \n        maturity &lt;- parseMaturity\n      ; char '/'\n      ; version &lt;- parseVersionNumber\n      ; return $ MaturityVersion maturity version\n    } \n    &lt;|&gt; do { \n        version &lt;- parseVersionNumber\n      ; return $ Version version\n    } \n\nclass VersionOperations a where\n    decrement :: a -&gt; a\n    decrementDimension :: NumberOfDimensions -&gt; a -&gt; a\n    increment :: a -&gt; a\n    incrementDimension :: NumberOfDimensions -&gt; a -&gt; a\n\ninstance VersionOperations VersionCompound where \n    decrement           NumberPlaceholder       = NumberPlaceholder\n    decrement           (Number 0)              = Number 0\n    decrement           (Number num)            = Number (num - 1)\n    decrementDimension  _                   a   = decrement a\n    increment           NumberPlaceholder       = NumberPlaceholder\n    increment           (Number num)            = Number (num + 1)\n    incrementDimension  _                   a   = increment a\n\ncreateVersionNumberByNumberOfDimensions :: NumberOfDimensions -&gt; VersionNumber\ncreateVersionNumberByNumberOfDimensions ( NumberPlaceholder ) = VersionCompound NumberPlaceholder\ncreateVersionNumberByNumberOfDimensions ( Number 0 ) = VersionCompound NumberPlaceholder\ncreateVersionNumberByNumberOfDimensions ( Number 1 ) = VersionCompound NumberPlaceholder\ncreateVersionNumberByNumberOfDimensions num = VersionNumber NumberPlaceholder ( createVersionNumberByNumberOfDimensions ( decrement num ) )\n\nstringToVersion :: String -&gt; Version\nstringToVersion str = case (parseOnly parseVersion $ BS.pack str) of\n    Right a -&gt; a\n    Left _ -&gt; Version ( createVersionNumberByNumberOfDimensions (Number 0) )\n\n\nvc1 :: VersionCompound\nvc1 = NumberPlaceholder\n\nvc2 :: VersionCompound\nvc2 = (Number 1)\n\nvc3 :: VersionCompound\nvc3 = (Number 2)\n\nv4 :: Version\nv4 = MaturityVersion Dev ( VersionCompound ( Number 3 ) )\n\nv5 :: Version\nv5 = MaturityVersion ReleaseCandidate ( VersionCompound ( Number 50 ) )\n\n\ntype DocumentName = String\ntype DirectoryName = String\ntype DocumentContent = String\n\ndata Document = Document DocumentName DocumentContent deriving (Show, Eq)\ndata Directory = Directory DirectoryName [DocumentOrDirectory] deriving (Show, Eq)\nnewtype DocumentOrDirectory = DocumentOrDirectory (Either Document Directory) deriving (Show, Eq)\n\nemptyDocument = ( Document \"\" \"\" )\n\n-- instance Show DocumentOrDirectory where\n    -- show (Document name content ) = \"Document: \" ++ name ++ \", Content: \" ++ content ++ \"\"\n    -- show (Directory dirName content ) = \"Directory: \" ++ dirName ++ \", Content: \" ++ (show content) ++ \"\"\n\nliftDocument :: Document -&gt; DocumentOrDirectory\nliftDocument = DocumentOrDirectory . Left\n\nliftDirectory :: Directory -&gt; DocumentOrDirectory\nliftDirectory = DocumentOrDirectory . Right\n\n\n-- ToJSON\ninstance JSON.ToJSON Document where\n  toJSON (Document name content) = JSON.object [ T.pack \"document\" JSON..= JSON.object [\n    T.pack \"name\"    JSON..= name,\n    T.pack \"content\" JSON..= content ]]\n\ninstance JSON.ToJSON Directory where\n  toJSON (Directory name content) = JSON.object [ T.pack \"directory\" JSON..= JSON.object [\n    T.pack \"name\"    JSON..= name,\n    T.pack \"content\" JSON..= content ]]\n\ninstance JSON.ToJSON DocumentOrDirectory where\n  toJSON (DocumentOrDirectory (Left d))  = JSON.toJSON d\n  toJSON (DocumentOrDirectory (Right d)) = JSON.toJSON d\n\n-- FromJSON \ninstance JSON.FromJSON Document where\n  parseJSON (JSON.Object v) = maybe mzero parser $ HashMap.lookup (T.pack \"document\") v\n    where parser (JSON.Object v') = Document &lt;$&gt; v' JSON..: T.pack \"name\"\n                                        &lt;*&gt; v' JSON..: T.pack \"content\"\n          parser _           = mzero\n  parseJSON _          = mzero\n\ninstance JSON.FromJSON Directory where\n  parseJSON (JSON.Object v) = maybe mzero parser $ HashMap.lookup (T.pack \"directory\") v\n    where parser (JSON.Object v') = Directory &lt;$&gt; v' JSON..: T.pack \"name\"\n                                         &lt;*&gt; v' JSON..: T.pack \"content\"\n          parser _           = mzero\n  parseJSON _          = mzero\n\ninstance JSON.FromJSON DocumentOrDirectory where\n  parseJSON json = (liftDocument &lt;$&gt; JSON.parseJSON json) &lt;|&gt; (liftDirectory &lt;$&gt; JSON.parseJSON json)\n\n-- EXAMPLES --\ndoc1 :: Document\ndoc1 = Document \"doc1\" \"content1\"\ndoc2 :: Document\ndoc2 = Document \"doc2\" \"content2\"\n\n\ntype BranchName = String\ntype Timestamp = Integer\n\ndata Snapshot = Snapshot Timestamp Version DocumentOrDirectory \ndata Snapshot2 = Snapshot2 Timestamp DocumentOrDirectory deriving (Show, Eq)\n\ninstance Eq Snapshot where\n    (Snapshot timestampA versionA _ ) == (Snapshot timestampB versionB _ )  = (timestampA == timestampB) &amp;&amp; (versionA == versionB)\n    _ == _                                                                  = False\n\ninstance Show Snapshot where\n    show (Snapshot timestamp version contents ) = (\"Snapshot taken at \" ++ (show timestamp) ++ \", Version \" ++ (versionToString version) ++ \", \" ++ (show contents) ++ \"\")\n\ninstance JSON.ToJSON Snapshot where        \n    toJSON (Snapshot timestamp version document) = JSON.object [ T.pack \"snapshot\" JSON..= JSON.object [ \n      T.pack \"version\"  JSON..= JSON.toJSON version,\n      T.pack \"timestamp\" JSON..= timestamp,\n      T.pack \"artifact\"  JSON..= JSON.toJSON document ]]\n\ninstance JSON.ToJSON Snapshot2 where        \n    toJSON (Snapshot2 timestamp document) = JSON.object [ T.pack \"snapshot\" JSON..= JSON.object [ \n      T.pack \"timestamp\" JSON..= timestamp,\n      T.pack \"artifact\"  JSON..= JSON.toJSON document ]]\n\ninstance JSON.FromJSON Snapshot where\n  parseJSON (JSON.Object v) = maybe mzero parser $ HashMap.lookup (T.pack \"snapshot\") v\n    where parser (JSON.Object v') = Snapshot &lt;$&gt; v' JSON..: T.pack \"version\"\n                                             &lt;*&gt; v' JSON..: T.pack \"timestamp\"\n                                             &lt;*&gt; v' JSON..: T.pack \"artifact\"\n          parser _                = mzero\n  parseJSON _          = mzero\n\ninstance JSON.FromJSON Snapshot2 where\n  parseJSON (JSON.Object v) = maybe mzero parser $ HashMap.lookup (T.pack \"snapshot\") v\n    where parser (JSON.Object v') = Snapshot2 &lt;$&gt; v' JSON..: T.pack \"timestamp\"\n                                             &lt;*&gt; v' JSON..: T.pack \"artifact\"\n          parser _                = mzero\n  parseJSON _          = mzero\n\n\n\nsnapshot1 :: Snapshot\nsnapshot1 = Snapshot 12372 ( MaturityVersion Dev ( VersionCompound ( Number 10 ) ) ) ( liftDocument doc1 )\n\nsnapshot2 :: Snapshot2\nsnapshot2 = Snapshot2 12372  ( liftDocument doc1 )\n</code></pre>\n\n<p>On one hand, <code>JSON.decode $ JSON.encode snapshot2 :: Maybe Snapshot2</code> executes fine with <code>Just (Snapshot2 12372 (DocumentOrDirectory (Left (Document \"doc1\" \"content1\"))))</code> as a result. On another hand, <code>JSON.decode $ JSON.encode snapshot :: Maybe Snapshot</code> results in <code>Nothing</code>. </p>\n\n<p>The difference between two parsers is following:</p>\n\n<pre><code>instance JSON.ToJSON Snapshot where        \n    toJSON (Snapshot timestamp version document) = JSON.object [ T.pack \"snapshot\" JSON..= JSON.object [ \n      T.pack \"version\"  JSON..= JSON.toJSON version, -- &lt;- includes version parsing\n      T.pack \"timestamp\" JSON..= timestamp,\n      T.pack \"artifact\"  JSON..= JSON.toJSON document ]]\n\ninstance JSON.ToJSON Snapshot2 where        \n    toJSON (Snapshot2 timestamp document) = JSON.object [ T.pack \"snapshot\" JSON..= JSON.object [ \n      T.pack \"timestamp\" JSON..= timestamp,\n      T.pack \"artifact\"  JSON..= JSON.toJSON document ]]\n</code></pre>\n\n<p>Any ideas why <code>JSON.decode $ JSON.encode snapshot :: Maybe Snapshot</code> fails? I know something wrong with version parsing, but I have no idea what exactly. I will be glad if you could help me with figuring out how to fix version parsing so that I could parse JSON without errors. </p>\n"}, {"tags": ["haskell", "ghc", "quickcheck"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1420907194, "post_id": 27877390, "comment_id": 44158336, "body": "It definitely looks like some sort of Template Haskell issue. Are you using the bleeding-edge QuickCheck sources from git or darcs (whatever they use)? If not, try that. If so, report a bug."}], "answers": [{"tags": [], "owner": {"reputation": 1066, "user_id": 1709190, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/312687fd46a3b2a21bb469c2244c0668?s=128&d=identicon&r=PG", "display_name": "asr", "link": "https://stackoverflow.com/users/1709190/asr"}, "is_accepted": true, "score": 0, "last_activity_date": 1420920733, "creation_date": 1420920733, "answer_id": 27880746, "question_id": 27877390, "link": "https://stackoverflow.com/questions/27877390/issue-using-quickcheckall-and-ghc-7-10-1-rc1/27880746#27880746", "title": "Issue using quickCheckAll and GHC 7.10.1 RC1", "body": "<p>The issue was fixed in QuickCheck (see <a href=\"https://github.com/nick8325/quickcheck/issues/42\" rel=\"nofollow\">https://github.com/nick8325/quickcheck/issues/42</a>).</p>\n"}], "owner": {"reputation": 1066, "user_id": 1709190, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/312687fd46a3b2a21bb469c2244c0668?s=128&d=identicon&r=PG", "display_name": "asr", "link": "https://stackoverflow.com/users/1709190/asr"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 147, "favorite_count": 0, "accepted_answer_id": 27880746, "answer_count": 1, "score": 0, "last_activity_date": 1420920733, "creation_date": 1420900867, "question_id": 27877390, "link": "https://stackoverflow.com/questions/27877390/issue-using-quickcheckall-and-ghc-7-10-1-rc1", "title": "Issue using quickCheckAll and GHC 7.10.1 RC1", "body": "<p>The following example compiles with GHC 7.8.4 and QuickCheck 2.7.6:</p>\n\n<pre><code>{-# LANGUAGE TemplateHaskell #-}\n\nimport Test.QuickCheck\n\nprop_id :: Eq a =&gt; a -&gt; Bool\nprop_id x = x == x\n\n-- Hack to make $quickCheckAll work under GHC &gt;= 7.8.\nreturn []\n\nmain :: IO Bool\nmain = $quickCheckAll\n</code></pre>\n\n<p>Using GHC 7.10.1 RC 1, I got the following error:</p>\n\n<pre><code>$ ghc Bug.hs\nBug.hs:12:8:\n    Exception when trying to run compile-time code:\n      Higher-kinded type variables in type: forall (a_0 :: *) . GHC.Classes.Eq a_0 =&gt; a_0 -&gt; GHC.Types.Bool\n    Code: quickCheckAll\n   In the splice: $quickCheckAll\n</code></pre>\n\n<p>Can I fix the example using some conditional compilation? Or is the issue related to the QuickCheck library?</p>\n"}, {"tags": ["performance", "haskell", "primes"], "comments": [{"owner": {"reputation": 46235, "user_id": 2541573, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z1qtP.png?s=128&g=1", "display_name": "jub0bs", "link": "https://stackoverflow.com/users/2541573/jub0bs"}, "edited": false, "score": 0, "creation_date": 1420899503, "post_id": 27876816, "comment_id": 44155746, "body": "There are ways of improving your Haskell code. Could you specify exactly what you mean by <i>without changing the algorithm</i>, though?"}, {"owner": {"reputation": 302, "user_id": 4021031, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "bjpelcdev", "link": "https://stackoverflow.com/users/4021031/bjpelcdev"}, "reply_to_user": {"reputation": 46235, "user_id": 2541573, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z1qtP.png?s=128&g=1", "display_name": "jub0bs", "link": "https://stackoverflow.com/users/2541573/jub0bs"}, "edited": false, "score": 2, "creation_date": 1420900255, "post_id": 27876816, "comment_id": 44156009, "body": "Sure, by &quot;without changing the algorithm&quot;, I mean the underlying algorithm, not how it is implemented. For example, by changing the algorithm, the code be made more efficient if the divisibility of a number was only checked against prime numbers and not all odd numbers. In other words, I still want the code to check against all odd numbers up to the square root of the number being checked. I suppose I am asking the equivalent of &#39;would it be quicker to use a for loop or a while loop&#39; in C."}, {"owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "edited": false, "score": 0, "creation_date": 1420973116, "post_id": 27876816, "comment_id": 44173426, "body": "As to the question regarding <code>isPrime</code> with <code>sqrt</code>, <code>uppareLim</code> is definitely not recomputed for each factor. It&#39;s a basic optimization to float the definition one level higher. In fact, for me it&#39;s faster with <code>sqrt</code> when not using LLVM (and about the same with it). Don&#39;t know why you get the slowdown, maybe try benchmarking some more?"}, {"owner": {"reputation": 302, "user_id": 4021031, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "bjpelcdev", "link": "https://stackoverflow.com/users/4021031/bjpelcdev"}, "edited": false, "score": 0, "creation_date": 1420974361, "post_id": 27876816, "comment_id": 44173749, "body": "I&#39;m not sure what is going on then, I have just timed the version with the <code>factor &gt; upperLim</code> ten times and get an average runtime of 3.01 seconds. Ten runs of the version with <code>factor * factor &gt; n</code> gives me an average of 2.62 sec. I am using GHC 7.8.4 and am only compiling with the -O2 flag, I do not use LLVM."}], "answers": [{"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1420917820, "post_id": 27878819, "comment_id": 44162070, "body": "Interesting. I would further move the <code>odd</code> test outside the <code>foldr</code>, since there&#39;s no need to perform it at every iteration."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1420921792, "post_id": 27878819, "comment_id": 44163362, "body": "Remember to make <code>isPrime 2</code> true :)"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1420922069, "post_id": 27878819, "comment_id": 44163441, "body": "@chi, oops. I hope it&#39;s fixed now!"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1420922225, "post_id": 27878819, "comment_id": 44163504, "body": "The big question (I haven&#39;t tested) is whether full laziness will interfere with the inlining. If so, it might actually be necessary to switch to doing the recursion all by hand."}, {"owner": {"reputation": 302, "user_id": 4021031, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "bjpelcdev", "link": "https://stackoverflow.com/users/4021031/bjpelcdev"}, "edited": false, "score": 0, "creation_date": 1420923216, "post_id": 27878819, "comment_id": 44163797, "body": "Thank you very much for your reply, @dfeuer. I am familiar with the sieve of E algorithm but in this case I would like to stick to the current algorithm. I re-compiled the code with your recommendation (taking the 2 out and checking odd/even and with and without the inline bit), the execution time is exactly the same as my original code, both take 3.8 +/- 0.02 sec!"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 302, "user_id": 4021031, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "bjpelcdev", "link": "https://stackoverflow.com/users/4021031/bjpelcdev"}, "edited": false, "score": 0, "creation_date": 1420924985, "post_id": 27878819, "comment_id": 44164271, "body": "@bjpelcdev, I&#39;m not home right now, so I can&#39;t really dig into it, but you might try taking the lists out manually. It&#39;s annoying, but should work reliably."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 302, "user_id": 4021031, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "bjpelcdev", "link": "https://stackoverflow.com/users/4021031/bjpelcdev"}, "edited": false, "score": 1, "creation_date": 1420927194, "post_id": 27878819, "comment_id": 44164922, "body": "@bjpelcdev, I added another way."}, {"owner": {"reputation": 302, "user_id": 4021031, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "bjpelcdev", "link": "https://stackoverflow.com/users/4021031/bjpelcdev"}, "edited": false, "score": 0, "creation_date": 1420928869, "post_id": 27878819, "comment_id": 44165392, "body": "@dfeuer, thanks very much again, making progress, your latest recommendation shaves off 1 whole second (almost 25%)! The reason I do not want to change the underlying algorithm is I am comparing different languages in a <a href=\"https://bjpelc.wordpress.com/2015/01/10/yet-another-language-speed-test-counting-primes-c-c-java-javascript-php-python-and-ruby-2/comment-page-1/#comment-4\" rel=\"nofollow noreferrer\">blog post of mine</a>. I will add your latest version as an edit to my question."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1420928881, "post_id": 27878819, "comment_id": 44165398, "body": "You can speed this up some by making <code>isPrime</code> and <code>divisors</code> mutually recursive (<code>filter</code> the list in <code>divisors</code> by <code>isPrime</code>). On my computer, the first snippet is faster than the second if you do this."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 302, "user_id": 4021031, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "bjpelcdev", "link": "https://stackoverflow.com/users/4021031/bjpelcdev"}, "edited": false, "score": 0, "creation_date": 1420929298, "post_id": 27878819, "comment_id": 44165493, "body": "@bjpelcdev few more things to try is, make a specialized <code>isOddPrimeAboveTwo</code> and thus loose few superfluous tests per number in your <code>primesNo</code>. Plus, make <code>primesNo</code> to count from 3 up in increments of 2; add an accumulating argument and mark it strict (with the bang), to make sure there are no thunks explosion, maybe inline the <code>isOddPrimeAboveTwo</code> into it."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 1, "creation_date": 1420929356, "post_id": 27878819, "comment_id": 44165508, "body": "@DavidYoung, that&#39;s a different algorithm; the question was about using this one."}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1420929421, "post_id": 27878819, "comment_id": 44165534, "body": "Right, I wasn&#39;t thinking about that."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1420929473, "post_id": 27878819, "comment_id": 44165551, "body": "@WillNess, I think it&#39;s already strict enough; GHC can see that the accumulating parameter is tested on each iteration."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1420929590, "post_id": 27878819, "comment_id": 44165579, "body": "@dfeuer in OP&#39;s <code>primesNo</code>?"}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1420929675, "post_id": 27878819, "comment_id": 44165600, "body": "@WillNess I thought of that, but adding a strict accumulating parameter in <code>primesNo</code> didn&#39;t seem to improve the performance. That surprises me though."}, {"owner": {"reputation": 302, "user_id": 4021031, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "bjpelcdev", "link": "https://stackoverflow.com/users/4021031/bjpelcdev"}, "edited": false, "score": 0, "creation_date": 1420929965, "post_id": 27878819, "comment_id": 44165664, "body": "@dfeuer, I have added your latest isPrime algorithm as an edit to the original post."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1420930401, "post_id": 27878819, "comment_id": 44165786, "body": "@DavidYoung that just means that GHC&#39;s strictness analyzer did good. :)"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1420931145, "post_id": 27878819, "comment_id": 44165981, "body": "@WillNess, I didn&#39;t see what you were referring to. I suspect it matters little because the primality testing is much more expensive than the extra thunk per candidate."}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 4, "last_activity_date": 1420927148, "last_edit_date": 1420927148, "creation_date": 1420909648, "answer_id": 27878819, "question_id": 27876816, "link": "https://stackoverflow.com/questions/27876816/efficiency-in-haskell-when-counting-primes/27878819#27878819", "title": "Efficiency in Haskell when counting primes", "body": "<p>I urge you to use a different algorithm, such as the Sieve of Eratosthenes discussed in the <a href=\"http://www.cs.hmc.edu/~oneill/papers/Sieve-JFP.pdf\" rel=\"nofollow\">paper</a> by Melissa O'Neill, or the version used in <code>Math.NumberTheory.Primes</code> from the <a href=\"https://hackage.haskell.org/package/arithmoi\" rel=\"nofollow\">arithmoi</a> package, which also offers an optimized prime counting function. However, this might get you better constant factors:</p>\n\n<pre><code>-- is a number, n, prime? \nisPrime :: Int -&gt; Bool\nisPrime n\n  | n &lt;= 2 = n == 2\n  | otherwise = odd n &amp;&amp; -- Put the 2 here instead\n        foldr (\\d r -&gt; d * d &gt; n || (n `rem` d /= 0 &amp;&amp; r))\n                True divisors\n\n-- list of divisors for which to test primality\ndivisors :: [Int]\n{-# INLINE divisors #-} -- No guarantee, but it might possibly inline and stay inlined,\n               -- so the numbers will be generated on each call instead of\n               -- being pulled in (expensively) from RAM.\ndivisors = [3,5..] -- No more 2:\n</code></pre>\n\n<p>The reason to get rid of the <code>2:</code> is that an optimization called \"foldr/build fusion\", \"short cut deforestation\", or just \"list fusion\" can, potentially, make your divisors list go away, but, at least with GHC &lt; 7.10.1, that <code>2:</code> will block the optimization.</p>\n\n<hr>\n\n<p>Edit: it seems that's not working for you, so here's something else to try:</p>\n\n<pre><code>isPrime n\n  | n &lt;= 2 = n == 2\n  | otherwise = odd n &amp;&amp; go 3\n  where\n    go factor\n      | factor * factor &gt; n = True\n      | otherwise = n `rem` factor /= 0 &amp;&amp; go (factor+2) \n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 302, "user_id": 4021031, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "bjpelcdev", "link": "https://stackoverflow.com/users/4021031/bjpelcdev"}, "edited": false, "score": 0, "creation_date": 1420933046, "post_id": 27882170, "comment_id": 44166383, "body": "Thank you, Will. I have tried your first suggestion, that comes in at ~2.7 sec but only tests the odd numbers (I think?) so it doesn&#39;t actually speed up the algorithm, it just tests it against half the numbers. Could you please explain BangPatterns and !cnt? I haven&#39;t got that far with my Haskell yet as I only started last week."}, {"owner": {"reputation": 302, "user_id": 4021031, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "bjpelcdev", "link": "https://stackoverflow.com/users/4021031/bjpelcdev"}, "edited": false, "score": 0, "creation_date": 1420933977, "post_id": 27882170, "comment_id": 44166627, "body": "Just tried out your solution with Data.Lists, interesting to note how much adding a type definition helps to increase the efficiency. As typed, without the type def (defaulting to Integers) it runs in 7.8secs, adding the type def Int-&gt;Int it runs in 4.5 sec."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 302, "user_id": 4021031, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "bjpelcdev", "link": "https://stackoverflow.com/users/4021031/bjpelcdev"}, "edited": false, "score": 1, "creation_date": 1420940316, "post_id": 27882170, "comment_id": 44167996, "body": "yes, bang (!) patterns signify that the argument is evaluated strictly, i.e. right away, as opposed to the usual lazy delayed way. You can just try with or without it, to see whether there is any difference. The last code probably needs re-writing as loops (i.e. explicit recursion), but this too perhaps may be construed as algorithmic improvement. Ultimately, Haskell might be slower than C somewhat, but as long as <i>writing</i> correct code is much faster, it may be OK. &quot;Real programmers code in Assembly&quot; (TM). :)"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1420943866, "post_id": 27882170, "comment_id": 44168553, "body": "I suspect a lot of that inlining is unnecessary. Loads of inlining happens in my version if I mark <code>isPrime</code> with an <code>INLINE</code> pragma. Looking at the core, it looks like your hand-inlined version is unboxed less completely than my version is. I&#39;m not sure why that is."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1421029160, "post_id": 27882170, "comment_id": 44190038, "body": "Oh, that boxing is probably of no consequence. Forget that."}], "tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 1, "last_activity_date": 1420932517, "last_edit_date": 1420932517, "creation_date": 1420931588, "answer_id": 27882170, "question_id": 27876816, "link": "https://stackoverflow.com/questions/27876816/efficiency-in-haskell-when-counting-primes/27882170#27882170", "title": "Efficiency in Haskell when counting primes", "body": "<p>Inline everything, loose the superfluous tests, add strictness annotations just to be sure:</p>\n\n<pre><code>{-# LANGUAGE BangPatterns #-}\n\n-- pi(n) - the prime counting function, the number of prime numbers &lt;= n\nprimesNo :: Int -&gt; Int\nprimesNo n\n    | n &lt; 2 = 0\n    | otherwise = g 3 1\n where\n   g  k !cnt | k &gt; n     = cnt\n             | go 3      = g  (k+2) (cnt+1)\n             | otherwise = g  (k+2) cnt\n      where go f \n               | f*f &gt; k   = True\n               | otherwise = k `rem` f /= 0 &amp;&amp; go (f+2) \n\nmain = print $ primesNo (2^22)\n</code></pre>\n\n<p>The <code>go</code> testing function is as in dfeuer's answer. Compile with -O2 as usual, and <em>always test by running a standalone executable</em> (with something like <code>&gt; test +RTS -s</code>).</p>\n\n<p>Calls to <code>g</code> can be made direct (that's really micro-optimizing it):</p>\n\n<pre><code>primesNo n\n    | n &lt; 2 = 0\n    | otherwise = g 3 1\n where\n   g  k !cnt | k &gt; n     = cnt\n             | otherwise = go 3\n      where go f \n               | f*f &gt; k        = g (k+2) (cnt+1)\n               | k `rem` f == 0 = g (k+2) cnt\n               | otherwise      = go (f+2)\n</code></pre>\n\n<p>More substantial change (still keeping the algorithm arguably the same) which might or mightn't speed it up is to turn it inside out, to spare the squares computations: test by <code>[3]</code> all odds from 9 to 23, by <code>[3,5]</code> all odds from 25 to 47, etc., along the lines of <a href=\"https://www.haskell.org/haskellwiki/Prime_numbers#Segmented_Generate_and_Test\" rel=\"nofollow\">this segmented code</a>:</p>\n\n<pre><code>import Data.List (inits)\n\nprimesNo n = length (takeWhile (&lt;= n) $ 2 : oddprimes)\n  where\n    oddprimes = sieve 3 9 [3,5..] (inits [3,5..]) \n    sieve x q ~(_:t) (fs:ft) =\n      filter ((`all` fs) . ((/=0).) . rem) [x,x+2..q-2]\n      ++ sieve (q+2) (head t^2) t ft\n</code></pre>\n\n<p>Sometimes tweaking your code into using <code>and</code> instead of <code>all</code> changes the speed too. Further speedup might be attempted by inlining and simplifying everything (replace <code>length</code> with counting etc.). </p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1420943970, "post_id": 27882777, "comment_id": 44168569, "body": "Allocation depends tremendously on the actual code. If you want Haskell code to perform really well, you have to pay attention to what you&#39;re doing."}], "tags": [], "owner": {"reputation": 49959, "user_id": 866915, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/09242131d6e17cbbe31e8547514da6e5?s=128&d=identicon&r=PG", "display_name": "ErikR", "link": "https://stackoverflow.com/users/866915/erikr"}, "is_accepted": false, "score": 3, "last_activity_date": 1421356568, "last_edit_date": 1421356568, "creation_date": 1420936926, "answer_id": 27882777, "question_id": 27876816, "link": "https://stackoverflow.com/questions/27876816/efficiency-in-haskell-when-counting-primes/27882777#27882777", "title": "Efficiency in Haskell when counting primes", "body": "<p>In general I've found that looping in Haskell is about 3-4 times slower than what can be accomplished with C.</p>\n\n<p>To help understand the performance difference I slightly modified the\nprograms so that a fixed number of divisor tests are made per iteration\nand added a parameter <em>e</em> to control how many iterations are made -\nthe number of (outer) iterations performed is 2^e. For each outer iteration\napprox. 2^21 divisor tests are made.</p>\n\n<p>The source code for each program and scripts to run and analyze the\nresults made be found here: <a href=\"https://github.com/erantapaa/loopbench\" rel=\"nofollow\">https://github.com/erantapaa/loopbench</a></p>\n\n<p>Pull-requests to improve the benchmarking are welcome.</p>\n\n<p>Here are the results I get on a 2.4 GHz Intel Core 2 Duo using ghc 7.8.3 (under OSX). The gcc used was \"Apple LLVM version 6.0 (clang-600.0.56) (based on LLVM 3.5svn)\".</p>\n\n<pre><code>e     ctime   htime  allocated  gc-bytes alloc/iter  h/c      dns\n10   0.0101  0.0200      87424      3408             1.980   4.61\n11   0.0151  0.0345     112000      3408             2.285   4.51\n12   0.0263  0.0700     161152      3408             2.661   5.09\n13   0.0472  0.1345     259456      3408             2.850   5.08\n14   0.0819  0.2709     456200      3408             3.308   5.50\n15   0.1575  0.5382     849416      9616             3.417   5.54\n16   0.3112  1.0900    1635848     15960             3.503   5.66\n17   0.6105  2.1682    3208848     15984             3.552   5.66\n18   1.2167  4.3536    6354576     16032  24.24      3.578   5.70\n19   2.4092  8.7336   12646032     16128  24.12      3.625   5.75\n20   4.8332 17.4109   25229080     16320  24.06      3.602   5.72\n\ne          = exponent parameter\nctime      = running time of the C program\nhtime      = running time of the Haskell program\nallocated  = bytes allocated in the heap (Haskell program)\ngc-bytes   = bytes copied during GC (Haskell program)\nalloc/iter = bytes allocated in the heap / 2^e\nh / c      = htime divided by ctime\ndns        = (htime - ctime) divided by the number of divisor tests made\n             in nanoseconds\n\n# divisor tests made = 2^e * 2^11\n</code></pre>\n\n<p>Some observations:</p>\n\n<ol>\n<li>The Haskell program performs heap allocation at a rate of about 24 bytes per (outer) loop iteration. The C program clearly does not perform any alloction and runs completely in L1 cache.</li>\n<li>The gc-bytes count remains constant for e between 10 and 14 because no garbage collections were performed for those runs.</li>\n<li>The time ratio h/c gets progressively worse as more allocations are made.</li>\n<li>dps is a measure of the extra time the Haskell program takes per divisor test; it increases with the total amount of allocation made. Also there are some plateaus which suggest this is due to cache effects.</li>\n</ol>\n\n<p>It is well known that GHC does not produce the same tight loop code that\na C compiler produces. The penalty you pay is approx. 4.6 ns per iteration.\nMoreover, it looks like Haskell is also affected by cache effects due to\nheap allocation.</p>\n\n<p>24 bytes per allocation and 5 ns per loop iteration is not a lot for\nmost programs, but when you have 2^20 allocations and 2^40 loop iterations\nit becomes a factor.</p>\n"}, {"comments": [{"owner": {"reputation": 302, "user_id": 4021031, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "bjpelcdev", "link": "https://stackoverflow.com/users/4021031/bjpelcdev"}, "edited": false, "score": 1, "creation_date": 1420971721, "post_id": 27885739, "comment_id": 44173081, "body": "thank you very much for your reply, this seems to have got to the bottom of it, I had completely overlooked the different int sizes. Comparing to the C code with long-s the speed difference is much more in line with what I was expecting."}, {"owner": {"reputation": 302, "user_id": 4021031, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "bjpelcdev", "link": "https://stackoverflow.com/users/4021031/bjpelcdev"}, "edited": false, "score": 0, "creation_date": 1420971919, "post_id": 27885739, "comment_id": 44173130, "body": "I just tried importing Data.Int and converting the type declarations to Int32. This caused the running time to increase by approximately 10%."}, {"owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "reply_to_user": {"reputation": 302, "user_id": 4021031, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "bjpelcdev", "link": "https://stackoverflow.com/users/4021031/bjpelcdev"}, "edited": false, "score": 2, "creation_date": 1420972111, "post_id": 27885739, "comment_id": 44173182, "body": "That&#39;s only as expected if your native word size is 64 bits. In GHC the non-native sized integer operations are <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/libraries/ghc-prim-0.3.1.0/GHC-Prim.html\" rel=\"nofollow noreferrer\">implemented as foreign calls</a>, while the native sized ops are primitives (translated to instructions eventually)."}, {"owner": {"reputation": 302, "user_id": 4021031, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "bjpelcdev", "link": "https://stackoverflow.com/users/4021031/bjpelcdev"}, "edited": false, "score": 0, "creation_date": 1420972686, "post_id": 27885739, "comment_id": 44173324, "body": "Thank you again, I&#39;m certainly learning a lot from all the replies to my question."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 302, "user_id": 4021031, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "bjpelcdev", "link": "https://stackoverflow.com/users/4021031/bjpelcdev"}, "edited": false, "score": 0, "creation_date": 1421029279, "post_id": 27885739, "comment_id": 44190062, "body": "@bjpelcdev, you might also want to try the list versions with GHC 7.10. There have been changes both to the libraries and the optimizer that may (possibly) make them work better."}], "tags": [], "owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "is_accepted": false, "score": 2, "last_activity_date": 1420970584, "last_edit_date": 1420970584, "creation_date": 1420969681, "answer_id": 27885739, "question_id": 27876816, "link": "https://stackoverflow.com/questions/27876816/efficiency-in-haskell-when-counting-primes/27885739#27885739", "title": "Efficiency in Haskell when counting primes", "body": "<p><em>The C code uses 32-bit integers, while the Haskell code uses 64-bit integers.</em></p>\n\n<p>The original C code runs in <strong>0.63</strong> secs on my computer. However, if I replace the <code>int</code>-s with <code>long</code>-s, it runs in <strong>2.07</strong> seconds with gcc and <strong>2.17</strong> secs with clang.</p>\n\n<p>In comparison, the updated <code>isPrime</code> function (see it in the thread question) runs in <strong>2.09</strong> seconds (with -O2 and -fllvm). Note that is slightly better than the clang-compiled C code, even though they use the same LLVM code generator. </p>\n\n<p>The original Haskell code runs in <strong>3.2</strong> secs, which I think is an acceptable overhead for the convenience of using lists for iteration.</p>\n"}], "owner": {"reputation": 302, "user_id": 4021031, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "bjpelcdev", "link": "https://stackoverflow.com/users/4021031/bjpelcdev"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 641, "favorite_count": 1, "accepted_answer_id": 27878819, "answer_count": 4, "score": 5, "last_activity_date": 1421356568, "creation_date": 1420897174, "last_edit_date": 1420972628, "question_id": 27876816, "link": "https://stackoverflow.com/questions/27876816/efficiency-in-haskell-when-counting-primes", "title": "Efficiency in Haskell when counting primes", "body": "<p>I have the following set of functions to count the number of primes less than or equal to a number n in Haskell. </p>\n\n<p>The algorithm takes a number, checks if it is divisible by two and then checks if it divisible by odd numbers up to the square root of the number being checked. </p>\n\n<pre><code>-- is a numner, n, prime? \nisPrime :: Int -&gt; Bool\nisPrime n = n &gt; 1 &amp;&amp;\n              foldr (\\d r -&gt; d * d &gt; n || (n `rem` d /= 0 &amp;&amp; r))\n                True divisors\n\n-- list of divisors for which to test primality\ndivisors :: [Int]\ndivisors = 2:[3,5..]\n\n-- pi(n) - the prime counting function, the number of prime numbers &lt;= n\nprimesNo :: Int -&gt; Int\nprimesNo 2 = 1\nprimesNo n\n    | isPrime n = 1 + primesNo (n-1)\n    | otherwise = 0 + primesNo (n-1)\n\nmain = print $ primesNo (2^22)\n</code></pre>\n\n<p>Using GHC with the -O2 optimisation flag, counting the number of primes for n = 2^22 takes ~3.8sec on my system. The following C code take ~ 0.8 sec:</p>\n\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n\n/*\n    compile with: gcc -std=c11 -lm -O2 c_primes.c -o c_orig\n*/\n\nint isPrime(int n) {\n    if (n &lt; 2)\n        return 0;\n    else if (n == 2)\n        return 1;\n    else if (n % 2 == 0)\n        return 0;\n    int uL = sqrt(n);\n    int i = 3;\n    while (i &lt;= uL) {\n        if (n % i == 0)\n            return 0;\n        i+=2;\n    }\n    return 1;\n}\n\nint main() {\n    int noPrimes = 0, limit = 4194304;\n    for (int n = 0; n &lt;= limit; n++) {\n        if (isPrime(n))\n            noPrimes++;\n    }\n    printf(\"Number of primes in the interval [0,%d]: %d\\n\", limit, noPrimes);\n    return 0;\n}\n</code></pre>\n\n<p>This algorithm take about 0.9 sec in Java and 1.8 sec in JavaScript (on Node) so it just feels that the Haskell version is slower than I would expect be. Is there anyway I can more efficiently code this in Haskell without changing the algorithm? </p>\n\n<hr>\n\n<h2><strong>EDIT</strong></h2>\n\n<p>The following version of isPrime offered by @dfeuer shaves one second off the running time taking it down to 2.8sec (down from 3.8). Though this is still slower than JavaScript (Node) which takes approx 1.8 sec as shown here, <a href=\"https://bjpelc.wordpress.com/2015/01/10/yet-another-language-speed-test-counting-primes-c-c-java-javascript-php-python-and-ruby-2/\" rel=\"nofollow\" title=\"Yet Another Language Speed Test\">Yet Another Language Speed Test</a>.</p>\n\n<pre><code>isPrime :: Int -&gt; Bool\nisPrime n\n  | n &lt;= 2 = n == 2\n  | otherwise = odd n &amp;&amp; go 3\n  where\n    go factor\n      | factor * factor &gt; n = True\n      | otherwise = n `rem` factor /= 0 &amp;&amp; go (factor+2) \n</code></pre>\n\n<hr>\n\n<h2><strong>EDIT</strong></h2>\n\n<p>In the above <em>isPrime</em> function, the function <em>go</em> calls <em>factor</em> * <em>factor</em> for each divisor for a single n. I would imagine that it would be more efficient to compare <em>factor</em> to the square root of <em>n</em> as this would only have to be calculated once per <em>n</em>. However, using the following code, computation time is increased by approximately 10%, is the square root of <em>n</em> being re-calculated every time the inequality is evaluated (for each <em>factor</em>)?</p>\n\n<pre><code>isPrime :: Int -&gt; Bool\nisPrime n\n  | n &lt;= 2 = n == 2\n  | otherwise = odd n &amp;&amp; go 3\n  where\n    go factor\n      | factor &gt; upperLim = True\n      | otherwise = n `rem` factor /= 0 &amp;&amp; go (factor+2)\n      where\n        upperLim = (floor.sqrt.fromIntegral) n \n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 69792, "user_id": 493122, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/1f90ae01c2e24801c2df9189179b0ccd?s=128&d=identicon&r=PG", "display_name": "Shoe", "link": "https://stackoverflow.com/users/493122/shoe"}, "edited": false, "score": 0, "creation_date": 1420894247, "post_id": 27875714, "comment_id": 44154191, "body": "<a href=\"http://coliru.stacked-crooked.com/a/4a7395053b21eec9\" rel=\"nofollow noreferrer\">Here</a> there&#39;s another implementation you can look at."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 69792, "user_id": 493122, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/1f90ae01c2e24801c2df9189179b0ccd?s=128&d=identicon&r=PG", "display_name": "Shoe", "link": "https://stackoverflow.com/users/493122/shoe"}, "edited": false, "score": 0, "creation_date": 1420894936, "post_id": 27875714, "comment_id": 44154386, "body": "@Jefffrey <code>take 1</code> is a total alternative for <code>head</code>, and <code>drop 1</code> for <code>tail</code>, so that <code>headOr 0 = sum . take 1</code> and <code>tailOr [] = drop 1</code>."}, {"owner": {"reputation": 69792, "user_id": 493122, "user_type": "registered", "accept_rate": 96, "profile_image": "https://www.gravatar.com/avatar/1f90ae01c2e24801c2df9189179b0ccd?s=128&d=identicon&r=PG", "display_name": "Shoe", "link": "https://stackoverflow.com/users/493122/shoe"}, "edited": false, "score": 0, "creation_date": 1420895579, "post_id": 27875714, "comment_id": 44154546, "body": "I agree with <code>tailOr []</code> == <code>drop 1</code>. But not <code>take 1</code> being in any way equal to <code>headOr</code>. In any case both <code>tailOr</code> and <code>headOr</code> are more general in the possible set of return values."}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 2, "last_activity_date": 1420892450, "creation_date": 1420892450, "answer_id": 27876171, "question_id": 27875714, "link": "https://stackoverflow.com/questions/27875714/adding-two-lists-point-by-point-in-haskell/27876171#27876171", "title": "Adding two lists point by point in haskell", "body": "<pre><code>(rem  (x + y) 10) : w + head (addLnat xs ys)\n</code></pre>\n\n<p>The cons <code>:</code> operator requires a list on its right side. You probably meant</p>\n\n<pre><code>(rem  (x + y) 10) : w + head (addLnat xs ys) : tail (addLnat xs ys)\n</code></pre>\n\n<p>Be careful that this will lead to horrible performance, since you are making two recursive calls, which cause an exponential blowup.</p>\n\n<p>More significantly, even neglecting performance, the above looks wrong, since <code>w + ...</code> might overflow <code>10</code>. Think about adding 1 to 9999: you need to achieve the cascading effect.</p>\n\n<p>Try to rework your function so that it takes an additional <code>carry</code> argument.</p>\n"}], "owner": {"reputation": 1944, "user_id": 2232418, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/8Waib.jpg?s=128&g=1", "display_name": "Ben", "link": "https://stackoverflow.com/users/2232418/ben"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 220, "favorite_count": 1, "accepted_answer_id": 27876171, "answer_count": 1, "score": 1, "last_activity_date": 1420892450, "creation_date": 1420889241, "question_id": 27875714, "link": "https://stackoverflow.com/questions/27875714/adding-two-lists-point-by-point-in-haskell", "title": "Adding two lists point by point in haskell", "body": "<p>I am trying to learn haskell at the moment and I've come across an example problem that I'm having trouble with.</p>\n\n<p>The problem is that imagine we has lists representing numbers, for example the number 12 is [2,1] and 148 is [8,4,1], then how do we add these two lists together as if they were numbers. My intuition is we carry numbers with they add to over 10 similar to how addition is done with large numbers.</p>\n\n<p>My code so far is:</p>\n\n<pre><code>addLnat [x] [y] = rem  (x + y) 10 : (quot (x + y) 10) : []          \naddLnat (x:xs) (y:ys) =  (rem  (x + y) 10) : w + head (addLnat xs ys)\n                            where w = quot (x + y) 10\n</code></pre>\n\n<p>However this will not compile and I don't really understand why to me this seems like the solution, For example:</p>\n\n<p>If we start with [3,2,1] and [6,6,9]. We add the 6 and 3 and the quotient is 0 so 9:0+ and repeat until we get to the final case.</p>\n\n<p>Any ideas on why this is not working/compiling? </p>\n"}, {"tags": ["haskell", "clojure", "extends"], "comments": [{"owner": {"reputation": 2492, "user_id": 177677, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/e341719942589aff39f0a577269a6924?s=128&d=identicon&r=PG", "display_name": "metasoarous", "link": "https://stackoverflow.com/users/177677/metasoarous"}, "edited": false, "score": 0, "creation_date": 1420864711, "post_id": 27872736, "comment_id": 44148101, "body": "Do you mean &quot;<b>Is there a way in Clojure to make a <i>record</i> (or other type structure) closed to extension?</b>&quot;"}], "answers": [{"tags": [], "owner": {"reputation": 2492, "user_id": 177677, "user_type": "registered", "accept_rate": 54, "profile_image": "https://www.gravatar.com/avatar/e341719942589aff39f0a577269a6924?s=128&d=identicon&r=PG", "display_name": "metasoarous", "link": "https://stackoverflow.com/users/177677/metasoarous"}, "is_accepted": true, "score": 1, "last_activity_date": 1420865412, "last_edit_date": 1420865412, "creation_date": 1420864821, "answer_id": 27872915, "question_id": 27872736, "link": "https://stackoverflow.com/questions/27872736/is-there-a-way-in-clojure-to-make-a-protocol-or-other-type-structure-closed-to/27872915#27872915", "title": "Is there a way in Clojure to make a protocol (or other type structure) closed to extension?", "body": "<p>Creating objects with <code>reify</code> would give you an object with an anonymous type. Since that type is anonymous, there is no way to extend it to any further protocols. But this is only one sided; it doesn't prevent anyone else from extending the protocols found in the body of reify to <em>other</em> types/records.</p>\n\n<p>I don't think there is any way to accomplish this with records, types or protocols (except perhaps by digging into the underlying implementations).</p>\n"}], "owner": {"reputation": 30852, "user_id": 15441, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/f5fdef7fa815d59023c2eaa95f274c3f?s=128&d=identicon&r=PG&f=1", "display_name": "hawkeye", "link": "https://stackoverflow.com/users/15441/hawkeye"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 138, "favorite_count": 0, "accepted_answer_id": 27872915, "answer_count": 1, "score": 1, "last_activity_date": 1420865412, "creation_date": 1420862381, "last_edit_date": 1592644375, "question_id": 27872736, "link": "https://stackoverflow.com/questions/27872736/is-there-a-way-in-clojure-to-make-a-protocol-or-other-type-structure-closed-to", "title": "Is there a way in Clojure to make a protocol (or other type structure) closed to extension?", "body": "<p>In Clojure we have various extension mechanisms: <a href=\"https://clojuredocs.org/clojure.core/extend-type\" rel=\"nofollow noreferrer\"><code>extend-type</code></a>, <a href=\"https://clojuredocs.org/clojure.core/extend-protocol\" rel=\"nofollow noreferrer\"><code>extend-protocol</code></a>, <a href=\"https://clojuredocs.org/clojure.core/extend\" rel=\"nofollow noreferrer\"><code>extend</code></a>.</p>\n<p>Now we're making some assumptions:</p>\n<ul>\n<li><a href=\"http://clojure.org/\" rel=\"nofollow noreferrer\">Clojure is a dynamic</a> language</li>\n<li>Clojure's community prefers <a href=\"https://github.com/bbatsov/clojure-style-guide\" rel=\"nofollow noreferrer\">a particular idiomatic style</a></li>\n</ul>\n<p>There is some background to this question. Philip Wadler talks about <a href=\"http://en.wikipedia.org/wiki/Expression_problem\" rel=\"nofollow noreferrer\">the expression problem</a>. <a href=\"https://stackoverflow.com/questions/870919/why-are-haskell-algebraic-data-types-closed/871375#871375\">This discussion is expanded here</a> as it relates to <em>algebraic data types</em>:</p>\n<blockquote>\n<p><strong>With algebraic data types,</strong></p>\n<p>It is very cheap to add a new operation on things: you just define a new function. All the old functions on those things continue to work unchanged.</p>\n<p>It is very expensive to add a new kind of thing: you have to add a new constructor an existing data type, and you have to edit and recompile every function which uses that type.</p>\n<p><strong>With classes,</strong></p>\n<p>It is very cheap to add a new kind of thing: just add a new subclass, and as needed you define specialized methods, in that class, for all the existing operations. The superclass and all the other subclasses continue to work unchanged.</p>\n<p>It is very expensive to add a new operation on things: you have to add a new method declaration to the superclass and potentially add a method definition to every existing subclass. In practice, the burden varies depending on the method.</p>\n</blockquote>\n<p>Now the driver behind this (and they're speaking from a Haskell perspective) is a concept in functional programming called <a href=\"http://lambda-the-ultimate.org/node/2003\" rel=\"nofollow noreferrer\"><em>total functions</em></a>. (This is related to <a href=\"http://yowconference.com.au/slides/yowlambdajam2014/Morris-ParametricityTypesAreDocumentation.pdf\" rel=\"nofollow noreferrer\">parametricity in functional programming</a>). The <a href=\"http://en.wikipedia.org/wiki/Total_functional_programming\" rel=\"nofollow noreferrer\">benefit</a> of <em>total functions</em> is that the programs written are <em>provably terminating</em>.</p>\n<p>Now that might seem like a fluffy Computer Science benefit - but it has a real benefit for us in the Clojure World. Guys like <a href=\"https://twitter.com/miner\" rel=\"nofollow noreferrer\">Steve Miner</a> and <a href=\"https://twitter.com/reiddraper\" rel=\"nofollow noreferrer\">Reid Draper</a> are working on <a href=\"https://github.com/reiddraper/simple-check\" rel=\"nofollow noreferrer\">simple-check</a>. Now if we have a <em>total function</em> then we can have confidence that given a domain of inputs, we can guarantee the range of outputs.</p>\n<p>Now if you can close a type to extension, you can more easily declare a function a 'total function' - and make the work for tools like simple-check easier and more comprehensive. (And have greater confidence a function does what it says it does).</p>\n<p>Now it looks like <a href=\"https://twitter.com/ambrosebs\" rel=\"nofollow noreferrer\">Ambrose</a>' work on <a href=\"https://github.com/clojure/core.typed\" rel=\"nofollow noreferrer\">core.typed</a> <a href=\"https://github.com/clojure/core.typed/blob/53e0267db94a41c8d72231ff5a47f34dee069519/module-check/src/test/clojure/clojure/core/typed/test/rbt.clj#L8-L176\" rel=\"nofollow noreferrer\">is starting to approach</a> this goal.</p>\n<p>So my question is: <strong>Is there a way in Clojure to make a protocol (or other type structure) closed to extension?</strong>\n(Or is this just completely non-idiomatic?)</p>\n"}, {"tags": ["haskell", "llvm-ir"], "answers": [{"comments": [{"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1420865369, "post_id": 27872386, "comment_id": 44148218, "body": "I can&#39;t find <code>moduleString</code> <a href=\"https://www.google.com/search?q=site%3Ahackage.haskell.org+moduleString+LLVM\" rel=\"nofollow noreferrer\">anywhere on hackage</a>. It appears to have been <a href=\"http://bscarlet.github.io/llvm-general/3.3.8.2/doc/html/llvm-general/LLVM-General-Module.html\" rel=\"nofollow noreferrer\">in the documentation for 3.3.8.2</a> but it&#39;s not in <a href=\"https://hackage.haskell.org/package/llvm-general-3.4.4.1/docs/LLVM-General-Module.html\" rel=\"nofollow noreferrer\">3.4.4.1</a> (the newest version on Hackage with documentation)."}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1420866939, "post_id": 27872386, "comment_id": 44148430, "body": "I should have trusted my gut this morning when it said, &quot;write a pretty printer for the subset of llvm you&#39;re using, you know you&#39;ll be done in a few hours&quot;, but my heart derailed me when it said, &quot;you won&#39;t be happy with a pretty printer for anything less than the whole spec&quot;, and so my mind complained along the lines of, &quot;it&#39;s a large amount of mind-numbingly boring work to write a pretty printer for a whole specification&quot;."}, {"owner": {"reputation": 7803, "user_id": 190744, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ia1FC.jpg?s=128&g=1", "display_name": "Stephen Diehl", "link": "https://stackoverflow.com/users/190744/stephen-diehl"}, "reply_to_user": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 1, "creation_date": 1420903203, "post_id": 27872386, "comment_id": 44156962, "body": "Sorry <code>moduleString</code> became <code>moduleLLVMAssembly</code> in later versions. They do the same thing, dump the IR to stdout."}, {"owner": {"reputation": 7803, "user_id": 190744, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ia1FC.jpg?s=128&g=1", "display_name": "Stephen Diehl", "link": "https://stackoverflow.com/users/190744/stephen-diehl"}, "reply_to_user": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1420904684, "post_id": 27872386, "comment_id": 44157447, "body": "@Cirdec As for the pure pretty printer, it would be great (especially for getting llvm-general into GHC mainline) but, yeah, it&#39;s a ton of thankless boring work."}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1420955137, "post_id": 27872386, "comment_id": 44170309, "body": "I added enough to your llvm-pp parser to be able to do what I needed. <a href=\"https://gist.github.com/Cedev/e1ec5526b502a3dbb1a7\" rel=\"nofollow noreferrer\">gist.github.com/Cedev/e1ec5526b502a3dbb1a7</a>"}, {"owner": {"reputation": 7803, "user_id": 190744, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ia1FC.jpg?s=128&g=1", "display_name": "Stephen Diehl", "link": "https://stackoverflow.com/users/190744/stephen-diehl"}, "reply_to_user": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1420968844, "post_id": 27872386, "comment_id": 44172499, "body": "@Cirdec Sent you a note on the Gist on Github about merging the changes."}, {"owner": {"reputation": 7060, "user_id": 346587, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/fb7382956433da8cfe26359ac341b6ed?s=128&d=identicon&r=PG", "display_name": "Paul", "link": "https://stackoverflow.com/users/346587/paul"}, "edited": false, "score": 0, "creation_date": 1452026664, "post_id": 27872386, "comment_id": 56987375, "body": "@StephenDiehl I&#39;m not sure if this is the right place for this, but I would like to thank you very much for the excellent articles on your website! They are always a great read!"}], "tags": [], "owner": {"reputation": 7803, "user_id": 190744, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/ia1FC.jpg?s=128&g=1", "display_name": "Stephen Diehl", "link": "https://stackoverflow.com/users/190744/stephen-diehl"}, "is_accepted": true, "score": 6, "last_activity_date": 1420904886, "last_edit_date": 1420904886, "creation_date": 1420858309, "answer_id": 27872386, "question_id": 27871078, "link": "https://stackoverflow.com/questions/27871078/pretty-print-llvm-general-pure-asts-as-llvm-ir/27872386#27872386", "title": "Pretty print llvm-general-pure ASTs as llvm-ir?", "body": "<p><code>llvm-general-pure</code> doesn't have a pure pretty printer, we have to go through <code>llvm-general</code> to do this. It can print out the IR by going through <code>withModuleFromAST</code> on the Haskell AST to manifest the Module representation (i.e. the C++ Module) of the IR and then calling <code>moduleLLVMAssembly</code> to invoke the pretty printer. </p>\n\n<pre><code>moduleLLVMAssembly :: Mod.Module -&gt; IO String\nwithModuleFromAST :: Context -&gt; AST.Module -&gt; (Mod.Module -&gt; IO a) -&gt; ErrorT String IO a\n</code></pre>\n\n<p>This isn't pure Haskell though, it's all going through the FFI to call LLVM's internal functions.</p>\n\n<pre><code>import LLVM.General.Module as Mod\nimport qualified LLVM.General.AST as AST\n\nppModule :: AST.Module -&gt; IO ()\nppModule ast = withContext $ \\ctx -&gt;\n  runExceptT $ withModuleFromAST ctx ast $ \\m -&gt; do\n    llstr &lt;- moduleLLVMAssembly m\n    putStrLn llstr\n</code></pre>\n\n<p>There's no reason we couldn't have a pure pretty printer though and indeed I started on a project to do just this called <a href=\"https://github.com/sdiehl/llvm-pp\" rel=\"nofollow\">llvm-pp</a>, but it's just a large amount of mind-numbingly boring work to write a pretty printer for the whole LLVM specification. </p>\n"}], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 453, "favorite_count": 0, "accepted_answer_id": 27872386, "answer_count": 1, "score": 6, "last_activity_date": 1420904886, "creation_date": 1420846915, "last_edit_date": 1420851272, "question_id": 27871078, "link": "https://stackoverflow.com/questions/27871078/pretty-print-llvm-general-pure-asts-as-llvm-ir", "title": "Pretty print llvm-general-pure ASTs as llvm-ir?", "body": "<p>I used <a href=\"https://hackage.haskell.org/package/llvm-general-pure\" rel=\"noreferrer\">llvm-general-pure</a> to build an abstract syntax trees for a program in the <a href=\"http://llvm.org/docs/LangRef.html\" rel=\"noreferrer\">LLVM language</a>.</p>\n\n<p>Using the <a href=\"https://hackage.haskell.org/package/llvm-general-pure-3.4.4.1/docs/LLVM-General-PrettyPrint.html#v:showPretty\" rel=\"noreferrer\">provided pretty printer</a>, I get output that looks like</p>\n\n<pre><code>A.Module {\n  A.moduleName = \"main\",\n  A.moduleDataLayout = Nothing,\n  A.moduleTargetTriple = Nothing,\n  A.moduleDefinitions = [\n    ...\n    A.GlobalDefinition A.G.Function {\n      A.G.linkage = A.L.External,\n      A.G.visibility = A.V.Default,\n      A.G.callingConvention = A.CC.C,\n      A.G.returnAttributes = [],\n      A.G.returnType = A.IntegerType {A.typeBits = 32},\n      A.G.name = A.Name \"Main\",\n      A.G.parameters = ([], False),\n      A.G.functionAttributes = [],\n      A.G.section = Nothing,\n      A.G.alignment = 0,\n      A.G.garbageCollectorName = Nothing,\n      A.G.basicBlocks = [\n        A.G.BasicBlock (A.Name \"mainBlock\") [\n          A.Name \"n57\" A.:= A.Alloca {\n            A.allocatedType = A.IntegerType {A.typeBits = 64},\n            A.numElements = Nothing,\n            A.alignment = 0,\n            A.metadata = []\n          },\n...\n</code></pre>\n\n<p>I want output that looks like</p>\n\n<pre><code>define i32 @main() {\nmainBlock:\n    %n57 = alloca i64\n    ...\n}\n...\n</code></pre>\n\n<p>It looks suspiciously like there's an <a href=\"https://hackage.haskell.org/package/llvm-general-quote-0.2.0.0/docs/LLVM-General-Quote-Parser-Parser.html\" rel=\"noreferrer\">automatically generated parser</a> for the LLVM language in the llvm-general-quote package, but no corresponding pretty printer.</p>\n\n<p><a href=\"http://www.stephendiehl.com/llvm/\" rel=\"noreferrer\">Stephen Diehl's excellent article</a> hints at something called <code>moduleString</code>.</p>\n"}, {"tags": ["haskell", "ghci", "applicative"], "comments": [{"owner": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "edited": false, "score": 5, "creation_date": 1420840544, "post_id": 27869869, "comment_id": 44142154, "body": "Are you sure you&#39;re not interested in the type of <code>(f &lt;$&gt;)</code> instead? Note that <code>(f &lt;$&gt;)</code> is the same as <code>(&lt;$&gt;) f</code>, i.e., the partial application of <code>(&lt;$&gt;)</code> to its first argument, but <code>(&lt;$&gt; f)</code> is the partial application of <code>(&lt;$&gt;)</code> to its <i>second</i> argument."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "reply_to_user": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "edited": false, "score": 2, "creation_date": 1420840641, "post_id": 27869869, "comment_id": 44142198, "body": "The <code>&lt;$&gt;</code> operator is just an alias for <code>fmap</code> from the <code>Functor</code> typeclass.  I agree with @kosmikus that you may have meant to try <code>:t (f &lt;$&gt;)</code> or possibly <code>:t (&lt;$&gt;) f</code> (these are equivalent) instead."}, {"owner": {"reputation": 5659, "user_id": 652378, "user_type": "registered", "accept_rate": 52, "profile_image": "https://www.gravatar.com/avatar/340b924b8e9a48d3d49b0c8742928aab?s=128&d=identicon&r=PG", "display_name": "Chirlo", "link": "https://stackoverflow.com/users/652378/chirlo"}, "edited": false, "score": 0, "creation_date": 1420841183, "post_id": 27869869, "comment_id": 44142456, "body": "You&#39;re both absolutely right, what I was looking for was <code>(f &lt;$&gt;)</code> !!! But now I&#39;m left wondering, why does my reasoning not hold when talking about <code>(&lt;$&gt; f)</code>, how to read its signature ?"}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1420969717, "post_id": 27869869, "comment_id": 44172647, "body": "@Chirlo there is a <code>functor</code> instance for functions, too. This is why you&#39;re getting the weird signature."}], "answers": [{"comments": [{"owner": {"reputation": 5659, "user_id": 652378, "user_type": "registered", "accept_rate": 52, "profile_image": "https://www.gravatar.com/avatar/340b924b8e9a48d3d49b0c8742928aab?s=128&d=identicon&r=PG", "display_name": "Chirlo", "link": "https://stackoverflow.com/users/652378/chirlo"}, "edited": false, "score": 0, "creation_date": 1420845053, "post_id": 27870129, "comment_id": 44143888, "body": "I see, I failed to realize that <code>(a -&gt; a -&gt; a)</code> is a function itself! So for example <code>(&lt;$&gt; f ) (\\g -&gt; g 2 3) 4</code> satisfies the signature. Thanks!"}], "tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": true, "score": 3, "last_activity_date": 1420841743, "creation_date": 1420841743, "answer_id": 27870129, "question_id": 27869869, "link": "https://stackoverflow.com/questions/27869869/understanding-the-signature-of/27870129#27870129", "title": "Understanding the signature of &lt;$&gt;", "body": "<blockquote>\n  <p>a function that takes a <code>(a -&gt; a- &gt; a) -&gt; b</code> function and an <code>a</code> as parameters and returns a <code>b</code>.</p>\n</blockquote>\n\n<p>This is correct.</p>\n\n<blockquote>\n  <p>According to this reasoning , I should call this like :</p>\n\n<pre><code>(&lt;$&gt;f) f 4\n</code></pre>\n  \n  <p>which would result in an <code>Integer</code>.</p>\n</blockquote>\n\n<p>No, because <code>f</code> does not have type <code>(a -&gt; a -&gt; a) -&gt; b</code> or one compatible with it. Instead it has type <code>Num a =&gt; a -&gt; a -&gt; a -&gt; a</code>. That is, <code>f</code> takes three numbers and produces a number, whereas we're looking for a function that takes a function (of type <code>a -&gt; a -&gt; a</code>) as its first argument.</p>\n"}, {"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 1, "last_activity_date": 1420842216, "creation_date": 1420842216, "answer_id": 27870234, "question_id": 27869869, "link": "https://stackoverflow.com/questions/27869869/understanding-the-signature-of/27870234#27870234", "title": "Understanding the signature of &lt;$&gt;", "body": "<p><code>&lt;$&gt;</code> takes as a second argument something of type <code>g b</code>, where <code>g</code> is any applicative functor.</p>\n\n<p>You are passing <code>f :: Num a =&gt; a -&gt; a -&gt; a -&gt; a</code> as a second argument. Let's ignore the <code>Num a</code> context to keep things simple.</p>\n\n<p>Hence, we look for <code>g,b</code> such that <code>g b = a -&gt; a -&gt; a -&gt; a</code>.</p>\n\n<p>Let's write the type of <code>f</code> in prefix form:</p>\n\n<pre><code>f :: (-&gt;) a ((-&gt;) a ((-&gt;) a a)) = g b\n</code></pre>\n\n<p>Hence, <code>g = (-&gt;) a</code> and <code>b = ((-&gt;) a ((-&gt;) a a))</code>. The latter is <code>b = a -&gt; a -&gt; a</code> in infix form.</p>\n\n<p>It happens that <code>(-&gt;) a</code> is an applicative functor, so <code>&lt;$&gt; f</code> type checks. Note however that <code>&lt;$&gt;</code> is used on a completely different functor than the <code>Maybe</code> one you were using in your examples. Hence the confusion.</p>\n\n<p>TL;DR: overloaded identifiers can shapeshift to many things adapting to their contexts, possibly in some unexpected way.</p>\n"}], "owner": {"reputation": 5659, "user_id": 652378, "user_type": "registered", "accept_rate": 52, "profile_image": "https://www.gravatar.com/avatar/340b924b8e9a48d3d49b0c8742928aab?s=128&d=identicon&r=PG", "display_name": "Chirlo", "link": "https://stackoverflow.com/users/652378/chirlo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 120, "favorite_count": 0, "accepted_answer_id": 27870129, "answer_count": 2, "score": 1, "last_activity_date": 1420856877, "creation_date": 1420840434, "last_edit_date": 1420856877, "question_id": 27869869, "link": "https://stackoverflow.com/questions/27869869/understanding-the-signature-of", "title": "Understanding the signature of &lt;$&gt;", "body": "<p>I have the applicative <code>&lt;$&gt;</code> operator more or less figured out, but I can't understand the signature I'm getting with the following example: </p>\n\n<pre><code>ghci&gt;  let f x y z = x + y + z  -- f::Num a =&gt; a -&gt; a -&gt; a -&gt; a\nghci&gt; f &lt;$&gt; Just 2 &lt;*&gt; Just 3 &lt;*&gt; Just 4 \nJust 9\n</code></pre>\n\n<p>This result I understand, but when checking the following type: </p>\n\n<pre><code>ghci&gt; :t (&lt;$&gt; f)\n(&lt;$&gt; f) :: Num a =&gt; ((a -&gt; a -&gt; a) -&gt; b) -&gt; a -&gt; b  --This makes no sense to me\n</code></pre>\n\n<p>That signature I would understand as : a function that takes a <code>(a -&gt; a- &gt; a) -&gt; b</code> function and an <code>a</code> as parameters and returns a <code>b</code>. According to this reasoning , I should call this like :</p>\n\n<pre><code> (&lt;$&gt;f) f 4\n</code></pre>\n\n<p>which would result in an <code>Integer</code>. \n Obviously this is not true, so can you please help me understand how to read the type of <code>(&lt;$&gt; f)</code>?</p>\n"}, {"tags": ["haskell", "functional-programming"], "comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 1, "creation_date": 1420839622, "post_id": 27869364, "comment_id": 44141787, "body": "Would it be any simpler if it was written as <code>Chan (zipWith id fs xs)</code>? It&#39;s exactly the same as the current implementation."}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1420902360, "post_id": 27869364, "comment_id": 44156702, "body": "Remember that <code>($)</code> isn&#39;t some magical primitive operator: it&#39;s a function just like <code>(+)</code> and <code>or</code>."}], "answers": [{"comments": [{"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 2, "creation_date": 1420913390, "post_id": 27869395, "comment_id": 44160596, "body": "Specifically, the grammar of haskell requires you to say <code>zipWith &lt;expr&gt;</code>, where <code>&lt;expr&gt;</code> is an expression. <code>($)</code> is the infix operator <code>$</code> converted to an <i>expression</i>, which is a bit different than &quot;converted to prefix&quot;, and allows both usage as a prefix function and usage as an argument to other functions."}], "tags": [], "owner": {"reputation": 64805, "user_id": 286871, "user_type": "registered", "accept_rate": 77, "profile_image": "https://i.stack.imgur.com/xNBpr.png?s=128&g=1", "display_name": "Tikhon Jelvis", "link": "https://stackoverflow.com/users/286871/tikhon-jelvis"}, "is_accepted": true, "score": 13, "last_activity_date": 1420838265, "creation_date": 1420838265, "answer_id": 27869395, "question_id": 27869364, "link": "https://stackoverflow.com/questions/27869364/haskells-function-application-operator-usage/27869395#27869395", "title": "Haskell&#39;s function application operator ($) usage", "body": "<p>In this case, <code>$</code> is being <em>passed in</em> to <code>zipWith</code>. It's the same as writing</p>\n\n<pre><code>zipWith (\\ f x -&gt;  f x) fs xs\n</code></pre>\n\n<p>Without parentheses, it would have been equivalent to</p>\n\n<pre><code>zipWith (fs xs)\n</code></pre>\n\n<p>which is not going to typecheck. </p>\n\n<p>An operator in parentheses behaves exactly like a normal identifier. With the following definition:</p>\n\n<pre><code>apply = ($)\n</code></pre>\n\n<p>the code could have looked like</p>\n\n<pre><code>zipWith apply fs xs\n</code></pre>\n"}], "owner": {"reputation": 441, "user_id": 573190, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/583d724f95975ff111de43d2dabd8cf0?s=128&d=identicon&r=PG", "display_name": "Brendan", "link": "https://stackoverflow.com/users/573190/brendan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 134, "favorite_count": 0, "accepted_answer_id": 27869395, "answer_count": 1, "score": 7, "last_activity_date": 1420838785, "creation_date": 1420838139, "last_edit_date": 1420838785, "question_id": 27869364, "link": "https://stackoverflow.com/questions/27869364/haskells-function-application-operator-usage", "title": "Haskell&#39;s function application operator ($) usage", "body": "<p>I'm reading a piece by Bartosz Milewski wherein he defines the following function:</p>\n\n<pre><code>instance Applicative Chan where\n  pure x = Chan (repeat x)\n  (Chan fs) &lt;*&gt; (Chan xs) = Chan (zipWith ($) fs xs)\n</code></pre>\n\n<p>Why is the function application operator in parenthesis? I understand this is normally done in order to use an infix function in prefix notation form, but I don't understand why, in this case, the function couldn't couldn't simply be expressed as <code>Chan (zipWith $ fs xs)</code>, and wonder what the difference between the two is.</p>\n\n<p><em>(if you still need context, refer to the <a href=\"http://bartoszmilewski.com/2014/11/12/formula-1-go-functional/e\" rel=\"noreferrer\">article</a>)</em></p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1420833697, "post_id": 27868142, "comment_id": 44138983, "body": "So.... what&#39;s your question?  It&#39;s not very clear at all what you want help with."}, {"owner": {"reputation": 2281, "user_id": 583780, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/4ba2ac1fc4be3712d04442c785c1f72e?s=128&d=identicon&r=PG", "display_name": "abesto", "link": "https://stackoverflow.com/users/583780/abesto"}, "reply_to_user": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1420833755, "post_id": 27868142, "comment_id": 44139027, "body": "Added an edit to clarify it."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 0, "creation_date": 1420834333, "post_id": 27868142, "comment_id": 44139311, "body": "Well, usually things like Applicatives and Functors are useful when working with polymorphic containers, but your type is just a plain old data type with no polymorphism, there might not be much you can abstract here.  You could use <code>FlexibleContexts</code> and <code>MultiParamTypeClasses</code> to write it as <code>class Gen a t where gen :: a -&gt; t -&gt; t</code> (this looks suspiciously like a generalized cons type) and then <code>appendFooAndAdd3 :: (Gen Char t, Gen Int t) =&gt; t -&gt; t</code> with the same definition, then it can be used with more types than just <code>T</code>, but you might run into overlapping instance problems."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 3, "creation_date": 1420834792, "post_id": 27868142, "comment_id": 44139518, "body": "Perhaps <a href=\"http://hackage.haskell.org/package/lens\" rel=\"nofollow noreferrer\">lens</a>."}, {"owner": {"reputation": 1435, "user_id": 3792504, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e1e342dc9ed03c2039e7cde0dab4214e?s=128&d=identicon&r=PG&f=1", "display_name": "TheCriticalImperitive", "link": "https://stackoverflow.com/users/3792504/thecriticalimperitive"}, "edited": false, "score": 1, "creation_date": 1420928604, "post_id": 27868142, "comment_id": 44165311, "body": "I just wanted to add, I asked a similar question a few months back (though my thought process hadn&#39;t advanced as far as yours) and Lens is definitely what you want. If you want to understand the theory behind lenses then this video is amazing: <a href=\"https://www.youtube.com/watch?v=cefnmjtAolY\" rel=\"nofollow noreferrer\">youtube.com/watch?v=cefnmjtAolY</a> and if you just want a quick start check out <a href=\"https://www.fpcomplete.com/school/to-infinity-and-beyond/pick-of-the-week/a-little-lens-starter-tutorial\" rel=\"nofollow noreferrer\">fpcomplete.com/school/to-infinity-and-beyond/pick-of-the-wee&zwnj;&#8203;k/&hellip;</a> or the accepted answer to my question <a href=\"http://stackoverflow.com/questions/25954467/are-there-any-useful-abstractions-for-haskells-record-syntax/25955062#25955062\" title=\"are there any useful abstractions for haskells record syntax\">stackoverflow.com/questions/25954467/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 4, "last_activity_date": 1420852920, "creation_date": 1420852920, "answer_id": 27871852, "question_id": 27868142, "link": "https://stackoverflow.com/questions/27868142/any-standard-abstraction-like-this-aka-guess-the-structure/27871852#27871852", "title": "Any standard abstraction like this? (aka. Guess The Structure)", "body": "<p>So, I had a look through the documentation for <a href=\"http://hackage.haskell.org/package/lens\" rel=\"nofollow\"><code>lens</code></a> to figure out how to do this. It seems this is the idiomatic way:</p>\n\n<pre><code>{-# LANGUAGE TemplateHaskell #-}\nimport Control.Lens\nimport Control.Lens.TH\n\ndata T = T\n    { _n :: Int\n    , _s :: String\n    } deriving (Eq, Ord, Read, Show)\n\nmakeLenses ''T\n\nappendFooAndAdd3 = (s &lt;&gt;~ \"Foo\") . (n +~ 3)\n</code></pre>\n\n<p>You'll notice that things are not <em>quite</em> as implicit in your approach: in <code>s &lt;&gt;~ \"Foo\"</code>, one must name the field <code>s</code> and the operation <code>&lt;&gt;</code> one wants to perform, and similarly in <code>n +~ 3</code>. Nevertheless this may be seen as a strength, as it is fairly rare that there is just one way to modify a <code>T</code>.</p>\n\n<p>In this case, I think the Pythonism \"explicit is better than implicit\" applies.</p>\n"}], "owner": {"reputation": 2281, "user_id": 583780, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/4ba2ac1fc4be3712d04442c785c1f72e?s=128&d=identicon&r=PG", "display_name": "abesto", "link": "https://stackoverflow.com/users/583780/abesto"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "accepted_answer_id": 27871852, "answer_count": 1, "score": 1, "last_activity_date": 1420852920, "creation_date": 1420833132, "last_edit_date": 1420833733, "question_id": 27868142, "link": "https://stackoverflow.com/questions/27868142/any-standard-abstraction-like-this-aka-guess-the-structure", "title": "Any standard abstraction like this? (aka. Guess The Structure)", "body": "<p>I came up with the following structure while refactoring a hobby project. I'm wondering if it matches, or can be tweaked to match, some existing abstraction / structure. I started reading up on <code>Applicative</code>, <code>Functor</code> and <code>Arrow</code>s, but couldn't make the connection, and I don't have more ideas. So, the minimal useful example:</p>\n\n<pre><code>-- trivial struct for this minimal example\ndata T = T { n :: Int, s :: String }\n\n-- for any type `a`, there's exactly one way to update a `T`\nclass Gen a where\n  gen :: a -&gt; T -&gt; T\n\n-- helpers to compose `a`-s into a (T -&gt; T)\n(.&gt;) :: (Gen a) =&gt; (T -&gt; T) -&gt; a -&gt; (T -&gt; T)\nl .&gt; x = l . (gen x)\n\n(&lt;.&gt;) :: (Gen a, Gen b) =&gt; a -&gt; b -&gt; T -&gt; T\nl &lt;.&gt; r = (gen l) . (gen r)\n\n-- For this example, let's say an Int is used to update a T by adding to its `n`\ninstance Gen Int where\n  gen x t = t { n = (n t) + x }\n\n-- and a Char is prepended to its `s`\ninstance Gen Char where\n  gen c t = t { s = c : (s t) }\n\n-- I can now express things like this easily\nappendFooAndAdd3 = 'F' &lt;.&gt; 'o' .&gt; 'o' .&gt; (3::Int)\n</code></pre>\n\n<p>The actual code, in case more context is useful: <a href=\"https://github.com/abesto/hsircd/blob/cc8e9e33617f61ef9417b9476856a9fdc6bc4948/src/Server.hs#L81-L135\" rel=\"nofollow\">https://github.com/abesto/hsircd/blob/cc8e9e33617f61ef9417b9476856a9fdc6bc4948/src/Server.hs#L81-L135</a></p>\n\n<p>If you find some structure that can be used here, I'd be extra grateful if you could explain how you came to the conclusion. I imagine I could learn a lot from it.</p>\n\n<p><strong>Edit</strong>: to clarify what I'm asking: can this be implemented by using some existing abstraction? <code>Applicative</code> and <code>Functor</code> are examples of what I mean, but they don't seem to match this case. If yes, how did you come to the structure?</p>\n"}, {"tags": ["scala", "haskell", "higher-kinded-types"], "comments": [{"owner": {"reputation": 869, "user_id": 3424718, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/61149107d6a0c54263d92505819119d7?s=128&d=identicon&r=PG", "display_name": "experquisite", "link": "https://stackoverflow.com/users/3424718/experquisite"}, "edited": false, "score": 0, "creation_date": 1420830219, "post_id": 27867177, "comment_id": 44137302, "body": "I am looking forward to this answer.  I too am a little confused with how type traits on higher-kinded types in Scala are declared, then implemented with &quot;instances&quot; for each concrete type, and finally used with an implicit instance of the higher-kinded type."}], "answers": [{"comments": [{"owner": {"reputation": 51405, "user_id": 2621536, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/8a6a70cc2ec317f4ca77c05d0adec8ad?s=128&d=identicon&r=PG&f=1", "display_name": "kiritsuku", "link": "https://stackoverflow.com/users/2621536/kiritsuku"}, "edited": false, "score": 5, "creation_date": 1420849164, "post_id": 27867526, "comment_id": 44145259, "body": "<code>List[_]</code> is not a higher kinded type, but an existential type (at least when you want to refer to <code>scala.List</code> and not an arbitrary type parameter that is named <code>List</code>). The higher kinded type would be just <code>List</code> or <code>Option</code>."}], "tags": [], "owner": {"reputation": 704, "user_id": 864306, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/cc979dfc088d7ca86c02fbfdb5f0fd93?s=128&d=identicon&r=PG", "display_name": "miguel", "link": "https://stackoverflow.com/users/864306/miguel"}, "is_accepted": false, "score": 5, "last_activity_date": 1420830579, "creation_date": 1420830579, "answer_id": 27867526, "question_id": 27867177, "link": "https://stackoverflow.com/questions/27867177/higher-kinded-types-in-scala-and-haskell/27867526#27867526", "title": "Higher Kinded Types in Scala and Haskell", "body": "<p>The <code>F[_]</code> in Scala stands for something like <code>* -&gt; *</code> in Haskell: that is a type which \"receives\" a concrete type (the <code>_</code> in Scala and the first <code>*</code> in Haskell) and returns a new concrete type (<code>F[A]</code> for some concrete type <code>A</code> and concrete \"container\" <code>F</code> in Scala). </p>\n\n<p>So yes, <code>F[_]</code> stands for some higher kinded type like <code>List[_]</code> or <code>Option[_]</code>. It wouldn't be useful to define traversable in scala like <code>trait Foldable[A,F[A]]</code> because we would be saying that <code>Foldable</code> needs to be defined with the specific thing being folded (the <code>A</code>).</p>\n"}, {"tags": [], "owner": {"reputation": 8676, "user_id": 1113881, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sBc0F.jpg?s=128&g=1", "display_name": "CR Drost", "link": "https://stackoverflow.com/users/1113881/cr-drost"}, "is_accepted": false, "score": 3, "last_activity_date": 1420836066, "creation_date": 1420836066, "answer_id": 27868900, "question_id": 27867177, "link": "https://stackoverflow.com/questions/27867177/higher-kinded-types-in-scala-and-haskell/27868900#27868900", "title": "Higher Kinded Types in Scala and Haskell", "body": "<p>You haven't asked much of a question, but if you want a general idea: yes, the \"kind\" system of both of these languages is a type system for their own type system. The <code>*</code> type is not a wildcard but a special type atom; <code>*</code> is the type of \"concrete types\" like <code>String</code>, <code>[String]</code>, and <code>Tree String</code>.</p>\n\n<p>In turn there are things like <code>[]</code> or <code>Tree</code> (see the difference?) which have kind <code>* -&gt; *</code>; this is the type of \"singly-parametrized types\" which take a concrete type and produce another concrete type.</p>\n\n<p>A last example: there are things called \"monad transformers\" like <code>MaybeT</code> which takes a monad like <code>IO</code> and produces another monad like <code>IO . Maybe</code> (if you will pardon the use of function composition operators where they're not generally admitted). What kind does that have? Why, <code>(* -&gt; *) -&gt; * -&gt; *</code> of course: monads have kind <code>* -&gt; *</code> so we take one of those types and transform it into another of those types.</p>\n\n<p>I cannot speak with so much expertise on Scala syntax, but on the Internet we see a definition of a monad transformer trait in Scala as:</p>\n\n<pre><code>trait MonadTrans[F[_[_], _]] {\n  def lift[G[_] : Monad, A](a: G[A]): F[G, A]\n}\n</code></pre>\n\n<p>so I think your guess is mostly right (that the brackets indicate a dependent type).</p>\n\n<p>Having a type theory of these things guarantees that you never write things like <code>IO IO</code> as a concrete type, or <code>MaybeT String</code>. </p>\n"}, {"comments": [{"owner": {"reputation": 869, "user_id": 3424718, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/61149107d6a0c54263d92505819119d7?s=128&d=identicon&r=PG", "display_name": "experquisite", "link": "https://stackoverflow.com/users/3424718/experquisite"}, "edited": false, "score": 0, "creation_date": 1420842467, "post_id": 27869954, "comment_id": 44142987, "body": "Not to derail the answer, but that excruciating type lambda syntax - that is one of the things the typelevel guys have fixed in their compiler, right?"}, {"owner": {"reputation": 17066, "user_id": 1135948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5edf3c92c5e52ed83cbd5ebd98f4c18d?s=128&d=identicon&r=PG", "display_name": "lmm", "link": "https://stackoverflow.com/users/1135948/lmm"}, "reply_to_user": {"reputation": 869, "user_id": 3424718, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/61149107d6a0c54263d92505819119d7?s=128&d=identicon&r=PG", "display_name": "experquisite", "link": "https://stackoverflow.com/users/3424718/experquisite"}, "edited": false, "score": 0, "creation_date": 1420878589, "post_id": 27869954, "comment_id": 44150435, "body": "Yes, or you can use the kind-projector plugin with the mainline compiler."}], "tags": [], "owner": {"reputation": 17066, "user_id": 1135948, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5edf3c92c5e52ed83cbd5ebd98f4c18d?s=128&d=identicon&r=PG", "display_name": "lmm", "link": "https://stackoverflow.com/users/1135948/lmm"}, "is_accepted": false, "score": 2, "last_activity_date": 1420840857, "creation_date": 1420840857, "answer_id": 27869954, "question_id": 27867177, "link": "https://stackoverflow.com/questions/27867177/higher-kinded-types-in-scala-and-haskell/27869954#27869954", "title": "Higher Kinded Types in Scala and Haskell", "body": "<p><code>F[_]</code> <em>in that context</em>, i.e. as a type parameter to a class or method, always means a higher-kinded type, aka a type constructor. You can also write it as <code>F[A]</code> but would normally only do that if you were going to reuse the <code>A</code> to express a constraint, e.g. <code>trait Something[F[A] &lt;: Iterable[A]]</code>.</p>\n\n<p>As the book says, the kind constrains what things (types or type constructors) can be put there. You can have a <code>Foldable[List]</code> or a <code>Foldable[Option]</code>, because these are 1-argument type constructors, but you can't have a <code>Foldable[String]</code> or a <code>Foldable[Either]</code>. Likewise you can't have a <code>Foldable[List[Int]]</code>, because <code>List[Int]</code> is an ordinary type like <code>String</code> (i.e. of kind <code>*</code>). And you <em>can</em> have a foldable  for the type that is <code>T[A] = Either[String, A]</code>, because that is a 1-parameter type, aka a 1-argument type constructor, aka a type of kind <code>* -&gt; *</code>, though you have to write it using the somewhat excruciating syntax <code>Foldable[({type T[A]=Either[String, A]})#T]</code>. And you can see that it would only be possible to implement the given <code>foldRight</code> for \"types\" (type constructors) <code>F</code> that have the correct \"shape\"; if <code>F</code> is <code>Int</code>, then what would <code>F[A]</code> be?</p>\n\n<p>There is a different scala usage of <code>F[_]</code> to mean an existential type, <code>F[A] forSome { type A }</code>; try not to get confused by this, they're unreleated.</p>\n"}], "owner": {"reputation": 37991, "user_id": 409976, "user_type": "registered", "accept_rate": 68, "profile_image": "https://www.gravatar.com/avatar/9ccda0b49cc974197399eae01ebd6850?s=128&d=identicon&r=PG", "display_name": "Kevin Meredith", "link": "https://stackoverflow.com/users/409976/kevin-meredith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 643, "favorite_count": 0, "answer_count": 3, "score": 5, "last_activity_date": 1420840857, "creation_date": 1420829140, "question_id": 27867177, "link": "https://stackoverflow.com/questions/27867177/higher-kinded-types-in-scala-and-haskell", "title": "Higher Kinded Types in Scala and Haskell", "body": "<p><a href=\"http://hackage.haskell.org/package/base-4.7.0.2/docs/Data-Foldable.html\" rel=\"noreferrer\">Data.Foldable</a> shows the following algebraic data type:</p>\n\n<p><code>data Tree a = Empty | Leaf a | Node (Tree a) a (Tree a)</code></p>\n\n<p>Its <code>kind</code> is <code>* -&gt; *</code>. It requires an <code>a</code> type.</p>\n\n<pre><code>Prelude&gt; :k Tree\nTree :: * -&gt; *\n</code></pre>\n\n<p>Let's look now at <code>trait Foldable[_]</code>, a \"higher-kinded type\" from Scala from <a href=\"http://www.manning.com/bjarnason/\" rel=\"noreferrer\">Functional Programming in Scala</a>:</p>\n\n<pre><code>trait Foldable[F[_]] {\n  def foldRight[A,B](as: F[A])(z: B)(f: (A,B) =&gt; B): B\n  ...\n}\n</code></pre>\n\n<p>The excellent book says:</p>\n\n<blockquote>\n  <p>Just like values and functions have types, types and type constructors\n  have kinds. Scala uses kinds to track how many type arguments a type\n  constructor takes, ...</p>\n</blockquote>\n\n<p><strong>EDIT</strong></p>\n\n<p>When specifying <code>trait Foldable[F[_]]</code>, does the <code>F[_]</code> always indicate a higher-kinded type? Is it possible for <code>F[_]</code> to be anything else? Could it be a type - <code>F[A]</code>?</p>\n"}, {"tags": ["haskell", "io"], "comments": [{"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "edited": false, "score": 3, "creation_date": 1420828145, "post_id": 27866848, "comment_id": 44136203, "body": "Is that your actual indentation? Haskell is indentation aware, and it&#39;s best to use spaces for alignment."}, {"owner": {"reputation": 94713, "user_id": 1139697, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/5f136ddb684f39aaee1c028ee1950f6f?s=128&d=identicon&r=PG", "display_name": "Zeta", "link": "https://stackoverflow.com/users/1139697/zeta"}, "edited": false, "score": 0, "creation_date": 1420834588, "post_id": 27866848, "comment_id": 44139424, "body": "Why do you use <code>snippets</code> for <a href=\"https://stackoverflow.com/questions/tagged/javascript\">javascript</a> and <a href=\"https://stackoverflow.com/questions/tagged/html\">html</a> as language indicator?"}, {"owner": {"reputation": 45, "user_id": 2836358, "user_type": "registered", "accept_rate": 17, "profile_image": "https://www.gravatar.com/avatar/7926c2ef198fc3e93920bc0bc209872f?s=128&d=identicon&r=PG&f=1", "display_name": "DaveSwans", "link": "https://stackoverflow.com/users/2836358/daveswans"}, "edited": false, "score": 0, "creation_date": 1420899467, "post_id": 27866848, "comment_id": 44155732, "body": "Sorry I couldnt find the Haskell language indicator"}], "answers": [{"comments": [{"owner": {"reputation": 45, "user_id": 2836358, "user_type": "registered", "accept_rate": 17, "profile_image": "https://www.gravatar.com/avatar/7926c2ef198fc3e93920bc0bc209872f?s=128&d=identicon&r=PG&f=1", "display_name": "DaveSwans", "link": "https://stackoverflow.com/users/2836358/daveswans"}, "edited": false, "score": 0, "creation_date": 1420899749, "post_id": 27868656, "comment_id": 44155822, "body": "The problem is not with what I have, Its what i dont have: I need to show once the program has given the string &quot; sorry&quot; to then give the actual answer 90 and the difference between the actual answer and the users result. Perhaps as a pair, answer difference (90,_)"}, {"owner": {"reputation": 8676, "user_id": 1113881, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sBc0F.jpg?s=128&g=1", "display_name": "CR Drost", "link": "https://stackoverflow.com/users/1113881/cr-drost"}, "reply_to_user": {"reputation": 45, "user_id": 2836358, "user_type": "registered", "accept_rate": 17, "profile_image": "https://www.gravatar.com/avatar/7926c2ef198fc3e93920bc0bc209872f?s=128&d=identicon&r=PG&f=1", "display_name": "DaveSwans", "link": "https://stackoverflow.com/users/2836358/daveswans"}, "edited": false, "score": 0, "creation_date": 1421358471, "post_id": 27868656, "comment_id": 44339875, "body": "Aha. So you&#39;ll need a string concatenation and a bunch of <code>show</code> functions: <code>let answer = 90</code> followed by <code>guess = read r</code> followed by <code>putStrLn $ &quot;Sorry, the actual answer was: &quot; ++ show answer ++ &quot;, and you were off by &quot; ++ show (abs (answer - guess)) ++ &quot;.&quot;</code>"}], "tags": [], "owner": {"reputation": 8676, "user_id": 1113881, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/sBc0F.jpg?s=128&g=1", "display_name": "CR Drost", "link": "https://stackoverflow.com/users/1113881/cr-drost"}, "is_accepted": false, "score": 1, "last_activity_date": 1420835122, "creation_date": 1420835122, "answer_id": 27868656, "question_id": 27866848, "link": "https://stackoverflow.com/questions/27866848/having-some-trouble-with-user-input-and-output-in-haskell/27868656#27868656", "title": "having some trouble with user input and output in haskell", "body": "<p>@bheklilr has hit the nail on the head here: there is nothing wrong with your code except its indendation. If you want just a one-liner, the functions <code>(&gt;&gt;)</code> and <code>(&gt;&gt;=)</code> do the same thing as do-notation:</p>\n\n<pre><code>Prelude&gt; putStrLn \"What is 37 + 53?\" &gt;&gt; getLine &gt;&gt;= \\r -&gt; if read r /= 90 then putStrLn \"Sorry\" else putStrLn \"Excellent\"\nWhat is 37 + 53?\n30\nSorry\n</code></pre>\n\n<p>This is equivalent to:</p>\n\n<pre><code>do { putStrLn \"What is 37 + 53?\"; r &lt;- getLine; if read r /= 90 then putStrLn \"Sorry\" else putStrLn \"Excellent\" }\n</code></pre>\n\n<p>If you leave out those curly braces and semicolons, Haskell allows you do do something like Python but whitespace aware. To do multiline input in GHCi you will need to start with the <code>:{</code> and end with the <code>:}</code> special lines:</p>\n\n<pre><code>Prelude&gt; :{\nPrelude| do\nPrelude|     putStrLn \"What is 37 + 53?\"\nPrelude|     r &lt;- getLine\nPrelude|     if read r /= 90\nPrelude|     then putStrLn \"Sorry\"\nPrelude|     else putStrLn \"Excellent\"\nPrelude| :}\nWhat is 37 + 53?\n50\nSorry\n</code></pre>\n\n<p>Haskell will automatically understand that those first two lines are supposed to stand on their own while the if/then/else is all one coherent construct.</p>\n"}], "owner": {"reputation": 45, "user_id": 2836358, "user_type": "registered", "accept_rate": 17, "profile_image": "https://www.gravatar.com/avatar/7926c2ef198fc3e93920bc0bc209872f?s=128&d=identicon&r=PG&f=1", "display_name": "DaveSwans", "link": "https://stackoverflow.com/users/2836358/daveswans"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 87, "favorite_count": 0, "answer_count": 1, "score": -2, "last_activity_date": 1420837546, "creation_date": 1420827934, "last_edit_date": 1420837546, "question_id": 27866848, "link": "https://stackoverflow.com/questions/27866848/having-some-trouble-with-user-input-and-output-in-haskell", "title": "having some trouble with user input and output in haskell", "body": "<p>Hi there I am just starting out with haskell and I have hit a block at a simple question involving input and output.\nI am trying to ask the user a maths question , in this case: The user is asked what the result would be in adding the numbers 37 and 53 together. \nif they enter the correct answer (90) the program will print \"excellent\" and if they answer incorrectly it will print \"sorry\" \nI have managed to do this part.\nWhat i dont understand how to do is to then show as output what the actual answer is, the users answer and finally the difference between the actual answer and the users answer </p>\n\n<pre><code>//the GHCI shell\nit should show: \n*Main mathSkill\nwhat is 37 + 53?\n55\nSorry  \n'' here is where i want it to show the rest of the info\"\n</code></pre>\n\n<p>any help is greatly appreciated</p>\n\n<pre><code>--the haskell code\nmathSkill = do\nlet answer = 90         \nputStrLn \"What is 37 + 53?\"\nresult &lt;- getLine\nif (read result) /= answer\nthen putStrLn \"Sorry\"\nelse putStrLn \"excellent\"\n</code></pre>\n"}, {"tags": ["haskell"], "answers": [{"comments": [{"owner": {"reputation": 37, "user_id": 4358044, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6750d27fba55e9bd2348df47510c8a13?s=128&d=identicon&r=PG&f=1", "display_name": "spacecows", "link": "https://stackoverflow.com/users/4358044/spacecows"}, "edited": false, "score": 0, "creation_date": 1420820127, "post_id": 27864261, "comment_id": 44131833, "body": "Thanks, it worked. But i have another problem when testing //  &gt;inserePil (Carro 25 &quot;Emanuel&quot; Competicao) dak // No instance for (Show Piloto) arising from a use of &#39;print&#39; // In a stmt of an interactive GHCi command: print it // dak its a list of the Type Dakar."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "reply_to_user": {"reputation": 37, "user_id": 4358044, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6750d27fba55e9bd2348df47510c8a13?s=128&d=identicon&r=PG&f=1", "display_name": "spacecows", "link": "https://stackoverflow.com/users/4358044/spacecows"}, "edited": false, "score": 1, "creation_date": 1420820285, "post_id": 27864261, "comment_id": 44131946, "body": "@spacecows The error you&#39;re seeing tells you exactly what&#39;s wrong &quot;No instance for (Show Piloto)&quot;.  This means that the compiler doesn&#39;t know how to convert your type into a <code>String</code> in order to print it to the screen.  Try adding <code>deriving (Show)</code> to your <code>data</code> declaration, or write your own <code>Show</code> instance for <code>Piloto</code>."}], "tags": [], "owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "is_accepted": true, "score": 3, "last_activity_date": 1420818543, "creation_date": 1420818543, "answer_id": 27864261, "question_id": 27864172, "link": "https://stackoverflow.com/questions/27864172/comparing-on-type-haskell/27864261#27864261", "title": "Comparing on Type Haskell", "body": "<p><code>Nome</code> isn't a predicate, it's the name of a type.  You could do</p>\n\n<pre><code>nome :: Piloto -&gt; Nome\nnome (Carro _ n _) = n\nnome (Mota _ n _) = n\nnome (Camiao _ n) = n\n</code></pre>\n\n<p>Then you can use <code>sortBy (compare `on` nome)</code>.  However, there's already a function for <code>on compare</code>, and it's <code>Data.Ord.comparing</code>, so you could instead write</p>\n\n<pre><code>inserePil p ds = sortBy (comparing nome) (p:ds)\n</code></pre>\n"}], "owner": {"reputation": 37, "user_id": 4358044, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6750d27fba55e9bd2348df47510c8a13?s=128&d=identicon&r=PG&f=1", "display_name": "spacecows", "link": "https://stackoverflow.com/users/4358044/spacecows"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 168, "favorite_count": 0, "accepted_answer_id": 27864261, "answer_count": 1, "score": 0, "last_activity_date": 1420818543, "creation_date": 1420818272, "question_id": 27864172, "link": "https://stackoverflow.com/questions/27864172/comparing-on-type-haskell", "title": "Comparing on Type Haskell", "body": "<p>I want to sort a list by comparing its type    </p>\n\n<pre><code>type Dakar = [Piloto]\ndata Piloto = Carro Numero Nome Categoria\n            | Mota Numero Nome Categoria\n            | Camiao Numero Nome\ntype Numero = Int\ntype Nome = String\ndata Categoria = Competicao | Maratona\n\ninserePil :: Piloto -&gt; Dakar -&gt; Dakar\ninserePil p (h:t) = sortBy (compare `on` Nome) (h:p:t)\n</code></pre>\n\n<p>but it gives me error. Whats the correct way to do it?</p>\n"}, {"tags": ["api", "haskell", "monads"], "comments": [{"owner": {"reputation": 41209, "user_id": 485115, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/59693d66b96ca17ca9d2fdb2393e2be3?s=128&d=identicon&r=PG", "display_name": "Nikita Volkov", "link": "https://stackoverflow.com/users/485115/nikita-volkov"}, "edited": false, "score": 0, "creation_date": 1420838868, "post_id": 27863147, "comment_id": 44141443, "body": "<code>c      &lt;-  connection</code> - this part terrifies me, considering that it&#39;s done in <code>IO</code>. I suspect you&#39;re using <code>unsafePerformIO</code> somewhere for this, right? This is a code smell per se. Consider learning <code>ReaderT</code> instead."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "reply_to_user": {"reputation": 41209, "user_id": 485115, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/59693d66b96ca17ca9d2fdb2393e2be3?s=128&d=identicon&r=PG", "display_name": "Nikita Volkov", "link": "https://stackoverflow.com/users/485115/nikita-volkov"}, "edited": false, "score": 0, "creation_date": 1420840226, "post_id": 27863147, "comment_id": 44142028, "body": "@NikitaVolkov Huh? This is in IO, so <code>c</code> is pulling the current connection out of some global or whatever. The type is <code>IO [a]</code>, so unsafePerformIO is obviously not necessary."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1420840831, "post_id": 27863147, "comment_id": 44142302, "body": "<code>connection :: IO Connection; connection = do {config &lt;- readConfigFile; doConnectToDB config}</code>? There are like a million plausible implementations, and none of them need unsafePerformIO, because the type is <code>IO Connection</code>, not <code>Connection</code>."}, {"owner": {"reputation": 41209, "user_id": 485115, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/59693d66b96ca17ca9d2fdb2393e2be3?s=128&d=identicon&r=PG", "display_name": "Nikita Volkov", "link": "https://stackoverflow.com/users/485115/nikita-volkov"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1420840833, "post_id": 27863147, "comment_id": 44142304, "body": "@amalloy And how would you declare this &quot;global&quot; if not with <code>unsafePreformIO</code>? Besides, this is exactly what I&#39;m talking about, a global variable is the code smell. It only makes sense in some very special cases of hacking with Haskell&#39;s RTS."}, {"owner": {"reputation": 41209, "user_id": 485115, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/59693d66b96ca17ca9d2fdb2393e2be3?s=128&d=identicon&r=PG", "display_name": "Nikita Volkov", "link": "https://stackoverflow.com/users/485115/nikita-volkov"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1420841141, "post_id": 27863147, "comment_id": 44142441, "body": "@amalloy <code>connection = do {config &lt;- readConfigFile; doConnectToDB config}</code> - so, reestablish a connection on every query? Are you freakin serious?"}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1420841260, "post_id": 27863147, "comment_id": 44142497, "body": "So look it up in a cache, whatever. The point is it doesn&#39;t need unsafePerformIO because it&#39;s in IO explicitly. I&#39;m objecting to your absurd conclusion that <code>c &lt;- connection</code> implies unsafePerformIO, where to me it implies <i>lack</i> of unsafePerformIO (compared to, say, <code>c = connection</code>). The details of how this is implemented, or whether a global <code>connection</code> is good design, I&#39;m not interested in arguing about."}, {"owner": {"reputation": 41209, "user_id": 485115, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/59693d66b96ca17ca9d2fdb2393e2be3?s=128&d=identicon&r=PG", "display_name": "Nikita Volkov", "link": "https://stackoverflow.com/users/485115/nikita-volkov"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1420841774, "post_id": 27863147, "comment_id": 44142702, "body": "@amalloy &quot;So look it up in a cache, whatever.&quot; - No it&#39;s not whatever. My point is that there would be no other way to declare such a cache but using <code>unsafePerformIO</code>. &quot;absurd conclusion&quot; - Okay, present me a single example, which does not use <code>unsafePerformIO</code> and is not ridiculous like your previous one. Otherwise I suggest you apologise."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 2, "creation_date": 1420842974, "post_id": 27863147, "comment_id": 44143169, "body": "No, thanks. I don&#39;t think this discussion is enriching the lives of either of us, or of anyone else reading the comments."}, {"owner": {"user_type": "does_not_exist", "display_name": "user2913694"}, "edited": false, "score": 0, "creation_date": 1420933505, "post_id": 27863147, "comment_id": 44166502, "body": "Damn, I thought all these notifications were for useful informative answers ..."}, {"owner": {"reputation": 41209, "user_id": 485115, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/59693d66b96ca17ca9d2fdb2393e2be3?s=128&d=identicon&r=PG", "display_name": "Nikita Volkov", "link": "https://stackoverflow.com/users/485115/nikita-volkov"}, "edited": false, "score": 0, "creation_date": 1420981818, "post_id": 27863147, "comment_id": 44175791, "body": "@decentralised The conversation above points out that you either create a bottleneck due to a terrible misuse of resources or implement an antipattern. Of course it&#39;s up to you to consider whether an information like that is useful."}], "answers": [{"comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1420820326, "post_id": 27863375, "comment_id": 44131975, "body": "Well... If the database can be made a data structure that&#39;s passed around, the code that loads it can be separated from the code that uses it."}, {"owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 1, "creation_date": 1420820508, "post_id": 27863375, "comment_id": 44132082, "body": "@Carl Yes, the code that uses the values returned from a database query can be pure, but the function that pulls the data structure from the database can not be made pure."}], "tags": [], "owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "is_accepted": true, "score": 2, "last_activity_date": 1420815593, "creation_date": 1420815593, "answer_id": 27863375, "question_id": 27863147, "link": "https://stackoverflow.com/questions/27863147/haskell-exposing-io-actions-in-api/27863375#27863375", "title": "Haskell - Exposing IO actions in API", "body": "<p>Since you're hitting a database, no.  A huge part of Haskell is specifying to someone using your API that they're performing an IO action.  Since IO actions can fail, return different results for the same input, or fire the missiles, we always tell the user when this happens.</p>\n\n<p>What would happen if I used your API but didn't have your database as well?  Then I would likely see some sort of error message about not having a connection.  Or if I did have your database but modified it to return incorrect conjugations, then you can't guarantee that <code>conjugate</code> will always return the same conjugations given a particular infinitive, tense, and mood.  This means that you can't have your <code>conjugate</code> function be pure.</p>\n"}, {"comments": [{"owner": {"user_type": "does_not_exist", "display_name": "user2913694"}, "edited": false, "score": 1, "creation_date": 1427644700, "post_id": 27873285, "comment_id": 46851847, "body": "thanks for pointing out this strategy. If this is completely new territory for anyone else (like me!), these two links helped me grok the idea. <a href=\"https://wiki.haskell.org/All_About_Monads\" rel=\"nofollow noreferrer\">All about Monads</a> and <a href=\"http://www.cs.virginia.edu/~wh5a/personal/Transformers.pdf\" rel=\"nofollow noreferrer\">Monad Transformers step by step</a>"}], "tags": [], "owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "is_accepted": false, "score": 2, "last_activity_date": 1420868777, "creation_date": 1420868777, "answer_id": 27873285, "question_id": 27863147, "link": "https://stackoverflow.com/questions/27863147/haskell-exposing-io-actions-in-api/27873285#27873285", "title": "Haskell - Exposing IO actions in API", "body": "<p>If you want to avoid reconnecting to the database for every query, one thing you can do is make a <code>newtype</code> wrapper over <code>ReaderT Connection IO</code> that you use all over the place, and then provide a separate <code>runDB</code> function:</p>\n\n<pre><code>newtype DB a = MkDB{ unDB :: ReaderT DBConnection IO a } deriving (Functor, Applicative, Monad)\n\nqueryDB  :: (ToRow params, FromRow a) =&gt; Query -&gt; params -&gt; DB [a]\nqueryDB q paramTypes =  MkDB $ do\n    c &lt;- ask\n    lift $ query c q paramTypes\n\nconjugate :: Infinitive -&gt; Tense -&gt; Mood -&gt; DB [Conjugation]\nconjugate i t m =  queryDB conjugationQuery [i :: Infinitive, \n                                             t :: Tense, \n                                             m :: Mood]\n\n-- Of course, this still needs to be in IO\nrunDB :: DB a -&gt; IO a\nrunDB db = runReaderT db =&lt;&lt; connection\n</code></pre>\n\n<p>The crucial bit is to <strong>not</strong> export <code>MkDB</code> and <code>unDB</code>; <code>DB</code> is an opaque type that the user can only use via the exported functions (<code>conjugate</code> etc.) and the monadic combinators. This way, undiluted IO is not spread all over the client code.</p>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user2913694"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 131, "favorite_count": 0, "accepted_answer_id": 27863375, "answer_count": 2, "score": 1, "last_activity_date": 1420868777, "creation_date": 1420814900, "question_id": 27863147, "link": "https://stackoverflow.com/questions/27863147/haskell-exposing-io-actions-in-api", "title": "Haskell - Exposing IO actions in API", "body": "<p>I wrote a small library[<a href=\"https://github.com/lwm/spanish-conjugator\" rel=\"nofollow\">1</a>] that interfaces with a postgresql DB which contains 600+ Spanish verbs and pulls out conjugations and other useful things.</p>\n\n<p>I have a single function which performs the DB read. It looks like this (I am using the postgresql-simple[<a href=\"https://hackage.haskell.org/package/postgresql-simple\" rel=\"nofollow\">2</a>] library):</p>\n\n<pre><code>-- | A postgres query.\nqueryDB              :: (ToRow params, FromRow a) =&gt; Query -&gt; params -&gt; IO [a]\nqueryDB q paramTypes =  do\n    c      &lt;-  connection\n    return =&lt;&lt; query c q paramTypes\n</code></pre>\n\n<p>Each function that I expose in the library, uses this function and returns an IO action of some type. For example, if the user conjugates the verb 'ser' using <code>conjugate</code>, I get back a <code>IO [Conjugation]</code>:</p>\n\n<pre><code>-- | Conjugate the verb 'i' in the tense 't' and mood 'm'.\n-- \n-- &gt; conjugate \"ser\" \"Presente\" \"Indicativo\"\nconjugate       :: Infinitive -&gt; Tense -&gt; Mood -&gt; IO [Conjugation]\nconjugate i t m =  queryDB conjugationQuery [i :: Infinitive, \n                                             t :: Tense, \n                                             m :: Mood]\n</code></pre>\n\n<p>I am new to writing libraries in Haskell. Is it fine to leave functions such as <code>conjugate</code> to export IO actions? They do interact with the DB, but that isn't really the point of the function ... the user just wants conjugations. Normally, if I would write code like this in another language, the user would not know an IO action has taken place.</p>\n\n<p>Can I seperate IO and expose pure functions?</p>\n"}, {"tags": ["java", "haskell", "cmd"], "comments": [{"owner": {"reputation": 2102, "user_id": 2347107, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/b6c66756866cdf58924ad3ae4c8243ac?s=128&d=identicon&r=PG", "display_name": "agad", "link": "https://stackoverflow.com/users/2347107/agad"}, "edited": false, "score": 0, "creation_date": 1420814663, "post_id": 27862886, "comment_id": 44128117, "body": "<a href=\"http://stackoverflow.com/questions/2141148/best-way-to-call-haskell-functions-from-within-java\" title=\"best way to call haskell functions from within java\">stackoverflow.com/questions/2141148/&hellip;</a> and <a href=\"http://stackoverflow.com/questions/10370177/communication-between-java-and-haskell\" title=\"communication between java and haskell\">stackoverflow.com/questions/10370177/&hellip;</a> may help."}], "answers": [{"tags": [], "owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "is_accepted": true, "score": 1, "last_activity_date": 1420814772, "creation_date": 1420814772, "answer_id": 27863095, "question_id": 27862886, "link": "https://stackoverflow.com/questions/27862886/executing-a-haskell-file-with-cmd-through-java/27863095#27863095", "title": "Executing a Haskell file with cmd through Java", "body": "<p>Provided your file <code>test.hs</code> looks like</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>module Main where\n\ntestfunction :: Int -&gt; IO ()\ntestFunction n = print n\n\nmain :: IO ()\nmain = do\n    testfunction 2\n</code></pre>\n\n<p>Then you can call it without compilation from Java using the <code>runhaskell</code> command:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>public class CmdTest {\npublic static void main(String[] args) throws Exception {\n    ProcessBuilder builder = new ProcessBuilder(\n        \"cmd.exe\",\n        \"/c\",\n        \"cd \\\"C:\\\\Users\\\\ray\\\\Documents\\\\Project\\\" &amp;&amp; runhaskell \",\n        \"test.hs\");\n    builder.redirectErrorStream(true);\n    Process p = builder.start();\n    BufferedReader r = new BufferedReader(new InputStreamReader(p.getInputStream()));\n    String line;\n    while (true) {\n        line = r.readLine();\n        if (line == null) { break; }\n        System.out.println(line);\n    }\n}\n}\n</code></pre>\n\n<p>The important parts to note:</p>\n\n<p>Your Haskell file has to explicitly be <code>module Main</code> or have no module declaration (it's implicitly <code>Main</code>, but it's always good idea to be explicit), it has to have a function called <code>main</code> with type <code>IO ()</code>, and the use of the <code>runhaskell</code> command.  The <code>ghci</code> command is for running an interactive REPL, much like <code>IPython</code> or <code>irb</code>, it is not meant for running a source file as a script.  You also can't just specify which function inside the <code>.hs</code> file to run, your file has to be an executable.  You wouldn't expect this to work for Java</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>// SayHello.java\npublic class SayHello {\n    public static void sayHello(String name) {\n        System.out.print(\"Hello, \");\n        System.out.println(name);\n    }\n}\n</code></pre>\n\n<p>And then run it as</p>\n\n<pre class=\"lang-sh prettyprint-override\"><code>&gt; java SayHello.java SayHello.sayHello \"World\"\n</code></pre>\n\n<p>You have to compile it first and have the target function called from some <code>public static void main(String[] args)</code>.  The same goes for Haskell, you have to have a <code>main</code> function to run anything, and <code>runhaskell</code> will simply compile and run your code in one step.</p>\n"}], "owner": {"reputation": 3, "user_id": 4437163, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bd6f80eb54821ebbacd272524feff23d?s=128&d=identicon&r=PG&f=1", "display_name": "R4y", "link": "https://stackoverflow.com/users/4437163/r4y"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 194, "favorite_count": 0, "accepted_answer_id": 27863095, "answer_count": 1, "score": 0, "last_activity_date": 1420814772, "creation_date": 1420814080, "question_id": 27862886, "link": "https://stackoverflow.com/questions/27862886/executing-a-haskell-file-with-cmd-through-java", "title": "Executing a Haskell file with cmd through Java", "body": "<p>I am working on a project where I need to compile and execute a Haskell file over cmd which I start/control with Java. That is what it looks like now:</p>\n\n<pre><code>public class CmdTest {\npublic static void main(String[] args) throws Exception {\n    ProcessBuilder builder = new ProcessBuilder( \"cmd.exe\", \"/c\", \"cd \\\"C:\\\\Users\\\\ray\\\\Documents\\\\Project\\\" &amp;&amp; ghci \", \"test.hs\");\n    builder.redirectErrorStream(true);\n    Process p = builder.start();\n    BufferedReader r = new BufferedReader(new InputStreamReader(p.getInputStream()));\n    String line;\n    while (true) {\n        line = r.readLine();\n        if (line == null) { break; }\n        System.out.println(line);\n    }\n}\n}\n</code></pre>\n\n<p>So far so good. Then i tried to execute my actual haskell-function(testfunction) by writing it directly behind the \"test.hs\" and i tried to write \"...\"test.hs\", \"testfunction 2\");\" and many more way, but i cant load it, when i add any of those. Please tell me how i can fix it and get it running.\nThx for your time</p>\n\n<p>Ray</p>\n"}, {"tags": ["haskell", "functional-programming", "fold"], "comments": [{"owner": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 0, "creation_date": 1420801423, "post_id": 27858920, "comment_id": 44120794, "body": "<code>if x == y then True else acc</code> could be a bit tidier as <code>acc || x == y</code>, imho."}, {"owner": {"reputation": 46235, "user_id": 2541573, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Z1qtP.png?s=128&g=1", "display_name": "jub0bs", "link": "https://stackoverflow.com/users/2541573/jub0bs"}, "edited": false, "score": 2, "creation_date": 1420802367, "post_id": 27858920, "comment_id": 44121285, "body": "Recommended reading: <a href=\"https://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl\" rel=\"nofollow noreferrer\">haskell.org/haskellwiki/Foldr_Foldl_Foldl</a>&#39;"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 36513, "user_id": 752976, "user_type": "registered", "accept_rate": 84, "profile_image": "https://i.stack.imgur.com/j7Uis.jpg?s=128&g=1", "display_name": "Bartek Banachewicz", "link": "https://stackoverflow.com/users/752976/bartek-banachewicz"}, "edited": false, "score": 0, "creation_date": 1420889928, "post_id": 27858920, "comment_id": 44153061, "body": "@BartekBanachewicz you meant <code>x == y || acc</code>, undoubtedly."}], "answers": [{"tags": [], "owner": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "is_accepted": false, "score": 7, "last_activity_date": 1420803252, "creation_date": 1420803252, "answer_id": 27859672, "question_id": 27858920, "link": "https://stackoverflow.com/questions/27858920/foldl-behaviour-on-infinite-lists/27859672#27859672", "title": "foldl behaviour on infinite lists", "body": "<p>Even if you \"immediately\" reduce <code>f 0 0</code> to <code>True</code>, that does not help. You still have all the surrounding occurrences of <code>f</code> to reduce ...</p>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": true, "score": 1, "last_activity_date": 1420885877, "last_edit_date": 1420885877, "creation_date": 1420803922, "answer_id": 27859855, "question_id": 27858920, "link": "https://stackoverflow.com/questions/27858920/foldl-behaviour-on-infinite-lists/27859855#27859855", "title": "foldl behaviour on infinite lists", "body": "<p>Because <code>f (f (f (f (f 0 0) 1) 2) 3) ...)</code> is not right. The final parenthesis and the first <code>f</code> are mismatched, and the initial argument is all wrong. It really is</p>\n\n<pre><code>(f ... (f (f (f (f False 0) 1) 2) 3) ...)\n</code></pre>\n\n<p>so after <code>foldl</code> has finished building this expression (which is, <em>never</em>), we have to get through an infinite amount of nested expressions, evaluating <em>them</em> first, before we get to the innermost expression, which gets evaluated <em>last</em> (because <code>f</code> stops on 0). Or in this case, <em>never</em>.</p>\n\n<p>And the other test, searching for 3, would stop earlier, on <code>(f (f (f (f False 0) 1) 2) 3)</code>, because now <code>f</code> stops on 3; but still it'd have to go through the <em>infinite</em> amount of nested expressions first, after that <em>infinite</em> nested expression is built. </p>\n"}], "owner": {"reputation": 639, "user_id": 2714427, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/003a9b7ff84c7febe9f9814b6f2720d9?s=128&d=identicon&r=PG&f=1", "display_name": "espern", "link": "https://stackoverflow.com/users/2714427/espern"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 146, "favorite_count": 0, "accepted_answer_id": 27859855, "answer_count": 2, "score": 4, "last_activity_date": 1420885877, "creation_date": 1420800690, "question_id": 27858920, "link": "https://stackoverflow.com/questions/27858920/foldl-behaviour-on-infinite-lists", "title": "foldl behaviour on infinite lists", "body": "<p>What I've understood about foldl vs. foldr on lists :</p>\n\n<p>If we <strong>right</strong> fold <strong>[0,1,2,3]</strong> with a function <strong>s</strong> and a starting accumulator <strong>a</strong>, we are doing this : </p>\n\n<p><code>f 0 (f 1 (f 2 (f 3 a)))</code></p>\n\n<p>If we <strong>left</strong> fold <strong>[0,1,2,3]</strong> with a function <strong>s</strong> and a starting accumulator <strong>a</strong>, we are doing this : </p>\n\n<p><code>f (f (f (f 0 a) 1) 2) 3)</code></p>\n\n<hr>\n\n<p>Given : </p>\n\n<pre><code>elem_r :: (Eq a) =&gt; a -&gt; [a] -&gt; Bool\nelem_r y ys = foldr (\\x acc -&gt; if x == y then True else acc) False ys\n</code></pre>\n\n<p>and</p>\n\n<pre><code>elem_l :: (Eq a) =&gt; a -&gt; [a] -&gt; Bool\nelem_l y ys = foldl (\\acc x -&gt; if x == y then True else acc) False ys\n</code></pre>\n\n<p>It seems clear to me that <code>elem_r 3 [0..]</code> will compute what it really must, and return True as soon as value <strong>3</strong> is reached.</p>\n\n<p><code>f 0 (f 1 (f 2 (f 3 (...)))</code></p>\n\n<p>Whereas <code>elem_l 3 [0..]</code> need to evaluate the complete nested functions application before returning a result.</p>\n\n<p><code>f (f (f (f (f 0 3) 1) 2) 3) ...)</code></p>\n\n<hr>\n\n<p>Now my question is : </p>\n\n<p>In the specific case of <code>elem_l 0 [0..]</code> \nThe searched element is the <strong>first item of the list</strong>.</p>\n\n<p>In this expression :\n<code>f (f (f (f (f 0 0) 1) 2) 3) ...)</code>\nThe innermost function (f 0 0) can immediately be evaluated to \"True\".\nWhy does Haskell continue to evaluate the rest of nested functions?</p>\n"}, {"tags": ["opengl", "haskell", "shadow-mapping"], "comments": [{"owner": {"reputation": 39713, "user_id": 2423205, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EX7y2.png?s=128&g=1", "display_name": "Andon M. Coleman", "link": "https://stackoverflow.com/users/2423205/andon-m-coleman"}, "edited": false, "score": 0, "creation_date": 1420804963, "post_id": 27857847, "comment_id": 44122628, "body": "Your question discusses incompleteness of using an RBO, which is true (RBOs cannot be attached to layered framebufferers)... but I don&#39;t see any actual mention of renderbuffers. The rest of your question talks about two attachments, a color cubemap and a depth cubemap - where does the renderbuffer in your second-to-last paragraph come from?"}, {"owner": {"reputation": 1932, "user_id": 1784267, "user_type": "registered", "accept_rate": 41, "profile_image": "https://www.gravatar.com/avatar/172e98db79964f9e6e4969e9f4afc452?s=128&d=identicon&r=PG", "display_name": "phaazon", "link": "https://stackoverflow.com/users/1784267/phaazon"}, "reply_to_user": {"reputation": 39713, "user_id": 2423205, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EX7y2.png?s=128&g=1", "display_name": "Andon M. Coleman", "link": "https://stackoverflow.com/users/2423205/andon-m-coleman"}, "edited": false, "score": 0, "creation_date": 1420805949, "post_id": 27857847, "comment_id": 44123126, "body": "Well, to me, RBO = renderbuffer object"}, {"owner": {"reputation": 39713, "user_id": 2423205, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EX7y2.png?s=128&g=1", "display_name": "Andon M. Coleman", "link": "https://stackoverflow.com/users/2423205/andon-m-coleman"}, "edited": false, "score": 0, "creation_date": 1420827509, "post_id": 27857847, "comment_id": 44135897, "body": "Yes, that is exactly what an RBO is. Cubemaps are not RBOs, they are textures. You can attach two classes of images to Framebuffer Objects: 1. Textures, 2. Renderbuffer Objects."}, {"owner": {"reputation": 1932, "user_id": 1784267, "user_type": "registered", "accept_rate": 41, "profile_image": "https://www.gravatar.com/avatar/172e98db79964f9e6e4969e9f4afc452?s=128&d=identicon&r=PG", "display_name": "phaazon", "link": "https://stackoverflow.com/users/1784267/phaazon"}, "reply_to_user": {"reputation": 39713, "user_id": 2423205, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EX7y2.png?s=128&g=1", "display_name": "Andon M. Coleman", "link": "https://stackoverflow.com/users/2423205/andon-m-coleman"}, "edited": false, "score": 0, "creation_date": 1420828717, "post_id": 27857847, "comment_id": 44136518, "body": "Yes\u2026 this is why I attached only textures. When I lookup the cubemap with a constant direction (<code>vec3(1.,0.,0.)</code>), I get black color, even with the <code>glClearColor 1 1\u00a01 1</code> on the FBO\u2026 I don\u2019t get it :("}, {"owner": {"reputation": 39713, "user_id": 2423205, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EX7y2.png?s=128&g=1", "display_name": "Andon M. Coleman", "link": "https://stackoverflow.com/users/2423205/andon-m-coleman"}, "edited": false, "score": 0, "creation_date": 1420829392, "post_id": 27857847, "comment_id": 44136892, "body": "I was asking why you mentioned an RBO at all in your question. But from your last comment, I have to wonder if you&#39;re clearing the depth buffer in all 6 layers (if at all)?"}, {"owner": {"reputation": 1932, "user_id": 1784267, "user_type": "registered", "accept_rate": 41, "profile_image": "https://www.gravatar.com/avatar/172e98db79964f9e6e4969e9f4afc452?s=128&d=identicon&r=PG", "display_name": "phaazon", "link": "https://stackoverflow.com/users/1784267/phaazon"}, "reply_to_user": {"reputation": 39713, "user_id": 2423205, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/EX7y2.png?s=128&g=1", "display_name": "Andon M. Coleman", "link": "https://stackoverflow.com/users/2423205/andon-m-coleman"}, "edited": false, "score": 0, "creation_date": 1420846766, "post_id": 27857847, "comment_id": 44144483, "body": "I\u2019m cleaning the framebuffer directly. I bind the framebuffer, and call <code>glClear</code>. The cubemap is attached with <code>glFramebufferTexture</code> and <code>GL_TEXTURE_CUBE_MAP</code> in order to perform layered rendering."}], "owner": {"reputation": 1932, "user_id": 1784267, "user_type": "registered", "accept_rate": 41, "profile_image": "https://www.gravatar.com/avatar/172e98db79964f9e6e4969e9f4afc452?s=128&d=identicon&r=PG", "display_name": "phaazon", "link": "https://stackoverflow.com/users/1784267/phaazon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 252, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1420797057, "creation_date": 1420797057, "question_id": 27857847, "link": "https://stackoverflow.com/questions/27857847/layered-rendering-into-cubemap", "title": "Layered rendering into cubemap", "body": "<p>I\u2019m trying to compute shadows with cubemaps. To generate those, I use layered rendering so that I produce the cubemaps in a single pass. I\u2019d love to attach some code, but it\u2019s full Haskell with my own engine, not sure it\u2019s a good idea. However, this is the GLSL codes:</p>\n\n<pre><code>lightCubeDepthmapVS :: String\nlightCubeDepthmapVS = unlines\n  [\n    \"#version 330 core\"\n\n  , \"layout (location = 0) in vec3 co;\"\n  , \"layout (location = 1) in vec3 no;\"\n\n  , \"uniform mat4 model;\"\n\n  , \"void main() {\"\n  , \"  gl_Position = model * vec4(co,1.);\"\n  , \"}\"\n  ]\n\n-- The geometry shader is used because we\u2019re doing a layered rendering in order\n-- to generate the whole cube depthmap in one pass. Each primitive (i.e.\n-- triangle) gets duplicate 6 times; one time per cubemap face.\nlightCubeDepthmapGS :: String\nlightCubeDepthmapGS = unlines\n  [\n    \"#version 330 core\"\n\n  , \"layout (triangles) in;\"\n  , \"layout (triangle_strip, max_vertices = 18) out;\"\n\n  , \"out vec3 gco;\"\n\n  , \"uniform mat4 ligProjViews[6];\" -- 6 views\n\n  , \"void main() {\"\n  , \"  for (int i = 0; i &lt; 6; ++i) {\"\n  , \"    for (int j = 0; j &lt; 3; ++j) {\"\n  , \"      gl_Layer = i;\"\n  , \"      gco = gl_in[j].gl_Position.xyz;\"\n  , \"      gl_Position = ligProjViews[i] * gl_in[j].gl_Position;\"\n  , \"      EmitVertex();\"\n  , \"    }\"\n  , \"    EndPrimitive();\"\n  , \"  }\"\n  , \"}\"\n  ]\n\nlightCubeDepthmapFS :: String\nlightCubeDepthmapFS = unlines\n  [\n    \"#version 330 core\"\n\n  , \"in vec3 gco;\"\n  , \"out vec4 frag;\"\n\n  , \"uniform vec3 ligPos;\"\n  , \"uniform float ligIRad;\"\n\n  , \"void main() {\"\n  , \"  frag = vec4(length(gco - ligPos) * ligIRad);\"\n  , \"}\"\n  ]\n</code></pre>\n\n<p><code>ligIRad</code> is the inverse of the light radius. So the resulting map (it\u2019s not a standard depthmap) stores the distance light-point at each pixel for 6 faces in [0;1] where 0 = 0 and 1 = radius of the light. This trick enables me to clear the colormap with (1,1,1,1) and then use the cubemap in the lighting phase by simply fetching the texel using the traditional direction and multiplying the fetched <code>.r</code> value by the radius of the light to restore the worldspace distance.</p>\n\n<p>However, I have a black cubemap. I attach the color (R) cubemap and a depth cubemap that I don\u2019t use to the FBO. I figured that attaching a renderbuffer causes the FBO not to be complete (is it because a renderbuffer is not layered-rendering-friendly?).</p>\n\n<p>And final question: I\u2019ve been told there\u2019s a bug around layered rendering into cubemaps. Is it related? Is there a link to such bugs?</p>\n"}, {"tags": ["haskell", "monads"], "comments": [{"owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "edited": false, "score": 0, "creation_date": 1420803284, "post_id": 27857541, "comment_id": 44121733, "body": "<code>readArray sta 1</code> doesn&#39;t check in <code>cycleST</code>. I also don&#39;t quite get what you&#39;re trying to do with <code>cycleST</code>."}, {"owner": {"reputation": 1435, "user_id": 3792504, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e1e342dc9ed03c2039e7cde0dab4214e?s=128&d=identicon&r=PG&f=1", "display_name": "TheCriticalImperitive", "link": "https://stackoverflow.com/users/3792504/thecriticalimperitive"}, "reply_to_user": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "edited": false, "score": 0, "creation_date": 1420804558, "post_id": 27857541, "comment_id": 44122404, "body": "It should type check with <code>(forall s. ST s (STArray s Int Int)) -&gt; IO ()</code>. I use something like <code>cycleST</code> to inject IO data into the <code>STArray</code>. I&#39;ll edit the question to clarify."}, {"owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "edited": false, "score": 0, "creation_date": 1420804866, "post_id": 27857541, "comment_id": 44122587, "body": "I mean, <code>readArray :: STArray s i e -&gt; i -&gt; ST s e</code> (when specialized to ST), while <code>sta :: ST s (STArray s Int Int)</code>, so <code>readArray sta x</code> can&#39;t be well-typed. My GHC duly rejects it, as well."}, {"owner": {"reputation": 1435, "user_id": 3792504, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e1e342dc9ed03c2039e7cde0dab4214e?s=128&d=identicon&r=PG&f=1", "display_name": "TheCriticalImperitive", "link": "https://stackoverflow.com/users/3792504/thecriticalimperitive"}, "reply_to_user": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "edited": false, "score": 0, "creation_date": 1420805175, "post_id": 27857541, "comment_id": 44122731, "body": "You are correct! Need to bind the STArray using <code>&lt;-</code>. My bad. Updated again."}, {"owner": {"reputation": 1435, "user_id": 3792504, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e1e342dc9ed03c2039e7cde0dab4214e?s=128&d=identicon&r=PG&f=1", "display_name": "TheCriticalImperitive", "link": "https://stackoverflow.com/users/3792504/thecriticalimperitive"}, "reply_to_user": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "edited": false, "score": 0, "creation_date": 1420805261, "post_id": 27857541, "comment_id": 44122774, "body": "Well that took me way more edits to get right than I&#39;d care to admit! But it should be fine now."}, {"owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "edited": false, "score": 0, "creation_date": 1420808368, "post_id": 27857541, "comment_id": 44124498, "body": "Also, your current <code>cycleST</code> performs <i>all the previous writes on a new array</i> on every iteration (quadratic complexity overall). That&#39;s because you don&#39;t actually modify an <i>array</i>, instead you build an ever-growing <i>array-modifying action</i>, which then you run with <code>runSTArray</code>. Is this the intended behaviour?"}, {"owner": {"reputation": 1435, "user_id": 3792504, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e1e342dc9ed03c2039e7cde0dab4214e?s=128&d=identicon&r=PG&f=1", "display_name": "TheCriticalImperitive", "link": "https://stackoverflow.com/users/3792504/thecriticalimperitive"}, "reply_to_user": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "edited": false, "score": 0, "creation_date": 1420872473, "post_id": 27857541, "comment_id": 44149350, "body": "I guess I hadn&#39;t thought about it properly. Is there away around that problem?"}, {"owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "reply_to_user": {"reputation": 1435, "user_id": 3792504, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e1e342dc9ed03c2039e7cde0dab4214e?s=128&d=identicon&r=PG&f=1", "display_name": "TheCriticalImperitive", "link": "https://stackoverflow.com/users/3792504/thecriticalimperitive"}, "edited": false, "score": 0, "creation_date": 1420878448, "post_id": 27857541, "comment_id": 44150409, "body": "Let us <a href=\"http://chat.stackoverflow.com/rooms/68538/discussion-between-andras-kovacs-and-thecriticalimperitive\">continue this discussion in chat</a>."}], "answers": [{"tags": [], "owner": {"reputation": 20862, "user_id": 376113, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/d3a5bd12fe6d876527a3cf4ac0de5fc6?s=128&d=identicon&r=PG", "display_name": "mb14", "link": "https://stackoverflow.com/users/376113/mb14"}, "is_accepted": false, "score": 1, "last_activity_date": 1420808645, "creation_date": 1420808645, "answer_id": 27861219, "question_id": 27857541, "link": "https://stackoverflow.com/questions/27857541/abstraction-for-monadic-recursion-with-unless/27861219#27861219", "title": "Abstraction for monadic recursion with &quot;unless&quot;", "body": "<p>I'm not sure what's your <code>MPredicate</code> is doing.\nFirst, instead of newtyping a tuple, it's probably better to use a normal algebric data type</p>\n\n<p><code>data MPredicate a m = MPredicate a (a -&gt; m Bool)</code></p>\n\n<p>Second, the way you use it, <code>MPredicate</code> is equivalent to <code>m Bool</code>.\nHaskell is lazzy, therefore there is no need to pass, a function and it's argument (even though\nit's usefull with strict languages). Just pass the result, and the function will be called when needed.</p>\n\n<p>I mean, instead of passing <code>(x, f)</code> around, just pass <code>f x</code> \nOf course, if you are not trying to delay the evaluation and really need at some point, the argument or the function as well as the result, a tuple is fine.</p>\n\n<p>Anyway, in the case your <code>MPredicate</code> is only there to delay the function evaluation, <code>MPredicat</code> reduces to <code>m Bool</code> and <code>doUnless</code> to <code>unless</code>.</p>\n\n<p>Your first example is strictly equivalent : </p>\n\n<pre><code>main = do\n   b &lt;- newMVar False\n   unless (readMVar b) (print \"foo\")\n</code></pre>\n\n<p>Now, if you want to loop a monad until a condition is reach (or equivalent) you should have a look at the <a href=\"https://hackage.haskell.org/package/monad-loops-0.3.0.2\" rel=\"nofollow\">monad-loop</a> package. What you are looking it at is probably <code>untilM_</code> or equivalent.</p>\n"}, {"comments": [{"owner": {"reputation": 1435, "user_id": 3792504, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e1e342dc9ed03c2039e7cde0dab4214e?s=128&d=identicon&r=PG&f=1", "display_name": "TheCriticalImperitive", "link": "https://stackoverflow.com/users/3792504/thecriticalimperitive"}, "edited": false, "score": 0, "creation_date": 1420873934, "post_id": 27861614, "comment_id": 44149585, "body": "<code>monad-loops</code> package looks really interesting. Also the laziness component didn&#39;t even cross my mind, I guess I still get stuck in imperative mindset from time to time. IterT from the other answer is more where I was going because of the composability."}], "tags": [], "owner": {"reputation": 28873, "user_id": 1068232, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/2a0a145ce58c20013969fe3f203531da?s=128&d=identicon&r=PG", "display_name": "Andr&#225;s Kov&#225;cs", "link": "https://stackoverflow.com/users/1068232/andr%c3%a1s-kov%c3%a1cs"}, "is_accepted": false, "score": 3, "last_activity_date": 1420821316, "last_edit_date": 1420821316, "creation_date": 1420809919, "answer_id": 27861614, "question_id": 27857541, "link": "https://stackoverflow.com/questions/27857541/abstraction-for-monadic-recursion-with-unless/27861614#27861614", "title": "Abstraction for monadic recursion with &quot;unless&quot;", "body": "<p><code>MPredicate</code> is rather superfluous here; <code>m Bool</code> can be used instead. The <a href=\"https://hackage.haskell.org/package/monad-loops\" rel=\"nofollow\">monad-loops</a> package contains plenty of control structures with <code>m Bool</code> conditions. <code>whileM_</code> in particular is applicable here, although we need to include a <code>State</code> monad for the <code>Int</code> that we're threading around:</p>\n\n<pre><code>import Control.Monad.State\nimport Control.Monad.Loops\nimport Control.Applicative\n\nfoobar :: MVar Bool -&gt; IO ()\nfoobar mvb = (`evalStateT` (0 :: Int)) $ \n  whileM_ (not &lt;$&gt; lift (readMVar mvb)) $ do\n    modify (+1) \n    lift . print =&lt;&lt; get    \n    lift $ threadDelay 1000000  \n</code></pre>\n\n<p>Alternatively, we can use a monadic version of <code>unless</code>. For some reason <code>monad-loops</code> doesn't export such a function, so let's write it:</p>\n\n<pre><code>unlessM :: Monad m =&gt; m Bool -&gt; m () -&gt; m ()\nunlessM mb action = do\n  b &lt;- mb\n  unless b action\n</code></pre>\n\n<p>It's somewhat more convenient and more modular in a monadic setting, since we can always go from a pure <code>Bool</code> to <code>m Bool</code>, but not vice versa.</p>\n\n<pre><code>foobar :: MVar Bool -&gt; IO ()\nfoobar mvb = go 0\n    where\n        go :: Int -&gt; IO ()\n        go x = unlessM (readMVar mvb) $ do \n            let x' = x + 1\n            print x'\n            threadDelay 1000000\n            go x' \n</code></pre>\n\n<p>You mentioned <code>fix</code>; sometimes people indeed use it for ad-hoc monadic loops, for example:</p>\n\n<pre><code>printUntil0 :: IO ()\nprintUntil0 = \n  putStrLn \"hello\"\n\n  fix $ \\loop -&gt; do\n    n &lt;- fmap read getLine :: IO Int\n    print n\n    when (n /= 0) loop\n\n  putStrLn \"bye\"\n</code></pre>\n\n<p>With some juggling it's possible to use <code>fix</code> with multi-argument functions. In the case of <code>foobar</code>:</p>\n\n<pre><code>foobar :: MVar Bool -&gt; IO ()\nfoobar mvb = ($(0 :: Int)) $ fix $ \\loop x -&gt; do\n    unlessM (readMVar mvb) $ do\n      let x' = x + 1\n      print x'\n      threadDelay 1000000\n      loop x'\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 1435, "user_id": 3792504, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e1e342dc9ed03c2039e7cde0dab4214e?s=128&d=identicon&r=PG&f=1", "display_name": "TheCriticalImperitive", "link": "https://stackoverflow.com/users/3792504/thecriticalimperitive"}, "edited": false, "score": 0, "creation_date": 1420874277, "post_id": 27864811, "comment_id": 44149647, "body": "IterT has a quite a lot of functionality. I&#39;m reading through the documentation right now and it will take some time to get my head around. Your answer was very detailed and is helping a lot! Would you have any extra recommended reading that might help?"}, {"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "reply_to_user": {"reputation": 1435, "user_id": 3792504, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e1e342dc9ed03c2039e7cde0dab4214e?s=128&d=identicon&r=PG&f=1", "display_name": "TheCriticalImperitive", "link": "https://stackoverflow.com/users/3792504/thecriticalimperitive"}, "edited": false, "score": 0, "creation_date": 1420876495, "post_id": 27864811, "comment_id": 44150064, "body": "@TheCriticalImperitive Here are some more examples: <a href=\"https://gist.github.com/ocharles/556b35e3d16565cab457\" rel=\"nofollow noreferrer\">gist.github.com/ocharles/556b35e3d16565cab457</a> <a href=\"https://gist.github.com/danidiaz/e9382127d1c4025b9845\" rel=\"nofollow noreferrer\">gist.github.com/danidiaz/e9382127d1c4025b9845</a> The iterative monad transformer is isomorphic to the special case of the free monad in which the functor is Identity, so tutorials on free monads could shed some light as well. And I think the transformer is also similar to a <code>Producer</code> from <code>pipes</code> that emits no useful information at each step: <code>IterT IO a</code> similar to <code>Producer () IO a</code>."}, {"owner": {"reputation": 5992, "user_id": 74497, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/0d4a7e6c8edd88e835508df8397592e5?s=128&d=identicon&r=PG", "display_name": "ocharles", "link": "https://stackoverflow.com/users/74497/ocharles"}, "edited": false, "score": 1, "creation_date": 1450183577, "post_id": 27864811, "comment_id": 56320659, "body": "I think <code>foobar&#39;</code> would be cleaner written as <code>foobar&#39; = interleave_ [liftIO (print x) | x &lt;- [0..]]</code>"}], "tags": [], "owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "is_accepted": true, "score": 6, "last_activity_date": 1420835396, "last_edit_date": 1420835396, "creation_date": 1420820394, "answer_id": 27864811, "question_id": 27857541, "link": "https://stackoverflow.com/questions/27857541/abstraction-for-monadic-recursion-with-unless/27864811#27864811", "title": "Abstraction for monadic recursion with &quot;unless&quot;", "body": "<p>You want to cleanly combine a stateful action having side effects, a delay, and an independent stopping condition.</p>\n\n<p>The <a href=\"http://hackage.haskell.org/package/free-4.10.0.1/docs/Control-Monad-Trans-Iter.html\" rel=\"nofollow\">iterative monad transformer</a> from the <code>free</code> package can be useful in these cases. </p>\n\n<p>This monad transformer lets you describe a (possibly nonending) computation as a series of discrete steps. And what's better, it let's you interleave \"stepped\" computations using <code>mplus</code>. The combined computation stops when any of the individual computations stops.</p>\n\n<p>Some preliminary imports:</p>\n\n<pre><code>import Data.Bool\nimport Control.Monad\nimport Control.Monad.Trans\nimport Control.Monad.Trans.Iter (delay,untilJust,IterT,retract,cutoff)\nimport Control.Concurrent\n</code></pre>\n\n<p>Your <code>foobar</code> function could be understood as a \"sum\" of three things:</p>\n\n<ul>\n<li><p>A computation that does nothing but reading from the <code>MVar</code> at each step, and finishes when the <code>Mvar</code> is <code>True</code>.</p>\n\n<pre><code>untilTrue :: (MonadIO m) =&gt; MVar Bool -&gt; IterT m ()  \nuntilTrue = untilJust . liftM guard . liftIO . readMVar\n</code></pre></li>\n<li><p>An infinite computation that takes a delay at each step.</p>\n\n<pre><code>delays :: (MonadIO m) =&gt; Int -&gt; IterT m a\ndelays = forever . delay . liftIO . threadDelay\n</code></pre></li>\n<li><p>An infinite computation that prints an increasing series of numbers.</p>\n\n<pre><code>foobar' :: (MonadIO m) =&gt; Int -&gt; IterT m a \nfoobar' x = do\n    let x' = x + 1\n    liftIO (print x')\n    delay (foobar' x')\n</code></pre></li>\n</ul>\n\n<p>With this in place, we can write <code>foobar</code> as:</p>\n\n<pre><code>foobar :: (MonadIO m) =&gt; MVar Bool -&gt; m ()\nfoobar v =  retract (delays 1000000 `mplus` untilTrue v `mplus` foobar' 0)\n</code></pre>\n\n<p>The neat thing about this is that you can change or remove the \"stopping condition\" and the delay very easily.</p>\n\n<p>Some clarifications:</p>\n\n<ul>\n<li><p>The <code>delay</code> function is not a delay in IO, it just tells the iterative monad transformer to \"put the argument in a separate step\".</p></li>\n<li><p><code>retract</code> brings you back from the iterative monad transformer to the base monad. It's like saying \"I don't care about the steps, just run the computation\". You can combine <code>retract</code> with <a href=\"https://gist.github.com/danidiaz/e9382127d1c4025b9845\" rel=\"nofollow\"><code>cutoff</code></a> if you want to limit the maximum number of iterations.</p></li>\n<li><p><code>untilJust</code>converts a value <code>m (Maybe a)</code> of the base monad into a <code>IterT m a</code> by retrying in each step until a <code>Just</code> is returned. Of course, this risks non-termination!</p></li>\n</ul>\n"}], "owner": {"reputation": 1435, "user_id": 3792504, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/e1e342dc9ed03c2039e7cde0dab4214e?s=128&d=identicon&r=PG&f=1", "display_name": "TheCriticalImperitive", "link": "https://stackoverflow.com/users/3792504/thecriticalimperitive"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 329, "favorite_count": 0, "accepted_answer_id": 27864811, "answer_count": 3, "score": 1, "last_activity_date": 1420835396, "creation_date": 1420796049, "last_edit_date": 1420805150, "question_id": 27857541, "link": "https://stackoverflow.com/questions/27857541/abstraction-for-monadic-recursion-with-unless", "title": "Abstraction for monadic recursion with &quot;unless&quot;", "body": "<p>I'm trying to work out if it's possible to write an abstraction for the following situation. Suppose I have a type <code>a</code> with function <code>a -&gt; m Bool</code> e.g. <code>MVar Bool</code> and <code>readMVar</code>. To abstract this concept out I create a newtype wrapper for the type and its function:</p>\n\n<pre><code>newtype MPredicate m a = MPredicate (a,a -&gt; m Bool)\n</code></pre>\n\n<p>I can define a fairly simple operation like so:</p>\n\n<pre><code>doUnless :: (Monad m) =&gt; Predicate m a -&gt; m () -&gt; m ()\ndoUnless (MPredicate (a,mg)) g = mg a &gt;&gt;= \\b -&gt; unless b g\n\nmain = do\n   b &lt;- newMVar False\n   let mpred = MPredicate (b,readMVar)\n   doUnless mpred (print \"foo\")\n</code></pre>\n\n<p>In this case <code>doUnless</code> would print \"foo\". <em>Aside: I'm not sure whether a type class might be more appropriate to use instead of a newtype.</em></p>\n\n<p>Now take the code below, which outputs an incrementing number then waits a second and repeats. It does this until it receives a \"turn off\" instruction via the MVar.</p>\n\n<pre><code>foobar :: MVar Bool -&gt; IO ()\nfoobar mvb = foobar' 0\n    where\n        foobar' :: Int -&gt; IO ()\n        foobar' x = readMVar mvb &gt;&gt;= \\b -&gt; unless b $ do\n            let x' = x + 1\n            print x'\n            threadDelay 1000000\n            foobar' x'\n\ngoTillEnter :: MVar Bool -&gt; IO ()\ngoTillEnter mv = do\n    _ &lt;- getLine\n    _ &lt;- takeMVar mv\n    putMVar mv True\n\nmain = do\n   mvb &lt;- newMVar False\n   forkIO $ foobar mvb\n   goTillEnter mvb\n</code></pre>\n\n<p>Is it possible to refactor <code>foobar</code> so that it uses <code>MPredicate</code> and <code>doUnless</code>?</p>\n\n<p>Ignoring the actual implementation of <code>foobar'</code> I can think of a simplistic way of doing something similar: </p>\n\n<pre><code>cycleUnless :: x -&gt; (x -&gt; x) -&gt; MPredicate m a -&gt; m ()\ncycleUnless x g mp = let g' x' = doUnless mp (g' $ g x')\n                     in  g' $ g x\n</code></pre>\n\n<p><em>Aside: I feel like <code>fix</code> could be used to make the above neater, though I still have trouble working out how to use it</em></p>\n\n<p>But <code>cycleUnless</code> won't work on <code>foobar</code> because the type of <code>foobar'</code> is actually <code>Int -&gt; IO ()</code> (from the use of <code>print x'</code>).</p>\n\n<p>I'd also like to take this abstraction further, so that it can work threading around a Monad. With stateful Monads it becomes even harder. E.g.</p>\n\n<pre><code>-- EDIT: Updated the below to show an example of how the code is used\n{- ^^ some parent function which has the MVar ^^ -}\ncycleST :: (forall s. ST s (STArray s Int Int)) -&gt; IO ()\ncycleST sta = readMVar mvb &gt;&gt;= \\b -&gt; unless b $ do\n    n &lt;- readMVar someMVar\n    i &lt;- readMVar someOtherMVar\n    let sta' = do\n            arr &lt;- sta\n            x &lt;- readArray arr n\n            writeArray arr n (x + i)\n            return arr\n        y = runSTArray sta'\n    print y\n    cycleST sta'\n</code></pre>\n\n<p>I have something similar to the above working with RankNTypes. Now there's the additional problem of trying to thread through the existential <code>s</code>, which is not likely to type check if threaded around through an abstraction the likes of <code>cycleUnless</code>. </p>\n\n<p>Additionally, this is simplified to make the question easier to answer. I also use a set of semaphores built from <code>MVar [MVar ()]</code> similar to the skip channel example in <a href=\"http://hackage.haskell.org/package/base-4.7.0.2/docs/Control-Concurrent-MVar.html\" rel=\"nofollow\">the MVar module</a>. If I can solve the above problem I plan to generalize the semaphores as well.</p>\n\n<p>Ultimately this isn't some blocking problem. I have 3 components of the application operating in a cycle off the same <code>MVar Bool</code> but doing fairly different asynchronous tasks. In each one I have written a custom function that performs the appropriate cycle.</p>\n\n<p>I'm trying to learn the \"don't write large programs\" approach. What I'd like to do is refactor chunks of code into their own mini libraries so that I'm not building a large program but assembling lots of small ones. But so far this particular abstraction is escaping me.</p>\n\n<p>Any thoughts on how I might go about this are very much appreciated!</p>\n"}, {"tags": ["haskell", "recursion", "functor", "category-theory"], "comments": [{"owner": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "edited": false, "score": 4, "creation_date": 1420798101, "post_id": 27856974, "comment_id": 44118975, "body": "This is your statutory reminder that, as &quot;ADT&quot; stands both for &quot;algebraic data type&quot; and &quot;abstract data type&quot;, and as the two notions are violently opposed, the term &quot;ADT&quot; is meaningless and better avoided."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 42094, "user_id": 828361, "user_type": "registered", "accept_rate": 44, "profile_image": "https://www.gravatar.com/avatar/6a82397672dcc1fca31c32508ef0798b?s=128&d=identicon&r=PG", "display_name": "pigworker", "link": "https://stackoverflow.com/users/828361/pigworker"}, "edited": false, "score": 1, "creation_date": 1420801009, "post_id": 27856974, "comment_id": 44120606, "body": "@pigworker: how about we call them uGADTs from now on?"}], "answers": [{"comments": [{"owner": {"reputation": 741, "user_id": 2963238, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/28ca5f7c13e9099945f7adbc1ddacea5?s=128&d=identicon&r=PG&f=1", "display_name": "gonzaw", "link": "https://stackoverflow.com/users/2963238/gonzaw"}, "edited": false, "score": 0, "creation_date": 1420826301, "post_id": 27857225, "comment_id": 44135323, "body": "Would it be possible to approach the problem in a different manner, so writing an instance of <code>Functor</code> does become possible? Using different types, maybe typeclasses, etc?"}], "tags": [], "owner": {"reputation": 19084, "user_id": 1482749, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff9982206dde8c2bbb151a7305c00f3?s=128&d=identicon&r=PG", "display_name": "kosmikus", "link": "https://stackoverflow.com/users/1482749/kosmikus"}, "is_accepted": false, "score": 6, "last_activity_date": 1420797758, "last_edit_date": 1420797758, "creation_date": 1420795105, "answer_id": 27857225, "question_id": 27856974, "link": "https://stackoverflow.com/questions/27856974/functor-instance-for-generic-polymorphic-adts-in-haskell/27857225#27857225", "title": "Functor instance for generic polymorphic ADTs in Haskell?", "body": "<p>If you're willing to accept for the moment you're dealing with bifunctors, you can say</p>\n\n<pre><code>cata :: Bifunctor f =&gt; (f a r -&gt; r) -&gt; Fix (f a) -&gt; r\ncata f = f . bimap id (cata f) . unFix\n</code></pre>\n\n<p>and then</p>\n\n<pre><code>gmap :: forall a b f. Bifunctor f =&gt; (a -&gt; b) -&gt; Fix (f a) -&gt; Fix (f b)\ngmap f = cata alg\n    where\n        alg :: f a (Fix (f b)) -&gt; Fix (f b)\n        alg = inF . bimap f id\n</code></pre>\n\n<p>(In <code>gmap</code>, I've just rearranged your class constraint to make scoped type variables work.)</p>\n\n<p>You can also work with your original version of <code>cata</code>, but then you need both the\n<code>Functor</code> and the <code>Bifunctor</code> constraint on <code>gmap</code>:</p>\n\n<pre><code>gmap :: forall a b f. (Bifunctor f, Functor (f a)) =&gt; (a -&gt; b) -&gt; Fix (f a) -&gt; Fix (f b)\ngmap f = cata alg\n    where\n        alg :: f a (Fix (f b)) -&gt; Fix (f b)\n        alg = inF . bimap f id\n</code></pre>\n\n<p>You cannot make your <code>gmap</code> an instance of the normal <code>Functor</code> class, because it would need to be something like</p>\n\n<pre><code>instance ... =&gt; Functor (\\ x -&gt; Fix (f x))\n</code></pre>\n\n<p>and we don't have type-level lambda. You <em>can</em> do this if you reverse the two arguments of <code>f</code>, but then you lose the \"other\" <code>Functor</code> instance and need to define <code>cata</code> specific for <code>Bifunctor</code> again.</p>\n\n<p>[You might also be interested to read <a href=\"http://www.andres-loeh.de/IndexedFunctors/\">http://www.andres-loeh.de/IndexedFunctors/</a> for a more general approach.]</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1562950582, "post_id": 28012235, "comment_id": 100555029, "body": "<code>bimap f id</code> should probably be written <code>Data.Bifunctor.first</code>."}], "tags": [], "owner": {"reputation": 25144, "user_id": 477476, "user_type": "registered", "accept_rate": 85, "profile_image": "https://i.stack.imgur.com/Qf4TT.png?s=128&g=1", "display_name": "Cactus", "link": "https://stackoverflow.com/users/477476/cactus"}, "is_accepted": true, "score": 5, "last_activity_date": 1421599749, "creation_date": 1421599749, "answer_id": 28012235, "question_id": 27856974, "link": "https://stackoverflow.com/questions/27856974/functor-instance-for-generic-polymorphic-adts-in-haskell/28012235#28012235", "title": "Functor instance for generic polymorphic ADTs in Haskell?", "body": "<p>TBH I'm not sure how helpful this solution is to you because it still requires an extra <code>newtype</code> wrapping for these fixed-point functors, but here we go:</p>\n\n<h1>You can keep using your generic <code>cata</code> if you do some wrapping/unwrapping</h1>\n\n<p>Given the following two helper functions:</p>\n\n<pre><code>unwrapFixBifunctor :: (Bifunctor f) =&gt; Fix (WrappedBifunctor f a) -&gt; Fix (f a)\nunwrapFixBifunctor = Fix . unwrapBifunctor . fmap unwrapFixBifunctor . unFix\n\nwrapFixBifunctor :: (Bifunctor f) =&gt; Fix (f a) -&gt; Fix (WrappedBifunctor f a)\nwrapFixBifunctor = Fix . fmap wrapFixBifunctor . WrapBifunctor . unFix\n</code></pre>\n\n<p>you can define <code>gmap</code> without any additional constraint on <code>f</code>:</p>\n\n<pre><code>gmap :: (Bifunctor f) =&gt; (a -&gt; b) -&gt; Fix (f a) -&gt; Fix (f b)\ngmap f = unwrapFixBifunctor . cata alg . wrapFixBifunctor\n  where\n    alg = inF . bimap f id\n</code></pre>\n\n<h1>You can make <code>Fix . f</code> into a <code>Functor</code> via a <code>newtype</code></h1>\n\n<p>We can implement a <code>Functor</code> instance for <code>\\a -&gt; Fix (f a)</code> by implementing this \"type-level lambda\" as a <code>newtype</code>:</p>\n\n<pre><code>newtype FixF f a = FixF{ unFixF :: Fix (f a) }\n\ninstance (Bifunctor f) =&gt; Functor (FixF f) where\n    fmap f = FixF . gmap f . unFixF\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": false, "score": 1, "last_activity_date": 1449248420, "creation_date": 1449248420, "answer_id": 34093595, "question_id": 27856974, "link": "https://stackoverflow.com/questions/27856974/functor-instance-for-generic-polymorphic-adts-in-haskell/34093595#34093595", "title": "Functor instance for generic polymorphic ADTs in Haskell?", "body": "<p>The <code>bifunctors</code> package also offers a version of <code>Fix</code> that's especially appropriate:</p>\n\n<pre><code>newtype Fix p a = In {out :: p (Fix p a) a}\n</code></pre>\n\n<p>This is made a <code>Functor</code> instance rather easily:</p>\n\n<pre><code>instance Bifunctor p =&gt; Functor (Fix p) where\n  fmap f = In . bimap (fmap f) f . out\n</code></pre>\n"}], "owner": {"reputation": 741, "user_id": 2963238, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/28ca5f7c13e9099945f7adbc1ddacea5?s=128&d=identicon&r=PG&f=1", "display_name": "gonzaw", "link": "https://stackoverflow.com/users/2963238/gonzaw"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 390, "favorite_count": 0, "accepted_answer_id": 28012235, "answer_count": 3, "score": 10, "last_activity_date": 1449248420, "creation_date": 1420794225, "last_edit_date": 1449246655, "question_id": 27856974, "link": "https://stackoverflow.com/questions/27856974/functor-instance-for-generic-polymorphic-adts-in-haskell", "title": "Functor instance for generic polymorphic ADTs in Haskell?", "body": "<p>When it comes to applying category theory for generic programming Haskell does a very good job, for instance with libraries like <code>recursion-schemes</code>. However one thing I'm not sure of is how to create a generic functor instance for polymorphic types.</p>\n\n<p>If you have a polymorphic type, like a List or a Tree, you can create a functor from (Hask \u00d7 Hask) to Hask that represents them. For example:</p>\n\n<pre><code>data ListF a b = NilF | ConsF a b  -- L(A,B) = 1+A\u00d7B\ndata TreeF a b = EmptyF | NodeF a b b -- T(A,B) = 1+A\u00d7B\u00d7B\n</code></pre>\n\n<p>These types are polymorphic on A but are fixed points regarding B, something like this:</p>\n\n<pre><code>newtype Fix f = Fix { unFix :: f (Fix f) }\ntype List a = Fix (ListF a)\ntype Tree a = Fix (TreeF a)\n</code></pre>\n\n<p>But as most know, lists and trees are also functors in the usual sense, where they represent a \"container\" of <code>a</code>'s, which you can map a function <code>f :: a -&gt; b</code> to get a container of <code>b</code>'s.</p>\n\n<p>I'm trying to figure out if there's a way to make these types (the fixed points) an instance of <code>Functor</code> in a generic way, but I'm not sure how. I've encountered the following 2 problems so far:</p>\n\n<hr>\n\n<p><strong>1)</strong> First, there has to be a way to define a generic <code>gmap</code> over any polymorphic fixed point. Knowing that types such as <code>ListF</code> and <code>TreeF</code> are Bifunctors, so far I've got this:</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables #-}\nimport Data.Bifunctor\n\nnewtype Fix f = Fix { unFix :: f (Fix f) }\n\ncata :: Functor f =&gt; (f a -&gt; a) -&gt; Fix f -&gt; a\ncata f = f . fmap (cata f) . unFix\n\n-- To explicitly use inF as the initial algebra\ninF :: f (Fix f) -&gt; Fix f\ninF = Fix\n\ngmap :: forall a b f. Bifunctor f =&gt; (a -&gt; b) -&gt; Fix (f a) -&gt; Fix (f b)\ngmap f = cata alg\n    where\n        alg :: f a (Fix (f b)) -&gt; Fix (f b)\n        alg = inF . bimap f id\n</code></pre>\n\n<p>In Haskell this gives me the following error: <code>Could not deduce (Functor (f a)) arising from a use of cata from the context (Bifunctor f)</code>. </p>\n\n<p>I'm using the <code>bifunctors</code> package, which has a <code>WrappedBifunctor</code> type that specifically defines the following instance which could solve the above problem: <code>Bifunctor p =&gt; Functor (WrappedBifunctor p a)</code>. However, I'm not sure how to \"lift\" this type inside <code>Fix</code> to be able to use it</p>\n\n<p><strong>2)</strong> Even if the generic <code>gmap</code> above can be defined, I don't know if it's possible to create a generic instance of <code>Functor</code> that has <code>fmap = gmap</code>, and can instantly work for both the <code>List</code> and <code>Tree</code> types up there (as well as any other type defined in a similar fashion). Is this possible?</p>\n\n<p>If so, would it be possible to make this compatible with <code>recursion-schemes</code> too?</p>\n"}, {"tags": ["haskell"], "answers": [{"tags": [], "owner": {"reputation": 1867, "user_id": 1993391, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/94b00ce75f65ed84787abf2fb6a98f26?s=128&d=identicon&r=PG", "display_name": "XrXr", "link": "https://stackoverflow.com/users/1993391/xrxr"}, "is_accepted": true, "score": 8, "last_activity_date": 1420777954, "creation_date": 1420777954, "answer_id": 27853866, "question_id": 27853764, "link": "https://stackoverflow.com/questions/27853764/reversing-an-order-in-haskell/27853866#27853866", "title": "Reversing an Order in Haskell", "body": "<p><code>String</code> is a type alias for <code>[Char]</code>, so you can use <code>++</code> with it </p>\n\n<pre><code>fullname :: String -&gt; String -&gt; String\nfullname first last = last ++ \", \" ++ first\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "is_accepted": false, "score": 4, "last_activity_date": 1420778123, "creation_date": 1420778123, "answer_id": 27853885, "question_id": 27853764, "link": "https://stackoverflow.com/questions/27853764/reversing-an-order-in-haskell/27853885#27853885", "title": "Reversing an Order in Haskell", "body": "<p>First, as a tip, you could write what you have more idiomatically as</p>\n\n<pre><code>initials (f:a:_) (l:b:_) = [l, b] ++ \", \" ++ [f, a]\n</code></pre>\n\n<p>But this is what is known as a partial function (not to be confused with partial function application).  Here I mean that a function can be partial or total.  If a function is total, then it is defined for all possible values of its input types.  <code>initials</code> is not defined for the input <code>initials \"\" \"\"</code>, for example, so you would get a pattern match error, indicating that it is not total.  More mathematically, it means that for <code>f :: A -&gt; B</code>, for all <code>a</code> in <code>A</code>, there is a <code>b</code> in <code>B</code> such that <code>f a = b</code>.</p>\n\n<p>There are two (common) ways to implement something like this.  You could use more pattern matching like</p>\n\n<pre><code>initials [] [] = \", \"\ninitials [a] [] = \", \" ++ [a]\ninitials [] [b] = [b] ++ \", \"\ninitials (f:a:_) (l:b:_) = [l, b] ++ \", \" ++ [f, a]\n</code></pre>\n\n<p>Or you could use the built-in function <code>take</code>:</p>\n\n<pre><code>initials firstname lastname = take 2 lastname ++ \", \" ++ take 2 firstname\n</code></pre>\n\n<p>The second is much cleaner and avoids worrying about matching every pattern, but sometimes pattern matching is definitely the way to go.</p>\n\n<p>For working with names of arbitrary length, since <code>String</code> is the same as <code>[Char]</code>, you can just use <code>++</code> like you are already with <code>++ \", \" ++</code>:</p>\n\n<pre><code>fullname firstname lastname = lastname ++ \", \" ++ firstname\n</code></pre>\n"}], "owner": {"reputation": 356, "user_id": 4392949, "user_type": "registered", "accept_rate": 42, "profile_image": "https://lh5.googleusercontent.com/-nBwze4RbYJw/AAAAAAAAAAI/AAAAAAAAAE8/acyTL4RQNEk/photo.jpg?sz=128", "display_name": "Joffrey Baratheon", "link": "https://stackoverflow.com/users/4392949/joffrey-baratheon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 0, "accepted_answer_id": 27853866, "answer_count": 2, "score": 1, "last_activity_date": 1420778123, "creation_date": 1420777209, "question_id": 27853764, "link": "https://stackoverflow.com/questions/27853764/reversing-an-order-in-haskell", "title": "Reversing an Order in Haskell", "body": "<p>I'm trying to teach myself Haskell and I am fairly new so I was wondering if someone could help me out. I'm trying to write a function that reverses the order of a name so that if I type, </p>\n\n<pre><code>ghci&gt; fullName \"harry\" \"potter\" \n</code></pre>\n\n<p>I should get,</p>\n\n<pre><code>\"potter, harry\"\n</code></pre>\n\n<p>What I've tried:</p>\n\n<p>I know that to print out the first two chars, I need to do</p>\n\n<pre><code>initials :: String -&gt; String -&gt; String\ninitials firstname lastname = [l] ++ [b] ++ \", \" ++ [f] ++ [a]\n        where (f:a:_) = firstname\n              (l:b:_) = lastname\n</code></pre>\n\n<p>and this will get:</p>\n\n<pre><code>ghci&gt; initials \"harry\" \"potter\"\n\"po, ha\"\n</code></pre>\n\n<p>It works, but the problem is that it needs to work when you don't know how many chars are in a name. I should be able to enter any random name no matter how long and it should be able to reverse the order. I feel like it's something incredibly obvious, but I am not getting it.</p>\n"}, {"tags": ["haskell", "typeclass", "gadt", "constraint-kinds"], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 1, "last_activity_date": 1420771724, "creation_date": 1420771724, "answer_id": 27853111, "question_id": 27852980, "link": "https://stackoverflow.com/questions/27852980/prove-that-a-constraint-holds-for-a-component-of-a-product-from-the-fact-it-hold/27853111#27853111", "title": "Prove that a constraint holds for a component of a product from the fact it holds for the product", "body": "<p>One way is to store all ancestor dictionaries in your <code>Dict</code> type:</p>\n\n<pre><code>data CDict a where\n    IntDict :: C Int =&gt; CDict Int\n    PairDict :: C (a, b) =&gt; CDict a -&gt; CDict b -&gt; CDict (a, b)\n\nfstCDict :: CDict (a, b) -&gt; CDict a\nfstCDict (PairDict fst snd) = fst\n</code></pre>\n\n<p>This has the downside that you must make the <code>CDict</code> type reflect the structure of your instances.</p>\n"}, {"tags": [], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "is_accepted": true, "score": 1, "last_activity_date": 1420784794, "last_edit_date": 1495542491, "creation_date": 1420784794, "answer_id": 27854989, "question_id": 27852980, "link": "https://stackoverflow.com/questions/27852980/prove-that-a-constraint-holds-for-a-component-of-a-product-from-the-fact-it-hold/27854989#27854989", "title": "Prove that a constraint holds for a component of a product from the fact it holds for the product", "body": "<p>An open variant of <a href=\"https://stackoverflow.com/a/27853111/414413\">Daniel Wagner's answer</a> would use a <code>TypeFamily</code> to let each type that implements the class specify a context that it needs.</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\n{-# LANGUAGE ConstraintKinds #-}\n{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n\nimport GHC.Exts (Constraint)\nimport Data.Proxy\n\ndata Dict c where\n    Dict :: c =&gt; Dict c\n</code></pre>\n\n<p>The class lets each type specify an additional constraint <code>Ctx a</code> that the type needs. The <code>cdict</code> function forces the context to follow from <code>C</code> and provides a way to get at underlying  <code>Ctx</code>s without including them in the <code>Ctx</code> for e.g. products.</p>\n\n<pre><code>class C a where\n    type Ctx a :: Constraint\n    cdict :: Proxy a -&gt; CDict a\n</code></pre>\n\n<p>A <code>CDict</code> is then a <code>Dict</code> that holds both the constraint <code>C a</code> and also whatever additional context <code>Ctx a</code> the type <code>a</code> needs</p>\n\n<pre><code>type CDict a = Dict (C a, Ctx a)\n</code></pre>\n\n<p>The <code>Int</code> instance doesn't need any extra context</p>\n\n<pre><code>instance C Int where\n    type Ctx Int = ()\n    cdict _ = Dict\n</code></pre>\n\n<p>The tuple instance needs both <code>C a</code> and <code>C b</code>    </p>\n\n<pre><code>instance (C a, C b) =&gt; C (a, b) where\n    type Ctx (a, b) = (C a, C b)\n    cdict _ = Dict\n</code></pre>\n\n<p>We can write <code>fstCDict</code> for tuples.</p>\n\n<pre><code>fstCDict :: forall a b. CDict (a, b) -&gt; CDict a\nfstCDict Dict = case cdict (Proxy :: Proxy a) of Dict -&gt; Dict\n</code></pre>\n\n<h3>Incorrect instance</h3>\n\n<p>If we try to write an incorrect instance of <code>C</code> that magically summons <code>Show</code> instances</p>\n\n<pre><code>instance (C a) =&gt; C (Maybe a) where\n    type Ctx (Maybe a) = (C a, Show a)\n    cdict _ = Dict\n</code></pre>\n\n<p>It results in a compiler error</p>\n\n<pre><code>    Could not deduce (Show a) arising from a use of `Dict'\n    from the context (C a)\n      bound by the instance declaration ...\n    Possible fix:\n      add (Show a) to the context of the instance declaration\n    In the expression: Dict\n    In an equation for `cdict': cdict _ = Dict\n    In the instance declaration for `C (Maybe a)'\n</code></pre>\n"}], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 109, "favorite_count": 0, "accepted_answer_id": 27854989, "answer_count": 2, "score": 4, "last_activity_date": 1420784794, "creation_date": 1420770836, "last_edit_date": 1495540244, "question_id": 27852980, "link": "https://stackoverflow.com/questions/27852980/prove-that-a-constraint-holds-for-a-component-of-a-product-from-the-fact-it-hold", "title": "Prove that a constraint holds for a component of a product from the fact it holds for the product", "body": "<p>I have a class <code>C</code> with instances for one type and for tuples.</p>\n\n<pre><code>class C a\n\ninstance C Int\n\ninstance (C a, C b) =&gt; C (a, b)\n</code></pre>\n\n<p>Using the normal <code>Dict</code> GADT for capturing constraints</p>\n\n<pre><code>{-# LANGUAGE GADTs #-}\n{-# LANGUAGE ConstraintKinds #-}\n\ndata Dict c where\n    Dict :: c =&gt; Dict c\n</code></pre>\n\n<p>is it possible to prove <code>C a</code> from <code>C (a, b)</code>?</p>\n\n<pre><code>fstDict :: Dict (C (a, b)) -&gt; Dict (C a)\nfstDict Dict = ???\n</code></pre>\n\n<p>I suspect the immediate answer is \"no\" since <code>fstDict Dict = Dict</code> isn't sufficient, and there are few other possibilities. Is there any way to change <code>C</code> so that constraints for components of products can be recovered from the constraint on the product?</p>\n\n<p>I am, perhaps incorrectly, trying to accomplish the same thing as <a href=\"https://stackoverflow.com/questions/15717462/transform-a-gadt-without-constraints-to-another-gadt-with-constraints-when-such\">the most closely related question</a>, however I have the luxury to demand a <code>Dict</code> from one or both ends of the category.</p>\n\n<pre><code>data DSL a b where\n    DSL :: (Dict C a -&gt; DSL' a b) -&gt; DSL a b\n\ndata DSL' a b where\n    DSL' :: (C a, C b) =&gt; ... -&gt; DSL' a b\n</code></pre>\n"}, {"tags": ["haskell", "recursion", "lazy-evaluation"], "comments": [{"owner": {"reputation": 2567, "user_id": 994206, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/699bacad8f85a069dda312cc29e03baa?s=128&d=identicon&r=PG", "display_name": "Mokosha", "link": "https://stackoverflow.com/users/994206/mokosha"}, "edited": false, "score": 3, "creation_date": 1420770659, "post_id": 27852813, "comment_id": 44109896, "body": "It seems like you keep adding to the head of the list in <code>buildFibs</code>. Your list is infinite, but in the wrong direction =P"}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 7, "last_activity_date": 1420770680, "creation_date": 1420770680, "answer_id": 27852963, "question_id": 27852813, "link": "https://stackoverflow.com/questions/27852813/foldr-not-returning-with-an-infinite-list/27852963#27852963", "title": "foldr not returning with an infinite list", "body": "<p>Ask yourself: which fibonacci number will be the first one in the list? My reading of your code is that the answer to this question is, \"the biggest one\" (notionally, each iteration of <code>buildFibs</code> adds a slightly larger number to the head of the resulting list). Since there are infinitely many fibonacci numbers, this takes a while to compute!</p>\n"}, {"tags": [], "owner": {"reputation": 51584, "user_id": 839246, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/9b0573c2b936b12828dd1e4cc04206dc?s=128&d=identicon&r=PG&f=1", "display_name": "bheklilr", "link": "https://stackoverflow.com/users/839246/bheklilr"}, "is_accepted": false, "score": 4, "last_activity_date": 1420770756, "creation_date": 1420770756, "answer_id": 27852971, "question_id": 27852813, "link": "https://stackoverflow.com/questions/27852813/foldr-not-returning-with-an-infinite-list/27852971#27852971", "title": "foldr not returning with an infinite list", "body": "<p>This is a great exercise for equational reasoning:</p>\n\n<pre><code>fibs2 = foldr buildFibs [] [1..]\n\nfoldr f z [] = z\nfoldr f z (x:xs) = f x (foldr f z xs)\n\nfoldr buildFibs [] [1..] =\n    buildFibs 1 (foldr buildFibs [] [2..]) =\n    buildFibs 1 (buildFibs 2 (foldr buildFibs [] [3..])) =\n    buildFibs 1 (buildFibs 2 (buildFibs 3 (foldr buildFibs [] [4..]))) =\n    ...\n</code></pre>\n\n<p>I hope by now you can see the problem: <code>foldr</code> is trying to traverse the entire list before returning.  What happens if we were to use <code>foldl</code> instead?</p>\n\n<pre><code>foldl f z [] = z\nfoldl f z (x:xs) = foldl f (f z x) xs\n\nbuildFibs' = flip buildFibs\n\nfoldl buildFibs' [] [1..] =\n    foldl buildFibs' (buildFibs 1 []) [2..] = \n    foldl buildFibs' [0] [2..] =\n    foldl buildFibs' (buildFibs 2 [0]) [3..] =\n    foldl buildFibs' [0,1] [3..] =\n    foldl buildFibs' (buildFibs 3 [0,1]) [4..] =\n    foldl buildFibs' (0+1 : [0,1]) [4..] =\n    foldl buildFibs' [1,0,1] [4..] =\n    foldl buildFibs' (buildFibs 4 [1,0,1]) [5..] =\n    foldl buildFibs' (1+0 : [1,0,1]) [5..] =\n    foldl buildFibs' [1,1,0,1] [5..] =\n    foldl buildFibs' (buildFibs 5 [1,1,0,1]) [6..] =\n    foldl buildFibs' [2,1,1,0,1] [6..] =\n    -- For brevity I'll speed up the substitution\n    foldl buildFibs' [3,2,1,1,0,1] [7..] =\n    foldl buildFibs' [5,3,2,1,1,0,1] [8..] =\n    foldl buildFibs' [8,5,3,2,1,1,0,1] [9..] =\n    ...\n</code></pre>\n\n<p>So as you can see you can actually calculate the Fibonacci numbers using <code>buildFibs</code> and <code>foldl</code>, but unfortunately you're building an infinite list of them backwards, you'll never be able to calculate a specific element in the list because <code>foldl</code> will never terminate.  You can calculate a finite number of them though:</p>\n\n<pre><code>&gt; take 10 $ foldl buildFibs' [] [1..10]\n[34,21,13,8,5,3,2,1,1,0]\n</code></pre>\n"}], "owner": {"reputation": 2097, "user_id": 1646823, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/8471ef6adbd84694d3c37e445768a75f?s=128&d=identicon&r=PG", "display_name": "jvans", "link": "https://stackoverflow.com/users/1646823/jvans"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 109, "favorite_count": 0, "accepted_answer_id": 27852963, "answer_count": 2, "score": 1, "last_activity_date": 1420770756, "creation_date": 1420769560, "question_id": 27852813, "link": "https://stackoverflow.com/questions/27852813/foldr-not-returning-with-an-infinite-list", "title": "foldr not returning with an infinite list", "body": "<p>I've read <a href=\"https://www.haskell.org/haskellwiki/Foldl_as_foldr\" rel=\"nofollow\">https://www.haskell.org/haskellwiki/Foldl_as_foldr</a> and a few other blog posts about the difference between foldl and foldr. Now I'm trying to write the fibonacci sequence as an infinite list with a foldr and I've come up with the following solution:</p>\n\n<pre><code>fibs2 :: [Integer]\nfibs2 = foldr buildFibs [] [1..]\n  where\n    buildFibs :: Integer -&gt; [Integer] -&gt; [Integer]\n    buildFibs _ [] = [0]\n    buildFibs _ [0] = [1,0]\n    buildFibs _ l@(x:s:z) = (x + s):l\n</code></pre>\n\n<p>But when I do <code>take 3 fibs2</code>, the function doesn't return. I thought foldr being body recursive allows for you to use it with infinite lists in these types of situation. Why won't this work with my solution?</p>\n"}, {"tags": ["haskell", "isabelle", "dependent-type"], "comments": [{"owner": {"reputation": 3902, "user_id": 391399, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/61f56a38bf46f807b5ef431c46813c99?s=128&d=identicon&r=PG", "display_name": "mrsteve", "link": "https://stackoverflow.com/users/391399/mrsteve"}, "edited": false, "score": 3, "creation_date": 1420773436, "post_id": 27852658, "comment_id": 44110592, "body": "&quot;...arrogance in computer science is measured in nano-Dijkstras&quot; -- Alan Kay"}, {"owner": {"reputation": 3902, "user_id": 391399, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/61f56a38bf46f807b5ef431c46813c99?s=128&d=identicon&r=PG", "display_name": "mrsteve", "link": "https://stackoverflow.com/users/391399/mrsteve"}, "edited": false, "score": 0, "creation_date": 1420774716, "post_id": 27852658, "comment_id": 44110862, "body": "As a side not, the master thesis project implementing Caledon was supervised by Frank Pfenning (<a href=\"http://en.wikipedia.org/wiki/Frank_Pfenning\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/Frank_Pfenning</a>) who was a student of Peter Andrews."}, {"owner": {"reputation": 3902, "user_id": 391399, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/61f56a38bf46f807b5ef431c46813c99?s=128&d=identicon&r=PG", "display_name": "mrsteve", "link": "https://stackoverflow.com/users/391399/mrsteve"}, "edited": false, "score": 3, "creation_date": 1420778588, "post_id": 27852658, "comment_id": 44111707, "body": "This is about programming languages. This question is not about software library, tool or book. Not every qustion can be about some trival Javascript problem. Knowledge and questions about programming languages are extremly important, as many concepts like functional programming are introduced as people try out new languages. This question is clearly also not about opinions. So I either vote to reopen this, close it for a different reason or to give suggenstion on improving this question."}, {"owner": {"reputation": 4820, "user_id": 476803, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/a0957a413376168de79465b341c768d5?s=128&d=identicon&r=PG", "display_name": "chris", "link": "https://stackoverflow.com/users/476803/chris"}, "edited": false, "score": 1, "creation_date": 1420793130, "post_id": 27852658, "comment_id": 44116559, "body": "I guess <a href=\"https://hackage.haskell.org/package/Agda\" rel=\"nofollow noreferrer\">Agda</a> and <a href=\"http://www.idris-lang.org/\" rel=\"nofollow noreferrer\">Idris</a> do not really fit your criteria &quot;based on higher-order logic&quot; <i>and</i> &quot;implemented in Haskell&quot;. But it might be worth to at least know about them."}], "answers": [{"tags": [], "owner": {"reputation": 11971, "user_id": 1100135, "user_type": "registered", "accept_rate": 53, "profile_image": "https://www.gravatar.com/avatar/e7b273722f4261cd61c3256374da73cc?s=128&d=identicon&r=PG", "display_name": "piotrek", "link": "https://stackoverflow.com/users/1100135/piotrek"}, "is_accepted": false, "score": 1, "last_activity_date": 1420819251, "creation_date": 1420819251, "answer_id": 27864479, "question_id": 27852658, "link": "https://stackoverflow.com/questions/27852658/are-there-other-hol-programming-languages-besides-caledon-that-are-based-on-hask/27864479#27864479", "title": "Are there other HOL programming languages besides Caledon that are based on haskell?", "body": "<p>short answer: i don't know. long answer: you have small chances you will find purely academic language with thousands of libraries and tools for it. if you for some reason need that specific language for some specific problem then use it ONLY for that problem. not for parsing files, calculating taxes or launching rockets. create library and link it with other programs. or even better: create a microservice or connect the programs in other way (e.g. standard input/output) that doesn't require much effort. always use best tool for the job</p>\n"}, {"comments": [{"owner": {"reputation": 25686, "user_id": 975097, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/dbbc1b2bc18739858cfa3b7ddcba7362?s=128&d=identicon&r=PG", "display_name": "Anderson Green", "link": "https://stackoverflow.com/users/975097/anderson-green"}, "edited": false, "score": 0, "creation_date": 1555439714, "post_id": 27874830, "comment_id": 98109741, "body": "<a href=\"http://isabelle.in.tum.de/haskabelle.html\" rel=\"nofollow noreferrer\">This link</a> seems to be broken now. The project has moved <a href=\"http://isabelle.in.tum.de/website-Isabelle2009/haskabelle.html\" rel=\"nofollow noreferrer\">here</a>."}], "tags": [], "owner": {"reputation": 4743, "user_id": 1697709, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ce4707be88278549d13843ce0d95fdd9?s=128&d=identicon&r=PG", "display_name": "Gergely", "link": "https://stackoverflow.com/users/1697709/gergely"}, "is_accepted": true, "score": 3, "last_activity_date": 1420883091, "creation_date": 1420883091, "answer_id": 27874830, "question_id": 27852658, "link": "https://stackoverflow.com/questions/27852658/are-there-other-hol-programming-languages-besides-caledon-that-are-based-on-hask/27874830#27874830", "title": "Are there other HOL programming languages besides Caledon that are based on haskell?", "body": "<p>\"Haskabelle is a converter from Haskell source files to Isabelle/HOL theories implemented in Haskell itself.\"</p>\n\n<p><a href=\"http://isabelle.in.tum.de/haskabelle.html\" rel=\"nofollow\">Haskabelle</a></p>\n"}, {"tags": [], "owner": {"reputation": 21, "user_id": 2324563, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e093486bb46aabe1f44c20fc08414cc7?s=128&d=identicon&r=PG", "display_name": "Matthew Mirman", "link": "https://stackoverflow.com/users/2324563/matthew-mirman"}, "is_accepted": false, "score": 2, "last_activity_date": 1502225287, "last_edit_date": 1502225287, "creation_date": 1502202094, "answer_id": 45570922, "question_id": 27852658, "link": "https://stackoverflow.com/questions/27852658/are-there-other-hol-programming-languages-besides-caledon-that-are-based-on-hask/45570922#45570922", "title": "Are there other HOL programming languages besides Caledon that are based on haskell?", "body": "<p><strong>Strange Statement:</strong> Haskell' is a higher order logic programming language based on Haskell.  Type inference in Haskell with multiparameter type classes, type families, undecidable inference and whatnot actually forms a higher order logic programming language.   This probably doesn't help you very much because:</p>\n\n<ol>\n<li>The spec is literally constantly changing (I've had a few packages loose compatibility as they were based on hacks that got \"fixed\")</li>\n<li>The type system itself doesn't have IO (yet?)</li>\n<li>It  can't really call other Haskell libraries from type inference</li>\n<li>Its not very fast.</li>\n<li>The logic programming semantics aren't exactly clear or stable.</li>\n<li>It doesn't permit you to unify with lambdas or other type classes, although it does permit unification with functions.</li>\n</ol>\n\n<p>Sadly, I know of extraordinarily few full HOL languages let alone ones implemented in Haskell - it turns out higher order unification is a huge pain to implement.</p>\n"}], "owner": {"reputation": 3902, "user_id": 391399, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/61f56a38bf46f807b5ef431c46813c99?s=128&d=identicon&r=PG", "display_name": "mrsteve", "link": "https://stackoverflow.com/users/391399/mrsteve"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 867, "favorite_count": 4, "accepted_answer_id": 27874830, "answer_count": 3, "score": 7, "last_activity_date": 1502225287, "creation_date": 1420768155, "last_edit_date": 1420775254, "question_id": 27852658, "link": "https://stackoverflow.com/questions/27852658/are-there-other-hol-programming-languages-besides-caledon-that-are-based-on-hask", "title": "Are there other HOL programming languages besides Caledon that are based on haskell?", "body": "<p>There are programming languages and theorem prover based on higher order logic (HOL). Examples include <a href=\"http://en.wikipedia.org/wiki/Twelf\" rel=\"noreferrer\">Twelf</a>, <a href=\"http://www.lix.polytechnique.fr/~dale/lProlog/\" rel=\"noreferrer\">lambda prolog</a>, <a href=\"http://isabelle.in.tum.de/\" rel=\"noreferrer\">Isabelle</a>. For example Twelf is is both a programming language and a theorem prover, while Isabelle is mainly a theorem prover, but for Isabelle code extraction is available.</p>\n\n<p>I am looking for a HOL programming language based on haskell. The reason is that I like, for instance, lambda prolog very much, but it is not meant as a practical programming language. Lambda prolog lacks a standard library and interfacing with external libraries doesn't seem trivial. The problem is if you need some functionality, like writing a parser for a text file, you can't interface, say, with the many available existing libraries for haskell, and further, there is no standard library so you start from scratch. </p>\n\n<p>Today I came across the <a href=\"https://github.com/mmirman/caledon\" rel=\"noreferrer\">Caledon</a> programming language that was implemented as a master thesis, it seems. From the github page: </p>\n\n<blockquote>\n  <p>Caledon is a dependently typed, polymorphic, higher order logic\n  programming language.</p>\n</blockquote>\n\n<p>This is interesting, since it is written in haskell so it should be easy to extend and interface with existing haskell libraries. But it seems that the project is in a bit early stage, I am not sure if input-output (IO) is implemented. Since I learned only today about Caledon, I think I might have missed some further projects. (BTW, I am not interested in standard logic programming languages like prolog).</p>\n\n<p><em>Are there programming languages based on higher order logic besides Caledon that are implemented in haskell?</em> </p>\n\n<p>(I am asking for \"implemented in haskell\", as it is rather easy to connect programming languages that can be extracted to or are implemented in haskell. For example the Agda programming language can compile to haskell code and haskell libraries can be used conveniently and is extremly easy to use haskell libraries if you know how. Many other programming languages (e.g., ATS) I belive only provide the smallest common denominator which is a C based foreign function interface (FFI). In my eyes it is quite cumbersome to connect two higher programming languages via their respective C-based FFI interface. Thus the seemly abitrary part that \"it should be implemented in haskell\". Further, as a side note some users have downvoted in the past for my description of Agda as a programming language, but of course this is not true, i.e., consider <a href=\"http://en.wikipedia.org/wiki/Curry%E2%80%93Howard_correspondence\" rel=\"noreferrer\">Curry-Howard</a> )</p>\n"}, {"tags": ["sockets", "haskell", "ssl", "encryption", "tcp"], "comments": [{"owner": {"reputation": 1843, "user_id": 1395166, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/57a0053b0e0fac9a23e15b8adb501ab9?s=128&d=identicon&r=PG", "display_name": "Chris Hanson", "link": "https://stackoverflow.com/users/1395166/chris-hanson"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1420765811, "post_id": 27852053, "comment_id": 44108664, "body": "@ThomasM.DuBuisson Thanks, but the link is giving me a 404. Is the repo private or moved?"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1420765947, "post_id": 27852053, "comment_id": 44108701, "body": "Oh, heh. I guess he hasn&#39;t released it yet.  Nevermind!"}], "answers": [{"comments": [{"owner": {"reputation": 1843, "user_id": 1395166, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/57a0053b0e0fac9a23e15b8adb501ab9?s=128&d=identicon&r=PG", "display_name": "Chris Hanson", "link": "https://stackoverflow.com/users/1395166/chris-hanson"}, "edited": false, "score": 0, "creation_date": 1421355496, "post_id": 27870259, "comment_id": 44338377, "body": "Note: The server cuts off at 16k."}, {"owner": {"reputation": 1843, "user_id": 1395166, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/57a0053b0e0fac9a23e15b8adb501ab9?s=128&d=identicon&r=PG", "display_name": "Chris Hanson", "link": "https://stackoverflow.com/users/1395166/chris-hanson"}, "edited": false, "score": 0, "creation_date": 1421358524, "post_id": 27870259, "comment_id": 44339895, "body": "The recvData function in Network.TLS receives 16k at a time. See the edit above for a function that accumulates the entire method. I&#39;ll try to update with a better method soon as this one has real problems..."}], "tags": [], "owner": {"reputation": 1843, "user_id": 1395166, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/57a0053b0e0fac9a23e15b8adb501ab9?s=128&d=identicon&r=PG", "display_name": "Chris Hanson", "link": "https://stackoverflow.com/users/1395166/chris-hanson"}, "is_accepted": false, "score": 2, "last_activity_date": 1421358647, "last_edit_date": 1421358647, "creation_date": 1420842364, "answer_id": 27870259, "question_id": 27852053, "link": "https://stackoverflow.com/questions/27852053/how-do-i-add-tls-encryption-to-this-tcp-server/27870259#27870259", "title": "How do I add TLS encryption to this TCP server?", "body": "<p>As I mentioned in the first edit to my question, I was originally missing the <code>handshake</code> call. That wasn't enough to fix this. Ultimately, I found that I could just pass the <code>sock</code> as the <code>backend</code> without mucking around creating an instance of <code>Backend</code> by hand. When I switched to that method, this started working with the Python client included below.</p>\n\n<p>Haskell Server:</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\n\nimport Control.Applicative\nimport Control.Concurrent\nimport Control.Monad (void)\nimport qualified Crypto.Random.AESCtr       as AESCtr\nimport qualified Data.ByteString.Char8      as BSC \nimport qualified Data.ByteString.Lazy.Char8 as LBS \nimport Data.Default.Class (def)\nimport Network.Socket\nimport qualified Network.TLS                as T\nimport qualified Network.TLS.Extra          as TE\n\nmain :: IO ()\nmain = do\n  let port = 4653\n\n  cred &lt;- credentials\n  let creds = case cred of\n                Right c -&gt; T.Credentials [c] \n                Left e -&gt; error e\n\n  sock &lt;- socket AF_INET Stream 0\n  setSocketOption sock ReuseAddr 1\n  bindSocket sock (SockAddrInet (fromInteger port) iNADDR_ANY)\n  putStrLn $ \"Listening on port \" ++ show port\n  listen sock 2\n  mainLoop sock creds\n\n\nmainLoop :: Socket -&gt; T.Credentials -&gt; IO ()\nmainLoop sock creds = do\n  conn &lt;- accept sock\n  _ &lt;- forkIO $ runConn creds conn\n  mainLoop sock creds\n\n\nrunConn :: T.Credentials -&gt; (Socket, SockAddr) -&gt; IO ()\nrunConn creds (sock, _) = do\n\n  ctx &lt;- T.contextNew sock (sockParams creds) =&lt;&lt; AESCtr.makeSystem\n  T.handshake ctx \n\n  request &lt;- T.recvData ctx\n  print request\n  T.sendData ctx (LBS.fromChunks [request])\n\n  T.contextClose ctx\n\n\ncredentials :: IO (Either String T.Credential)\ncredentials = T.credentialLoadX509 \"cert/server.crt\" \"cert/server.key\"\n\nsockParams :: T.Credentials -&gt; T.ServerParams\nsockParams creds = def { T.serverWantClientCert = False\n                       , T.serverShared         = shared creds\n                       , T.serverSupported      = supported\n                       }\n\nshared :: T.Credentials -&gt; T.Shared\nshared creds = def { T.sharedCredentials    = creds\n                   }\n\n\nsupported :: T.Supported\nsupported = def { T.supportedVersions = [T.TLS10]\n                , T.supportedCiphers = ciphers\n                }\n\n\nciphers :: [T.Cipher]\nciphers =\n    [ TE.cipher_AES128_SHA1\n    , TE.cipher_AES256_SHA1\n    , TE.cipher_RC4_128_MD5\n    , TE.cipher_RC4_128_SHA1\n    ]\n</code></pre>\n\n<p>Python Client:</p>\n\n<pre><code># Echo client program\nimport socket\nimport json\nimport ssl \n\ndef recv_all(s):\n    buf = 4096\n    data = ''\n    chunk = s.recv(buf)\n    while len(chunk) &gt; 0:\n        data = data + chunk\n        chunk = s.recv(buf)\n    return data\n\ndef main():\n    HOST = '127.0.0.1'    # The remote host\n    PORT = 4653              # The same port as used by the server\n    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    ss = ssl.wrap_socket(s, ssl_version=ssl.PROTOCOL_TLSv1, do_handshake_on_connect=False)\n    ss.connect((HOST, PORT))\n    ss.do_handshake()\n    ss.sendall('Hello, world\\r\\n')\n\n    data = recv_all(ss)\n\n    s.close()\n    print(\"Received %s\" % data)\n\n\nif __name__ == \"__main__\":\n    main()\n</code></pre>\n\n<p>EDIT: Per my comments below, the server above cuts off inputs greater than 16k. My current solution is to sub out <code>T.recvData</code> above with the <code>recvAll</code> method below:</p>\n\n<pre><code>recvAll :: T.Context -&gt; IO BSC.ByteString \nrecvAll ctx = go BSC.empty\n  where go acc = do\n          pkt &lt;- T.recvData ctx \n          print $ BSC.length pkt \n          if BSC.length pkt == 16384\n            then go $ acc &lt;&gt; pkt \n              else return $ acc &lt;&gt; pkt\n</code></pre>\n\n<p>This function has some real shortcomings! Most notably, if you actually have a packet that is exactly 16k (or any multiple thereof) this will spin forever!</p>\n"}], "owner": {"reputation": 1843, "user_id": 1395166, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/57a0053b0e0fac9a23e15b8adb501ab9?s=128&d=identicon&r=PG", "display_name": "Chris Hanson", "link": "https://stackoverflow.com/users/1395166/chris-hanson"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 616, "favorite_count": 1, "answer_count": 1, "score": 1, "last_activity_date": 1421358647, "creation_date": 1420763555, "last_edit_date": 1420838530, "question_id": 27852053, "link": "https://stackoverflow.com/questions/27852053/how-do-i-add-tls-encryption-to-this-tcp-server", "title": "How do I add TLS encryption to this TCP server?", "body": "<p>I've built a TCP server for a project and it's working fine, but it's time to add TLS. I tried <a href=\"https://hackage.haskell.org/package/network-simple-tls-0.2.1/docs/Network-Simple-TCP-TLS.html\" rel=\"nofollow\">Network.Simple.TCP.TLS</a>, but when I went to integrate it into my larger project, I got some dependency conflicts that I couldn't resolve.</p>\n\n<p>The code here is the simplified test server that I'll later integrate into the larger project. I hope this doesn't hide any important details.</p>\n\n<p>Here's a working echo server without TLS:</p>\n\n<pre><code>import Control.Concurrent\nimport Network.Socket\nimport System.IO\n\nmain :: IO ()\nmain = do\n  let port = 4653\n  sock &lt;- socket AF_INET Stream 0\n  setSocketOption sock ReuseAddr 1\n  bindSocket sock (SockAddrInet (fromInteger port) iNADDR_ANY)\n  putStrLn $ \"Listening on port \" ++ show port\n  listen sock 2\n  mainLoop sock\n\n\nmainLoop :: Socket -&gt; IO ()\nmainLoop sock = do\n  conn &lt;- accept sock\n  _ &lt;- forkIO $ runConn conn\n  mainLoop sock\n\n\nrunConn :: (Socket, SockAddr) -&gt; IO ()\nrunConn (sock, _) = do\n  hdl &lt;- socketToHandle sock ReadWriteMode\n  hSetBuffering hdl NoBuffering\n\n  request &lt;- hGetLine hdl \n  hPrint hdl request\n\n  hClose hdl\n</code></pre>\n\n<p>This is my attempt at TLS integration:</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\n\nimport Control.Concurrent\nimport qualified Crypto.Random.AESCtr       as AESCtr\nimport qualified Data.ByteString.Char8      as BSC\nimport qualified Data.ByteString.Lazy.Char8 as LBS\nimport Data.Default.Class (def)\nimport Network.Socket\nimport qualified Network.TLS                as T\nimport qualified Network.TLS.Extra          as TE\nimport System.IO\n\nmain :: IO ()\nmain = do\n  let port = 4653\n\n  cred &lt;- credentials\n  let creds = case cred of\n                Right c -&gt; T.Credentials [c]\n                Left e -&gt; error e\n\n  sock &lt;- socket AF_INET Stream 0\n  setSocketOption sock ReuseAddr 1\n  bindSocket sock (SockAddrInet (fromInteger port) iNADDR_ANY)\n  putStrLn $ \"Listening on port \" ++ show port\n  listen sock 2\n  mainLoop sock creds\n\n\nmainLoop :: Socket -&gt; T.Credentials -&gt; IO ()\nmainLoop sock creds = do\n  conn &lt;- accept sock\n  _ &lt;- forkIO $ runConn creds conn\n  mainLoop sock creds\n\n\nrunConn :: T.Credentials -&gt; (Socket, SockAddr) -&gt; IO ()\nrunConn creds (sock, _) = do\n  hdl &lt;- socketToHandle sock ReadWriteMode\n  hSetBuffering hdl NoBuffering\n\n  ctx &lt;- context creds hdl\n  T.handshake ctx\n\n  request &lt;- T.recvData ctx\n  T.sendData ctx (LBS.fromChunks [request])\n\n  hClose hdl\n\n\ncontext :: T.Credentials -&gt; Handle -&gt; IO T.Context\ncontext creds hdl = T.contextNew (sockBackend hdl) (sockParams creds) =&lt;&lt; AESCtr.makeSystem\n\n\ncredentials :: IO (Either String T.Credential)\ncredentials = T.credentialLoadX509 \"cert/server.crt\" \"cert/server.key\"\n\nsockBackend :: Handle -&gt; T.Backend\nsockBackend hdl = T.Backend { T.backendFlush = hFlush hdl\n                            , T.backendClose = hClose hdl\n                            , T.backendSend  = hPrint hdl\n                            , T.backendRecv  = hRecv hdl BSC.empty\n                            }\n\n\nhRecv :: Handle -&gt; BSC.ByteString -&gt; Int -&gt; IO BSC.ByteString\nhRecv _ ack 0 = return ack\nhRecv hdl ack n = do\n  c &lt;- hGetChar hdl\n  hRecv hdl (ack `BSC.append` BSC.pack [c]) (n - 1)\n\n\nsockParams :: T.Credentials -&gt; T.ServerParams\nsockParams creds = def { T.serverWantClientCert = False\n                       , T.serverShared         = shared creds\n                       , T.serverSupported      = supported\n                       }\n\nshared :: T.Credentials -&gt; T.Shared\nshared creds = def { T.sharedCredentials    = creds\n                   }\n\n\nsupported :: T.Supported\nsupported = def { T.supportedVersions = [T.TLS10, T.TLS11, T.TLS12]\n                , T.supportedCiphers  = ciphers\n                }\n\nciphers :: [T.Cipher]\nciphers =\n    [ TE.cipher_AES128_SHA1\n    , TE.cipher_AES256_SHA1\n    , TE.cipher_RC4_128_MD5\n    , TE.cipher_RC4_128_SHA1\n    ]\n</code></pre>\n\n<p>It compiles and runs, but whenever I try to hit it, it prints this error:</p>\n\n<pre><code>Main.hs: ConnectionNotEstablished\n</code></pre>\n\n<p>I'm feeling rather out of my depth here. Can anyone point me at the problem or a better way to add TLS encryption to this server?</p>\n\n<p>EDIT: I found part of my problem. I was missing the <code>T.handshake</code> call. Now I'm having trouble connecting from the client. I'll update again if I get this running cleanly.</p>\n\n<p>EDIT2: The new error, by the way, is:</p>\n\n<pre><code>HandshakeFailed (Error_Packet_Parsing \"Failed reading: invalid header type: 34\\nFrom:\\theader\\n\\n\")\n</code></pre>\n\n<p>I've found this error in a few places on the web, but I've yet to see an answer attached to it.</p>\n"}]