[{"tags": ["haskell", "terminology"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1549497683, "post_id": 54564408, "comment_id": 95927662, "body": "I personally would use the term &quot;converts&quot; for things like <code>fromIntegral</code> which you seem to be talking about in the last paragraph. I wouldn&#39;t naturally think of <code>fromMaybe</code> that way - but I don&#39;t think it&#39;s an unreasonable viewpoint either. Ultimately I think it&#39;s a matter of opinion."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 3, "creation_date": 1549498402, "post_id": 54564408, "comment_id": 95927835, "body": "Convert implies some sort of light casting to me - your ints to floats is one example where I might say &quot;convert&quot;.  However, <code>fromMaybe</code> is vastly different just like looking up the value in a map and returning it or a default if nothing was found.  In this case I&#39;d say you are computing a result or simply &quot;computes on values of type <code>Maybe a</code>, returning values of type <code>a</code>&quot;.  Notice the term &quot;values&quot; instead of &quot;objects&quot;."}, {"owner": {"reputation": 2141, "user_id": 1664572, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c2bee27fdb72050b60a3c6aae64b474f?s=128&d=identicon&r=PG", "display_name": "wizzup", "link": "https://stackoverflow.com/users/1664572/wizzup"}, "edited": false, "score": 0, "creation_date": 1549524244, "post_id": 54564408, "comment_id": 95934419, "body": "I think the term <code>convert</code> is fine but personally I would prefer term <a href=\"https://en.wikipedia.org/wiki/Map_(mathematics)\" rel=\"nofollow noreferrer\">map</a> which unfortunately might cause confusion with the higher order function <a href=\"https://hackage.haskell.org/package/base/docs/Prelude.html#v:map\" rel=\"nofollow noreferrer\">one</a>."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1549530967, "post_id": 54564408, "comment_id": 95937597, "body": "also &quot;transform&quot;."}], "owner": {"reputation": 98, "user_id": 8500398, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-T9G0iG8Gi7I/AAAAAAAAAAI/AAAAAAAAABI/x7OuQN8te5E/photo.jpg?sz=128", "display_name": "Dreuhn", "link": "https://stackoverflow.com/users/8500398/dreuhn"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 78, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1549530123, "creation_date": 1549497517, "last_edit_date": 1549530123, "question_id": 54564408, "link": "https://stackoverflow.com/questions/54564408/is-convert-an-apt-term-to-use-when-returning-a-modified-value-in-haskell", "title": "Is convert an apt term to use when returning a modified value in Haskell?", "body": "<p>This is in the context of writing a function description.\nLet's say I have the function:</p>\n\n<pre><code>fromMaybe :: a -&gt; Maybe a -&gt; a\nfromMaybe _ (Just x) = x\nfromMaybe d Nothing = d\n</code></pre>\n\n<p>Would it be correct to say that this function \"converts an object of type 'Maybe a' into type 'a' by using a fallback argument\"?</p>\n\n<p>Of course, in Haskell, nothing is actually really <em>converted</em>, something else entirely is being returned. That is the background of this question. Is the usage of the term 'convert' OK to use? If so, when is it not?</p>\n\n<p>What if I have a function that takes a list of Integers and returns a list that is exactly the same, but with Floats. Would it be proper to say: \"this function converts a list of Integers into a list of Floats\"? </p>\n"}, {"tags": ["haskell", "random", "functional-programming", "haskell-stack", "io-monad"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 3, "creation_date": 1549469284, "post_id": 54557803, "comment_id": 95915420, "body": "have you tried using a <code>do</code> block as recommended by the first answer to the linked question? Because that (along with the <code>&gt;&gt;=</code> operator, for which the <code>do</code> block is just syntactic sugar) is the only way to do it."}, {"owner": {"user_type": "does_not_exist", "display_name": "user9156598"}, "edited": false, "score": 0, "creation_date": 1549469756, "post_id": 54557803, "comment_id": 95915673, "body": "I tried but I get the error that pureFunction is not in scope, and why do I need two functions returning an IO int?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 3, "creation_date": 1549469923, "post_id": 54557803, "comment_id": 95915776, "body": "An <code>Int</code> is a fixed, constant integer value, An <code>IO Int</code> is essentially a routine which can be called many times, and which will generate an integer value each time (potentially, distinct values will be returned). <code>do</code> blocks, applicative/monadic helpers, etc. help in calling that routine and get the actual integer, roughly put."}, {"owner": {"reputation": 153048, "user_id": 9204, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/c79937a093ff9e963c563e22cd385f30?s=128&d=identicon&r=PG", "display_name": "Alexey Romanov", "link": "https://stackoverflow.com/users/9204/alexey-romanov"}, "edited": false, "score": 0, "creation_date": 1549523192, "post_id": 54557803, "comment_id": 95933990, "body": "For <code>randomNumber2 $ pureFunction x</code> to make sense you need <code>randomNumber2</code> to have type <code>Something -&gt; IO Int</code> and <code>pureFunction</code> to be <code>Int -&gt; Something</code>. <code>randomNumber2</code> is just <code>IO Int</code>."}, {"owner": {"reputation": 243, "user_id": 13679816, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7b02acae66c6a347786eb93e8cbead85?s=128&d=identicon&r=PG", "display_name": "atravers", "link": "https://stackoverflow.com/users/13679816/atravers"}, "edited": false, "score": 0, "creation_date": 1605593488, "post_id": 54557803, "comment_id": 114690604, "body": "Related: <a href=\"https://stackoverflow.com/questions/41522491/is-there-a-way-to-place-some-impure-code-inside-pure-functions\" title=\"is there a way to place some impure code inside pure functions\">stackoverflow.com/questions/41522491/&hellip;</a> ."}], "answers": [{"tags": [], "owner": {"reputation": 4250, "user_id": 224612, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/vfUAt.png?s=128&g=1", "display_name": "Piotr Justyna", "link": "https://stackoverflow.com/users/224612/piotr-justyna"}, "is_accepted": false, "score": 2, "last_activity_date": 1549470598, "last_edit_date": 1549470598, "creation_date": 1549469855, "answer_id": 54558033, "question_id": 54557803, "link": "https://stackoverflow.com/questions/54557803/if-statement-using-io-int-haskell/54558033#54558033", "title": "If statement using IO Int haskell", "body": "<p>Not sure how your code looks like, but have you tried doing what the linked resource recommends (using the do block)?</p>\n\n<pre><code>do\n   (result, newGenerator) &lt;- randomR (0, 1) generator\n   -- ...\n</code></pre>\n\n<p>That will get you access to <code>result</code>, which is of the same type as <code>0</code> and <code>1</code>.</p>\n\n<p>Can you show your code/the error you get?</p>\n"}, {"comments": [{"owner": {"reputation": 1359, "user_id": 3346496, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2b1230f0444613f0e8d74e5a71439d1e?s=128&d=identicon&r=PG&f=1", "display_name": "monocell", "link": "https://stackoverflow.com/users/3346496/monocell"}, "edited": false, "score": 2, "creation_date": 1549539166, "post_id": 54558308, "comment_id": 95942425, "body": "Maybe mention that <code>Bool</code> has a <code>Random</code> instance?"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "reply_to_user": {"reputation": 1359, "user_id": 3346496, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2b1230f0444613f0e8d74e5a71439d1e?s=128&d=identicon&r=PG&f=1", "display_name": "monocell", "link": "https://stackoverflow.com/users/3346496/monocell"}, "edited": false, "score": 2, "creation_date": 1549552749, "post_id": 54558308, "comment_id": 95950621, "body": "<code>Bool</code> has a random instance."}, {"owner": {"reputation": 1359, "user_id": 3346496, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2b1230f0444613f0e8d74e5a71439d1e?s=128&d=identicon&r=PG&f=1", "display_name": "monocell", "link": "https://stackoverflow.com/users/3346496/monocell"}, "edited": false, "score": 0, "creation_date": 1549559111, "post_id": 54558308, "comment_id": 95954613, "body": "Hehe, very funny. :)"}], "tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": true, "score": 11, "last_activity_date": 1549566525, "last_edit_date": 1549566525, "creation_date": 1549470600, "answer_id": 54558308, "question_id": 54557803, "link": "https://stackoverflow.com/questions/54557803/if-statement-using-io-int-haskell/54558308#54558308", "title": "If statement using IO Int haskell", "body": "<p>When you say <code>a = getStdRandom $ randomR (0,1)</code> you are saying \"let a be the action of getting a random value between 0 and 1\".  What you want is within some function's do block <code>a &lt;- getStdRandom $ randomR (0,1)</code> which is \"let a be the result of running the action of getting a random value between 0 and 1\".</p>\n\n<p>As such:</p>\n\n<pre><code>import System.Random\n\nmain :: IO ()\nmain = do\n  a &lt;- getStdRandom $ randomR (0, 1 :: Int)\n  if a == 0 then userStarts else computerStarts\n\n-- Placeholders for completeness\nuserStarts, computerStarts :: IO ()\nuserStarts = putStrLn \"user\"\ncomputerStarts = putStrLn \"computer\"\n</code></pre>\n\n<p>N.B. I specified the <code>1</code> is an int or else the compiler won't know if you want a random int, int64, double, float, or something else entirely.</p>\n\n<p>EDIT: @monocell makes a good point that generating an int in a range just to get a boolean is somewhat indirect.  You can just directly generate a boolean result and this requires no range:</p>\n\n<pre><code>  a &lt;- getStdRandom random\n  if a then userStarts else computerStarts\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user9156598"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 761, "favorite_count": 1, "accepted_answer_id": 54558308, "answer_count": 2, "score": 2, "last_activity_date": 1549566525, "creation_date": 1549469122, "last_edit_date": 1549481123, "question_id": 54557803, "link": "https://stackoverflow.com/questions/54557803/if-statement-using-io-int-haskell", "title": "If statement using IO Int haskell", "body": "<p>I have a game , user vs computer and I want to randomly choose who starts the game. I have </p>\n\n<pre><code>a = getStdRandom $ randomR (0, 1)\n</code></pre>\n\n<p>This gets a random number 0 or 1. However it is a <code>IO Int</code>, so I can't have an if statement comparing it to a number like </p>\n\n<pre><code>if a == 0 then userStarts else computerStarts \n</code></pre>\n\n<p>I have tried to compare <code>IO Int</code> with <code>IO Int</code> and it doesn't work, and I have also tried </p>\n\n<p><a href=\"https://stackoverflow.com/questions/4235348/converting-io-int-to-int\">Converting IO Int to Int</a></p>\n\n<p>I am very new to Haskell, not sure how to approach this. Code details requested:</p>\n\n<pre><code>randomNumber =  getStdRandom $ randomR (0, length symbols - 5) --  this will be 0 or 1\nrandomNumber2 =  getStdRandom $ randomR (0, length symbols - 5) -- according to \n                     -- the solution I need another function returning IO int.\n\na = do\n   x &lt;- randomNumber\n   randomNumber2 $ pureFunction x\n</code></pre>\n\n<p>Error I get:</p>\n\n<pre><code>\u2022 Couldn't match expected type \u2018t0 -&gt; IO b\n                  with actual type \u2018IO Int\u2019\n    \u2022 The first argument of ($) takes one argument,\n      but its type \u2018IO Int\u2019 has none\n      In a stmt of a 'do' block: randomNumber2 $ pureFunction x\n      In the expression:\n        do x &lt;- randomNumber\n           randomNumber2 $ pureFunction x\n\n    \u2022 Relevant bindings include\n        a :: IO b\n          (bound at Path:87:1)\n\n    randomNumber2 $ pureFunction x\n\nPath:89:20: error:\n    Variable not in scope: pureFunction :: Int -&gt; t0\n\n     randomNumber2 $ pureFunction x\n</code></pre>\n"}, {"tags": ["haskell", "web-scraping"], "comments": [{"owner": {"reputation": 7666, "user_id": 1241193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0331e5e748a0ac3860b68f6cac130ef1?s=128&d=identicon&r=PG", "display_name": "Bob Dalgleish", "link": "https://stackoverflow.com/users/1241193/bob-dalgleish"}, "edited": false, "score": 0, "creation_date": 1549459579, "post_id": 54552618, "comment_id": 95909168, "body": "You use <code>replicateM 3 block</code>. That repeats the block 3 times, matching the results you get. Was that your intent?"}, {"owner": {"reputation": 188, "user_id": 5772563, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-DVfEl50m8KI/AAAAAAAAAAI/AAAAAAAAADk/gmX7V01d4u8/photo.jpg?sz=128", "display_name": "Adrian Legaspi", "link": "https://stackoverflow.com/users/5772563/adrian-legaspi"}, "reply_to_user": {"reputation": 7666, "user_id": 1241193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0331e5e748a0ac3860b68f6cac130ef1?s=128&d=identicon&r=PG", "display_name": "Bob Dalgleish", "link": "https://stackoverflow.com/users/1241193/bob-dalgleish"}, "edited": false, "score": 0, "creation_date": 1549465888, "post_id": 54552618, "comment_id": 95913133, "body": "@Bob Dalgleish I highly doubt that&#39;s his expected output, even the third <code>p</code> tag is incorrect"}, {"owner": {"reputation": 2141, "user_id": 1664572, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c2bee27fdb72050b60a3c6aae64b474f?s=128&d=identicon&r=PG", "display_name": "wizzup", "link": "https://stackoverflow.com/users/1664572/wizzup"}, "edited": false, "score": 0, "creation_date": 1549519504, "post_id": 54552618, "comment_id": 95932583, "body": "I&#39;ve edit the question to include expected output."}], "answers": [{"comments": [{"owner": {"reputation": 1392, "user_id": 5198575, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-RAYCSjVZdnQ/AAAAAAAAAAI/AAAAAAAAClo/VQ8V_H3l8O8/photo.jpg?sz=128", "display_name": "trevor cook", "link": "https://stackoverflow.com/users/5198575/trevor-cook"}, "reply_to_user": {"reputation": 2141, "user_id": 1664572, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c2bee27fdb72050b60a3c6aae64b474f?s=128&d=identicon&r=PG", "display_name": "wizzup", "link": "https://stackoverflow.com/users/1664572/wizzup"}, "edited": false, "score": 0, "creation_date": 1549634210, "post_id": 54559955, "comment_id": 95983961, "body": "Hey, I rewrote my answer for a working solution. Hope it helps."}, {"owner": {"reputation": 2141, "user_id": 1664572, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c2bee27fdb72050b60a3c6aae64b474f?s=128&d=identicon&r=PG", "display_name": "wizzup", "link": "https://stackoverflow.com/users/1664572/wizzup"}, "edited": false, "score": 0, "creation_date": 1549683069, "post_id": 54559955, "comment_id": 96001765, "body": "Cool! And about the <code>&gt;&gt;=</code> chaining,  I see Monad instance of <a href=\"https://hackage.haskell.org/package/scalpel-core/docs/src/Text-HTML-Scalpel-Internal-Scrape.html#line-52\" rel=\"nofollow noreferrer\">Scraper</a> also use <code>combine</code>. Would be glad if you could add some info on this (not a hard request, you have already answered the question)."}, {"owner": {"reputation": 1392, "user_id": 5198575, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-RAYCSjVZdnQ/AAAAAAAAAAI/AAAAAAAAClo/VQ8V_H3l8O8/photo.jpg?sz=128", "display_name": "trevor cook", "link": "https://stackoverflow.com/users/5198575/trevor-cook"}, "reply_to_user": {"reputation": 2141, "user_id": 1664572, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c2bee27fdb72050b60a3c6aae64b474f?s=128&d=identicon&r=PG", "display_name": "wizzup", "link": "https://stackoverflow.com/users/1664572/wizzup"}, "edited": false, "score": 0, "creation_date": 1549724878, "post_id": 54559955, "comment_id": 96010044, "body": "@wizzup. A little more discussion included."}, {"owner": {"reputation": 2141, "user_id": 1664572, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c2bee27fdb72050b60a3c6aae64b474f?s=128&d=identicon&r=PG", "display_name": "wizzup", "link": "https://stackoverflow.com/users/1664572/wizzup"}, "edited": false, "score": 0, "creation_date": 1549784388, "post_id": 54559955, "comment_id": 96022129, "body": "Thank you ,I&#39;ve just realize that my last comment can be unintentionally sound rude. <code>hard</code> is a bad wording there, not to mean <code>easy&#47;trivial</code> but instead <code>optional&#47;negotiable</code>. Please forgive my broken English. Never intend to demanding for answer."}, {"owner": {"reputation": 1392, "user_id": 5198575, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-RAYCSjVZdnQ/AAAAAAAAAAI/AAAAAAAAClo/VQ8V_H3l8O8/photo.jpg?sz=128", "display_name": "trevor cook", "link": "https://stackoverflow.com/users/5198575/trevor-cook"}, "reply_to_user": {"reputation": 2141, "user_id": 1664572, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c2bee27fdb72050b60a3c6aae64b474f?s=128&d=identicon&r=PG", "display_name": "wizzup", "link": "https://stackoverflow.com/users/1664572/wizzup"}, "edited": false, "score": 0, "creation_date": 1549801983, "post_id": 54559955, "comment_id": 96025766, "body": "No problem. Not offended. Thank you."}], "tags": [], "owner": {"reputation": 1392, "user_id": 5198575, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-RAYCSjVZdnQ/AAAAAAAAAAI/AAAAAAAAClo/VQ8V_H3l8O8/photo.jpg?sz=128", "display_name": "trevor cook", "link": "https://stackoverflow.com/users/5198575/trevor-cook"}, "is_accepted": true, "score": 1, "last_activity_date": 1549724743, "last_edit_date": 1549724743, "creation_date": 1549476452, "answer_id": 54559955, "question_id": 54552618, "link": "https://stackoverflow.com/questions/54552618/problem-parsing-adjcent-block-of-tags-with-scalpel/54559955#54559955", "title": "Problem parsing adjcent block of tags with scalpel", "body": "<p>First, I apologize for proposing a solution without testing or knowing anything about scalpel (such arrogance). Let me make it up to you; here's my totally rewritten attempt.</p>\n\n<p>First, this monstrosity works.</p>\n\n<pre><code>blocks :: Scraper String [Block]\nblocks = chroot \"body\" $ do\n  hs &lt;- texts \"h2\"\n  ps &lt;- texts \"p\"\n  return $ combine hs ps\n  where\n    combine (h:hs) (p:p':ps) = B h p p' : combine hs ps\n    combine _ _ = []\n</code></pre>\n\n<p>I call it a monstrosity because it erases the structure of the document with the two <code>texts</code> calls and then recreates it in the assumed order via <code>combine</code>. This probably isn't such a big deal in practice though, since most pages will be structured by combining tags via <code>&lt;div&gt;</code>.</p>\n\n<p>So, if we were to have a different page:</p>\n\n<pre><code>testS' :: String\ntestS'= unlines [ \"&lt;body&gt;\",\n              \"&lt;div&gt;\",\n              \"  &lt;h2&gt;Apple&lt;/h2&gt;\",\n              \"  &lt;p&gt;I Like Apple&lt;/p&gt;\",\n              \"  &lt;p&gt;Do you like Apple?&lt;/p&gt;\",\n              \"&lt;/div&gt;\",\n              \"\",\n              \"&lt;div&gt;\",\n              \"  &lt;h2&gt;Banana&lt;/h2&gt;\",\n              \"  &lt;p&gt;I Like Banana&lt;/p&gt;\",\n              \"  &lt;p&gt;Do you like Banana?&lt;/p&gt;\",\n              \"\",\n              \"&lt;/div&gt;\",\n              \"&lt;div&gt;\",\n              \"  &lt;h2&gt;Carrot&lt;/h2&gt;\",\n              \"  &lt;p&gt;I Like Carrot&lt;/p&gt;\",\n              \"  &lt;p&gt;Do you like Carrot?&lt;/p&gt;\",\n              \"&lt;/div&gt;\",\n              \"&lt;/body&gt;\"\n              ]\n</code></pre>\n\n<p>Then we can parse via:</p>\n\n<pre><code>block' :: Scraper String Block\nblock' = do\n  h  &lt;- text $ \"h2\"\n  [pa,pb] &lt;- texts $ \"p\"\n  return $ B h pa pb\n\nblocks' :: Scraper String [Block]\nblocks' = chroots (\"body\" // \"div\") $ block'\n</code></pre>\n\n<p>Yielding,</p>\n\n<pre><code>B \"Apple\" \"I Like Apple\" \"Do you like Apple?\"\nB \"Banana\" \"I Like Banana\" \"Do you like Banana?\"\nB \"Carrot\" \"I Like Carrot\" \"Do you like Carrot?\"\n</code></pre>\n\n<p>Edit: re <code>&gt;&gt;=</code> and <code>combine</code></p>\n\n<p>My <code>combine</code>, above, is a local <code>where</code> definition. What you see there is what you get. Its unrelated to the function used in <code>&gt;&gt;=</code>, which incidentally is also a locally defined function with a slightly different name\u2014<code>combined</code>. Even if they had the same name, however, it wouldn\u2019t matter since each is only in scope within their respective functions. </p>\n\n<p>As for the <code>&gt;&gt;=</code>, and just going by the observed behavior, each scrape starts from the beginning of the currently selected tags. So in your <code>block</code> definition, <code>chroot \u201cbody\u201d</code> returns all tags in the body, <code>text \u201ch2\u201d</code> matches the first <code>&lt;h2&gt;</code>, and the next two <code>text \u201cp\u201d</code> both match the first <code>&lt;p&gt;</code>.  So the bind is acting like an \u201cand\u201d: given the scalpel context of a bunch of tags match an <code>&lt;h2&gt;</code> and a <code>&lt;p&gt;</code> and (redundantly) a <code>&lt;p&gt;</code>.  Notice that in my <code>&lt;div&gt;</code> based parse i could use <code>texts</code> (note the \u201cs\u201d) to get the two <code>&lt;p&gt;</code> i was expecting. </p>\n\n<p>Finally, this behavior clicked for me when i saw it was based on tag soup. (Simultaneously with why they named it tag soup). Each of these scrapes are like dipping a spoon into an unordered soup of tags. The selector makes the soup, the scraper is your spoon. Hope that helps. </p>\n"}, {"comments": [{"owner": {"reputation": 2141, "user_id": 1664572, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c2bee27fdb72050b60a3c6aae64b474f?s=128&d=identicon&r=PG", "display_name": "wizzup", "link": "https://stackoverflow.com/users/1664572/wizzup"}, "edited": false, "score": 0, "creation_date": 1550659033, "post_id": 54777036, "comment_id": 96346997, "body": "That&#39;s funny because I just finish my project (in a hurry) using Python <a href=\"https://www.crummy.com/software/BeautifulSoup/bs4/doc/\" rel=\"nofollow noreferrer\">bs4</a>, but I am very glad to know that <code>scalpel</code> now support <a href=\"https://github.com/fimad/scalpel/issues/41\" rel=\"nofollow noreferrer\">siblings</a>   Would you mind explain how <code>Monad</code> instance of <a href=\"https://hackage.haskell.org/package/scalpel-core/docs/src/Text.HTML.Scalpel.Internal.Scrape.html#line-53\" rel=\"nofollow noreferrer\">Scraper</a> is intend to use for?"}, {"owner": {"reputation": 348, "user_id": 2782510, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a78d18128391ff0c51a3824714247a83?s=128&d=identicon&r=PG", "display_name": "fimad", "link": "https://stackoverflow.com/users/2782510/fimad"}, "reply_to_user": {"reputation": 2141, "user_id": 1664572, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c2bee27fdb72050b60a3c6aae64b474f?s=128&d=identicon&r=PG", "display_name": "wizzup", "link": "https://stackoverflow.com/users/1664572/wizzup"}, "edited": false, "score": 1, "creation_date": 1550706276, "post_id": 54777036, "comment_id": 96371845, "body": "A <code>Scraper</code> encapsulates a portion of an HTML doc and allows you to run queries on that portion while ignoring the rest of the structure. The order the queries are run in do not matter as each query is independent.   One of the design goals with scalpel was to allow writing scrapers that were robust (as possible) to changing / malformed HTML. An assumption I made was that the thing that really matters for what content is important are what the ancestors of a tag are not what the siblings are or how deeply nested the tag is."}], "tags": [], "owner": {"reputation": 348, "user_id": 2782510, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a78d18128391ff0c51a3824714247a83?s=128&d=identicon&r=PG", "display_name": "fimad", "link": "https://stackoverflow.com/users/2782510/fimad"}, "is_accepted": false, "score": 1, "last_activity_date": 1550622748, "creation_date": 1550622748, "answer_id": 54777036, "question_id": 54552618, "link": "https://stackoverflow.com/questions/54552618/problem-parsing-adjcent-block-of-tags-with-scalpel/54777036#54777036", "title": "Problem parsing adjcent block of tags with scalpel", "body": "<p>This is now supported in version 0.6.0 of scalpel through the use of <a href=\"https://hackage.haskell.org/package/scalpel-0.6.0/docs/Text-HTML-Scalpel.html#g:8\" rel=\"nofollow noreferrer\">SerialScrapers</a>. <code>SerialScrapers</code> allow you to focus on one child of the current root at a time and expose APIs to move the focus and execute <code>Scrapers</code> on the currently focused node.</p>\n\n<p>Adapting the example code in the documentation to your HTML gives:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>-- Copyright 2019 Google LLC.\n-- SPDX-License-Identifier: Apache-2.0\n\n-- Chroot to the body tag and start a SerialScraper context with inSerial.\n-- This will allow for focusing each child of body.\n--\n-- Many applies the subsequent logic repeatedly until it no longer matches \n-- and returns the results as a list.\nchroot \"body\" $ inSerial $ many $ do\n   -- Move the focus forward until text can be extracted from an h2 tag.\n   title &lt;- seekNext $ text \"h2\"\n   -- Create a new SerialScraper context that contains just the tags between\n   -- the current focus and the next h2 tag. Then until the end of this new \n   -- context, move the focus forward to the next p tag and extract its text.\n   ps &lt;- untilNext (matches \"h2\") (many $ seekNext $ text \"p\")\n   return (title, ps)\n</code></pre>\n\n<p>Which would return:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>[\n  (\"Apple\", [\"I like Apple\", \"Do you like Apple?\"]),\n  (\"Banana\", [\"I like Banana\", \"Do you like Banana?\"]),\n  (\"Carrot\", [\"I like Carrot\", \"Do you like Carrot?\"])\n]\n</code></pre>\n"}], "owner": {"reputation": 2141, "user_id": 1664572, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c2bee27fdb72050b60a3c6aae64b474f?s=128&d=identicon&r=PG", "display_name": "wizzup", "link": "https://stackoverflow.com/users/1664572/wizzup"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 224, "favorite_count": 0, "accepted_answer_id": 54559955, "answer_count": 2, "score": 1, "last_activity_date": 1550622748, "creation_date": 1549452594, "last_edit_date": 1549520582, "question_id": 54552618, "link": "https://stackoverflow.com/questions/54552618/problem-parsing-adjcent-block-of-tags-with-scalpel", "title": "Problem parsing adjcent block of tags with scalpel", "body": "<p>I have problem using <a href=\"https://hackage.haskell.org/package/scalpel\" rel=\"nofollow noreferrer\">scalpel</a> to capture block of tags.</p>\n\n<p>Given following HTML snippet store in <code>testS :: String</code></p>\n\n<pre><code>&lt;body&gt;\n  &lt;h2&gt;Apple&lt;/h2&gt;\n  &lt;p&gt;I Like Apple&lt;/p&gt;\n  &lt;p&gt;Do you like Apple?&lt;/p&gt;\n\n  &lt;h2&gt;Banana&lt;/h2&gt;\n  &lt;p&gt;I Like Banana&lt;/p&gt;\n  &lt;p&gt;Do you like Banana?&lt;/p&gt;\n\n  &lt;h2&gt;Carrot&lt;/h2&gt;\n  &lt;p&gt;I Like Carrot&lt;/p&gt;\n  &lt;p&gt;Do you like Carrot?&lt;/p&gt;\n&lt;/body&gt;\n\n</code></pre>\n\n<p>I want to parse block of <code>h2</code> and two <code>p</code> as a single record <code>Block</code>.</p>\n\n<pre><code>{-#LANGUAGE OverloadedStrings #-}\n\nimport Control.Monad\nimport Text.HTML.Scalpel\n\ndata Block = B String String String\n  deriving Show\n\nblock :: Scraper String Block\nblock = do\n  h  &lt;- text $ \"h2\"\n  pa &lt;- text $ \"p\"\n  pb &lt;- text $ \"p\"\n  return $ B h pa pb\n\nblocks :: Scraper String [Block]\nblocks = chroot \"body\" $ replicateM 3 block\n\n</code></pre>\n\n<p>But the result of scraping is not what I want, look like it keep repeat  capturing the first block and never consume it.</p>\n\n<pre><code>\u03bb&gt; traverse (mapM_ print) $ scrapeStringLike testS blocks\nB \"Apple\" \"I Like Apple\" \"I Like Apple\"\nB \"Apple\" \"I Like Apple\" \"I Like Apple\"\nB \"Apple\" \"I Like Apple\" \"I Like Apple\"\n</code></pre>\n\n<p>Expected output:</p>\n\n<pre><code>B \"Apple\" \"I Like Apple\" \"Do you like Apple?\"\nB \"Banana\" \"I Like Banana\" \"Do you like Banana?\"\nB \"Carrot\" \"I Like Carrot\" \"Do you like Carrot?\"\n</code></pre>\n\n<p>How to make it work?</p>\n"}, {"tags": ["haskell", "optimization", "difference-lists"], "comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 2, "creation_date": 1549442871, "post_id": 54549283, "comment_id": 95899307, "body": "see the <a href=\"https://stackoverflow.com/questions/13879260/why-are-difference-lists-more-efficient-than-regular-concatenation/13879693#13879693\">canonical answer</a>, in general."}, {"owner": {"reputation": 11412, "user_id": 617159, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/fc43cf2d76ce0981a21c0e5a817f96f5?s=128&d=identicon&r=PG", "display_name": "Lambda Fairy", "link": "https://stackoverflow.com/users/617159/lambda-fairy"}, "edited": false, "score": 3, "creation_date": 1549442881, "post_id": 54549283, "comment_id": 95899315, "body": "Only <code>(x :)</code> and <code>(xs ++)</code> are allowed in a difference list. (Note that the arguments are on the left.) Difference lists are efficient because they force every operation into a prepend."}, {"owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "edited": false, "score": 0, "creation_date": 1549443513, "post_id": 54549283, "comment_id": 95899632, "body": "Then what is the difference between a <code>difference list</code> and <code>foldl &#39;</code> ? Doesn&#39;t <code>foldl &#39;</code>  append the new value to the <code>buffer</code> at every iteration ,thus saving us from <code>thunks</code>?"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1549444307, "post_id": 54549283, "comment_id": 95900036, "body": "see <a href=\"https://stackoverflow.com/questions/14938584/haskell-foldl-poor-performance-with/14942678#14942678\" title=\"haskell foldl poor performance with\">stackoverflow.com/questions/14938584/&hellip;</a> about the foldl (disclaimer: the answer is by me). <code>foldl&#39; (++)</code> builds the left-leaning chain of <code>((([1]++[2])++[3])++[4])++[5]</code>."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1549444632, "post_id": 54549283, "comment_id": 95900212, "body": "to your new question, <code>(f 4 . f 5) $ a = ((: 4) . (: 5)) [1,2,3] = 4:5:[1,2,3]</code>. if you meant <code>((++ [4]) . (++ [5])) [1,2,3] = (++ [4]) ([1,2,3]++[5]) =  ([1,2,3]++[5])++[4]</code> then it again builds a left-leaning chain, i.e. is no good (quadratic). IOW, what exactly is not clear?"}], "answers": [{"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": true, "score": 4, "last_activity_date": 1549446006, "last_edit_date": 1549446006, "creation_date": 1549443364, "answer_id": 54549769, "question_id": 54549283, "link": "https://stackoverflow.com/questions/54549283/understanding-the-concept-of-difference-lists/54549769#54549769", "title": "Understanding the concept of difference lists", "body": "<p>You need to be more careful with times, i.e. <em>when</em> this or that thing is happening.</p>\n\n<p>Instead of starting with a list <code>[1,2,3]</code>, with different lists we start with</p>\n\n<pre><code>f1 = ([1,2,3] ++)\n</code></pre>\n\n<p>Then to \"add\" 4, 5, to the end of the growing <em>difference</em> list, we have</p>\n\n<pre><code>f2 = f1 . ([4] ++)\nf3 = f2 . ([5] ++)\n</code></pre>\n\n<p>Each such addition <em>into the end</em> of the growing difference list is <em>O(1)</em>.</p>\n\n<p>When we're finally done building it, we convert it into a \"normal\" list by application</p>\n\n<pre><code>xs = f3 []    -- or f3 [6..10] or whatever\n</code></pre>\n\n<p>Then, carefully, we get</p>\n\n<pre><code>xs = ((([1,2,3] ++) . ([4] ++)) . ([5] ++)) []\n   =  (([1,2,3] ++) . ([4] ++)) ( ([5] ++)  [] )\n   =   ([1,2,3] ++) ( ([4] ++)  ( ([5] ++)  [] ))\n   =     1:2:3:     (   4  :    (   5  :    [] ))\n</code></pre>\n\n<p>by the definition of <code>(++)</code>.</p>\n\n<p>A canonical answer: <a href=\"https://stackoverflow.com/questions/13879260/why-are-difference-lists-more-efficient-than-regular-concatenation/13879693#13879693\">Why are difference lists more efficient than regular concatenation?</a></p>\n\n<hr>\n\n<p>Even <code>a1 = (++ [4]) [1..]</code> <em>by itself</em> is an <em>O(1)</em> operation, as is <code>a2 = (++ [5]) a1</code> and <code>a3 = (++ [6]) a2</code>, because Haskell is lazy, and thunk creation is <em>O(1)</em>.</p>\n\n<p>It's only when we access the final result, that the overall operation becomes quadratic because accessing the <code>++</code> structure doesn't rearrange it -- it remains left-nested, so <em>quadratic</em> on repeated access from the top.</p>\n\n<p>The conversion to normal list by application of left-nested <code>.</code> structure to <code>[]</code> rearranges that structure internally into the right-nested <code>$</code> structure, as is explained in the canonical answer, so repeated access to such structure from the top is linear.</p>\n\n<p>So the difference is between <code>((++ [5]) . (++ [4])) [1,2,3]</code> (bad) and <code>((([1,2,3] ++) . ([4] ++)) . ([5] ++)) []</code> (good). Building the function chain <code>((++ [4]) . (++ [5]))</code> in itself is linear, yes, but it creates a structure that is quadratic to access in full. </p>\n\n<p>But <code>((([1,2,3] ++) . ([5] ++)) . ([4] ++)) []</code> becomes <code>([1,2,3] ++) (([5] ++) (([4] ++) []))</code>.</p>\n"}], "owner": {"reputation": 6267, "user_id": 1913744, "user_type": "registered", "accept_rate": 92, "profile_image": "https://i.stack.imgur.com/5bAQS.jpg?s=128&g=1", "display_name": "Bercovici Adrian", "link": "https://stackoverflow.com/users/1913744/bercovici-adrian"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 0, "accepted_answer_id": 54549769, "answer_count": 1, "score": 4, "last_activity_date": 1549446423, "creation_date": 1549441549, "last_edit_date": 1549446423, "question_id": 54549283, "link": "https://stackoverflow.com/questions/54549283/understanding-the-concept-of-difference-lists", "title": "Understanding the concept of difference lists", "body": "<p>While I was reading chapter 13 from <code>Real World Haskell</code> i came upon the concept of <code>Difference Lists</code>.<br>\nThe author says that in an imperative language if we want to append an element to a list, the cost would be <code>O(1)</code> since we would keep a pointer to the last element.\nHowever in Haskell, we have <code>immutable</code> objects so we would need every time to traverse the list and append the element at the end, thus <code>0(n)</code>.</p>\n\n<p>Instead of <code>[1,2,3]++[4]++[5]</code> \n<br>we could use partial application: <code>(++4).(++5)  [1,2,3]</code>.<Br>\n<br>I do not understand how is this more efficient since:<Br>\n- when i do <code>(++[5]) [1,2,3]</code> it would still be <code>O(n)</code> and then another <code>0(n)</code> for <code>(++4)</code></p>\n\n<p><strong>Quote</strong></p>\n\n<pre><code>There are two very interesting things about this approach. The first is that the cost of a partial application is constant, so the cost of many partial applications is linear. The second is that when we finally provide a [] value to\nunlock the final list from its chain of partial applications, application \nproceeds from right to left. This keeps the left operand of (++) small, and so \nthe overall cost of all of these appends is linear, not quadratic\n</code></pre>\n\n<p><br>I understand that this approach would be eager, so instead of keeping thunks of <code>yet to be applied methods</code> we keep the left operand <code>small</code> as the author says, but .... we still perform a traverse on each append.</p>\n\n<p>Given a list: <code>[1...100]</code> and wanting to append <code>1,2</code> i would still traverse it <code>2</code> times since I would :<Br></p>\n\n<ol>\n<li><p><code>f(f([1..100]))= f([1..100,1])</code> - traversed 1 time and appended <code>1</code></p></li>\n<li><p><code>[1..100,1,2]</code> -traversed the second time to append <code>2</code></p></li>\n</ol>\n\n<p>Can someone illuminate me on how is this more efficient in time complexity? (because<code>space</code>-complexity is due to no more <code>thunks</code>, like <code>foldl'</code>)</p>\n\n<hr>\n\n<p><strong>P.S</strong></p>\n\n<p>I am aware of the canonical answer and I have also read <a href=\"https://wiki.haskell.org/Foldr_Foldl_Foldl\" rel=\"nofollow noreferrer\">this chapter</a> which I found very helpful.<br>I know that you can achieve <code>O(1)</code> complexity by appending to the left using <code>:</code>, but it wouldn't be similar to <code>++</code>.</p>\n\n<p>If i use <code>f=(:)</code> on <code>a= [1,2,3]</code>  :<Br>\n<code>(f 4 . f 5) $ a</code> <br>I could say that i had <code>0(1)</code> efficiency on each append since i always appended on the to the left , but i would not get <code>[1,2,3,4,5]</code> , i would get <code>[5,4,1,2,3]</code> , so how  is in this case a <code>difference list</code> more efficient for the unitary operation of appending one element ?</p>\n"}, {"tags": ["haskell", "folding"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 3, "creation_date": 1549440287, "post_id": 54548710, "comment_id": 95898223, "body": "<code>sum = foldr (+) 0</code>. <code>product = foldr (*) 0</code>.  <code>map f = foldr (\\x xs -&gt; f x : xs) []</code>."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 5, "creation_date": 1549441250, "post_id": 54548710, "comment_id": 95898585, "body": "folding is just, like, a unifying theory of recursion. Instead of writing out your recursive definitions by hand, you write them down as calls to a fold. It&#39;s easier, less error prone, less to type, more opportunities for functional composition."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 2, "creation_date": 1549443259, "post_id": 54548710, "comment_id": 95899506, "body": "I would say the biggest benefit is in readability. Developers (with a little bit of experience) &quot;know&quot; what a fold does, so chances are anyone reading the code can just glance at a function definition involving fold and instantly &quot;know&quot; what the function does. If you write out the recursion by hand a reader will have to inspect the definitions themselves and reason about the recursive step before they can figure out what it does."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 3, "creation_date": 1549443522, "post_id": 54548710, "comment_id": 95899638, "body": "@AJFarmar - <code>product</code> should have a starting value of <code>1</code> not <code>0</code>. (I know you know this and it was a typo or copy/paste error, but best to make sure it&#39;s right so the OP isn&#39;t confused.)"}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1549449996, "post_id": 54548710, "comment_id": 95903368, "body": "@RobinZigmond Thank you for this correction, it was intended to be 1. To be clear for the OP: <code>product = foldr (*) 1</code> is the correct version."}], "answers": [{"tags": [], "owner": {"reputation": 311, "user_id": 8627223, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/3c2215fe47f643d6a6e3dcbb26fa2bc6?s=128&d=identicon&r=PG&f=1", "display_name": "James Birch", "link": "https://stackoverflow.com/users/8627223/james-birch"}, "is_accepted": false, "score": 2, "last_activity_date": 1549462218, "creation_date": 1549462218, "answer_id": 54555587, "question_id": 54548710, "link": "https://stackoverflow.com/questions/54548710/use-of-folding-in-defining-functions/54555587#54555587", "title": "Use of folding in defining functions", "body": "<p>The idea of folding is a powerful one. The fold functions (<code>foldr</code> and <code>foldl</code> in the Haskell base library) come from a family of functions called Higher-Order Functions (for those who don't know - these are functions which take functions as parameters or return functions as their output).</p>\n\n<p>This allows for greater code clarity as the intention of the program is more clearly expressed. A function written using fold functions strongly indicates that there is an intention to iterate over the list and apply a function repeatedly to obtain an output. Using the standard recursive method is fine for simple programs but when complexity increases it can become difficult to understand quickly what is happening.</p>\n\n<p>Greater code re-use can be achieved with folding due to the nature of passing in a function as the parameter. If a program has some behaviour that is affected by the passing of a Boolean or enumeration value then this behaviour can be abstracted away into a separate function. The separate function can then be used as an argument to fold. This achieves greater flexibility and simplicity (as there are 2 simpler functions versus 1 more complex function).</p>\n\n<p>Higher-Order Functions are also essential for <a href=\"https://wiki.haskell.org/Monad\" rel=\"nofollow noreferrer\">Monads</a>.</p>\n\n<p>Credit to the comments for this question as well for being varied and informative.</p>\n"}, {"tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": false, "score": 2, "last_activity_date": 1549484211, "last_edit_date": 1549484211, "creation_date": 1549483607, "answer_id": 54561719, "question_id": 54548710, "link": "https://stackoverflow.com/questions/54548710/use-of-folding-in-defining-functions/54561719#54561719", "title": "Use of folding in defining functions", "body": "<p>Higher-order functions like <code>foldr</code>, <code>foldl</code>, <code>map</code>, <code>zipWith</code>, &amp;c. capture common patterns of recursion so you can avoid writing manually recursive definitions. This makes your code higher-level and more readable: instead of having to step through the code and infer what a recursive function is doing, the programmer can reason about compositions of higher-level components.</p>\n\n<p>For a somewhat extreme example, consider a manually recursive calculation of standard deviation:</p>\n\n<pre><code>standardDeviation numbers = step1 numbers\n  where\n\n    -- Calculate length and sum to obtain mean\n    step1 = loop 0 0\n      where\n        loop count sum (x : xs) = loop (count + 1) (sum + x) xs\n        loop count sum [] = step2 sum count numbers\n\n    -- Calculate squared differences with mean\n    step2 sum count = loop []\n      where\n        loop diffs (x : xs) = loop ((x - (sum / count)) ^ 2 : diffs) xs\n        loop diffs [] = step3 count diffs\n\n    -- Calculate final total and return square root\n    step3 count = loop 0\n      where\n        loop total (x : xs) = loop (total + x) xs\n        loop total [] = sqrt (total / count)\n</code></pre>\n\n<p>(To be fair, I went a little overboard by also inlining the summation, but this is roughly how it may typically be done in an imperative language\u2014manually looping.)</p>\n\n<p>Now consider a version using a composition of calls to standard functions, some of which are higher-order:</p>\n\n<pre><code>standardDeviation numbers          -- The standard deviation\n  = sqrt                           -- is the square root\n  . mean                           -- of the mean\n  . map (^ 2)                      -- of the squares\n  . map (subtract                  -- of the differences\n      (mean numbers))              --   with the mean\n  $ numbers                        -- of the input numbers\n  where                            -- where\n    mean xs                        -- the mean\n      = sum xs                     -- is the sum\n      / fromIntegral (length xs)   -- over the length.\n</code></pre>\n\n<p>This more declarative code is also, I hope, much more readable\u2014and without the heavy commenting, could be written neatly in two lines. It\u2019s also much more obviously correct than the low-level recursive version.</p>\n\n<p>Furthermore, <code>sum</code>, <code>map</code>, and <code>length</code> can all be implemented in terms of folds, as well as many other standard functions like <code>product</code>, <code>and</code>, <code>or</code>, <code>concat</code>, and so on. Folding is an extremely common operation on not only lists, but all kinds of containers (see the <code>Foldable</code> typeclass), because it captures the pattern of computing something incrementally from all elements of a container.</p>\n\n<p>A final reason to use folds instead of manual recursion is performance: thanks to laziness and optimisations that GHC knows how to perform when you use <code>fold</code>-based functions, the compiler may fuse a series of folds (maps, &amp;c.) together into a single loop at runtime.</p>\n"}], "owner": {"reputation": 175, "user_id": 10832310, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-BTRsOLhbuYY/AAAAAAAAAAI/AAAAAAAAAAA/sZXLwRw5JZ0/photo.jpg?sz=128", "display_name": "Jung", "link": "https://stackoverflow.com/users/10832310/jung"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 127, "favorite_count": 0, "answer_count": 2, "score": 2, "last_activity_date": 1549484211, "creation_date": 1549438833, "question_id": 54548710, "link": "https://stackoverflow.com/questions/54548710/use-of-folding-in-defining-functions", "title": "Use of folding in defining functions", "body": "<p>I was introduced to the use of fold in defining function. I have an idea how that works but im not sure why one should do it. To me, it feels like just simplifying name of data type and data value ... Would be great if you can show me examples where it is significant to use fold.</p>\n\n<pre><code>data List a = Empty | (:-:) a (List a)\n\n--Define elements\nList a :: *\n[] :: List a\n(:) :: a -&gt; List a  -&gt; List a\n\nfoldrList :: (a -&gt; b -&gt; b) -&gt; b -&gt; List a -&gt; b\nfoldrList f e Empty = e\nfoldrList f e (x:-:xs) = f x (foldrList f e xs)\n</code></pre>\n"}, {"tags": ["haskell", "pattern-matching", "non-exhaustive-patterns"], "comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549435754, "post_id": 54546374, "comment_id": 95896341, "body": "You could&#39;ve googled &quot;Pattern match(es) are non-exhaustive&quot;. Gives many relevant results. :) About &quot;<code>_</code>&quot;: used in plain text, it is interpreted as an <i>italics</i> marker on SO (as is <code>*</code>). To write <i>code</i> we escape it by enclosing it in backticks ` like so: <code>_italics_ marker</code> (I typed <code>&quot;`_italics_ marker`&quot;</code>. To show code containing backticks we enclose it in double backticks."}], "answers": [{"tags": [], "owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "is_accepted": true, "score": 11, "last_activity_date": 1549425780, "creation_date": 1549425780, "answer_id": 54546432, "question_id": 54546374, "link": "https://stackoverflow.com/questions/54546374/what-does-mean-in-haskell-non-exhaustive-pattern-matching-error-from/54546432#54546432", "title": "What does &quot;(_:_:_)&quot; mean in Haskell (non-exhaustive pattern matching error from GHCI)?", "body": "<pre><code>recaList :: [Int] -&gt; [Int]\nrecaList [] = []\nrecaList [x] = map recaMan [x]\n</code></pre>\n\n<p>This is matching empty lists and lists containing one element. You have failed to match any list containing two or more elements. I believe what you meant was</p>\n\n<pre><code>recaList :: [Int] -&gt; [Int]\nrecaList [] = []\nrecaList xs = map recaMan xs\n</code></pre>\n\n<p>No need for the brackets. However, <code>map</code> will return the empty list if given it as input, so your first case is also unnecessary. Although the above snippet will work, this would be more idiomatic.</p>\n\n<pre><code>recaList :: [Int] -&gt; [Int]\nrecaList xs = map recaMan xs\n</code></pre>\n\n<p>As to your question about what the error syntax means, <code>:</code> is the list construction operator, so <code>(x:xs)</code> matches any nonempty list, binding the first element to <code>x</code> and the rest to <code>xs</code>. <code>(x:y:ys)</code> does the same, but it binds the first to <code>x</code>, the second to <code>y</code>, and the remainder to <code>ys</code>. An underscore simply indicates an ignored value, so <code>(_:_:_)</code> matches any list of at least two elements. The compiler is telling you that you failed to match this case.</p>\n"}], "owner": {"reputation": 105, "user_id": 7487145, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/S5XbN.jpg?s=128&g=1", "display_name": "Caroline", "link": "https://stackoverflow.com/users/7487145/caroline"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 472, "favorite_count": 2, "accepted_answer_id": 54546432, "answer_count": 1, "score": 5, "last_activity_date": 1549457827, "creation_date": 1549425289, "last_edit_date": 1549457827, "question_id": 54546374, "link": "https://stackoverflow.com/questions/54546374/what-does-mean-in-haskell-non-exhaustive-pattern-matching-error-from", "title": "What does &quot;(_:_:_)&quot; mean in Haskell (non-exhaustive pattern matching error from GHCI)?", "body": "<p>I'm getting the following error from GHCI when I run my Haskell program: </p>\n\n<pre><code>\"Pattern match(es) are non-exhaustive\n In an equation for `recaList': Patterns not matched: (_:_:_)\"\n</code></pre>\n\n<p>I've been searching the web/SO, but can't seem to find an explanation for what <code>(_:_:_)</code> is. My guess would be just an empty list, but I've accounted for that in my function.</p>\n\n<p>Not sure if it's relevant, but here's my program:</p>\n\n<pre><code>recaList :: [Int] -&gt; [Int]\nrecaList [] = []\nrecaList [x] = map recaMan [x]\n</code></pre>\n\n<p>I think the issue is just that I have no idea what <code>(_:_:_)</code> is.</p>\n"}, {"tags": ["haskell", "expression", "monads", "maybe"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549399234, "post_id": 54542287, "comment_id": 95886478, "body": "I don&#39;t understand the requirement <code>You are not allowed to use the constructor Just</code>. I don&#39;t see how to do it without using <code>Just</code> - unless of course we&#39;re allowed to use <code>return</code> (or <code>pure</code>) which in the context of the <code>Maybe</code> type are just synonyms..."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1549399337, "post_id": 54542287, "comment_id": 95886519, "body": "btw your code confuses me a little, I do not know why you are evaluating <code>Con i</code> as <code>-i</code> rather than the natural <code>i</code>. And what happens in the division case if the second expression evaluates to zero? I&#39;m pretty sure that case is why you are asked to return a <code>Maybe Int</code> rather than just an <code>Int</code>"}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1549400511, "post_id": 54542287, "comment_id": 95887023, "body": "@RobinZigmond Not exactly synonyms. <code>return</code> and <code>pure</code> are functions, whereas <code>Just</code> is a constructor, meaning you can use it in a pattern match. I think the idea of the constraint is to forbid you from pattern-matching on <code>Just</code>, while still allowing you to build a <code>Just</code> value, by way of <code>pure</code>."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "edited": false, "score": 0, "creation_date": 1549400837, "post_id": 54542287, "comment_id": 95887154, "body": "@amalloy - fair enough, that makes sense"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1549404613, "post_id": 54542287, "comment_id": 95888756, "body": "Hint: <code>evalM :: Monad m =&gt; Exp -&gt; m Int</code> with <code>evalM = pure . evalM1</code> would work for <i>any</i> monad, <code>Maybe</code> included."}], "answers": [{"comments": [{"owner": {"reputation": 15, "user_id": 10851973, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/B31TZ.jpg?s=128&g=1", "display_name": "kingingo", "link": "https://stackoverflow.com/users/10851973/kingingo"}, "edited": false, "score": 0, "creation_date": 1549402145, "post_id": 54543079, "comment_id": 95887740, "body": "Thank you very much! I added my solution and it works perfect."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 15, "user_id": 10851973, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/B31TZ.jpg?s=128&g=1", "display_name": "kingingo", "link": "https://stackoverflow.com/users/10851973/kingingo"}, "edited": false, "score": 1, "creation_date": 1549404243, "post_id": 54543079, "comment_id": 95888635, "body": "@kingingo - well done, but I don&#39;t think the solution you&#39;ve posted is quite right yet. (Although it&#39;s nearly there.) There are ways for <code>Division e1 e2</code> to give a division by zero error other than when <code>e2</code> is <code>Con 0</code>, which is the only case you&#39;ve handled."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 15, "user_id": 10851973, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/B31TZ.jpg?s=128&g=1", "display_name": "kingingo", "link": "https://stackoverflow.com/users/10851973/kingingo"}, "edited": false, "score": 0, "creation_date": 1549409160, "post_id": 54543079, "comment_id": 95890021, "body": "@kingingo You&#39;re almost there. Try dividing by zero, your solution still triggers an error instead of returning <code>Nothing</code>. After you get both <code>a</code> and <code>b</code>, you need to check if <code>b == 0</code> before performing the division. You could use <code>if b==0 then .. else ..</code>"}, {"owner": {"reputation": 15, "user_id": 10851973, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/B31TZ.jpg?s=128&g=1", "display_name": "kingingo", "link": "https://stackoverflow.com/users/10851973/kingingo"}, "edited": false, "score": 0, "creation_date": 1549440771, "post_id": 54543079, "comment_id": 95898413, "body": "But I did it already with pattern matching &quot;evalM (Division e1 (Con 0)) = Nothing&quot; or is it false?"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1549443078, "post_id": 54543079, "comment_id": 95899418, "body": "What happens if you try, for example, <code>evalM $ Division (Con 1) $ Sum (Con 2) (Con (-2))</code>?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 15, "user_id": 10851973, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/B31TZ.jpg?s=128&g=1", "display_name": "kingingo", "link": "https://stackoverflow.com/users/10851973/kingingo"}, "edited": false, "score": 1, "creation_date": 1549447585, "post_id": 54543079, "comment_id": 95901897, "body": "@kingingo division by zero does not mean division by literal zero, consider e.g. <code>1&#47;(0&#47;1)</code>, which is not handled by your program, but should be. Robin also suggests <code>1&#47;(2+(-2))</code>, which should also be handled. You should check the semantic result of an expression against 0, not its syntax."}, {"owner": {"reputation": 15, "user_id": 10851973, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/B31TZ.jpg?s=128&g=1", "display_name": "kingingo", "link": "https://stackoverflow.com/users/10851973/kingingo"}, "edited": false, "score": 1, "creation_date": 1549450001, "post_id": 54543079, "comment_id": 95903371, "body": "So I updated my solutions again and added an guard :). I also tested it. Btw Thank you very much guys for your help"}], "tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 1, "last_activity_date": 1549401009, "creation_date": 1549401009, "answer_id": 54543079, "question_id": 54542287, "link": "https://stackoverflow.com/questions/54542287/expression-monad/54543079#54543079", "title": "Expression Monad", "body": "<p>Here's a hint.</p>\n\n<p>First, you have to understand why the result of the evaluation is a <code>Maybe Int</code> instead of a simpler <code>Int</code>. Intuitively, <code>Maybe Int</code> contains all the possible values for <code>Int</code>, plus a special one (<code>Nothing</code>). What is the additional value for?</p>\n\n<p>Likely, that additional value is to be used to capture division by zero errors. That is, if we need to divide by zero in our expression, we should return <code>Nothing</code> instead of causing a runtime error.</p>\n\n<p>Your <code>evalM1</code> function ignores this fact, and simply tries to divide numbers, returning a simple <code>Int</code>. This <code>Int</code> return type is a half lie, though, since division by zero is not really handled. Dividing by zero there causes a runtime error instead of a nicer special value <code>Nothing</code>.</p>\n\n<p>Note that we can't simply define <code>evalM :: Exp -&gt; Maybe Int</code> wrapping <code>evalM1</code>. Code like</p>\n\n<pre><code>evalM e = return (evalM1 e)\n</code></pre>\n\n<p>will type, but will not handle division by zero as a special case.</p>\n\n<p>I'd suggest you ignore <code>evalM1</code> and instead build <code>evalM</code> from scratch. You can follow a similar recursion pattern:</p>\n\n<pre><code>evalM :: Exp -&gt; Maybe Int\nevalM (Con i) = ...\nevalM (Sum e1 e2) = ...\nevalM (Division e1 e2) = ...\n</code></pre>\n\n<p>For the sum case: note that we can't write recursion calls <code>evalM e1 + evalM e2</code> since we can't <code>+</code> two <code>Maybe Int</code> since they are not numbers. That is however not a real issue. We can instead perform the two calls inside a <code>do</code> block, fetching their results (if any, recall they could return <code>Nothing</code>), and then finally <code>+</code> and <code>return</code> the sum.</p>\n\n<p>Division is similar, but remember to check for <code>0</code>.</p>\n\n<p>As a last note, let me address your \"question as asked\". Why does <code>x &lt;- Just number</code> only works with <code>Just</code>. Well, that's because we are working inside the <code>Maybe</code> monad here, so every expression following <code>&lt;-</code> must have a type of the form <code>Maybe something</code>. So we can't write <code>x &lt;- (42 :: Int)</code>. Without <code>Just</code> we could write instead <code>let x = (42 :: Int)</code> inside the <code>do</code> block, but you won't need that.</p>\n"}], "owner": {"reputation": 15, "user_id": 10851973, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/B31TZ.jpg?s=128&g=1", "display_name": "kingingo", "link": "https://stackoverflow.com/users/10851973/kingingo"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 139, "favorite_count": 0, "accepted_answer_id": 54543079, "answer_count": 1, "score": 0, "last_activity_date": 1549449864, "creation_date": 1549397464, "last_edit_date": 1549449864, "question_id": 54542287, "link": "https://stackoverflow.com/questions/54542287/expression-monad", "title": "Expression Monad", "body": "<p>I got the task:</p>\n\n<pre><code>data Exp = Con Int | Sum Exp Exp | Division Exp Exp\n</code></pre>\n\n<p>Write the function evalM, which evaluate the Expression Exp and put it in an Maybe.\nYou are not allowed to use the constructor Just and you have to solve it with DO or >>=.</p>\n\n<p>So My Code is: </p>\n\n<pre><code>evalM1 :: Exp -&gt; Int\nevalM1 e = evalM2 e where\n           evalM2 :: Exp -&gt; Int\n           evalM2 (Con i) = (i)\n           evalM2 (Sum e1 e2) = (evalM2 e1)+(evalM2 e2)\n           evalM2 (Division e1 e2) = div (evalM2 e1) (evalM2 e2)\n\nevalM :: Exp -&gt; Maybe Int\nevalM e = do\n          return (evalM1 e)\n\n-- Second try\nevalM e = do\n          y &lt;- Just (evalM1 e)\n          return y\n</code></pre>\n\n<p>So my Question is why does the first evalM works without Just and the Second evalM works only if i use Just (y &lt;- Just..) ?</p>\n\n<p>And maybe someone can write me the solution with >>=.</p>\n\n<p>Thank you very much!</p>\n\n<p>Solution:</p>\n\n<pre><code>evalM :: Exp -&gt; Maybe Int\nevalM (Con i) = return i \nevalM (Neg x) = evalM x &gt;&gt;= \\v -&gt; return (-v)\nevalM (Sum e1 e2) = evalM e1 &gt;&gt;= \\a -&gt; evalM e2 &gt;&gt;= \\b -&gt; (return (a+b))\nevalM (Division e1 e2) = evalM e1 &gt;&gt;= \\a -&gt; evalM e2 &gt;&gt;= (\\b -&gt; guard(b/=0) &gt;&gt; (return (div a b)))\n\n&gt; *Test&gt; evalM (Division (Con 1) (Division (Con 0) (Con 1))) ~&gt; Nothing\n&gt; *Test&gt; evalM (Division (Con 1) (Sum (Con 2) (Neg (Con 2)))) ~&gt; Nothing\n</code></pre>\n"}, {"tags": ["function", "haskell", "binary", "data-conversion"], "comments": [{"owner": {"reputation": 208, "user_id": 9252109, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/beeb1e77101c576b7428ac0692f5c679?s=128&d=identicon&r=PG&f=1", "display_name": "atmostmediocre", "link": "https://stackoverflow.com/users/9252109/atmostmediocre"}, "edited": false, "score": 1, "creation_date": 1549395137, "post_id": 54541518, "comment_id": 95884669, "body": "Try using a <code>fold</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1549396286, "post_id": 54541518, "comment_id": 95885195, "body": "This is a little simpler if you just convert the <code>[Bool]</code> value to a <code>[Int]</code> value list right away with <code>map fromEnum</code>: <code>binToDecList = go . map fromEnum where go = ...</code>."}, {"owner": {"reputation": 2570, "user_id": 4142266, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/rMCN5.png?s=128&g=1", "display_name": "mschmidt", "link": "https://stackoverflow.com/users/4142266/mschmidt"}, "edited": false, "score": 0, "creation_date": 1549442788, "post_id": 54541518, "comment_id": 95899267, "body": "Look up the documentation for <code>foldl</code> in the <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html\" rel=\"nofollow noreferrer\">Prelude</a> and then try to fill the missing definition of the <code>go</code> helper function: <code>binToDecList = foldl go 0 where go acc x =  ...</code>"}, {"owner": {"reputation": 395, "user_id": 11019303, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2bfaec7dd8db91951fb7515a3908c60?s=128&d=identicon&r=PG&f=1", "display_name": "Sniper", "link": "https://stackoverflow.com/users/11019303/sniper"}, "edited": false, "score": 0, "creation_date": 1549477329, "post_id": 54541518, "comment_id": 95919557, "body": "Thanks guys, i was able to perform this with fold function but still i want to know why it couldnt carried out with explicit recursion? Secondly there is one problem left that is, it is performing one extra iteration to multiply the result. How can i control that here. I tried this way if the next element is [ ] then it will just return the result accumulated so far. But it seems not be running as expected may be the composition of the calling functions isn&#39;t right?"}, {"owner": {"reputation": 395, "user_id": 11019303, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2bfaec7dd8db91951fb7515a3908c60?s=128&d=identicon&r=PG&f=1", "display_name": "Sniper", "link": "https://stackoverflow.com/users/11019303/sniper"}, "edited": false, "score": 0, "creation_date": 1549478829, "post_id": 54541518, "comment_id": 95920252, "body": "Please guide: foldl(\\result x -&gt; if x == True then (mul(add result 1) xs) else (mul(add result 1) xs)) 0 xs  and mul :: Int -&gt; [Bool]-&gt;Int mul x b = if tail(b) /= [] then x * 2 else x   . I know this logic might not be so good here but i would like to carry out this way for now, unless i am going in wrong direction. Any help?"}, {"owner": {"reputation": 1025, "user_id": 2144360, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/767659db8e35cad4101b913878314098?s=128&d=identicon&r=PG", "display_name": "RajibTheKing", "link": "https://stackoverflow.com/users/2144360/rajibtheking"}, "edited": false, "score": 0, "creation_date": 1549479350, "post_id": 54541518, "comment_id": 95920528, "body": "According to your concept, binToDecList&#39; is a helper function. So, you should pass whole list to that function instead of passing only single element.  Then try to write recursive code for that helper function. For example: binToDecList fullList      = binToDecList&#39;  fullList 0. Now induction is possible over the list using extra variable which will store your actual answer."}, {"owner": {"reputation": 395, "user_id": 11019303, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2bfaec7dd8db91951fb7515a3908c60?s=128&d=identicon&r=PG&f=1", "display_name": "Sniper", "link": "https://stackoverflow.com/users/11019303/sniper"}, "reply_to_user": {"reputation": 1025, "user_id": 2144360, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/767659db8e35cad4101b913878314098?s=128&d=identicon&r=PG", "display_name": "RajibTheKing", "link": "https://stackoverflow.com/users/2144360/rajibtheking"}, "edited": false, "score": 0, "creation_date": 1549484785, "post_id": 54541518, "comment_id": 95922903, "body": "@RajibTheKing Thanks it worked with recursion. I am also trying to do with foldl function. Need help with above posted logic with foldl."}], "answers": [{"tags": [], "owner": {"reputation": 120535, "user_id": 123109, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/157c96de3d125abc1c363ff25c20dfaf?s=128&d=identicon&r=PG", "display_name": "Greg Bacon", "link": "https://stackoverflow.com/users/123109/greg-bacon"}, "is_accepted": true, "score": 2, "last_activity_date": 1550169556, "last_edit_date": 1550169556, "creation_date": 1549488342, "answer_id": 54562769, "question_id": 54541518, "link": "https://stackoverflow.com/questions/54541518/binary-to-decimal-conversion-in-haskell-using-horners-algorithm/54562769#54562769", "title": "Binary to Decimal Conversion in Haskell using Horners Algorithm", "body": "<p>The type<sup><strong>*</strong></sup> of <code>foldl</code> tells us how it must work.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>foldl :: (b -&gt; a -&gt; b) -&gt; b -&gt; [a] -&gt; b\n</code></pre>\n\n<p>Clearly <code>[a]</code>, the third argument that is a list of something, must be the list of <code>Bool</code> to be handed to Horner\u2019s algorithm. That means the type variable <code>a</code> must be <code>Bool</code>.</p>\n\n<p>The type variable <code>b</code> represents a possibly distinct type. We are trying to convert <code>[Bool]</code> to <code>Int</code>, so <code>Int</code> is a decent guess for <code>b</code>.</p>\n\n<p><code>foldl</code> works by chewing through a list from the left (<em>i.e.</em>, starting with its head) and somehow combining the result so far with the next element from the list. The second argument is typically named <code>z</code> for \u201czero\u201d or the seed value for the folding process. When <code>foldl</code> reaches the end of the list, it returns the accumulated value.</p>\n\n<p>We can see syntactically that the first argument is some function that performs some operation on items of type <code>b</code> and type <code>a</code> to yield a <code>b</code>. Now, a function that ignores the <code>a</code> item and unconditionally results in whatever the <code>b</code> is would fit but wouldn\u2019t be very interesting.</p>\n\n<p>Think about how Horner\u2019s algorithm proceeds. The numbers at the elbows of the path on your diagram represent the notional \u201cresult so far\u201d from the previous paragraph. We know that <code>b</code> is <code>Int</code> and <code>a</code> is <code>Bool</code>, so the function passed to <code>foldl</code> must convert the <code>Bool</code> to <code>Int</code> and combine it with the result.</p>\n\n<p>The first step in Horner\u2019s algorithm seems to be a special case that needs to be handled differently, but <code>foldl</code> uses the same function all the way through. If you imagine \u201cpriming the pump\u201d with an invisible horizontal move (<em>i.e.</em>, multiplying by two) to begin with, we can make the types fit together like puzzle pieces. It\u2019s fine because two times zero is still zero.</p>\n\n<p>Thus, in terms of <code>foldl</code>, Horner\u2019s algorithm is</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>horners :: [Bool] -&gt; Int\nhorners = foldl f 0\n  where f x b =\n          let b' = fromEnum b\n          in 2*x + b'\n</code></pre>\n\n<p>Notice that <code>2*x + b'</code> combines subsequent horizontal and vertical moves.</p>\n\n<p>This also suggests how to express it in direct recursion.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>horners' :: [Bool] -&gt; Int\nhorners' [] = 0\nhorners' l  = go 0 l\n  where -- over then down\n        go x [] = x\n        go x (b:bs) =\n          let b' = fromEnum b\n          in go (2*x + b') bs\n</code></pre>\n\n<p>Here the inner <code>go</code> loop is performing the left-fold and combining each next <code>Bool</code> with the result so far in <code>i</code>.</p>\n\n<hr>\n\n<p><sup><strong>*</strong></sup> A pedagogical simplification: the actual type generalizes the list type into <code>Foldable</code>.</p>\n"}], "owner": {"reputation": 395, "user_id": 11019303, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c2bfaec7dd8db91951fb7515a3908c60?s=128&d=identicon&r=PG&f=1", "display_name": "Sniper", "link": "https://stackoverflow.com/users/11019303/sniper"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 401, "favorite_count": 0, "accepted_answer_id": 54562769, "answer_count": 1, "score": 1, "last_activity_date": 1550169556, "creation_date": 1549394141, "last_edit_date": 1549524773, "question_id": 54541518, "link": "https://stackoverflow.com/questions/54541518/binary-to-decimal-conversion-in-haskell-using-horners-algorithm", "title": "Binary to Decimal Conversion in Haskell using Horners Algorithm", "body": "<p>I am trying to implement a function here which takes a list of Bool representing binary numbers such as <code>[True, False, False]</code> and convert that into corresponding decimal number according to Horners method. </p>\n\n<p>Function type would be <code>[Bool] -&gt; Int</code>.</p>\n\n<p>Algorithms which i am following is:</p>\n\n<p>Horners Algorithm Visual Explanation:</p>\n\n<p><a href=\"https://i.stack.imgur.com/9GmEh.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/9GmEh.png\" alt=\"enter image description here\"></a></p>\n\n<p>So far i have implemented the logic in which it says first it will check whether the list is empty or either one element in the list <code>[True]</code>, will give 1 and <code>[False]</code> will give 0.</p>\n\n<p>Then in this case <code>binToDecList (x:xs)  =  binToDecList' x 0</code> what i did to treat first element whether this is True or False.</p>\n\n<pre><code>binToDecList :: [Bool] -&gt; Int\nbinToDecList []      = error \"Empty List\"\nbinToDecList [True]  = 1\nbinToDecList [False] = 0\nbinToDecList (x:xs)  =  binToDecList' x 0 \nbinToDecList' x d | x == True = mul (add d 1)\n                  | otherwise = mul (add d 0)\n\nadd :: Int -&gt; Int -&gt; Int\nadd x y = x + y\n\nmul :: Int -&gt; Int\nmul x = x * 2\n</code></pre>\n\n<p>I want to use the result of <code>binToDecList'</code> in the next iteration calling itself recursively on the next element of the list. How can i store the result and then apply it to next element of the list recursively. Any kind of help would be appreciated. </p>\n"}, {"tags": ["haskell", "pattern-matching"], "answers": [{"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 6, "last_activity_date": 1549410582, "last_edit_date": 1549410582, "creation_date": 1549387842, "answer_id": 54540004, "question_id": 54539981, "link": "https://stackoverflow.com/questions/54539981/pattern-matching-on-the-last-element-of-a-list/54540004#54540004", "title": "Pattern matching on the last element of a List", "body": "<p>No, because there is no constructor of type <code>[a] -&gt; a -&gt; [a]</code> to match.</p>\n\n<p>You can use <code>[]</code> and <code>:</code> for pattern matching because they are, by definition, the building blocks of a list value. <code>[]</code> is <em>the</em> way to create an empty list. <code>:</code> is <em>the</em> way to build a new list from an element and another list. Functions like <code>append</code> do not create new lists by themselves; they <em>return</em> lists created by <code>:</code> and/or <code>[]</code>.</p>\n\n<hr>\n\n<p>The exception is if you happen to know the length of the list in advance, in which case you can match the last element by matching <em>all</em> of the elements explicitly.</p>\n\n<pre><code>lastOfFour :: [a] -&gt; a\nlastOfFour (_:_:_:x:[]) = x\nlastOfFour (_:_:_:_:_) = error \"Too many elements\"\nlastOfFour _ = error \"Too few elements\"\n</code></pre>\n\n<p>The first error message is triggered if you can match at least 4 elements, and the remaining list is <em>not</em> empty; the second by any list that isn't matched by one of the first two.</p>\n"}, {"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1549389348, "post_id": 54540301, "comment_id": 95881920, "body": "This answer is a bit puzzling to me. Why have you specialized to <code>Maybe</code>s? Why is <code>foo</code> a better building-block than <code>last</code> itself?"}, {"owner": {"reputation": 21417, "user_id": 925978, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/06e4467a5bd1538a92cefb20db07897a?s=128&d=identicon&r=PG&f=1", "display_name": "crockeea", "link": "https://stackoverflow.com/users/925978/crockeea"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1549390102, "post_id": 54540301, "comment_id": 95882269, "body": "I suppose I answered the question&#39;s title, when perhaps all the OP wants is <code>last</code> itself? <code>Maybe</code> is just an example type to pattern-match on."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1549390453, "post_id": 54540301, "comment_id": 95882428, "body": "This isn&#39;t pattern matching on the list; it&#39;s pattern matching on the return value of <code>last</code>."}], "tags": [], "owner": {"reputation": 21417, "user_id": 925978, "user_type": "registered", "accept_rate": 84, "profile_image": "https://www.gravatar.com/avatar/06e4467a5bd1538a92cefb20db07897a?s=128&d=identicon&r=PG&f=1", "display_name": "crockeea", "link": "https://stackoverflow.com/users/925978/crockeea"}, "is_accepted": false, "score": -2, "last_activity_date": 1549389047, "creation_date": 1549389047, "answer_id": 54540301, "question_id": 54539981, "link": "https://stackoverflow.com/questions/54539981/pattern-matching-on-the-last-element-of-a-list/54540301#54540301", "title": "Pattern matching on the last element of a List", "body": "<p>As chepner pointed out, there is no built-in way to do this, but it's also not hard to write your own:</p>\n\n<pre><code>foo :: [Maybe a] -&gt; a\nfoo [] = error \"empty list\"\nfoo xs =\n  case last xs\n    (Just a) -&gt; a\n    Nothing -&gt; error \"last element is a Nothing!\"\n</code></pre>\n\n<p>Another way would be to <code>reverse</code> the list, and then pattern match on the first element!</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 2, "creation_date": 1549425956, "post_id": 54540838, "comment_id": 95893416, "body": "It&#39;s worth mentioning explicitly that <code>:|&gt;</code> is actually a <i>pattern synonym</i> rather than a data constructor. But it&#39;s a reasonable pattern synonym because the underlying operations (<code>viewr</code> and <code>|&gt;</code>) are O(1) (amortized, but validly so even for persistent use). Basically, <code>:|&gt;</code> and its twin <code>:&lt;|</code> are just a constant factor slower than real constructors."}], "tags": [], "owner": {"reputation": 5755, "user_id": 394253, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/985ef765f821b00d3b41ac5ca8aef6a0?s=128&d=identicon&r=PG", "display_name": "Ed&#39;ka", "link": "https://stackoverflow.com/users/394253/edka"}, "is_accepted": false, "score": 5, "last_activity_date": 1549391361, "creation_date": 1549391361, "answer_id": 54540838, "question_id": 54539981, "link": "https://stackoverflow.com/questions/54539981/pattern-matching-on-the-last-element-of-a-list/54540838#54540838", "title": "Pattern matching on the last element of a List", "body": "<p>To get the the last element of list you need to traverse entire list.<br>\nIf you need to match on the last element you probably need a list-like data structure which makes such match efficient and easy to use, like <a href=\"http://hackage.haskell.org/package/containers/docs/Data-Sequence.html\" rel=\"noreferrer\">Sequence</a> (where it is O(1) from both ends):</p>\n\n<pre><code>{-# LANGUAGE OverloadedLists #-}\n\nimport Data.Sequence\n\nlast' :: Seq a -&gt; a\nlast' Empty = error \"Empty sequence\"\nlast' (_:|&gt;a) = a\n\ntest = last' [1..5]\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1549426173, "post_id": 54544760, "comment_id": 95893457, "body": "I&#39;m personally wary of pattern synonyms for operations that are worse than polylogarithmic or so. There&#39;s no technical problem with such patterns, but they&#39;re likely to break users&#39; intuition about performance."}], "tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": false, "score": 3, "last_activity_date": 1549410402, "creation_date": 1549410402, "answer_id": 54544760, "question_id": 54539981, "link": "https://stackoverflow.com/questions/54539981/pattern-matching-on-the-last-element-of-a-list/54544760#54544760", "title": "Pattern matching on the last element of a List", "body": "\n\n<p>In GHC, you can define a <a href=\"https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#pattern-synonyms\" rel=\"nofollow noreferrer\">pattern synonym</a> for this, if you really want to.  It will still be <em>O</em>(<em>n</em>), of course.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE PatternSynonyms, ViewPatterns #-}\n\nunsnoc :: [a] -&gt; Maybe ([a], a)\nunsnoc [] = Nothing\nunsnoc xs = Just (init xs, last xs)\n\n{-# COMPLETE [], (:&gt;) #-}\ninfixl 5 :&gt;\npattern (:&gt;) :: [a] -&gt; a -&gt; [a]\npattern xs :&gt; x &lt;- (unsnoc -&gt; Just (xs, x))\n  where xs :&gt; x = xs ++ [x]\n\n-- example:\n\nlast' :: [a] -&gt; a\nlast' [] = error \"last': empty list\"\nlast' (_ :&gt; x) = x\n</code></pre>\n\n<p>(<code>unsnoc</code> is also in <a href=\"http://hackage.haskell.org/package/extra-1.6.14/docs/Data-List-Extra.html#v:unsnoc\" rel=\"nofollow noreferrer\"><code>Data.List.Extra</code></a>.)</p>\n"}, {"tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": false, "score": 1, "last_activity_date": 1549410499, "creation_date": 1549410499, "answer_id": 54544777, "question_id": 54539981, "link": "https://stackoverflow.com/questions/54539981/pattern-matching-on-the-last-element-of-a-list/54544777#54544777", "title": "Pattern matching on the last element of a List", "body": "<p>You can\u2019t match on the last element directly, since pattern matching only deconstructs things based on the concrete constructors of the type, and lists only have two constructors: <code>[]</code> and <code>(:)</code>.</p>\n\n<p>However, you can reverse the list, then match on the head of the reversed list:</p>\n\n<pre><code>last' xs = case reverse xs of\n  [] -&gt; error \"last' []\"\n  x : _ -&gt; x\n</code></pre>\n\n<p>With <code>ViewPatterns</code> you can do that reversal directly in the pattern:</p>\n\n<pre><code>{-# LANGUAGE ViewPatterns #-}\n\nlast' (reverse -&gt; xs) = case xs of\n  [] -&gt; error \"last' []\"\n  x : _ -&gt; x\n</code></pre>\n\n<p>Or with <code>PatternGuards</code> you can do the reversal in a guard:</p>\n\n<pre><code>{-# LANGUAGE PatternGuards #-}\n\nlast' xs\n  | x : _ &lt;- reverse xs = x\n  | otherwise = error \"last' []\"\n</code></pre>\n\n<p>Finally, with <code>PatternSynonyms</code> you can package this up with a name:</p>\n\n<pre><code>{-# LANGUAGE PatternSynonyms #-}\n{-# LANGUAGE ViewPatterns #-}\n\npattern Reversed xs x &lt;- (reverse -&gt; x : xs)\n\n  -- This part is optional, but allows writing:\n  --\n  --   Reversed [3, 2, 1] 0\n  --\n  -- As a synonym for:\n  --\n  --   [0, 1, 2, 3]\n  --\n  where Reversed xs x = x : reverse xs\n\nlast' (Reversed _ x) = x\nlast' _ = error \"last' []\"\n</code></pre>\n\n<p>All of these solutions are O(<em>n</em>) (linear) in the length of the list, which is unavoidable. So you might be better off making the traversal as explicit as possible, instead of hiding the linear cost and inadvertently traversing the list more than you intended, or using a different data structure with O(1) (constant) indexing of the last element, such as a <code>Seq</code> or <code>Vector</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 120535, "user_id": 123109, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/157c96de3d125abc1c363ff25c20dfaf?s=128&d=identicon&r=PG", "display_name": "Greg Bacon", "link": "https://stackoverflow.com/users/123109/greg-bacon"}, "is_accepted": true, "score": 1, "last_activity_date": 1549551990, "creation_date": 1549551990, "answer_id": 54576316, "question_id": 54539981, "link": "https://stackoverflow.com/questions/54539981/pattern-matching-on-the-last-element-of-a-list/54576316#54576316", "title": "Pattern matching on the last element of a List", "body": "<p>If you have GHC 6.10 or newer, use a <a href=\"https://ghc.haskell.org/trac/ghc/wiki/ViewPatterns\" rel=\"nofollow noreferrer\">view pattern</a>.</p>\n\n<blockquote>\n  <p>View patterns permit calling the view function inside the pattern and\n  matching against the result:</p>\n  \n  <pre class=\"lang-hs prettyprint-override\"><code>size (view -&gt; Unit) = 1\nsize (view -&gt; Arrow t1 t2) = size t1 + size t2\n</code></pre>\n  \n  <p>That is, we add a new form of pattern, written</p>\n\n<pre><code>expression -&gt; pattern\n</code></pre>\n  \n  <p>that means \u201capply the expression to whatever we're trying to match\n  against, and then match the result of that application against the\n  pattern.\u201d The expression can be any Haskell expression of function\n  type, and view patterns can be used wherever patterns are currently\n  used.</p>\n</blockquote>\n\n<p>Define <code>head'</code> as</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>{-# LANGUAGE ViewPatterns #-}\n\nhead' :: [a] -&gt; a\nhead' (last -&gt; l) = l\n</code></pre>\n\n<p>It works as you expect.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>\u03bb&gt; head' [3,5,7]\n7\n\u03bb&gt; head' []\n*** Exception: Prelude.last: empty list\n</code></pre>\n"}], "owner": {"reputation": 2970, "user_id": 1298865, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/hOaaf.png?s=128&g=1", "display_name": "Nicolas Henin", "link": "https://stackoverflow.com/users/1298865/nicolas-henin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1132, "favorite_count": 1, "accepted_answer_id": 54576316, "answer_count": 6, "score": 4, "last_activity_date": 1549551990, "creation_date": 1549387762, "last_edit_date": 1549410661, "question_id": 54539981, "link": "https://stackoverflow.com/questions/54539981/pattern-matching-on-the-last-element-of-a-list", "title": "Pattern matching on the last element of a List", "body": "<p>we use <code>(x:xs)</code> to pattern match on the first element as in this example :</p>\n\n<pre><code>head' :: [a] -&gt; a  \nhead' xs = case xs of [] -&gt; error \"No head for empty lists!\"  \n                      (x:_) -&gt; x  \n</code></pre>\n\n<p>is there a way to pattern match on the last element ? </p>\n"}, {"tags": ["haskell", "syntax", "fold"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 2, "creation_date": 1549377535, "post_id": 54536718, "comment_id": 95874956, "body": "Once you&#39;ve made a type an instance of <code>Ord</code>, as you have here, you get a <code>maximum</code> function &quot;for free&quot;. So you don&#39;t need to implement your own. (If you want to for practice, you should probably use <code>foldr1</code> rather than just <code>foldr</code>, because it doesn&#39;t make a lot of sense to find the maximum of an empty list)."}, {"owner": {"reputation": 111, "user_id": 7036574, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/6c64c58d7a2241d71fce37ca79ded53b?s=128&d=identicon&r=PG&f=1", "display_name": "kalle konsida", "link": "https://stackoverflow.com/users/7036574/kalle-konsida"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549377883, "post_id": 54536718, "comment_id": 95875198, "body": "did not think about the maximum function, how nice! I&#39;ll use it instead of folding, but i&#39;ll leave the question up for future references on how to fold something like this correctly seeing how im unable to figure out what whent wrong.  @RobinZigmond much appreciated!"}], "answers": [{"comments": [{"owner": {"reputation": 111, "user_id": 7036574, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/6c64c58d7a2241d71fce37ca79ded53b?s=128&d=identicon&r=PG&f=1", "display_name": "kalle konsida", "link": "https://stackoverflow.com/users/7036574/kalle-konsida"}, "edited": false, "score": 0, "creation_date": 1549378671, "post_id": 54537037, "comment_id": 95875738, "body": "i mustve uploaded the wrong version of comparison because i originally passed a pair of Car as argument. But seeing your answer i understand that it wasn&#39;t a tuple pair it wanted. thx!"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 111, "user_id": 7036574, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/6c64c58d7a2241d71fce37ca79ded53b?s=128&d=identicon&r=PG&f=1", "display_name": "kalle konsida", "link": "https://stackoverflow.com/users/7036574/kalle-konsida"}, "edited": false, "score": 1, "creation_date": 1549378857, "post_id": 54537037, "comment_id": 95875854, "body": "You could define <code>comparison&#39; :: (Car, Car) -&gt; Car</code>, <code>comparison&#39; (car1, car2) = &lt;same definition as before&gt;</code>, but that&#39;s not idiomatic. (However, the two are isomorphic, as <code>comparison == curry comparison&#39;</code> and <code>comparison&#39; == uncurry comparison</code>.)"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1549379452, "post_id": 54537037, "comment_id": 95876229, "body": "just to clarify - I was referring to <code>maximum</code> in reference to what it seemed the OP was trying to implement with the <code>foldr</code>, to get the maximum of a list according to the defined ordering. Of course you&#39;re right to point out that the <code>comparison</code> shown here is just <code>uncurry max</code>"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1549380607, "post_id": 54537037, "comment_id": 95876998, "body": "Ah, OK. I assumed you made the same mistake I usually make, which is to confuse which of <code>maximum</code> and <code>max</code> takes a list (er, <code>Foldable</code>) and which takes two explicit values. :)"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549380777, "post_id": 54537037, "comment_id": 95877098, "body": "@RobinZigmond I&#39;ve edited my answer to try to put more accurate words in your mouth :)"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549380830, "post_id": 54537037, "comment_id": 95877140, "body": "@chepner - oh, I often do confuse them, but I did look up the <code>maximum</code> function before typing that, to check that I&#39;d got the right one (as well as that it automatically worked on any instance of <code>Ord</code>)"}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": true, "score": 3, "last_activity_date": 1549380736, "last_edit_date": 1549380736, "creation_date": 1549378229, "answer_id": 54537037, "question_id": 54536718, "link": "https://stackoverflow.com/questions/54536718/how-to-correctly-apply-the-foldr-function/54537037#54537037", "title": "how to correctly apply the foldr function", "body": "<p>The problem is the type and definition of <code>comparison</code>. </p>\n\n<p>First, the type should be <code>Car -&gt; Car -&gt; Car</code>: you take <em>two</em> <code>Car</code> values and return the bigger one.</p>\n\n<p>Second, your definition of <code>comparison</code> tries to match a <em>single</em> argument as a tuple, rather than two separate arguments. Drop the parentheses and the comma.</p>\n\n<pre><code>comparison :: Car -&gt; Car -&gt; Car\ncomparison car1 car2 = if car1 &gt; car2 then car1 else car2\n</code></pre>\n\n<p>(Of course, <code>comparison</code> is just <code>max</code> restricted to <code>Car</code> rather than <code>Ord a =&gt; a</code>.</p>\n\n<pre><code>comparison :: Car -&gt; Car -&gt; Car\ncomparison = max\n</code></pre>\n\n<p>And, as Robin Zigmond points out, <code>foldr comparison x</code> is basically <code>maximum</code> for an appropriate value <code>x</code>.)</p>\n"}, {"tags": [], "owner": {"reputation": 120535, "user_id": 123109, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/157c96de3d125abc1c363ff25c20dfaf?s=128&d=identicon&r=PG", "display_name": "Greg Bacon", "link": "https://stackoverflow.com/users/123109/greg-bacon"}, "is_accepted": false, "score": 1, "last_activity_date": 1549554625, "creation_date": 1549554625, "answer_id": 54577173, "question_id": 54536718, "link": "https://stackoverflow.com/questions/54536718/how-to-correctly-apply-the-foldr-function/54577173#54577173", "title": "how to correctly apply the foldr function", "body": "<p>Consider the simplified type of <code>foldr</code>.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b\n</code></pre>\n\n<p>This is a lot more general than you require because you\u2019re dealing with all Cars. That means to find the biggest <code>Car</code> with <code>foldr</code>, the type becomes</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>foldr :: (Car -&gt; Car -&gt; Car) -&gt; Car -&gt; [Car] -&gt; Car\n</code></pre>\n\n<p>The first argument is a function that selects between two Cars. In your case, you want <code>max</code> because its type</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>max :: Ord a =&gt; a -&gt; a -&gt; a\n</code></pre>\n\n<p>becomes</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>max :: Car -&gt; Car -&gt; Car\n</code></pre>\n\n<p>and matches exactly.</p>\n\n<p>The second argument to <code>foldr</code> is named <code>z</code> for zero. It is the seed for the folding process. For this, you may as well use the first element of your list, obtained with <code>head</code>.</p>\n\n<p>The list argument of type <code>[Car]</code> is obviously the list whose maximum you want to compute. You could pass the entire list, but the head is already accounted for as the <code>z</code> argument. Better would be <code>tail list</code>.</p>\n\n<p>Given the following list (after modifying <code>Car</code> to remove <code>tupleForm</code> and derive a <code>Show</code> instance)</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>cars = [ Car \"A\" 1 2, Car \"B\" 3 4, Car \"C\" 10 10 ]\n</code></pre>\n\n<p>finding the maximum with <code>foldr</code> is</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>\u03bb&gt; foldr max (head cars) (tail cars)\nCar {registration = \"C\", hour = 10, minute = 10}\n</code></pre>\n\n<p>Note that this application of <code>foldr</code> is equivalent to <code>maximum</code>, but you don\u2019t have to take my word for it. Adding</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>import Test.QuickCheck\n</code></pre>\n\n<p>to the top of your source file and then</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>prop_max :: [Car] -&gt; Property\nprop_max l =\n  not (null l) ==&gt;\n    maximum l == foldr max (head l) (tail l)\n\ninstance Arbitrary Car where\n  arbitrary = do\n    r &lt;- oneof $ map return [\"Apple\",\"Orange\",\"Banana\"]\n    h &lt;- choose (0,23)\n    m &lt;- choose (0,59)\n    return (Car r h m)\n</code></pre>\n\n<p>gives more confidence in the assertion.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>\u03bb&gt; quickCheck prop_max\n+++ OK, passed 100 tests.\n</code></pre>\n"}], "owner": {"reputation": 111, "user_id": 7036574, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/6c64c58d7a2241d71fce37ca79ded53b?s=128&d=identicon&r=PG&f=1", "display_name": "kalle konsida", "link": "https://stackoverflow.com/users/7036574/kalle-konsida"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 271, "favorite_count": 0, "accepted_answer_id": 54537037, "answer_count": 2, "score": 1, "last_activity_date": 1549554625, "creation_date": 1549377270, "last_edit_date": 1549378895, "question_id": 54536718, "link": "https://stackoverflow.com/questions/54536718/how-to-correctly-apply-the-foldr-function", "title": "how to correctly apply the foldr function", "body": "<p>Im attempting to find the max element of a list, where the elements are a data type created by myself, using a fold instead of doing it recursively. However i  end up with an error \"couldn't match type\". As im fairly new to haskell im having trouble seeing the problem and wish to know how to correctly apply the foldr function.</p>\n\n<p>My attempt at obtaining the largest elements looks like this:</p>\n\n<p>-- (foldr comparison (head list) (tail list))</p>\n\n<p>which won't compile. </p>\n\n<p>i have included the datatype and its instances for Eq and Ord, and i've also included the comparison function.</p>\n\n<pre><code> -- Car data type\n\n data Car = Car {registration :: String,\n                    hour :: Integer, \n                  minute :: Integer, \n               tupleForm :: PTime\n           }\n\n-- Equality comparison between Car data types\n-- reqiures equality by registration number, hours and minutes\n\ninstance Eq Car where \n     (Car r1 h1 m1 _) == (Car r2 h2 m2 _) = (r1 == r2) &amp;&amp; (((h1*60)+m1) == \n((h2*60)+m2))\n\n-- Order comparison between Car data types\n-- Compares time of two Cars , hours and minutes \n\ninstance Ord Car where \n     compare (Car _ h1 m1 _) (Car _ h2 m2 _) = compare ((h1*60)+m1) \n     ((h2*60)+m2)  \n\n\n-- Returns the larger Car\ncomparison :: (Car,Car) -&gt; Car\ncomparison(car1,car2) = if(car1 &gt; car2) then car1 else car2\n</code></pre>\n\n<p>My expected result after folding the list of Car is to obtain the 'largest car' ,which basically means the car with the largest time. But I end up with a compilation error due to faulty type.</p>\n"}, {"tags": ["haskell", "functional-programming", "monads"], "comments": [{"owner": {"reputation": 133611, "user_id": 152602, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7f370b4bd787fc68f9f62d9c6781cb79?s=128&d=identicon&r=PG", "display_name": "Lee", "link": "https://stackoverflow.com/users/152602/lee"}, "edited": false, "score": 2, "creation_date": 1549379739, "post_id": 54535513, "comment_id": 95876425, "body": "If you mean functions like <code>runState</code>, <code>runReader</code> etc. then no, these don&#39;t exist for all monads."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 4, "creation_date": 1549380007, "post_id": 54535513, "comment_id": 95876584, "body": "The various <code>run*</code> functions take a &quot;chain&quot; of functions linked together by <code>&gt;&gt;=</code>, and return the value produced by finally evaluating all the functions in order."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1549380106, "post_id": 54535513, "comment_id": 95876648, "body": "The &quot;generic&quot; signature can be seen as a T-algebra; taking a monadic value and &quot;extracting&quot; whatever value the wrapped code produces when finally evaluated. <code>&gt;&gt;=</code> typically doesn&#39;t do anything except build up a bigger chain of deferred code."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 6, "creation_date": 1549380316, "post_id": 54535513, "comment_id": 95876803, "body": "Often, the <code>run*</code> functions are no-ops, but merely expose the internal representation of the monad. E.g., <code>Reader r a</code> is a wrapper for <code>r -&gt; a</code> and <code>runReader</code> converts the former into the latter. The same applies for <code>Writer w a</code>, which wraps <code>(w, a)</code>, and for <code>State s a</code> which wraps <code>s -&gt; (s, a)</code>. After having built a (potentially long and complex) monadic computation, one uses <code>run*</code> to finally let that computation interact with the rest of the program which does not live under the same monad."}, {"owner": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1549380970, "post_id": 54535513, "comment_id": 95877226, "body": "@chi You should post that as an answer"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 507143, "user_id": 1048572, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/7f2c4de95e8f4f8f5a71c3aaf0ed312a?s=128&d=identicon&r=PG", "display_name": "Bergi", "link": "https://stackoverflow.com/users/1048572/bergi"}, "edited": false, "score": 0, "creation_date": 1549383736, "post_id": 54535513, "comment_id": 95878819, "body": "@Bergi Agreed. Cubic&#39;s answer below already covers my point above, so I lazily upvoted that instead :)"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 2, "creation_date": 1549384868, "post_id": 54535513, "comment_id": 95879458, "body": "You might also like <a href=\"https://stackoverflow.com/questions/9458700/what-are-all-of-the-monad-naming-conventions/9458784#9458784\" title=\"what are all of the monad naming conventions\">stackoverflow.com/questions/9458700/&hellip;</a>"}], "answers": [{"tags": [], "owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "is_accepted": true, "score": 13, "last_activity_date": 1549390245, "last_edit_date": 1549390245, "creation_date": 1549381477, "answer_id": 54538082, "question_id": 54535513, "link": "https://stackoverflow.com/questions/54535513/intuition-for-run-function-of-monads/54538082#54538082", "title": "Intuition for &quot;run&quot; function of monads", "body": "<p>The <code>run</code> function for most monads is actually just an artifact of how the monad is internally represented; For example, the <code>Reader</code> monad could theoretically be represented as just</p>\n\n<pre><code>type Reader r a = r -&gt; a\n</code></pre>\n\n<p><code>State</code> as </p>\n\n<pre><code>type State s a = s -&gt; (s, a)\n</code></pre>\n\n<p>and so on. However, if we did that then we couldn't provide different typeclass (including <code>Monad</code>) implementations for <code>Reader</code> and <code>State</code> as they'd both just be represented by <code>(-&gt;)</code>.</p>\n\n<p>-- that is, if we wrote</p>\n\n<pre><code>instance Functor (Reader r)\n  -- ....\n</code></pre>\n\n<p>and</p>\n\n<pre><code>instance Functor (State s)\n  -- ...\n</code></pre>\n\n<p>our compiler would complain we're trying to give two different <code>Functor</code> implementations for <code>(-&gt;) a</code>.</p>\n\n<p>So instead of <code>type</code> we just more or less write the same thing with <code>newtype</code>, e.g. </p>\n\n<pre><code>newtype Reader r a = Reader { runReader :: r -&gt; a }\n</code></pre>\n\n<p>or </p>\n\n<pre><code>newtype State s a = State { runState :: s -&gt; (s, a)}\n</code></pre>\n\n<p>As you can see, the <code>run</code> functions don't actually <em>do</em> anything here, they just \"unwrap\" the newtype so we can get the underlying value.</p>\n\n<p>(actual implementations may involve monad transformers and therefore look a bit more complicated, but they're essentially still doing the same thing).</p>\n"}], "owner": {"reputation": 479, "user_id": 9903901, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "jack malkovick", "link": "https://stackoverflow.com/users/9903901/jack-malkovick"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 259, "favorite_count": 0, "accepted_answer_id": 54538082, "answer_count": 1, "score": 8, "last_activity_date": 1549390245, "creation_date": 1549373225, "last_edit_date": 1549380008, "question_id": 54535513, "link": "https://stackoverflow.com/questions/54535513/intuition-for-run-function-of-monads", "title": "Intuition for &quot;run&quot; function of monads", "body": "<p>I'm learning about monads in Haskell, I understood why they are useful, I understood in general what bind, join, return do.</p>\n\n<p>I also looked at basic usage examples for the basic reader / writer / state / list / maybe monads.</p>\n\n<p>Still, being a beginner, I still don't feel I have a grip on what the \"run\" function (e.g. runState, runReader, runWriter) mean in general. It does not seem to have a generic signature like the above functions, and I don't get it if it's definable / makes sense for all monads.</p>\n"}, {"tags": ["java", "oop", "haskell", "functional-programming", "type-theory"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1549375186, "post_id": 54531039, "comment_id": 95873593, "body": "As far as typing is concerned, a class <i>is</i> a (wrapper around a) product type, the constituent types being the types of the class&#39;s attributes. However, unless you make heavy use of enumerated types, cardinality won&#39;t help you much. Built-in types like <code>int</code> and <code>string</code> have infinite cardinality (effectively, anyway; if you are using this technique, knowing that the cardinality of <code>int</code> is ~4 billion won&#39;t be terribly useful.)"}], "answers": [{"tags": [], "owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "is_accepted": false, "score": 3, "last_activity_date": 1549364278, "last_edit_date": 1549364278, "creation_date": 1549363878, "answer_id": 54532760, "question_id": 54531039, "link": "https://stackoverflow.com/questions/54531039/analyzing-cardinality-of-types-in-java-oop/54532760#54532760", "title": "Analyzing cardinality of types in Java/OOP", "body": "<p>You can translate those concepts to OOP languages like (I suppose) Java or C#. Some concepts have quite verbose translations, but I cover some of them <a href=\"http://blog.ploeh.dk/2018/01/08/software-design-isomorphisms\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>Product types are just your normal <a href=\"https://martinfowler.com/bliki/ValueObject.html\" rel=\"nofollow noreferrer\">Value Objects</a>. Sum types are more tricky.</p>\n\n<p>Consider the <code>Height</code> type from <a href=\"https://guide.elm-lang.org/appendix/types_as_sets.html\" rel=\"nofollow noreferrer\">the page linked to in the OP</a>. You can <a href=\"http://blog.ploeh.dk/2018/05/22/church-encoding\" rel=\"nofollow noreferrer\">Church encode</a> it in C# like this:</p>\n\n<pre><code>public interface IHeight\n{\n    T Match&lt;T&gt;(Func&lt;int, T&gt; inches, Func&lt;float, T&gt; meters);\n}\n</code></pre>\n\n<p>This also requires two classes that implement this interface.</p>\n\n<p>It turns out that Church encoding of sum types is <a href=\"http://blog.ploeh.dk/2018/06/25/visitor-as-a-sum-type\" rel=\"nofollow noreferrer\">equivalent to the Visitor design pattern</a>, so you could also define the <em>Height</em> sum type as a Visitor:</p>\n\n<pre><code>public interface IHeight\n{\n    T Accept&lt;T&gt;(IHeightVisitor&lt;T&gt; visitor);\n}\n</code></pre>\n\n<p>where <code>IHeightVisitor&lt;T&gt;</code> looks like this:</p>\n\n<pre><code>public interface IHeightVisitor&lt;T&gt;\n{\n    T VisitInches(int inches);\n\n    T VisitMeters(float meters);\n}\n</code></pre>\n\n<p>One of the implementations of <code>IHeight</code> ought to be this one:</p>\n\n<pre><code>public sealed class Inches : IHeight\n{\n    private readonly int inches;\n\n    public Inches(int inches)\n    {\n        this.inches = inches;\n    }\n\n    public T Accept&lt;T&gt;(IHeightVisitor&lt;T&gt; visitor)\n    {\n        return visitor.VisitInches(inches);\n    }\n}\n</code></pre>\n\n<p>You'll also need another implementation, the <code>Meters</code> class, but I'll leave that as an exercise (hint: it looks a lot like <code>Inches</code>).</p>\n\n<p>To be clear, something like the <code>IHeight</code> interface really ought to be an implementation detail. Here, however, I use it to 'show my work'. You should probably encapsulate the implementation so that no-one gets funny ideas about implementing that interface. Here's <a href=\"http://blog.ploeh.dk/2018/06/11/church-encoded-either/#b001f5b4b4cb4b09a13d14063d4c542e\" rel=\"nofollow noreferrer\">an example of how you might do that with <em>Either</em></a>.</p>\n"}], "owner": {"reputation": 441, "user_id": 7919572, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c7180a29a1e3cbca63bc706c4c7414a6?s=128&d=identicon&r=PG&f=1", "display_name": "Marc", "link": "https://stackoverflow.com/users/7919572/marc"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 295, "favorite_count": 0, "closed_date": 1549364947, "answer_count": 1, "score": 1, "last_activity_date": 1549374494, "creation_date": 1549358297, "last_edit_date": 1549374494, "question_id": 54531039, "link": "https://stackoverflow.com/questions/54531039/analyzing-cardinality-of-types-in-java-oop", "closed_reason": "Needs more focus", "title": "Analyzing cardinality of types in Java/OOP", "body": "<p>In languages like Haskell, Purescript and Elm it can be powerful to think of types as sets, described <a href=\"https://guide.elm-lang.org/appendix/types_as_sets.html\" rel=\"nofollow noreferrer\">here</a>. This tool helps you pick which data structure best fits for your problem. It also allows you to analyze how many impossible states there are.</p>\n\n<p>Is it possible to take this idea and transfer it to procedural OOP languages, like Java, to analyze if impossible states are impossible? If so, how would that look?</p>\n\n<p>EDIT: Cardinality of types gives us the number of possible values a type can represent. In FP, good practice is to model the types according to the data. By calculating cardinality we can then check if it is possible for our program to represent invalid data. If the cardinality of the data structure is higher than the amount of possible data/states it should hold, the data structure allows us to represent invalid data.</p>\n\n<p>Contrast this to OOP. In OOP we do not model after types but rather after objects containing attributes and methods representing the real world. Is there a similar way in OOP we can analyze the amount of possible instances of an object to check if that object can contain invalid data? I suspect that objects might be too general for such analysis to be made.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 1, "creation_date": 1549356741, "post_id": 54530534, "comment_id": 95862730, "body": "Use <code>do</code>-notation: <code>do {x &lt;- [1..5]; y &lt;- [1..5]; [Position 1 1, Position x y]}</code>"}, {"owner": {"reputation": 71, "user_id": 7570932, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/23add5c10f0dbb29f74a2e48372955c7?s=128&d=identicon&r=PG&f=1", "display_name": "ckloan", "link": "https://stackoverflow.com/users/7570932/ckloan"}, "reply_to_user": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1549357207, "post_id": 54530534, "comment_id": 95862969, "body": "Wow awesome that works thanks!!! I will read up about do, just started learning Haskell"}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 1, "creation_date": 1549380912, "post_id": 54530534, "comment_id": 95877196, "body": "@ckloan Might be worth knowing that in this particular case, the <code>do</code> notation is just a fancy way of writing this: <code>concatMap (\\x -&gt; concatMap (\\y -&gt; [Position x y, Position y x]) [1..5]) [1..5]</code>, where <code>concatMap</code> is literally just <code>concat</code> (turn a lists of lists into a list, i.e. <code>[[a]] -&gt; [a]</code>) and <code>map</code>"}], "answers": [{"tags": [], "owner": {"reputation": 71, "user_id": 7570932, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/23add5c10f0dbb29f74a2e48372955c7?s=128&d=identicon&r=PG&f=1", "display_name": "ckloan", "link": "https://stackoverflow.com/users/7570932/ckloan"}, "is_accepted": true, "score": 1, "last_activity_date": 1549357279, "creation_date": 1549357279, "answer_id": 54530788, "question_id": 54530534, "link": "https://stackoverflow.com/questions/54530534/how-to-create-multiple-different-custom-types-with-list-comprehension/54530788#54530788", "title": "How to create multiple / different custom types with list comprehension?", "body": "<p>Solution provided by AJFarmar using do notation : </p>\n\n<pre><code>    do {x &lt;- [1..5]; y &lt;- [1..5]; [Position 1 1, Position x y]}\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 4, "creation_date": 1549389499, "post_id": 54532412, "comment_id": 95881985, "body": "If you&#39;re already in a list comprehension, I find <code>[v | ..., v &lt;- e]</code> cleaner than <code>concat [e | ...]</code>."}], "tags": [], "owner": {"reputation": 2350, "user_id": 10033674, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bbU6P.jpg?s=128&g=1", "display_name": "Karol Samborski", "link": "https://stackoverflow.com/users/10033674/karol-samborski"}, "is_accepted": false, "score": 5, "last_activity_date": 1549362734, "creation_date": 1549362734, "answer_id": 54532412, "question_id": 54530534, "link": "https://stackoverflow.com/questions/54530534/how-to-create-multiple-different-custom-types-with-list-comprehension/54532412#54532412", "title": "How to create multiple / different custom types with list comprehension?", "body": "<p>You've got two possibilities:</p>\n\n<ol>\n<li><p>return a list of lists of positions:</p>\n\n<pre><code>[ [Position  x y, Position x y] | x&lt;- [1..5] , y&lt;-[1..5]]\n</code></pre>\n\n<p>and then you can merge them into single list using <code>concat</code>:</p>\n\n<pre><code>concat [ [Position  x y, Position x y] | x&lt;- [1..5] , y&lt;-[1..5]]\n</code></pre></li>\n<li><p>Just use <code>do</code> notation:</p>\n\n<pre><code>do\n  x &lt;- [1..5]\n  y &lt;- [1..5]\n  [ Position 1 1, Position x y]\n</code></pre></li>\n</ol>\n"}], "owner": {"reputation": 71, "user_id": 7570932, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/23add5c10f0dbb29f74a2e48372955c7?s=128&d=identicon&r=PG&f=1", "display_name": "ckloan", "link": "https://stackoverflow.com/users/7570932/ckloan"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 0, "accepted_answer_id": 54530788, "answer_count": 2, "score": 3, "last_activity_date": 1549362734, "creation_date": 1549356230, "question_id": 54530534, "link": "https://stackoverflow.com/questions/54530534/how-to-create-multiple-different-custom-types-with-list-comprehension", "title": "How to create multiple / different custom types with list comprehension?", "body": "<p>So I want to calculate all the possible moves for a chess like game. While I calculate them, I want to store them in a special data structure, so it will be easy to output all the moves as a string of the form (Stepts, Start, End)\nOne example for a move would be \"2, 1-1, 3-1\"  With a step size of 2 we went from 1-1 to 3-1. </p>\n\n<p>For this, I created custom data types and want to create multiple instances of them during a list comprehension and construct different data types at the same time. \nSo far I am not sure, how to fix the syntax or if this even is possible in Haskell.</p>\n\n<p>So far I was able to create 1 custom data type in a list comprehension, like this :</p>\n\n<pre><code>    [ Position  x y | x&lt;- [1..5] , y&lt;-[1..5]] \n</code></pre>\n\n<p>But I want to create multiple positions during one list comprehension, I would assume it would be:</p>\n\n<pre><code>    [ Position  x y, Position x y | x&lt;- [1..5] , y&lt;-[1..5]] \n</code></pre>\n\n<p>But that results in :</p>\n\n<pre><code>    error: parse error on input \u2018|\u2019\n</code></pre>\n\n<p>This is how I defined my custom types : </p>\n\n<pre><code>    data Move = Move{  steps:: Int\n                 , start:: Position\n                 , end  :: Position\n                 } deriving (Read, Show, Eq)\n\n    data Position = Position{\n                x_pos:: Int\n                , y_pos  :: Int\n                } deriving (Read, Show, Eq)\n</code></pre>\n\n<p>In the end I would like to do something like this : </p>\n\n<pre><code>    [ Move(x, Position  1 1, Position x y ) | x&lt;- [1..5] , y&lt;-[1..5]] \n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549358780, "post_id": 54529273, "comment_id": 95863858, "body": "The algorithm seems ok to me - not particularly efficient, so it may well run for ages, but the values you&#39;ve printed out seem to be correct (at least those I&#39;ve checked), and there&#39;s no way <code>s</code> should be an infinite lift. I&#39;ll try testing it myself in ghci if no-one has come up with an explanation by then, but it&#39;ll have to wait till I&#39;m at home tonight. [PS for the sake of speed you might just want to find a list of all primes less than 1000 and hard-code that as <code>lp</code>.]"}, {"owner": {"reputation": 318, "user_id": 10499685, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-dSTWSYtwXak/AAAAAAAAAAI/AAAAAAAAApg/9byGAwiHu1c/photo.jpg?sz=128", "display_name": "Meowcolm Law", "link": "https://stackoverflow.com/users/10499685/meowcolm-law"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549359258, "post_id": 54529273, "comment_id": 95864141, "body": "@RobinZigmond thanks, I find that the function, if I set the func <code>f n =  head [x | x &lt;- [ceiling(logBase 10 (fromIntegral n))..], 10^x `mod` n == 1]</code> gives an output if I directly input a prime number like <code>f 89</code>, but it cannot work if replace it with <code>f (lp !! 20)</code>"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549473642, "post_id": 54529273, "comment_id": 95917850, "body": "@RobinZigmond check out my edit to the answer; not all results were correct, this is how I realized there was some wrap-around arithmetic going on. it wasn&#39;t extremely slow, took a few seconds to produce the full list up to 1000."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549473742, "post_id": 54529273, "comment_id": 95917903, "body": "@MeowcolmLaw it worked with <code>89</code> because it interpeted <code>89</code> as a <a href=\"https://stackoverflow.com/a/54491443/849891\">polymorphic literal</a> of type <code>Num a =&gt; a</code>, and defaulted to <code>Integer</code>."}, {"owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "edited": false, "score": 0, "creation_date": 1551115562, "post_id": 54529273, "comment_id": 96513554, "body": "I get frustrated with Haskell typing sometimes. Usually the fix is quick with <code>fromIntegral</code> but not here. I got this to work by eliminating the use of <code>n</code>  with <code>[ (n,x) |    i &lt;- [n],   x &lt;- [(ceiling.logBase 10 $ fromIntegral i)..], mod (10^x) i == 1 ]</code> Use the <code>i</code> in place of <code>n</code>. You could use <code>let</code> but it would be less compact."}], "answers": [{"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": true, "score": 5, "last_activity_date": 1549442562, "last_edit_date": 1549442562, "creation_date": 1549361532, "answer_id": 54531996, "question_id": 54529273, "link": "https://stackoverflow.com/questions/54529273/euler-26-in-haskell/54531996#54531996", "title": "Euler 26 in Haskell", "body": "<p><code>Int</code> is not  a good choice here, since you operate pretty big numbers, with the <code>10^x</code>. <code>Int</code> is <code>Bounded</code>, so wraps around past its upper bound:</p>\n\n<pre><code>&gt; maxBound :: Int\n9223372036854775807\n\n&gt; (maxBound :: Int) + 1\n-9223372036854775808\n</code></pre>\n\n<p>Omitting the signature for <code>isPrime</code> altogether, we get</p>\n\n<pre><code>&gt; :t lp\nlp :: Integral b =&gt; [b]\n</code></pre>\n\n<p>Trying</p>\n\n<pre><code>&gt; map (\\n -&gt; (n, head [x | x &lt;- [ceiling(logBase 10 (fromIntegral n))..],\n                           10^x `mod` n == 1])) \n      (lp :: [Int])\n[(7,6),(11,2),(13,6),(17,16),(19,18),(23,45),(29,23),(31,15),(37,3),(41,5),(43,63),\n (47,Interrupted.\n</code></pre>\n\n<p>we see that your calculation gets stuck on <code>47</code>. But using <code>[Integer]</code> (or nothing at all, so it defaults to <code>Integer</code> by itself), we successfully get the full result. You just misinterpret it. Re-read the problem statement, and you'll see.</p>\n\n<p><sub>(also, the answer for 43 in the above snippet is incorrect, while those for 7, 11, 13 are correct. Getting wrong results for bigger numbers is a strong signal that we have some integer wrap-around arithmetic errors going on; and that's how I found it out).</sub></p>\n"}], "owner": {"reputation": 318, "user_id": 10499685, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-dSTWSYtwXak/AAAAAAAAAAI/AAAAAAAAApg/9byGAwiHu1c/photo.jpg?sz=128", "display_name": "Meowcolm Law", "link": "https://stackoverflow.com/users/10499685/meowcolm-law"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 151, "favorite_count": 0, "accepted_answer_id": 54531996, "answer_count": 1, "score": 1, "last_activity_date": 1549442562, "creation_date": 1549350581, "question_id": 54529273, "link": "https://stackoverflow.com/questions/54529273/euler-26-in-haskell", "title": "Euler 26 in Haskell", "body": "<p>I'm trying to solve problem <a href=\"https://projecteuler.net/problem=26\" rel=\"nofollow noreferrer\">#26</a> from Project Euler in Haskell, but I have encountered some problems.</p>\n\n<p>I've managed to figure out that the recurring cycle of the reciprocal is only related to its prime divisors, so I think I just need to find out a reciprocal of a prime number with the longest recurring cycle. So I wrote a algorithm in Haskell:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>isPrime :: Int -&gt; Bool\nisPrime k\n    | k &lt;= 1    = error \"Seriously?\"\n    | otherwise = null [ x | x &lt;- [2..floor(sqrt(fromIntegral k))], k `mod` x == 0]\n\nlp = [x | x &lt;- [7..1000], isPrime x]\n\ns = map (\\n -&gt; head [x | x &lt;- [ceiling(logBase 10 (fromIntegral n))..], 10^x `mod` n == 1]) lp\n\nmain::IO()\nmain = print $ maximum s\n</code></pre>\n\n<p>However, it cannot produce an answer. I have tried using the lamda, which could produce the digits of recurring cycle, with a few prime numbers and I manage to get the right count of digits (I hope there would be no problem with the algorithm). I have also checked the output of the list <code>s</code>, which produced <code>[6,2,6,16,18,45,23,15,3,5,63,</code> without an end. I have no idea why it is the case, since if I manually apply the function to each prime number I can get the right output.</p>\n\n<p>Can anybody tell me what is wrong with my code, or is my way of solving it turns out to be wrong? Thanks.</p>\n"}, {"tags": ["haskell", "ghc", "ghci"], "comments": [{"owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "edited": false, "score": 3, "creation_date": 1549341263, "post_id": 54527596, "comment_id": 95857316, "body": "Can you describe what the function should do? Like, what would be the output of <code>lstDelete &quot;foo&quot; (LstNode (Just 42))</code>?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1549392542, "post_id": 54527596, "comment_id": 95883443, "body": "What is <code>Map.delete</code>? <code>Map.fromList</code>? <code>lstIsEmpty</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 15567, "user_id": 3656904, "user_type": "registered", "accept_rate": 67, "profile_image": "https://www.gravatar.com/avatar/c8dbd58d3b477ad0e5889bc60625e7e8?s=128&d=identicon&r=PG&f=1", "display_name": "talex", "link": "https://stackoverflow.com/users/3656904/talex"}, "is_accepted": false, "score": 9, "last_activity_date": 1549341931, "creation_date": 1549341931, "answer_id": 54527785, "question_id": 54527596, "link": "https://stackoverflow.com/questions/54527596/couldnt-bind-char-with-actual-type-maybe-a/54527785#54527785", "title": "Couldn&#39;t bind [Char] with actual type (Maybe a)", "body": "<p>There is several problem with your code:</p>\n\n<ol>\n<li>Constructors names should start with capital letter.</li>\n</ol>\n\n<pre><code>    data Lst a = LstNode (Maybe a)\n</code></pre>\n\n<ol start=\"2\">\n<li><p>Your list can contain only one value</p></li>\n<li><p><code>lstDelete</code> doesn't make any sense. It accept <code>[Char]</code> as key and <code>Lst a</code> as list. There is no way to compare them (there is no nontrivial function that can accept those parameters). You should either change type to</p></li>\n</ol>\n\n<pre><code>   lstDelete :: [Char] -&gt; Lst [Char] -&gt; Lst [Char]\n</code></pre>\n\n<p>or write more generic</p>\n\n<pre><code>   lstDelete :: Eq a =&gt; a -&gt; Lst a -&gt; Lst a\n</code></pre>\n\n<ol start=\"4\">\n<li><code>Map.fromList</code> accepts <code>[(k, v)]</code>, you can't pass <code>Lst a</code> to it.</li>\n<li><code>lstIsEmpty</code> is not defined.</li>\n</ol>\n"}], "owner": {"reputation": 14927, "user_id": 2719875, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ae764a4524119ce0d93e7d8f0ee2356c?s=128&d=identicon&r=PG&f=1", "display_name": "user2719875", "link": "https://stackoverflow.com/users/2719875/user2719875"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 62, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1549341931, "creation_date": 1549339905, "question_id": 54527596, "link": "https://stackoverflow.com/questions/54527596/couldnt-bind-char-with-actual-type-maybe-a", "title": "Couldn&#39;t bind [Char] with actual type (Maybe a)", "body": "<p>So I have this:</p>\n\n<pre><code>lstDelete :: [Char] -&gt; Lst a -&gt; Lst a\nlstDelete k inp@(lstNode key)\n    | k == key &amp;&amp; lstIsEmpty = Map.delete key (Map.fromList inp)\n</code></pre>\n\n<p>The problem is, k is of type [Char], and key is of type (Maybe a):</p>\n\n<pre><code>data Lst a = lstNode (Maybe a)\n</code></pre>\n\n<p>So I'm getting the error saying:</p>\n\n<pre><code>Couldn't match expected type \u2018[Char]\u2019 with actual type \u2018Maybe a\u2019\n</code></pre>\n\n<p>How can I fix this without changing <code>lstDelete :: [Char] -&gt; Lst a -&gt; Lst a</code>? I also want to keep the <code>Maybe a</code> since I want it to be able to be empty too.</p>\n"}, {"tags": ["haskell", "ghc", "ghci"], "comments": [{"owner": {"reputation": 2139, "user_id": 465100, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/debe4d3217980e495cf1f15e7e4b4c9f?s=128&d=identicon&r=PG", "display_name": "Artem Pelenitsyn", "link": "https://stackoverflow.com/users/465100/artem-pelenitsyn"}, "edited": false, "score": 0, "creation_date": 1549338200, "post_id": 54527244, "comment_id": 95856757, "body": "It is correct. Please, check the syntax yourself on any online programming platform, e.g. ideone.com"}], "answers": [{"comments": [{"owner": {"reputation": 14927, "user_id": 2719875, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ae764a4524119ce0d93e7d8f0ee2356c?s=128&d=identicon&r=PG&f=1", "display_name": "user2719875", "link": "https://stackoverflow.com/users/2719875/user2719875"}, "edited": false, "score": 0, "creation_date": 1549338711, "post_id": 54527442, "comment_id": 95856845, "body": "Thank you for the tips. (I left out k == key since that information wasn&#39;t required for the answer, but thanks for pointing it out too)"}], "tags": [], "owner": {"reputation": 66224, "user_id": 180286, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/tAXU2.jpg?s=128&g=1", "display_name": "Fyodor Soikin", "link": "https://stackoverflow.com/users/180286/fyodor-soikin"}, "is_accepted": true, "score": 3, "last_activity_date": 1549338655, "last_edit_date": 1549338655, "creation_date": 1549338181, "answer_id": 54527442, "question_id": 54527244, "link": "https://stackoverflow.com/questions/54527244/checking-multiple-conditions-in-a-case/54527442#54527442", "title": "Checking multiple conditions in a case", "body": "<p>This is the correct syntax, but you can also simplify it a bit.</p>\n\n<p>First, observe that the expression <code>x == True</code> is equivalent to just <code>x</code>. So you can drop the <code>== True</code>.</p>\n\n<p>Second, the <code>== False</code> part is not necessary at all. This is because by the time you get around to checking that case, it is already known that <code>isEmpty right == False</code>, because if it wasn't, you would have stopped on the previous case.</p>\n\n<p>So, the whole thing can be written like this:</p>\n\n<pre><code>mybstInsert k inp@(INode left key right)\n    | k &lt; key = myNode (mybstInsert k left) key right\n    | k &gt; key &amp;&amp; isEmpty right = myNode left key (mybstInsert k right)\n    | k &gt; key = myNode left key (mybstInsert k right)\n</code></pre>\n\n<p>Finally, I'd like to point out that you're not handling the case of <code>k == key</code>, so you program would crash on such input. If you wanted to include that case (and I'm assuming it would just be a no-op), then you don't have to include even the <code>k &gt; key</code> check, because by that time it would already be known that neither <code>k == key</code> nor <code>k &lt; key</code> is true:</p>\n\n<pre><code>mybstInsert k inp@(INode left key right)\n    | k == key = inp\n    | k &lt; key = myNode (mybstInsert k left) key right\n    | isEmpty right = myNode left key (mybstInsert k right)\n    | otherwise = myNode left key (mybstInsert k right)\n</code></pre>\n"}], "owner": {"reputation": 14927, "user_id": 2719875, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/ae764a4524119ce0d93e7d8f0ee2356c?s=128&d=identicon&r=PG&f=1", "display_name": "user2719875", "link": "https://stackoverflow.com/users/2719875/user2719875"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 65, "favorite_count": 0, "accepted_answer_id": 54527442, "answer_count": 1, "score": -1, "last_activity_date": 1549404712, "creation_date": 1549336085, "last_edit_date": 1549404712, "question_id": 54527244, "link": "https://stackoverflow.com/questions/54527244/checking-multiple-conditions-in-a-case", "title": "Checking multiple conditions in a case", "body": "<p>Suppose I have this (inserting into a BST):</p>\n\n<pre><code>mybstInsert k inp@(INode left key right)\n    | k &lt; key = myNode (mybstInsert k left) key right\n    | k &gt; key = myNode left key (mybstInsert k right)\n</code></pre>\n\n<p>What I want is, in the second condition, I want another check as well (checking if right is empty or not). So I want to break the second condition down into two conditions:</p>\n\n<pre><code>| k &gt; key &amp;&amp; isEmpty right == True = myNode left key (mybstInsert k right)\n| k &gt; key &amp;&amp; isEmpty right == False = myNode left key (mybstInsert k right)\n</code></pre>\n\n<p>Assuming I have an isEmpty function that takes a subtree and tells me if it is empty or not.</p>\n\n<p>What would be the recommended way to do this? Is this the correct syntax? (I'm working on a computer that does not have GHCi installed so I cannot check the syntax.</p>\n"}, {"tags": ["haskell", "liquid-haskell"], "comments": [{"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1549315848, "post_id": 54522261, "comment_id": 95851634, "body": "I think you need a spec file that defines some required axioms of Data.Text. I doubt liquidhaskell knows anything about Data.Text, for example <code>fromString</code> might not even be injective.  Unfortunately I&#39;m still digging to find out what exactly a spec file is and how to use it (I just started playing with LH today, so don&#39;t despair)"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1549317549, "post_id": 54522261, "comment_id": 95852308, "body": "Some things are said about specs and assumptions in <a href=\"http://ucsd-progsys.github.io/liquidhaskell-tutorial/04-poly.html\" rel=\"nofollow noreferrer\">part 4 of the tutorial</a>."}, {"owner": {"reputation": 315, "user_id": 10553912, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9f00c8ffb0cb3b02b08b70ce031bd004?s=128&d=identicon&r=PG&f=1", "display_name": "racherb", "link": "https://stackoverflow.com/users/10553912/racherb"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1549329450, "post_id": 54522261, "comment_id": 95855269, "body": "@luqui, Indeed, a file-level specification &quot;include/Data/String.spec&quot; must be declared, I contacted Ranjit Jhala and suggested creating a PR with this refinement in the function &quot;Data.String.fromString&quot;. At the moment, the LH statement &quot;{-@ assume Data.String.fromString :: x:_ -&gt; {v:_ | v ~~ x} @-}&quot; is sufficient. I prefer this option because it does not require altering the native haskell code."}], "answers": [{"comments": [{"owner": {"reputation": 315, "user_id": 10553912, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9f00c8ffb0cb3b02b08b70ce031bd004?s=128&d=identicon&r=PG&f=1", "display_name": "racherb", "link": "https://stackoverflow.com/users/10553912/racherb"}, "edited": false, "score": 0, "creation_date": 1549330162, "post_id": 54524542, "comment_id": 95855394, "body": "this answer is also correct, however, an option that does not alter the original Haskell code is preferable. Thank you very much."}], "tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 3, "last_activity_date": 1549315663, "creation_date": 1549315663, "answer_id": 54524542, "question_id": 54522261, "link": "https://stackoverflow.com/questions/54522261/a-simple-case-where-liquidhaskell-works-well-on-the-type-data-string-but-not-o/54524542#54524542", "title": "A simple case where LiquidHaskell works well on the type &quot;Data.String&quot; but not on the type &quot;Data.Text&quot;", "body": "<p>Liquid Haskell works by exploiting primitive Haskell constructors. The <code>String</code> code is sugar for</p>\n\n<pre><code>{-@ strOk :: NoRouteToHimself @-}\nstrOk :: (String, String)\nstrOk = (,) ('A':'A':[]) ('A':'B':[])\n</code></pre>\n\n<p>and Liquid Haskell knows how to unravel / recurse those constructors away. But <code>Data.Text</code> is not defined in terms of Haskell constructors, rather it uses an opaque conversion function \u2013 the <code>-XOverloadedStrings</code> extension inserts it:</p>\n\n<pre><code>{-@ foo :: NoRouteToHimself @-}\nfoo :: (Tx.Text, Tx.Text)\nfoo = (Tx.pack \"AA\", Tx.pack \"AB\")\n</code></pre>\n\n<p>Here, Liquid Haskell doesn't know how <code>Tx.pack</code> works, whether it yields anything deconstructible in its output. A simpler example where it also doesn't succeed is (without <code>-XOverloadedStrings</code>)</p>\n\n<pre><code>{-@ foo :: NoRouteToHimself @-}\nfoo' :: (String, String)\nfoo' = (reverse \"AA\", reverse \"AB\")\n</code></pre>\n\n<p>To make this work, LH would need to know at least that <code>Tx.pack</code> and <code>reverse</code> are injective. I don't know enough about LH to tell if it's possible to achive that. Perhaps forcing it to inline the conversion function would do the trick. Short of that, the only option would be to NF the value and call the actual <code>==</code> operator on it \u2013 which would work fine in this particular case, but would be impossible for the non-trivial use cases that LH is actually supposed to do.</p>\n"}, {"comments": [{"owner": {"reputation": 315, "user_id": 10553912, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9f00c8ffb0cb3b02b08b70ce031bd004?s=128&d=identicon&r=PG&f=1", "display_name": "racherb", "link": "https://stackoverflow.com/users/10553912/racherb"}, "edited": false, "score": 0, "creation_date": 1549329927, "post_id": 54526327, "comment_id": 95855355, "body": "The answer is correct, however, the declaration of denot is not necessary. <i>{-@ assume Data.String.fromString :: x:_ -&gt; {v:_ | v ~~ x} @-}</i> is sufficient."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 315, "user_id": 10553912, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9f00c8ffb0cb3b02b08b70ce031bd004?s=128&d=identicon&r=PG&f=1", "display_name": "racherb", "link": "https://stackoverflow.com/users/10553912/racherb"}, "edited": false, "score": 0, "creation_date": 1549331009, "post_id": 54526327, "comment_id": 95855557, "body": "@RacielH, interesting, now you are teaching me.  What is <code>~~</code> ?"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 315, "user_id": 10553912, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9f00c8ffb0cb3b02b08b70ce031bd004?s=128&d=identicon&r=PG&f=1", "display_name": "racherb", "link": "https://stackoverflow.com/users/10553912/racherb"}, "edited": false, "score": 1, "creation_date": 1549331548, "post_id": 54526327, "comment_id": 95855679, "body": "@RacielH, oh, from a little research, it looks like <code>~~</code> is supposed to be heterogeneous equality.  This makes me uncomfortable, I guess I feel like although <code>fromString s</code> <i>represents</i> <code>s</code>, they are still not <i>equal</i>.  However I can&#39;t come up with an example of a contradiction, and it may well be consistent as long as <code>fromString</code> is injective.  But to me this needs to be justified -- the assumption you have given here feels very strong and should be handled carefully."}, {"owner": {"reputation": 315, "user_id": 10553912, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9f00c8ffb0cb3b02b08b70ce031bd004?s=128&d=identicon&r=PG&f=1", "display_name": "racherb", "link": "https://stackoverflow.com/users/10553912/racherb"}, "edited": false, "score": 0, "creation_date": 1549420847, "post_id": 54526327, "comment_id": 95892406, "body": "Hi, @luqui. I understand your concern. If you look closely at LH the ~~ operator is widely used, for example, the specification of -- include/GHC/CString.spec includes this operator as well.  Heterogeneous equality is available in GHC and is used when you are not sure that the types being compared are the same. Now, your question is very interesting considering the safety of type refinement in LH."}], "tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": true, "score": 6, "last_activity_date": 1549327699, "last_edit_date": 1549327699, "creation_date": 1549326961, "answer_id": 54526327, "question_id": 54522261, "link": "https://stackoverflow.com/questions/54522261/a-simple-case-where-liquidhaskell-works-well-on-the-type-data-string-but-not-o/54526327#54526327", "title": "A simple case where LiquidHaskell works well on the type &quot;Data.String&quot; but not on the type &quot;Data.Text&quot;", "body": "<p>After some playing around, I have found a way you can do this.  I don't know of a way that preserves the polymorphism of <code>NoRouteToHimself</code>, but there is, at least, a way to speak about equality of <code>Data.Text</code> objects.</p>\n\n<p>The technique is to introduce a <em>denotation measure</em>.  That is, a <code>Text</code> is really just a fancy way of <em>representing</em> a <code>String</code>, so we should in principle be able to use <code>String</code> reasoning on <code>Text</code> objects.  So we introduce a measure to get what the <code>Text</code> represents:</p>\n\n<pre><code>{-@ measure denot :: Tx.Text -&gt; String @-}\n</code></pre>\n\n<p>When we construct a <code>Text</code> from a <code>String</code>, we need to say that the <code>Text</code>'s denotation is the <code>String</code> we passed in (this encodes injectivity, with <code>denot</code> playing the role of the inverse).</p>\n\n<pre><code>{-@ assume fromStringL :: s:String -&gt; { t:Tx.Text | denot t == s } @-}\nfromStringL = Tx.pack\n</code></pre>\n\n<p>Now when we want to compare equality of different <code>Text</code>s in LH, we instead compare their denotations.</p>\n\n<pre><code>{-@ type NoRouteToHimself = v:(_,_) : denot (fst v) /= denot (snd v) @-}\n</code></pre>\n\n<p>And now we can get the example to pass:</p>\n\n<pre><code>{-@ foo :: NoRouteToHimself @-}\nfoo :: (Tx.Text, Tx.Text)\nfoo = (fromStringL \"AA\", fromStringL \"AB\")\n</code></pre>\n\n<p>To use other functions of <code>Data.Text</code> in LH, one would need to give denotational specifications to those functions.  It is some work, but I think it would be a worthwhile thing to do.</p>\n\n<p>I'm curious if there are ways to make this treatment more polymorphic and reusable.  I also wonder if we can overload LH's notion of equality so that we don't have to go through <code>denot</code>.  There is much to learn.</p>\n"}], "owner": {"reputation": 315, "user_id": 10553912, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9f00c8ffb0cb3b02b08b70ce031bd004?s=128&d=identicon&r=PG&f=1", "display_name": "racherb", "link": "https://stackoverflow.com/users/10553912/racherb"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 164, "favorite_count": 1, "accepted_answer_id": 54526327, "answer_count": 2, "score": 7, "last_activity_date": 1549327699, "creation_date": 1549305133, "last_edit_date": 1592644375, "question_id": 54522261, "link": "https://stackoverflow.com/questions/54522261/a-simple-case-where-liquidhaskell-works-well-on-the-type-data-string-but-not-o", "title": "A simple case where LiquidHaskell works well on the type &quot;Data.String&quot; but not on the type &quot;Data.Text&quot;", "body": "<h1>The problem</h1>\n<p>I've been very excited playing with <strong>LiquidHaskell</strong>, however, I don't know to what extent I need to modify my original Haskell code to meet LiquidHaskell's requirements.</p>\n<p>Here is a simple example of how Liquid's specifications work well for <em>String</em> type but not for <em>Text</em> type.</p>\n<h2>For String type it works well</h2>\n<h3>Example</h3>\n<p>I define a Liquid type where we say that the values of a tuple cannot be the same:</p>\n<pre><code>{-@ type NoRouteToHimself = {v:(_, _) | (fst v) /= (snd v)} @-}\n</code></pre>\n<p>Then, for a <em>String</em> type specification it works well as shown below:</p>\n<pre><code>{-@ strOk :: NoRouteToHimself @-}\nstrOk :: (String, String)\nstrOk = (&quot;AA&quot;, &quot;AB&quot;)\n</code></pre>\n<p>LiquidHaskel Output &gt;&gt; <strong>RESULT: SAFE</strong></p>\n<pre><code>{-@ strBad :: NoRouteToHimself @-}\nstrBad :: (String, String)\nstrBad = (&quot;AA&quot;, &quot;AA&quot;)\n</code></pre>\n<p>LiquidHaskel Output &gt;&gt; <strong>RESULT: UNSAFE</strong></p>\n<p>So far so good, let's define the same function for the Text type.</p>\n<h1>For the Text type it goes wrong</h1>\n<h3>Example</h3>\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\nimport qualified Data.Text as Tx\n\n{-@ foo :: NoRouteToHimself @-}\nfoo :: (Tx.Text, Tx.Text)\nfoo = (&quot;AA&quot;, &quot;AB&quot;)\n</code></pre>\n<p>Expected Result:      <strong>RESULT: SAFE</strong></p>\n<p>LiquidHaskell Output: <strong>RESULT: UNSAFE</strong></p>\n<pre><code> ..Example.hs:102:3-5: Error: Liquid Type Mismatch\n  \n 102 |   foo = (&quot;AA&quot;, &quot;AB&quot;)\n         ^^^\n  \n   Inferred type\n     VV : {v : (Data.Text.Internal.Text, Data.Text.Internal.Text) | x_Tuple22 v == ?a\n                                                                    &amp;&amp; x_Tuple21 v == ?b\n                                                                    &amp;&amp; snd v == ?a\n                                                                    &amp;&amp; fst v == ?b}\n  \n   not a subtype of Required type\n     VV : {VV : (Data.Text.Internal.Text, Data.Text.Internal.Text) | fst VV /= snd VV}\n  \n   In Context\n     ?b : Data.Text.Internal.Text\n      \n     ?a : Data.Text.Internal.Text\n</code></pre>\n<p>Apparently LiquidHaskell cannot evaluate the values of the tuple for this case. Any suggestions?</p>\n"}, {"tags": ["haskell", "reflex"], "comments": [{"owner": {"reputation": 999, "user_id": 8604871, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/36382829e5be7f6da95308288d976949?s=128&d=identicon&r=PG&f=1", "display_name": "Madderote", "link": "https://stackoverflow.com/users/8604871/madderote"}, "reply_to_user": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 0, "creation_date": 1549301970, "post_id": 54520826, "comment_id": 95845608, "body": "Post edited. Learning Haskell but sometimes a little frustrated by errors like posted."}, {"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 0, "creation_date": 1549302220, "post_id": 54520826, "comment_id": 95845730, "body": "See what you can do with this. Happy hunting. <a href=\"https://github.com/mlitchard/reflex-todo\" rel=\"nofollow noreferrer\">github.com/mlitchard/reflex-todo</a>"}, {"owner": {"reputation": 3922, "user_id": 1198582, "user_type": "registered", "accept_rate": 99, "profile_image": "https://www.gravatar.com/avatar/02d3e1025aed5f061c481871986c45b1?s=128&d=identicon&r=PG", "display_name": "Michael Litchard", "link": "https://stackoverflow.com/users/1198582/michael-litchard"}, "edited": false, "score": 0, "creation_date": 1549321441, "post_id": 54520826, "comment_id": 95853537, "body": "reflex is well above beginner haskell level. You are in bleeding edge territory."}, {"owner": {"reputation": 1392, "user_id": 5198575, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-RAYCSjVZdnQ/AAAAAAAAAAI/AAAAAAAAClo/VQ8V_H3l8O8/photo.jpg?sz=128", "display_name": "trevor cook", "link": "https://stackoverflow.com/users/5198575/trevor-cook"}, "edited": false, "score": 0, "creation_date": 1549372079, "post_id": 54520826, "comment_id": 95871781, "body": "You might try using the nix based install of the reflex-platform. Reflex has some specially curated dependencies that might be at the root of this. The nix install should take care of that. Also, the reflex channel on the irc has been a tremendous help, you might ping them there about this."}, {"owner": {"reputation": 1392, "user_id": 5198575, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-RAYCSjVZdnQ/AAAAAAAAAAI/AAAAAAAAClo/VQ8V_H3l8O8/photo.jpg?sz=128", "display_name": "trevor cook", "link": "https://stackoverflow.com/users/5198575/trevor-cook"}, "edited": false, "score": 1, "creation_date": 1549373488, "post_id": 54520826, "comment_id": 95872611, "body": "Also, if you do contact the reflex irc, please redirect them here. Reflex is awesome and I&#39;d like to see more reflex tags appearing on stackoverflow."}, {"owner": {"reputation": 999, "user_id": 8604871, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/36382829e5be7f6da95308288d976949?s=128&d=identicon&r=PG&f=1", "display_name": "Madderote", "link": "https://stackoverflow.com/users/8604871/madderote"}, "edited": false, "score": 0, "creation_date": 1549445773, "post_id": 54520826, "comment_id": 95900869, "body": "Thanks I will definitely take up all your advise. Really welcome."}], "answers": [{"tags": [], "owner": {"reputation": 2098, "user_id": 2896874, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fc8dd5a8776e9c69d58e2b97f2ba16ed?s=128&d=identicon&r=PG&f=1", "display_name": "Vaibhav Sagar", "link": "https://stackoverflow.com/users/2896874/vaibhav-sagar"}, "is_accepted": false, "score": 0, "last_activity_date": 1566590539, "creation_date": 1566590539, "answer_id": 57632381, "question_id": 54520826, "link": "https://stackoverflow.com/questions/54520826/haskell-reflex-dom-jsaddle-error-when-stack-building/57632381#57632381", "title": "Haskell Reflex-Dom JSaddle error when stack building", "body": "<p>The version of GHC you are using is too new, please use <code>lts-12</code> or lower.</p>\n"}], "owner": {"reputation": 999, "user_id": 8604871, "user_type": "registered", "accept_rate": 14, "profile_image": "https://www.gravatar.com/avatar/36382829e5be7f6da95308288d976949?s=128&d=identicon&r=PG&f=1", "display_name": "Madderote", "link": "https://stackoverflow.com/users/8604871/madderote"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 130, "favorite_count": 0, "answer_count": 1, "score": 2, "last_activity_date": 1566590539, "creation_date": 1549299279, "last_edit_date": 1549301905, "question_id": 54520826, "link": "https://stackoverflow.com/questions/54520826/haskell-reflex-dom-jsaddle-error-when-stack-building", "title": "Haskell Reflex-Dom JSaddle error when stack building", "body": "<p>Wanted to give Reflex-Dom a try but get an error from the jsaddle package when stack-building. Would love some tips on how to resolve this. </p>\n\n<pre><code>/private/var/folders/m2/qwhdrn_d46z99_3vxchdwn7r0000gn/T/stack6036/jsaddle-0.9.5.0/src/Language/Javascript/JSaddle/Types.hs:190:5-34: error:\n    \u2022 No instance for (Control.Monad.Fail.MonadFail JSM)\n        arising from a do statement\n        with the failable pattern \u2018SyncResult\u2019\n    \u2022 In a stmt of a 'do' block: SyncResult &lt;- sendCommand Sync\n      In the expression:\n        do SyncResult &lt;- sendCommand Sync\n           return ()\n      In an equation for \u2018syncPoint\u2019:\n          syncPoint\n            = do SyncResult &lt;- sendCommand Sync\n                 return ()\n    |\n190 |     SyncResult &lt;- sendCommand Sync\n    | \n</code></pre>\n\n<p>Cabal config: </p>\n\n<pre><code>executable reflexdom\n  main-is: Main.hs\n  other-modules:\n      Paths_ReflexDom\n  hs-source-dirs:\n      app\n  ghc-options: -threaded -rtsopts -with-rtsopts=-N\n  build-depends:\n      ReflexDom\n    , base &gt;=4.7 &amp;&amp; &lt;5\n    , reflex-dom &gt;= 0.4 \n    , reflex &gt;= 0.5\n  allow-newer: true\n  default-language: Haskell2010\n</code></pre>\n\n<p>stack.yaml deps: </p>\n\n<pre><code>extra-deps: \n- reflex-0.5\n- reflex-dom-0.4\n- jsaddle-wkwebview-0.9.4.0\n- ref-tf-0.4.0.1\n- reflex-dom-core-0.4\n- ghcjs-dom-0.9.2.0\n- zenc-0.1.1\n- ghcjs-dom-jsaddle-0.9.2.0\n- jsaddle-dom-0.9.2.0\n- jsaddle-0.9.5.0\n</code></pre>\n\n<p>allow-newer: true </p>\n"}, {"tags": ["haskell", "syntax", "functional-programming", "pattern-matching", "non-exhaustive-patterns"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 1, "creation_date": 1549293641, "post_id": 54518983, "comment_id": 95841219, "body": "you want <code>take1and7 (a:b:c:d:e:f:g:xs) = (a, g)</code> instead. (Would be happy to explain further if needed, but I see an answer has gone up since I started typing this :) )"}, {"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 2, "creation_date": 1549297674, "post_id": 54518983, "comment_id": 95843462, "body": "Do you have to use pattern matching? An easier to read implementation would be to use <code>!!</code>"}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1549324089, "post_id": 54518983, "comment_id": 95854218, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/8451653/haskell-non-exhaustive-patterns-in-case\">Haskell - Non-exhaustive patterns in case</a>"}], "answers": [{"comments": [{"owner": {"reputation": 93, "user_id": 5699038, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/1Q5cS.jpg?s=128&g=1", "display_name": "Huddlespith", "link": "https://stackoverflow.com/users/5699038/huddlespith"}, "edited": false, "score": 0, "creation_date": 1549293847, "post_id": 54519205, "comment_id": 95841342, "body": "I&#39;m now getting a new error  <code>Occurs check: cannot construct the infinite type: a ~ [a]     \u2022 In the pattern: a : b : c : d : e : f : g : xs       In the pattern: [a : b : c : d : e : f : g : xs]       In an equation for \u2018take1and7\u2019:           take1and7 [a : b : c : d : e : f : g : xs] = (a, g) </code>"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 93, "user_id": 5699038, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/1Q5cS.jpg?s=128&g=1", "display_name": "Huddlespith", "link": "https://stackoverflow.com/users/5699038/huddlespith"}, "edited": false, "score": 4, "creation_date": 1549293917, "post_id": 54519205, "comment_id": 95841390, "body": "NB: <code>(a : xs)</code>  round parens ."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 93, "user_id": 5699038, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/1Q5cS.jpg?s=128&g=1", "display_name": "Huddlespith", "link": "https://stackoverflow.com/users/5699038/huddlespith"}, "edited": false, "score": 3, "creation_date": 1549293973, "post_id": 54519205, "comment_id": 95841430, "body": "@Huddlespith looks like you misread the code in the answer. You should use<code>(</code> and <code>)</code>, not square brackets. You can construct a list with either square brackets or the <code>:</code> operator, but it&#39;s rarely a good idea to use both."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 2, "creation_date": 1549294744, "post_id": 54519205, "comment_id": 95841861, "body": "You still need to indicate what the function should &quot;return&quot; if you <i>don&#39;t</i> get a list with 7 or more items, if you want to avoid the non-exhaustive pattern warning. That could be as simple as <code>take1and7 _ = error &quot;List has too few elements&quot;</code>."}], "tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": true, "score": 7, "last_activity_date": 1549293620, "creation_date": 1549293620, "answer_id": 54519205, "question_id": 54518983, "link": "https://stackoverflow.com/questions/54518983/haskell-take-first-and-seventh/54519205#54519205", "title": "Haskell take first and seventh", "body": "<pre><code>... [a, b, c, d, e, f, g, xs] = ...\n</code></pre>\n\n<p>is a pattern which matches an 8 elements long list. <code>xs</code> names the 8th element, not the rest of the list.</p>\n\n<p>In case you call this function with a list of 6, 7, 9, etc. elements, the pattern won't match.</p>\n\n<pre><code>... (a: b: c: d: e: f: g: xs) = ...\n</code></pre>\n\n<p>is a pattern which matches a list of 7 elements or longer. <code>xs</code> names the <em>rest</em> of the list after its first 7 elements. With it, the function still won't be able to handle any list shorter than 7 elements.</p>\n\n<p>The \"non-exhaustive\" phrasing means our function doesn't handle <em>all</em> possible cases. </p>\n"}], "owner": {"reputation": 93, "user_id": 5699038, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/1Q5cS.jpg?s=128&g=1", "display_name": "Huddlespith", "link": "https://stackoverflow.com/users/5699038/huddlespith"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 167, "favorite_count": 0, "accepted_answer_id": 54519205, "answer_count": 1, "score": 0, "last_activity_date": 1549294107, "creation_date": 1549292820, "last_edit_date": 1549294107, "question_id": 54518983, "link": "https://stackoverflow.com/questions/54518983/haskell-take-first-and-seventh", "title": "Haskell take first and seventh", "body": "<p>I need to write a function in Haskell that given a list of at least 7 elements returns a tuple containing the first and seventh element.</p>\n\n<p>e.g. </p>\n\n<pre><code>Prelude&gt; take1and7 [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n(1, 7)\n</code></pre>\n\n<p>I've tried this</p>\n\n<pre><code>take1and7 :: [a] -&gt; (a, a)\ntake1and7 [a, b, c, d, e, f, g, xs] = (a, g)\n</code></pre>\n\n<p>But it says that it has \"non-exhaustive patterns\" which I don't understand</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 11096, "user_id": 2749717, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46af1ef54856d737d52b7667afd240ee?s=128&d=identicon&r=PG&f=1", "display_name": "bipll", "link": "https://stackoverflow.com/users/2749717/bipll"}, "edited": false, "score": 3, "creation_date": 1549269432, "post_id": 54512466, "comment_id": 95828080, "body": "<code>(delete (arr !! d) arr)</code> is not a proper way to delete an element from list."}, {"owner": {"reputation": 54864, "user_id": 404970, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/o6X94.jpg?s=128&g=1", "display_name": "molbdnilo", "link": "https://stackoverflow.com/users/404970/molbdnilo"}, "edited": false, "score": 0, "creation_date": 1549269641, "post_id": 54512466, "comment_id": 95828182, "body": "Have you tested with smaller cases that your function generates all the permutations in lexicographical order?"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 11096, "user_id": 2749717, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46af1ef54856d737d52b7667afd240ee?s=128&d=identicon&r=PG&f=1", "display_name": "bipll", "link": "https://stackoverflow.com/users/2749717/bipll"}, "edited": false, "score": 0, "creation_date": 1549282316, "post_id": 54512466, "comment_id": 95834504, "body": "@bipll in general, yes, but here there are no duplicates in the list of choices, so it&#39;s OK."}, {"owner": {"reputation": 11096, "user_id": 2749717, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46af1ef54856d737d52b7667afd240ee?s=128&d=identicon&r=PG&f=1", "display_name": "bipll", "link": "https://stackoverflow.com/users/2749717/bipll"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549289383, "post_id": 54512466, "comment_id": 95838567, "body": "@WillNess Sure, as long as your notion of &quot;OK&quot; implies 1. taking an element of a list (O(d)), 2. deleting that element (d comparisons, plus list reconstruction). Is it really a reasonable way to remove an element whose index you <i>already know</i>?"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 11096, "user_id": 2749717, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/46af1ef54856d737d52b7667afd240ee?s=128&d=identicon&r=PG&f=1", "display_name": "bipll", "link": "https://stackoverflow.com/users/2749717/bipll"}, "edited": false, "score": 1, "creation_date": 1549292298, "post_id": 54512466, "comment_id": 95840421, "body": "@bipll &quot;OK&quot; in the sense of overall correctness. (you can&#39;t see it, but I&#39;ve upvoted your comment, too). :) @ OP, the proper way to do it is with <code>splitAt</code>."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1549294434, "post_id": 54512466, "comment_id": 95841704, "body": "Side note: you want to use <code>divMod</code> (resp. <code>quotRem</code>) when you need both <code>div</code> and <code>mod</code> (<code>quot</code> and <code>rem</code>) on the same numbers. That&#39;s (usually) one division operation over two."}], "answers": [{"comments": [{"owner": {"reputation": 12213, "user_id": 671703, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/96ac349a9c65277e304401ea92a62ff4?s=128&d=identicon&r=PG", "display_name": "pat", "link": "https://stackoverflow.com/users/671703/pat"}, "edited": false, "score": 0, "creation_date": 1549300170, "post_id": 54515258, "comment_id": 95844779, "body": "Can also be written <code>dvm x facty = let (d, r) = divMod (x-1) facty in (d, r+1)</code>"}, {"owner": {"reputation": 12213, "user_id": 671703, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/96ac349a9c65277e304401ea92a62ff4?s=128&d=identicon&r=PG", "display_name": "pat", "link": "https://stackoverflow.com/users/671703/pat"}, "edited": false, "score": 0, "creation_date": 1549303541, "post_id": 54515258, "comment_id": 95846365, "body": "Not really.  In this form, <code>r+1</code> is fed back as <code>x</code> in the next iteration, where we <code>divMod</code> with <code>x-1</code>, so we can see that the <code>+1</code> and <code>-1</code> cancel each other out, so plain <code>divMod</code> could have been used if we just started with <code>999999</code> instead of <code>1000000</code> because we should have started counting from <code>0</code> instead of <code>1</code>."}], "tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": true, "score": 0, "last_activity_date": 1549282437, "last_edit_date": 1549282437, "creation_date": 1549280055, "answer_id": 54515258, "question_id": 54512466, "link": "https://stackoverflow.com/questions/54512466/project-euler-24-in-haskell/54515258#54515258", "title": "Project Euler #24 in Haskell", "body": "<p>Unadulterated <code>divMod</code> is wrong for this algorithm. You need</p>\n\n<pre><code>dvm x facty | r == 0    = (d-1, facty)\n            | otherwise = (d, r)\n                  where\n                  (d, r) = divMod x facty\n</code></pre>\n\n<p>instead:</p>\n\n<pre><code>recur x y arr\n.......\n.......\n    where (d, r) = x `dvm` fact y\n</code></pre>\n\n<p>We cannot have <em>zero combinations to do</em> left. Zero means none.</p>\n\n<p>Also the pattern guard condition should be changed to <code>y &gt; 0</code>. Only when the length of the remaining choices list is 1 (at which point <code>y</code> is 0) there's no more choices to be made and we just use the last available digit left.</p>\n"}], "owner": {"reputation": 318, "user_id": 10499685, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-dSTWSYtwXak/AAAAAAAAAAI/AAAAAAAAApg/9byGAwiHu1c/photo.jpg?sz=128", "display_name": "Meowcolm Law", "link": "https://stackoverflow.com/users/10499685/meowcolm-law"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 151, "favorite_count": 0, "accepted_answer_id": 54515258, "answer_count": 1, "score": 1, "last_activity_date": 1549282437, "creation_date": 1549269143, "question_id": 54512466, "link": "https://stackoverflow.com/questions/54512466/project-euler-24-in-haskell", "title": "Project Euler #24 in Haskell", "body": "<p>I am trying to solve the problems from <strong>Project Euler</strong> using Haskell, but I got sucked at <a href=\"https://projecteuler.net/problem=24\" rel=\"nofollow noreferrer\">#24</a></p>\n\n<p>I'm trying to use factorials to solve problem but just can't work for the last three digits, here is my code:</p>\n\n<pre><code>import Data.List\nfact n = product [n, n-1 .. 1]\nrecur :: Int -&gt; Int -&gt; [Int] -&gt; [Int]\nrecur x y arr\n    | y &gt; 1     = arr !! d : recur r (y-1) (delete (arr !! d) arr)\n    | otherwise = arr\n    where d = x `div` fact y\n          r = x `mod` fact y\n\nmain::IO()\nmain = print(recur 1000000 9 [0..9])\n</code></pre>\n\n<p>(I know it is now not really \"functional\")\nI managed to get result <code>[2,7,8,3,9,1,4,5,0,6]</code>, while the right answer I accidently figured out by hand is <strong>2783915460</strong>.</p>\n\n<p>I just want to know why this algorithm doesn't work for the last three digits. Thanks.</p>\n"}, {"tags": ["haskell", "debian", "haskell-stack", "crt", "fpic"], "comments": [{"owner": {"reputation": 11771, "user_id": 1275653, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/cb781e5bd49c5d403228b98859d8b6dd?s=128&d=identicon&r=PG", "display_name": "thb", "link": "https://stackoverflow.com/users/1275653/thb"}, "edited": false, "score": 1, "creation_date": 1549237819, "post_id": 54508728, "comment_id": 95820961, "body": "Are you already familiar with GCC&#39;s -fPIC option? (I gather that you likely are, but should not assume. This is why I ask.)"}, {"owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "reply_to_user": {"reputation": 11771, "user_id": 1275653, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/cb781e5bd49c5d403228b98859d8b6dd?s=128&d=identicon&r=PG", "display_name": "thb", "link": "https://stackoverflow.com/users/1275653/thb"}, "edited": false, "score": 0, "creation_date": 1549238281, "post_id": 54508728, "comment_id": 95821033, "body": "I&#39;m not - I assumed I needed to modify a &#39;dependency&#39; rather than the flags to Haskell&#39;s GHC compiler (which seems to be the case). I&#39;ve just added that option and trying to build. Thanks!"}, {"owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "reply_to_user": {"reputation": 11771, "user_id": 1275653, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/cb781e5bd49c5d403228b98859d8b6dd?s=128&d=identicon&r=PG", "display_name": "thb", "link": "https://stackoverflow.com/users/1275653/thb"}, "edited": false, "score": 1, "creation_date": 1549327023, "post_id": 54508728, "comment_id": 95854858, "body": "Possibly related: <a href=\"https://stackoverflow.com/questions/41419102/haskell-stack-static-binary-relocation-r-x86-64-32-against-tmc-end-can-not\" title=\"haskell stack static binary relocation r x86 64 32 against tmc end can not\">stackoverflow.com/questions/41419102/&hellip;</a>"}], "answers": [{"comments": [{"owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "edited": false, "score": 0, "creation_date": 1549239373, "post_id": 54508875, "comment_id": 95821201, "body": "Thanks! Will give this a try in the morning."}], "tags": [], "owner": {"reputation": 11771, "user_id": 1275653, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/cb781e5bd49c5d403228b98859d8b6dd?s=128&d=identicon&r=PG", "display_name": "thb", "link": "https://stackoverflow.com/users/1275653/thb"}, "is_accepted": false, "score": 2, "last_activity_date": 1549284298, "last_edit_date": 1549284298, "creation_date": 1549239291, "answer_id": 54508875, "question_id": 54508728, "link": "https://stackoverflow.com/questions/54508728/usr-bin-ld-gold-error-usr-lib-gcc-x86-64-linux-gnu-6-crtbegint-o-requires-d/54508875#54508875", "title": "/usr/bin/ld.gold: error: /usr/lib/gcc/x86_64-linux-gnu/6/crtbeginT.o: requires dynamic R_X86_64_32", "body": "<p>My answer is probably incomplete but, until a more complete answer appears, we can start with the following.</p>\n\n<p>1.&nbsp;<em>GCC's manual.</em> Debian and the Free Software Foundation unfortunately have slightly conflicting understandings of what constitutes free software. GCC's manual might help you at the moment, but the manual has been segregated for minor, technical legal reasons to Debian's <em>non-free</em> archive.</p>\n\n<p>It goes against the spirit of Debian to advise anyone to install from <em>non-free,</em> doesn't it? I will only say that I have installed GCC's manual from <em>non-free</em> on my own Debian box as follows. In <em>/etc/apt/sources.list</em>:</p>\n\n<pre><code>deb     http://mirror.us.leaseweb.net/debian/ stretch main contrib non-free\ndeb-src http://mirror.us.leaseweb.net/debian/ stretch main contrib non-free\n</code></pre>\n\n<p>(You can list whichever mirror you like, but Leaseweb's is as good as any.) Then, <code>apt-get update</code> and <code>apt-get install gcc-doc</code>, followed by <code>info gcc</code>.)</p>\n\n<p>2.&nbsp;<em>Options to GCC.</em> In GCC's manual, you can open the chapter \"Invoking GCC,\" open the section \"Code Gen Options,\" and press <code>/</code> to search for <code>-fPIC</code>. The explanation there is terse and technical, but it starts your investigation in the right place. (Even if the explanation does not make sense to you now, you'll return to it later.)</p>\n\n<p>3.&nbsp;<em>Uekawa's Debian Library Packaging Guide.</em> The most illuminating document however is somewhat a secret. It is a standard Debian document, known to Debian Developers, which for obscure reasons is not packaged in Debian, so non-Developers usually don't know about it. <a href=\"http://www.netfort.gr.jp/~dancer/column/libpkg-guide/\" rel=\"nofollow noreferrer\">Here</a> it is.</p>\n\n<p>The linked document tells you how these libraries work, how one compiles and links them, and so on. However, if you need to know more....</p>\n\n<p>4.&nbsp;<em>The ELF Specification.</em></p>\n\n<ul>\n<li><a href=\"http://www.sco.com/developers/devspecs/\" rel=\"nofollow noreferrer\">http://www.sco.com/developers/devspecs/</a></li>\n<li><a href=\"https://github.com/hjl-tools/x86-psABI/wiki/X86-psABI\" rel=\"nofollow noreferrer\">https://github.com/hjl-tools/x86-psABI/wiki/X86-psABI</a></li>\n</ul>\n\n<p>These detail the format to which GCC builds and <code>ld.gold</code> links.</p>\n\n<p>5.&nbsp;<em>Autotools.</em> At some point, your investigation might lead you to the GNU Autotools&mdash;namely, Autoconf, Automake, Libtool, M4, and so on. I do not believe that the Autotools will solve your problem and, even if they did, I doubt that they would do it in a way that illuminated your understanding of the process. The Autotools can be useful but, in your particular case, I would avoid pursuing the Autotools for the time being. Focus on the other sources, rather.</p>\n\n<p>Admittedly, someone out there probably knows a more direct answer to your question but, as of this writing, that person had not yet posted. Meanwhile, if you need to research it for yourself, my answer has given the sources. Reading those is what I would do. Though not a Haskell programmer, reading those is how I have solved similar linking problems in the past. Those are the standard sources.</p>\n\n<p>The reading is most educational and is broadly useful in any case, so it won't waste your time.</p>\n\n<p>(I would recommend that you avoid <em>accepting</em> my answer even if you choose to upvote it. Your question is a good question. We want this question to remain open until it has drawn a more direct answer than mine.)</p>\n"}, {"comments": [{"owner": {"reputation": 11771, "user_id": 1275653, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/cb781e5bd49c5d403228b98859d8b6dd?s=128&d=identicon&r=PG", "display_name": "thb", "link": "https://stackoverflow.com/users/1275653/thb"}, "edited": false, "score": 0, "creation_date": 1549330082, "post_id": 54526330, "comment_id": 95855379, "body": "Excellent. Linking issues are hard but solving them is usually educational. One doubts that you have wasted your time. Glad that it works."}], "tags": [], "owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "is_accepted": false, "score": 1, "last_activity_date": 1549326980, "creation_date": 1549326980, "answer_id": 54526330, "question_id": 54508728, "link": "https://stackoverflow.com/questions/54508728/usr-bin-ld-gold-error-usr-lib-gcc-x86-64-linux-gnu-6-crtbegint-o-requires-d/54526330#54526330", "title": "/usr/bin/ld.gold: error: /usr/lib/gcc/x86_64-linux-gnu/6/crtbeginT.o: requires dynamic R_X86_64_32", "body": "<p>Arghiaueohtnuea...</p>\n\n<p>I had   <code>ghc-options: -O2 -dynamic</code> in my cabal file... Removing this seems to have fixed everything</p>\n"}], "owner": {"reputation": 19307, "user_id": 1663462, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c30e0fa0f3a065c038c633a95066d299?s=128&d=identicon&r=PG", "display_name": "Chris Stryczynski", "link": "https://stackoverflow.com/users/1663462/chris-stryczynski"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1093, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1549326980, "creation_date": 1549237494, "last_edit_date": 1549238325, "question_id": 54508728, "link": "https://stackoverflow.com/questions/54508728/usr-bin-ld-gold-error-usr-lib-gcc-x86-64-linux-gnu-6-crtbegint-o-requires-d", "title": "/usr/bin/ld.gold: error: /usr/lib/gcc/x86_64-linux-gnu/6/crtbeginT.o: requires dynamic R_X86_64_32", "body": "<p>I'm running into the following error when trying to compile a static Haskell executable:</p>\n\n<pre><code>/usr/bin/ld.gold: error: /usr/lib/gcc/x86_64-linux-gnu/6/crtbeginT.o: requires dynamic R_X86_64_32 reloc against '__TMC_END__' which may overflow at runtime; recompile with -fPIC\ncollect2: error: ld returned 1 exit status\n`gcc' failed in phase `Linker'. (Exit code: 1)\n</code></pre>\n\n<p>I believe I'm running into this issue due to creating a static build. A dynamic build was successful previously.</p>\n\n<p>How could I solve this? I don't think I've compiled anything manually. Here is the <code>Dockerfile</code> from the docker image I'm using: <a href=\"https://github.com/freebroccolo/docker-haskell/blob/03467e1a14543d83d33833e669249a3c42f7b7c8/8.6/Dockerfile\" rel=\"nofollow noreferrer\">https://github.com/freebroccolo/docker-haskell/blob/03467e1a14543d83d33833e669249a3c42f7b7c8/8.6/Dockerfile</a></p>\n\n<p>I'm running Debian Stretch (9).</p>\n\n<p>Seems to possibly be a bug according to: <a href=\"https://bugs.launchpad.net/ubuntu/+source/gcc-4.4/+bug/640734\" rel=\"nofollow noreferrer\">https://bugs.launchpad.net/ubuntu/+source/gcc-4.4/+bug/640734</a></p>\n\n<hr>\n\n<p>I've tried adding a <code>--ghc-options='-fPIC</code> to <code>stack build</code> but that fails too:</p>\n\n<pre><code> /usr/bin/ld.gold: error: /usr/lib/gcc/x86_64-linux-gnu/6/crtbeginT.o: requires dynamic R_X86_64_32 reloc against '__TMC_END__' which may overflow at runtime; recompile with -fPIC\n    collect2: error: ld returned 1 exit status\n    `gcc' failed in phase `Linker'. (Exit code: 1)\nThe command '/bin/sh -c stack build --ghc-options='-fPIC -optl-static -optl-pthread' --force-dirty --copy-bins' returned a non-zero code: 1\n</code></pre>\n"}, {"tags": ["haskell", "ghc"], "comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1549238227, "post_id": 54508647, "comment_id": 95821025, "body": "I don&#39;t think you <i>need</i> to tell them apart, because their only use seems to be in setting the values of the two distinct values <code>fFunClassMyData</code> and <code>fFunClassYourData</code>. After each call to <code>cast</code>, the value is irrelevant, and it seems like Core simply reuses the name after the first call."}, {"owner": {"reputation": 1332, "user_id": 3262785, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/XqvLk.jpg?s=128&g=1", "display_name": "sqd", "link": "https://stackoverflow.com/users/3262785/sqd"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1549254009, "post_id": 54508647, "comment_id": 95823539, "body": "@chepner Could you explain why the value is irrelevant? Also, I found that the two <code>cfunctionInClass</code> actually have different <code>Unique</code>s, which are ignored when they are outputed."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1549282729, "post_id": 54508647, "comment_id": 95834746, "body": "Not really; I&#39;m unfamiliar with Core, but it <i>looks</i> like once its value is used to set <code>fFunClass{My,Your}Data</code>, its value isn&#39;t needed anymore."}], "answers": [{"tags": [], "owner": {"reputation": 34158, "user_id": 7203016, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ybAMw.png?s=128&g=1", "display_name": "K. A. Buhr", "link": "https://stackoverflow.com/users/7203016/k-a-buhr"}, "is_accepted": false, "score": 2, "last_activity_date": 1555193282, "creation_date": 1555193282, "answer_id": 55670281, "question_id": 54508647, "link": "https://stackoverflow.com/questions/54508647/how-does-ghc-handle-typeclass-and-instance-in-core/55670281#55670281", "title": "How does GHC handle typeclass and instance in core?", "body": "<p>Without knowing (i) exactly which version of GHC, (ii) the exact <code>ghc</code> command line you used, and (iii) the full contents of the file you compiled, it's hard to duplicate the core output you're asking about, but here are some answers:</p>\n\n<p>1) When generating your core, you probably supplied the flag <code>-dsuppress-uniques</code>, used some other flag that implied it, or maybe used an older version of GHC where it was the default.  This flag causes GHC to suppress from the core output the little random suffixes used to create unique names.  If you remove the flag or add an explicit <code>-dno-suppress-uniques</code>, you should see unique names like <code>$cfunctionInClass_r1cH</code> and <code>$cfunctionInClass_r1dh</code>.</p>\n\n<p>2) Core is a typed language, and the function <code>cast</code> is used (extensively) to change the types of expressions.  Note that it does not change the internal representation of the expression itself, so it can only be used to switch between types that have the same internal representation in memory.</p>\n\n<p>You'll see casts all over the place for code that uses <code>newtypes</code>.  For example the code:</p>\n\n<pre><code>newtype MyInt = MyInt Int\ninc (MyInt n) = MyInt (n + 1)\n</code></pre>\n\n<p>creates the (unoptimized) core:</p>\n\n<pre><code>inc1 :: MyInt -&gt; Int\ninc1\n  = \\ (ds :: MyInt) -&gt;\n      + @ Int $fNumInt (ds `cast` (N:MyInt[0] :: MyInt ~R# Int)) (I# 1#)\ninc :: MyInt -&gt; MyInt\ninc\n  = inc1\n    `cast` (&lt;MyInt&gt;_R -&gt;_R Sym (N:MyInt[0])\n            :: (MyInt -&gt; Int) ~R# (MyInt -&gt; MyInt))\n</code></pre>\n\n<p>with several casts.</p>\n\n<p>The way <code>cast</code> works, the left hand side of the <code>`cast`</code> operator is a normal core term (e.g., variable or other expression) representing the value whose type is being changed; the right hand side is something called a \"coercion\" which is a piece of evidence that the compiler constructs to prove that two types are representationally equivalent (i.e., have the same in-memory representation and so can be safely coerced).  For example, in my newtype example above, the coercion for the first cast:</p>\n\n<pre><code>N:MyInt[0] :: MyInt ~R# Int\n</code></pre>\n\n<p>is a coercion value <code>N:MyInt[0]</code> whose type is the representational equality (<code>~R#</code>) of <code>MyInt</code> and <code>Int</code>.  (Technically, <code>N:MyInt[0]</code> is a coercion <em>type</em> whose <em>kind</em> is the given representational equality, but that distinction doesn't really matter.)  If you're familiar with the Curry-Howard isomorphism, where values can be considered proofs of their types, this is an example of this in action deep in GHC's guts -- the value/type <code>N:MyInt[0]</code> proves its type/kind, namely the representational equality of the newtype and its contents, which allows the cast to take place.</p>\n\n<p>In your example, the cast:</p>\n\n<pre><code>$fFunClassMyData [InlPrag=INLINE (sat-args=0)] :: FunClass MyData\n$fFunClassMyData\n  = $cfunctionInClass\n    `cast` (Sym (N:FunClass[0] &lt;MyData&gt;_N)\n            :: Coercible (MyData -&gt; ()) (FunClass MyData))\n</code></pre>\n\n<p>is a complex way of saying that GHC represents instance dictionaries for type classes having only one function much the same way it would represent a newtype containing a function of that type which is the same way it would represent the function value itself.  Therefore, the function value <code>$cfunctionInClass</code> can be directly cast to a dictionary value.</p>\n\n<p>However, if you added another function to your typeclass:</p>\n\n<pre><code>class FunClass a where\n  functionInClass :: a -&gt; ()\n  anotherFunction :: a\n</code></pre>\n\n<p>the casts would disappear from the definition of the dictionaries, and they'd look more like what you'd expect:</p>\n\n<pre><code>$fFunClassMyData\n$fFunClassMyData = C:FunClass $cfunctionInClass $canotherFunction\n</code></pre>\n\n<p>It's important to note that <code>cast</code> doesn't do anything in the final code.  Once the core is converted to untyped STG and eventually CMM and assembly, the <code>cast</code> calls are optimized out, as they don't affect the values, they only modify compile-time types to satisfy the core typechecker.  So, unless you're debugging GHC, you probably don't care about casts and should consider then no-ops.  You can suppress some of the detail with <code>-dsuppress-coercions</code> (implied by <code>-dsuppress-all</code>):</p>\n\n<pre><code>$fFunClassYourData = $cfunctionInClass1 `cast` &lt;Co:3&gt;\n</code></pre>\n\n<p>and just pretend <code>x `cast` &lt;Co:xxx&gt;</code> is exactly equivalent to <code>x</code>.  In your example above, the dictionary <em>is</em> just the single instance function for the typeclass, so this is really the same up to coercible types as:</p>\n\n<pre><code>$fFunClassMyData = $cFunctionInClass\n</code></pre>\n\n<p>3) Sure. Additional class and instance information is stored in the <code>mg_tcs</code> and <code>mg_insts</code> fields of <code>ModGuts</code>, respectively.  To a rough approximation, <code>mg_binds</code> contains the information needed for code generation while <code>mg_tcs</code> and <code>mg_insts</code> contain the information needed to generate the interface file.</p>\n\n<h3>Helpful references to GHC compiler code</h3>\n\n<p><code>ghc/compiler/coreSyn/PprCore.hs</code> - Module for pretty-printing core.  If you want to know where something in core comes from, this is it.  (For example, <code>ppr_expr add_par (Cast expr co) = ...</code> is the code responsible for pretty printing <code>`cast`</code> operators.</p>\n\n<p><code>ghc/compiler/coreSyn/CoreSyn.hs</code> - The <code>Expr</code> type is the \"core\" of core.  The constructor <code>Cast (Expr b) Coercion</code> represents a cast.</p>\n\n<p><code>ghc/compiler/types/TycoRep.hs</code> - The definition of <code>Coercion</code> is here.</p>\n\n<p><code>ghc/compiler/main/HscTypes.hs</code> - The definition of <code>ModGuts</code> and the \"subsets\" of fields <code>CgGuts</code> used for code generation and <code>ModIface</code>/<code>ModDetails</code> used for writing the interface file and linking.</p>\n\n<p><code>ghc/compiler/main/TidyPgm.hs</code> - Definition of the function <code>tidyGuts</code>, where <code>ModGuts</code> information is split into <code>CgGuts</code> for code generation and <code>ModDetails</code>, a cached version of <code>ModIface</code> kept in memory when compiling multiple modules and/or used to generate a full <code>ModIface</code> to write out to an interface file.</p>\n"}], "owner": {"reputation": 1332, "user_id": 3262785, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/XqvLk.jpg?s=128&g=1", "display_name": "sqd", "link": "https://stackoverflow.com/users/3262785/sqd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 96, "favorite_count": 1, "answer_count": 1, "score": 3, "last_activity_date": 1555193282, "creation_date": 1549236631, "question_id": 54508647, "link": "https://stackoverflow.com/questions/54508647/how-does-ghc-handle-typeclass-and-instance-in-core", "title": "How does GHC handle typeclass and instance in core?", "body": "<p>I compiled the following Haskell code to core:</p>\n\n<pre><code>class FunClass a where\n  functionInClass :: a -&gt; ()\n\ndata MyData = MyData\ndata YourData = YourData\n\ninstance FunClass MyData where\n  functionInClass a = ()\ninstance FunClass YourData where\n  functionInClass a = ()\n\nvalueA :: ()\nvalueA = functionInClass MyData\n\nvalueB :: ()\nvalueB = functionInClass YourData\n</code></pre>\n\n<p>and got the following core bindings (I deleted some boilerplates that are irrelavant):</p>\n\n<pre><code> $cfunctionInClass :: MyData -&gt; ()\n [LclId]\n $cfunctionInClass = \\ _ [Occ=Dead] -&gt; break&lt;3&gt;() ()\n\n $fFunClassMyData [InlPrag=INLINE (sat-args=0)] :: FunClass MyData\n $fFunClassMyData\n   = $cfunctionInClass\n     `cast` (Sym (N:FunClass[0] &lt;MyData&gt;_N)\n             :: Coercible (MyData -&gt; ()) (FunClass MyData))\n\n $cfunctionInClass :: YourData -&gt; ()\n [LclId]\n $cfunctionInClass = \\ _ [Occ=Dead] -&gt; break&lt;2&gt;() ()\n\n $fFunClassYourData [InlPrag=INLINE (sat-args=0)] :: FunClass YourData\n $fFunClassYourData\n   = $cfunctionInClass\n     `cast` (Sym (N:FunClass[0] &lt;YourData&gt;_N)\n             :: Coercible (YourData -&gt; ()) (FunClass YourData))\n\n valueA :: ()\n [LclIdX]\n valueA\n   = break&lt;1&gt;() functionInClass @ MyData $fFunClassMyData MyData\n\n valueB :: ()\n [LclIdX]\n valueB\n   = break&lt;0&gt;()\n     functionInClass @ YourData $fFunClassYourData YourData\n</code></pre>\n\n<p>My questions are:</p>\n\n<ol>\n<li><p>Why do the two <code>cfunctionInClass</code> share the same name? How do we tell them apart?</p></li>\n<li><p>What does <code>cast</code> do exactly?</p></li>\n<li><p>Is there anything related to typeclass/instance outside of <code>mg_binds ModGuts</code>?</p></li>\n</ol>\n"}, {"tags": ["haskell", "optparse-applicative"], "comments": [{"owner": {"reputation": 84731, "user_id": 510937, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/70b13a9ae1aae1ca1aa6ac8dab4643f2?s=128&d=identicon&r=PG", "display_name": "Bakuriu", "link": "https://stackoverflow.com/users/510937/bakuriu"}, "edited": false, "score": 0, "creation_date": 1549216128, "post_id": 54505684, "comment_id": 95815106, "body": "Make a <code>Parser Config&#39;</code> and define <code>Config&#39;</code> to only have <code>a</code> and <code>b</code> and then have an <code>f :: Config&#39; -&gt; Config</code> that fills the c value with a default..."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 4, "creation_date": 1549216566, "post_id": 54505684, "comment_id": 95815253, "body": "You need to provide <i>some</i> <code>pC</code>, but that doesn&#39;t have to be something that parses any actual string; it could simply be a hard-coded constant parser like <code>pC = pure someValueOfType2</code>."}, {"owner": {"reputation": 577, "user_id": 656347, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/f15mA.jpg?s=128&g=1", "display_name": "Sanchayan Maity", "link": "https://stackoverflow.com/users/656347/sanchayan-maity"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1549218328, "post_id": 54505684, "comment_id": 95815833, "body": "@chepner I tried that but with the types involved I could not get it to work or may be I did not try hard enough with that approach."}, {"owner": {"reputation": 577, "user_id": 656347, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/f15mA.jpg?s=128&g=1", "display_name": "Sanchayan Maity", "link": "https://stackoverflow.com/users/656347/sanchayan-maity"}, "reply_to_user": {"reputation": 84731, "user_id": 510937, "user_type": "registered", "accept_rate": 80, "profile_image": "https://www.gravatar.com/avatar/70b13a9ae1aae1ca1aa6ac8dab4643f2?s=128&d=identicon&r=PG", "display_name": "Bakuriu", "link": "https://stackoverflow.com/users/510937/bakuriu"}, "edited": false, "score": 0, "creation_date": 1549218364, "post_id": 54505684, "comment_id": 95815847, "body": "@Bakuriu I have something similar at the moment and it does work. I was wondering if there is a cleaner approach already provided that somehow I am missing. I did try going through the docs.."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1549218405, "post_id": 54505684, "comment_id": 95815864, "body": "In the worst possible scenario, <code>pC = pure (error &quot;unparsed Type2&quot;)</code> could be used. I&#39;d try other approaches first, though."}], "answers": [{"comments": [{"owner": {"reputation": 577, "user_id": 656347, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/f15mA.jpg?s=128&g=1", "display_name": "Sanchayan Maity", "link": "https://stackoverflow.com/users/656347/sanchayan-maity"}, "edited": false, "score": 0, "creation_date": 1549290995, "post_id": 54511102, "comment_id": 95839583, "body": "Thank you. I went with the second approach to make it work. I had tried that approach but I think something I must have messed with the types when I tried it first time."}], "tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": true, "score": 3, "last_activity_date": 1549261675, "creation_date": 1549261675, "answer_id": 54511102, "question_id": 54505684, "link": "https://stackoverflow.com/questions/54505684/how-to-parse-a-product-type-partially/54511102#54511102", "title": "How to parse a product type partially", "body": "\n\n<p>The <code>Config &lt;$&gt; pA &lt;*&gt; pB &lt;*&gt; pC</code> notation doesn\u2019t care that <code>Config</code> is a constructor; you could have used any function of type <code>Bool -&gt; Type1 -&gt; Type2 -&gt; Config</code>.  If you don\u2019t want to parse a <code>Type2</code>, you could use any function of type <code>Bool -&gt; Type1 -&gt; Config</code>.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>config' :: Bool -&gt; Type1 -&gt; Config\nconfig' a b c = Config a b someDefaultType2\n\npConfig :: Parser Config\npConfig = config' &lt;$&gt; pA &lt;*&gt; pB\n</code></pre>\n\n<p>Equivalently, you stick with the <code>Config</code> constructor but connect a <code>pure</code> value instead of a parser to its third argument.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>pConfig :: Parser Config\npConfig = Config &lt;$&gt; pA &lt;*&gt; pB &lt;*&gt; pure someDefaultType2\n</code></pre>\n\n<p>(Either way, you do need to have <em>some</em> way of providing a value of <code>Type2</code>, if you want to get a <code>Config</code> out.)</p>\n"}], "owner": {"reputation": 577, "user_id": 656347, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/f15mA.jpg?s=128&g=1", "display_name": "Sanchayan Maity", "link": "https://stackoverflow.com/users/656347/sanchayan-maity"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 95, "favorite_count": 0, "accepted_answer_id": 54511102, "answer_count": 1, "score": 0, "last_activity_date": 1549261675, "creation_date": 1549215884, "question_id": 54505684, "link": "https://stackoverflow.com/questions/54505684/how-to-parse-a-product-type-partially", "title": "How to parse a product type partially", "body": "<pre class=\"lang-hs prettyprint-override\"><code>data Config = Config {\n    a :: Bool,\n    b :: Type1,\n    c :: Type2\n}\n\npA :: Parser Bool\n\npB :: Parser Type1\n\npC :: Parser Type2\n\npConfig :: Parser Config\npConfig = Config &lt;$&gt; pA &lt;*&gt; pB &lt;*&gt; pC\n\nopts :: ParserInfo Config\nopts = info (pConfig &lt;**&gt; helper)\n       (fullDesc &lt;&gt; progDesc \"My CLI\" &lt;&gt; header \"CLI executable\")\n\nmain :: IO()\nmain = do\n       (Config a b c) &lt;- execParser opts\n-- Populate a default config using a b c values\n</code></pre>\n\n<p>Is it possible to parse a product type partially? Config is a product type with member a, b and c and assume this comes from a library, so I cannot redefine this. I only want to parse a and b without caring about c. But, since a \"Parser Config\" can only have a construction like below</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>Config &lt;$&gt; pA &lt;*&gt; pB &lt;*&gt; pC\n</code></pre>\n\n<p>due to being a product type, if I do not give a \"pC\" it errors out. How to correctly handle this scenario?</p>\n"}, {"tags": ["haskell", "z3", "smt", "sbv"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 4, "creation_date": 1549197398, "post_id": 54502823, "comment_id": 95809771, "body": "I&#39;m only half an expert, but I believe that yes, the theory of IEEE754 is <i>significantly</i> more complicated than the theory of arbitrary algebraic reals because every operation includes a rounding operation that is quite difficult to reason about. (Not writing this as an answer because I&#39;m only half an expert and only about 80% trust my own statement.)"}, {"owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1549209895, "post_id": 54502823, "comment_id": 95813220, "body": "@ThomasM.DuBuisson Ha-ha, to be honest, if SO allowed CC&#39;ing concrete users, I&#39;d just added @ LeventErkok into the question."}], "answers": [{"comments": [{"owner": {"reputation": 7764, "user_id": 869966, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2de76b0a45b1c27f08ec1c8e23153588?s=128&d=identicon&r=PG", "display_name": "Christoph Wintersteiger", "link": "https://stackoverflow.com/users/869966/christoph-wintersteiger"}, "edited": false, "score": 3, "creation_date": 1550062465, "post_id": 54505692, "comment_id": 96131158, "body": "Yep, all of what @levent-erkok said. Note that replacing reals with floats/doubles does not preserve any semantics of the problem or the properties, i.e., this is unsound. Regarding performance: imagine translating a trivial, completely linear problem on reals where we replace the reals with floats. The result is a highly non-linear and discontinuous problem for which none of the &quot;nice&quot; methods on reals work and even where there are similar methods, they have much higher complexity."}], "tags": [], "owner": {"reputation": 18055, "user_id": 936310, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/302ec54987694b9746abf8e2e0ad8caf?s=128&d=identicon&r=PG&f=1", "display_name": "alias", "link": "https://stackoverflow.com/users/936310/alias"}, "is_accepted": true, "score": 13, "last_activity_date": 1549240589, "last_edit_date": 1549240589, "creation_date": 1549215941, "answer_id": 54505692, "question_id": 54502823, "link": "https://stackoverflow.com/questions/54502823/are-floating-point-smt-logics-slower-than-real-ones/54505692#54505692", "title": "Are floating point SMT logics slower than real ones?", "body": "<p>As with any question regarding solver performance, it is impossible to make generalizations. Christoph Wintersteiger (<a href=\"https://stackoverflow.com/users/869966/christoph-wintersteiger\">https://stackoverflow.com/users/869966/christoph-wintersteiger</a>) would be the expert on this to opine, but I'm not sure how closely he follows this group. Chris: If you're reading this, I'd love to hear your thoughts!</p>\n\n<p>There's also the risk of comparing apples-to-oranges here: Reals and floats are two completely different logics, with different decision procedures, heuristics, algorithms, etc. I'm sure you can find problems where one outperforms the other, with no clear \"performance\" winner.</p>\n\n<p>Having said all that, here are some things that make floating-point (FP) tricky:</p>\n\n<ul>\n<li><p>Rewriting is almost impossible with FP, since rules like associativity simply \ndon't hold for FP addition/multiplication. So, there are fewer opportunities for \nsimplification before bit-blasting.</p></li>\n<li><p>Similarly <code>a * 1/a == 1</code> doesn't hold for floats. Neither does <code>x + 1 /= x</code> or <code>(x + a == x) -&gt; (a == 0)</code> and many other \"obvious\" simplifications that you'd love to be able to make. All of this complicates reasoning.</p></li>\n<li><p>Existence of <code>NaN</code> values make equality non-reflexive: Nothing compares equal to <code>NaN</code> including itself. So, substitution of equals-for-equals is also problematic and requires side conditions.</p></li>\n<li><p>Likewise, the existence of <code>+0</code> and <code>-0</code>, which compare equal but behave differently due to rounding complicate matters. The typical example is <code>x == 0 -&gt; fma(a, b, x) == a * b</code> doesn't hold (where <code>fma</code> is fused multiply-add), because depending on the sign of zero these two expressions can produce different values for different rounding modes.</p></li>\n<li><p>Combination of floats with integers and reals introduce non-linearity, which is always a soft-spot for solvers. So, if you're using FP, it is advisable not to mix it with other theories as the combination itself creates extra complexity.</p></li>\n<li><p>Operations like multiplication, division, and remainder (yes, there's a floating-point remainder operation!) are inherently very complex and lead to extremely large SAT formulas. In particular, multiplication is a known operation that challenges most SAT/BDD engines, due to lack of any good variable ordering and splitting heuristics. Solvers end-up bit-blasting fairly quickly, resulting in extremely large state-spaces. I have observed that solvers have a hard time dealing with FP division and remainder operations even when the input is completely concrete, imagine what happens when they are fully symbolic!</p></li>\n<li><p>The logic of reals have a decision procedure with a double-exponential complexity. However, techniques like Fourier-Motzkin elimination (<a href=\"https://en.wikipedia.org/wiki/Fourier%E2%80%93Motzkin_elimination\" rel=\"nofollow noreferrer\">https://en.wikipedia.org/wiki/Fourier%E2%80%93Motzkin_elimination</a>), while remaining exponential, perform really well in practice.</p></li>\n<li><p>FP solvers are relatively new, and it's a niche area with nascent research. So existing solvers tend to be quite conservative and quickly bit-blast and reduce the problem to bit-vector logic. I would expect them to improve over time, just like all the other theories did.</p></li>\n</ul>\n\n<p>Again, I want to emphasize comparing solver performance on these two different logics is misguided as they are totally different beasts. But hopefully, the above points illustrate why floating-point is tricky in practice.</p>\n\n<p>A great paper to read about the treatment of IEEE754 floats in SMT solvers is: <a href=\"http://smtlib.cs.uiowa.edu/papers/BTRW14.pdf\" rel=\"nofollow noreferrer\">http://smtlib.cs.uiowa.edu/papers/BTRW14.pdf</a>. You can see the myriad of operations it supports and get a sense of the complexity.</p>\n"}], "owner": {"reputation": 29966, "user_id": 637669, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/0227e5d5eaceb8ae2f751df38d421764?s=128&d=identicon&r=PG", "display_name": "arrowd", "link": "https://stackoverflow.com/users/637669/arrowd"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 248, "favorite_count": 1, "accepted_answer_id": 54505692, "answer_count": 1, "score": 8, "last_activity_date": 1549240589, "creation_date": 1549196851, "last_edit_date": 1549199136, "question_id": 54502823, "link": "https://stackoverflow.com/questions/54502823/are-floating-point-smt-logics-slower-than-real-ones", "title": "Are floating point SMT logics slower than real ones?", "body": "<p>I wrote an application in Haskell that calls Z3 solver to solve constrains with some complex formulas. Thanks to Haskell I can quickly switch the data type I'm working with.</p>\n\n<p>When using SBV's <code>AlgReal</code> type for computations, I get results in sensible time, however switching to <code>Float</code> or <code>Double</code> types makes Z3 consume ~2Gb of RAM and doesn't result even in 30 minutes.</p>\n\n<p>Is this expected that producing floating point solutions require much more time, or it is some mistake on my side?</p>\n"}, {"tags": ["parsing", "haskell", "attoparsec"], "answers": [{"comments": [{"owner": {"reputation": 7397, "user_id": 27385, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/8ad2304dd68978c01b9bf45daa6d9fe4?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/27385/alex"}, "edited": false, "score": 1, "creation_date": 1549272853, "post_id": 54507374, "comment_id": 95829584, "body": "Thanks.I think my simplest approach would be to check <code>isPrefixOf &quot;import &quot;</code> for each line of input and then retrieve &amp; parse as necessary. I guess I wasn&#39;t far off!"}], "tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": true, "score": 5, "last_activity_date": 1549226528, "creation_date": 1549226528, "answer_id": 54507374, "question_id": 54501861, "link": "https://stackoverflow.com/questions/54501861/implementing-includes-when-parsing-in-attoparsec/54507374#54507374", "title": "Implementing &quot;includes&quot; when parsing in Attoparsec", "body": "<p>Attoparsec is pure (<code>Data.Attoparsec.Internal.Types.Parser</code> is not a transformer and doesn\u2019t include <code>IO</code>) so you\u2019re right that you can\u2019t expand includes from within a parser directly. </p>\n\n<p>Splitting the parser into two passes seems like the right approach: one pass acts like the C preprocessor, accepting a file with <code>include</code> statements interleaved with other stuff. The \u201cother stuff\u201d only needs to be basically lexically valid, not your full parser\u2014just like the C preprocessor only cares about tokens and matching parentheses, not matching other brackets or anything semantic. You then replace the includes, producing a fully expanded file that you can give to your existing parser.</p>\n\n<p>If an included file must be syntactically \u201cstandalone\u201d in some sense<sup>\u2020</sup>, then you can parse a whole file first, interleaved with <code>include</code>s, then replace them. For instance:</p>\n\n<pre><code>-- Whatever items you\u2019re parsing.\ndata Item\n\n-- A reference to an included path.\ndata Include = Include FilePath\n\nparse :: Parser [Either Include Item]\n\n-- Substitute includes; also calls \u2018parse\u2019\n-- recursively until no includes remain.\nsubstituteIncludes :: [Either Include Item] -&gt; IO [Item]\n</code></pre>\n\n<p><sup>\u2020</sup> Say, if you\u2019re just using attoparsec for lexing tokens that can\u2019t cross file boundaries anyway, or you\u2019re doing full parsing but want to <em>disallow</em> an include file that contains e.g. unmatched brackets.</p>\n\n<hr>\n\n<p>The other option is to embed <code>IO</code> in your parser directly by using a different parsing library such as megaparsec, which provides a <code>ParsecT</code> transformer that you can wrap around <code>IO</code> to do <code>IO</code> directly in your parser. I would probably do this for a prototype, but it seems tidier to separate the concerns of parsing and expansion as much as possible.</p>\n"}], "owner": {"reputation": 7397, "user_id": 27385, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/8ad2304dd68978c01b9bf45daa6d9fe4?s=128&d=identicon&r=PG&f=1", "display_name": "Alex", "link": "https://stackoverflow.com/users/27385/alex"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 96, "favorite_count": 0, "accepted_answer_id": 54507374, "answer_count": 1, "score": 4, "last_activity_date": 1549226528, "creation_date": 1549189015, "last_edit_date": 1549216550, "question_id": 54501861, "link": "https://stackoverflow.com/questions/54501861/implementing-includes-when-parsing-in-attoparsec", "title": "Implementing &quot;includes&quot; when parsing in Attoparsec", "body": "<p>I am writing a DSL for fun. I decided to use attoparsec because I was familiar with it.</p>\n\n<p>I want to implement parsing of includes with relative filenames like this:</p>\n\n<pre><code>include /some/dir/file.ext\n</code></pre>\n\n<p>or URLs:</p>\n\n<pre><code>include http://blah.com/my/file.ext\n</code></pre>\n\n<p>So when I'm parsing I expect to read the referenced resource and parse the entire thing, appending its contents to the \"outer\" parsing state.</p>\n\n<p>The problem is that although the parsing of these statements is easy, I can't run IO (as I understand it) within my Attoparsec parsers. </p>\n\n<p>How do I use Attoparsec to achieve this? Do I chop the initial input up using some string filtering and then parse each \"block\" into <code>parse</code> and <code>feed</code> accordingly? Essentially a two-pass parse approach?</p>\n"}, {"tags": ["haskell", "recursion"], "comments": [{"owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "edited": false, "score": 3, "creation_date": 1549150524, "post_id": 54498459, "comment_id": 95802148, "body": "<code>==</code> and <code>+</code> are built-in functions."}], "answers": [{"tags": [], "owner": {"reputation": 19532, "user_id": 570689, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/4eed5285039322bafbeee9102367b0a4?s=128&d=identicon&r=PG", "display_name": "\u0414\u041c\u0418\u0422\u0420\u0418\u0419 \u041c\u0410\u041b\u0418\u041a\u041e\u0412", "link": "https://stackoverflow.com/users/570689/%d0%94%d0%9c%d0%98%d0%a2%d0%a0%d0%98%d0%99-%d0%9c%d0%90%d0%9b%d0%98%d0%9a%d0%9e%d0%92"}, "is_accepted": false, "score": 3, "last_activity_date": 1549150547, "last_edit_date": 1549150547, "creation_date": 1549150222, "answer_id": 54498536, "question_id": 54498459, "link": "https://stackoverflow.com/questions/54498459/recursive-haskell-function-to-determine-position-of-element-in-list/54498536#54498536", "title": "Recursive Haskell Function to Determine Position of Element in List", "body": "<p>Let's try to define such a function, but instead of returning <code>-1</code> in case of element being not a part of the list, we can return <code>Nothing</code>:</p>\n\n<pre><code>isPartOf :: Eq a =&gt; [a] -&gt; a -&gt; Maybe Int\nisPartOf [] _ = Nothing\nisPartOf (x : xs) a | x == a = Just 0\n                     | otherwise = fmap ((+) 1) (isPartOf xs a)\n</code></pre>\n\n<p>So, it works like that:</p>\n\n<pre><code>&gt;&gt; isPartOf [('a'),('b'),('c')] ('z')\nNothing\nit :: Maybe Int\n\n&gt;&gt; isPartOf [('a'),('b'),('c')] ('c')\nJust 2\nit :: Maybe Int\n</code></pre>\n\n<p>After that we can use built-in function <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Maybe.html#v:fromMaybe\" rel=\"nofollow noreferrer\"><code>fromMaybe</code></a> to convert the <code>Nothing</code> case to <code>-1</code>:</p>\n\n<pre><code>&gt;&gt; fromMaybe (-1) $ isPartOf [('a'),('b'),('c')] ('c')\n2\nit :: Int\n\n&gt;&gt; fromMaybe (-1) $ isPartOf [('a'),('b'),('c')] ('z')\n-1\nit :: Int\n</code></pre>\n\n<p>In case you're curios if such a function already exist, you can use Hoogle for that, searching the <code>[a] -&gt; a -&gt; Maybe Int</code> function: <a href=\"https://www.haskell.org/hoogle/?hoogle=%5Ba%5D+-%3E+a+-%3E+Maybe+Int\" rel=\"nofollow noreferrer\">https://www.haskell.org/hoogle/?hoogle=%5Ba%5D+-%3E+a+-%3E+Maybe+Int</a></p>\n\n<p>And the first answer will be <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-List.html#v:elemIndex\" rel=\"nofollow noreferrer\"><code>elemIndex</code></a>:</p>\n\n<pre><code>&gt;&gt; elemIndex 'c' [('a'),('b'),('c')]\nJust 2\nit :: Maybe Int\n\n&gt;&gt; elemIndex 'z' [('a'),('b'),('c')]\nNothing\nit :: Maybe Int\n</code></pre>\n\n<p>Hope this helps.</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1549167333, "post_id": 54498566, "comment_id": 95804594, "body": "This way is better than the other answer, but you should explain why."}], "tags": [], "owner": {"reputation": 2350, "user_id": 10033674, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/bbU6P.jpg?s=128&g=1", "display_name": "Karol Samborski", "link": "https://stackoverflow.com/users/10033674/karol-samborski"}, "is_accepted": false, "score": 2, "last_activity_date": 1549150467, "creation_date": 1549150467, "answer_id": 54498566, "question_id": 54498459, "link": "https://stackoverflow.com/questions/54498459/recursive-haskell-function-to-determine-position-of-element-in-list/54498566#54498566", "title": "Recursive Haskell Function to Determine Position of Element in List", "body": "<p>You can achieve it easily if you just pass current element idx to the next recursion:</p>\n\n<pre><code>isPartOf :: [Char] -&gt; Char -&gt; Int\nisPartOf lst c = isPartOf' lst c 0\n\nisPartOf' :: [Char] -&gt; Char -&gt; Int -&gt; Int\nisPartOf' [] a _ = -1\nisPartOf' (a:b) c idx\n    | a == c = idx\n    | otherwise = isPartOf' b c (idx + 1)\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 3, "last_activity_date": 1549184734, "last_edit_date": 1549184734, "creation_date": 1549180589, "answer_id": 54500959, "question_id": 54498459, "link": "https://stackoverflow.com/questions/54498459/recursive-haskell-function-to-determine-position-of-element-in-list/54500959#54500959", "title": "Recursive Haskell Function to Determine Position of Element in List", "body": "<p>The smallest change to achieve this is</p>\n\n<pre><code>isPartOf :: [Char] -&gt; Char -&gt; Int\nisPartOf [] a = (-1)    -- was: 0\nisPartOf (a:b) c\n    | a == c = 0\n    | otherwise = 1 +   -- was: isPartOf b c\n          if  (isPartOf b c) &lt; 0  then  (-2)  else  (isPartOf b c)\n</code></pre>\n\n<p>This is terrible computationally though. It recalculates the same value twice; what's worse is that the calculation is done with the recursive call and so the recursive call will be done twice and the time complexity overall will change from linear to exponential!</p>\n\n<p>Let's not do that. But also, what's so special about <code>Char</code>? There's lots of stuff special about the <code>Char</code> but none are used here, except the comparison, <code>(==)</code>.</p>\n\n<p>The types the values of which can be compared by equality are known as those belonging to the <code>Eq</code> (for \"equality\") type class: <code>Eq a =&gt; a</code>. <code>a</code> is a type variable capable of assuming any type whatsoever; but here it is constrained to be such that ... yes, belongs to the <code>Eq</code> type class.</p>\n\n<p>And so we write</p>\n\n<pre><code>isPartOf :: Eq a =&gt; [a] -&gt; a -&gt; Int\nisPartOf [] a = (-1)\nisPartOf (a:b) c\n    | a == c    = 0\n    | otherwise = let d = isPartOf b c in\n                  1 + if  d &lt; 0  then  (-2)  else  d\n</code></pre>\n\n<p>That <code>(-2)</code> looks terribly ad-hoc! A more compact and idiomatic version using <em>guards</em> will also allow us to address this:</p>\n\n<pre><code>isPartOf :: Eq a =&gt; [a] -&gt; a -&gt; Int\nisPartOf [] a = (-1)\nisPartOf (a:b) c\n    | a == c    = 0\n    | d &lt; 0     = d \n    | otherwise = 1 + d\n          where \n          d = isPartOf b c\n</code></pre>\n\n<p>Yes, we can define <code>d</code> in the <code>where</code> clause, and use it in our guards, as well as in the body of each clause. Thanks to laziness it won't even be calculated once if its value wasn't needed, like in the first clause.</p>\n\n<p>Now this code is passable.</p>\n\n<p>The conditional passing and transformation is captured by the <code>Maybe</code> data type's <code>Functor</code> interface / instance:</p>\n\n<pre><code>fmap f Nothing  = Nothing     -- is not changed\nfmap f (Just x) = Just (f x)  -- is changed\n</code></pre>\n\n<p>which is what <a href=\"https://stackoverflow.com/a/54498536/849891\">the other answer here</a> is using. But it <em>could</em> be seen as \"fancy\" when we only start learning Haskell. </p>\n\n<p>When you've written more functions like that, and become \"fed up\" with repeating the same pattern manually over and over, you'll come to appreciate it and will want to use it. But only <em>then</em>.</p>\n\n<p>Yet another concern is that our code calculates its result on the way <em>back</em> from the recursion's <em>base case</em>. </p>\n\n<p>But it could instead calculate it <a href=\"https://stackoverflow.com/a/19951540/849891\">on the way <em>forward</em></a>, towards it, so it can return it immediately when the matching character is found. And if the <em>end of list</em> is found, discard the result calculated so far, and return <code>(-1)</code> instead. This is the approach taken by <a href=\"https://stackoverflow.com/a/54498566/849891\">the second answer</a>. </p>\n\n<p>Though creating an additional function litters the global name space. It is usual to do this by defining it <em>internally</em>, in the so called \"worker/wrapper\" transformation:</p>\n\n<pre><code>isPartOf :: Eq a =&gt; [a] -&gt; a -&gt; Int\nisPartOf xs c = go xs 0\n   where\n   go [] i = (-1)\n   go (a:b) i\n    | a == c    = i\n    | otherwise = -- go b (1 + i)\n                  go b $! (1 + i)\n</code></pre>\n\n<p>Additional boon is that we don't need to pass around the unchanged value <code>c</code> -- it is available in the outer scope, from the point of view of the internal \"worker\" function <code>go</code>, \"wrapped\" by and accessible only to our function, <code>isPartOf</code>.</p>\n\n<p><code>$!</code> is a special call operator which ensures that its argument value is calculated right away, and not delayed. This eliminates an unwanted (in this case) laziness and improves the code efficiency even more.</p>\n\n<p>But from the point of view of overall cleanliness of the design it is better to return the index <code>i</code> wrapped in a <code>Maybe</code> (i.e. <code>Just i</code> or <code>Nothing</code>) instead of using a \"special\" value which is not so special after all -- it is still an <code>Int</code>. </p>\n\n<p>It is good to have <em>types</em> reflect our intentions, and <code>Maybe Int</code> expresses it clearly and cleanly, so we don't have to remember which of the values are special and which regular, so that <em>that knowledge</em> is not external to our program text, but inherent to it.</p>\n\n<p>It is a small and easy change, combining the best parts from the two previous variants:</p>\n\n<pre><code>isPartOf :: Eq a =&gt; [a] -&gt; a -&gt; Maybe Int\nisPartOf .....\n  .......\n  .......  Nothing .....\n  .......\n  .......  Just i  .....\n  .......\n</code></pre>\n\n<p><sub>(none of the code was tested. if there are errors, you're invited to find them and correct them, and validate it by testing).</sub></p>\n"}, {"tags": [], "owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "is_accepted": false, "score": 0, "last_activity_date": 1549249817, "creation_date": 1549249817, "answer_id": 54509736, "question_id": 54498459, "link": "https://stackoverflow.com/questions/54498459/recursive-haskell-function-to-determine-position-of-element-in-list/54509736#54509736", "title": "Recursive Haskell Function to Determine Position of Element in List", "body": "<p>You are using your function as an accumulator. This is cool except the additions with negative one. An accumulator cannot switch from accumulating to providing a negative 1. You want two different things from your function accumulator. You can use a counter for one thing then if the count becomes unnecessary because no match is found and a negative 1 is issued and nothing is lost. The count would be yet another parameter. ugh. You can use Maybe but that complicates. Two functions, like above is simpler. Here are two functions. The first is yours but the accumulator is not additive it's concatenative.</p>\n\n<pre><code>cIn (x:xs) c | x == c    =  [1]\n             | null xs   = [-1]\n             | otherwise = 1:cIn xs c\n\n\nCin ['a','b','c'] 'c'\n</code></pre>\n\n<p>[1,1,1]</p>\n\n<pre><code>cIn ['a','b','c'] 'x'\n</code></pre>\n\n<p>[1,1,-1]</p>\n\n<p>So the second function is</p>\n\n<pre><code>f ls = if last ls == 1 then sum ls else -1 \n</code></pre>\n\n<p>It will</p>\n\n<pre><code>f $ Cin ['a','b','c'] 'c'\n</code></pre>\n\n<p>3</p>\n\n<p>and</p>\n\n<pre><code>f $ Cin ['a','b','c'] 'x'\n</code></pre>\n\n<p>-1</p>\n\n<p>You can zero the index base by changing <code>[1]</code> to <code>[0]</code></p>\n"}], "owner": {"reputation": 33, "user_id": 6151033, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/a182b773d3b235566bfdaa49f689369c?s=128&d=identicon&r=PG&f=1", "display_name": "surajthemighty", "link": "https://stackoverflow.com/users/6151033/surajthemighty"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 350, "favorite_count": 0, "answer_count": 4, "score": 1, "last_activity_date": 1549249817, "creation_date": 1549149483, "last_edit_date": 1549149998, "question_id": 54498459, "link": "https://stackoverflow.com/questions/54498459/recursive-haskell-function-to-determine-position-of-element-in-list", "title": "Recursive Haskell Function to Determine Position of Element in List", "body": "<p>I have this code that will return the index of a char in a char array but I want my function to return something like -1 if the value isn't in the array. As it stands the function returns the size of the array if the element isn't in the array. Any ideas on how to change my code in order to apply this feature?</p>\n\n<p>I am trying not to use any fancy functions to do this. I just want simple code without built-in functions. </p>\n\n<pre><code>isPartOf :: [(Char)] -&gt; (Char) -&gt; Int\nisPartOf [] a = 0\nisPartOf (a:b) c\n    | a == c = 0\n    | otherwise = 1 + isPartOf b c\n</code></pre>\n\n<p>For example:</p>\n\n<pre><code>*Main&gt; isPartOf [('a'),('b'),('c')] ('z') \n3\n</code></pre>\n\n<p>But I want:</p>\n\n<pre><code>*Main&gt; isPartOf [('a'),('b'),('c')] ('z') \n-1\n</code></pre>\n"}, {"tags": ["haskell", "recursion", "set", "subset", "infinite-loop"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1549155977, "post_id": 54497114, "comment_id": 95803046, "body": "Perhaps of interest: you don&#39;t need to explicitly branch on <code>elem x ys</code> like that. You can <code>subset (x:xs) ys = elem x ys &amp;&amp; subset {- ... see answers below ... -} ys</code> and laziness will make sure the recursive call only happens when it needs to."}], "answers": [{"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": true, "score": 4, "last_activity_date": 1549140395, "creation_date": 1549140395, "answer_id": 54497360, "question_id": 54497114, "link": "https://stackoverflow.com/questions/54497114/determine-subset-using-recursion/54497360#54497360", "title": "Determine subset using recursion", "body": "<pre><code>subset (x:xs) ys\n | elem x ys = subset (x:xs) ys\n                   -- ^^^^^^ --\n</code></pre>\n\n<p>Note that the recursive call above does not change the arguments! This will lead to infinite recursion. You want to remove <code>x</code> before making the recursive call.</p>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 4, "last_activity_date": 1549140791, "creation_date": 1549140791, "answer_id": 54497406, "question_id": 54497114, "link": "https://stackoverflow.com/questions/54497114/determine-subset-using-recursion/54497406#54497406", "title": "Determine subset using recursion", "body": "<p>Let's look closely at a fragment of your code:</p>\n\n<pre><code>subset (x:xs) ys\n | elem x ys = subset (x:xs) ys\n</code></pre>\n\n<p>In case <code>elem x ys</code> holds, which is entirely plausible, you have </p>\n\n<pre><code>subset (x:xs) ys = subset (x:xs) ys\n</code></pre>\n\n<p>which performs no reduction in any of its arguments, and just repeats the same call anew.</p>\n\n<p>Hence, infinite loop.</p>\n\n<p>When working with Boolean values, it is customary to use logical connectives, which often leads to more concise and clear definitions:</p>\n\n<pre><code>subset (x:xs) ys = elem x ys &amp;&amp; subset ..... .....\n</code></pre>\n\n<p>is all you need there, because the truth table of <code>(&amp;&amp;)</code> is</p>\n\n<pre><code>    True  &amp;&amp; x  =  x\n    False &amp;&amp; _  =  False\n</code></pre>\n\n<p>i.e. when the first argument is false, the second argument's value is not even inspected.</p>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 4, "last_activity_date": 1549141093, "creation_date": 1549141093, "answer_id": 54497448, "question_id": 54497114, "link": "https://stackoverflow.com/questions/54497114/determine-subset-using-recursion/54497448#54497448", "title": "Determine subset using recursion", "body": "<p>Explicit recursion isn't required; you can use <code>all</code> to verify that <code>(`elem` ys)</code> is true for every value in <code>xs</code>:</p>\n\n<pre><code>subset xs ys = all (`elem` ys) xs\n</code></pre>\n"}], "owner": {"reputation": 63, "user_id": 10447865, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-q198axn1NVA/AAAAAAAAAAI/AAAAAAAAAAc/b5hl_gFvqEU/photo.jpg?sz=128", "display_name": "David Ciocoiu", "link": "https://stackoverflow.com/users/10447865/david-ciocoiu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 71, "favorite_count": 0, "accepted_answer_id": 54497360, "answer_count": 3, "score": 1, "last_activity_date": 1549149412, "creation_date": 1549138578, "last_edit_date": 1549139887, "question_id": 54497114, "link": "https://stackoverflow.com/questions/54497114/determine-subset-using-recursion", "title": "Determine subset using recursion", "body": "<p>I am trying to write a function <code>subset</code> which takes two lists and determines whether the elements of the first appear in the second. </p>\n\n<p>The code compiles to the GHCi but does not run (i.e. becomes stuck) when a function like the following is entered:</p>\n\n<pre><code>subset [1,2] [1,2]\n</code></pre>\n\n<p>This is my code: </p>\n\n<pre><code>subset :: (Eq a) =&gt; [a] -&gt; [a] -&gt; Bool\nsubset [] ys = True\nsubset (x:xs) ys\n | elem x ys = subset (x:xs) ys\n | otherwise =  False\n</code></pre>\n\n<p>Thank you!</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 2, "creation_date": 1549148275, "post_id": 54496068, "comment_id": 95801704, "body": "You seem to be confused about <code>insert</code> and <code>delete</code> from (I assume) <code>Data.Map</code>. They are not actions that modify an existing map in place; they are functions that return a <i>new</i> map with a given key\u2013value pair added or removed, respectively. (The new map is not a complete copy\u2014it shares most of its memory with the old one.)"}, {"owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "edited": false, "score": 1, "creation_date": 1549329277, "post_id": 54496068, "comment_id": 95855239, "body": "I wonder what&#39;s behind the magic in <code>not (true)</code>"}], "answers": [{"tags": [], "owner": {"reputation": 19532, "user_id": 570689, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/4eed5285039322bafbeee9102367b0a4?s=128&d=identicon&r=PG", "display_name": "\u0414\u041c\u0418\u0422\u0420\u0418\u0419 \u041c\u0410\u041b\u0418\u041a\u041e\u0412", "link": "https://stackoverflow.com/users/570689/%d0%94%d0%9c%d0%98%d0%a2%d0%a0%d0%98%d0%99-%d0%9c%d0%90%d0%9b%d0%98%d0%9a%d0%9e%d0%92"}, "is_accepted": false, "score": 4, "last_activity_date": 1549131708, "creation_date": 1549131708, "answer_id": 54496093, "question_id": 54496068, "link": "https://stackoverflow.com/questions/54496068/why-do-i-get-a-parse-input-error-in-haskell/54496093#54496093", "title": "why do i get a Parse input error in haskell", "body": "<p><code>else</code> branch in the definition of <code>g</code> should also be covered.</p>\n"}, {"tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": false, "score": 4, "last_activity_date": 1549131733, "creation_date": 1549131733, "answer_id": 54496099, "question_id": 54496068, "link": "https://stackoverflow.com/questions/54496068/why-do-i-get-a-parse-input-error-in-haskell/54496099#54496099", "title": "why do i get a Parse input error in haskell", "body": "<p>You're getting a parse error because the parser is expecting to see the <code>else</code> part of the <code>if</code> on the previous line - not another variable definition. Every <code>if</code> needs an <code>else</code> in Haskell  - otherwise what would the value of <code>g</code> be when <code>f</code> is false?</p>\n\n<p>Once you've fixed that problem, you'll get a type error in your <code>do</code> statement for two reasons: The values in your <code>do</code> statement aren't monadic (<code>g</code> is a <code>Map</code> and <code>Node value e</code> is whichever type defines the <code>Node</code> constructor); and the types of your <code>then</code> and <code>else</code> don't match: The else part has type <code>m ()</code> for some <code>Monad m</code> and the <code>then</code> part has whichever type <code>Node</code> is part of.</p>\n"}], "owner": {"reputation": 11, "user_id": 11006178, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/414bf5fc70522d65eff67152a4621c9b?s=128&d=identicon&r=PG&f=1", "display_name": "stella doef", "link": "https://stackoverflow.com/users/11006178/stella-doef"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 78, "favorite_count": 0, "answer_count": 2, "score": -3, "last_activity_date": 1549131733, "creation_date": 1549131571, "question_id": 54496068, "link": "https://stackoverflow.com/questions/54496068/why-do-i-get-a-parse-input-error-in-haskell", "title": "why do i get a Parse input error in haskell", "body": "<p>I get a parse input error and 'e'. Why is this? Fixed my indentations too</p>\n\n<pre><code>if not(true)\n    then do g\n            Node value e\n    else return()\nwhere\n    f = false\n    g = if f then Map.delete c children \n    e = Map.insert c (Node Nothing children) children\n\n</code></pre>\n"}, {"tags": ["haskell", "fold", "currying"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1549127870, "post_id": 54495472, "comment_id": 95796351, "body": "The implementation is correct, although you can remove the first clause. In essence you can see <code>foldr f z</code> as something that replaces the <code>(:)</code> of the list with <code>f</code>, and the <code>[]</code> with <code>z</code>."}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549128173, "post_id": 54495472, "comment_id": 95796443, "body": "the last line of your example is wrong. According to the function above, it should be <code>foldr (\\x ys -&gt; (2*x) : ys) [] [1, 2, 3, 4]</code>. And then you can expand that recursively using the definition of <code>foldr</code>."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549128810, "post_id": 54495472, "comment_id": 95796650, "body": "your first definition is for <code>map</code>, not <code>foldMap</code>."}, {"owner": {"reputation": 175, "user_id": 10832310, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-BTRsOLhbuYY/AAAAAAAAAAI/AAAAAAAAAAA/sZXLwRw5JZ0/photo.jpg?sz=128", "display_name": "Jung", "link": "https://stackoverflow.com/users/10832310/jung"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549128997, "post_id": 54495472, "comment_id": 95796692, "body": "@RobinZigmond ah yes i got it now"}, {"owner": {"reputation": 175, "user_id": 10832310, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-BTRsOLhbuYY/AAAAAAAAAAI/AAAAAAAAAAA/sZXLwRw5JZ0/photo.jpg?sz=128", "display_name": "Jung", "link": "https://stackoverflow.com/users/10832310/jung"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549129018, "post_id": 54495472, "comment_id": 95796700, "body": "@WillNess ah youre right"}], "answers": [{"tags": [], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "is_accepted": false, "score": 6, "last_activity_date": 1549129042, "creation_date": 1549129042, "answer_id": 54495670, "question_id": 54495472, "link": "https://stackoverflow.com/questions/54495472/using-foldr-to-define-map-develop/54495670#54495670", "title": "Using foldr to define map (develop)", "body": "<p>First, let's not use the name <code>foldMap</code> since that's already <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/Data-Foldable.html#v:foldMap\" rel=\"noreferrer\">a standard function different from <code>map</code></a>. If you want to re-implement an existing function with the same or similar semantics, convention is to give it <em>the same name</em> but either in a separate module, or with a prime <code>'</code> appended to the name. Also, we can omit the empty-list case, since you can just pass that to the fold just as well:</p>\n\n<pre><code>map' :: (a -&gt; b) -&gt; [a] -&gt; [b]\nmap' f xs = foldr (\\x ys -&gt; f x : ys) [] xs\n</code></pre>\n\n<p>Now if you want to evaluate this function by hand, first just use the definition without inserting anything more:</p>\n\n<pre><code>map' (*2) [1,2,3,4]\n \u2261 let f = (*2)\n       xs = [1,2,3,4]\n   in foldr (\\x ys -&gt; (f x) : ys) [] xs\n \u2261 foldr (\\x ys -&gt; (*2) x : ys) [] [1,2,3,4]\n</code></pre>\n\n<p>Now just prettify a bit:</p>\n\n<pre><code> \u2261 foldr (\\x ys -&gt; x*2 : ys) [] [1,2,3,4]\n</code></pre>\n\n<p>Now to evaluate this through, you also need the definition of <a href=\"http://hackage.haskell.org/package/base-4.12.0.0/docs/src/GHC.Base.html#foldr\" rel=\"noreferrer\"><code>foldr</code></a>. It's actually a bit different in GHC, but effectively</p>\n\n<pre><code>foldr _ z []     =  z\nfoldr f z (x:xs) =  f x (foldr f z xs)\n</code></pre>\n\n<p>So with your example</p>\n\n<pre><code>  ...\n \u2261 foldr (\\x ys -&gt; x*2 : ys) [] (1:[2,3,4])\n \u2261 (\\x ys -&gt; x*2 : ys) 1 (foldr (\\x ys -&gt; x*2 : ys) [] [2,3,4])\n</code></pre>\n\n<p>Now we can perform a \u03b2-reduction:</p>\n\n<pre><code> \u2261 1*2 : foldr (\\x ys -&gt; x*2 : ys) [] [2,3,4]\n \u2261 2 : foldr (\\x ys -&gt; x*2 : ys) [] [2,3,4]\n</code></pre>\n\n<p>...and repeat for the recursion.</p>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 5, "last_activity_date": 1549439995, "last_edit_date": 1549439995, "creation_date": 1549129648, "answer_id": 54495766, "question_id": 54495472, "link": "https://stackoverflow.com/questions/54495472/using-foldr-to-define-map-develop/54495766#54495766", "title": "Using foldr to define map (develop)", "body": "<p><code>foldr</code> defines a family of equations,</p>\n\n<pre><code>foldr g n [] = n\nfoldr g n [x] = g x (foldr g n []) = <b>g</b> x n\nfoldr g n [x,y] = g x (foldr g n [y]) = <b>g</b> x (<b>g</b> y n)\nfoldr g n [x,y,z] = g x (foldr g n [y,z]) = <b>g</b> x (<b>g</b> y (<b>g</b> z n))\n                        ----- r ---------</code></pre>\n\n<p>and so on. <code>g</code> is a <em>reducer</em> function,</p>\n\n<pre><code>                    g x r = ....\n</code></pre>\n\n<p>accepting as <code>x</code> an element of the input list, and as <code>r</code> the <em>r</em>esult of <em>r</em>ecursively processing the <em>r</em>est of the input list (as can be seen in the equations).</p>\n\n<p><code>map</code>, on the other hand, defines a family of equations</p>\n\n<pre><code>map f [] = []\nmap f [x] = [f x] = (:) (f x) [] = <b>((:) . f)</b> x []\nmap f [x,y] = [f x, f y] = <b>((:) . f)</b> x (<b>((:) . f)</b> y [])\nmap f [x,y,z] = [f x, f y, f z] = <b>((:) . f)</b> x (<b>((:) . f)</b> y (<b>((:) . f)</b> z []))\n                                =  (:)  (f x) ( (:)  (f y) ( (:)  (f z) []))</code></pre>\n\n<p>The two families simply exactly match with </p>\n\n<pre><code>g = ((:) . f) = (\\x -&gt; (:) (f x)) = (\\x r -&gt; f x : r)\n</code></pre>\n\n<p>and <code>n = []</code>, and thus</p>\n\n<pre><code>foldr ((:) . f) [] xs  ==  map f xs\n</code></pre>\n\n<hr>\n\n<p>We can prove this rigorously by mathematical induction on the input list's length, following the defining laws of <code>foldr</code>,</p>\n\n<pre><code>foldr g n [] = []\nfoldr g n (x:xs) = g x (foldr g n xs)\n</code></pre>\n\n<p>which are the basis for the equations at the top of this post. </p>\n\n<p>Modern Haskell has <code>Fodable</code> type class with its basic <code>fold</code> following the laws of</p>\n\n<pre><code>fold<sub>(&lt;>,n)</sub> [] = n\nfold<sub>(&lt;>,n)</sub> (<b>xs</b> ++ <b>ys</b>) = fold<sub>(&lt;>,n)</sub> <b>xs</b> &lt;> fold<sub>(&lt;>,n)</sub> <b>ys</b></code></pre>\n\n<p>and the <code>map</code> is naturally defined in its terms as</p>\n\n<pre><code>map f xs  =  foldMap (\\x -&gt; [f x]) xs\n</code></pre>\n\n<p>turning <code>[x, y, z, ...]</code> into <code>[f x] ++ [f y] ++ [f z] ++ ...</code>, since for lists <code>(&lt;&gt;) == (++)</code>. This follows from the equivalence</p>\n\n<pre><code>    f x : ys  ==  [f x] ++ ys\n</code></pre>\n\n<p>This also lets us define <code>filter</code> along the same lines easily, as</p>\n\n<pre><code>filter p xs  =  foldMap (\\x -&gt; [x | p x]) xs\n</code></pre>\n\n<hr>\n\n<p>To your specific question, the expansion is correct, except that  <code>(*2 x)</code> should be written as <code>((*2) x)</code>, which is the same as <code>(x * 2)</code>. <code>(* 2 x)</code> is not a valid Haskell (though valid Lisp :) ). </p>\n\n<p>Functions like <code>(*2)</code> are known as \"<a href=\"https://stackoverflow.com/questions/38743576/write-f-in-pointfree-style/38749169#38749169\">operator sections</a>\" -- the missing argument goes into the empty slot: <code>(* 2) 3 = (3 * 2) = (3 *) 2 = (*) 3 2</code>.</p>\n\n<p>You also asked for some links: see e.g. <a href=\"https://wiki.haskell.org/Fold#List_folds_as_structural_transformations\" rel=\"nofollow noreferrer\">this</a>, <a href=\"https://en.wikibooks.org/wiki/Haskell/Lists_III\" rel=\"nofollow noreferrer\">this</a> and <a href=\"https://en.wikipedia.org/wiki/Fold_(higher-order_function)#As_structural_transformations\" rel=\"nofollow noreferrer\">this</a>.</p>\n"}], "owner": {"reputation": 175, "user_id": 10832310, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-BTRsOLhbuYY/AAAAAAAAAAI/AAAAAAAAAAA/sZXLwRw5JZ0/photo.jpg?sz=128", "display_name": "Jung", "link": "https://stackoverflow.com/users/10832310/jung"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 216, "favorite_count": 0, "answer_count": 2, "score": 3, "last_activity_date": 1549439995, "creation_date": 1549127727, "last_edit_date": 1549129482, "question_id": 54495472, "link": "https://stackoverflow.com/questions/54495472/using-foldr-to-define-map-develop", "title": "Using foldr to define map (develop)", "body": "<p>Having a hard time understanding fold... Is the expansion correct ? Also would appreciate any links, or analogies that would make fold more digestible.</p>\n\n<pre><code>foldMap :: (a -&gt; b) -&gt; [a] -&gt; [b]\nfoldMap f [] = []\nfoldMap f xs = foldr (\\x ys -&gt; (f x) : ys) [] xs\n\n\nb =  (\\x ys -&gt; (f x):ys)\nfoldMap (*2) [1,2,3]\n= b 1 (b 2 (foldr b [] 3))\n= b 1 (b 2 (b 3 ( b [] [])))\n= b 1 (b 2 ((*2 3) : []))\n= b 1 ((*2 2) : (6 :[]))\n= (* 2 1) : (4 : (6 : []))\n= 2 : (4 : (6 : []))\n</code></pre>\n"}, {"tags": ["haskell", "pattern-matching", "syntax-error", "binary-tree"], "comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549123726, "post_id": 54493757, "comment_id": 95795040, "body": "<code>(N a left right)</code> is a pattern. <code>(N a (left a) (right a))</code> should also be a pattern, but it&#39;s an invalid pattern, and Haskell says <a href=\"https://tio.run/##RYy9CgIxEAb7PMVXJniC1x6cnYXNFeoLBLJeFmPUXFAQ3z3mR7Da2d1hrF4u5FxKRkeNUyCCxoiJHT6YMst2U38wFPjJfoY82turw4G06bB7KCEWfhOGoXX2PmK9LaPdS3PEpi2yth2dY20Hnm0hlY0eK1Snfn9cBSGumn1W7oFzvE/pCw\" rel=\"nofollow noreferrer\">&quot;Parse error in pattern: right&quot;</a>, <i>not</i> what you said it says. You don&#39;t need to mention the type in the pattern, just use a variable to name the correspondent constituent of the data type."}, {"owner": {"reputation": 12213, "user_id": 671703, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/96ac349a9c65277e304401ea92a62ff4?s=128&d=identicon&r=PG", "display_name": "pat", "link": "https://stackoverflow.com/users/671703/pat"}, "edited": false, "score": 1, "creation_date": 1549216832, "post_id": 54493757, "comment_id": 95815362, "body": "Why did you limit <code>size</code> to only work on <code>Tree Int</code>?  It should be able to work on a <code>Tree</code> containing any type.  I.e. <code>size :: Tree a -&gt; Int</code>"}], "answers": [{"comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549124307, "post_id": 54493817, "comment_id": 95795228, "body": "&quot;expressions&quot; to the right of <code>=</code>, <i>pattern variables</i> to the left (leaving out the view patterns and the pattern guards with their more complicated rules)."}], "tags": [], "owner": {"reputation": 19532, "user_id": 570689, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/4eed5285039322bafbeee9102367b0a4?s=128&d=identicon&r=PG", "display_name": "\u0414\u041c\u0418\u0422\u0420\u0418\u0419 \u041c\u0410\u041b\u0418\u041a\u041e\u0412", "link": "https://stackoverflow.com/users/570689/%d0%94%d0%9c%d0%98%d0%a2%d0%a0%d0%98%d0%99-%d0%9c%d0%90%d0%9b%d0%98%d0%9a%d0%9e%d0%92"}, "is_accepted": false, "score": 4, "last_activity_date": 1549116513, "creation_date": 1549116513, "answer_id": 54493817, "question_id": 54493757, "link": "https://stackoverflow.com/questions/54493757/function-to-measure-size-of-a-binary-tree/54493817#54493817", "title": "Function to measure size of a binary tree", "body": "<blockquote>\n  <p>When i tried to size (N a (left a) (right a)) instead of size (N a left right)</p>\n</blockquote>\n\n<p><code>left</code> and <code>right</code> in this case are expressions of type <code>Tree Int</code>.</p>\n\n<p><code>a</code> is not a known variable or type in this context.</p>\n\n<p>In case the definition is updated to <code>size (N a left right)</code>, then <code>a</code> is a bound expression of type <code>Int</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 120535, "user_id": 123109, "user_type": "registered", "accept_rate": 55, "profile_image": "https://www.gravatar.com/avatar/157c96de3d125abc1c363ff25c20dfaf?s=128&d=identicon&r=PG", "display_name": "Greg Bacon", "link": "https://stackoverflow.com/users/123109/greg-bacon"}, "is_accepted": false, "score": 1, "last_activity_date": 1549482993, "creation_date": 1549482993, "answer_id": 54561574, "question_id": 54493757, "link": "https://stackoverflow.com/questions/54493757/function-to-measure-size-of-a-binary-tree/54561574#54561574", "title": "Function to measure size of a binary tree", "body": "<p>To help you see what\u2019s going on, you could write your match internal nodes to name the left and right subtrees and their respective values with</p>\n\n<pre><code>size (N _ left@(N a _ _) right@(N b _ _)) = 1 + size left + size right\n</code></pre>\n\n<p><a href=\"https://www.haskell.org/onlinereport/exps.html#sect3.17.1\" rel=\"nofollow noreferrer\">Section 3.17.1 \u201cPatterns\u201d</a> describes what is happening with the at signs, which allow the programmer to name the left and right subtrees.</p>\n\n<blockquote>\n  <p>Patterns of the form <code>var@pat</code> are called <em>as-patterns</em>, and allow one to use <em>var</em> as a name for the value being matched by <em>pat</em>.</p>\n</blockquote>\n\n<p>The broad approach is inelegant for a number of reasons.</p>\n\n<ol>\n<li><code>left</code> and <code>right</code> are already constrained to be of type <code>Tree</code> because of the declaration of the <code>Tree</code> algebraic datatype.</li>\n<li>Much worse, you\u2019d also have to define the other three cases of <code>size</code> for either one or two <code>Nil</code> arguments.</li>\n</ol>\n\n<p><a href=\"https://www.haskell.org/onlinereport/exps.html#sect3.17.2\" rel=\"nofollow noreferrer\">Section 3.17.2 Informal Semantics of Pattern Matching</a> outlines the cases for how the language handles patterns. Of especial note to you in the context of this question are</p>\n\n<blockquote>\n  <p>1. Matching the pattern <em>var</em> against a value <em>v</em> always succeeds and binds <em>var</em> to <em>v</em>.</p>\n</blockquote>\n\n<p>and</p>\n\n<blockquote>\n  <p>5. Matching the pattern <em>con pat<sub>1</sub> \u2026 pat<sub>n</sub></em> against a value, where <em>con</em> is a constructor defined by <code>data</code>, depends on the value:</p>\n  \n  <ul>\n  <li>If the value is of the form <em>con v<sub>1</sub> \u2026 v<sub>n</sub></em>, sub-patterns are matched left-to-right against the components of the data value; if all matches succeed, the overall match succeeds; the first to fail or diverge causes the overall match to fail or diverge, respectively.</li>\n  <li>If the value is of the form <em>con\u2032 v<sub>1</sub> \u2026 v<sub>n</sub></em>, where <em>con</em> is a different constructor to <em>con\u2032</em>, the match fails.</li>\n  <li>If the value is \u22a5, the match diverges.</li>\n  </ul>\n</blockquote>\n\n<p>The first is how you want to do it and how you wrote it in your question, by binding the left and right subtree to variables. Your first attempt looked vaguely like binding to a constructor, and that\u2019s why you got a syntax error.</p>\n\n<p>Haskell pattern matching can be more sophisticated, <em>e.g.</em>, <a href=\"https://ghc.haskell.org/trac/ghc/wiki/ViewPatterns\" rel=\"nofollow noreferrer\">view patterns</a>. For learning exercises, master the basics first.</p>\n"}], "owner": {"reputation": 175, "user_id": 10832310, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-BTRsOLhbuYY/AAAAAAAAAAI/AAAAAAAAAAA/sZXLwRw5JZ0/photo.jpg?sz=128", "display_name": "Jung", "link": "https://stackoverflow.com/users/10832310/jung"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 121, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1549482993, "creation_date": 1549115995, "last_edit_date": 1549124552, "question_id": 54493757, "link": "https://stackoverflow.com/questions/54493757/function-to-measure-size-of-a-binary-tree", "title": "Function to measure size of a binary tree", "body": "<p>When i tried to <code>size (N a (left a) (right a))</code> instead of <code>size (N a left right)</code>, i was told by ghci that this line conflicts when the definition. I am not sure why because in my data signature, it is <code>N a (Tree a) (Tree a)</code>. <code>size</code> is a function to count the number of nodes in a bin tree. </p>\n\n<pre><code>data Tree a = Nil | N a (Tree a) (Tree a) deriving (Show, Read, Eq)\n\n\nsize :: Tree Int -&gt; Int\nsize Nil = 0\nsize (N _ left right) = 1 + size left + size right\n</code></pre>\n"}, {"tags": ["haskell", "types", "polymorphism", "partial-application", "parametric-polymorphism"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 6, "creation_date": 1549094985, "post_id": 54491190, "comment_id": 95788286, "body": "Number literals in Haskell don&#39;t have fixed types. Try <code>:t 2</code> and see. <code>2</code>  <i>can</i> be a function, if you try hard enough."}], "answers": [{"comments": [{"owner": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 0, "creation_date": 1549099702, "post_id": 54491443, "comment_id": 95789233, "body": "And making <code>a-&gt;b</code> an instance of <code>Num</code> can actually be quite useful if <code>b</code> is also an instance of <code>Num</code>."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 0, "creation_date": 1549099930, "post_id": 54491443, "comment_id": 95789293, "body": "could you give a hint as to why and where?"}, {"owner": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 2, "creation_date": 1549100632, "post_id": 54491443, "comment_id": 95789461, "body": "Try it. :)  You\u2019ll be able to write things like <code>(sin + 2 * cos) x</code> instead of <code>sin x + 2 * cos x</code>.  It\u2019s not hard to write the instance declaration. The types will force you to the right definition."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 22266, "user_id": 649287, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7c0ea0055b84020bf860c05f53ba53d5?s=128&d=identicon&r=PG", "display_name": "augustss", "link": "https://stackoverflow.com/users/649287/augustss"}, "edited": false, "score": 0, "creation_date": 1549101249, "post_id": 54491443, "comment_id": 95789596, "body": "thanks. aha, so <code>(cos^2) x = (cos x)^2</code>. I was fixating on <code>cos^2 = cos . cos</code> and was stumped by that for a bit..."}, {"owner": {"reputation": 837, "user_id": 899652, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6f7d96d1b44b09345dc8ee1451196d10?s=128&d=identicon&r=PG", "display_name": "Kevan Stannard", "link": "https://stackoverflow.com/users/899652/kevan-stannard"}, "edited": false, "score": 0, "creation_date": 1549106242, "post_id": 54491443, "comment_id": 95790743, "body": "Thanks for the detailed explanation and example!"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549130552, "post_id": 54491443, "comment_id": 95797126, "body": "you&#39;re welcome. thanks for asking, and staying engaged! :)"}], "tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": true, "score": 9, "last_activity_date": 1549102200, "last_edit_date": 1549102200, "creation_date": 1549097380, "answer_id": 54491443, "question_id": 54491190, "link": "https://stackoverflow.com/questions/54491190/haskell-partial-function-application-with/54491443#54491443", "title": "Haskell partial function application with $", "body": "<p>On the one hand, numeric literals like <code>2</code> are actually read as <code>fromInteger 2 :: Num a =&gt; a</code> so can denote any value of type <code>Num a =&gt; a</code>, meaning, any type which is <em>in</em> type class <code>Num</code>, i.e. has among other things a special version of <code>fromInteger</code> defined which returns the actual value of the actual type, converted from the integer <code>2</code>:</p>\n\n<pre><code>&gt; :i Num\nclass Num a where\n  (+) :: a -&gt; a -&gt; a\n  (*) :: a -&gt; a -&gt; a\n  (-) :: a -&gt; a -&gt; a\n  negate :: a -&gt; a\n  abs :: a -&gt; a\n  signum :: a -&gt; a\n  fromInteger :: Integer -&gt; a\n</code></pre>\n\n<p>As <a href=\"https://www.haskell.org/tutorial/numbers.html\" rel=\"noreferrer\">the Haskell Tutorial</a> puts it (in 10.3),</p>\n\n<blockquote>\n  <p>An integer numeral (without a decimal point) is actually equivalent to an application of <code>fromInteger</code> to the value of the numeral as an <code>Integer</code>. </p>\n</blockquote>\n\n<p>On the other hand, <code>($)</code> has the type </p>\n\n<pre><code>&gt; :t ($)\n($) :: (a -&gt; b) -&gt; a -&gt; b\n</code></pre>\n\n<p>So we have</p>\n\n<pre><code>fromInteger 2 :: Num a1 =&gt;   a1\n($)           ::          (a -&gt; b) -&gt; a -&gt; b\n--------------------------------------------\n($) 2         :: Num      (a -&gt; b) =&gt; a -&gt; b\n</code></pre>\n\n<p>So it's a function, which must also be <em>in</em> the type class <code>Num</code>.</p>\n\n<p>Normally that's not the case but Haskell doesn't know if you could be importing some module which does define such an instance:</p>\n\n<pre><code>instance Num (a -&gt; b) where\n   ....\n   fromInteger n = ....\n   ....\n</code></pre>\n\n<p>so it allows this possibility at the type checking, and only then, seeing that there is no such actual instance defined anywhere, it errors out on <em>that</em>.</p>\n\n<p>For example, following the hint from <a href=\"https://stackoverflow.com/users/649287/augustss\">@augustss</a> in the comments,</p>\n\n<pre><code>instance (Num b) =&gt; Num (a -&gt; b) where\n   (+) f g x = f x + g x\n   (*) f g x = f x * g x\n   abs f x = abs (f x)\n   negate f x = negate (f x)\n   signum f x = signum (f x)\n   fromInteger n = const (fromInteger n)\n</code></pre>\n\n<p>lets us write <code>(sin + 2 * cos^2) x</code>.</p>\n"}], "owner": {"reputation": 837, "user_id": 899652, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/6f7d96d1b44b09345dc8ee1451196d10?s=128&d=identicon&r=PG", "display_name": "Kevan Stannard", "link": "https://stackoverflow.com/users/899652/kevan-stannard"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 116, "favorite_count": 0, "accepted_answer_id": 54491443, "answer_count": 1, "score": 4, "last_activity_date": 1549439681, "creation_date": 1549094524, "last_edit_date": 1549439681, "question_id": 54491190, "link": "https://stackoverflow.com/questions/54491190/haskell-partial-function-application-with", "title": "Haskell partial function application with $", "body": "<p>I'm new to Haskell and looking at a simple example of using function application with <code>$</code>.</p>\n\n<p>It seems straightforward - it takes a function and applies it to a value.</p>\n\n<p>So this makes sense:</p>\n\n<pre><code>&gt; (+3) $ 2\n5\n</code></pre>\n\n<p>This also makes sense:</p>\n\n<pre><code>&gt; ($) (+3) 2\n5\n</code></pre>\n\n<p>This makes sense because the first argument is the function, and the second argument is the value.</p>\n\n<p>Now considering using <code>$</code> to create a partial function.</p>\n\n<p>Looking at types, this makes sense - it just needs a <code>Num</code> type value for <code>b</code>:</p>\n\n<pre><code>&gt; :t ($) (+3)\n($) (+3) :: Num b =&gt; b -&gt; b\n</code></pre>\n\n<p>But here's where I get lost - what is happening here?:</p>\n\n<pre><code>&gt; :t ($) (2)\n($) (2) :: Num (a -&gt; b) =&gt; a -&gt; b\n</code></pre>\n\n<p>I would have expected the first argument would need to be a function, not a simple Num value.</p>\n\n<p>So here's my questions:</p>\n\n<ol>\n<li>What's happening here?</li>\n<li>What does the constraint <code>Num (a -&gt; b)</code> syntax mean?</li>\n<li>What's an example of using <code>($)</code> in this way, that starts with something like <code>($) (2)</code>?</li>\n</ol>\n\n<p>Thanks!</p>\n"}, {"tags": ["haskell", "cryptography"], "comments": [{"owner": {"reputation": 166, "user_id": 3413039, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33307c80f028ab6739893d8bcf73e9d4?s=128&d=identicon&r=PG&f=1", "display_name": "aviaviavi", "link": "https://stackoverflow.com/users/3413039/aviaviavi"}, "edited": false, "score": 0, "creation_date": 1549090744, "post_id": 54489384, "comment_id": 95787522, "body": "I see this got downvoted - apologies, happy to improve the question from any feedback!"}, {"owner": {"reputation": 1197, "user_id": 4051020, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/42660a4e623fd8d2c850081291bcb585?s=128&d=identicon&r=PG&f=1", "display_name": "dopamane", "link": "https://stackoverflow.com/users/4051020/dopamane"}, "edited": false, "score": 0, "creation_date": 1549151364, "post_id": 54489384, "comment_id": 95802288, "body": "Have you looked at <a href=\"http://hackage.haskell.org/package/HsOpenSSL-0.11.4.16/docs/OpenSSL-PEM.html\" rel=\"nofollow noreferrer\">OpenSSL</a>?"}], "answers": [{"tags": [], "owner": {"reputation": 91978, "user_id": 387076, "user_type": "registered", "accept_rate": 47, "profile_image": "https://i.stack.imgur.com/cFyP6.jpg?s=128&g=1", "display_name": "Gilles &#39;SO- stop being evil&#39;", "link": "https://stackoverflow.com/users/387076/gilles-so-stop-being-evil"}, "is_accepted": true, "score": 1, "last_activity_date": 1549158011, "creation_date": 1549158011, "answer_id": 54499205, "question_id": 54489384, "link": "https://stackoverflow.com/questions/54489384/verify-rsa-signature-with-public-key-in-pem-format-in-haskell/54499205#54499205", "title": "Verify RSA signature with public key in PEM format in Haskell", "body": "<p>If a library exposes an interface like <code>public_n :: Integer</code>, it means that it's a library that illustrates the RSA operation, not a library for cryptography. A cryptography library would have interfaces like <code>sign :: Key -&gt; ByteString -&gt; ByteString</code>. Any cryptography library should be able to parse keys in PEM format.</p>\n\n<p><a href=\"https://en.wikipedia.org/wiki/OpenSSL\" rel=\"nofollow noreferrer\">OpenSSL</a> is a popular library for cryptography. It isn't always ideal or easy to use, but it's widespread, and you won't be using its quirky C interface since you're using Haskell. So you can use <a href=\"https://hackage.haskell.org/package/HsOpenSSL\" rel=\"nofollow noreferrer\"><code>HsOpenSSL</code></a>, which is a Haskell binding over OpenSSL. (Note: I have never used HsOpenSSL, but it looks sensible.) Use <a href=\"https://hackage.haskell.org/package/HsOpenSSL-0.11.4.16/docs/OpenSSL-PEM.html#v:readPrivateKey\" rel=\"nofollow noreferrer\"><code>OpenSSL.PEM.readPrivateKey</code></a> to read a key in PEM format, <a href=\"https://hackage.haskell.org/package/HsOpenSSL-0.11.4.16/docs/OpenSSL-EVP-Digest.html#v:digestLBS\" rel=\"nofollow noreferrer\"><code>OpenSSL.EVP.Digest.digestLBS</code></a> to calculate a digest of the message you want to sign, and <a href=\"https://hackage.haskell.org/package/HsOpenSSL-0.11.4.16/docs/OpenSSL-EVP-Sign.html#v:signBS\" rel=\"nofollow noreferrer\"><code>OpenSSL.EVP.Sign.signBS</code></a> to sign the digest.</p>\n"}], "owner": {"reputation": 166, "user_id": 3413039, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/33307c80f028ab6739893d8bcf73e9d4?s=128&d=identicon&r=PG&f=1", "display_name": "aviaviavi", "link": "https://stackoverflow.com/users/3413039/aviaviavi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 164, "favorite_count": 0, "accepted_answer_id": 54499205, "answer_count": 1, "score": 0, "last_activity_date": 1549158011, "creation_date": 1549073599, "last_edit_date": 1549150835, "question_id": 54489384, "link": "https://stackoverflow.com/questions/54489384/verify-rsa-signature-with-public-key-in-pem-format-in-haskell", "title": "Verify RSA signature with public key in PEM format in Haskell", "body": "<p>If I have a payload, signature, and a public key (all in bytestring or similar format), how can I verify the signature?</p>\n\n<p>All of the <code>PublicKey</code> types I see on Hackage seem to represent keys purely via numbers, for instance: </p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>PublicKey    \n\npublic_size :: Int  -- size of key in bytes\n\npublic_n :: Integer -- public p*q\n\npublic_e :: Integer -- public exponant e\n</code></pre>\n\n<p>How can I get a <code>PublicKey</code> from a PEM file, or simply perform verification directly from the PEM file?</p>\n\n<p>[EDIT from the feedback that no solution attempt was made] - I looked around for solutions, but haven't been able to find anything at all on hoogle that satisfies any type signature I'd expect, like <code>ByteString -&gt; PublicKey</code>. I don't want to reimplement this from scratch, as what I'm doing now is just calling out to a python script that performs all of the verification. It would be nice if I didn't need to call out to python though, but can't seem to find any existing code. </p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 29444, "user_id": 3072788, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/220a45c2fcff7e7358d144551b116205?s=128&d=identicon&r=PG&f=1", "display_name": "Alec", "link": "https://stackoverflow.com/users/3072788/alec"}, "edited": false, "score": 0, "creation_date": 1549072635, "post_id": 54489228, "comment_id": 95785055, "body": "I don&#39;t think <code>base</code> has such a function. You could define it: <code>f i x = zipWith (\\j y -&gt; if i == j then x else y) [0..]</code>."}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 0, "creation_date": 1549182660, "post_id": 54489228, "comment_id": 95806645, "body": "<code>splitAt</code> comes very close."}], "answers": [{"comments": [{"owner": {"reputation": 1435, "user_id": 2512768, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/jg1sE.png?s=128&g=1", "display_name": "TW80000", "link": "https://stackoverflow.com/users/2512768/tw80000"}, "edited": false, "score": 1, "creation_date": 1549072993, "post_id": 54489328, "comment_id": 95785117, "body": "Can you expand on why you think that wanting this is a bad sign? If it makes a difference, my lists will always be of length 2, 3, or 4."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 1435, "user_id": 2512768, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/jg1sE.png?s=128&g=1", "display_name": "TW80000", "link": "https://stackoverflow.com/users/2512768/tw80000"}, "edited": false, "score": 8, "creation_date": 1549073399, "post_id": 54489328, "comment_id": 95785162, "body": "@TW80000 Indexing is slow; rebuilding a list after a change like you&#39;re proposing is slow. For small lists, maybe it&#39;s not a big deal; but even so, if you know your lists will always have size 2, 3, or 4, I think the idiomatic thing would be to create a new type that embodies that invariant."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 6, "last_activity_date": 1549072848, "creation_date": 1549072848, "answer_id": 54489328, "question_id": 54489228, "link": "https://stackoverflow.com/questions/54489228/is-there-a-function-in-the-haskell-standard-library-that-replaces-an-item-in-a-l/54489328#54489328", "title": "Is there a function in the Haskell standard library that replaces an item in a list?", "body": "<p>Nope, no such function. Additionally, wanting this is a bad sign; consider using a more suitable data structure than lists if you frequently need indexing.</p>\n"}, {"tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 1, "last_activity_date": 1549102473, "last_edit_date": 1549102473, "creation_date": 1549100240, "answer_id": 54491773, "question_id": 54489228, "link": "https://stackoverflow.com/questions/54489228/is-there-a-function-in-the-haskell-standard-library-that-replaces-an-item-in-a-l/54491773#54491773", "title": "Is there a function in the Haskell standard library that replaces an item in a list?", "body": "<p>Since your lists are short, the repeated indexing could have tolerable performance. </p>\n\n<p>A function to replace a value at a given index and immediately bail out, reusing the rest of the list, can be written as simply as simply</p>\n\n<pre><code>replix :: Int -&gt; a -&gt; [a] -&gt; [a]\nreplix i x xs | i &gt;= 0 = let (h,_:t) = splitAt i xs\n                         in h ++ [x] ++ t\n</code></pre>\n\n<p>with the use of the built-in <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Prelude.html#v:splitAt\" rel=\"nofollow noreferrer\"><code>splitAt :: Int -&gt; [a] -&gt; ([a], [a])</code></a>.</p>\n"}, {"tags": [], "owner": {"reputation": 3054, "user_id": 115030, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15c74c0974c6cc25c194a2737e2d6747?s=128&d=identicon&r=PG", "display_name": "Anders Kaseorg", "link": "https://stackoverflow.com/users/115030/anders-kaseorg"}, "is_accepted": false, "score": 0, "last_activity_date": 1549264315, "creation_date": 1549264315, "answer_id": 54511539, "question_id": 54489228, "link": "https://stackoverflow.com/questions/54489228/is-there-a-function-in-the-haskell-standard-library-that-replaces-an-item-in-a-l/54511539#54511539", "title": "Is there a function in the Haskell standard library that replaces an item in a list?", "body": "\n\n<p>Use the <a href=\"http://hackage.haskell.org/package/lens\" rel=\"nofollow noreferrer\"><code>lens</code></a> library:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>import Control.Lens\n\nf :: Int -&gt; a -&gt; [a] -&gt; [a]\nf i = set (ix i)\n</code></pre>\n"}], "owner": {"reputation": 1435, "user_id": 2512768, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/jg1sE.png?s=128&g=1", "display_name": "TW80000", "link": "https://stackoverflow.com/users/2512768/tw80000"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "accepted_answer_id": 54489328, "answer_count": 3, "score": 1, "last_activity_date": 1549264315, "creation_date": 1549071750, "question_id": 54489228, "link": "https://stackoverflow.com/questions/54489228/is-there-a-function-in-the-haskell-standard-library-that-replaces-an-item-in-a-l", "title": "Is there a function in the Haskell standard library that replaces an item in a list?", "body": "<p>I want a function <code>f :: Int -&gt; a -&gt; [a] -&gt; [a]</code> where the return value is the third argument with the item at the index given by the first argument replaced by the second argument.</p>\n\n<p>So</p>\n\n<pre><code>f 1 42 [1, 2, 3] == [1, 42, 3]\n</code></pre>\n\n<p>I looked on Hoogle for functions with that signature but didn't find any that matched what I was looking for.</p>\n\n<p>Is there a function that does what I'm looking for in the Haskell standard library?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1549060437, "post_id": 54487996, "comment_id": 95782553, "body": "Hint: the <code>filter</code>, <code>fst</code> and <code>elem</code> functions will probably be useful here."}, {"owner": {"reputation": 22377, "user_id": 2288659, "user_type": "registered", "accept_rate": 90, "profile_image": "https://i.stack.imgur.com/bBg8v.png?s=128&g=1", "display_name": "Silvio Mayolo", "link": "https://stackoverflow.com/users/2288659/silvio-mayolo"}, "edited": false, "score": 2, "creation_date": 1549060513, "post_id": 54487996, "comment_id": 95782577, "body": "Also, <a href=\"https://hackage.haskell.org/package/base-4.12.0.0/docs/Data-List.html#v:lookup\" rel=\"nofollow noreferrer\"><code>Data.List.lookup</code></a>, as it&#39;s very close to what you want already."}], "answers": [{"comments": [{"owner": {"reputation": 725, "user_id": 5309823, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Y9956.png?s=128&g=1", "display_name": "cole", "link": "https://stackoverflow.com/users/5309823/cole"}, "edited": false, "score": 0, "creation_date": 1549072997, "post_id": 54488359, "comment_id": 95785119, "body": "You could also pattern match <code>t</code>, i.e. <code>\\(a,_) -&gt; elem a ids</code> (don\u2019t know how to escape backticks)"}, {"owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "reply_to_user": {"reputation": 725, "user_id": 5309823, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Y9956.png?s=128&g=1", "display_name": "cole", "link": "https://stackoverflow.com/users/5309823/cole"}, "edited": false, "score": 0, "creation_date": 1549104923, "post_id": 54488359, "comment_id": 95790417, "body": "You use double backticks  ;)"}], "tags": [], "owner": {"reputation": 4072, "user_id": 4400060, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/9g6QZ.png?s=128&g=1", "display_name": "radrow", "link": "https://stackoverflow.com/users/4400060/radrow"}, "is_accepted": true, "score": 5, "last_activity_date": 1549062940, "creation_date": 1549062940, "answer_id": 54488359, "question_id": 54487996, "link": "https://stackoverflow.com/questions/54487996/using-a-list-of-integers-to-retrieve-a-list-of-tuples-in-haskell/54488359#54488359", "title": "Using a list of Integers to retrieve a list of Tuples in Haskell", "body": "<p>You may use <code>filter</code> function:</p>\n\n<pre><code>query = filter (\\t -&gt; fst t `elem` ids) db\n</code></pre>\n\n<p>or more \"elegant\" pointfree version</p>\n\n<pre><code>query = filter ((`elem` ids) . fst) db\n</code></pre>\n\n<p>If you like list comprehensions use</p>\n\n<pre><code>[t | t &lt;- db, fst t `elem` ids]\n</code></pre>\n"}], "owner": {"reputation": 17, "user_id": 8665452, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2ed77a3b428fcc9e6c20f475b50d59f0?s=128&d=identicon&r=PG&f=1", "display_name": "Michael K", "link": "https://stackoverflow.com/users/8665452/michael-k"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 99, "favorite_count": 0, "accepted_answer_id": 54488359, "answer_count": 1, "score": 0, "last_activity_date": 1552261355, "creation_date": 1549060374, "last_edit_date": 1552261355, "question_id": 54487996, "link": "https://stackoverflow.com/questions/54487996/using-a-list-of-integers-to-retrieve-a-list-of-tuples-in-haskell", "title": "Using a list of Integers to retrieve a list of Tuples in Haskell", "body": "<p>Here is the layout of my problem:</p>\n\n<pre><code>ids :: [Integer]  -- A list of Integers.                                                \n\ndb :: [(Integer, Name)]  -- A list of integer ids with the corresponding names\n</code></pre>\n\n<p>How do I retrieve every tuple from the <code>db</code> where the id from the tuple matches at least one integer from my <code>ids</code> list?</p>\n\n<p>Thanks!</p>\n"}, {"tags": ["parsing", "haskell", "megaparsec"], "answers": [{"tags": [], "owner": {"reputation": 12213, "user_id": 671703, "user_type": "registered", "accept_rate": 92, "profile_image": "https://www.gravatar.com/avatar/96ac349a9c65277e304401ea92a62ff4?s=128&d=identicon&r=PG", "display_name": "pat", "link": "https://stackoverflow.com/users/671703/pat"}, "is_accepted": true, "score": 5, "last_activity_date": 1549041257, "creation_date": 1549041257, "answer_id": 54484148, "question_id": 54483457, "link": "https://stackoverflow.com/questions/54483457/my-megaparsec-parser-gets-stuck-and-ghci-debugging-isnt-helping-either/54484148#54484148", "title": "My Megaparsec parser gets stuck and ghci debugging isn&#39;t helping either", "body": "<p>The <code>sepEndBy sourceline scn</code> will keep iterating as long as it can get the <code>sourceLine</code> and <code>scn</code> parsers to match.  However, both of those parsers can complete successfully without consuming any input, so they will always match.  Since all of the branches of <code>sourceLine</code> have a <code>try</code>, any parse error will cause the parser to back off and just match an infinite number of empty source lines.  Even without a parse error, reaching eof will produce an infinite number of source lines.</p>\n"}], "owner": {"reputation": 125, "user_id": 5594534, "user_type": "registered", "profile_image": "https://graph.facebook.com/957702314318004/picture?type=large", "display_name": "koalag", "link": "https://stackoverflow.com/users/5594534/koalag"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 144, "favorite_count": 1, "accepted_answer_id": 54484148, "answer_count": 1, "score": 2, "last_activity_date": 1549041257, "creation_date": 1549038487, "question_id": 54483457, "link": "https://stackoverflow.com/questions/54483457/my-megaparsec-parser-gets-stuck-and-ghci-debugging-isnt-helping-either", "title": "My Megaparsec parser gets stuck and ghci debugging isn&#39;t helping either", "body": "<p>I have worked through <a href=\"https://markkarpov.com/megaparsec/parsing-simple-imperative-language.html\" rel=\"nofollow noreferrer\">this Megaparsec tutorial</a> and am trying now to write my own parser based on that. I want so write a simple parser for a made-up assembly language:</p>\n\n<pre><code>Label: lda $0ffe\n       sta %10100110\n       push $01, $02, $03\n</code></pre>\n\n<p>This are the simple data types I'm using:</p>\n\n<pre><code>-- Syntax.hs\nmodule Syntax where\n\nimport  Data.Int\n\n-- |A program is made up of one or more source lines\ntype Program = [SourceLine]\n\ndata SourceLine = SourceLine\n    { label :: Maybe String     -- ^ Each line may contain a label\n    , instr :: Maybe String     -- ^ This can either be an opcode or an assembler directive\n    , operand :: Maybe String   -- ^ The opcode/instruction may need operand(s)\n    }\n    deriving (Show, Eq)\n</code></pre>\n\n<p>Here's the code of the parser:</p>\n\n<pre><code>--Parser.hs\nmodule Parser where\n\nimport Syntax\n\nimport Control.Applicative (empty)\nimport Control.Monad (void)\nimport Control.Monad.Combinators.Expr\n-- import Data.Scientific (toRealFloat)\nimport Data.Void\nimport Text.Megaparsec\nimport Text.Megaparsec.Char\nimport qualified Text.Megaparsec.Char.Lexer as L\n\ntype Parser = Parsec Void String\n\n-- | Parse a single source code line\nsourceline :: Parser SourceLine\nsourceline = do\n    l &lt;- optional labelfield\n    i &lt;- optional instrfield\n    o &lt;- optional oprfield\n    return $ SourceLine l i o\n\n-- TODO: forbid double underscores\n-- | Parse the label field of a source line\nlabelfield :: Parser String\nlabelfield = (lexeme . try) $ do\n    l &lt;- identifier\n    symbol \":\"\n    return l\n\n-- TODO: parse assembler directives starting with an elipse (.)\n-- | Parse the instruction field of a source line\ninstrfield :: Parser String\ninstrfield = (lexeme . try) $ do\n    i &lt;- some letterChar\n    return i\n\n-- | Parse the operand field of a source line\noprfield :: Parser String\noprfield = (lexeme . try) $ do\n    o &lt;- try identifier\n         &lt;|&gt; datalist\n         &lt;|&gt; number\n    return o\n\n-- | Parses a legal identifier; identifiers must start with a letter\n--   and my contain underscores or numbers\nidentifier :: Parser String\nidentifier = ((:) &lt;$&gt; letterChar &lt;*&gt; many (alphaNumChar &lt;|&gt; char '_'))\n\n-- | Parse a list of values separated by commas (,)\ndatalist :: Parser String\ndatalist = do\n    x &lt;- some datalist'\n    y &lt;- number\n    return $ filter (/='\\n') $ unlines x ++ y\n\ndatalist' :: Parser String\ndatalist' = try ((++) &lt;$&gt; number &lt;*&gt; (symbol \",\"))\n\n-- | Parse numbers\nnumber :: Parser String\nnumber = try binnumber\n         &lt;|&gt; decnumber\n         &lt;|&gt; hexnumber\n\nbinnumber :: Parser String\nbinnumber = lexeme ((:) &lt;$&gt; char '%' &lt;*&gt; (some $ binDigitChar))\n\ndecnumber :: Parser String\ndecnumber = lexeme $ some digitChar\n\nhexnumber :: Parser String\nhexnumber = lexeme ((:) &lt;$&gt; char '$' &lt;*&gt; (some $ hexDigitChar))\n\n----- Helper Function ----------------------------------------------------------\nlineComment :: Parser ()\nlineComment = L.skipLineComment \"#\"\n\n-- eats all whitespace and newline\nscn :: Parser ()\nscn = L.space space1 lineComment empty\n\n-- eats all whitespace but newline\nsc :: Parser ()\nsc = L.space (void $ takeWhile1P Nothing f) lineComment empty\n  where\n    f x = x == ' ' || x == '\\t'\n\nlexeme :: Parser a -&gt; Parser a\nlexeme = L.lexeme sc\n\nsymbol :: String -&gt; Parser String\nsymbol = L.symbol sc\n\n-- this is giving me trouble\nprog :: Parser Program\nprog = between scn eof (sepEndBy sourceline scn)\n</code></pre>\n\n<p>I've put the function that is giving me trouble. I've written some tests for these functions, here's the tests:</p>\n\n<pre><code>-- file Spec.hs\nimport Syntax\nimport Parser\n\nimport Text.Megaparsec\n\nimport Test.Hspec\nimport Test.Hspec.Megaparsec\nimport Test.QuickCheck\nimport Control.Exception (evaluate)\n\nmain :: IO ()\nmain = hspec $ do\n    describe \"Label parsing\" $ do\n        it \"Parse empty label field\" $\n            parse sourceline \"\" \" \" `shouldParse` SourceLine Nothing Nothing Nothing\n        it \"Parse single character lower-case label\" $\n            parse sourceline \"\" \"x:\" `shouldParse` SourceLine (Just \"x\") Nothing Nothing\n        it \"Parse multi-character label\" $\n            parse sourceline \"\" \"label:\" `shouldParse` SourceLine (Just \"label\") Nothing Nothing\n        it \"Parse multi-character label with trailing whitespace\" $\n            parse sourceline \"\" \"label:   \" `shouldParse` SourceLine (Just \"label\") Nothing Nothing\n        it \"Parse label with underscore\" $\n            parse sourceline \"\" \"la_bel:   \" `shouldParse` SourceLine (Just \"la_bel\") Nothing Nothing\n        it \"Parse label with underscores and numbers\" $\n            parse sourceline \"\" \"l4_b3l:   \" `shouldParse` SourceLine (Just \"l4_b3l\") Nothing Nothing\n\n    describe \"Label and opcode parsing\" $ do\n        it \"Parse line with label and opcode\" $\n            parse sourceline \"\" \"label: lda\" `shouldParse` SourceLine (Just \"label\") (Just \"lda\") Nothing\n        it \"Parse line opcode only\" $\n            parse sourceline \"\" \"lda\" `shouldParse` SourceLine Nothing (Just \"lda\") Nothing\n\n    describe \"Opcodes and operands parsing\" $ do\n        it \"Parse an opcode with symbol operand\" $\n            parse sourceline \"\" \"lda label_2\" `shouldParse` SourceLine Nothing (Just \"lda\") (Just \"label_2\")\n        it \"Parse an opcode with binary operand\" $\n            parse sourceline \"\" \"lda %01101\" `shouldParse` SourceLine Nothing (Just \"lda\") (Just \"%01101\")\n        it \"Parse an opcode with decimal operand\" $\n            parse sourceline \"\" \"lda 1234\" `shouldParse` SourceLine Nothing (Just \"lda\") (Just \"1234\")\n        it \"Parse an opcode with hexdecimal operand\" $\n            parse sourceline \"\" \"lda $affe34\" `shouldParse` SourceLine Nothing (Just \"lda\") (Just \"$affe34\")\n        it \"Parse a labeled opcode with symbol operand\" $\n            parse sourceline \"\" \"label: lda label_2\" `shouldParse` SourceLine (Just \"label\") (Just \"lda\") (Just \"label_2\")\n        it \"Parse a labeled opcode with binary operand\" $\n            parse sourceline \"\" \"labe_l: lda %01101\" `shouldParse` SourceLine (Just \"labe_l\") (Just \"lda\") (Just \"%01101\")\n        it \"Parse a labeled opcode with decimal operand\" $\n            parse sourceline \"\" \"label_2: lda 1234\" `shouldParse` SourceLine (Just \"label_2\") (Just \"lda\") (Just \"1234\")\n        it \"Parse a labeled opcode with hexdecimal operand\" $\n            parse sourceline \"\" \"l4b3l: lda $affe34\" `shouldParse` SourceLine (Just \"l4b3l\") (Just \"lda\") (Just \"$affe34\")\n\n    describe \"Operand parsing\" $ do\n        it \"Parse a value/data list with decimal values\" $\n            parse sourceline \"\" \"lda 12,23,23,43  \" `shouldParse` SourceLine Nothing (Just \"lda\") (Just \"12,23,23,43\")\n        it \"Parse a value/data list with binary values\" $\n            parse sourceline \"\" \"lda %101,%111,%000,%001  \" `shouldParse` SourceLine Nothing (Just \"lda\") (Just \"%101,%111,%000,%001\")\n        it \"Parse a value/data list with hexdecimal values\" $\n            parse sourceline \"\" \"lda $101,$affe,$AfF3,$c3D4  \" `shouldParse` SourceLine Nothing (Just \"lda\") (Just \"$101,$affe,$AfF3,$c3D4\")\n        it \"Parse a value/data list with spaces\" $\n            parse sourceline \"\" \"lda $101, $affe , $AfF3,$c3D4\" `shouldParse` SourceLine Nothing (Just \"lda\") (Just \"$101,$affe,$AfF3,$c3D4\")\n        it \"Parse a value/data list with spaces and mixed values\" $\n            parse sourceline \"\" \"lda %101, 1234 , $AfF3,$c3D4\" `shouldParse` SourceLine Nothing (Just \"lda\") (Just \"%101,1234,$AfF3,$c3D4\")\n\n    -- describe \"Parse multiple lines\" $ do\n    --     it \"Parse a 3-line program\" $\n    --         parse prog \"\" \"label1: \\n  lda $10\\nsta %10011001\" `shouldParse` [SourceLine (Just \"label1\") Nothing Nothing,\n    --                                                                           SourceLine Nothing (Just \"lda\") (Just \"$10\"),\n    --                                                                           SourceLine Nothing (Just \"sta\") (Just \"%10011001\")]\n</code></pre>\n\n<p>As usual with assembly files, I want to parse the source code line by line. All the tests above pass, except for the out-commented one. Running <code>prog</code> in <code>ghci</code> with <code>parseTest</code> yields the same result, it returns no result and crashes eventually:</p>\n\n<pre><code>*Main Parser Syntax Text.Megaparsec&gt; parseTest sourceline \"lda $10 # comment ignored\"\nSourceLine {label = Nothing, instr = Just \"lda\", operand = Just \"$10\"}\n*Main Parser Syntax Text.Megaparsec&gt; parseTest prog \"lda $10\\nsta %1010\"\n-- crashes \n</code></pre>\n\n<p>I'm assuming that I am somehow ab-/overusing <code>lexeme</code> in my code to remove trailing whitespace from the parsed strings. What am I missing?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 570, "user_id": 3295004, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/IGNvT.jpg?s=128&g=1", "display_name": "fp_mora", "link": "https://stackoverflow.com/users/3295004/fp-mora"}, "edited": false, "score": 0, "creation_date": 1549046027, "post_id": 54477343, "comment_id": 95777464, "body": "If you need the lambda for for in-line use, then maybe <code>(\\x -&gt; ((x+5)*(x+5))*2) 4</code> would result in 162. It&#39;s not elegant but is short and may work."}], "answers": [{"comments": [{"owner": {"reputation": 93, "user_id": 5944185, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9bf3d3cc2090faeb23715affa60d6de0?s=128&d=identicon&r=PG&f=1", "display_name": "bevo009", "link": "https://stackoverflow.com/users/5944185/bevo009"}, "edited": false, "score": 0, "creation_date": 1549017185, "post_id": 54477483, "comment_id": 95762162, "body": "Thanks for that one-liner version :) How about the Get Prog example I showed where there are named variables? I&#39;ve been stuck on that the last 2 days"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "reply_to_user": {"reputation": 93, "user_id": 5944185, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9bf3d3cc2090faeb23715affa60d6de0?s=128&d=identicon&r=PG&f=1", "display_name": "bevo009", "link": "https://stackoverflow.com/users/5944185/bevo009"}, "edited": false, "score": 0, "creation_date": 1549017506, "post_id": 54477483, "comment_id": 95762353, "body": "I&#39;m afraid I don&#39;t know what Get Prog is. I actually misread your final code snippet, but having now seen @bradrn&#39;s answer I agree with him, and hope this answers your question? I thought you just wanted <code>calc</code> translated into a lambda expression."}, {"owner": {"reputation": 93, "user_id": 5944185, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9bf3d3cc2090faeb23715affa60d6de0?s=128&d=identicon&r=PG&f=1", "display_name": "bevo009", "link": "https://stackoverflow.com/users/5944185/bevo009"}, "edited": false, "score": 0, "creation_date": 1549018018, "post_id": 54477483, "comment_id": 95762647, "body": "It&#39;s all helping me, your example also, thanks mate!"}], "tags": [], "owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "is_accepted": false, "score": 1, "last_activity_date": 1549016635, "creation_date": 1549016635, "answer_id": 54477483, "question_id": 54477343, "link": "https://stackoverflow.com/questions/54477343/how-to-convert-this-let-where-function-to-a-lambda-in-haskell/54477483#54477483", "title": "How to convert this let/where function to a Lambda in Haskell", "body": "<p>The most simple and straightforward translation to a lambda would be</p>\n\n<pre><code>calc = \\x -&gt; (x*2)*(x*2) + 5\n</code></pre>\n\n<p>although obviously you could use basic mathematics to simplify that expression a little bit.</p>\n"}, {"comments": [{"owner": {"reputation": 93, "user_id": 5944185, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9bf3d3cc2090faeb23715affa60d6de0?s=128&d=identicon&r=PG&f=1", "display_name": "bevo009", "link": "https://stackoverflow.com/users/5944185/bevo009"}, "edited": false, "score": 0, "creation_date": 1549017878, "post_id": 54477702, "comment_id": 95762573, "body": "Thanks brad!  I actually tried that before, but not with the back-slashes in the following definitions. Q. In the Get Prog example, how do they get away without the backslashes?"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "reply_to_user": {"reputation": 93, "user_id": 5944185, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9bf3d3cc2090faeb23715affa60d6de0?s=128&d=identicon&r=PG&f=1", "display_name": "bevo009", "link": "https://stackoverflow.com/users/5944185/bevo009"}, "edited": false, "score": 1, "creation_date": 1549019211, "post_id": 54477702, "comment_id": 95763301, "body": "@bevo009 I guess in Get Prog your <code>where</code> does not define functions (i.e., <code>sumSqr</code> and <code>sqrSum</code> are not functions). Instead, <code>ad5</code>, <code>sqr</code>, and <code>dbl</code> are defined as functions in the <code>where</code>, so they become lambdas."}, {"owner": {"reputation": 93, "user_id": 5944185, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9bf3d3cc2090faeb23715affa60d6de0?s=128&d=identicon&r=PG&f=1", "display_name": "bevo009", "link": "https://stackoverflow.com/users/5944185/bevo009"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1549019850, "post_id": 54477702, "comment_id": 95763644, "body": "@chi that makes sense, so variables/values don&#39;t need a backslash, but functions do. Cheers!."}, {"owner": {"reputation": 93, "user_id": 5944185, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9bf3d3cc2090faeb23715affa60d6de0?s=128&d=identicon&r=PG&f=1", "display_name": "bevo009", "link": "https://stackoverflow.com/users/5944185/bevo009"}, "edited": false, "score": 0, "creation_date": 1549019917, "post_id": 54477702, "comment_id": 95763680, "body": "I&#39;ll just add this for completeness, a reverse direction version of Brad&#39;s answer, using the <code>&amp;</code> operator (actually what I started with)  ``` import Data.Function calc x = (\\ad5 sqr dbl -&gt; (x &amp; dbl &amp; sqr &amp; ad5))          (\\x -&gt; x + 5)          (\\x -&gt; x * x)          (\\x -&gt; x * 2)  ```  ...but for some reason my markup is borked and the code is all messed up, sorry!"}, {"owner": {"reputation": 24266, "user_id": 946226, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/5823d09208b1e4b63bbfcd189492032c?s=128&d=identicon&r=PG", "display_name": "Joachim Breitner", "link": "https://stackoverflow.com/users/946226/joachim-breitner"}, "edited": false, "score": 0, "creation_date": 1549039606, "post_id": 54477702, "comment_id": 95774570, "body": "Just for completeness: The \u201cexactly the same\u201d is only true if <code>y</code> does not mention <code>x</code>, i.e. it is a non-recursive <code>let</code>."}, {"owner": {"reputation": 5397, "user_id": 2193020, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/aa10d01a3d48851073bd61877a56b5a7?s=128&d=identicon&r=PG", "display_name": "hnefatl", "link": "https://stackoverflow.com/users/2193020/hnefatl"}, "edited": false, "score": 0, "creation_date": 1549040702, "post_id": 54477702, "comment_id": 95775118, "body": "Just for extra completeness, they&#39;re also not exactly the same at the type level: the <code>x</code> bound by the <code>let</code> expression can be polymorphic whereas the <code>x</code> bound in the lambda can&#39;t: see 12.1 on <a href=\"https://www.haskell.org/tutorial/pitfalls.html\" rel=\"nofollow noreferrer\">this page</a>."}, {"owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "reply_to_user": {"reputation": 93, "user_id": 5944185, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9bf3d3cc2090faeb23715affa60d6de0?s=128&d=identicon&r=PG&f=1", "display_name": "bevo009", "link": "https://stackoverflow.com/users/5944185/bevo009"}, "edited": false, "score": 0, "creation_date": 1549068585, "post_id": 54477702, "comment_id": 95784395, "body": "@bevo009 The idea with the backslashes is that an expression of the form <code>(\\p q r -&gt; x)</code> defines an <i>anonymous function</i>, or <i>lambda expression</i>, taking as parameters <code>p</code>, <code>q</code> and <code>r</code> and returning the value of <code>x</code>. So saying <code>f x = y</code> is the same as saying <code>f = \\x -&gt; y</code>. See <a href=\"https://wiki.haskell.org/Anonymous_function\" rel=\"nofollow noreferrer\">wiki.haskell.org/Anonymous_function</a> and  <a href=\"https://stackoverflow.com/questions/22220439/haskell-lambda-expression\" title=\"haskell lambda expression\">stackoverflow.com/questions/22220439/haskell-lambda-expressi&zwnj;&#8203;on</a> for more details."}], "tags": [], "owner": {"reputation": 7817, "user_id": 7345298, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/9477d048c5c29b16307b3356146d497a?s=128&d=identicon&r=PG&f=1", "display_name": "bradrn", "link": "https://stackoverflow.com/users/7345298/bradrn"}, "is_accepted": false, "score": 6, "last_activity_date": 1549017353, "creation_date": 1549017353, "answer_id": 54477702, "question_id": 54477343, "link": "https://stackoverflow.com/questions/54477343/how-to-convert-this-let-where-function-to-a-lambda-in-haskell/54477702#54477702", "title": "How to convert this let/where function to a Lambda in Haskell", "body": "<p>The idea is that this <code>let</code> expression:</p>\n\n<pre><code>let x = y in z\n</code></pre>\n\n<p>Is exactly the same as this lambda:</p>\n\n<pre><code>(\\x -&gt; z) y\n</code></pre>\n\n<p>Where <code>y</code> is being used as a parameter and hence is bound to <code>x</code>.</p>\n\n<p>In your case, this would result in:</p>\n\n<pre><code>calc x = (\\ad5 sqr dbl -&gt; (ad5 . sqr . dbl $ x))\n         (\\x -&gt; x + 5)\n         (\\x -&gt; x * x)\n         (\\x -&gt; x * 2)\n</code></pre>\n\n<p>Of course, outside of this exercise few people would actually write it this way :)</p>\n"}], "owner": {"reputation": 93, "user_id": 5944185, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/9bf3d3cc2090faeb23715affa60d6de0?s=128&d=identicon&r=PG&f=1", "display_name": "bevo009", "link": "https://stackoverflow.com/users/5944185/bevo009"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 468, "favorite_count": 2, "answer_count": 2, "score": 3, "last_activity_date": 1549017353, "creation_date": 1549016173, "last_edit_date": 1549016360, "question_id": 54477343, "link": "https://stackoverflow.com/questions/54477343/how-to-convert-this-let-where-function-to-a-lambda-in-haskell", "title": "How to convert this let/where function to a Lambda in Haskell", "body": "<p>How exactly do I convert this let/where function to a lambda in Haskell?</p>\n\n<p>Let statement form:</p>\n\n<pre><code>calc x =    let ad5 x = x + 5\n                sqr x = x * x\n                dbl x = x * 2\n            in\n                ad5 . sqr . dbl $ x\n</code></pre>\n\n<p>Where declaration form:</p>\n\n<pre><code>calc x = ad5 . sqr . dbl $ x\n  where\n        ad5 x = x + 5\n        sqr x = x * x\n        dbl x = x * 2\n</code></pre>\n\n<p>Lambda form? Maybe similar to this example from Get Prog, where the variables are declared first, and then defined at the bottom:</p>\n\n<pre><code>sumSqrOrSqrSum4 x y =   (\\sumSqr sqrSum -&gt;\n                        if sumSqr &gt; sqrSum\n                        then sumSqr\n                        else sqrSum) (x^2 + y^2) ((x + y)^2)\n</code></pre>\n"}, {"tags": ["haskell", "optparse-applicative"], "answers": [{"comments": [{"owner": {"reputation": 577, "user_id": 656347, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/f15mA.jpg?s=128&g=1", "display_name": "Sanchayan Maity", "link": "https://stackoverflow.com/users/656347/sanchayan-maity"}, "edited": false, "score": 0, "creation_date": 1549036083, "post_id": 54481172, "comment_id": 95772521, "body": "That works!! Thank you very much. And now I wonder why I could not think of it."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 1, "last_activity_date": 1549030119, "creation_date": 1549030119, "answer_id": 54481172, "question_id": 54473467, "link": "https://stackoverflow.com/questions/54473467/parsing-cli-options-for-a-product-type/54481172#54481172", "title": "Parsing CLI options for a product type", "body": "<p>Try adding a default alternative to the sum parsers:</p>\n\n<pre><code>pB :: Parser SumType1\npB = flag' d &lt;|&gt; flag' e &lt;|&gt; flag' f &lt;|&gt; pure d  -- defaults to d\n</code></pre>\n"}], "owner": {"reputation": 577, "user_id": 656347, "user_type": "registered", "accept_rate": 0, "profile_image": "https://i.stack.imgur.com/f15mA.jpg?s=128&g=1", "display_name": "Sanchayan Maity", "link": "https://stackoverflow.com/users/656347/sanchayan-maity"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112, "favorite_count": 0, "accepted_answer_id": 54481172, "answer_count": 1, "score": 1, "last_activity_date": 1549030119, "creation_date": 1548999527, "question_id": 54473467, "link": "https://stackoverflow.com/questions/54473467/parsing-cli-options-for-a-product-type", "title": "Parsing CLI options for a product type", "body": "<p>I want to parse command line options corresponding to a product type resembling below.</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>\ndata SumType1 = d | e | f\n\ndata SumType2 = g | h | i\n\ndata Config = Config {\n    a :: Bool,\n    b :: SumType1,\n    c :: SumType2\n}\n\npB :: Parser SumType1\npB = flag' d &lt;|&gt; flag' e &lt;|&gt; flag' f\n\npC :: Parser SumType2\npC = flag' g &lt;|&gt; flag' h &lt;|&gt; flag' i\n\npConfig :: Parser Config\npConfig = Config &lt;$&gt; pA &lt;*&gt; pB &lt;*&gt; pC\n\nopts :: ParserInfo Config\nopts = info (pConfig &lt;**&gt; helper)\n       (fullDesc &lt;&gt; progDesc \"My CLI\" &lt;&gt; header \"CLI executable\")\n\nmain :: IO()\nmain = do\n       (Config a b c) &lt;- execParser opts\n-- Populate a default config using a b c values\n</code></pre>\n\n<p>For simplicity I did not add \"long\" and \"help\" here with flag'.</p>\n\n<p>The above is what I have right now. It may also be that \"d\" itself is another sum type. In this the problem is each of the a, b, c values I need to specify on the command line.</p>\n\n<p>How do I specify such that either of a, b or c may not be specified and the CLI parser still works. Currently if I do not pass even one of a, b or c the parser fails with an error message. I understand that my builder construction is incorrect, but, I am not able to grasp how to fix it. Hope I have described the problem correctly, if not please let me know.</p>\n"}, {"tags": ["haskell", "ghc"], "comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1549049612, "post_id": 54472601, "comment_id": 95778887, "body": "May I ask why you&#39;re using an eliminator rather than a more conventional GADT as evidence?"}], "answers": [{"comments": [{"owner": {"reputation": 8864, "user_id": 83435, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/41b56228b2143ab0929e01c258399f99?s=128&d=identicon&r=PG", "display_name": "So8res", "link": "https://stackoverflow.com/users/83435/so8res"}, "edited": false, "score": 1, "creation_date": 1549074188, "post_id": 54480442, "comment_id": 95785251, "body": "I&#39;m familiar with various ways to propagate the necessary constraints &quot;at runtime&quot; (eg via Dict, or via replacing classes with datatypes entirely); I was hoping for some method to use something like an <code>:-</code> to convince GHC that a certain instance is legal."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": false, "score": 0, "last_activity_date": 1549027372, "creation_date": 1549027372, "answer_id": 54480442, "question_id": 54472601, "link": "https://stackoverflow.com/questions/54472601/is-there-any-way-to-open-constraint-dictionaries-at-compile-time-in-ghc/54480442#54480442", "title": "Is there any way to open constraint dictionaries at compile-time in GHC?", "body": "<p>There's another way to represent type class constraints, as first class dictionaries (<code>Dict</code>), although it's not nearly as ergonomic:</p>\n\n<pre><code>class Hard a where\n  type Deps a :: [*]\n  depsIsList :: Dict (IsList (Deps a))\n\ninstance (Hard a, Hard b) =&gt; Hard (Either a b) where\n  type Deps (Either a b) = Prepend (Deps a) (Deps b)\n  depsIsList =\n   case depsIsList @a of\n     Dict -&gt;\n       case depsIsList @b of\n         Dict -&gt; prependPreservesIsList @(Deps a) @(Deps b)\n</code></pre>\n\n<p>Using <code>(:-)</code> from the <em>constraints</em> package might make composing dictionaries like that a tiny bit less painful.</p>\n"}, {"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1549047885, "post_id": 54485051, "comment_id": 95778229, "body": "Nice end run around computation!"}, {"owner": {"reputation": 8864, "user_id": 83435, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/41b56228b2143ab0929e01c258399f99?s=128&d=identicon&r=PG", "display_name": "So8res", "link": "https://stackoverflow.com/users/83435/so8res"}, "edited": false, "score": 0, "creation_date": 1549139070, "post_id": 54485051, "comment_id": 95799609, "body": "Neat! This is a clever idea that works around the problem in this specific example, and I learned something from it (Thanks!), but it doesn&#39;t answer my more general question as to whether there&#39;s any way to argue to GHC that it should accept an instance via some kind of dictionary pushing. (I&#39;m assuming the answer here is just &quot;no&quot;.)"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 2, "last_activity_date": 1549045023, "creation_date": 1549045023, "answer_id": 54485051, "question_id": 54472601, "link": "https://stackoverflow.com/questions/54472601/is-there-any-way-to-open-constraint-dictionaries-at-compile-time-in-ghc/54485051#54485051", "title": "Is there any way to open constraint dictionaries at compile-time in GHC?", "body": "<p>Consider switching from type-level lists to type-level trees. So:</p>\n\n<pre><code>{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE FlexibleContexts #-}\n{-# LANGUAGE RankNTypes #-}\n{-# LANGUAGE AllowAmbiguousTypes #-}\n\ndata Tree a = Empty | Node a | Branch (Tree a) (Tree a)\n\nclass IsTree xs where\n    isTree ::\n        (xs ~ 'Empty =&gt; a) -&gt;\n        (forall x. xs ~ 'Node x =&gt; a) -&gt;\n        (forall l r. (xs ~ 'Branch l r, IsTree l, IsTree r) =&gt; a) -&gt;\n        a\n\ninstance IsTree 'Empty where isTree a _ _ = a\ninstance IsTree ('Node x) where isTree _ a _ = a\ninstance (IsTree l, IsTree r) =&gt; IsTree ('Branch l r) where isTree _ _ a = a\n\nclass IsTree (Deps a) =&gt; Hard a where\n    type Deps a :: Tree *\n\ninstance (Hard a, Hard b) =&gt; Hard (Either a b) where\n    type Deps (Either a b) = 'Branch (Deps a) (Deps b)\n</code></pre>\n"}], "owner": {"reputation": 8864, "user_id": 83435, "user_type": "registered", "accept_rate": 98, "profile_image": "https://www.gravatar.com/avatar/41b56228b2143ab0929e01c258399f99?s=128&d=identicon&r=PG", "display_name": "So8res", "link": "https://stackoverflow.com/users/83435/so8res"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 131, "favorite_count": 2, "answer_count": 2, "score": 3, "last_activity_date": 1549045023, "creation_date": 1548992821, "question_id": 54472601, "link": "https://stackoverflow.com/questions/54472601/is-there-any-way-to-open-constraint-dictionaries-at-compile-time-in-ghc", "title": "Is there any way to open constraint dictionaries at compile-time in GHC?", "body": "<p>Consider the following Haskell code (GHC 8.2):</p>\n\n<pre><code>{-# LANGUAGE AllowAmbiguousTypes #-}\n{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE FlexibleContexts #-}\n{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE KindSignatures #-}\n{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE PolyKinds #-}\n{-# LANGUAGE RankNTypes #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE TypeApplications #-}\n{-# LANGUAGE TypeFamilies #-}\n{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE UndecidableInstances #-}\nimport Data.Constraint\n\ntype family Head xs where\n  Head (x ': xs) = x\n\ntype family Tail xs where\n  Tail (x ': xs) = xs\n\nclass IsList xs where\n  isList :: (xs ~ '[] =&gt; r) -&gt; ((xs ~ (Head xs ': Tail xs), IsList (Tail xs)) =&gt; r) -&gt; r\n\ninstance IsList '[] where isList r _ = r\ninstance IsList xs =&gt; IsList (x ': xs) where isList _ r = r\n\ntype family Prepend xs ys where\n  Prepend '[] ys = ys\n  Prepend (x ': xs) ys = x ': Prepend xs ys\n\nprependPreservesIsList :: forall xs ys. (IsList xs, IsList ys) =&gt; Dict (IsList (Prepend xs ys))\nprependPreservesIsList = isList @xs Dict (withDict (prependPreservesIsList @(Tail xs) @ys) Dict)\n\nclass IsList (Deps a) =&gt; Hard (a :: *) where\n  type Deps a :: [*]\n\ninstance (Hard a, Hard b) =&gt; Hard (Either a b) where\n  type Deps (Either a b) = Prepend (Deps a) (Deps b)\n</code></pre>\n\n<p>it fails with</p>\n\n<pre><code>Main.hs:37:10: error:\n    \u2022 Could not deduce (IsList (Prepend (Deps a) (Deps b)))\n        arising from the superclasses of an instance declaration\n      from the context: (Hard a, Hard b)\n        bound by the instance declaration at Main.hs:37:10-46\n    \u2022 In the instance declaration for \u2018Hard (Either a b)\u2019\n   |\n37 | instance (Hard a, Hard b) =&gt; Hard (Either a b) where\n   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n</code></pre>\n\n<p>What the code is trying to do is construct a class <code>Hard</code> that has an associated list of types <code>Deps</code>, where the <code>Deps</code> corresponding to an <code>Either a b</code> are supposed to be the concatenation of the <code>Deps</code> corresponding to <code>a</code> and <code>b</code>.</p>\n\n<p>We know how to prove to GHC that this form of concatenation preserves the <code>IsList</code> class, as witnessed by <code>prependPreservesIsList</code>. If we had <code>(Hard a, Hard b)</code> and we needed to write normal code that required <code>(IsList (Deps (Either a b)))</code> we'd just <code>withDict prependPreservesIsList</code> and be on our way. But we need GHC to recognize this constraint \"at compile time\", in order to grant that the <code>Either a b</code> instance is legal.</p>\n\n<p>Is there any way to \"open a constraint dictionary\" at compile-time, or to otherwise finagle this code so as to cause GHC to accept the <code>Either a b</code> instance?</p>\n"}, {"tags": ["haskell", "types", "ghc", "typeclass", "ambiguous"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1548972929, "post_id": 54470002, "comment_id": 95747905, "body": "Since you defined <code>foo</code> in the <code>Bar</code> class, it has an <i>extra</i> &quot;implicit&quot; constraint: it should be <code>(Foo a b, Bar a)</code>, since the <code>class Bar a</code> implies this constraint on <code>a</code>."}, {"owner": {"reputation": 2319, "user_id": 2211273, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/6d55ba6b0f08aed750502866c7e7ee77?s=128&d=identicon&r=PG", "display_name": "Kritzefitz", "link": "https://stackoverflow.com/users/2211273/kritzefitz"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1548973211, "post_id": 54470002, "comment_id": 95747999, "body": "@WillemVanOnsem Ah, yes. I edited those in. Turns out I also forgot to include the <code>a</code>s in the <code>forall</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1548977719, "post_id": 54470002, "comment_id": 95749426, "body": "Sigh. This seems to be another limitation of GHC ambiguous types. (<a href=\"https://stackoverflow.com/questions/50159349/type-abstraction-in-ghc-haskell/50160423#50160423\">another</a>) I find such cases particularly annoying, since they would be trivial to handle in a dependently typed language (Coq/Agda/Idris) as well as, I guess, in GHC Core, since all these languages have explicit type arguments. I hope GHC will improve in this aspect, so that we can finally throw all the proxies away without exceptions."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 1, "creation_date": 1548980217, "post_id": 54470002, "comment_id": 95750011, "body": "<a href=\"https://github.com/ghc-proposals/ghc-proposals/pull/155\" rel=\"nofollow noreferrer\">Relevant GHC proposal</a>. With this, I think you&#39;d just write <code>instance Bar A where foo @b = _</code>. Go over there and urge the proposal process on, if you&#39;d like. The more people wanting it, the faster it should get done."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1549056370, "post_id": 54470002, "comment_id": 95781317, "body": "This really seems like an infelicity in InstanceSignatures rather than anything fundamental to me, to the point that I&#39;d be tempted to file it as a bug on GHC&#39;s Trac and see if I could convince HQ that <code>forall b. Foo a b =&gt; A</code> should really be considered exactly as general as <code>forall b. Foo a b =&gt; A</code>."}], "answers": [{"comments": [{"owner": {"reputation": 2319, "user_id": 2211273, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/6d55ba6b0f08aed750502866c7e7ee77?s=128&d=identicon&r=PG", "display_name": "Kritzefitz", "link": "https://stackoverflow.com/users/2211273/kritzefitz"}, "edited": false, "score": 0, "creation_date": 1548975876, "post_id": 54470384, "comment_id": 95748857, "body": "Yes, that is the solution that I am currently using. I hoped for a solution that doesn&#39;t need proxies in the instance, because implementing new instances will be a more prominent part of my API than using them."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "reply_to_user": {"reputation": 2319, "user_id": 2211273, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/6d55ba6b0f08aed750502866c7e7ee77?s=128&d=identicon&r=PG", "display_name": "Kritzefitz", "link": "https://stackoverflow.com/users/2211273/kritzefitz"}, "edited": false, "score": 0, "creation_date": 1548976226, "post_id": 54470384, "comment_id": 95748972, "body": "Have you tried functional dependencies or is that not applicable either?"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "reply_to_user": {"reputation": 2319, "user_id": 2211273, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/6d55ba6b0f08aed750502866c7e7ee77?s=128&d=identicon&r=PG", "display_name": "Kritzefitz", "link": "https://stackoverflow.com/users/2211273/kritzefitz"}, "edited": false, "score": 0, "creation_date": 1548976311, "post_id": 54470384, "comment_id": 95748997, "body": "A general solution seems quite difficult, if not impossible, but there could be another special feature of your particular problem that would make things much easier."}, {"owner": {"reputation": 2319, "user_id": 2211273, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/6d55ba6b0f08aed750502866c7e7ee77?s=128&d=identicon&r=PG", "display_name": "Kritzefitz", "link": "https://stackoverflow.com/users/2211273/kritzefitz"}, "edited": false, "score": 1, "creation_date": 1549013832, "post_id": 54470384, "comment_id": 95760365, "body": "FunctionalDependencies do solve the problem and the previous iteration of my API actually used TypeFamilies to achieve the same result. I hoped to get rid of them so the possible types of <code>b</code> can&#39;t be restricted by specific instances. The solution I am currently using actually uses proxies like you suggested, but I was hoping to get rid of them, because they&#39;re inconsistent with the rest of the API that consistently uses ambiguous types. As for specific features of my problem, I will expand the question with that later today, when I have sufficient time."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": false, "score": 3, "last_activity_date": 1548974912, "creation_date": 1548974912, "answer_id": 54470384, "question_id": 54470002, "link": "https://stackoverflow.com/questions/54470002/implementing-instance-methods-with-ambiguous-type-variables-not-contained-in-the/54470384#54470384", "title": "Implementing instance methods with ambiguous type variables not contained in the class head", "body": "<p>There doesn't seem to be a way to resolve the ambiguity for instances, so a <code>Proxy</code> or <code>Tagged</code> seems inevitable to define the class, but you can wrap it to <em>use</em> the class with <code>TypeApplications</code>.</p>\n\n<pre><code>class Bar a where\n  foo_ :: Foo a b =&gt; proxy b -&gt; a\n\nfoo :: forall b a. (Bar a, Foo a b) =&gt; a\nfoo = foo_ (Proxy @b)\n</code></pre>\n"}], "owner": {"reputation": 2319, "user_id": 2211273, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/6d55ba6b0f08aed750502866c7e7ee77?s=128&d=identicon&r=PG", "display_name": "Kritzefitz", "link": "https://stackoverflow.com/users/2211273/kritzefitz"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 109, "favorite_count": 2, "answer_count": 1, "score": 3, "last_activity_date": 1548974912, "creation_date": 1548972828, "last_edit_date": 1548972954, "question_id": 54470002, "link": "https://stackoverflow.com/questions/54470002/implementing-instance-methods-with-ambiguous-type-variables-not-contained-in-the", "title": "Implementing instance methods with ambiguous type variables not contained in the class head", "body": "<p>Say I have two classes like this:</p>\n\n<pre><code>{-# LANGUAGE MultiParamTypeClasses, AllowAmbiguousTypes, FlexibleContexts #-}\nclass Foo a b\n\nclass Bar a where\n  foo :: Foo a b =&gt; a\n</code></pre>\n\n<p>Notably, the <code>b</code> of <code>foo</code> can neither be inferred from the use of <code>foo</code> nor from the instance head. Now let's try to implement an instance for this:</p>\n\n<pre><code>data A = A\n\n-- This implementation doesn't actually need the Foo A b constraint, but for the sake of the question it's required here.\na :: Foo A b =&gt; A\na = A\n</code></pre>\n\n<p>So far so good. <code>a</code> is supposed to become the <code>foo</code> in our instance. It even has the right type, right? So let's go ahead and implement the instance:</p>\n\n<pre><code>instance Bar A where\n  foo = a\n</code></pre>\n\n<p>Unfortunately this instance doesn't compile and gives this error instead:</p>\n\n<pre><code>instance-ambiguous.hs:15:9: error: \u2026\n    \u2022 Could not deduce (Foo A b0) arising from a use of \u2018a\u2019\n      from the context: Foo A b\n        bound by the type signature for:\n                   foo :: forall b. Foo A b =&gt; A\n        at /home/sven/instance-ambiguous.hs:15:3-5\n      The type variable \u2018b0\u2019 is ambiguous\n    \u2022 In the expression: a\n      In an equation for \u2018foo\u2019: foo = a\n      In the instance declaration for \u2018Bar A\u2019\n   |\nCompilation failed.\n</code></pre>\n\n<p>At first this error message seems quite nonsensical, because it looks like GHC could just unify <code>b</code> and <code>b0</code> and infer a perfectly fine type. Then I remembered that <code>b</code> and <code>b0</code> aren't visible from the type of <code>foo</code> or <code>a</code> and GHC can't unify them, because it has nothing that guarantees that <code>b</code> and <code>b0</code> are really always exactly the same and this is not such an unexpected error when working with ambiguous types.</p>\n\n<p>Normally when I encounter such errors, I'm able to solve them using TypeApplications and ScopedTypeVariables like this:</p>\n\n<pre><code>{-# LANGUAGE MultiParamTypeClasses, AllowAmbiguousTypes, FlexibleContexts, TypeApplications, ScopedTypeVariables #-}\n\nclass Foo a b\n\nclass Bar b\n\nfoo :: forall b a. (Bar b, Foo a b) =&gt; a\nfoo = undefined\n\nbar :: forall b a. (Bar b, Foo a b) =&gt; a\nbar = foo @b\n</code></pre>\n\n<p>Here I can explicitly supply the <code>@b</code>, because the type signature of <code>bar</code> brought it in scope. So I tried to do the same with my instance (using InstanceSigs):</p>\n\n<pre><code>instance Bar A where\n  foo :: forall b. Foo A b =&gt; A\n  foo = a @b\n</code></pre>\n\n<p>This doesn't compile either and gives this error:</p>\n\n<pre><code>instance-ambiguous.hs:16:10-31: error: \u2026\n    \u2022 Could not deduce (Foo A b0)\n      from the context: Foo A b\n        bound by the type signature for:\n                   foo :: forall b. Foo A b =&gt; A\n        at /home/sven/instance-ambiguous.hs:16:10-31\n      The type variable \u2018b0\u2019 is ambiguous\n    \u2022 When checking that instance signature for \u2018foo\u2019\n        is more general than its signature in the class\n        Instance sig: forall b. Foo A b =&gt; A\n           Class sig: forall b. Foo A b =&gt; A\n      In the instance declaration for \u2018Bar A\u2019\n   |\nCompilation failed.\n</code></pre>\n\n<p>I'm not sure, but I think this means that GHC thinks that my <code>Foo A b =&gt; A</code> in the instance refers to some other <code>b</code> than the one in the class declaration.</p>\n\n<p>Using a pattern declaration on <code>foo</code> to get the original <code>b</code> in scope also doesn't work, because Pattern bindings are forbidden in instance declarations.</p>\n\n<p>Now the question: What are my options to work around this problem?</p>\n\n<p>I know that I can just use <code>Proxy</code>(s/y/ie/)s everywhere and hear none of those ambiguity problems, but I usually find TypeApplications more elegant than <code>Proxy</code>s and would like to use them here, especially because the affected classes are part of my public API.</p>\n\n<p>I could also include the <code>b</code> as a class variable of <code>Bar</code>, but I think that would change the meaning of <code>Bar</code> to something that I don't want, because then instances can choose which <code>b</code>s to implement instances for, but I want every <code>Bar a =&gt; a</code> to work for every <code>b</code> for which an <code>Foo a b</code> exists.</p>\n"}, {"tags": ["parsing", "haskell", "logging", "attoparsec"], "comments": [{"owner": {"reputation": 7666, "user_id": 1241193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0331e5e748a0ac3860b68f6cac130ef1?s=128&d=identicon&r=PG", "display_name": "Bob Dalgleish", "link": "https://stackoverflow.com/users/1241193/bob-dalgleish"}, "edited": false, "score": 0, "creation_date": 1548964604, "post_id": 54468116, "comment_id": 95744477, "body": "The approach that I&#39;ve taken in such situations is to introduce an intermediate parsing step that maintains state, namely a <code>Block</code> that might be merged with a new <code>Entry</code>. It would not emit a <code>Block</code> until it was sure that the <code>Block</code> could not be grown. The other approach is to use attoparsec&#39;s ability to do unbounded lookahead to determine if the following <code>Entry</code> has the same id."}], "answers": [{"tags": [], "owner": {"reputation": 7666, "user_id": 1241193, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0331e5e748a0ac3860b68f6cac130ef1?s=128&d=identicon&r=PG", "display_name": "Bob Dalgleish", "link": "https://stackoverflow.com/users/1241193/bob-dalgleish"}, "is_accepted": true, "score": 1, "last_activity_date": 1548967519, "creation_date": 1548967519, "answer_id": 54468950, "question_id": 54468116, "link": "https://stackoverflow.com/questions/54468116/parsing-multi-line-log-with-attoparsec/54468950#54468950", "title": "Parsing multi line log with attoparsec", "body": "<p>You need to have a parser for <code>Block</code>s. It accepts an <code>Entry</code>, does a lookahead for an <code>Entry</code> with the same id; if not the same, it backtracks and returns what it has so far.</p>\n\n<p>First, let's introduce a conditional <code>Entry</code> parser:</p>\n\n<pre><code>parseEntryFor :: ID -&gt; Parser Entry\nparseEntryFor blockId = do\n  id &lt;- parseEntry\n  if blockId == id\n  then do\n         char ' '\n         content &lt;- takeTill isEndOfLine\n         endOfLine\n         return $ Entry id (unpack content)\n  else fail \"nonmatching id\"\n\n-- |A Block consists of one or more Entry's with the same ID\nparseBlock :: Parser Block\nparseBlock = do\n  (Entry entryId s) &lt;- parseEntry\n  let newBlock = Block entryId [s]\n  endOfLine\n  entries &lt;- many' (parseEntryFor entryId)\n  return $ Block entryId s: (map (\\(Entry _ s') -&gt; x') entries)\n</code></pre>\n\n<p>(This code is not tested, as I have only ever used Parsec.)</p>\n"}], "owner": {"reputation": 849, "user_id": 1714059, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/95f887aedbff06d22b6cfebb4526468e?s=128&d=identicon&r=PG", "display_name": "Batou99", "link": "https://stackoverflow.com/users/1714059/batou99"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 163, "favorite_count": 0, "accepted_answer_id": 54468950, "answer_count": 1, "score": 1, "last_activity_date": 1549032788, "creation_date": 1548963707, "last_edit_date": 1549032788, "question_id": 54468116, "link": "https://stackoverflow.com/questions/54468116/parsing-multi-line-log-with-attoparsec", "title": "Parsing multi line log with attoparsec", "body": "<p>I'm trying to parse a multiline log like this</p>\n\n<pre><code>[xxx] This is 1\n[xxx] This is also 1\n[yyy] This is 2\n</code></pre>\n\n<p>I have these types defined</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\n\nmodule Parser where\n\nimport Prelude hiding(takeWhile)\nimport Data.Text\nimport Data.Word\nimport Data.Attoparsec.Text as T\nimport Data.Char\nimport Data.String\n\ndata ID    = ID String deriving (Eq, Show)\ndata Entry = Entry ID String deriving (Eq, Show)\ndata Block = Block ID [String]\ndata Log   = Log [Block]\n</code></pre>\n\n<p>And defined these parsers:</p>\n\n<pre><code>parseID :: Parser ID\nparseID = do\n  char '['\n  id &lt;- takeTill ( == ']' )\n  char ']'\n  return $ ID $ unpack id\n\nparseEntry :: Parser Entry\nparseEntry = do\n  id &lt;- parseID\n  char ' '\n  content &lt;- takeTill isEndOfLine\n  return $ Entry id (unpack content)\n</code></pre>\n\n<p>This works ok when I do stuff like <code>parseOnly parseEntry entryString</code> and I get back an <code>Entry</code>.</p>\n\n<p>The problem is when I try to parse something like the log I added at the start.\nI would get a <code>[Entry]</code> but I would like to get <code>[Block]</code>.</p>\n\n<p>Also I want that when 2 or more consecutive lines have the same ID (like <code>xxx</code>) the should get stored into the same block, so for parsing the aforementioned log I'd like to get back</p>\n\n<pre><code>[block1, block2]\n-- block1 == Block \"xxx\" [\"This is 1\", \"This is also 1\"]\n-- block2 == Block \"yyy\" [\"This is 2\"]\n</code></pre>\n\n<p>How can I make the parser create new blocks or add into the last generated one depending on if the <code>ID</code> changes?</p>\n\n<p>One obvious solution is to simply generate a <code>[Entry]</code> and then use a folding function to convert it to <code>[Block]</code> with the proper logic, but I'd be doing 2 passes, 1 over the log and another over the <code>[Entry]</code> which seems not only is not too performant for large logs but also feels like the wrong way to do it (from my very limited attoparsec knowledge)</p>\n\n<p>Any other ideas?</p>\n\n<h2>EDIT</h2>\n\n<p><a href=\"https://stackoverflow.com/users/1241193/bob-dalgleish\">Bob Dalgleish</a> solution essentially works (many thanks!!!), just needed a few tweaks to make it work.\nThis is my final solution:</p>\n\n<pre><code>data ID    = ID String deriving (Eq, Show)\ndata Entry = Entry ID String deriving (Eq, Show)\ndata Block = Block ID [String] deriving (Eq, Show)\ndata Log   = Log [Block] deriving (Eq, Show)\n\nparseID :: Parser ID\nparseID = do\n  char '['\n  id &lt;- takeTill ( == ']' )\n  char ']'\n  return $ ID $ unpack id\n\nparseEntry :: Parser Entry\nparseEntry = do\n  id &lt;- parseID\n  char ' '\n  content &lt;- takeTill isEndOfLine\n  return $ Entry id (unpack content)\n\nparseEntryFor :: ID -&gt; Parser Entry\nparseEntryFor blockId = do\n  id &lt;- parseID\n  if blockId == id\n     then do\n       char ' '\n       content &lt;- takeTill isEndOfLine\n       endOfLine &lt;|&gt; endOfInput\n       return $ Entry id (unpack content)\n  else fail \"nonmatching id\"\n\nparseBlock :: Parser Block\nparseBlock = do\n  (Entry entryId s) &lt;- parseEntry\n  let newBlock = Block entryId [s]\n  endOfLine &lt;|&gt; endOfInput\n  entries &lt;- many' (parseEntryFor entryId)\n  return $ Block entryId (s : Prelude.map (\\(Entry _ s') -&gt; s') entries)\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 7, "creation_date": 1548910792, "post_id": 54453492, "comment_id": 95715389, "body": "Are you familiar with sum types?  <code>data Card = VC VictoryCard | TC TreasureCard | ...</code>?  Would that work for you?"}, {"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1548924198, "post_id": 54453492, "comment_id": 95721054, "body": "Not directly related to the question, but judging from your code I can&#39;t help but assume you&#39;re coding some sort of Dominion game or application - as a huge fan of the game (as well as budding Haskell programmer) I&#39;d love to see what you eventually come up with :)"}], "owner": {"reputation": 1435, "user_id": 2512768, "user_type": "registered", "accept_rate": 50, "profile_image": "https://i.stack.imgur.com/jg1sE.png?s=128&g=1", "display_name": "TW80000", "link": "https://stackoverflow.com/users/2512768/tw80000"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 91, "favorite_count": 0, "closed_date": 1548922542, "answer_count": 0, "score": 0, "last_activity_date": 1548910273, "creation_date": 1548910273, "question_id": 54453492, "link": "https://stackoverflow.com/questions/54453492/how-to-define-a-haskell-type-that-is-one-of-many-values", "closed_reason": "Duplicate", "title": "How to define a Haskell type that is one of many values", "body": "<p>I have 3 <code>data</code>'s defined:</p>\n\n<pre><code>data ActionCard = ActionCard {\n  actionCardCost :: Int,\n  plusActions :: Int,\n  plusBuys :: Int,\n  plusCards :: Int,\n  plusCoins :: Int\n} deriving (Show)\n\ndata TreasureCard = TreasureCard {\n  treasureCardCost :: Int,\n  treasureCardValue :: Int\n} deriving (Show)\n\ndata VictoryCard = VictoryCard {\n  victoryCardCost :: Int,\n  victoryCardValue :: Int\n} deriving (Show)\n</code></pre>\n\n<p>I want to define <code>Card</code> such that anywhere a <code>Card</code> type is used, it means the value is either an instance of <code>ActionCard</code>, <code>TreasureCard</code>, or <code>VictoryCard</code>.</p>\n\n<p>Basically I want <code>Card</code> to be an interface that the three all implement, to borrow from OOP.</p>\n\n<p>I want to be able to write</p>\n\n<pre><code>type Deck = [Card]\n</code></pre>\n"}, {"tags": ["haskell", "denotational-semantics"], "answers": [{"tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 3, "last_activity_date": 1548908805, "creation_date": 1548908805, "answer_id": 54453274, "question_id": 54452549, "link": "https://stackoverflow.com/questions/54452549/how-to-add-function-and-procedure-abstractions-denotational-semantics-using-hask/54453274#54453274", "title": "How to add function and procedure abstractions denotational semantics using haskell?", "body": "<p>You didn't define <code>Identifier</code>. Though you defined <code>Ident</code>, is that what you meant?</p>\n"}], "owner": {"reputation": 13, "user_id": 10497888, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-pUwCLrPePoQ/AAAAAAAAAAI/AAAAAAAAAAA/AAN31DUuHzS0MUNtgTXv2UIF_18euRxEiQ/mo/photo.jpg?sz=128", "display_name": "Chuanyi Huang", "link": "https://stackoverflow.com/users/10497888/chuanyi-huang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 112, "favorite_count": 0, "closed_date": 1549105274, "accepted_answer_id": 54453274, "answer_count": 1, "score": 0, "last_activity_date": 1548908805, "creation_date": 1548902382, "question_id": 54452549, "link": "https://stackoverflow.com/questions/54452549/how-to-add-function-and-procedure-abstractions-denotational-semantics-using-hask", "closed_reason": "Not suitable for this site", "title": "How to add function and procedure abstractions denotational semantics using haskell?", "body": "<p>I want write a haskell program to implement a simple imperative language based on its denotational semantics.\nI use GHCi, version 8.4.2 on windows.\nI encountered some issue when implementing function and procedure abstraction described below.</p>\n\n<p>let me describe it. I call it IMP.\nFirst, I define abstract syntax.\nIMP only accept integer. and identifier will be string.</p>\n\n<pre><code>    type      Numeral  = Int      \n    type      Ident    = String\n\n    data Command =\n                  Skip\n                | Assign   (Ident,       Expression)\n                | Letin    (Declaration, Command   )\n                | Cmdcmd   (Command,     Command   )\n                | Ifthen   (Expression,  Command, Command)\n                | Whiledo  (Expression,  Command   )\n                | IdentifierC ( ActualParameter )\n\n    data Expression =\n                Num    Numeral\n                | False_\n                | True_\n                | Notexp   Expression\n                | Id       Ident\n                | Sumof   (Expression,  Expression)\n                | Subof   (Expression,  Expression)\n                | Prodof  (Expression,  Expression)\n                | Less    (Expression,  Expression)\n                | Leten   (Declaration, Expression)\n                | IdentifierE ( ActualParameter )\n                  deriving Show\n\n    type ActualParameter = Expression\n\n    data FormalParameter = Constfp Identifier\n\n    data Declaration =\n              Constdef (Ident,  Expression)\n            | Vardef   (Ident,  TypeDef   )\n            | Func Identifier ( FormalParameter ) ~ Expression\n            | Proce Identifier ( FormalParameter ) ~ Command\n              deriving Show\n\n    data TypeDef =\n              Bool | Int\n              deriving Show\n</code></pre>\n\n<p>brief explanation:\nin Command, Skip will do nothing.\nAssign will give value of the Expression to the Ident.\nLetin will declare some variable in command.\nCmdcmd will run 2 commands sequentially.\nIfthen is conditional command, if first expression is evaluated to true, then run first command, second command otherwise.\nWhiledo is loop.\nIdentifierC ( ActualParameter ): IdentifierC denotes some function in the local environment. this ActualParameter is some expression with some value. this command jus call this function on the specified value.</p>\n\n<p>in Expression, from top to down are:\nnumeral\nbool false\nbool true\nnegate of expression\nget value of the Ident from the local environment.\nsum 2 expressions\nsubstract 2 expressions\nproduct of 2\n&lt;\ndeclare some variable in expression\nIdentifierE ( ActualParameter ) IdentifierE denotes some function in the local environment. this ActualParameter is some expression with some value. this command jus call this function on the specified value. finally got a new value as the result of this expression.</p>\n\n<p>then is Semantic Domains</p>\n\n<pre><code>    type    Integer = Int\n    type    Boolean = Bool\n    type    Location  = Int\n    type    Function = Argument -&gt; Store -&gt; Value\n    type    Procedure = Argument -&gt; Store -&gt; Store\n    -- store would be snapshot of the memory.\n\n    data    Value   = IntValue    Int\n                    | TruthValue  Bool\n                      deriving (Eq, Show)\n    -- first class value only are int and bool\n\n    type    Storable  = Value\n\n    data    Bindable  = Const Value \n                      | Variable Location \n                      | Function Func \n                      | Procedure Proce\n                      deriving (Eq, Show)\n\n    data    Denotable = Unbound | Bound Bindable\n                      deriving (Eq, Show)\n\n    type    Argument = Value\n\n    data Sval  = Stored Storable | Undef | Unused\n\n    -- The actual storage in a Store\n    type DataStore = Location -&gt; Sval\n\n    --                   --bot---   --top---  --data---\n    data Store = Store (Location,  Location,  DataStore)\n\n    type  Environ  =  Ident -&gt; Denotable\n\n    -- ---------- Semantic Functions -------------- --\n    valuation :: Int         -&gt; Value\n    evaluate  :: Expression  -&gt; Environ -&gt; Store -&gt;  Value\n    elaborate :: Declaration -&gt; Environ -&gt; Store -&gt;  (Environ,Store)\n    execute   :: Command     -&gt; Environ -&gt; Store -&gt;  Store\n\n    -- the main goal is to define these semantic functions\n    -- I give some examples in my source code below.\n</code></pre>\n\n<p>my code is here: <a href=\"https://github.com/sanyuwen/IMP/blob/master/DSemImp.hs\" rel=\"nofollow noreferrer\">https://github.com/sanyuwen/IMP/blob/master/DSemImp.hs</a>.\nmy test code is here: <a href=\"https://github.com/sanyuwen/IMP/blob/master/ImpTest.hs\" rel=\"nofollow noreferrer\">https://github.com/sanyuwen/IMP/blob/master/ImpTest.hs</a></p>\n\n<p>when I use GHC to import DSemImp module, I encountered many errors.</p>\n\n<pre><code>DSemImp.hs:52:32: error:\n    Not in scope: type constructor or class \u2018Identifier\u2019\n   |\n52 | data FormalParameter = Constfp Identifier    |                                ^^^^^^^^^^\nIt said data FormalParameter = Constfp Identifier is not legal.\nwithout this how can I define formal parameter ??\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 8, "creation_date": 1548903833, "post_id": 54452440, "comment_id": 95713723, "body": "I&#39;m not sure I can explain formally, but just try to think up ways you could implement a function that, given two elements of the same type, produces a single one of that type - <i>for every conceivable type</i>. The two possible implementations are rather obvious, and (speaking informally) there is &quot;nothing else you can do&quot; because you can&#39;t assume <i>anything</i> about the values the function takes, as you don&#39;t know anything about their type."}, {"owner": {"reputation": 83, "user_id": 9664064, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/516bf4b1ec065433000a7f041c557607?s=128&d=identicon&r=PG&f=1", "display_name": "Software Wisdom", "link": "https://stackoverflow.com/users/9664064/software-wisdom"}, "reply_to_user": {"reputation": 14030, "user_id": 8475054, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/edbf41c4b5aecb1a949936e06368a7c2?s=128&d=identicon&r=PG&f=1", "display_name": "Robin Zigmond", "link": "https://stackoverflow.com/users/8475054/robin-zigmond"}, "edited": false, "score": 0, "creation_date": 1548905495, "post_id": 54452440, "comment_id": 95714052, "body": "<code>\\nf x y = x     f x y = y     f x y = x + y\\n</code>,so i have defined 3 functions"}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 11, "creation_date": 1548908870, "post_id": 54452440, "comment_id": 95714860, "body": "the last one doesn&#39;t have type <code>a -&gt; a -&gt; a</code> but <code>Num a =&gt; a -&gt; a -&gt; a</code>."}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 1, "creation_date": 1549149342, "post_id": 54452440, "comment_id": 95801940, "body": "Suppose I give you two boxes, and I tell you that the things in these boxes are the same type of thing, but I <i>don\u2019t</i> tell you what they are. Now I ask you to give me back something of that same type, deterministically (no using <code>IO</code> to flip a coin) and \u201chonestly\u201d (no breaking open a box to see what\u2019s inside, no lying to me about what you gave me, no running away with the boxes and never returning). Since you know nothing about what\u2019s in the boxes, you can\u2019t just <i>make</i> something of that type\u2014you <i>must</i> give me back one of the boxes I gave you, and you only have two possible choices."}, {"owner": {"reputation": 83, "user_id": 9664064, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/516bf4b1ec065433000a7f041c557607?s=128&d=identicon&r=PG&f=1", "display_name": "Software Wisdom", "link": "https://stackoverflow.com/users/9664064/software-wisdom"}, "reply_to_user": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 0, "creation_date": 1549322587, "post_id": 54452440, "comment_id": 95853845, "body": "@JonPurdy, that explanation is pretty good, thanks"}], "answers": [{"comments": [{"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 1, "creation_date": 1548923700, "post_id": 54453227, "comment_id": 95720794, "body": "it&#39;s three. the third one returns <code>undefined</code>: <code>f a b = undefined</code>. there&#39;s even more definitions, <code>f a b = f a b</code> and <code>f a b = f b a</code>, and even <code>f a b = f (f a b) (f b a)</code>, but they all &quot;return&quot; <code>undefined</code>."}, {"owner": {"reputation": 1963, "user_id": 2840542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eO77F.jpg?s=128&g=1", "display_name": "AntC", "link": "https://stackoverflow.com/users/2840542/antc"}, "reply_to_user": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "edited": false, "score": 3, "creation_date": 1548930691, "post_id": 54453227, "comment_id": 95724967, "body": "@Will, any function of any signature whatsoever could return <code>undefined</code>. And it could do that without inspecting its arguments/parameters at all. So it doesn&#39;t count as parametric. Your infinite recursion examples don&#39;t return at all, so they don&#39;t count either. @DavOS: good answer!"}, {"owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "reply_to_user": {"reputation": 1963, "user_id": 2840542, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/eO77F.jpg?s=128&g=1", "display_name": "AntC", "link": "https://stackoverflow.com/users/2840542/antc"}, "edited": false, "score": 2, "creation_date": 1548935398, "post_id": 54453227, "comment_id": 95727749, "body": "@AntC yes, that&#39;s what I meant by &quot;they all &#39;return&#39; <code>undefined</code>&quot; (error and looping both considered as <i>bottom</i>). so discounting <i>that kind of &quot;solutions&quot;</i>, it is indeed two. but we do need to discount them."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1548941720, "post_id": 54453227, "comment_id": 95731650, "body": "Parametricity is a property of <i>total</i> functions; something that &quot;returns&quot; <code>undefined</code> is a so-called partial function. (The term &quot;total function&quot; is something of a retronym; historically, a function by definition mapped each value of its domain to a value in its co-domain. A partial function isn&#39;t a function at all in that sense.)"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 5, "creation_date": 1548960092, "post_id": 54453227, "comment_id": 95742359, "body": "There is parametricity for partial functions, it&#39;s just a bit more complicated, but you can still derive laws from types.  However I think everybody uses the total laws in practice; in practical Haskell, it&#39;s very nice to pretend that everything is total most of the time, and leave bottoms as a escape hatch if things get very subtle. But total, so called &quot;fast and loose&quot;, reasoning works quite well."}], "tags": [], "owner": {"reputation": 1197, "user_id": 4051020, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/42660a4e623fd8d2c850081291bcb585?s=128&d=identicon&r=PG&f=1", "display_name": "dopamane", "link": "https://stackoverflow.com/users/4051020/dopamane"}, "is_accepted": true, "score": 13, "last_activity_date": 1548921363, "last_edit_date": 1548921363, "creation_date": 1548908463, "answer_id": 54453227, "question_id": 54452440, "link": "https://stackoverflow.com/questions/54452440/regarding-haskells-parametricity-concept/54453227#54453227", "title": "Regarding Haskell&#39;s Parametricity concept", "body": "<p>I think the word \"implementations\" can be a bit confusing at first glance. </p>\n\n<p>Say we have <em>only</em> the function type <code>f :: a -&gt; a -&gt; a</code>, and no other information; we're not allowed to peek inside <code>f</code>. The function must return an <code>a</code> and you only have 2 possible <code>a</code>'s as input. Therefore the function must return the first <code>a</code> <strong>or</strong> the second <code>a</code>; only 2 possible functions. </p>\n\n<p>You cannot have <code>f x y = x + y</code> because you do not know how to <code>+</code> two <code>a</code>'s just given that <code>f :: a -&gt; a -&gt; a</code>. If you have, say <code>h :: Int -&gt; Int -&gt; Int</code>, then <code>h x y = x + y</code> would be a valid function, but you are not given that information for <code>f</code>. </p>\n\n<p>Similarly, what if you have <code>f :: a -&gt; a -&gt; a</code> and you claim <code>f x y = x + y</code> <strong>is valid</strong>. Then I can break your claim by passing two <code>Fruit</code>s to <code>f</code>: <code>f Apple Orange = ???</code>. Well <code>Apple + Orange</code> is ambiguous and the code wont work. So keeping the type polymorphic \"restricts\" the possible functions to 2 possible \"implementations\": <code>f x y = x</code> or <code>f x y = y</code>.</p>\n\n<p>This <a href=\"https://youtu.be/ngswgTy7Ao8?t=1888\" rel=\"noreferrer\">video</a> helped me understand. I'd recommend the whole video but the link is to the relevant part. (31:28)</p>\n\n<p>It demonstrates the power of type-level reasoning and parametricity. All the information for such reasoning is in the type.</p>\n\n<p>Another example, say all you have is a function type <code>g :: b -&gt; b</code>. Well, the function must return a <code>b</code>, and the only argument is a <code>b</code> so it must return <em>that</em> <code>b</code>. Thus, there is only <strong>one</strong> such function with type <code>b -&gt; b</code>.</p>\n"}], "owner": {"reputation": 83, "user_id": 9664064, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/516bf4b1ec065433000a7f041c557607?s=128&d=identicon&r=PG&f=1", "display_name": "Software Wisdom", "link": "https://stackoverflow.com/users/9664064/software-wisdom"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 229, "favorite_count": 0, "accepted_answer_id": 54453227, "answer_count": 1, "score": 3, "last_activity_date": 1548941154, "creation_date": 1548901449, "question_id": 54452440, "link": "https://stackoverflow.com/questions/54452440/regarding-haskells-parametricity-concept", "title": "Regarding Haskell&#39;s Parametricity concept", "body": "<p>This is a question from book \"Haskell Programming from First Principles\".</p>\n\n<p>I am reading the above mentioned book, On chapter 5, Number 2 of Exercises: Parametricity.</p>\n\n<p>Copied from the book.</p>\n\n<p><strong>We can get a more comfortable appreciation of parametricity\nby looking at a -> a -> a. This hypothetical\nfunction a -> a -> a has two\u2013and only two\u2013implementations.</strong></p>\n\n<p>I do not understand \"only two\u2013implementations\" part? can any one explain to me why only 2 implementations? </p>\n"}]