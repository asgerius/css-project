[{"tags": ["haskell", "types", "monads", "functor"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 5, "creation_date": 1527716175, "post_id": 50613624, "comment_id": 88237204, "body": "Because <code>(-&gt;) a</code> is a <code>Monad</code> and <code>Functor</code>."}, {"owner": {"reputation": 8857, "user_id": 3414900, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/KlvbC.jpg?s=128&g=1", "display_name": "bartop", "link": "https://stackoverflow.com/users/3414900/bartop"}, "edited": false, "score": 2, "creation_date": 1527717300, "post_id": 50613624, "comment_id": 88237602, "body": "Actually every <code>Monad</code> is also a <code>Functor</code>"}], "answers": [{"comments": [{"owner": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "edited": false, "score": 0, "creation_date": 1527747874, "post_id": 50614090, "comment_id": 88245494, "body": "<code>const u</code> and <code>\\f -&gt; f u</code> aren&#39;t equivalent. I believe you meant <code>($ u)</code>"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 2585, "user_id": 8491228, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/j5T09.jpg?s=128&g=1", "display_name": "Mor A.", "link": "https://stackoverflow.com/users/8491228/mor-a"}, "edited": false, "score": 0, "creation_date": 1527751683, "post_id": 50614090, "comment_id": 88247442, "body": "@M.Aroosi: correct, somehow that was not edited out of the answer. Updated, many thanks :)."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 8, "last_activity_date": 1527751411, "last_edit_date": 1527751411, "creation_date": 1527718792, "answer_id": 50614090, "question_id": 50613624, "link": "https://stackoverflow.com/questions/50613624/why-does-join-flip-fmap-have-type-a-b-a-a-b-b/50614090#50614090", "title": "Why does join . (flip fmap) have type ((A -&gt; B) -&gt; A) -&gt; (A -&gt; B) -&gt; B?", "body": "<p><strong>In short</strong>: due to type deduction, Haskell knows that <code>m</code> and <code>f</code> are in fact a partially instantiated arrow.</p>\n\n<h1>Deriving the type</h1>\n\n<p>Well let us do the math. The function <code>join . (flip fmap)</code> is basically your given lambda expression <code>\\x -&gt; join . x</code> with as argument <code>(flip fmap)</code>, so:</p>\n\n<pre><code>h = (\\x -&gt; join . x) (flip fmap)\n</code></pre>\n\n<p>Now the lambda expression has type:</p>\n\n<pre><code>(\\x -&gt; join . x) :: Monad m =&gt;   (a -&gt; m (m b)) -&gt; (a -&gt; m b)\n</code></pre>\n\n<p>Now the argument <code>flip fmap</code> has type:</p>\n\n<pre><code>flip fmap        :: Functor f =&gt; f c -&gt; ((c -&gt; d) -&gt; f d)\n</code></pre>\n\n<p>(we here use <code>c</code> and <code>d</code> instead of <code>a</code> and <code>b</code> to avoid confusion between two <em>possibly</em> different types).</p>\n\n<p>So that means that the type of <code>flip fmap</code> is the same as the type of the <em>argument</em> of the lambda expression, hence we know that:</p>\n\n<pre><code>  Monad m =&gt;   a   -&gt; m (m b)\n~ Functor f =&gt; f c -&gt; ((c -&gt; d) -&gt; f d)\n---------------------------------------\na ~ f c, m (m b) ~ ((c -&gt; d) -&gt; f d)\n</code></pre>\n\n<p>So we now know that <code>a</code> has the same type as <code>f c</code> (this is the meaning of the tilde <code>~</code>).</p>\n\n<p>But we have to do some extra computations:</p>\n\n<pre><code>  Monad m =&gt;   m (m b)\n~ Functor f =&gt; ((c -&gt; d) -&gt; f d)\n--------------------------------\nm ~ (-&gt;) (c -&gt; d), m b ~ f d\n</code></pre>\n\n<p>Hence we know that <code>m</code> is the same as <code>(-&gt;) (c -&gt; d)</code> (basically this is a function where we know that input type, here <code>(c -&gt; d)</code>, and the output type is a type parameter of <code>m</code>.</p>\n\n<p>So that means that <code>m b ~ (c -&gt; d) -&gt; b ~ f d</code>, so this means that <code>f ~ (-&gt;) (c -&gt; d)</code> and <code>b ~ d</code>. An extra consequence is that since <code>a ~ f c</code>, we know that <code>a ~ (c -&gt; d) -&gt; c</code></p>\n\n<p>So to list what we derived:</p>\n\n<pre><code>f ~ m\nm ~ (-&gt;) (c -&gt; d)\nb ~ d\na ~ (c -&gt; d) -&gt; c\n</code></pre>\n\n<p>So we now can \"specialize\" the types of both our lambda expression, and our <code>flip fmap</code> function:</p>\n\n<pre><code>(\\x -&gt; join . x)\n    :: (((c -&gt; d) -&gt; c) -&gt; (c -&gt; d) -&gt; (c -&gt; d) -&gt; d) -&gt; ((c -&gt; d) -&gt; c) -&gt; (c -&gt; d) -&gt; d\nflip fmap\n    ::  ((c -&gt; d) -&gt; c) -&gt; (c -&gt; d) -&gt; (c -&gt; d) -&gt; d\n</code></pre>\n\n<p>and type of <code>flip fmap</code> now perfectly matches with the type of the argument of the lambda expression. So the type of <code>(\\x -&gt; join . x) (flip fmap)</code> is the result type of the lambda expression type, and that is:</p>\n\n<pre><code>(\\x -&gt; join . x) (flip fmap)\n    :: ((c -&gt; d) -&gt; c) -&gt; (c -&gt; d) -&gt; d\n</code></pre>\n\n<p>But now we of course did not yet obtained the implementation of this function. We are however already a step further.</p>\n\n<h1>Deriving the implementation</h1>\n\n<p>Since we now know that <code>m ~ (-&gt;) (c -&gt; d)</code>, we know we should lookup the <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/src/GHC.Base.html#line-804\" rel=\"noreferrer\">arrow instance of a monad</a>:</p>\n\n<blockquote>\n<pre><code>instance Monad ((-&gt;) r) where\n    f &gt;&gt;= k = \\ r -&gt; k (f r) r\n</code></pre>\n</blockquote>\n\n<p>So for a given function <code>f :: r -&gt; a</code>, as left operand, and a function <code>k :: a -&gt; (r -&gt; b) ~ a -&gt; r -&gt; b</code> as operand, we construct a new function that maps a variable <code>x</code> to <code>k</code> applied to <code>f</code> applied to <code>x</code>, and <code>x</code>. It is thus a way to perform some sort of preprocessing on an input variable <code>x</code>, and then do the processing both taking into account the preprocessing and the original view (well this is <em>an</em> interpretation a human reader can use).</p>\n\n<p>Now <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Control-Monad.html#v:join\" rel=\"noreferrer\"><strong><code>join :: Monad m =&gt; m (m a) -&gt; m a</code></strong></a> is <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/src/GHC.Base.html#join\" rel=\"noreferrer\">implemented as</a>:</p>\n\n<blockquote>\n<pre><code>join :: Monad m =&gt; m (m a) -&gt; m a\njoin x = x &gt;&gt;= id\n</code></pre>\n</blockquote>\n\n<p>So for the <code>(-&gt;) r</code> monad, this means that we implement this as:</p>\n\n<pre><code>-- specialized for `m ~ (-&gt;) a\njoin f = \\r -&gt; id (f r) r\n</code></pre>\n\n<p>Since <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:id\" rel=\"noreferrer\"><strong><code>id :: a -&gt; a</code></strong></a> (the identity function) returns its argument, we can further simplify it to:</p>\n\n<pre><code>-- specialized for `m ~ (-&gt;) a\njoin f = \\r -&gt; (f r) r\n</code></pre>\n\n<p>or cleaner:</p>\n\n<pre><code>-- specialized for `m ~ (-&gt;) a\njoin f x = f x x\n</code></pre>\n\n<p>So it basically is given a function <code>f</code>, and will then apply an argument twice to that function.</p>\n\n<p>Furthermore we know that the <code>Functor</code> instance for the arrow type is <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/src/GHC.Base.html#line-794\" rel=\"noreferrer\">defined as</a>:</p>\n\n<blockquote>\n<pre><code>instance Functor ((-&gt;) r) where\n    fmap = (.)\n</code></pre>\n</blockquote>\n\n<p>So it is basically used as a \"post processor\" on the result of the function: we construct a new function that will do the post processing with the given function.</p>\n\n<p>So now that we specialized the function enough for the given <code>Functor</code>/<code>Monad</code>, we can derive the implementation as:</p>\n\n<pre><code>-- alternative implementation\nh = (.) (\\f x -&gt; f x x) (flip (.))\n</code></pre>\n\n<p>or by using more lambda expressions:</p>\n\n<pre><code>h = \\a -&gt; (\\f x -&gt; f x x) ((flip (.)) a)\n</code></pre>\n\n<p>which we can now further specialize as:</p>\n\n<pre><code>h = \\a -&gt; (\\f x -&gt; f x x) ((\\y z -&gt; z . y) a)\n\n-- apply a in the lambda expression\nh = \\a -&gt; (\\f x -&gt; f x x) (\\z -&gt; z . a)\n\n-- apply (\\z -&gt; z . a) in the first lambda expression\nh = \\a -&gt; (\\x -&gt; (\\z -&gt; z . a) x x)\n\n-- cleaning syntax\nh a = (\\x -&gt; (\\z -&gt; z . a) x x)\n\n-- cleaning syntax\nh a x = (\\z -&gt; z . a) x x\n\n-- apply lambda expression\nh a x = (x . a) x\n\n-- remove the (.) part\nh a x = x (a x)\n</code></pre>\n\n<p>So <code>h</code> basically takes two arguments: <code>a</code> and <code>x</code>, it then performs function application with <code>a</code> as function and <code>x</code> as parameter, and the output is passed to the <code>x</code> function again.</p>\n\n<h1>Sample usage</h1>\n\n<p>As sample usage you use:</p>\n\n<pre><code>h (\\f -&gt; f u) (\\x -&gt; x + v)\n</code></pre>\n\n<p>or nicer:</p>\n\n<pre><code>h (\\f -&gt; f u) (+v)\n</code></pre>\n\n<p>so we can analyze this like:</p>\n\n<pre><code>   h (\\f -&gt; f u) (+v)\n-&gt; (+v) ((\\f -&gt; f u) (+v))\n-&gt; (+v) ((+v) u)\n-&gt; (+v) (u+v)\n-&gt; ((u+v)+v)\n</code></pre>\n\n<p>So we add <code>u+v</code> to <code>v</code>.</p>\n"}, {"comments": [{"owner": {"reputation": 205, "user_id": 9725978, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e07d302414b4f9bcd4aa5face22e07e1?s=128&d=identicon&r=PG", "display_name": "Mark Wildon", "link": "https://stackoverflow.com/users/9725978/mark-wildon"}, "edited": false, "score": 0, "creation_date": 1527781284, "post_id": 50626534, "comment_id": 88266179, "body": "Thank you! Your answer make it very clear how the type of m can be inferred purely syntactically."}], "tags": [], "owner": {"reputation": 61419, "user_id": 849891, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/MbEO3.png?s=128&g=1", "display_name": "Will Ness", "link": "https://stackoverflow.com/users/849891/will-ness"}, "is_accepted": false, "score": 1, "last_activity_date": 1527781619, "last_edit_date": 1527781619, "creation_date": 1527776386, "answer_id": 50626534, "question_id": 50613624, "link": "https://stackoverflow.com/questions/50613624/why-does-join-flip-fmap-have-type-a-b-a-a-b-b/50626534#50626534", "title": "Why does join . (flip fmap) have type ((A -&gt; B) -&gt; A) -&gt; (A -&gt; B) -&gt; B?", "body": "<p>Types <em>line up</em> easier with <code>&gt;&gt;&gt;</code>:</p>\n\n<pre><code>                          a   -&gt;     b                       &gt;&gt;&gt;\n                                     b              -&gt; c     ::\n                          a   -&gt;                       c   \n</code></pre>\n\n<p>Here, we have</p>\n\n<pre><code>join . flip fmap  ==  flip fmap &gt;&gt;&gt; join\n\nflip fmap :: Functor f =&gt; f a -&gt; ((a -&gt; b) -&gt; f b )\njoin      :: Monad   m =&gt;        (m          (m b)) -&gt; m b\n----------------------------------------------------------\nflip fmap &gt;&gt;&gt; join ::\n (Functor f, Monad m) =&gt;  f a  -&gt;                      m b   , ((a -&gt; b) -&gt;) ~ m, f ~ m\n                   ::\n (Functor f, Monad f) =&gt;  f a  -&gt;                      f b   , f ~ ((a -&gt; b) -&gt;)\n                   ::    ((a -&gt; b) -&gt; a) -&gt; ((a -&gt; b) -&gt; b)\n</code></pre>\n\n<p>Simple, mechanical, mundane.</p>\n\n<hr>\n\n<p>To <em>see</em> what it <em>does</em>, combinatory style definitions are usually easiest to twiddle with,</p>\n\n<pre><code>(join . flip fmap) f g x =\n join (flip fmap f) g x =          -- join f x = f x x\n (`fmap` f) g g x =                -- f `fmap` g = f . g\n (g . f) g x \n g (f g) x \n</code></pre>\n\n<p>So we don't need <code>x</code> after all (or do we?). The <code>join</code> and <code>fmap</code> definitions for functions are given in the margins. We've arrived at</p>\n\n<pre><code>(join . flip fmap) f g = g (f g)   -- f :: (a -&gt; b) -&gt; a,  g :: a -&gt; b \n                                   -- f g :: a  , g (f g) :: b\n</code></pre>\n\n<p>Another way is starting from the types, going by the rule of modus ponens, </p>\n\n<pre><code>            ((a -&gt; b) -&gt; a)    (a -&gt; b)        --       f  g\n            ---------------------------\n(a -&gt; b)                 a                     --  g   (f  g)\n---------------------------------------\n      b\n</code></pre>\n"}], "owner": {"reputation": 205, "user_id": 9725978, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/e07d302414b4f9bcd4aa5face22e07e1?s=128&d=identicon&r=PG", "display_name": "Mark Wildon", "link": "https://stackoverflow.com/users/9725978/mark-wildon"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 199, "favorite_count": 1, "accepted_answer_id": 50614090, "answer_count": 2, "score": 3, "last_activity_date": 1527781619, "creation_date": 1527715880, "last_edit_date": 1527716214, "question_id": 50613624, "link": "https://stackoverflow.com/questions/50613624/why-does-join-flip-fmap-have-type-a-b-a-a-b-b", "title": "Why does join . (flip fmap) have type ((A -&gt; B) -&gt; A) -&gt; (A -&gt; B) -&gt; B?", "body": "<p>Some playing around with functors and monads in ghci led me to a value whose type and behaviour I would like to understand better.</p>\n\n<p>The type of <code>\\x -> join . x</code> is <code>(Monad m) => (a -> m (m b)) -> (a -> m b)</code> and the type of <code>\\y -> y . (flip fmap)</code> is <code>(Functor f) => ((a -> b) -> f b) -> (f a -> c)</code>.</p>\n\n<p>Version 8.2.2 of ghci permits the definition <code>h = join . (flip fmap)</code>.</p>\n\n<blockquote>\n  <p>Why does <code>h</code> have type <code>((A -> B) -> A) -> (A -> B) -> B</code>? </p>\n</blockquote>\n\n<p>In particular, why do the functor and monad constraints disappear? Is this really the correct and expected behaviour? As a follow up, I would also like to ask:</p>\n\n<blockquote>\n  <p>Why does evaluating <code>h (\\f -> f u) (\\x -> x + v)</code> for integers <code>u</code> and <code>v</code> give <code>u + 2v</code> in every case?</p>\n</blockquote>\n"}, {"tags": ["haskell", "category-theory"], "comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1527707798, "post_id": 50611254, "comment_id": 88233852, "body": "The problem is in the code you didn&#39;t include - the definition of <code>fmap</code>. (But look into the ScopedTypeVariables extension.)"}, {"owner": {"reputation": 41, "user_id": 9872059, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Joseph Cutler", "link": "https://stackoverflow.com/users/9872059/joseph-cutler"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1527708318, "post_id": 50611254, "comment_id": 88234065, "body": "@Carl do you mean that filling in the definition of fmap will fix the issue?"}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1527709168, "post_id": 50611254, "comment_id": 88234452, "body": "@Carl No. <code>ScopedTypeVariables</code> does nothing here."}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1527709483, "post_id": 50611254, "comment_id": 88234601, "body": "One problem is that the intermediate category <code>d</code> doesn&#39;t occur anywhere in <code>Functor c e (Comp f g)</code>. It&#39;d be easier to explicitly pass around a <code>Functor</code> dictionary than try to magic up the right <code>Functor</code> instances."}, {"owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "edited": false, "score": 0, "creation_date": 1527709623, "post_id": 50611254, "comment_id": 88234670, "body": "The other problem is that <code>Functor</code> lacks the power to go from <code>d (f (g x)) (f (g y))</code> to <code>d (Comp f g x) (Comp f g y)</code>."}], "answers": [{"tags": [], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "is_accepted": false, "score": 0, "last_activity_date": 1527709150, "creation_date": 1527709150, "answer_id": 50612277, "question_id": 50611254, "link": "https://stackoverflow.com/questions/50611254/could-not-deduce-included-constraint-from-context-error/50612277#50612277", "title": "Could not deduce included constraint from context error", "body": "<p>You can do this if you treat <code>Functor</code>s as values instead of as instances of a typeclass.</p>\n\n<p>A <code>Functor</code> is some mapping between two categories that both maps the objects with some type function <code>f</code> and maps the morphisms with <code>fmap</code>.</p>\n\n<pre><code>{-# LANGUAGE TypeFamilies, PolyKinds, RankNTypes #-}\n\nclass TypeFunction f where\n    type Apply f x :: k\n\ndata Functor c d f = Functor {fmap :: forall a b. c a b -&gt; d (Apply f a) (Apply f b)}\n</code></pre>\n\n<p>There's some identity type function.</p>\n\n<pre><code>data Identity\n\ninstance TypeFunction Identity where\n    type Apply Identity x = x\n</code></pre>\n\n<p>Type functions can be composed together.</p>\n\n<pre><code>{-# LANGUAGE UndecidableInstances #-}\n\ndata Comp f g\n\ninstance (TypeFunction f, TypeFunction g) =&gt; TypeFunction (Comp f g) where\n    type Apply (Comp f g) x = Apply f (Apply g x)\n</code></pre>\n\n<p><code>Functor</code>s can be composed.</p>\n\n<pre><code>compose :: Functor c d g -&gt; Functor d e f -&gt; Functor c e (Comp f g)\ncompose g f = Functor (\\a -&gt; fmap f . fmap g $ a)\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1527712519, "post_id": 50612719, "comment_id": 88235868, "body": "Ah, I wrote something similar as well. (+1) I used a different typeclass and a GADT since I didn&#39;t want to amend the original <code>Category</code>, but I think your approach is cleaner."}], "tags": [], "owner": {"reputation": 11487, "user_id": 1308058, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/2be2ab74793559ea1c1dbdf55ccdf90b?s=128&d=identicon&r=PG", "display_name": "phadej", "link": "https://stackoverflow.com/users/1308058/phadej"}, "is_accepted": false, "score": 4, "last_activity_date": 1527711244, "creation_date": 1527711244, "answer_id": 50612719, "question_id": 50611254, "link": "https://stackoverflow.com/questions/50611254/could-not-deduce-included-constraint-from-context-error/50612719#50612719", "title": "Could not deduce included constraint from context error", "body": "<p>Let's try to fix your code</p>\n\n<pre><code>{-# LANGUAGE FlexibleInstances #-}\n{-# LANGUAGE FunctionalDependencies #-}\n{-# LANGUAGE InstanceSigs #-}\n{-# LANGUAGE RankNTypes #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE UndecidableInstances #-}\nimport Prelude hiding (Functor, fmap, id, (.))\nimport Data.Coerce\n\nclass Category c where\n    id :: forall a. c a a\n    (.) :: c b d -&gt; c a b -&gt; c a d\n\n    coerceC :: Coercible a b =&gt; c a b\n\n-- Recover usual behavior of . and id\ninstance Category (-&gt;) where\n    id = \\x -&gt; x\n    (.) = \\f g x -&gt; f $ g x\n\n    coerceC = coerce\n\nclass (Category c, Category d) =&gt; Functor c d f where\n    fmap :: c a b -&gt; d (f a) (f b)\n</code></pre>\n\n<p>So far so good. I added <code>coerceC</code> method to <code>Category</code>, we'll see soon why.\n(<code>profunctors</code> package define <code>.#</code> and <code>#.</code> for about same purposes: <a href=\"http://hackage.haskell.org/package/profunctors-5.2.2/docs/Data-Profunctor-Unsafe.html#t:Profunctor\" rel=\"nofollow noreferrer\">http://hackage.haskell.org/package/profunctors-5.2.2/docs/Data-Profunctor-Unsafe.html#t:Profunctor</a>)</p>\n\n<p>Next we'll need to write something concrete to get an insight. Let's try <code>[]</code> functor:</p>\n\n<pre><code>instance Functor (-&gt;) (-&gt;) [] where\n    fmap = map\n</code></pre>\n\n<p>Note that <code>[]</code> is a Functor <code>(-&gt;) -&gt; (-&gt;)</code>. The insight is that functor\ndetermines / \"knows\" source and destination categories. We can tell that to GHC\nvia <code>FunctionalDependencies</code>.</p>\n\n<pre><code>class (Category c, Category d) =&gt; Functor c d f | f -&gt; c d where\n    fmap :: c a b -&gt; d (f a) (f b)\n</code></pre>\n\n<p>Then we can continue with <code>Comp</code> example. Note:\n- it's a <code>newtype</code> for <code>coerceC</code> to work\n- I dropped <code>Category</code> constraints, as they are implied by <code>Functor</code></p>\n\n<pre><code>newtype Comp f g x = Comp {getComp :: f (g x)}\n\ninstance (Functor d e f, Functor c d g) =&gt; Functor c e (Comp f g) where\n    fmap = _\n</code></pre>\n\n<p>And now we get a type-hole error, we are expecting:</p>\n\n<pre><code>Found hole: _ :: c a b -&gt; e (Comp f g a) (Comp f g b)\n</code></pre>\n\n<p>That's we can fill in with </p>\n\n<pre><code>instance (Functor d e f, Functor c d g) =&gt; Functor c e (Comp f g) where\n    fmap :: forall a b. c a b -&gt; e (Comp f g a) (Comp f g b)\n    fmap ab\n        = coerceC\n        . (fmap (fmap ab :: d (g a) (g b)) :: e (f (g a)) (f (g b)))\n        . coerceC\n</code></pre>\n\n<p>(Writing type intermediate signatures helps to get things right, in this case we need at least one, as <code>coerceC</code> is quite polymorphic)</p>\n"}, {"tags": [], "owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "is_accepted": false, "score": 1, "last_activity_date": 1527712378, "creation_date": 1527712378, "answer_id": 50612943, "question_id": 50611254, "link": "https://stackoverflow.com/questions/50611254/could-not-deduce-included-constraint-from-context-error/50612943#50612943", "title": "Could not deduce included constraint from context error", "body": "<p>This is a solution which leverages functional dependencies, safe coercions, and GADTs.</p>\n\n<p>We start as in the original code, mostly.</p>\n\n<pre><code>{-# LANGUAGE FlexibleInstances, ScopedTypeVariables, \n    MultiParamTypeClasses, UndecidableInstances, \n    FunctionalDependencies, GADTs #-}\n\nmodule Categories where\n\nimport Prelude hiding ((.), id, Functor, fmap)\nimport Data.Coerce\n\nclass Category c where\n    id :: forall a. c a a\n    (.) :: c b d -&gt; c a b -&gt; c a d\n\ninstance Category (-&gt;) where\n    id = \\x -&gt; x\n    (.) = \\f g x -&gt; f $ g x  \n</code></pre>\n\n<p>Here we introduce a functional dependency, stating that if we have a functor <code>f</code>, this can only be between two categories <code>c, d</code>. If we do not require this, then <code>f</code> could be a functor both between <code>c, d</code> and between <code>c', d'</code>, which prevents GHC from inferring the \"intermediate category\" when we compose functors in <code>Comp f g</code>. Indeed, the latter could be a functor between <code>c, e</code> passing through <code>d</code>, and a functor between <code>c, e</code> passing through <code>d'</code> -- preventing the inference of <code>d</code>.</p>\n\n<pre><code>class (Category c, Category d) =&gt; Functor c d f | f -&gt; d c where\n    fmap :: c a b -&gt; d (f a) (f b)\n</code></pre>\n\n<p>Then, we make <code>Comp</code> into a <code>newtype</code>, so that the safe coercions will work</p>\n\n<pre><code>newtype Comp f g x = Comp {getComp :: f (g x)}\n</code></pre>\n\n<p>Now the tricky part: we add a class <code>RepresentationalCategory c</code> which endures that <code>c</code> is representational. That is, it allows a safe coercion between <code>c a b</code> and <code>c a' b'</code> whenever we can coerce <code>a</code> into <code>a'</code> and <code>b</code> into <code>b'</code>.</p>\n\n<p>This will be used to safely coerce <code>c (f (g a)) (f (g b))</code> into <code>c (Comp f g a) (Comp f g b)</code>. Without knowing that <code>c</code> is representational, these two types could be completely different!</p>\n\n<pre><code>data CoercibleS a b where\n   Coerc :: Coercible a b =&gt; CoercibleS a b\n\nclass Category c =&gt; RepresentationalCategory c where\n   representational :: (Coercible a a', Coercible b b') =&gt; \n                       CoercibleS (c a b) (c a' b')\n</code></pre>\n\n<p>As an example, <code>(-&gt;)</code> is representational.</p>\n\n<pre><code>instance RepresentationalCategory (-&gt;) where\n   representational = Coerc                       \n</code></pre>\n\n<p>Finally, we can write the wanted instance</p>\n\n<pre><code>instance (Category c, Category d, RepresentationalCategory e,\n      Functor d e f, Functor c d g) =&gt; Functor c e (Comp f g) where\n   fmap (h :: c a b) =\n      case representational :: CoercibleS (e (f (g a)) (f (g b)))\n                                          (e (Comp f g a) (Comp f g b)) of\n         Coerc -&gt; coerce (fmap (fmap h :: d (g a) (g b)) :: e (f (g a)) (f (g b)))\n</code></pre>\n\n<p>The <code>representational</code> proof above is used to trigger the right coercion. I had to add a number of annotations which make things a bit ugly, but it's still readable, I think, with some moderate effort.</p>\n"}], "owner": {"reputation": 41, "user_id": 9872059, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=128", "display_name": "Joseph Cutler", "link": "https://stackoverflow.com/users/9872059/joseph-cutler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 114, "favorite_count": 2, "answer_count": 3, "score": 4, "last_activity_date": 1527712378, "creation_date": 1527704745, "question_id": 50611254, "link": "https://stackoverflow.com/questions/50611254/could-not-deduce-included-constraint-from-context-error", "title": "Could not deduce included constraint from context error", "body": "<p>I'm working on recreating some basic category theory in Haskell, and I've run into a problem. My code looks like this- pretty standard. Of course, this is hiding id and (.).</p>\n\n<pre><code>class Category c where\n    id :: forall a. c a a\n    (.) :: c b d -&gt; c a b -&gt; c a d\n\n-- Recover usual behavior of . and id\ninstance Category (-&gt;) where\n    id = \\x -&gt; x\n    (.) = \\f g x -&gt; f $ g x\n\nclass (Category c, Category d) =&gt; Functor c d f where\n    fmap :: c a b -&gt; d (f a) (f b)\n\ndata Comp f g x = Comp {getComp :: f (g x)}\n\ninstance (Category c, Category d, Category e,\n      Functor d e f, Functor c d g) =&gt; Functor c e (Comp f g) where\n    fmap = _\n</code></pre>\n\n<p>That last instance declaration throws a pretty ugly error,</p>\n\n<pre><code>\u2022 Could not deduce (Functor d0 e f)\n  from the context: (Category c, Category d, Category e,\n                     Functor d e f, Functor c d g)\nbound by an instance declaration: ...\ntype variable d0 is ambiguous.\n</code></pre>\n\n<p>I've played around with this for a while, and I can't quite figure what's going on. I'm rather new to haskell.</p>\n"}, {"tags": ["haskell", "qr-code"], "comments": [{"owner": {"reputation": 54864, "user_id": 404970, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/o6X94.jpg?s=128&g=1", "display_name": "molbdnilo", "link": "https://stackoverflow.com/users/404970/molbdnilo"}, "edited": false, "score": 0, "creation_date": 1527682559, "post_id": 50603879, "comment_id": 88218144, "body": "I wouldn&#39;t assume version 0.1.2 of anything to be working correctly, but AFAICT, version 1 of QR does not support strings of that length. See e.g. <a href=\"https://github.com/kizzx2/haskell-qrcode/issues/1\" rel=\"nofollow noreferrer\">this issue</a> with that library."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 54864, "user_id": 404970, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/o6X94.jpg?s=128&g=1", "display_name": "molbdnilo", "link": "https://stackoverflow.com/users/404970/molbdnilo"}, "edited": false, "score": 1, "creation_date": 1527684750, "post_id": 50603879, "comment_id": 88219728, "body": "@molbdnilo, version number magnitudes are famously meaningless in general, and that&#39;s certainly true of Haskell package versions. That said, it does sound as though version 0.1.2 of <i>this</i> library is immature."}, {"owner": {"reputation": 661, "user_id": 7720738, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HccZv.png?s=128&g=1", "display_name": "James Burton", "link": "https://stackoverflow.com/users/7720738/james-burton"}, "reply_to_user": {"reputation": 54864, "user_id": 404970, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/o6X94.jpg?s=128&g=1", "display_name": "molbdnilo", "link": "https://stackoverflow.com/users/404970/molbdnilo"}, "edited": false, "score": 0, "creation_date": 1527685908, "post_id": 50603879, "comment_id": 88220590, "body": "@molbdnilo I&#39;ve tried changing the version and that hasn&#39;t helped the QR code is now just unreadable. Even though that issue report said it was fixed in a new commit (I ensured Stack pulled that commit rather than whatever is on Hackage). Do you have any idea how to fix the issue with <code>qrencode</code> so I can try and use that instead?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 3, "creation_date": 1527686047, "post_id": 50603879, "comment_id": 88220707, "body": "Most distributions distinguish between libraries and the &quot;development&quot; versions of libraries (which include extra stuff for when you want to build a new application that uses that library, as opposed to just running an already-built application). On Debian derivatives, these usually have the same package name with <code>-dev</code> attached; on Fedora derivatives they attach <code>-devel</code>. Do you have the development package for <code>qrencode</code> installed, too?"}, {"owner": {"reputation": 661, "user_id": 7720738, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HccZv.png?s=128&g=1", "display_name": "James Burton", "link": "https://stackoverflow.com/users/7720738/james-burton"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1527702620, "post_id": 50603879, "comment_id": 88231355, "body": "@DanielWagner I tried installing <code>qrencode-dev</code> on Ubuntu before making this post but it doesn&#39;t exist. After total guess work I found that while the regular library is <code>qrencode</code> the dev version is <code>libqrencode-dev</code>."}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1527710822, "post_id": 50603879, "comment_id": 88235188, "body": "FYI, it doesn&#39;t remove the guess work entirely but apt search now exists (where the old <code>apt-get</code> was lacking) so you can do things like <code>apt search qrencode | grep dev</code>)"}, {"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 2, "creation_date": 1527711243, "post_id": 50603879, "comment_id": 88235350, "body": "Similarly to <code>apt search</code> you can use <code>apt-file</code> to find packages that contain the file you need. In this case it is apparent you&#39;re missing either the header <code>qrencode.h</code> (i.e. <code>grep &#39;include&#39; * -R</code> in the package if it isn&#39;t immediately obvious).  We can find this with <code>apt-file search &#39;qrencode.h&#39;</code>."}, {"owner": {"reputation": 661, "user_id": 7720738, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HccZv.png?s=128&g=1", "display_name": "James Burton", "link": "https://stackoverflow.com/users/7720738/james-burton"}, "reply_to_user": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 0, "creation_date": 1527756764, "post_id": 50603879, "comment_id": 88250302, "body": "@ThomasM.DuBuisson Ah that should make things a lot easier, thanks!"}, {"owner": {"reputation": 187, "user_id": 2801663, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2dad8e2d30c14d11bdc0f7ef167cce51?s=128&d=identicon&r=PG", "display_name": "SnowOnion", "link": "https://stackoverflow.com/users/2801663/snowonion"}, "edited": false, "score": 0, "creation_date": 1527827948, "post_id": 50603879, "comment_id": 88282225, "body": "It&#39;s better to add the package name \u201cqrcode\u201d to the title."}], "answers": [{"comments": [{"owner": {"reputation": 661, "user_id": 7720738, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HccZv.png?s=128&g=1", "display_name": "James Burton", "link": "https://stackoverflow.com/users/7720738/james-burton"}, "edited": false, "score": 0, "creation_date": 1527756955, "post_id": 50614286, "comment_id": 88250408, "body": "I&#39;ve been looking at that but, according to its documentation, it requires you to use <code>haskell-qrencode</code> or <code>qrcode</code> to generate the code itself, see the issues in my post. After getting <code>haskell-qrencode</code> to install I tried <code>diagrams-qrcode</code> but unfortunately it plunges me into dependency hell so I don&#39;t think I can use it."}], "tags": [], "owner": {"reputation": 4185, "user_id": 15467, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/a89c04ada36efa853c7f5be0a96b6dd9?s=128&d=identicon&r=PG", "display_name": "ja.", "link": "https://stackoverflow.com/users/15467/ja"}, "is_accepted": false, "score": 0, "last_activity_date": 1527720214, "creation_date": 1527720214, "answer_id": 50614286, "question_id": 50603879, "link": "https://stackoverflow.com/questions/50603879/haskell-generating-incorrect-qr-code/50614286#50614286", "title": "Haskell Generating Incorrect QR Code", "body": "<p>I had good success with <a href=\"https://github.com/prowdsponsor/diagrams-qrcode\" rel=\"nofollow noreferrer\">diagrams-qrcode</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 661, "user_id": 7720738, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HccZv.png?s=128&g=1", "display_name": "James Burton", "link": "https://stackoverflow.com/users/7720738/james-burton"}, "is_accepted": true, "score": 0, "last_activity_date": 1527805363, "creation_date": 1527805363, "answer_id": 50633622, "question_id": 50603879, "link": "https://stackoverflow.com/questions/50603879/haskell-generating-incorrect-qr-code/50633622#50633622", "title": "Haskell Generating Incorrect QR Code", "body": "<p>Although not a direct solution to my question, the following is what I've ended up with.</p>\n\n<p>I'm using <code>haskell-qrencode</code> to generate the QR code followed by <code>JuicyPixels</code> to create a PNG image.</p>\n\n<p>My function is now as follows:</p>\n\n<pre><code>genQR :: String -&gt; Base.String -&gt; IO ()\ngenQR user s = do\n    let secret = mkSecretString s\n        url = mkURL user secret\n        path = \"hello.png\"\n    qr &lt;- encodeString url Nothing QR_ECLEVEL_M QR_MODE_EIGHT True\n    let pixels = map (map (\\case\n                                0 -&gt; 255 :: Pixel8\n                                1 -&gt; 0)) $ toMatrix qr\n        height = length pixels\n        width = length $ head pixels\n        pxGen = \\x y -&gt; pixels !! y !! x\n        image = generateImage pxGen width height\n    writePng path image\n</code></pre>\n"}], "owner": {"reputation": 661, "user_id": 7720738, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HccZv.png?s=128&g=1", "display_name": "James Burton", "link": "https://stackoverflow.com/users/7720738/james-burton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 193, "favorite_count": 0, "accepted_answer_id": 50633622, "answer_count": 2, "score": -1, "last_activity_date": 1527805363, "creation_date": 1527680826, "question_id": 50603879, "link": "https://stackoverflow.com/questions/50603879/haskell-generating-incorrect-qr-code", "title": "Haskell Generating Incorrect QR Code", "body": "<p>I'm using <a href=\"https://hackage.haskell.org/package/qrcode\" rel=\"nofollow noreferrer\">this</a> library to generate a QR code for Google Authenticator.</p>\n\n<p>Unfortunately when I then scan the QR code, it's incorrect. Uploading the QR code to <a href=\"https://webqr.com/\" rel=\"nofollow noreferrer\">this</a> website provides the following:</p>\n\n<p><code>OTPAUTH%3A%2F%2FTOTP :0000000000000000000000000000000000000000000000000000000000000000000000000000000</code></p>\n\n<p>Something seems to go wrong after <code>totp</code> but the next part of the input is <code>%2F</code> which has already appeared twice and been handled correctly.</p>\n\n<p>When I put the input string into <a href=\"https://www.the-qrcode-generator.com/\" rel=\"nofollow noreferrer\">this</a> online generator, the QR code is correctly generated.</p>\n\n<p>Here is my code:</p>\n\n<pre><code>testQR :: IO ()\ntestQR = do\n    let path = \"hello.pgm\"\n    arrayToFile path\n        . toArray\n        . fromJust\n        . encode (fromJust $ version 1) M Alphanumeric\n        $ \"otpauth%3A%2F%2Ftotp%2FLabel%3AJames%3Fsecret%3DGEZDGNBVGY3TQOJQGEZDGNBVGY3TQOJQ%26issuer%3DMyCompany\"\n</code></pre>\n\n<p>I have considered using <code>haskell-qrencode</code> instead but then I get an error saying  <code>Missing C library: qrencode</code> even after installing <code>qrencode</code>. Feel free to suggest a fix for this instead of the issue above.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 14543, "user_id": 235908, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/rTstt.jpg?s=128&g=1", "display_name": "Simon Shine", "link": "https://stackoverflow.com/users/235908/simon-shine"}, "edited": false, "score": 1, "creation_date": 1527671641, "post_id": 50596093, "comment_id": 88210631, "body": "This seems to be a possible duplicate of <a href=\"https://stackoverflow.com/questions/49406019/haskell-text-csv-module\">Haskell Text.CSV module</a>. At least, the answer to the question reads a column from a CSV file in Haskell. There&#39;s quite a few CSV libraries with varying complexity; I believe one of the reasons why you don&#39;t see a rich API is because of the fragility of the CSV format: For example, you can&#39;t even be sure that a column is well-defined in all row intersections, and the desired behavior might be to have <code>Nothing</code> in those places or to skip them, depending on the use-case."}, {"owner": {"reputation": 41, "user_id": 9189990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c01dab5d21881c979b335f97cabebc5?s=128&d=identicon&r=PG&f=1", "display_name": "dpk", "link": "https://stackoverflow.com/users/9189990/dpk"}, "reply_to_user": {"reputation": 14543, "user_id": 235908, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/rTstt.jpg?s=128&g=1", "display_name": "Simon Shine", "link": "https://stackoverflow.com/users/235908/simon-shine"}, "edited": false, "score": 0, "creation_date": 1527693315, "post_id": 50596093, "comment_id": 88226109, "body": "As you say - that looks like basically the same approach that I took (read in as strings, parse them to the desired type manually).  But thanks for pointing it out that solution - I was unaware of the Text.CSV module."}, {"owner": {"reputation": 20862, "user_id": 376113, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/d3a5bd12fe6d876527a3cf4ac0de5fc6?s=128&d=identicon&r=PG", "display_name": "mb14", "link": "https://stackoverflow.com/users/376113/mb14"}, "edited": false, "score": 0, "creation_date": 1527696457, "post_id": 50596093, "comment_id": 88228051, "body": "Why do you need only one column? You might be doing premature optimization. I&#39;ve used cassava quite a bit and what I would do is  split the problem in two. The first to decode all the columns (using cassava) and the second to extract the column. Due to laziness the first step should actually only decode the column than you want."}, {"owner": {"reputation": 41, "user_id": 9189990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c01dab5d21881c979b335f97cabebc5?s=128&d=identicon&r=PG&f=1", "display_name": "dpk", "link": "https://stackoverflow.com/users/9189990/dpk"}, "reply_to_user": {"reputation": 20862, "user_id": 376113, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/d3a5bd12fe6d876527a3cf4ac0de5fc6?s=128&d=identicon&r=PG", "display_name": "mb14", "link": "https://stackoverflow.com/users/376113/mb14"}, "edited": false, "score": 0, "creation_date": 1527704768, "post_id": 50596093, "comment_id": 88232412, "body": "@mb14 - One column is just where I got aggravated. :-)  I had a CSV file with about 200 columns and no headers, and I needed column 33 as <code>Int</code>s (and didn&#39;t care about any other columns).  I didn&#39;t want to write a record type with 200 fields or a <code>decode NoHeader bytes :: Either string (Vector (...200 element tuple type...)</code>.  I suppose I could have created a <code>newtype</code> for <code>Int</code> and written a <code>FromRecord</code> instance for it, but then I&#39;d have to unwrap the newtype to get the <code>Int</code>s I wanted.  None of that felt like the right approach.  I feel like I&#39;m missing something here in the cassava api..."}, {"owner": {"reputation": 20862, "user_id": 376113, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/d3a5bd12fe6d876527a3cf4ac0de5fc6?s=128&d=identicon&r=PG", "display_name": "mb14", "link": "https://stackoverflow.com/users/376113/mb14"}, "edited": false, "score": 0, "creation_date": 1527835767, "post_id": 50596093, "comment_id": 88285127, "body": "You can use the index function (or .! operator) to access a column by index when defining a parser. You&#39;ll have to define back newtype for this but at least you dont have to do the read unpack by hands."}], "answers": [{"comments": [{"owner": {"reputation": 41, "user_id": 9189990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c01dab5d21881c979b335f97cabebc5?s=128&d=identicon&r=PG&f=1", "display_name": "dpk", "link": "https://stackoverflow.com/users/9189990/dpk"}, "edited": false, "score": 1, "creation_date": 1527694170, "post_id": 50607881, "comment_id": 88226667, "body": "That&#39;s interesting - I didn&#39;t realize that <code>decodeByName</code> supported partial decoding in this way.  It does involve a bit of ceremony in the form of a new data type, but that&#39;s not so bad.  I guess what I was really looking for (in the with-headers case) was something like <code>decodeColumn csv &quot;bar&quot; :: Either String (Header, Vector Int)</code> without the need to create a new record type.  But this looks nice."}, {"owner": {"reputation": 594, "user_id": 581986, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/biFw5.jpg?s=128&g=1", "display_name": "Andrew McKnight", "link": "https://stackoverflow.com/users/581986/andrew-mcknight"}, "edited": false, "score": 0, "creation_date": 1586031996, "post_id": 50607881, "comment_id": 107978035, "body": "It also doesn&#39;t work with user inputted column names because you can&#39;t create the record in advance"}], "tags": [], "owner": {"reputation": 931, "user_id": 407669, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae4ed4bce709fe4ef67d3ce77b689688?s=128&d=identicon&r=PG", "display_name": "identity", "link": "https://stackoverflow.com/users/407669/identity"}, "is_accepted": false, "score": 1, "last_activity_date": 1527692375, "creation_date": 1527692375, "answer_id": 50607881, "question_id": 50596093, "link": "https://stackoverflow.com/questions/50596093/whats-a-good-way-to-select-a-column-from-a-csv-file-in-haskell/50607881#50607881", "title": "What&#39;s a good way to select a column from a CSV file in Haskell?", "body": "<p>This may or may not suit your needs: It assumes that you're not actually interested in pulling out columns based on their position, but rather are interested in pulling out specific columns you are interested in.</p>\n\n<pre><code>{-# LANGUAGE DeriveGeneric #-}\nimport           Data.Text    (Text)\nimport           Data.Vector\nimport           GHC.Generics\n\nimport           Data.Csv\n\ndata Foo\n    = Foo\n    { foo :: Text\n    , bar :: Int\n    } deriving (Eq, Show, Generic)\ninstance FromNamedRecord Foo\n\ndecodeFoo :: _ -&gt; Either String (Header, Vector Foo)\ndecodeFoo = decodeByName\n\nmain :: IO ()\nmain = do\n    let csv = \"bar,ignore,foo,ignore\\n3,whatever,some string,whatever\"\n    print $ decodeFoo csv\n    -- prints Right ([\"bar\",\"ignore\",\"foo\",\"ignore\"],[Foo {foo = \"some string\", bar = 3}])\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 41, "user_id": 9189990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c01dab5d21881c979b335f97cabebc5?s=128&d=identicon&r=PG&f=1", "display_name": "dpk", "link": "https://stackoverflow.com/users/9189990/dpk"}, "edited": false, "score": 0, "creation_date": 1527913259, "post_id": 50638608, "comment_id": 88317352, "body": "That makes sense.  Thanks."}], "tags": [], "owner": {"reputation": 20862, "user_id": 376113, "user_type": "registered", "accept_rate": 72, "profile_image": "https://www.gravatar.com/avatar/d3a5bd12fe6d876527a3cf4ac0de5fc6?s=128&d=identicon&r=PG", "display_name": "mb14", "link": "https://stackoverflow.com/users/376113/mb14"}, "is_accepted": false, "score": 0, "last_activity_date": 1527839527, "creation_date": 1527839527, "answer_id": 50638608, "question_id": 50596093, "link": "https://stackoverflow.com/questions/50596093/whats-a-good-way-to-select-a-column-from-a-csv-file-in-haskell/50638608#50638608", "title": "What&#39;s a good way to select a column from a CSV file in Haskell?", "body": "<p>Following your comment about FromRecord. cassava is typeclass based, so unless you are decoding a combination of basic types you have unfortunately to provide a typeclass instance and therefore a Newtype. There is no option than I am aware of which take a parsing function (which would be useful anyway). My experience is that type are cheap (almost free) in Haskell and it's common to create disposable type when needed.  If you need 33 out of the 100 columns just create a data type for those fields and write your instance for it. You can then pick and choose which column you actually need. You might then realize than you don't want Int but (Either Text Int) (to be able to display the field in case of error) and parametrised your whole record via a functor.</p>\n"}], "owner": {"reputation": 41, "user_id": 9189990, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5c01dab5d21881c979b335f97cabebc5?s=128&d=identicon&r=PG&f=1", "display_name": "dpk", "link": "https://stackoverflow.com/users/9189990/dpk"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 360, "favorite_count": 1, "answer_count": 2, "score": 4, "last_activity_date": 1527839527, "creation_date": 1527652041, "last_edit_date": 1527692976, "question_id": 50596093, "link": "https://stackoverflow.com/questions/50596093/whats-a-good-way-to-select-a-column-from-a-csv-file-in-haskell", "title": "What&#39;s a good way to select a column from a CSV file in Haskell?", "body": "<p>I'm trying to grab a column from a CSV file with a lot of columns (e.g. a few hundred), and while I've managed to write some code to do it using the Cassava package (aka <code>Data.Csv</code>) I'm not really happy with the result.  To wit:</p>\n\n<pre><code>import qualified Data.ByteString.Lazy as BSL\nimport           Data.ByteString.Lazy.Char8 (unpack)\nimport qualified Data.Csv as CSV\nimport qualified Data.Vector as V    \n\n-- | Read in the n'th column of a CSV file which has been read into a ByteString\nreadColumn :: Read a =&gt; Int -&gt; CSV.HasHeader -&gt; BSL.ByteString -&gt; V.Vector a\nreadColumn index headerStatus csvData =\n  let recs =\n        CSV.decode headerStatus csvData :: Either String (V.Vector (V.Vector BSL.ByteString)) in\n    case recs of\n      Left err -&gt; error err\n      Right rows -&gt; V.map (extractColumn index) rows\n  where\n    extractColumn :: Read c =&gt; Int -&gt; V.Vector BSL.ByteString -&gt; c\n    extractColumn n = read . unpack . (V.! n)\n</code></pre>\n\n<p>Some parts of this are clunky and fragile (the parsing using <code>read</code> and <code>unpack</code>, and the sad excuse for error handling), but more generally I'm surprised that I had to write this at all - I'd have expected this to exist in the <code>Data.Csv</code> API and I'm wondering if it's there and I simply didn't recognize it, or if there's some other package I should have looked at.</p>\n\n<p>Any suggestions on better ways to do this would be greatly appreciated.</p>\n"}, {"tags": ["scala", "haskell", "functional-programming", "category-theory"], "answers": [{"comments": [{"owner": {"reputation": 5047, "user_id": 657067, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/0msmC.jpg?s=128&g=1", "display_name": "Polymerase", "link": "https://stackoverflow.com/users/657067/polymerase"}, "edited": false, "score": 0, "creation_date": 1527660202, "post_id": 50595873, "comment_id": 88203740, "body": "I meant <code>filter</code> on a collection. Or anything data structure actually. As long as <code>filter</code> accepts a predicate <code>p: A =&gt; Boolean</code> and must return a result of the same type. Depending on the condition of the predicate, the result could be empty, a subset or identical than the original data. I have edited the OP with an example."}], "tags": [], "owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "is_accepted": false, "score": 12, "last_activity_date": 1527675680, "last_edit_date": 1527675680, "creation_date": 1527650229, "answer_id": 50595873, "question_id": 50595338, "link": "https://stackoverflow.com/questions/50595338/what-kind-of-morphism-is-filter-in-category-theory/50595873#50595873", "title": "What kind of morphism is `filter` in category theory?", "body": "<p>In this answer, I will assume that you are talking about <code>filter</code> on <code>Set</code> (the situation seems messier for other datatypes).</p>\n\n<p>Let's first fix what we are talking about. I will talk specifically about the following function (in Scala):</p>\n\n<pre><code>def filter[A](p: A =&gt; Boolean): Set[A] =&gt; Set[A] = \n                                     s =&gt; s filter p\n</code></pre>\n\n<p>When we write it down this way, we see clearly that it's a polymorphic function with type parameter <code>A</code> that maps predicates <code>A =&gt; Boolean</code> to functions that map <code>Set[A]</code> to other <code>Set[A]</code>. To make it a \"morphism\", we would have to find some categories first, in which this thing could be a \"morphism\". One might hope that it's natural transformation, and therefore a morphism in the category of endofunctors on the \"default ambient category-esque structure\" usually referred to as \"<code>Hask</code>\" (or \"<code>Scal</code>\"? \"<code>Scala</code>\"?). To show that it's natural, we would have to check that the following diagram commutes for every <code>f: B =&gt; A</code>:</p>\n\n<pre><code>                       - o f\nHom[A, Boolean] ---------------------&gt; Hom[B, Boolean]\n     |                                       |\n     |                                       |\n     |                                       |\n     | filter[A]                             | filter[B]\n     |                                       |\n     V                  ???                  V\nHom[Set[A], Set[A]] ---------------&gt; Hom[Set[B], Set[B]]\n</code></pre>\n\n<p>however, here we fail immediately, because it's not clear what to even put on the horizontal arrow at the bottom, since the assignment <code>A -&gt; Hom[Set[A], Set[A]]</code> doesn't even seem functorial (for the same reasons why <code>A -&gt; End[A]</code> is not functorial, see <a href=\"https://stackoverflow.com/a/48854263/2707792\">here</a> and also <a href=\"https://mathoverflow.net/a/21329/79922\">here</a>).</p>\n\n<p>The only \"categorical\" structure that I see here for a <em>fixed</em> type <code>A</code> is the following:</p>\n\n<ul>\n<li>Predicates on <code>A</code> can be considered to be a partially ordered set with implication, that is <code>p LEQ q</code> if <code>p</code> implies <code>q</code> (i.e. either <code>p(x)</code> must be false, or <code>q(x)</code> must be true for all <code>x: A</code>).</li>\n<li>Analogously, on functions <code>Set[A] =&gt; Set[A]</code>, we can define a partial order with <code>f LEQ g</code> whenever for each set <code>s: Set[A]</code> it holds that <code>f(s)</code> is subset of <code>g(s)</code>.</li>\n</ul>\n\n<p>Then <code>filter[A]</code> would be monotonic, and therefore a functor between poset-categories. But that's somewhat boring. </p>\n\n<p>Of course, for each fixed <code>A</code>, it (or rather its eta-expansion) is also just a function from <code>A =&gt; Boolean</code> to <code>Set[A] =&gt; Set[A]</code>, so it's automatically a \"morphism\" in the \"<code>Hask</code>-category\". But that's even more boring. </p>\n"}, {"tags": [], "owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "is_accepted": false, "score": 14, "last_activity_date": 1527686835, "last_edit_date": 1592644375, "creation_date": 1527666442, "answer_id": 50599094, "question_id": 50595338, "link": "https://stackoverflow.com/questions/50595338/what-kind-of-morphism-is-filter-in-category-theory/50599094#50599094", "title": "What kind of morphism is `filter` in category theory?", "body": "\n<p>One interesting way of looking at this matter involves not picking <code>filter</code> as a primitive notion. There is a Haskell type class called <code>Filterable</code> which <a href=\"https://hackage.haskell.org/package/witherable-0.2/docs/Data-Witherable.html\" rel=\"noreferrer\">is aptly described as</a>:</p>\n<blockquote>\n<p>Like <code>Functor</code>, but it [includes] <code>Maybe</code> effects.</p>\n<p>Formally, the class <code>Filterable</code> represents a functor from <strong>Kleisli Maybe</strong> to <strong>Hask</strong>.</p>\n</blockquote>\n<p>The morphism mapping of the &quot;functor from <code>Kleisli Maybe</code> to <strong>Hask</strong>&quot; is captured by the <code>mapMaybe</code> method of the class, which is indeed a generalisation of the homonymous <code>Data.Maybe</code> function:</p>\n<pre class=\"lang-hs prettyprint-override\"><code>mapMaybe :: Filterable f =&gt; (a -&gt; Maybe b) -&gt; f a -&gt; f b\n</code></pre>\n<p>The class laws are simply the appropriate functor laws (note that <code>Just</code> and <code>(&lt;=&lt;)</code> are, respectively, identity and composition in <strong>Kleisli Maybe</strong>):</p>\n<pre class=\"lang-hs prettyprint-override\"><code>mapMaybe Just = id\nmapMaybe (g &lt;=&lt; f) = mapMaybe g . mapMaybe f\n</code></pre>\n<p>The class can also be expressed in terms of <code>catMaybes</code>...</p>\n<pre class=\"lang-hs prettyprint-override\"><code>catMaybes :: Filterable f =&gt; f (Maybe a) -&gt; f a\n</code></pre>\n<p>... which is interdefinable with <code>mapMaybe</code> (cf. the analogous relationship between <code>sequenceA</code> and <code>traverse</code>)...</p>\n<pre class=\"lang-hs prettyprint-override\"><code>catMaybes = mapMaybe id\nmapMaybe g = catMaybes . fmap g\n</code></pre>\n<p>... and amounts to a natural transformation between the <strong>Hask</strong> endofunctors <code>Compose f Maybe</code> and <code>f</code>.</p>\n<p>What does all of that have to do with your question? Firstly, a functor is a morphism between categories, and a natural transformation is a morphism between functors. That being so, it is possible to talk of morphisms here in a sense that is <a href=\"https://stackoverflow.com/a/50595873/2751851\">less boring than the &quot;morphisms in <strong>Hask</strong>&quot; one</a>. You won't necessarily <em>want</em> to do so, but in any case it is an existing vantage point.</p>\n<p>Secondly, <code>filter</code> is, unsurprisingly, also a method of <code>Filterable</code>, its default definition being:</p>\n<pre class=\"lang-hs prettyprint-override\"><code>filter :: Filterable f =&gt; (a -&gt; Bool) -&gt; f a -&gt; f a\nfilter p = mapMaybe $ \\a -&gt; if p a then Just a else Nothing\n</code></pre>\n<p>Or, to spell it using <a href=\"https://stackoverflow.com/a/49282010/2751851\">another cute combinator</a>:</p>\n<pre class=\"lang-hs prettyprint-override\"><code>filter p = mapMaybe (ensure p)\n</code></pre>\n<p>That indirectly gives <code>filter</code> a place in this particular constellation of categorical notions.</p>\n"}, {"comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1527667987, "post_id": 50599338, "comment_id": 88208218, "body": "On &quot;I wanted to leave just a comment&quot;: this post stands well enough on its own as an answer, so don&#39;t worry about its length."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 2, "creation_date": 1527673626, "post_id": 50599338, "comment_id": 88212090, "body": "Also, generally speaking if something answers the question then it&#39;s better to have it as an answer. Comments are mostly for clarification/correction."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 2, "creation_date": 1527686603, "post_id": 50599338, "comment_id": 88221124, "body": "Hm, I&#39;m not sure I understand this answer. The arguments to <code>foldRight</code> look like a T-algebra to me, but the arguments to <code>filter</code> don&#39;t. How do I cram an arbitrary T-algebra into the type <code>a -&gt; Bool</code>?"}, {"owner": {"reputation": 5047, "user_id": 657067, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/0msmC.jpg?s=128&g=1", "display_name": "Polymerase", "link": "https://stackoverflow.com/users/657067/polymerase"}, "edited": false, "score": 0, "creation_date": 1527692912, "post_id": 50599338, "comment_id": 88225848, "body": "@iamcap7 Thanks for the answer. BTW, did you mean <code>x :: xs</code> ?"}, {"owner": {"user_type": "does_not_exist", "display_name": "user7971319"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1527718643, "post_id": 50599338, "comment_id": 88237994, "body": "Yes, sorry, I was mixing Scala and Haskell notation I think. @DanielWagner I added some more explanation in the hope that it makes it easy to understand."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1527769774, "post_id": 50599338, "comment_id": 88258490, "body": "<code>foldRight</code> is a map which takes T-algebras, but it doesn&#39;t (necessarily) produce T-algebras. And in particular the T-algebra that <code>filter</code> passes to <code>foldRight</code> does not produce a T-algebra, so <code>filter</code> itself is neither a T-algebra nor takes a T-algebra as an argument. There are several other factual mistakes in this post. Stripping them all away leaves almost no content beyond &quot;<code>filter</code> can be defined in terms of <code>foldRight</code>&quot; -- that is, just the first sentence."}, {"owner": {"user_type": "does_not_exist", "display_name": "user7971319"}, "edited": false, "score": 0, "creation_date": 1527778909, "post_id": 50599338, "comment_id": 88264685, "body": "foldRight, and so filter, is a map of T-algebras. It doesn\u2019t produce T-algebras nor does it take T-algebras."}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1527789200, "post_id": 50599338, "comment_id": 88270147, "body": "@iamcap7 What is a &quot;map of T-algebras&quot;? I can&#39;t reconcile any of the interpretations of &quot;map&quot; that I know of with &quot;it doesn&#39;t produce T-algebras nor does it take T-algebras&quot;."}, {"owner": {"user_type": "does_not_exist", "display_name": "user7971319"}, "edited": false, "score": 0, "creation_date": 1527810683, "post_id": 50599338, "comment_id": 88278690, "body": "The most general case is as follows. Let <code>T : X ---&gt; X</code> be a endofunctor, then a T-algebra is a map (morphism, arrow) <code>a : T(A) ---&gt; A</code> in X. If <code>(A, a)</code> and <code>(B, b)</code> are T-algebras then a map (morphism) of these T-algebras is a map <code>f : A ---&gt; B</code> such that <code>f a = b T(f)</code>."}], "tags": [], "owner": {"user_type": "does_not_exist", "display_name": "user7971319"}, "is_accepted": false, "score": 7, "last_activity_date": 1527718530, "last_edit_date": 1527718530, "creation_date": 1527667231, "answer_id": 50599338, "question_id": 50595338, "link": "https://stackoverflow.com/questions/50595338/what-kind-of-morphism-is-filter-in-category-theory/50599338#50599338", "title": "What kind of morphism is `filter` in category theory?", "body": "<p><code>filter</code> can be written in terms of <code>foldRight</code> as:</p>\n\n<pre><code>filter p ys = foldRight(nil)( (x, xs) =&gt; if (p(x)) x::xs else xs ) ys\n</code></pre>\n\n<p><code>foldRight</code> on lists is a map of T-algebras (where here T is the List datatype functor), so <code>filter</code> is a map of T-algebras.</p>\n\n<p>The two algebras in question here are the initial list algebra</p>\n\n<pre><code>[nil, cons]: 1 + A x List(A) ----&gt; List(A)\n</code></pre>\n\n<p>and, let's say the \"filter\" algebra,</p>\n\n<pre><code>[nil, f]: 1 + A x List(A) ----&gt; List(A)\n</code></pre>\n\n<p>where <code>f(x, xs) = if p(x) x::xs else xs</code>.</p>\n\n<p>Let's call <code>filter(p, _)</code> the unique map from the initial algebra to the filter algebra in this case (it is called <code>fold</code> in the general case). The fact that it is a map of algebras means that the following equations are satisfied:</p>\n\n<pre><code>filter(p, nil) = nil\nfilter(p, x::xs) = f(x, filter(p, xs))\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1528062458, "post_id": 50661254, "comment_id": 88352261, "body": "I think this is where divergent generalizations begin. You are looking at the <code>List</code> data structure, and generalize it to <code>Foldable</code>. However, I don&#39;t see why one couldn&#39;t apply <code>filter</code> to the monad that models random sampling, to generate only those samples that fulfill certain predicate. This would have essentially nothing to do with foldable data structures, but it would fit nicely into the monadic framework for generating complex random objects. I&#39;m not sure that <code>Foldable</code> is the only possible &quot;essence&quot; that can be extracted from <code>filter</code>."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1532845442, "post_id": 50661254, "comment_id": 90120921, "body": "@AndreyTyukin It would appear as though this monad must contain a foldable. For instance, consider <a href=\"http://hackage.haskell.org/package/monad-supply\" rel=\"nofollow noreferrer\">Supply</a> \u2014 it has an operation <a href=\"http://hackage.haskell.org/package/monad-supply-0.3/docs/src/Control-Monad-Supply.html#supplies\" rel=\"nofollow noreferrer\"><code>supplies</code></a> that fetches a list. All the Reactive programming is, to my understanding, another case where you generate a list of events in a monad and then deal with it as though it was pure. Does this persuade you to reconsider the statement <i>&quot;this would have essentially nothing to do with foldable data structures&quot;</i>?"}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1532868037, "post_id": 50661254, "comment_id": 90126140, "body": "@IgnatInsarov The <code>Supply</code> that you linked looks somewhat like an infinite stream of elements, which is again just a countably infinite data structure, not too dissimilar from a <code>List</code>. But I also can <code>filter</code> all kind of stuff that does <i>not</i> look like a <code>Foldable</code> data structure. For example, one can obviously filter sets intensionally defined by some condition <code>cond</code>: <code>class Set[X](cond: X =&gt; Boolean) { def contains(x: X) = cond(x) ; def filter(p: X =&gt; Boolean) = new Set[X](x =&gt; cond(x) &amp;&amp; p(x)) }</code>. I don&#39;t see how such an intensional <code>Set[X]</code> can be made <code>Foldable</code>."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1532935679, "post_id": 50661254, "comment_id": 90143003, "body": "@AndreyTyukin I am not sure I understand this language <i>(Is it Scala? I only speak Haskell.)</i>, but would it be correct to say this definition is not constructive? In other words, it <i>implies</i> the presence of some type X and defines a predicate on it. If so, then X is the Foldable, and what we have her is <i>(isomorphic to)</i> a filter."}, {"owner": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "reply_to_user": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "edited": false, "score": 0, "creation_date": 1532950621, "post_id": 50661254, "comment_id": 90151638, "body": "@IgnatInsarov Not sure what you mean by <i>constructive</i>. It&#39;s not extensional (no way to enumerate all the elements of a set, let alone <code>fold</code> over them in any meaningful way), but it&#39;s still <i>constructive</i> enough for <a href=\"https://en.wikipedia.org/wiki/Constructive_solid_geometry\" rel=\"nofollow noreferrer\">constructive solid geometry</a> for example, where we can wonderfully <a href=\"https://en.wikipedia.org/wiki/Constructive_solid_geometry#/media/File:Boolean_difference.PNG\" rel=\"nofollow noreferrer\"><code>filter</code> all elements of a cube that are not contained in a sphere</a>, without having to invoke any kind of <code>fold</code>."}, {"owner": {"reputation": 4416, "user_id": 2108477, "user_type": "registered", "accept_rate": 48, "profile_image": "https://www.gravatar.com/avatar/f30268b2a1d0a8a18012e602cd3cb783?s=128&d=identicon&r=PG", "display_name": "Ignat Insarov", "link": "https://stackoverflow.com/users/2108477/ignat-insarov"}, "reply_to_user": {"reputation": 38158, "user_id": 2707792, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/hjDjB.png?s=128&g=1", "display_name": "Andrey Tyukin", "link": "https://stackoverflow.com/users/2707792/andrey-tyukin"}, "edited": false, "score": 0, "creation_date": 1532952272, "post_id": 50661254, "comment_id": 90152685, "body": "@AndreyTyukin I mean that you do not offer a way to exhibit X yet \u2014 any of its points. So, you are not defining a <i>(Foldable)</i> object, but merely a morphism from it. I do not know exactly how this picture is obtained, but my understanding of 3D graphics suggests that the filters that cut the sphere and the cube are symbolically linearly transformed to obtain a projection on a plane, and then the fold equipped with this projection is invoked on pixels, or some suitable abstraction thereof. Of course, it is anything but simple, but the more reason to look for a fold more scrupulously."}], "tags": [], "owner": {"reputation": 9111, "user_id": 90088, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/c018f213204496b4bbf481e7c8e6c15c?s=128&d=identicon&r=PG", "display_name": "Bartosz Milewski", "link": "https://stackoverflow.com/users/90088/bartosz-milewski"}, "is_accepted": true, "score": 11, "last_activity_date": 1527974305, "creation_date": 1527974305, "answer_id": 50661254, "question_id": 50595338, "link": "https://stackoverflow.com/questions/50595338/what-kind-of-morphism-is-filter-in-category-theory/50661254#50661254", "title": "What kind of morphism is `filter` in category theory?", "body": "<p>To answer are question like this, I'd like to first understand what is the <em>essence</em> of filtering. </p>\n\n<p>For instance, does it matter that the input is a list? Could you filter a tree? I don't see why not! You'd apply a predicate to each node of the tree and discard the ones that fail the test. </p>\n\n<p>But what would be the shape of the result? Node deletion is not always defined or it's ambiguous. You could return a list. But why a list? Any data structure that supports appending would work. You also need an empty member of your data structure to start the appending process. So any unital magma would do. If you insist on associativity, you get a monoid. Looking back at the definition of <code>filter</code>, the result is a list, which is indeed a monoid. So we are on the right track. </p>\n\n<p>So <code>filter</code> is just a special case of what's called <code>Foldable</code>: a data structure over which you can fold while accumulating the results in a monoid. In particular, you could use the predicate to either output a singleton list, if it's true; or an empty list (identity element), if it's false. </p>\n\n<p>If you want a categorical answer, then a fold is an example of a catamorphism, an example of a morphism in the category of algebras. The (recursive) data structure you're folding over (a list, in the case of <code>filter</code>) is an initial algebra for some functor (the list functor, in this case), and your predicate is used to define an algebra for this functor.</p>\n"}], "owner": {"reputation": 5047, "user_id": 657067, "user_type": "registered", "accept_rate": 74, "profile_image": "https://i.stack.imgur.com/0msmC.jpg?s=128&g=1", "display_name": "Polymerase", "link": "https://stackoverflow.com/users/657067/polymerase"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1000, "favorite_count": 1, "accepted_answer_id": 50661254, "answer_count": 4, "score": 11, "last_activity_date": 1527974305, "creation_date": 1527645527, "last_edit_date": 1527659864, "question_id": 50595338, "link": "https://stackoverflow.com/questions/50595338/what-kind-of-morphism-is-filter-in-category-theory", "title": "What kind of morphism is `filter` in category theory?", "body": "<p>In category theory, is the <code>filter</code> operation considered a morphism? If yes, what kind of morphism is it? Example (in Scala)</p>\n\n<pre><code>val myNums: Seq[Int] = Seq(-1, 3, -4, 2)\n\nmyNums.filter(_ &gt; 0)\n// Seq[Int] = List(3, 2) // result = subset, same type\n\nmyNums.filter(_ &gt; -99)\n// Seq[Int] = List(-1, 3, -4, 2) // result = identical than original\n\nmyNums.filter(_ &gt; 99)\n// Seq[Int] = List() // result = empty, same type\n</code></pre>\n"}, {"tags": ["haskell", "gadt"], "comments": [{"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 2, "creation_date": 1527630717, "post_id": 50593417, "comment_id": 88196274, "body": "Are you familiar with free monads?"}, {"owner": {"reputation": 1349, "user_id": 7655081, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2b23af7029d2ec53c15d8d9d2cccb0bb?s=128&d=identicon&r=PG&f=1", "display_name": "0xd34df00d", "link": "https://stackoverflow.com/users/7655081/0xd34df00d"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1527630774, "post_id": 50593417, "comment_id": 88196295, "body": "@BenjaminHodgson let&#39;s say I&#39;m just familiar with their existence. I&#39;d be glad if this task at hand would be a good case to learn them."}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 3, "creation_date": 1527630968, "post_id": 50593417, "comment_id": 88196357, "body": "Yep! You&#39;ve actually almost invented <code>Free</code>. I&#39;ll write up an answer"}], "answers": [{"comments": [{"owner": {"reputation": 1349, "user_id": 7655081, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2b23af7029d2ec53c15d8d9d2cccb0bb?s=128&d=identicon&r=PG&f=1", "display_name": "0xd34df00d", "link": "https://stackoverflow.com/users/7655081/0xd34df00d"}, "edited": false, "score": 0, "creation_date": 1527633045, "post_id": 50593766, "comment_id": 88196932, "body": "That&#39;s really beautiful, thanks! Interestingly, once a particular more or less abstract technique is used to solve some specific problem, it becomes way more obvious and clear."}], "tags": [], "owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "is_accepted": true, "score": 10, "last_activity_date": 1527883927, "last_edit_date": 1527883927, "creation_date": 1527632138, "answer_id": 50593766, "question_id": 50593417, "link": "https://stackoverflow.com/questions/50593417/modeling-a-domain-as-a-gadt-type-and-providing-do-sugar-for-it/50593766#50593766", "title": "Modeling a domain as a GADT type and providing do-sugar for it", "body": "<p>This style of using <code>do</code>-notation to build a syntax tree that'll be interpreted later is modelled by the <em>free monad</em>. (I'm actually going to demonstrate what's known as the <em>freer</em> or <em>operational</em> monad, because it's closer to what you have so far.)</p>\n\n<p>Your original <code>Op</code> datatype - without <code>OpPure</code> and <code>OpBind</code> - represents a set of atomic typed instructions (namely <code>read</code>, <code>write</code> and <code>cas</code>). In an imperative language a program is basically a list of instructions, so let's design a datatype which represents a list of <code>Op</code>s.</p>\n\n<p>One idea might be to use an actual list, ie <code>type Program r = [Op r]</code>. Clearly that won't do as it constrains every instruction in the program to have the same return type, which would not make for a very useful programming language.</p>\n\n<p>The key insight is that in any reasonable operational semantics of an interpreted imperative language, control flow doesn't proceed past an instruction until the interpreter has computed a return value for that instruction. That is, the <em>n</em>th instruction of a program depends in general on the results of instructions 0 to <em>n</em>-1. We can model this using continuation passing style.</p>\n\n<pre><code>data Program a where\n    Return :: a -&gt; Program a\n    Step :: Op r -&gt; (r -&gt; Program a) -&gt; Program a\n</code></pre>\n\n<p>A <code>Program</code> is a kind of list of instructions: it's either an empty program which returns a single value, or it's a single instruction followed by a list of instructions. The function inside the <code>Step</code> constructor means that the interpreter running the <code>Program</code> has to come up with an <code>r</code> value before it can resume interpreting the rest of the program. So sequentiality is ensured by the type.</p>\n\n<p>To build your atomic programs <code>read</code>, <code>write</code> and <code>cas</code>, you need to put them in a singleton list. This involves putting the relevant instruction in the <code>Step</code> constructor, and passing a no-op continuation.</p>\n\n<pre><code>lift :: Op a -&gt; Program a\nlift i = Step i Return\n\nread ptr = lift (OpRead ptr)\nwrite ptr val = lift (OpWrite ptr val)\ncas ptr cmp val = lift (OpCas ptr cmp val)\n</code></pre>\n\n<p><code>Program</code> differs from your tweaked <code>Op</code> in that at each <code>Step</code> there's only ever one instruction. <code>OpBind</code>'s left argument was potentially a whole tree of <code>Op</code>s. This would've allowed you to distinguish differently-associated <code>&gt;&gt;=</code>s, breaking the monad associativity law.</p>\n\n<p>You can make <code>Program</code> a monad.</p>\n\n<pre><code>instance Monad Program where\n    return = Return\n    Return x &gt;&gt;= f = f x\n    Step i k &gt;&gt;= f = Step i ((&gt;&gt;= f) . k)\n</code></pre>\n\n<p><code>&gt;&gt;=</code> basically performs list concatenation - it walks to the end of the list (by composing recursive calls to itself under the <code>Step</code> continuations) and grafts on a new tail. This makes sense - it corresponds to the intutitive \"run this program, then run that program\" semantics of <code>&gt;&gt;=</code>.</p>\n\n<hr>\n\n<p>Noting that <code>Program</code>'s <code>Monad</code> instance doesn't depend on <code>Op</code>, an obvious generalisation is to parameterise the type of instruction and make <code>Program</code> into a list of any old instruction set.</p>\n\n<pre><code>data Program i a where\n    Return :: a -&gt; Program i a\n    Step :: i r -&gt; (r -&gt; Program i a) -&gt; Program a\n\ninstance Monad (Program i) where\n    -- implementation is exactly the same\n</code></pre>\n\n<p>So <code>Program i</code> is a monad for free, no matter what <code>i</code> is. This version of <code>Program</code> is a rather general tool for modelling imperative languages.</p>\n"}], "owner": {"reputation": 1349, "user_id": 7655081, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/2b23af7029d2ec53c15d8d9d2cccb0bb?s=128&d=identicon&r=PG&f=1", "display_name": "0xd34df00d", "link": "https://stackoverflow.com/users/7655081/0xd34df00d"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 108, "favorite_count": 2, "accepted_answer_id": 50593766, "answer_count": 1, "score": 4, "last_activity_date": 1527883927, "creation_date": 1527630309, "question_id": 50593417, "link": "https://stackoverflow.com/questions/50593417/modeling-a-domain-as-a-gadt-type-and-providing-do-sugar-for-it", "title": "Modeling a domain as a GADT type and providing do-sugar for it", "body": "<p>Assume we'd like to build a type that represents operations typical for, let's say, a lock-free algorithm:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>newtype IntPtr = IntPtr { ptr :: Int } deriving (Eq, Ord, Show)\n\ndata Op r where \n  OpRead :: IntPtr -&gt; Op Int\n  OpWrite :: IntPtr -&gt; Int -&gt; Op ()\n\n  OpCAS :: IntPtr -&gt; Int -&gt; Int -&gt; Op Bool\n</code></pre>\n\n<p>Ideally, we'd like to represent some algorithms within this model using a convenient <code>do</code>-notation, like (assuming corresponding <code>read = OpRead</code> and <code>cas = OpCAS</code> for aesthetic reasons) the following almost literal translation of the <a href=\"https://en.wikipedia.org/wiki/Compare-and-swap#Example_application:_atomic_adder\" rel=\"nofollow noreferrer\">Wikipedia example</a>:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>import Prelude hiding (read)\nimport Control.Monad.Loops\n\nadd :: IntPtr -&gt; Int -&gt; Op Int\nadd p a = snd &lt;$&gt; do\n  iterateUntil fst $ do\n    value &lt;- read p\n    success &lt;- cas p value (value + a)\n    pure (success, value + a)\n</code></pre>\n\n<p>How could we achieve that? Let's add a couple more constructors to <code>Op</code> to represent pure injected values and the monadic bind:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>  OpPure :: a -&gt; Op a\n  OpBind :: Op a -&gt; (a -&gt; Op b) -&gt; Op b\n</code></pre>\n\n<p>So let's try to write a <code>Functor</code> instance. <code>OpPure</code> and <code>OpBind</code> is easy, being, for instance:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>instance Functor Op where\n  fmap f (OpPure x) = OpPure (f x)\n</code></pre>\n\n<p>But the constructors that specify the GADT type start smelling bad:</p>\n\n<pre class=\"lang-hs prettyprint-override\"><code>  fmap f (OpRead ptr) = do\n    val &lt;- OpRead ptr\n    pure $ f val\n</code></pre>\n\n<p>Here we assume we'll write the <code>Monad</code> instance later on anyway to avoid ugly nested <code>OpBind</code>s.</p>\n\n<p>Is this the right way to handle such types, or is my design just terribly wrong, this being a sign of it?</p>\n"}, {"tags": ["haskell", "maybe"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 2, "creation_date": 1527627560, "post_id": 50592823, "comment_id": 88195062, "body": "Because it will parse <code>&quot;Nothing&quot;</code> and <code>&quot;Just 1&quot;</code>."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1527631703, "post_id": 50592823, "comment_id": 88196555, "body": "Consider <a href=\"https://hackage.haskell.org/package/base-4.11.1.0/docs/Text-Read.html#v:readMaybe\" rel=\"nofollow noreferrer\"><code>readMaybe</code></a>, which instead does what you wanted, and is a total function, unlike <code>read</code>."}, {"owner": {"reputation": 2740, "user_id": 832847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8d537be713ae7b9be79f446de62e61f7?s=128&d=identicon&r=PG", "display_name": "Leo Zhang", "link": "https://stackoverflow.com/users/832847/leo-zhang"}, "edited": false, "score": 0, "creation_date": 1527632063, "post_id": 50592823, "comment_id": 88196670, "body": "Thanks.  I wonder if possible to have a constraint <code>NotMaybe a</code>, <code>readNotMaybe :: (Read a, NotMaybe a) =&gt; String -&gt; a</code>, such that the <code>a</code> can&#39;t be a <code>Maybe a</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 8, "last_activity_date": 1527628132, "last_edit_date": 1527628132, "creation_date": 1527627824, "answer_id": 50592915, "question_id": 50592823, "link": "https://stackoverflow.com/questions/50592823/why-will-read-1-maybe-int-type-check/50592915#50592915", "title": "Why will `read &quot;1&quot; :: Maybe Int` type check?", "body": "<p><strong>In short</strong>: you parse the textual representation of the <strong><code>Maybe a</code> type</strong>, <em>not</em> <code>a</code> as a non-total function where <code>Nothing</code> is used to specify a parse failure.</p>\n\n<p>Well <code>read</code> is usually the <em>opposite</em> of <code>show</code>. It will thus parse a representation of an object, that is <em>frequently</em> how you would write the object as a cascade of <em>data constructors</em> into an object.</p>\n\n<p>Now <code>Maybe a</code> is a type of the <code>Show</code> family, given the elements it wraps are an instance of <code>Show</code> as well, something like:</p>\n\n<pre><code>instance Show a =&gt; Show (Maybe a) where\n    show Nothing = \"Nothing\"\n    show (Just x) = \"Just \"++ show x\n</code></pre>\n\n<p>(In reality it is a bit more complex, since it will also introduce brackets in case you wrap a <code>Just 1</code> in a <code>Just</code> for example).</p>\n\n<p>So the opposite can be parsed as well. For example:</p>\n\n<pre><code>Prelude&gt; read \"<b>Nothing</b>\" :: Maybe Int\nNothing\nPrelude&gt; read \"<b>Just</b> 5\" :: Maybe Int\nJust 5</code></pre>\n\n<p>So a <code>Maybe a</code> as a type of <code>read</code> is not meant for a \"<em>non-total</em>\" function, but to parse the textual representation of a <code>Maybe a</code> type.</p>\n\n<p>So it parses strings with a prefix <code>\"Nothing\"</code> and <code>\"Just\"</code> (and also can parse some such \"expressions\" with brackets).</p>\n"}, {"comments": [{"owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "edited": false, "score": 8, "creation_date": 1527629205, "post_id": 50592956, "comment_id": 88195707, "body": "I feel it is important to remind people that <code>Read</code> (and <code>Show</code>) have implicit contracts of displaying and parsing strings representing valid Haskell values.  If your purpose is more general parsing then you can often get better performance or richer output using a pretty printing or parsing library.  This often trips people up, for example we can parse digits much faster than <code>Read</code> does if we can reject <code>(    (((( 0x37843)))))</code>, which <code>read</code> can handle."}], "tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": false, "score": 10, "last_activity_date": 1527628508, "last_edit_date": 1527628508, "creation_date": 1527628030, "answer_id": 50592956, "question_id": 50592823, "link": "https://stackoverflow.com/questions/50592823/why-will-read-1-maybe-int-type-check/50592956#50592956", "title": "Why will `read &quot;1&quot; :: Maybe Int` type check?", "body": "<blockquote>\n  <p>I wonder why <code>read \"1\" :: Maybe Int</code> would type check</p>\n</blockquote>\n\n<p>Because <code>\"1\"</code> has the type <code>String</code> and is thus acceptable as an argument to <code>read</code> and <code>Maybe Int</code> implements <code>Read</code> and is thus acceptable as a return type of <code>Read</code>.</p>\n\n<blockquote>\n  <p>and throw an exception in runtime.</p>\n</blockquote>\n\n<p>Because \"1\" is not a valid string representation of a <code>Maybe Int</code>.</p>\n\n<blockquote>\n  <p>Is it possible that read can ever return a <code>Maybe a</code>?</p>\n</blockquote>\n\n<p>Yes, for example <code>read \"Just 42\" :: Maybe Int</code> is <code>Just 42</code> and <code>read \"Nothing\" :: Maybe Int</code> is <code>Nothing</code>.</p>\n\n<p>Basically any string that you might get out of <code>show x</code> where <code>x :: Maybe Int</code> can also be fed as an argument to <code>read</code> to get a <code>Maybe Int</code>.</p>\n\n<p>Or more generally, any output of <code>show x</code> where <code>x :: T</code> and <code>T</code> is an instance of <code>Show</code> and <code>Read</code>, can probably be fed to <code>read</code> to get back a value of type <code>T</code> - though of course instances can be defined arbitrarily, so not every type that implements <code>Read</code> and <code>Show</code> necessarily adheres to that \"contract\".</p>\n"}], "owner": {"reputation": 2740, "user_id": 832847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8d537be713ae7b9be79f446de62e61f7?s=128&d=identicon&r=PG", "display_name": "Leo Zhang", "link": "https://stackoverflow.com/users/832847/leo-zhang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 387, "favorite_count": 0, "accepted_answer_id": 50592915, "answer_count": 2, "score": 1, "last_activity_date": 1527670124, "creation_date": 1527627486, "last_edit_date": 1527670124, "question_id": 50592823, "link": "https://stackoverflow.com/questions/50592823/why-will-read-1-maybe-int-type-check", "title": "Why will `read &quot;1&quot; :: Maybe Int` type check?", "body": "<p>I wonder why <code>read \"1\" :: Maybe Int</code> will type check and throw an exception in runtime. </p>\n\n<p>Is it possible that <code>read</code> can ever return a <code>Maybe a</code>? That is what <code>Text.Read.readMaybe</code> is supposed to do.</p>\n\n<pre><code>Prelude&gt; read \"1\" :: Maybe Int\n*** Exception: Prelude.read: no parse\n</code></pre>\n"}, {"tags": ["haskell", "persistent", "esqueleto"], "comments": [{"owner": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 0, "creation_date": 1527631927, "post_id": 50592800, "comment_id": 88196634, "body": "How many columns do you need? Would it make more sense to write <code>RawSql</code> instances for each of your <code>DesiredType</code>s instead? How many of those do you have? Alternatively, if you don&#39;t want to write instances for everything, you should be able to just stick with the existing tuple implementations and use nested tuples when things get too big (that&#39;s how the existing tuple instances are implemented, it seems)."}, {"owner": {"reputation": 2815, "user_id": 4394797, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92f29f3a02e559366d897f287948c6ca?s=128&d=identicon&r=PG&f=1", "display_name": "cgold", "link": "https://stackoverflow.com/users/4394797/cgold"}, "reply_to_user": {"reputation": 2360, "user_id": 367332, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/6D0rd.png?s=128&g=1", "display_name": "DarthFennec", "link": "https://stackoverflow.com/users/367332/darthfennec"}, "edited": false, "score": 0, "creation_date": 1527647633, "post_id": 50592800, "comment_id": 88200268, "body": "@DarthFennec Thanks! I have many queries with many columns, so I&#39;d need to create a <code>fromX</code> function for each number of resulting columns. Thanks for the trick with nested tuples. But thinking through how it would work, these queries might simply not be a good use case for <code>rawSql</code> - if I am already doing all the work parsing a result using a lot of tuples of Singles, I might be better off starting with <code>withStmt :: (MonadSqlPersist m, MonadResource m) =&gt; Text -&gt; [PersistValue] -&gt; Source m [PersistValue]</code> and parse the resulting <code>[PersistValue]</code>. I&#39;ll see whether that approach works better."}, {"owner": {"reputation": 662, "user_id": 668354, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/Yn84u.jpg?s=128&g=1", "display_name": "Mikkel", "link": "https://stackoverflow.com/users/668354/mikkel"}, "edited": false, "score": 0, "creation_date": 1527777710, "post_id": 50592800, "comment_id": 88263891, "body": "If you are in any case writing raw sql then you might want to look at <code>hasql</code> which is specifically written for that use case. It is a mature and high quality library."}], "owner": {"reputation": 2815, "user_id": 4394797, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/92f29f3a02e559366d897f287948c6ca?s=128&d=identicon&r=PG&f=1", "display_name": "cgold", "link": "https://stackoverflow.com/users/4394797/cgold"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 192, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1527627342, "creation_date": 1527627342, "question_id": 50592800, "link": "https://stackoverflow.com/questions/50592800/raw-sql-with-many-columns", "title": "Raw sql with many columns", "body": "<p>I'm building a CRUD application that pulls data using Persistent and executes a number of fairly complicated queries, for instance using window functions. Since these aren't supported by either Persistent or Esqueleto, I need to use raw sql.</p>\n\n<p>A good example is that I want to select rows in which the value does not deviate strongly from the previous value, so in pseudo-sql the condition is <code>WHERE val - lag(val) &lt;= x</code>. I need to run this selection in SQL, rather than pulling all data and then filtering in Haskell, because otherwise I'd have way to much data to handle.</p>\n\n<p>These queries return many columns. However, the <code>RawSql</code> instance maxes out at tuples with 8 elements. So now I am writing additional functions <code>from9, to9, from10, to10</code> and so on. And after that, all these are converted using functions with type <code>(Single a, Single b, ...) -&gt; DesiredType</code>. Even though this could be shortened using code generation, the approach is simply hacky and clearly doesn't feel like good Haskell. This concerns me because I think most of my queries will require <code>rawSql</code>.</p>\n\n<p>Do you have suggestions on how to improve this? Currently, my main thought is to un-normalize the database and duplicate data, e.g. by including the lagged value as column, so that I can query the data with Esqueleto.</p>\n"}, {"tags": ["haskell", "haskell-hedgehog"], "comments": [{"owner": {"reputation": 493, "user_id": 6889286, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/76d9b8a4d03d0de0a49eac62a5569c9e?s=128&d=identicon&r=PG&f=1", "display_name": "Kartik Sabharwal", "link": "https://stackoverflow.com/users/6889286/kartik-sabharwal"}, "edited": false, "score": 1, "creation_date": 1527828868, "post_id": 50591978, "comment_id": 88282454, "body": "I don&#39;t know why this is happening but I&#39;m trying to understand it. First off, I used a simple property with a print statement to find out exactly how many tests are executed. It seems that irrespective of the value passed to <code>withTests</code>, tasty-discover is running 100 tests but reporting it as just one short test. To understand the phenomenon further, I have decided to examine the testing code generated by passing the <code>--debug</code> option in the driver file. That&#39;s as far as I am right now."}, {"owner": {"reputation": 2244, "user_id": 29408, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/f7af9c8034d5070fb2e8565c79c604b7?s=128&d=identicon&r=PG", "display_name": "Julian Birch", "link": "https://stackoverflow.com/users/29408/julian-birch"}, "reply_to_user": {"reputation": 493, "user_id": 6889286, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/76d9b8a4d03d0de0a49eac62a5569c9e?s=128&d=identicon&r=PG&f=1", "display_name": "Kartik Sabharwal", "link": "https://stackoverflow.com/users/6889286/kartik-sabharwal"}, "edited": false, "score": 0, "creation_date": 1527887554, "post_id": 50591978, "comment_id": 88312956, "body": "I think &quot;It&#39;s broken&quot; qualifies as an answer. I&#39;ve also posted an issue to guthub. <a href=\"https://github.com/lwm/tasty-discover/issues/153\" rel=\"nofollow noreferrer\">github.com/lwm/tasty-discover/issues/153</a>"}], "owner": {"reputation": 2244, "user_id": 29408, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/f7af9c8034d5070fb2e8565c79c604b7?s=128&d=identicon&r=PG", "display_name": "Julian Birch", "link": "https://stackoverflow.com/users/29408/julian-birch"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 101, "favorite_count": 0, "answer_count": 0, "score": 0, "last_activity_date": 1527623684, "creation_date": 1527623684, "question_id": 50591978, "link": "https://stackoverflow.com/questions/50591978/hedgehog-not-respecting-withtest", "title": "Hedgehog not respecting withTest", "body": "<p>I'm using Hedgehog with tasty-discover and have written a simple class that implements Square 2D coordinates/vectors. I've then written the following test. Only problem is, it only seems to run one test, which runs extremely quickly, leading me to believe there's a problem here.</p>\n\n<p>How do I get it to run the test 10000 times?</p>\n\n<pre><code>module Spec where\n\nimport Test.Tasty\nimport Hedgehog             \nimport Hedgehog.Checkers\nimport qualified Hedgehog.Gen          as Gen\nimport qualified Hedgehog.Range        as Range\nimport Lib\n\nmake2D :: a -&gt; a -&gt; Point2D a\nmake2D x y = Point2D { _x = x, _y = y }\n\npoint2DGen :: (Gen a) -&gt; Gen (Point2D a)\npoint2DGen g = make2D &lt;$&gt; g &lt;*&gt; g\n\nsmall2DGen :: Gen (Point2D Int)\nsmall2DGen = point2DGen . Gen.integral $ Range.linearFrom (0 :: Int) (0-10) 10\n\nhprop_SquareMonoid :: Property\nhprop_SquareMonoid = withTests 1000000000 . property . monoid $ Square &lt;$&gt; small2DGen\n</code></pre>\n"}, {"tags": ["haskell", "tree", "fold", "unfold", "anamorphism"], "comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1527696842, "post_id": 50591819, "comment_id": 88228271, "body": "Hint: define the type of unfolds that have an internal state type of <code>s</code> and an output list type <code>[a]</code> as <code>type Unfold s a = (s -&gt; Bool, s -&gt; a, s -&gt; s, s)</code>. These are a lot like lists; your function essentially has the type <code>unfold :: Unfold s a -&gt; [a]</code>. Can you write <code>cons :: a -&gt; Unfold s a -&gt; Unfold ? a</code> for some type <code>?</code> of your choosing? <code>map :: (a -&gt; b) -&gt; Unfold s a -&gt; Unfold ? b</code>? <code>concat :: Unfold s (Unfold s&#39; a) -&gt; Unfold ? a</code>? If you have <code>cons</code>, <code>map</code>, and <code>concat</code>, you can write down your <code>dft</code> directly with the same definition (but a different type)."}], "owner": {"reputation": 53, "user_id": 5723164, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-eDrEOqomCKU/AAAAAAAAAAI/AAAAAAAAAC4/h7u8i1zXNAU/photo.jpg?sz=128", "display_name": "samlu1999", "link": "https://stackoverflow.com/users/5723164/samlu1999"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 385, "favorite_count": 0, "answer_count": 0, "score": 3, "last_activity_date": 1527623001, "creation_date": 1527623001, "question_id": 50591819, "link": "https://stackoverflow.com/questions/50591819/haskell-expressing-the-depth-first-traversal-of-a-rose-tree-as-an-instance-of", "title": "Haskell - Expressing the Depth First Traversal of a Rose Tree as an instance of unfold, deriving it algebraically", "body": "<p>Suppose we have a Rose Tree defined, along with the corresponding fold over the datatype.</p>\n\n<pre><code>data RTree a = Node a [RTree a]\n\nfoldRTree :: (a -&gt; [b] -&gt; b) -&gt; RTree a -&gt; b\nfoldRTree f (Node x xs) = f x (map (foldRTree f) xs)\n</code></pre>\n\n<p>A recursive definition of a depth first traversal of such a structure would be:</p>\n\n<pre><code>dft :: RTree a -&gt; [a]\ndft (Node x xs) = x : concat (map dft xs)\n</code></pre>\n\n<p>We can express dft as a fold over Rose Trees, and in particular we can derive such a fold algebraically.</p>\n\n<pre><code>// Suppose dft = foldRTree f\n// Then foldRTree f (Node x xs) = f x (map (foldRTree f) xs) (definition of foldRTree)\n// But also foldRTree f (Node x xs) = dft (Node x xs) (by assumption)\n//                                 = x : concat (map dft xs) (definition of dft)\n\n// So we deduce that f x (map (foldRTree f) xs) = x : concat (map dft xs)\n// Hence f x (map dft xs) = x : concat (map dft xs) (by assumption)\n// So we now see that f x y = x : concat y\n</code></pre>\n\n<p>I suppose the reason we can do this is because foldRTree captures the general recursion structure over RTrees which brings me to my query about unfold.</p>\n\n<p>We define unfold as follows:</p>\n\n<pre><code>unfold :: (a -&gt; Bool) -&gt; (a -&gt; b) -&gt; (a -&gt; a) -&gt; a -&gt; [b]\nunfold n h t x | n x = []\n               | otherwise = h x : unfold n h t (t x)\n\n\n// Or Equivalently\nunfold' n h t = map h . takeWhile (not.n) . iterate t\n</code></pre>\n\n<p>We can express the depth first traversal as an unfold as follows:</p>\n\n<pre><code>dft (Node x xs) = x : unfold null h t xs\n                         where h ((Node a xs) : ys) = a\n                               t ((Node a xs) : ys) = xs ++ ys\n</code></pre>\n\n<p>I am struggling to find a way to develop a way of algebraically calculating the functions n h t in the same way as cons. In particular there is a ingenious step in developing the unfold which is to realise that the final argument to unfold needs to be of type [RTree a] and not just RTree a. Therefore the argument posed to dft is not passed straight to the unfold and so we reach a hurdle with regards to reasoning about these two functions.</p>\n\n<p>I would be extremely grateful to anyone who could provide a mathematical way of reasoning about unfold in such a way to calculate the required functions n h, and t when expressing a recursive function (that is naturally a fold) as an unfold (perhaps using some laws linking fold and unfold?). A natural question would then be what methods we have to prove such a relation correct. </p>\n"}, {"tags": ["string", "haskell"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1527618321, "post_id": 50590665, "comment_id": 88190696, "body": "No, since <code>show</code> itself returns a string, and might do string processing (<code>map</code>s, etc.). But you can generate such function that will work with all <code>Show</code> types."}, {"owner": {"reputation": 28488, "user_id": 402884, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/35583fe46c2cde92467710cc7ceff266?s=128&d=identicon&r=PG", "display_name": "Chris Martin", "link": "https://stackoverflow.com/users/402884/chris-martin"}, "edited": false, "score": 0, "creation_date": 1527618647, "post_id": 50590665, "comment_id": 88190866, "body": "There are some projects like <a href=\"http://hackage.haskell.org/package/text-show-3.7.3/docs/TextShow.html\" rel=\"nofollow noreferrer\">text-show</a> with <code>Text</code>-based typeclasses seeking to replace <code>Show</code>, though none that have gained widespread adoption as far as I know."}], "answers": [{"comments": [{"owner": {"reputation": 28488, "user_id": 402884, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/35583fe46c2cde92467710cc7ceff266?s=128&d=identicon&r=PG", "display_name": "Chris Martin", "link": "https://stackoverflow.com/users/402884/chris-martin"}, "edited": false, "score": 1, "creation_date": 1527619494, "post_id": 50590744, "comment_id": 88191290, "body": "If you use strict text instead of <code>Builder</code>, aren&#39;t you apt to get even worse performance than <code>ShowS</code> when you start composing these?"}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 28488, "user_id": 402884, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/35583fe46c2cde92467710cc7ceff266?s=128&d=identicon&r=PG", "display_name": "Chris Martin", "link": "https://stackoverflow.com/users/402884/chris-martin"}, "edited": false, "score": 0, "creation_date": 1527619846, "post_id": 50590744, "comment_id": 88191474, "body": "@ChrisMartin: well that depends on how we compose this. A <code>Builder</code> is not a <code>Text</code>, but indeed we might also add a way to work with a <code>Builder</code>, and convert the end product into a <code>Text</code>, such that we have more tools to combine parts into larger strings."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 2, "last_activity_date": 1527618813, "last_edit_date": 1527618813, "creation_date": 1527618502, "answer_id": 50590744, "question_id": 50590665, "link": "https://stackoverflow.com/questions/50590665/how-to-convert-a-show-a-into-a-text/50590744#50590744", "title": "How to convert a `Show a` into a `Text`?", "body": "<p>Well <code>show</code> is a function with type <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:show\" rel=\"nofollow noreferrer\"><strong><code>Show a =&gt; a -&gt; String</code></strong></a> which means that a program can construct any function that generates a <code>String</code>. We can not automatically (with a compiler) \"specialize\" all functions such that it immediately returns a <code>Text</code>, although it is possible that the Haskell compiler can do some optimizations.</p>\n\n<p>We can however construct our own <code>showText</code> function:</p>\n\n<pre><code>import Data.Text(Text, pack)\n\nshowText :: Show a =&gt; a -&gt; Text\nshowText = pack . show\n</code></pre>\n\n<p>this will work for all <code>Show</code> types, and thus <code>pack</code> it into a <code>Text</code>.</p>\n\n<p>Perhaps it is however possible to sometimes <em>optimize</em> the <code>ShowText</code> by a programmer (for example return <code>Text</code> constants is typically better than using a <code>pack</code>). We can define a type class, with a default implementation for <code>Show</code>:</p>\n\n<pre><code>{-# LANGUAGE DefaultSignatures #-}\n\nimport Data.Text(Text, pack)\n\nclass ShowText a where\n    showText :: a -&gt; Text\n\n    default showText :: Show a =&gt; a -&gt; Text\n    showText = pack . show\n</code></pre>\n\n<p>So if we make an instance of <code>ShowText</code> and the type is a <code>Show</code> type, then if we implement a specific function, that function will be used, if we do not do this, then the default \"fallback\" implementation will be used.</p>\n"}], "owner": {"reputation": 2740, "user_id": 832847, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8d537be713ae7b9be79f446de62e61f7?s=128&d=identicon&r=PG", "display_name": "Leo Zhang", "link": "https://stackoverflow.com/users/832847/leo-zhang"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 86, "favorite_count": 0, "accepted_answer_id": 50590744, "answer_count": 1, "score": 2, "last_activity_date": 1527618813, "creation_date": 1527618235, "question_id": 50590665, "link": "https://stackoverflow.com/questions/50590665/how-to-convert-a-show-a-into-a-text", "title": "How to convert a `Show a` into a `Text`?", "body": "<p>a <code>Show a</code> can be converted into a <code>String</code> with <code>show</code>. Is it possible to convert directly from a <code>Show a</code> into a <code>Text</code> without going through <code>String</code>?</p>\n\n<p>I learned the best practice is to avoid <code>String</code> as much as possible. But the <code>Show a</code> typeclass seems so common that the <code>String</code> is too hard to avoid to me?</p>\n\n<p>Also is there a typeclass, something like <code>TextShow</code>, such that deriving from <code>TextShow</code> will automatically get <code>textShow :: TextShow a =&gt; a -&gt; Text</code> for free?</p>\n"}, {"tags": ["haskell", "stream", "monad-transformers", "free-monad"], "comments": [{"owner": {"reputation": 3128, "user_id": 3040129, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/TcwLC.png?s=128&g=1", "display_name": "illabout", "link": "https://stackoverflow.com/users/3040129/illabout"}, "edited": false, "score": 0, "creation_date": 1527600127, "post_id": 50585417, "comment_id": 88180149, "body": "Here is some <a href=\"https://github.com/cdepillabout/LambdaJAM-Streaming-exercises/blob/54af869b7d1211b7be5aafb76b1d8d7bba9f2ae7/exercise_1/LambdaJAM/Streaming/Exercise1.hs#L234-L336\" rel=\"nofollow noreferrer\">code</a> trying to implement the isomorphism between <code>FreeT</code> and <code>Stream</code> (which is called <code>FStream</code> in the code).  This should make it easy for anyone that wants to play around with this.  This code is from Ivan Miljenovic&#39;s <a href=\"https://github.com/ivan-m/LambdaJAM-Streaming-exercises\" rel=\"nofollow noreferrer\">workshop</a> on the streaming library at Lambda Jam 2018."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 1, "creation_date": 1527607815, "post_id": 50585417, "comment_id": 88185323, "body": "It&#39;s certainly not possible to implement an isomorphism between those types. <code>FreeT (Const ()) IO ()</code> has no equivalent of <code>foo :: Stream (Const ()) IO () ; foo = Effect $ putStrLn &quot;hello world&quot; &gt;&gt; pure foo</code>. What might be possible is showing that every <code>Stream</code> is equivalent to <i>some</i> <code>FreeT</code> over a different functor/monad pair."}], "answers": [{"comments": [{"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1556824115, "post_id": 50588825, "comment_id": 98569228, "body": "I think this answer could be clearer with a little more metaphor: <code>FreeT f m</code> represents alternating layers of <code>m</code> and <code>f</code>. <code>Stream f m</code> represents layers of <code>m</code> and <code>f</code> in any order. As long as <code>Monad m</code>, we have <code>pure</code> to create <code>m</code> layers wherever we want and <code>join</code> to fuse them. Therefore, a <code>Stream f m</code> is an &quot;efficient&quot; representation of <code>FreeT f m</code> that can be converted to the more rigid form if required."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 4, "last_activity_date": 1527645931, "last_edit_date": 1527645931, "creation_date": 1527610788, "answer_id": 50588825, "question_id": 50585417, "link": "https://stackoverflow.com/questions/50585417/is-the-streaming-packages-stream-data-type-equivalent-to-freet/50588825#50588825", "title": "Is the streaming package&#39;s Stream data type equivalent to FreeT?", "body": "<p>There are some small differences that make them not literally equivalent. In particular, <code>FreeT</code> enforces an alternation of <code>f</code> and <code>m</code>,</p>\n\n<pre><code>FreeT f m a = m (Either a (f (FreeT f m a) = m (Either a (f (m (...))))\n                                          -- m            f  m  -- alternating\n</code></pre>\n\n<p>whereas <code>Stream</code> allows stuttering, e.g., we can construct the following with no <code>Step</code> between two <code>Effect</code>:</p>\n\n<pre><code>Effect (return (Effect (return (Return r))))\n</code></pre>\n\n<p>which should be equivalent <em>in some sense</em> to</p>\n\n<pre><code>Return r\n</code></pre>\n\n<p>Thus we shall take a quotient of <code>Stream</code> by the following equations that flatten the layers of <code>Effect</code>:</p>\n\n<pre><code>Effect (m &gt;&gt;= \\a -&gt; return (Effect (k a))) = Effect (m &gt;&gt;= k)\nEffect (return x) = x\n</code></pre>\n\n<p>Under that quotient, the following are isomorphisms</p>\n\n<pre><code>freeT_stream :: (Functor f, Monad m) =&gt; FreeT f m a -&gt; Stream f m a\nfreeT_stream (FreeT m) = Effect (m &gt;&gt;= \\case\n  Pure r -&gt; return (Return r)\n  Free f -&gt; return (Step (fmap freeT_stream f))\n\nstream_freeT :: (Functor f, Monad m) =&gt; Stream f m a -&gt; FreeT f m a\nstream_freeT = FreeT . go where\n  go = \\case\n    Step f -&gt; return (Free (fmap stream_freeT f))\n    Effect m -&gt; m &gt;&gt;= go\n    Return r -&gt; return (Pure r)\n</code></pre>\n\n<p>Note the <code>go</code> loop to flatten multiple <code>Effect</code> constructors.</p>\n\n<hr>\n\n<p>Pseudoproof: <code>(freeT_stream . stream_freeT) = id</code></p>\n\n<p>We proceed by induction on a stream <code>x</code>. To be honest, I'm pulling the induction hypotheses out of thin air. There are certainly cases where induction is not applicable. It depends on what <code>m</code> and <code>f</code> are, and there might also be some nontrivial setup to ensure this approach makes sense for a quotient type. But there should still be many concrete <code>m</code> and <code>f</code> where this scheme is applicable. I hope there is some categorical interpretation that translates this pseudoproof to something meaningful.</p>\n\n<pre><code>(freeT_stream . stream_freeT) x\n= freeT_stream (FreeT (go x))\n= Effect (go x &gt;&gt;= \\case\n    Pure r -&gt; return (Return r)\n    Free f -&gt; return (Step (fmap freeT_stream f)))\n</code></pre>\n\n<p>Case <code>x = Step f</code>, induction hypothesis (IH) <code>fmap (freeT_stream . stream_freeT) f = f</code>:</p>\n\n<pre><code>= Effect (return (Step (fmap freeT_stream (fmap stream_freeT f))))\n= Effect (return (Step f))  -- by IH\n= Step f  -- by quotient\n</code></pre>\n\n<p>Case <code>x = Return r</code></p>\n\n<pre><code>= Effect (return (Return r))\n= Return r   -- by quotient\n</code></pre>\n\n<p>Case <code>x = Effect m</code>, induction hypothesis <code>m &gt;&gt;= (return . freeT_stream . stream_freeT)) = m</code></p>\n\n<pre><code>= Effect ((m &gt;&gt;= go) &gt;&gt;= \\case ...)\n= Effect (m &gt;&gt;= \\x' -&gt; go x' &gt;&gt;= \\case ...)  -- monad law\n= Effect (m &gt;&gt;= \\x' -&gt; return (Effect (go x' &gt;&gt;= \\case ...)))  -- by quotient\n= Effect (m &gt;&gt;= \\x' -&gt; (return . freeT_stream . stream_freeT) x')  -- by the first two equations above in reverse\n= Effect m  -- by IH\n</code></pre>\n\n<hr>\n\n<p>Converse left as an exercise.</p>\n"}, {"tags": [], "owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "is_accepted": false, "score": 4, "last_activity_date": 1527645395, "last_edit_date": 1527645395, "creation_date": 1527613298, "answer_id": 50589480, "question_id": 50585417, "link": "https://stackoverflow.com/questions/50585417/is-the-streaming-packages-stream-data-type-equivalent-to-freet/50589480#50589480", "title": "Is the streaming package&#39;s Stream data type equivalent to FreeT?", "body": "<p>Both your example with <code>Return</code> and my example with nested <code>Effect</code> constructors cannot be represented by <code>FreeT</code> with the same parameters <code>f</code> and <code>m</code>. There are more counterexamples, too. The underlying difference in the data types can best be seen in a hand-wavey space where the data constructors are stripped out and infinite types are allowed.</p>\n\n<p>Both <code>Stream f m a</code> and <code>FreeT f m a</code> are for nesting an <code>a</code> type inside a bunch of <code>f</code> and <code>m</code> type constructors. <code>Stream</code> allows arbitrary nesting of <code>f</code> and <code>m</code>, while <code>FreeT</code> is more rigid. It always has an outer <code>m</code>. That contains either an <code>f</code> and another <code>m</code> and repeats, or an <code>a</code> and terminates.</p>\n\n<p>But that doesn't mean there isn't an equivalence of some sort between the types. You can show some equivalence by showing that each type can be embedded inside the other faithfully.</p>\n\n<p>Embedding a <code>Stream</code> inside a <code>FreeT</code> can be done on the back of one observation: if you choose an <code>f'</code> and <code>m'</code> such that the <code>f</code> and <code>m</code> type constructors are optional at each level, you can model arbitrary nesting of <code>f</code> and <code>m</code>. One quick way to do that is use <code>Data.Functor.Sum</code>, then write a function:</p>\n\n<pre><code>streamToFreeT :: Stream f m a -&gt; FreeT (Sum Identity f) (Sum Identity m) a\nstreamToFreeT = undefined -- don't have a compiler nearby, not going to even try\n</code></pre>\n\n<p>Note that the type won't have the necessary instances to function. That could be corrected by switching <code>Sum Identity</code> to a more direct type that actually has an appropriate <code>Monad</code> instance.</p>\n\n<p>The transformation back the other direction doesn't need any type-changing trickery. The more restricted shape of <code>FreeT</code> is already directly embeddable inside <code>Stream</code>.</p>\n\n<p>I'd say this makes the documentation correct, though possibly it should use a more precise term than \"equivalent\". Anything you can construct with one type, you can construct with the other - but there might be some extra interpretation of the embedding and a change of variables involved. </p>\n"}], "owner": {"reputation": 3128, "user_id": 3040129, "user_type": "registered", "accept_rate": 86, "profile_image": "https://i.stack.imgur.com/TcwLC.png?s=128&g=1", "display_name": "illabout", "link": "https://stackoverflow.com/users/3040129/illabout"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 206, "favorite_count": 2, "accepted_answer_id": 50588825, "answer_count": 2, "score": 7, "last_activity_date": 1527645931, "creation_date": 1527599863, "question_id": 50585417, "link": "https://stackoverflow.com/questions/50585417/is-the-streaming-packages-stream-data-type-equivalent-to-freet", "title": "Is the streaming package&#39;s Stream data type equivalent to FreeT?", "body": "<p>The <a href=\"http://hackage.haskell.org/package/streaming\" rel=\"noreferrer\">streaming</a> package defines a <a href=\"http://hackage.haskell.org/package/streaming-0.2.1.0/docs/src/Streaming-Internal.html#Stream\" rel=\"noreferrer\"><code>Stream</code></a> type that looks like the following:</p>\n\n<pre><code>data Stream f m r\n  = Step !(f (Stream f m r))\n | Effect (m (Stream f m r))\n | Return r\n</code></pre>\n\n<p>There is a comment on the <code>Stream</code> type that says the following:</p>\n\n<blockquote>\n  <p>The <code>Stream</code> data type is equivalent to <a href=\"http://hackage.haskell.org/package/free-5.0.2/docs/Control-Monad-Trans-Free.html\" rel=\"noreferrer\"><code>FreeT</code></a> and can represent any effectful succession of steps, where the form of the steps or 'commands' is specified by the first (functor) parameter.</p>\n</blockquote>\n\n<p>I'm wondering how the <code>Stream</code> type is equivalent to <code>FreeT</code>?</p>\n\n<p>Here is the definition of <code>FreeT</code>:</p>\n\n<pre><code>data FreeF f a b = Pure a | Free (f b)\nnewtype FreeT f m a = FreeT { runFreeT :: m (FreeF f a (FreeT f m a)) }\n</code></pre>\n\n<p>It looks like it is not possible to create an isomorphism between these two types.</p>\n\n<p>To be specific, I don't see a way to write the following two functions that makes them an isomorphism:</p>\n\n<pre><code>freeTToStream :: FreeT f m a -&gt; Stream f m a\nstreamToFreeT :: Stream f m a -&gt; FreeT f m a\n</code></pre>\n\n<p>For instance, I'm not sure how to express a value like <code>Return \"hello\" :: Stream f m String</code> as a <code>FreeT</code>.</p>\n\n<p>I guess it could be done like the following, but the <code>Pure \"hello\"</code> is necessarily going to be wrapped in an <code>m</code>, while in <code>Return \"hello\" :: Stream f m String</code> it is not:</p>\n\n<pre><code>FreeT $ pure $ Pure \"hello\" :: Applicative m =&gt; FreeT f m a\n</code></pre>\n\n<hr>\n\n<p>Can <code>Stream</code> be considered equivalent to <code>FreeT</code> even though it doesn't appear possible to create an isomorphism between them?</p>\n"}, {"tags": ["multithreading", "haskell", "exception-handling", "thread-exceptions"], "answers": [{"comments": [{"owner": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 0, "creation_date": 1527615597, "post_id": 50582605, "comment_id": 88189309, "body": "&quot;you should never throw synchronous exceptions asynchronously anyway&quot; indeed one shouldn&#39;t but, since it is possible, the wrapper seems like a good idea."}, {"owner": {"reputation": 13626, "user_id": 492865, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c69a2080e68c8606961a18aba3a08ec?s=128&d=identicon&r=PG", "display_name": "Yuras", "link": "https://stackoverflow.com/users/492865/yuras"}, "reply_to_user": {"reputation": 24211, "user_id": 1364288, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/JVtNl.png?s=128&g=1", "display_name": "danidiaz", "link": "https://stackoverflow.com/users/1364288/danidiaz"}, "edited": false, "score": 1, "creation_date": 1527616470, "post_id": 50582605, "comment_id": 88189764, "body": "@danidiaz I&#39;d prefer if it just fails immediately, it is less confusing."}], "tags": [], "owner": {"reputation": 13626, "user_id": 492865, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c69a2080e68c8606961a18aba3a08ec?s=128&d=identicon&r=PG", "display_name": "Yuras", "link": "https://stackoverflow.com/users/492865/yuras"}, "is_accepted": false, "score": 1, "last_activity_date": 1527591268, "creation_date": 1527591268, "answer_id": 50582605, "question_id": 50581476, "link": "https://stackoverflow.com/questions/50581476/how-to-catch-async-exceptions-with-the-safe-exceptions-library/50582605#50582605", "title": "How to catch async exceptions with the safe-exceptions library?", "body": "<p>Notice that <code>Control.Exception.Safe.throwTo</code> <a href=\"https://hackage.haskell.org/package/safe-exceptions-0.1.7.0/docs/Control-Exception-Safe.html#v:throwTo\" rel=\"nofollow noreferrer\">wraps</a> synchronous exceptions into <code>AsyncExceptionWrapper</code>, and <code>IOError</code> <strong>is</strong> synchronous. (I have no idea why this wrapping is necessary, you should never throw synchronous exceptions asynchronously anyway.)</p>\n\n<p>To make your code work, you should either catch <code>AsyncExceptionWrapper</code> or use <code>Control.Exception.throwTo</code>. But actually I don't compitely understand what you are trying to do, most likely you are overcomplicating things.</p>\n"}], "owner": {"reputation": 1001, "user_id": 983883, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/e529b9e0fbcbee96a20a1b9bb2629ea7?s=128&d=identicon&r=PG", "display_name": "hololeap", "link": "https://stackoverflow.com/users/983883/hololeap"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 174, "favorite_count": 1, "answer_count": 1, "score": 2, "last_activity_date": 1527617422, "creation_date": 1527587911, "last_edit_date": 1527595252, "question_id": 50581476, "link": "https://stackoverflow.com/questions/50581476/how-to-catch-async-exceptions-with-the-safe-exceptions-library", "title": "How to catch async exceptions with the safe-exceptions library?", "body": "<p>I'm trying to dive into building concurrent and robust code with Haskell, and it was recommended that I use the <a href=\"https://hackage.haskell.org/package/safe-exceptions\" rel=\"nofollow noreferrer\">safe-exceptions</a> and <a href=\"https://hackage.haskell.org/package/async\" rel=\"nofollow noreferrer\">async</a> libraries. However, I'm having a hard time understanding how to handle non-fatal errors thrown within an <code>async</code> action. </p>\n\n<p>For instance, if there is a simple loop that is checking a network resource every <em>n</em> seconds, it would make sense to stop this using the <code>cancel</code> function which would cause an <code>AsyncCancelled</code> exception to be thrown within the seperate thread. Of course, there would also be the possibility that an <code>IOError</code> would be thrown from within the thread due to the network going down or some other problem. Depending on the type of exception and the data it contains, I would want to control whether the seperate thread ignores the exception, performs some action, stops, or raises the exception in the main thread.</p>\n\n<p>With the safe-exceptions library, the only functions that are able to do this are <code>catchAsync</code> and others like it, which are labelled as dangerous in the documentation. Other than that, there is <code>waitCatch</code> in the async library, but the <code>fromException</code> function always returns <code>Nothing</code> when I try to extract an <code>IOError</code>:</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables #-}\n\nimport Control.Concurrent.Async\nimport Control.Concurrent hiding (throwTo)\nimport Control.Exception.Safe \nimport Control.Monad\nimport System.IO\nimport System.IO.Error hiding (catchIOError)\n\nmain = do\n    hSetBuffering stdin NoBuffering\n    putStrLn \"Press any key to continue...\"\n    a &lt;- async runLoop\n    async $ hWaitForInput stdin (-1) *&gt; \n                throwTo (asyncThreadId a) (userError \"error\")\n    waitCatch a &gt;&gt;= either handler nothing\n  where\n    printThenWait i = putStr (show i ++ \" \") *&gt; threadDelay 1000000\n    runLoop = sequence_ $ printThenWait &lt;$&gt; [1..]\n    nothing _ = pure ()\n    handler e\n        | Just (e' :: IOError)       &lt;- fromException e = \n              putStrLn \"It's an IOError!\"\n        | (Nothing :: Maybe IOError) &lt;- fromException e = \n              putStrLn \"We got Nothing!\"\n</code></pre>\n\n<p>I'm a bit confused about the danger of recovering from async exceptions, especially when standard functions such as <code>cancel</code> cause them to be thrown, and I don't know what the recommended way to handle them would be when using these two libraries. Is this an instance where <code>catchAsync</code> <em>would</em> be recommended, or is there another way to handle these types of situations that I haven't discovered?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 3, "creation_date": 1527588946, "post_id": 50581052, "comment_id": 88172654, "body": "This would appear to require a function <code>MonadIO m =&gt; m () -&gt; IO ()</code> which does not exist."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1527590326, "post_id": 50581052, "comment_id": 88173489, "body": "This can not be implemented for, e.g., <code>StateT s IO a</code> since that would require the state to be shared among multiple threads, which can not be achieved using the underlying type <code>s -&gt; IO (s, a)</code>."}], "answers": [{"tags": [], "owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "is_accepted": true, "score": 4, "last_activity_date": 1527606361, "creation_date": 1527606361, "answer_id": 50587625, "question_id": 50581052, "link": "https://stackoverflow.com/questions/50581052/generalizing-forkio-to-monadio/50587625#50587625", "title": "Generalizing forkIO to MonadIO", "body": "<p>It can't be done with <code>MonadIO</code>, but it can be done with <code>MonadUnliftIO</code>, see <a href=\"http://hackage.haskell.org/package/unliftio-0.2.7.0/docs/UnliftIO-Concurrent.html#v:forkIO\" rel=\"nofollow noreferrer\">here</a>.</p>\n\n<p>Not everything that has a <code>MonadIO</code> instance also has a <code>MonadUnliftIO</code> instance, but depending on what you need this for this might be sufficient.</p>\n"}], "owner": {"reputation": 1096, "user_id": 5021447, "user_type": "registered", "accept_rate": 25, "profile_image": "https://lh5.googleusercontent.com/-gwPYP717ZyU/AAAAAAAAAAI/AAAAAAAAAP8/WoyhftM4PuU/photo.jpg?sz=128", "display_name": "Jordan Mackie", "link": "https://stackoverflow.com/users/5021447/jordan-mackie"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 238, "favorite_count": 0, "closed_date": 1527615570, "accepted_answer_id": 50587625, "answer_count": 1, "score": 1, "last_activity_date": 1527606361, "creation_date": 1527586544, "question_id": 50581052, "link": "https://stackoverflow.com/questions/50581052/generalizing-forkio-to-monadio", "closed_reason": "Duplicate", "title": "Generalizing forkIO to MonadIO", "body": "<p>Is there any way to make <code>forkIO</code> classy?</p>\n\n<pre><code>import Control.Monad.IO.Class (MonadIO)\nimport Control.Concurrent (ThreadId)\n\n-- | Is this possible?\nforkIO :: MonadIO m =&gt; m () -&gt; m ThreadId\nforkIO = undefined\n</code></pre>\n\n<p>I'm trying to call it from within a function using a few <code>mtl</code> monad class constraints. I'm aware of <code>lifted-base</code> but I'd rather not have an extra <code>MonadBaseControl IO</code> constraint bubble up through my program. Solutions and/or suggestions would be appreciated.</p>\n"}, {"tags": ["haskell", "yaml", "haskell-stack"], "answers": [{"tags": [], "owner": {"reputation": 3075, "user_id": 1164871, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d6a54a3752ab47170d790085935988f?s=128&d=identicon&r=PG", "display_name": "mgsloan", "link": "https://stackoverflow.com/users/1164871/mgsloan"}, "is_accepted": false, "score": -1, "last_activity_date": 1527611980, "last_edit_date": 1527611980, "creation_date": 1527584632, "answer_id": 50580373, "question_id": 50579782, "link": "https://stackoverflow.com/questions/50579782/how-to-specify-cabal-options-for-an-external-dependency-in-package-yaml/50580373#50580373", "title": "How to specify cabal options for an external dependency in package.yaml?", "body": "<p>You probably want:</p>\n\n<pre><code>flags:\n  package-name:\n    server: true\n    c-runtime: true\n</code></pre>\n\n<p>Here is the related section of documentation: <a href=\"https://docs.haskellstack.org/en/stable/yaml_configuration/#flags\" rel=\"nofollow noreferrer\">https://docs.haskellstack.org/en/stable/yaml_configuration/#flags</a></p>\n"}], "owner": {"reputation": 1, "user_id": 4796728, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/tiiMf.jpg?s=128&g=1", "display_name": "Gleb Lobanov", "link": "https://stackoverflow.com/users/4796728/gleb-lobanov"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 120, "favorite_count": 1, "answer_count": 1, "score": 0, "last_activity_date": 1527611980, "creation_date": 1527582823, "last_edit_date": 1527583657, "question_id": 50579782, "link": "https://stackoverflow.com/questions/50579782/how-to-specify-cabal-options-for-an-external-dependency-in-package-yaml", "title": "How to specify cabal options for an external dependency in package.yaml?", "body": "<p>I would like to use an external package from <code>Hackage</code>, which exposes additional features after being compiled with some flags. Using cabal, I must compile this way: <code>\"cabal install -fserver -fc-runtime\"</code>. How can I specify this flags in the <code>package.yaml</code>? I tried to use <code>extra-deps</code> and <code>ghc-options</code>, but it doesn't seem to work. I'm not sure if to use them is appropriate at all.</p>\n\n<p>For now, I have this error:</p>\n\n<blockquote>\n  <p>\"Error while parsing $.ghc-options - expected String, encountered\n  Object.\"</p>\n</blockquote>\n"}, {"tags": ["haskell", "variant", "fsm"], "comments": [{"owner": {"reputation": 1341, "user_id": 1036044, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PzcQL.jpg?s=128&g=1", "display_name": "Probie", "link": "https://stackoverflow.com/users/1036044/probie"}, "edited": false, "score": 0, "creation_date": 1527595127, "post_id": 50579397, "comment_id": 88176738, "body": "How do you intend to get around the cyclic dependencies? If A doesn&#39;t know about B (or B doesn&#39;t know about A), how can you refer to it?"}], "answers": [{"comments": [{"owner": {"reputation": 739, "user_id": 198277, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0cfe3de23679d68748d82750de1b88dc?s=128&d=identicon&r=PG", "display_name": "Sam Derbyshire", "link": "https://stackoverflow.com/users/198277/sam-derbyshire"}, "edited": false, "score": 1, "creation_date": 1527625188, "post_id": 50588021, "comment_id": 88193965, "body": "Thank you for taking the time to write this fantastically thorough answer!     I really like how your solution infers the most general type for the collection of states reachable from a given initial state, that&#39;s very neat. (Well, of course it&#39;s only the most general given the static type information provided, but that&#39;s all one can ask for.)     I&#39;ll try this approach with a flat representation for the extensible sum (instead of the linked representation you provided)."}], "tags": [], "owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "is_accepted": true, "score": 9, "last_activity_date": 1557751762, "last_edit_date": 1557751762, "creation_date": 1527607709, "answer_id": 50588021, "question_id": 50579397, "link": "https://stackoverflow.com/questions/50579397/extensible-state-machines-in-haskell/50588021#50588021", "title": "Extensible state machines in Haskell", "body": "<p>Using extensible sums we can <strong>remove step 1</strong> and <strong>reduce step 3 to \"import C\"</strong>.</p>\n\n<p>Removing both step 3 and step 1 entirely poses the problem of making the final module aware of the new transition, and I'm not sure that's possible purely using Haskell. Some kind of metaprogramming would be needed (e.g., via TH or CPP).</p>\n\n<p>As an alternative (and simpler) approach, I infer the set of states as those reachable from a predetermined initial state, implying that step 2 might also include some changes to existing transition functions to <strong>make the new state reachable</strong>. I hope that is a fair assumption to make.</p>\n\n<hr>\n\n<p>If we take as a constraint that the states do not need to be pre-declared, we still need some kind of alphabet to refer to these states. A convenient alphabet is given by GHC's <code>Symbol</code> type (type-level strings). We wrap symbols in a fresh type constructor to make things a bit more hygienic: an application can create a new namespace of states by declaring its own version of <code>Named</code>.</p>\n\n<pre><code>data Named (s :: Symbol)\n</code></pre>\n\n<p>Every type <code>Named s</code> is a \"name\" or \"key\" (<code>k</code>) that identifies a type of state, e.g., <code>Named \"A\"</code> or <code>Named \"B\"</code>. We can use a type class to associate them to</p>\n\n<ul>\n<li>the type of their contents (e.g., <code>B</code> contains an <code>Int</code>);</li>\n<li>the set of possible output states, each given as a pair of its name and its contents.</li>\n</ul>\n\n<p>This type class also contains the transition function to be defined for every state.</p>\n\n<pre><code>class State k where\n  type Contents k :: *\n  type Outputs k :: [(*, *)]\n  transition :: Contents k -&gt; S (Outputs k)\n</code></pre>\n\n<p><code>S</code> is an extensible sum type. For example, <code>S '[ '(Named \"A\", ()), '(Named \"B\", Int) ]</code> is a sum of a unit tagged by <code>\"A\"</code> and an <code>Int</code> tagged by <code>\"B\"</code>.</p>\n\n<pre><code>data S (u :: [(*, *)]) where\n  Here :: forall k a u. a -&gt; S ('(k, a) ': u)\n  There :: forall u x. S u -&gt; S (x ': u)\n</code></pre>\n\n<p>We can automate the injection of a type in a sum, using a smart constructor <code>inj1 @k</code> indexed by the key <code>k</code>.</p>\n\n<pre><code>-- v is a list containing the pair (k, a)\n-- instances omitted\nclass Inj1 k a v where\n  inj1 :: a -&gt; S v\n</code></pre>\n\n<hr>\n\n<p>Skipping the whole setup, let's see what using this framework looks like.</p>\n\n<p>To create a new transition is to declare an instance of <code>State</code>. The only dependencies are the general ones. As mentioned earlier, the file doesn't need to be aware of a predetermined set of states, it declares what it needs.</p>\n\n<p>Module A</p>\n\n<pre><code>-- Transitions out of A\ninstance State (Named \"A\") where\n\n  -- There is no meaningful value contained in the A state\n  type Contents (Named \"A\") = ()\n\n  -- The only transition is to \"B\"\n  type Outputs (Named \"A\") = '[ '(Named \"B\", Int)]\n\n  transition () = inj1 @(Named \"B\") 10\n</code></pre>\n\n<p>Module B</p>\n\n<pre><code>-- transitions out of B\ninstance State (Named \"B\") where\n  type Contents (Named \"B\") = Int\n  type Outputs (Named \"B\") = '[ '(Named \"A\", ()), '(Named \"B\", Int)]\n  transition i\n    | i &lt; 0 = inj1 @(Named \"A\") ()\n    | otherwise = inj1 @(Named \"B\") (i-1)\n</code></pre>\n\n<p>In the main module, we still need to import all the transitions, and to pick an initial state from which the reachable states can be computed.</p>\n\n<pre><code>import A\nimport B\n\ntype Initial = Named \"A\"\n\n-- Initial state A\ninitial :: Inj1 Initial () u =&gt; S u\ninitial = inj1 @Initial ()\n</code></pre>\n\n<p>Given the name of the initial state, there is a general function to produce the complete transition function, generating the complete list of reachable states.</p>\n\n<pre><code>sm :: forall initial u ...\n   .  (... {- all reachable states from 'initial' are in 'u' -})\n   =&gt; S u -&gt; S u\n</code></pre>\n\n<p>Thus we can define and use the transition as follows:</p>\n\n<pre><code>transition' = sm @Initial  -- everything inferred (S _ -&gt; S _)\n\n-- Run 14 steps from the initial state.\nmain = do\n  let steps = 14\n  mapM_ print . take (steps+1) . iterate transition' $ initial\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>Here ()\nThere Here 10\nThere Here 9\nThere Here 8\nThere Here 7\nThere Here 6\nThere Here 5\nThere Here 4\nThere Here 3\nThere Here 2\nThere Here 1\nThere Here 0\nThere Here -1\nHere ()\nThere Here 10\n</code></pre>\n\n<hr>\n\n<p>Hopefully it is apparent that the <code>State</code> type class provides enough information at the type level to reconstruct the complete state machine. From there it's \"just\" a matter of type-level programming to make that intuition a reality. I can talk a bit more about that if prompted, but for now here is a complete example:</p>\n\n<p><a href=\"https://gist.github.com/Lysxia/769ee0d4eaa30004aa457eb809bd2786\" rel=\"nofollow noreferrer\">https://gist.github.com/Lysxia/769ee0d4eaa30004aa457eb809bd2786</a></p>\n\n<p>This example uses <code>INCOHERENT</code> instances for simplicity, to generate the final set of states by unification, but a more robust solution with an explicit fixpoint iteration/graph search is certainly possible.</p>\n"}], "owner": {"reputation": 739, "user_id": 198277, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0cfe3de23679d68748d82750de1b88dc?s=128&d=identicon&r=PG", "display_name": "Sam Derbyshire", "link": "https://stackoverflow.com/users/198277/sam-derbyshire"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 476, "favorite_count": 4, "accepted_answer_id": 50588021, "answer_count": 1, "score": 8, "last_activity_date": 1557751762, "creation_date": 1527581458, "question_id": 50579397, "link": "https://stackoverflow.com/questions/50579397/extensible-state-machines-in-haskell", "title": "Extensible state machines in Haskell", "body": "<p>I can define a toy state machine (with trivial input) as follows:</p>\n\n<pre><code>--------------------------------------------\n-- module State where\n\ndata State = A | B Int\n\n--------------------------------------------\n-- module A where\n-- import State\n\ntransitionA :: State\ntransitionA = B 10\n\n--------------------------------------------\n-- module B where\n-- import State\n\ntransitionB :: Int -&gt; State\ntransitionB i\n  | i &lt; 0     = A\n  | otherwise = B (i-1)\n\n--------------------------------------------\n-- module StateMachine where\n-- import State\n-- import A\n-- import B\n\ntransition :: State -&gt; State\ntransition A     = transitionA\ntransition (B i) = transitionB i\n</code></pre>\n\n<p>If I now decide to add a new state, I have to:</p>\n\n<ol>\n<li>modify the State module to add the new state, say</li>\n</ol>\n\n<p>&nbsp;  </p>\n\n<pre><code>data State = A | B Int | C Double Double\n</code></pre>\n\n<ol start=\"2\">\n<li><p>add a new transition function transitionC in a module C</p></li>\n<li><p>import C in the last module, and add the C case to the pattern match</p></li>\n</ol>\n\n<p><strong>I'd like to set things up so that I only have to perform step 2 (write a new transition function) and everything else gets automatically taken care of.</strong><br>\nFor instance, one could try to use existential types to do something like the following:</p>\n\n<pre><code>--------------------------------------------\n{-# LANGUAGE ExistentialQuantification #-}\n-- module State where\n\nclass State s where\n    transition :: s -&gt; AState\n\ndata AState = forall s. State s =&gt; AState s\n\ninstance State AState where\n    transition (AState s) = transition s\n\n-------------------------------------\n-- module A where\n-- import State\n-- import B\n\ndata A = A\n\ninstance State A where\n  transition _ = AState (B 10)\n\n-------------------------------------\n-- module B where\n-- import State\n-- import A\n\ndata B = B Int\n\ninstance State B where\n    transition (B i)\n      | i &lt; 0     = AState ( A )\n      | otherwise = AState ( B (i-1) )\n</code></pre>\n\n<p>This is very convenient: to add a new state, we only need to do one thing, which is to write a data type and its associated transition function in a new module, and nothing else needs to be changed. Unfortunately, this approach doesn't work because it creates cyclic dependencies, e.g. in this case A needs to refer to B and B needs to refer to A.</p>\n\n<p>I also tried to look into using extensible sum types (polymorphic variants), but the same problem arises unless we declare all the possible states ahead of time in a separate module so that subsequent modules can refer to them. In other words, it can eliminate step 3, but not step 1. </p>\n\n<p>Is this the kind of problem that can be tackled using (Conor McBride's version of) indexed monads? It seems we could use some kind of indexed state monad where we don't know the return state in advance, which I gather, from his answer to <a href=\"https://stackoverflow.com/questions/28690448/what-is-indexed-monad\">What is indexed monad?</a>, is something that MonadIx achieves.</p>\n"}, {"tags": ["haskell", "dependent-type", "applicative", "type-families"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1527581574, "post_id": 50574309, "comment_id": 88168006, "body": "In applicatives, <code>liftAn f x1 .. xn</code> recently became less popular, being often replaced by <code>f &lt;$&gt; x1 &lt;*&gt; x2 &lt;*&gt; ... &lt;*&gt; xn</code> which generalizes to any <code>n</code>. Could you use something similar?"}, {"owner": {"reputation": 43134, "user_id": 1726343, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/55744f355c4714fd473c50e799165a70?s=128&d=identicon&r=PG", "display_name": "Asad Saeeduddin", "link": "https://stackoverflow.com/users/1726343/asad-saeeduddin"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1527598604, "post_id": 50574309, "comment_id": 88179126, "body": "@chi Unfortunately not. My usage here is not pointed; I need to lift functions of various arities and then do more things with the lifted functions, rather than directly applying them. I can do <code>\\x y z w -&gt; f &lt;$&gt; x &lt;*&gt; y ...</code>, but that&#39;s annoying."}], "answers": [{"comments": [{"owner": {"reputation": 43134, "user_id": 1726343, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/55744f355c4714fd473c50e799165a70?s=128&d=identicon&r=PG", "display_name": "Asad Saeeduddin", "link": "https://stackoverflow.com/users/1726343/asad-saeeduddin"}, "edited": false, "score": 0, "creation_date": 1527550784, "post_id": 50574535, "comment_id": 88158471, "body": "Thanks. So if I understand correctly, the central problem is that it&#39;s not possible to dispatch on <code>Proxy 1</code>, <code>Proxy 2</code> etc. at runtime, they all look the same. If I instead peano encode the arithmetic in a concrete datatype, as you have it, will my original code work? EDIT: I think i&#39;m missing the gist of the first point from this summary."}, {"owner": {"reputation": 8556, "user_id": 4892417, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NaBTj.jpg?s=128&g=1", "display_name": "oisdk", "link": "https://stackoverflow.com/users/4892417/oisdk"}, "reply_to_user": {"reputation": 43134, "user_id": 1726343, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/55744f355c4714fd473c50e799165a70?s=128&d=identicon&r=PG", "display_name": "Asad Saeeduddin", "link": "https://stackoverflow.com/users/1726343/asad-saeeduddin"}, "edited": false, "score": 0, "creation_date": 1527551487, "post_id": 50574535, "comment_id": 88158587, "body": "Basically, to use the type-level information, you need to be able to go to and from the type level and runtime representations. When you use <code>natVal</code> you get an <code>Integer</code>: however, you can&#39;t go <i>back</i> to the type level from the integer, since it carries no type-level information about its value. So when you match on it (ie in <code>go 1 = ...</code>), while you <i>want</i> to know that the right-hand-side should have the type corresponding to the &quot;1&quot; case, GHC can only know that the right-hand-side&#39;s type is the same as all the other cases."}, {"owner": {"reputation": 43134, "user_id": 1726343, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/55744f355c4714fd473c50e799165a70?s=128&d=identicon&r=PG", "display_name": "Asad Saeeduddin", "link": "https://stackoverflow.com/users/1726343/asad-saeeduddin"}, "edited": false, "score": 0, "creation_date": 1527551747, "post_id": 50574535, "comment_id": 88158638, "body": "I see. So the combination of these two factors means that I can&#39;t dispatch directly on a proxy of the heterogeneous list itself (because it has no runtime representation), nor can i turn it into <code>Z</code>s and <code>Succ</code>s (because I lose information). I guess the only solution is directly matching on the functions. It&#39;s a shame Haskell doesn&#39;t allow quantified variables in the RHS of type families, otherwise LiftN could be implemented quite comfortably with <code>type family LiftN (f :: * -&gt; *) (n :: &#39;Nat) where</code>."}, {"owner": {"reputation": 8556, "user_id": 4892417, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NaBTj.jpg?s=128&g=1", "display_name": "oisdk", "link": "https://stackoverflow.com/users/4892417/oisdk"}, "reply_to_user": {"reputation": 43134, "user_id": 1726343, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/55744f355c4714fd473c50e799165a70?s=128&d=identicon&r=PG", "display_name": "Asad Saeeduddin", "link": "https://stackoverflow.com/users/1726343/asad-saeeduddin"}, "edited": false, "score": 0, "creation_date": 1527552026, "post_id": 50574535, "comment_id": 88158684, "body": "Yes, that&#39;s correct. The alternative is to use a singleton, which wraps up the runtime and typelevel information in one, allowing you to go between each.<code>data Natty (n :: Nat) where Zy :: Natty Z; Sy :: Natty n -&gt; Natty (S n)</code>"}], "tags": [], "owner": {"reputation": 8556, "user_id": 4892417, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/NaBTj.jpg?s=128&g=1", "display_name": "oisdk", "link": "https://stackoverflow.com/users/4892417/oisdk"}, "is_accepted": true, "score": 4, "last_activity_date": 1527550624, "creation_date": 1527550624, "answer_id": 50574535, "question_id": 50574309, "link": "https://stackoverflow.com/questions/50574309/defining-arity-generic-lift/50574535#50574535", "title": "Defining arity-generic lift", "body": "<p>There are two issues here:</p>\n\n<ul>\n<li>You need more than just the <code>natVal</code> of a type-level number to ensure the whole function type checks: you also need a proof that the structure you're recursing on corresponds to the type-level number you're referring to. <code>Integer</code> on its own loses all of the type-level information.</li>\n<li>Conversely, you need more runtime information than just the type: in Haskell, types have no runtime representation, so passing in a <code>Proxy a</code> is the same as passing in <code>()</code>. You need to get in runtime info somewhere.</li>\n</ul>\n\n<p>Both of these problems can be addressed using singletons, or with classes:</p>\n\n<pre><code>{-# LANGUAGE DataKinds             #-}\n{-# LANGUAGE TypeFamilies          #-}\n{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE FlexibleInstances     #-}\n{-# LANGUAGE FlexibleContexts      #-}\n\ndata Nat = Z | S Nat\n\ntype family AppFunc f (n :: Nat) arrows where\n  AppFunc f Z a = f a\n  AppFunc f (S n) (a -&gt; b) = f a -&gt; AppFunc f n b\n\ntype family CountArgs f where\n  CountArgs (a -&gt; b) = S (CountArgs b)\n  CountArgs result = Z\n\nclass (CountArgs a ~ n) =&gt; Applyable a n where\n  apply :: Applicative f =&gt; f a -&gt; AppFunc f (CountArgs a) a\n\ninstance (CountArgs a ~ Z) =&gt; Applyable a Z where\n  apply = id\n  {-# INLINE apply #-}\n\ninstance Applyable b n =&gt; Applyable (a -&gt; b) (S n) where\n  apply f x = apply (f &lt;*&gt; x)\n  {-# INLINE apply #-}\n\n-- | &gt;&gt;&gt; lift (\\x y z -&gt; x ++ y ++ z) (Just \"a\") (Just \"b\") (Just \"c\")\n-- Just \"abc\"\nlift :: (Applyable a n, Applicative f) =&gt; (b -&gt; a) -&gt; (f b -&gt; AppFunc f n a)\nlift f x = apply (fmap f x)\n{-# INLINE lift #-}\n</code></pre>\n\n<p>This example is adapted from <a href=\"https://github.com/goldfirere/thesis/raw/master/built/thesis.pdf\" rel=\"nofollow noreferrer\">Richard Eisenberg's thesis</a>.</p>\n"}], "owner": {"reputation": 43134, "user_id": 1726343, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/55744f355c4714fd473c50e799165a70?s=128&d=identicon&r=PG", "display_name": "Asad Saeeduddin", "link": "https://stackoverflow.com/users/1726343/asad-saeeduddin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 152, "favorite_count": 0, "accepted_answer_id": 50574535, "answer_count": 1, "score": 1, "last_activity_date": 1527550624, "creation_date": 1527548433, "last_edit_date": 1527548813, "question_id": 50574309, "link": "https://stackoverflow.com/questions/50574309/defining-arity-generic-lift", "title": "Defining arity-generic lift", "body": "<p>I'm trying to define <code>liftN</code> for Haskell. The value-level implementation in dynamically typed languages like JS is fairly straightforward, I'm just having trouble expressing it in Haskell.</p>\n\n<p>After some trial and error, I arrived at the following, which typechecks (note the entire implementation of <code>liftN</code> is <code>undefined</code>):</p>\n\n<pre><code>{-# LANGUAGE FlexibleContexts, ScopedTypeVariables, TypeFamilies, TypeOperators, UndecidableInstances #-}\n\nimport Data.Proxy\nimport GHC.TypeLits\n\ntype family Fn x (y :: [*]) where\n  Fn x '[]    = x\n  Fn x (y:ys) = x -&gt; Fn y ys\n\ntype family Map (f :: * -&gt; *) (x :: [*]) where\n  Map f '[]     = '[]\n  Map f (x:xs)  = (f x):(Map f xs)\n\ntype family LiftN (f :: * -&gt; *) (x :: [*]) where\n  LiftN f (x:xs)  = (Fn x xs) -&gt; (Fn (f x) (Map f xs))\n\nliftN :: Proxy x -&gt; LiftN f x\nliftN = undefined\n</code></pre>\n\n<p>This gives me the desired behavior in ghci:</p>\n\n<pre><code>*Main&gt; :t liftN (Proxy :: Proxy '[a])\nliftN (Proxy :: Proxy '[a]) :: a -&gt; f a\n\n*Main&gt; :t liftN (Proxy :: Proxy '[a, b])\nliftN (Proxy :: Proxy '[a, b]) :: (a -&gt; b) -&gt; f a -&gt; f b\n</code></pre>\n\n<p>and so on.</p>\n\n<p>The part I'm stumped on is how to actually implement it. I was figuring maybe the easiest way is to exchange the type level list for a type level number representing its length, use <code>natVal</code> to get the corresponding value level number, and then dispatch <code>1</code> to <code>pure</code>, <code>2</code> to <code>map</code> and <code>n</code> to (finally), the actual recursive implementation of <code>liftN</code>.</p>\n\n<p>Unfortunately I can't even get the <code>pure</code> and <code>map</code> cases to typecheck. Here's what I added (note <code>go</code> is still <code>undefined</code>):</p>\n\n<pre><code>type family Length (x :: [*]) where\n  Length '[]    = 0\n  Length (x:xs) = 1 + (Length xs)\n\nliftN :: (KnownNat (Length x)) =&gt; Proxy x -&gt; LiftN f x\nliftN (Proxy :: Proxy x) = go (natVal (Proxy :: Proxy (Length x))) where\n  go = undefined\n</code></pre>\n\n<p>So far so good. But then:</p>\n\n<pre><code>liftN :: (Applicative f, KnownNat (Length x)) =&gt; Proxy x -&gt; LiftN f x\nliftN (Proxy :: Proxy x) = go (natVal (Proxy :: Proxy (Length x))) where\n  go 1 = pure\n  go 2 = fmap\n  go n = undefined\n</code></pre>\n\n<p>...disaster strikes:</p>\n\n<pre><code>Prelude&gt; :l liftn.hs\n[1 of 1] Compiling Main             ( liftn.hs, interpreted )\n\nliftn.hs:22:28: error:\n    * Couldn't match expected type `LiftN f x'\n                  with actual type `(a0 -&gt; b0) -&gt; (a0 -&gt; a0) -&gt; a0 -&gt; b0'\n      The type variables `a0', `b0' are ambiguous\n    * In the expression: go (natVal (Proxy :: Proxy (Length x)))\n      In an equation for `liftN':\n          liftN (Proxy :: Proxy x)\n            = go (natVal (Proxy :: Proxy (Length x)))\n            where\n                go 1 = pure\n                go 2 = fmap\n                go n = undefined\n    * Relevant bindings include\n        liftN :: Proxy x -&gt; LiftN f x (bound at liftn.hs:22:1)\n   |\n22 | liftN (Proxy :: Proxy x) = go (natVal (Proxy :: Proxy (Length x))) where\n   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFailed, no modules loaded.\n</code></pre>\n\n<p>At this point it isn't clear to me what exactly is ambiguous or how to disambiguate it.</p>\n\n<p>Is there a way to elegantly (or if not-so-elegantly, in a way that the inelegance is constrained to the function implementation) implement the body of <code>liftN</code> here?</p>\n"}, {"tags": ["typescript", "haskell", "functional-programming"], "comments": [{"owner": {"reputation": 89146, "user_id": 211563, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d32a10a2f047dec1e5582e74cba6b3ec?s=128&d=identicon&r=PG", "display_name": "Andrew Marshall", "link": "https://stackoverflow.com/users/211563/andrew-marshall"}, "edited": false, "score": 3, "creation_date": 1527546738, "post_id": 50573891, "comment_id": 88157673, "body": "You may want to take a look at <a href=\"https://gcanti.github.io/fp-ts/\" rel=\"nofollow noreferrer\">FP TS</a>, in particular its <a href=\"https://gcanti.github.io/fp-ts/Option.html\" rel=\"nofollow noreferrer\"><code>Option</code> type</a>."}, {"owner": {"reputation": 4310, "user_id": 1128571, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/e743815e7a4a5f8c1d66277d6397624f?s=128&d=identicon&r=PG", "display_name": "xiaolingxiao", "link": "https://stackoverflow.com/users/1128571/xiaolingxiao"}, "reply_to_user": {"reputation": 89146, "user_id": 211563, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/d32a10a2f047dec1e5582e74cba6b3ec?s=128&d=identicon&r=PG", "display_name": "Andrew Marshall", "link": "https://stackoverflow.com/users/211563/andrew-marshall"}, "edited": false, "score": 0, "creation_date": 1527547448, "post_id": 50573891, "comment_id": 88157813, "body": "@AndrewMarshall thanks that kind of resources is just what I&#39;m looking for"}], "answers": [{"comments": [{"owner": {"reputation": 4310, "user_id": 1128571, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/e743815e7a4a5f8c1d66277d6397624f?s=128&d=identicon&r=PG", "display_name": "xiaolingxiao", "link": "https://stackoverflow.com/users/1128571/xiaolingxiao"}, "edited": false, "score": 0, "creation_date": 1527546226, "post_id": 50574018, "comment_id": 88157547, "body": "Is it possible for it to return  a value <code>Nothing</code>? Becaues I would like to pattern match on the value later"}, {"owner": {"reputation": 147776, "user_id": 3731501, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/e4783dfa8ec98c884e61d29f2192ac97?s=128&d=identicon&r=PG&f=1", "display_name": "Estus Flask", "link": "https://stackoverflow.com/users/3731501/estus-flask"}, "reply_to_user": {"reputation": 4310, "user_id": 1128571, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/e743815e7a4a5f8c1d66277d6397624f?s=128&d=identicon&r=PG", "display_name": "xiaolingxiao", "link": "https://stackoverflow.com/users/1128571/xiaolingxiao"}, "edited": false, "score": 0, "creation_date": 1527546405, "post_id": 50574018, "comment_id": 88157586, "body": "I&#39;m not familiar with Haskell. What exactly do you mean? You can compare a value against <code>undefined</code>."}, {"owner": {"reputation": 4310, "user_id": 1128571, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/e743815e7a4a5f8c1d66277d6397624f?s=128&d=identicon&r=PG", "display_name": "xiaolingxiao", "link": "https://stackoverflow.com/users/1128571/xiaolingxiao"}, "edited": false, "score": 0, "creation_date": 1527546521, "post_id": 50574018, "comment_id": 88157617, "body": "this blog gives a good intro: <a href=\"https://blog.carbonfive.com/2018/01/08/an-introduction-to-adts-and-structural-pattern-matching-in-typescript/\" rel=\"nofollow noreferrer\">blog.carbonfive.com/2018/01/08/&hellip;</a>   Basically pattern matching determine which case you are in."}, {"owner": {"reputation": 147776, "user_id": 3731501, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/e4783dfa8ec98c884e61d29f2192ac97?s=128&d=identicon&r=PG&f=1", "display_name": "Estus Flask", "link": "https://stackoverflow.com/users/3731501/estus-flask"}, "reply_to_user": {"reputation": 4310, "user_id": 1128571, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/e743815e7a4a5f8c1d66277d6397624f?s=128&d=identicon&r=PG", "display_name": "xiaolingxiao", "link": "https://stackoverflow.com/users/1128571/xiaolingxiao"}, "edited": false, "score": 0, "creation_date": 1527547141, "post_id": 50574018, "comment_id": 88157754, "body": "I&#39;m not sure what&#39;s the real benefit in comparison with undefined. If you need &#39;nothing but not undefined&#39;, that&#39;s the use case for null. undefined or null is idiomatic JS/TS approach. You can use symbols for that <a href=\"https://www.typescriptlang.org/play/#src=const%20Nothing%20%3D%20Symbol(%27nothing%27)%3B%0D%0Atype%20Nothing%20%3D%20typeof%20Nothing%3B%0D%0A%0D%0A%0D%0Afunction%20foo(x%20%3A%20string)%20%3A%20number%20%7C%20Nothing%20%7B%0D%0A%20%20%20%20return%3B%0D%0A%7D\" rel=\"nofollow noreferrer\">typescriptlang.org/play/&hellip;</a> but there may be shortcomings."}, {"owner": {"reputation": 147776, "user_id": 3731501, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/e4783dfa8ec98c884e61d29f2192ac97?s=128&d=identicon&r=PG&f=1", "display_name": "Estus Flask", "link": "https://stackoverflow.com/users/3731501/estus-flask"}, "reply_to_user": {"reputation": 4310, "user_id": 1128571, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/e743815e7a4a5f8c1d66277d6397624f?s=128&d=identicon&r=PG", "display_name": "xiaolingxiao", "link": "https://stackoverflow.com/users/1128571/xiaolingxiao"}, "edited": false, "score": 1, "creation_date": 1527547162, "post_id": 50574018, "comment_id": 88157758, "body": "Or use a plain object if you can benefit from structural compatibility, <a href=\"https://www.typescriptlang.org/play/#src=const%20Nothing%3A%20%7B%20tag%3A%20%27Nothing%27%20%7D%20%3D%20%7B%20tag%3A%20%27Nothing%27%20%7D%3B%0D%0Atype%20Nothing%20%3D%20typeof%20Nothing%3B%0D%0A%0D%0Afunction%20foo(x%20%3A%20string)%20%3A%20number%20%7C%20Nothing%20%7B%0D%0A%20%20%20%20return%20Nothing%3B%0D%0A%7D\" rel=\"nofollow noreferrer\">typescriptlang.org/play/&hellip;</a>"}, {"owner": {"reputation": 147776, "user_id": 3731501, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/e4783dfa8ec98c884e61d29f2192ac97?s=128&d=identicon&r=PG&f=1", "display_name": "Estus Flask", "link": "https://stackoverflow.com/users/3731501/estus-flask"}, "reply_to_user": {"reputation": 4310, "user_id": 1128571, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/e743815e7a4a5f8c1d66277d6397624f?s=128&d=identicon&r=PG", "display_name": "xiaolingxiao", "link": "https://stackoverflow.com/users/1128571/xiaolingxiao"}, "edited": false, "score": 1, "creation_date": 1527548375, "post_id": 50574018, "comment_id": 88157981, "body": "I listed all the options. Hope this helps."}], "tags": [], "owner": {"reputation": 147776, "user_id": 3731501, "user_type": "registered", "accept_rate": 77, "profile_image": "https://www.gravatar.com/avatar/e4783dfa8ec98c884e61d29f2192ac97?s=128&d=identicon&r=PG&f=1", "display_name": "Estus Flask", "link": "https://stackoverflow.com/users/3731501/estus-flask"}, "is_accepted": true, "score": 9, "last_activity_date": 1527548348, "last_edit_date": 1527548348, "creation_date": 1527546123, "answer_id": 50574018, "question_id": 50573891, "link": "https://stackoverflow.com/questions/50573891/maybe-a-type-in-typescript/50574018#50574018", "title": "Maybe a type in typescript", "body": "<p>Depending on the case, it can be <code>void</code>, <code>undefined</code>, or <code>?</code> optional modifier for properties and parameters.</p>\n\n<p>It's:</p>\n\n<pre><code>function foo(x : string) : number | void {\n    // returns nothing\n}\n</code></pre>\n\n<p><code>void</code> and <code>undefined</code> types are compatible, but there is some difference between them. The former is preferable for function return types, because the latter requires a function to have <code>return</code> statement:</p>\n\n<pre><code>function foo(x : string) : number | undefined {\n    return;\n}\n</code></pre>\n\n<p><code>Maybe</code> can be implemented with generic type. Explicit <code>Nothing</code> type can be implemented with unique symbol:</p>\n\n<pre><code>const Nothing = Symbol('nothing');\ntype Nothing = typeof Nothing;\ntype Maybe&lt;T&gt; = T | Nothing;\n\nfunction foo(x : string) : Maybe&lt;number&gt; {\n    return Nothing;\n}\n</code></pre>\n\n<p>Or a class (private fields can be used to prevent ducktyping):</p>\n\n<pre><code>abstract class Nothing {\n    private tag = 'nothing'\n}\ntype Maybe&lt;T&gt; = T | typeof Nothing;\n\nfunction foo(x : string) : Maybe&lt;number&gt; {\n    return Nothing;\n}\n</code></pre>\n\n<p>Notice that class types designate class instance type and require to use <code>typeof</code> when a class is referred.</p>\n\n<p>Or an object (if duck typing can be desirable):</p>\n\n<pre><code>const Nothing: { tag: 'Nothing' } = { tag: 'Nothing' };\ntype Nothing = typeof Nothing;\ntype Maybe&lt;T&gt; = T | Nothing;\n\nfunction foo(x : string) : Maybe&lt;number&gt; {\n    return Nothing;\n}\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2005, "user_id": 8809024, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-CJ3wsrQDkBk/AAAAAAAAAAI/AAAAAAAAAbM/0v24phFPQc8/photo.jpg?sz=128", "display_name": "Mateja Petrovic", "link": "https://stackoverflow.com/users/8809024/mateja-petrovic"}, "is_accepted": false, "score": 3, "last_activity_date": 1566421121, "last_edit_date": 1566421121, "creation_date": 1563313949, "answer_id": 57065930, "question_id": 50573891, "link": "https://stackoverflow.com/questions/50573891/maybe-a-type-in-typescript/57065930#57065930", "title": "Maybe a type in typescript", "body": "<pre><code>enum Nothing {\n  Nothing = 'Nothing'\n}\n\ntype Maybe&lt;A&gt; = A | Nothing\ntype MaybeNumber = Maybe&lt;number&gt;\n\nconst isNothing = (m: MaybeNumber): m is Nothing =&gt; m === Nothing.Nothing \n\nconst foo = (m: MaybeNumber) =&gt; {\n  if (isNothing(m)) {\n    return Nothing.Nothing\n  } else {\n    return m + 1\n  }\n}\n\nfoo(1) // \u2714\ufe0f\nfoo('Nothing') // \u274c\nfoo(Nothing.Nothing) // \u2714\ufe0f\n\n</code></pre>\n\n<p>or without using an <code>enum</code> using a <code>string literal type</code></p>\n\n<pre><code>const Nothing = '__nothing__'\n\ntype Maybe&lt;A&gt; = A | Nothing\ntype MaybeNumber = Maybe&lt;number&gt;\n\nconst isNothing = (m: MaybeNumber): m is Nothing =&gt; m === Nothing \n\nconst foo = (m: MaybeNumber) =&gt; {\n  if (isNothing(m)) {\n    return Nothing\n  } else {\n    return m + 1\n  }\n}\n\nfoo(1) // \u2714\ufe0f\nfoo(Nothing) // \u2714\ufe0f\nfoo('__nothing__') // \u2714\ufe0f\n\n</code></pre>\n\n<p>or with symbols</p>\n\n<pre><code>const nothing = Symbol('Nothing')\ntype Nothing = typeof nothing\n\ntype Maybe&lt;A&gt; = A | Nothing\ntype MaybeNumber = Maybe&lt;number&gt;\n\nconst isNothing = (m: MaybeNumber): m is Nothing =&gt; m.toString() === 'Symbol(Nothing)' \n\nconst foo = (m: MaybeNumber) =&gt; {\n  if (isNothing(m)) {\n    return nothing\n  } else {\n    return m + 1\n  }\n}\n\nfoo(1) // \u2714\ufe0f\nfoo(nothing) // \u2714\ufe0f\n\n</code></pre>\n\n<p>live on <a href=\"https://stackblitz.com/edit/typescript-maybe\" rel=\"nofollow noreferrer\">stackblitz</a></p>\n"}], "owner": {"reputation": 4310, "user_id": 1128571, "user_type": "registered", "accept_rate": 83, "profile_image": "https://www.gravatar.com/avatar/e743815e7a4a5f8c1d66277d6397624f?s=128&d=identicon&r=PG", "display_name": "xiaolingxiao", "link": "https://stackoverflow.com/users/1128571/xiaolingxiao"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 9533, "favorite_count": 2, "accepted_answer_id": 50574018, "answer_count": 2, "score": 5, "last_activity_date": 1566421121, "creation_date": 1527545085, "last_edit_date": 1527546311, "question_id": 50573891, "link": "https://stackoverflow.com/questions/50573891/maybe-a-type-in-typescript", "title": "Maybe a type in typescript", "body": "<p>I would like to construct a <code>Maybe a</code> type in typescript a la Haskell:</p>\n\n<pre><code>data Maybe a = Just a | Nothing\n</code></pre>\n\n<p>It seems like the way to do it in <code>typescript</code> is:</p>\n\n<pre><code>interface Nothing { tag \"Nothing }\ntype Maybe&lt;T&gt; = T | Nothing\n</code></pre>\n\n<p>I would like to make a function:</p>\n\n<pre><code>function foo(x : string) : Maybe&lt;T&gt; {\n    return Nothing\n}\n</code></pre>\n\n<p>akin to:</p>\n\n<pre><code>foo : String -&gt; Maybe a\nfoo _ = Nothing\n</code></pre>\n\n<p>However this does not work in <code>typescript</code>. What is the right way to return a value <code>Nothing</code> in typescript? I would like to avoid using <code>null</code> if possible. </p>\n\n<p>___________________________________________________-</p>\n\n<p>Edit: It would be really <em>nice</em> if the function <code>foo</code> would return a <em>value</em> <code>Nothing</code> because I would like to pattern match on value constructor later, ie:</p>\n\n<pre><code>case blah blah of \n    | Just x -&gt; x + x\n    | Nothing -&gt; \"no words\"\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 8857, "user_id": 3414900, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/KlvbC.jpg?s=128&g=1", "display_name": "bartop", "link": "https://stackoverflow.com/users/3414900/bartop"}, "edited": false, "score": 2, "creation_date": 1527535925, "post_id": 50572433, "comment_id": 88154582, "body": "Did You try to simply implement it recursively + use memoization? I guess it&#39;s good use of this haskell feature"}, {"owner": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1527536940, "post_id": 50572433, "comment_id": 88154948, "body": "This seems more appropriate for <a href=\"https://codereview.stackexchange.com\">codereview.stackexchange.com</a>."}, {"owner": {"reputation": 1642, "user_id": 3928184, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh6.googleusercontent.com/-opJFz3zFjGI/AAAAAAAAAAI/AAAAAAAAAr0/2zAUOWaRv90/photo.jpg?sz=128", "display_name": "bjd2385", "link": "https://stackoverflow.com/users/3928184/bjd2385"}, "reply_to_user": {"reputation": 14582, "user_id": 2225384, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f30b04ed4d0b3fc4bc791a28815f34ca?s=128&d=identicon&r=PG", "display_name": "Rein Henrichs", "link": "https://stackoverflow.com/users/2225384/rein-henrichs"}, "edited": false, "score": 0, "creation_date": 1527539622, "post_id": 50572433, "comment_id": 88155817, "body": "@ReinHenrichs I was thinking about posting it there, but I&#39;m hardly familiar with their rules"}], "answers": [{"comments": [{"owner": {"reputation": 1642, "user_id": 3928184, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh6.googleusercontent.com/-opJFz3zFjGI/AAAAAAAAAAI/AAAAAAAAAr0/2zAUOWaRv90/photo.jpg?sz=128", "display_name": "bjd2385", "link": "https://stackoverflow.com/users/3928184/bjd2385"}, "edited": false, "score": 0, "creation_date": 1527539482, "post_id": 50573070, "comment_id": 88155788, "body": "<i>Very</i> well written answer."}], "tags": [], "owner": {"reputation": 23444, "user_id": 414413, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/6de2113f01432aa844dc85070ff33e89?s=128&d=identicon&r=PG", "display_name": "Cirdec", "link": "https://stackoverflow.com/users/414413/cirdec"}, "is_accepted": true, "score": 7, "last_activity_date": 1527559001, "last_edit_date": 1527559001, "creation_date": 1527539217, "answer_id": 50573070, "question_id": 50572433, "link": "https://stackoverflow.com/questions/50572433/trying-to-write-an-implementation-of-the-levenshtein-metric-with-matrices/50573070#50573070", "title": "Trying to write an implementation of the Levenshtein metric with matrices", "body": "<p>There's a formula for solving dynamic programming problems like this in Haskell.</p>\n\n<ol>\n<li>Write the solution in terms of a recursive formula</li>\n<li>Abstract over the recursive calls by rewriting a function <code>a -&gt; b</code> as <code>(a -&gt; b) -&gt; (a -&gt; b)</code> with no recursive calls.</li>\n<li>Redirect the recursive calls to memoization through some point in memory - a let binding, a list, an array, a memotrie, etc.</li>\n</ol>\n\n<p>For levenshtien distance an array is appropriate.</p>\n\n<h3>Recursive formula</h3>\n\n<p>Start by writing the levenshtien distance formula recursively in terms of itself</p>\n\n<pre><code>lev :: Eq a =&gt; [a] -&gt; [a] -&gt; (Int, Int) -&gt; Int\nlev a b (0, 0) = 0\nlev a b (0, j) = j\nlev a b (i, 0) = i\nlev a b (i, j) = (lev a b (i-1, j) + 1) `min` (lev a b (i, j-1) + 1) `min` (lev a b (i-1, j-1) + if a !! (i - 1) == b !! (j - 1) then 0 else 1)\n</code></pre>\n\n<p>The levenshtien distance for two strings is the distance calculated all the way to the last characters</p>\n\n<pre><code>levenshtien :: Eq a =&gt; [a] -&gt; [a] -&gt; Int\nlevenshtien a b = lev a b upperBound\n  where\n    upperBound = (length a, length b)\n</code></pre>\n\n<h3>Abstact over recursive calls</h3>\n\n<p>Then replace the recursive calls to calls to some other function <code>f</code> that somehow implements the rest of levenshtien distance.</p>\n\n<pre><code>lev' :: Eq a =&gt; [a] -&gt; [a] -&gt; ((Int, Int) -&gt; Int) -&gt; (Int, Int) -&gt; Int\nlev' a b f (0, 0) = 0\nlev' a b f (0, j) = j\nlev' a b f (i, 0) = i\nlev' a b f (i, j) = (f (i-1, j) + 1) `min` (f (i, j-1) + 1) `min` (f (i-1, j-1) + if a !! (i - 1) == b !! (j - 1) then 0 else 1)\n</code></pre>\n\n<p>You can recover <code>lev</code> from <code>lev'</code> by using <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Function.html#v:fix\" rel=\"noreferrer\"><code>fix</code></a>, which is defined as <code>fix f = let x = f x in x</code></p>\n\n<pre><code>import Data.Function\n\nlev :: Eq a =&gt; [a] -&gt; [a] -&gt; (Int, Int) -&gt; Int\nlev a b = fix (lev' a b)\n</code></pre>\n\n<h3>Memoization via arrays</h3>\n\n<p>Finally you'll need a way to memoize the intermediate results in an array. I find the following to be an easier way to build an array than the functions in <a href=\"http://hackage.haskell.org/package/array-0.5.2.0/docs/Data-Array.html\" rel=\"noreferrer\">Data.Array</a>.</p>\n\n<pre><code>import Data.Array\n\nbuildArray :: Ix i =&gt; (i, i) -&gt; (i -&gt; e) -&gt; Array i e\nbuildArray bounds f = listArray bounds (f &lt;$&gt; range bounds)\n</code></pre>\n\n<p>We can memoize a function in an array by building an array holding some of the results and use the stored value from the array if the argument is in the array, and using the original function if it's not.</p>\n\n<pre><code>memoArray :: Ix i =&gt; (i, i) -&gt; (i -&gt; e) -&gt; (i -&gt; e)\nmemoArray bounds f = \\i -&gt; if inRange bounds i then arr ! i else f i\n  where\n    arr = buildArray bounds f\n</code></pre>\n\n<p>We can fix a function with some of its values memoized in an array by fixing the function composed with memoing some of its values.</p>\n\n<pre><code>fixArray :: Ix i =&gt; (i, i) -&gt; ((i -&gt; e) -&gt; i -&gt; e) -&gt; (i -&gt; e)\nfixArray bounds f = fix (memoArray bounds . f)\n</code></pre>\n\n<h3>Putting it all together</h3>\n\n<p>Finally we can rewrite levenshtien in terms of <code>lev'</code> and <code>fixArray</code>, memorizing all the important bits that would be re-used along the way.</p>\n\n<pre><code>levenshtien :: Eq a =&gt; [a] -&gt; [a] -&gt; Int\nlevenshtien a b = fixArray ((1, 1), upperBound) (lev' a b) upperBound\n  where\n    upperBound = (length a, length b)\n</code></pre>\n\n<hr>\n\n<p>Further improvements</p>\n\n<ul>\n<li>get rid of the quadratic list accesses <code>!!</code> by replacing the lists with arrays</li>\n<li>get rid of the quadratic memory usage by strictly folding up a one-dimensional array</li>\n</ul>\n"}], "owner": {"reputation": 1642, "user_id": 3928184, "user_type": "registered", "accept_rate": 60, "profile_image": "https://lh6.googleusercontent.com/-opJFz3zFjGI/AAAAAAAAAAI/AAAAAAAAAr0/2zAUOWaRv90/photo.jpg?sz=128", "display_name": "bjd2385", "link": "https://stackoverflow.com/users/3928184/bjd2385"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 119, "favorite_count": 2, "accepted_answer_id": 50573070, "answer_count": 1, "score": 4, "last_activity_date": 1527559001, "creation_date": 1527535295, "last_edit_date": 1527535618, "question_id": 50572433, "link": "https://stackoverflow.com/questions/50572433/trying-to-write-an-implementation-of-the-levenshtein-metric-with-matrices", "title": "Trying to write an implementation of the Levenshtein metric with matrices", "body": "<p>The following is what I've hacked together so far using \"matrix memory\" in implementing \u041b\u0435\u0432\u0435\u043d\u0448\u0442\u0435\u0301\u0439\u043d. I'm trying to use Haskell for just about everything now so that I really learn it. Concepts I haven't really grasped yet include monad transformers, the state monad (working on it), and lenses.</p>\n\n<pre><code>import Data.Matrix\nimport Control.Monad.State\nimport Control.Applicative\n\n\ntype RecState = Int\n\n-- Set up the first row\nsetLeftCol :: String -&gt; Matrix Int -&gt; Maybe (Matrix Int)\nsetLeftCol str mat = let strLength = length str + 1\n                     in foldr helper (Just mat) [1..strLength]\n  where\n    helper :: Int -&gt; Maybe (Matrix Int) -&gt; Maybe (Matrix Int)\n    helper value matrixMon = (\\m -&gt; safeSet (value-1) (value,1) m) =&lt;&lt; matrixMon\n\n-- Encapsulate a transposition in a Maybe context\ntransposeM :: Matrix a -&gt; Maybe (Matrix a)\ntransposeM mat = Just (transpose mat)\n\n-- Set up the first column\nsetTopRow  :: String -&gt; Matrix Int -&gt; Maybe (Matrix Int)\nsetTopRow str mat = let mat' = return mat\n                    in mat' &gt;&gt;= transposeM &gt;&gt;= (setLeftCol str) &gt;&gt;= transposeM\n\n-- Generate coordinates\ncoords :: Int -&gt; Int -&gt; [(Int,Int)]\ncoords width height = [(x,y) | x &lt;- [1..(width+1)], y &lt;- [1..(height+1)]]\n\nsafeFst :: Maybe (Int,Int) -&gt; Maybe Int\nsafeFst tuple = case tuple of\n                  Just (x,y) -&gt; Just x\n                  Nothing    -&gt; Nothing\n\nsafeSnd :: Maybe (Int,Int) -&gt; Maybe Int\nsafeSnd tuple = case tuple of\n                  Just (x,y) -&gt; Just y\n                  Nothing    -&gt; Nothing\n\ndistance :: Matrix Int -&gt; State RecState (Matrix Int)\ndistance matrix = do\n  index &lt;- get\n  let coordinate = coordinates !! index\n      i = fst coordinate\n      j = snd coordinate\n  if index == size then\n    put matrix\n    return $ getElem i j matrix\n  else do\n    put (index + 1)\n    let ch1 = w1 !! (i - 1)\n        ch2 = w2 !! (j - 1)\n        cost = if ch1 /= ch2 then 1 else 0\n        entry1 = (getElem (i - 1) j matrix) + 1\n        entry2 = (getElem i (j - 1) matrix) + 1\n        entry3 = (getElem (i - 1) (j - 1) matrix) + cost\n    return $ distance $ setElem (minimum [entry1,entry2,entry3]) coordinate matrix\n\n\n-- Compute the Levenshtein distance on two strings.\nlevenshtein :: String -&gt; String -&gt; Int\nlevenshtein \"\" \"\" = 0\nlevenshtein \"\" w2 = length w2\nlevenshtein w1 \"\" = length w1\nlevenshtein w1 w2 = let lenW1 = length w1\n                        lenW2 = length w2\n                        size = lenW1 * lenW2\n                        matrix = Just $ zero (lenW1 + 1) (lenW2 + 1)\n                        matrix' = matrix &gt;&gt;= setLeftCol w1 &gt;&gt;= setTopRow w2\n                        coordinates = coords lenW1 lenW2\n                    in execState (distance &lt;$&gt; matrix') (lenW1 + 2)\n\nshowResults :: Show r =&gt; r -&gt; IO ()\nshowResults = putStrLn . show\n\nshowLevenshtein :: String -&gt; String -&gt; IO ()\nshowLevenshtein = showResults . levenshtein\n</code></pre>\n\n<p>My first question is how do I organize the <code>distance</code> function with <code>levenshtein</code>? I first put it in a <code>where</code> clause following the line beginning with <code>in execState...</code>. However, I found that neither <code>size</code> nor <code>coordinates</code> were accessible within this function, as they're defined in the original <code>let</code> statement of <code>levenshtein</code>.</p>\n\n<p>Also feel free to comment on any other ideas I've tried here.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 2, "creation_date": 1527581392, "post_id": 50571571, "comment_id": 88167903, "body": "You are indeed using non-exhaustive patterns in your functions. Turn on warnings (strongly recommended!), and GHC will tell you which functions need to be defined in more cases. Basically, it will point out that you consider the case <code>(_:_)</code> (non empty list) but you forgot the case <code>[]</code> (empty list)."}, {"owner": {"reputation": 305, "user_id": 8277139, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LcvQm.jpg?s=128&g=1", "display_name": "Zaphiel", "link": "https://stackoverflow.com/users/8277139/zaphiel"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1527591462, "post_id": 50571571, "comment_id": 88174267, "body": "Oh, I just opened warnings and It&#39;s too helpful. Thank you!"}], "answers": [{"tags": [], "owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "is_accepted": true, "score": 3, "last_activity_date": 1527532152, "creation_date": 1527532152, "answer_id": 50571843, "question_id": 50571571, "link": "https://stackoverflow.com/questions/50571571/haskell-error-when-handling-the-lists-out-of-range-on-custom-atindex-function/50571843#50571843", "title": "Haskell - Error when handling the list&#39;s out of range on custom atIndex function", "body": "<p>Let's see what this expands to. </p>\n\n<pre><code>atIndex [5, 10, 15, 20, 25] 7\natIndexAcc [5, 10, 15, 20, 25] 7 0 (lengthOf [5, 10, 15, 20, 25])\n-- counter is strictly evaluated for both index and arr_size checks\n-- arr_size is evaluated to perform counter &gt; arr_size check\natIndexAcc [5, 10, 15, 20, 25] 7 0 5\natIndexAcc [10, 15, 20, 25] 7 1 5\natIndexAcc [15, 20, 25] 7 2 5\natIndexAcc [20, 25] 7 3 5\natIndexAcc [25] 7 4 5\natIndexAcc [] 7 5 5\n</code></pre>\n\n<p>And that's when it stops - because <code>[]</code> doesn't match <code>(h:t)</code>, you get non-exhaustive patterns. You need a version of <code>atIndexAcc</code> that can accept the empty list. Note that you compared <code>counter &gt; arr_size</code>, which also cannot happen because you're traversing the list as you count up; they're equal only when the list is exhausted. </p>\n\n<p>Also, taking the length of the list means traversing the entire list; this isn't necessary to index it, and will force the whole list to exist in memory. That doesn't work with infinite lists, which are possible due to Haskell's lazy evaluation. </p>\n"}], "owner": {"reputation": 305, "user_id": 8277139, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/LcvQm.jpg?s=128&g=1", "display_name": "Zaphiel", "link": "https://stackoverflow.com/users/8277139/zaphiel"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 111, "favorite_count": 0, "accepted_answer_id": 50571843, "answer_count": 1, "score": 0, "last_activity_date": 1527532152, "creation_date": 1527530676, "question_id": 50571571, "link": "https://stackoverflow.com/questions/50571571/haskell-error-when-handling-the-lists-out-of-range-on-custom-atindex-function", "title": "Haskell - Error when handling the list&#39;s out of range on custom atIndex function", "body": "<p>I started Haskell 1 day ago and I was trying to make some examples. I had a problem that I couldn't able to fix.\n<br>\n<br>\nThe problem is my <code>if</code> comparison not working. Program just igrones that stament and keep executing <code>else</code> statement. (Noted on code as comment)\n<br>\nCode:</p>\n\n<pre><code>lengthOf :: Num t =&gt; [t] -&gt; t\nlengthOf []  = 0\nlengthOf arr = lengthOfAcc arr 1\n    where\n        lengthOfAcc :: Num t =&gt; [t] -&gt; t -&gt; t\n        lengthOfAcc (_:t) counter = \n            if null t\n                then counter\n            else\n                lengthOfAcc t (counter + 1)\n\natIndex :: (Ord t, Num t) =&gt; [t] -&gt; t -&gt; t\natIndex [] _      = error \"atIndex: Empty list passed!\"\natIndex arr index =\n    if index &lt; 0\n        then error \"atIndex: Index cannot be smaller than 0!\"\n    else\n        atIndexAcc arr index 0 (lengthOf arr)\n\n    where\n        atIndexAcc :: (Ord t, Eq t, Num t) =&gt; [t] -&gt; t -&gt; t -&gt; t -&gt; t\n        atIndexAcc (h:t) index counter arr_size = \n            if counter == index\n                then h\n            else\n                if counter &gt; arr_size -- This is not working. I don't know why.\n                    then error \"atIndexAcc: Out of array range!\"\n                else\n                    atIndexAcc t index (counter + 1) arr_size\n</code></pre>\n\n<p><br>\nConsole Output:</p>\n\n<pre><code>*EB_Functions&gt; lengthOf [5, 10, 15, 20, 25]\n5\n*EB_Functions&gt; atIndex [5, 10, 15, 20, 25] 1\n10\n*EB_Functions&gt; atIndex [5, 10, 15, 20, 25] 3\n20\n*EB_Functions&gt; atIndex [5, 10, 15, 20, 25] 7\n*** Exception: EB_Quick_F.hs:(71,9)-(78,61): Non-exhaustive patterns in function atIndexAcc\n</code></pre>\n\n<p>As you can see. What should I do for able to execute that line when <code>counter</code> exceeds\nthe <code>arr_size</code>. Thanks for any help!</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 3, "creation_date": 1527525650, "post_id": 50570296, "comment_id": 88150745, "body": "Some helpful functions: <a href=\"https://www.haskell.org/hoogle/?hoogle=words\" rel=\"nofollow noreferrer\"><code>words</code></a>, <a href=\"https://www.haskell.org/hoogle/?hoogle=unwords\" rel=\"nofollow noreferrer\"><code>unwords</code></a>, <a href=\"https://www.haskell.org/hoogle/?hoogle=map\" rel=\"nofollow noreferrer\"><code>map</code></a>."}], "answers": [{"tags": [], "owner": {"reputation": 8857, "user_id": 3414900, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/KlvbC.jpg?s=128&g=1", "display_name": "bartop", "link": "https://stackoverflow.com/users/3414900/bartop"}, "is_accepted": false, "score": 2, "last_activity_date": 1527615429, "last_edit_date": 1527615429, "creation_date": 1527535007, "answer_id": 50572377, "question_id": 50570296, "link": "https://stackoverflow.com/questions/50570296/how-can-i-read-a-sentence-separate-the-words-and-apply-my-function-to-each-word/50572377#50572377", "title": "How can I read a sentence, separate the words and apply my function to each word? Haskell", "body": "<p>That should go like this:</p>\n\n<pre><code>doStuffOnSentence sentence = mapM aleatorio (words sentence)\n</code></pre>\n\n<p>Whenever You are dealing with monads (especially IO) <code>mapM</code> is real lifesaver.</p>\n\n<p>What's more, if You want to concatenate the final result You can add:</p>\n\n<pre><code>concatIoStrings = liftM unwords\ndoStuffAndConcat = concatIoStrings . doStuffOnSentence\n</code></pre>\n"}], "owner": {"reputation": 5, "user_id": 8432568, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-l8twcEiKtbs/AAAAAAAAAAI/AAAAAAAAATE/D2mVn1cBYwI/photo.jpg?sz=128", "display_name": "Alan Rodriguez", "link": "https://stackoverflow.com/users/8432568/alan-rodriguez"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 80, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1527615429, "creation_date": 1527524516, "last_edit_date": 1527544667, "question_id": 50570296, "link": "https://stackoverflow.com/questions/50570296/how-can-i-read-a-sentence-separate-the-words-and-apply-my-function-to-each-word", "title": "How can I read a sentence, separate the words and apply my function to each word? Haskell", "body": "<p>I have a function that reads a word, separates the first and the last letter and the remaining content mixes it and at the end writes the first and last letter of the word but with the mixed content.</p>\n\n<p>Example:\n Hello -> H lle o</p>\n\n<p>But I want you to be able to read a phrase and do the same in each word of the sentence. What I can do?</p>\n\n<pre><code>import Data.List\nimport System.IO \nimport System.Random\nimport System.IO.Unsafe\nimport Data.Array.IO\nimport Control.Monad\nimport Data.Array\n\noracion = do \n frase &lt;- getLine\n let pL = head frase\n let contentR = devContent frase\n charDisorder &lt;- aleatorio contentR\n let uL = last frase\n putStrLn $ [pL] ++ charDisorder ++ [uL]\n\naleatorio :: [d] -&gt; IO [d]\naleatorio xs = do\n        ar &lt;- newArray n xs\n        forM [1..n] $ \\i -&gt; do\n            t &lt;- randomRIO (i,n)\n            vi &lt;- readArray ar i\n            vt &lt;- readArray ar t\n            writeArray ar t vi\n            return vt\n  where\n    n = length xs\n    newArray :: Int -&gt; [d] -&gt; IO (IOArray Int d)\n    newArray n xs =  newListArray (1,n) xs\n\ndevContent :: [Char] -&gt; [Char]\ndevContent x = init (drop 1 x)\n</code></pre>\n"}, {"tags": ["c++", "haskell", "linker", "ghc", "ffi"], "comments": [{"owner": {"reputation": 94553, "user_id": 775806, "user_type": "registered", "accept_rate": 96, "profile_image": "https://i.stack.imgur.com/XNd2C.png?s=128&g=1", "display_name": "n. &#39;pronouns&#39; m.", "link": "https://stackoverflow.com/users/775806/n-pronouns-m"}, "edited": false, "score": 1, "creation_date": 1527522711, "post_id": 50569661, "comment_id": 88149560, "body": "You probably need to link to at least <code>base</code> , i.e. <code>-L &quot;$ghc_libdir&#47;base-x.y.z.t&quot; &quot;-lHSrts-base-x.y.z.t$ghc_version&quot;</code> where <code>x.y.z.t</code> is your base version."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 1, "creation_date": 1529489262, "post_id": 50569661, "comment_id": 88888551, "body": "You could also try using <code>ghc</code> as the linker and including necessary c++ stuff rather than the other way around."}, {"owner": {"reputation": 13626, "user_id": 492865, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c69a2080e68c8606961a18aba3a08ec?s=128&d=identicon&r=PG", "display_name": "Yuras", "link": "https://stackoverflow.com/users/492865/yuras"}, "edited": false, "score": 0, "creation_date": 1529500034, "post_id": 50569661, "comment_id": 88895497, "body": "I can&#39;t reproduce it with ghc-8.2.1 and gcc-7.3.0. Please run <code>ldd .&#47;test</code> instead of <code>.&#47;test</code> as the last step of the build script and post the output."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 13626, "user_id": 492865, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c69a2080e68c8606961a18aba3a08ec?s=128&d=identicon&r=PG", "display_name": "Yuras", "link": "https://stackoverflow.com/users/492865/yuras"}, "edited": false, "score": 0, "creation_date": 1529500595, "post_id": 50569661, "comment_id": 88895866, "body": "@Yuras I added the <code>ldd</code> info to the question."}, {"owner": {"reputation": 13626, "user_id": 492865, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c69a2080e68c8606961a18aba3a08ec?s=128&d=identicon&r=PG", "display_name": "Yuras", "link": "https://stackoverflow.com/users/492865/yuras"}, "edited": false, "score": 0, "creation_date": 1529506478, "post_id": 50569661, "comment_id": 88899991, "body": "@leftaroundabout what if you add <code>-Wl,--no-as-needed</code> as the first argument when linking the executable? E.g. <code>g++ -Wl,--no-as-needed test.o &quot;$hs_obj&quot; &lt;...&gt;</code>"}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "reply_to_user": {"reputation": 13626, "user_id": 492865, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c69a2080e68c8606961a18aba3a08ec?s=128&d=identicon&r=PG", "display_name": "Yuras", "link": "https://stackoverflow.com/users/492865/yuras"}, "edited": false, "score": 0, "creation_date": 1529507159, "post_id": 50569661, "comment_id": 88900487, "body": "@Yuras yup, then it links successfully even when <code>foo</code> isn&#39;t invoked. (And gives the same <code>ldd</code> output.) But it seems quite one kludge..."}], "answers": [{"comments": [{"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1529508321, "post_id": 50951727, "comment_id": 88901233, "body": "Ok, I guess I&#39;ll have to do that then. Could you add some explanation for why this would be necessary?"}, {"owner": {"reputation": 13626, "user_id": 492865, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c69a2080e68c8606961a18aba3a08ec?s=128&d=identicon&r=PG", "display_name": "Yuras", "link": "https://stackoverflow.com/users/492865/yuras"}, "reply_to_user": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 0, "creation_date": 1529509468, "post_id": 50951727, "comment_id": 88901972, "body": "@leftaroundabout I don&#39;t know all the details, it is better to ask GHC devs. I added basic explanatioin, but don&#39;t rely on it, it could be a complite misunderstanding on my side."}], "tags": [], "owner": {"reputation": 13626, "user_id": 492865, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c69a2080e68c8606961a18aba3a08ec?s=128&d=identicon&r=PG", "display_name": "Yuras", "link": "https://stackoverflow.com/users/492865/yuras"}, "is_accepted": true, "score": 2, "last_activity_date": 1529509294, "last_edit_date": 1529509294, "creation_date": 1529508034, "answer_id": 50951727, "question_id": 50569661, "link": "https://stackoverflow.com/questions/50569661/how-to-properly-link-object-files-written-in-haskell/50951727#50951727", "title": "How to properly link object files written in Haskell?", "body": "<p>Usually <code>ghc</code> links executables with <code>-Wl,--no-as-needed</code> option, and you should use it too. (You can check how <code>ghc</code> links executable e.g. using <code>cabal build --ghc-options=-v3</code>.)</p>\n\n<p>You can find more details <a href=\"https://ghc.haskell.org/trac/ghc/ticket/10110\" rel=\"nofollow noreferrer\">here</a>. My understanding it the next: <code>foo.so</code> requires <code>libHSbase-4.10.0.0-ghc8.2.1.so</code> to be loaded at runtime as needed, i.e. when we need symbol from it (check <code>readelf -a dist/build/foo.so/foo.so | grep NEEDED</code>). So if you don't call <code>foo</code>, then <code>base.so</code> is not loaded. But ghc needs all libraries to be loaded (I don't know why). The <code>--no-as-needed</code> option forces all libraries to be loaded.</p>\n\n<p>Note that <code>--no-as-needed</code> options is position-dependent, so put it before the shared library.</p>\n"}, {"tags": [], "owner": {"reputation": 26689, "user_id": 5769463, "user_type": "registered", "accept_rate": 93, "profile_image": "https://www.gravatar.com/avatar/71a28b5fac23ee656a32cc7ea6df54ec?s=128&d=identicon&r=PG&f=1", "display_name": "ead", "link": "https://stackoverflow.com/users/5769463/ead"}, "is_accepted": false, "score": 2, "last_activity_date": 1529982539, "last_edit_date": 1529982539, "creation_date": 1529764375, "answer_id": 51002159, "question_id": 50569661, "link": "https://stackoverflow.com/questions/50569661/how-to-properly-link-object-files-written-in-haskell/51002159#51002159", "title": "How to properly link object files written in Haskell?", "body": "<p>This answer explains what happens during the linkage, why the solution with <code>-Wl,--no-as-needed</code> works and what should be done instead to have a somewhat more robust approach.</p>\n\n<p>In a nutshell: <code>-lHSrts-ghcXXX.so</code> depends on <code>libHSbaseXXX.so</code>, <code>libHSinteger-gmpXXX.so</code> and <code>libHSghc-primXXX.so</code> which must be provided to the linker during the linkage.</p>\n\n<p>The here proposed solution depends on a lot of manual work and is not very scalable. However I don't know enough about <code>cabal</code> to tell you how to automatize this,  but I hope you can make the last step. </p>\n\n<p>Or maybe you will be just fine with using the <code>-Wl,--no-as-needed</code>-solution, because you know what happens behind the scenes.</p>\n\n<hr>\n\n<p>Let's start by stepping through the linking process for the version without calling <code>foo</code>, in a somewhat simplified manner (<a href=\"https://eli.thegreenplace.net/2013/07/09/library-order-in-static-linking\" rel=\"nofollow noreferrer\">here</a> is a great article from Eli Bendersky, even if it is about static linkage): </p>\n\n<ol>\n<li><p>The linker maintains a table of symbols and has to find definitions/machine-code for all of them. Let's simplify and assume, that at the beginning it has only symbol <code>main</code> in the table and the definition of this symbol is unknown.</p></li>\n<li><p>The definition of symbol <code>main</code> is found it the object-file <code>test.o</code>. However, the function <code>main</code> uses functions <code>hs_init</code> and <code>hs_exit</code>. Thus we found the definition of <code>main</code>, but it doesn't work unless we know the definitions of <code>hs_init</code> and <code>hs_exit</code>. So now we have to look for their definitions.</p></li>\n<li><p>In the next step the linker looks at <code>foo.so</code>, but <code>foo.so</code> doesn't define any symbol we are interested in (<code>foo</code> is not used!) and the linker just skips <code>foo.so</code> and will never look back.</p></li>\n<li><p>The linker looks at <code>-lHSrts-ghcXXX.so</code>. There it finds the definitions of <code>hs_init</code> and <code>hs_exit</code>. Thus, the whole content of the shared library is used, but it needs definitions of such symbols as for example <code>base_GHCziTopHandler_flushStdHandles_closure</code>. That means the linker starts to look for definitions of these symbols.</p></li>\n<li><p>There are however no more libraries at the command line, thus the linker has nothing to look at and the linkage fails/is not successful, because definitions of some symbols are missing.</p></li>\n</ol>\n\n<p>What is different for the case where <code>foo</code> is used? After the 2. step not only <code>hs_init</code> and <code>hs_exit</code> are wanted but also <code>foo</code>, which is found in <code>foo.so</code>. So <code>foo.so</code> must be included.</p>\n\n<p>Due to the way the library <code>foo.so</code> was build, there is the following information contained:</p>\n\n<pre><code>&gt;&gt;&gt; readelf -d dist/build/foo.so/foo.so | grep NEEDED\n 0x0000000000000001 (NEEDED)             Shared library: [libHSrts-ghc7.10.3.so]\n 0x0000000000000001 (NEEDED)             Shared library: [libHSbase-4.8.2.0-HQfYBxpPvuw8OunzQu6JGM-ghc7.10.3.so]\n 0x0000000000000001 (NEEDED)             Shared library: [libHSinteger-gmp-1.0.0.0-2aU3IZNMF9a7mQ0OzsZ0dS-ghc7.10.3.so]\n 0x0000000000000001 (NEEDED)             Shared library: [libHSghc-prim-0.4.0.0-8TmvWUcS1U1IKHT0levwg3-ghc7.10.3.so]\n 0x0000000000000001 (NEEDED)             Shared library: [libgmp.so.10]\n 0x0000000000000001 (NEEDED)             Shared library: [libc.so.6]\n\n&gt;&gt;&gt; readelf -d dist/build/foo.so/foo.so | grep RPATH\n 0x000000000000000f (RPATH)              Library rpath: [\n          /usr/lib/ghc/base_HQfYBxpPvuw8OunzQu6JGM:\n          /usr/lib/ghc/rts:\n          /usr/lib/ghc/ghcpr_8TmvWUcS1U1IKHT0levwg3:\n          /usr/lib/ghc/integ_2aU3IZNMF9a7mQ0OzsZ0dS]\n</code></pre>\n\n<p>From this information, the linker knows which shared libraries are needed (<code>NEEDED</code>-flag) and where they can be found on your system (<code>RPATH</code>). These libraries are found/opened/processed (i.e. marked as needed) and thus all necessary definitions are present.</p>\n\n<p>You can follow the whole process by adding </p>\n\n<pre><code>g++ ...\n    -Wl,--trace-symbol=base_GHCziTopHandler_flushStdHandles_closure \\\n    -Wl,--verbose \\\n    -o test\n</code></pre>\n\n<p>to the linkage-step.</p>\n\n<p>The same thing happens if we enforce that the <code>foo.so</code> is included into the resulting executable via <code>-Wl,--no-as-needed</code> as suggested by @Yuras.</p>\n\n<p>What is the consequence of this analysis? </p>\n\n<p>We should provide the needed libraries on the command line (after <code>-lHSrts-ghcXXX.so</code>) and not depend on them being added per chance through other shared-libraries. Obviously, the somewhat cryptic names are only valid for my installation:</p>\n\n<pre><code>g++ ...\n   -L/usr/lib/ghc/base_HQfYBxpPvuw8OunzQu6JGM  -lHSbase-4.8.2.0-HQfYBxpPvuw8OunzQu6JGM-ghc7.10.3 \\\n   -L/usr/lib/ghc/integ_2aU3IZNMF9a7mQ0OzsZ0dS -lHSinteger-gmp-1.0.0.0-2aU3IZNMF9a7mQ0OzsZ0dS-ghc7.10.3 \\\n   -L/usr/lib/ghc/ghcpr_8TmvWUcS1U1IKHT0levwg3 -lHSghc-prim-0.4.0.0-8TmvWUcS1U1IKHT0levwg3-ghc7.10.3 \\\n   ...\n   -o test\n</code></pre>\n\n<p>Now it builds, but doesn't load at the run time (after all the right <code>rpath</code> is only set in <code>foo.so</code> but <code>foo.so</code> isn't used). To fix it we could either extend the <code>LD_LIBRARY_PATH</code> or add <code>-rpath</code> the link-command-line:</p>\n\n<pre><code>g++ ...\n   -L...  -lHSbase-...  -Wl,-rpath,/usr/lib/ghc/base_HQfYBxpPvuw8OunzQu6JGM  \\\n   -L... -lHSinteger-gmp-... -Wl,-rpath,/usr/lib/ghc/integ_2aU3IZNMF9a7mQ0OzsZ0dS \\\n   -L... -lHSghc-prim-...  -Wl,-rpath,/usr/lib/ghc/ghcpr_8TmvWUcS1U1IKHT0levwg3 \\\n   ...\n   -o test\n</code></pre>\n\n<p>There must be an utility to get the paths and library-names automatically (cabal seems to do it when building <code>foo.so</code>), but I don't know how to do because I have no experience with haskell/cabal.</p>\n"}], "owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1071, "favorite_count": 4, "accepted_answer_id": 50951727, "answer_count": 2, "score": 21, "last_activity_date": 1529982539, "creation_date": 1527521776, "last_edit_date": 1529500520, "question_id": 50569661, "link": "https://stackoverflow.com/questions/50569661/how-to-properly-link-object-files-written-in-haskell", "title": "How to properly link object files written in Haskell?", "body": "<p>Roughly following <a href=\"https://idontgetoutmuch.wordpress.com/2017/01/14/calling-haskell-from-c/\" rel=\"noreferrer\">this tutorial</a>, I managed to get this toy project working. It calls a Haskell function from a C++ program.</p>\n\n<ul>\n<li><p><code>Foo.hs</code>\n</p>\n\n<pre><code>{-# LANGUAGE ForeignFunctionInterface #-}\n\nmodule Foo where\n\nforeign export ccall foo :: Int -&gt; Int -&gt; IO Int\n\nfoo :: Int -&gt; Int -&gt; IO Int\nfoo n m = return . sum $ f n ++ f m\n\nf :: Int -&gt; [Int]\nf 0 = []\nf n = n : f (n-1)\n</code></pre></li>\n<li><p><code>bar.c++</code>\n</p>\n\n<pre><code>#include \"HsFFI.h\"\n#include FOO       // Haskell module (path defined in build script)\n\n#include &lt;iostream&gt;\n\nint main(int argc, char *argv[]) {\n  hs_init(&amp;argc, &amp;argv);\n\n  std::cout &lt;&lt; foo(37, 19) &lt;&lt; \"\\n\";\n\n  hs_exit();\n  return 0;\n}\n</code></pre></li>\n<li><p><code>call-haskell-from-cxx.cabal</code>\n</p>\n\n<pre><code>name:                call-haskell-from-cxx\nversion:             0.1.0.0\nbuild-type:          Simple\ncabal-version:       &gt;=1.10\n\nexecutable foo.so\n  main-is:          Foo.hs   \n  build-depends:       base &gt;=4.10 &amp;&amp; &lt;4.11\n  ghc-options:         -shared -fPIC -dynamic\n  extra-libraries:     HSrts-ghc8.2.1\n  default-language:    Haskell2010\n</code></pre></li>\n<li><p>build script\n</p>\n\n<pre><code>#!/bin/bash\n\nhs_lib=\"foo.so\"\nhs_obj=\"dist/build/$hs_lib/$hs_lib\"\n\nghc_version=\"8.2.1\"                          # May need to be tweaked,\nghc_libdir=\"/usr/local/lib/ghc-$ghc_version\" # depending on system setup.\n\nset -x\n\ncabal build\n\ng++ -I \"$ghc_libdir/include\" -D\"FOO=\\\"${hs_obj}-tmp/Foo_stub.h\\\"\" -c bar.c++ -o test.o\ng++ test.o \"$hs_obj\" \\\n   -L \"$ghc_libdir/rts\" \"-lHSrts-ghc$ghc_version\" \\\n   -o test\n\nenv LD_LIBRARY_PATH=\"dist/build/$hs_lib:$ghc_libdir/rts:$LD_LIBRARY_PATH\" \\\n  ./test\n</code></pre></li>\n</ul>\n\n<p>This works (Ubuntu 16.04, GCC 5.4.0), printing <code>893</code> \u2013 but it isn't really robust, namely, if I <em>remove</em> the actual invocation of the Haskell function, i.e. the <code>std::cout &lt;&lt; foo(37, 19) &lt;&lt; \"\\n\";</code> line, then it fails at the linking step, with the error message</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>/usr/local/lib/ghc-8.2.1/rts/libHSrts-ghc8.2.1.so: undefined reference to `base_GHCziTopHandler_flushStdHandles_closure'\n/usr/local/lib/ghc-8.2.1/rts/libHSrts-ghc8.2.1.so: undefined reference to `base_GHCziStable_StablePtr_con_info'\n/usr/local/lib/ghc-8.2.1/rts/libHSrts-ghc8.2.1.so: undefined reference to `base_GHCziPtr_FunPtr_con_info'\n/usr/local/lib/ghc-8.2.1/rts/libHSrts-ghc8.2.1.so: undefined reference to `base_GHCziWord_W8zh_con_info'\n/usr/local/lib/ghc-8.2.1/rts/libHSrts-ghc8.2.1.so: undefined reference to `base_GHCziIOziException_cannotCompactPinned_closure'\n...\n</code></pre>\n\n<p>Apparently, the inclusion of the Haskell project pulls additional library files in that are needed. How do I explicitly depend on everything necessary, to avoid such brittleness?</p>\n\n<hr>\n\n<p>Output of the build script when the <code>foo</code> call is included, with <code>ldd</code> on the final executable:</p>\n\n<pre><code>++ cabal build\nPreprocessing executable 'foo.so' for call-haskell-from-C-0.1.0.0..\nBuilding executable 'foo.so' for call-haskell-from-C-0.1.0.0..\nLinking a.out ...\nLinking dist/build/foo.so/foo.so ...\n++ g++ -I /usr/local/lib/ghc-8.2.1/include '-DFOO=\"dist/build/foo.so/foo.so-tmp/Foo_stub.h\"' -c bar.c++ -o test.o\n++ g++ test.o dist/build/foo.so/foo.so -L /usr/local/lib/ghc-8.2.1/rts -lHSrts-ghc8.2.1 -o test\n++ env LD_LIBRARY_PATH=dist/build/foo.so:/usr/local/lib/ghc-8.2.1/rts: sh -c 'ldd ./test; ./test'\n    linux-vdso.so.1 =&gt;  (0x00007fff23105000)\n    foo.so =&gt; dist/build/foo.so/foo.so (0x00007fdfc5360000)\n    libHSrts-ghc8.2.1.so =&gt; /usr/local/lib/ghc-8.2.1/rts/libHSrts-ghc8.2.1.so (0x00007fdfc52f8000)\n    libstdc++.so.6 =&gt; /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007fdfc4dbe000)\n    libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007fdfc49f4000)\n    libHSbase-4.10.0.0-ghc8.2.1.so =&gt; /usr/local/lib/ghc-8.2.1/base-4.10.0.0/libHSbase-4.10.0.0-ghc8.2.1.so (0x00007fdfc4020000)\n    libHSinteger-gmp-1.0.1.0-ghc8.2.1.so =&gt; /usr/local/lib/ghc-8.2.1/integer-gmp-1.0.1.0/libHSinteger-gmp-1.0.1.0-ghc8.2.1.so (0x00007fdfc528b000)\n    libHSghc-prim-0.5.1.0-ghc8.2.1.so =&gt; /usr/local/lib/ghc-8.2.1/ghc-prim-0.5.1.0/libHSghc-prim-0.5.1.0-ghc8.2.1.so (0x00007fdfc3b80000)\n    libgmp.so.10 =&gt; /usr/lib/x86_64-linux-gnu/libgmp.so.10 (0x00007fdfc3900000)\n    libffi.so.6 =&gt; /usr/local/lib/ghc-8.2.1/rts/libffi.so.6 (0x00007fdfc36f3000)\n    libm.so.6 =&gt; /lib/x86_64-linux-gnu/libm.so.6 (0x00007fdfc33ea000)\n    librt.so.1 =&gt; /lib/x86_64-linux-gnu/librt.so.1 (0x00007fdfc31e2000)\n    libdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007fdfc2fde000)\n    libpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007fdfc2dc1000)\n    /lib64/ld-linux-x86-64.so.2 (0x00007fdfc5140000)\n    libgcc_s.so.1 =&gt; /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007fdfc2bab000)\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 0, "creation_date": 1527515558, "post_id": 50567526, "comment_id": 88145853, "body": "<code>TypeApplications</code> can dodge some injectivity errors. Maybe try that? Or, you can just use a data family, because <code>FooPayload</code> isn&#39;t very different from <code>PayloadType FooEvent</code> (you may want to shorten the names)."}], "answers": [{"comments": [{"owner": {"reputation": 931, "user_id": 407669, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae4ed4bce709fe4ef67d3ce77b689688?s=128&d=identicon&r=PG", "display_name": "identity", "link": "https://stackoverflow.com/users/407669/identity"}, "edited": false, "score": 0, "creation_date": 1527688377, "post_id": 50571233, "comment_id": 88222504, "body": "Thanks for your detailed answer! I actually managed to whip something up that works with data families, but it&#39;s not optimal as it requires me to carry around a <code>Value</code> and defers their parsing until a plugin actually needs it, which makes it hard to find bugs in the data type definitions/parsing logic.   I tried the singleton approach, except I used the library, but I admit I&#39;m a bit out of my depth here and I&#39;ve run into the issues you can see in my code: <a href=\"https://gist.github.com/b6f30da2b2bad01066ba36920fc5f672\" rel=\"nofollow noreferrer\">gist.github.com/b6f30da2b2bad01066ba36920fc5f672</a>  (continued in another comment)"}, {"owner": {"reputation": 931, "user_id": 407669, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae4ed4bce709fe4ef67d3ce77b689688?s=128&d=identicon&r=PG", "display_name": "identity", "link": "https://stackoverflow.com/users/407669/identity"}, "edited": false, "score": 0, "creation_date": 1527688510, "post_id": 50571233, "comment_id": 88222599, "body": "My code, as you can see, shows a bit of a different picture than what I asked about, as there are actually two parameters in the message that determine the payload.   For certain opcodes, there is no event parameter, and then the opcode determines the payload. For other opcodes, the event parameter is present and is used to determine the payload.   I&#39;m not sure if my issues are because of this additional parameter.   I&#39;ll mark your answer as the solution, as it is essentially exactly what I was looking for."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 931, "user_id": 407669, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae4ed4bce709fe4ef67d3ce77b689688?s=128&d=identicon&r=PG", "display_name": "identity", "link": "https://stackoverflow.com/users/407669/identity"}, "edited": false, "score": 0, "creation_date": 1527692671, "post_id": 50571233, "comment_id": 88225681, "body": "@identity Your <code>RunnablePlugin</code> has both <code>SingI</code>s and <code>Sing</code>s. These will be duplicates. You generally want to stick to using <code>Sing</code> for actual code and wrap it with implicit <code>SingI</code> versions if you want. <code>SomeMessage</code> doesn\u2019t need the <code>SingI</code>s at all, since the <code>Payload</code> already contains that information. If you actually needed them, there\u2019s a function that turns a <code>Sing a</code> into a <code>SingI a</code> somewhere. You\u2019ve also defeated <code>payloadEventType</code>. The purpose is that it can extract the <code>Sing</code> from a <code>Payload</code>, but you cheated and took it from the context. <code>run</code> needs to check opcode equality too."}, {"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "reply_to_user": {"reputation": 931, "user_id": 407669, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae4ed4bce709fe4ef67d3ce77b689688?s=128&d=identicon&r=PG", "display_name": "identity", "link": "https://stackoverflow.com/users/407669/identity"}, "edited": false, "score": 0, "creation_date": 1527692901, "post_id": 50571233, "comment_id": 88225838, "body": "@identity You can post another question if you are really confused. Perhaps you may want to look at some other examples, too."}], "tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": true, "score": 1, "last_activity_date": 1527696825, "last_edit_date": 1527696825, "creation_date": 1527529068, "answer_id": 50571233, "question_id": 50567526, "link": "https://stackoverflow.com/questions/50567526/type-safe-plugins-for-a-data-processing-pipeline/50571233#50571233", "title": "Type safe plugins for a data processing pipeline", "body": "<p>The following is how I would do this. It is substantially different from your existing code, and it's not the only way. I just think doing it this way will make future code easier to write.</p>\n\n<pre><code>data EventType = FooEvent | BarEvent\ndata Payload :: EventType -&gt; * where\n  FooPayload :: { foo :: String } -&gt; Payload FooEvent\n  BarPayload :: { bar :: String } -&gt; Payload BarEvent\n</code></pre>\n\n<p>We have singletons for <code>EventType</code>. If you don't know what these are, it's essentially a hack to emulate dependent types:</p>\n\n<pre><code>-- use a library like singletons to avoid this tedium\n-- singletons will call this Sing\ndata SEventType :: EventType -&gt; * where\n  SFooEvent :: SEventType FooEvent\n  SBarEvent :: SEventType BarEvent\n-- these classes sort of \"factor out\" the need for classes later\n-- the class will be named SingI and its method sing under singletons\nclass KEventType (ev :: EventType) where kEventType :: SEventType ev\ninstance KEventType FooEvent where kEventType = SFooEvent\ninstance KEventType BarEvent where kEventType = SBarEvent\n-- singletons generates these, too\n-- SomeSEventType would be called SomeSing EventType; it's isomorphic to EventType\ndata SomeSEventType = forall ev. SomeSEventType (SEventType ev)\ntoSing :: EventType -&gt; SomeSEventType\ntoSing = _obvious\nfromSing :: SomeSEventType -&gt; EventType\nfromSing = _obvious\n\n-- A Payload ev contains enough information to determine ev\npayloadEventType :: Payload ev -&gt; SEventType ev\npayloadEventType FooPayload {} = SFooEvent\npayloadEventType BarPayload {} = SBarEvent\n</code></pre>\n\n<p>For any <code>EventType</code> <code>ev</code>, we have a corresponding <code>Value -&gt; Parser (Payload ev)</code></p>\n\n<pre><code>parseEventPayload :: forall ev. SEventType ev -&gt;\n                     Value -&gt; Parser (Payload ev)\nparseEventPayload SFooEvent = _\nparseEventPayload SBarEvent = _\n</code></pre>\n\n<p>And we can also make a <code>FromJSON</code>:</p>\n\n<pre><code>-- example of previous comment\n-- this instance can be just the one instance instead of one per EventType\n-- parseEventPayload will get warnings if it doesn't cover everything\n-- and other good things\ninstance KEventType ev =&gt; FromJSON (Payload ev) where\n  parseJSON = parseEventPayload kEventType\n</code></pre>\n\n<p>Now, we define the type of the messages (type and payload) Discord sends you:</p>\n\n<pre><code>data Message = forall ev. Message (Payload ev)\n-- in singletons\n-- newtype Message = Message (Sigma EventType (TyCon Payload))\n</code></pre>\n\n<p>This is a dependent pair: a <code>Message</code> \"contains\" an <code>EventType</code> <code>ev</code> and a <code>Payload ev</code>. The <code>EventType</code> needs no direct runtime representation, because the magic of GADTs means that a <code>Payload ev</code> is enough to determine <code>ev</code>. (<code>singleton</code>'s <code>Sigma</code> will represent <code>ev</code> as an <code>SEventType ev</code>, because it doesn't know better, but I'm writing this out manually and <em>do</em> know better.) Presumably, you get <code>Message</code>s as JSON:</p>\n\n<pre><code>instance FromJSON Message where\n  parseJSON v = f . toSing =&lt;&lt; parseEventType v\n    where parseEventType :: Value -&gt; Parser EventType\n          parseEventType = _\n          -- find the payload inside the bigger value without parsing\n          payload :: Value -&gt; Parser Value\n          payload = _\n          f :: SomeSEventType -&gt; Parser Message\n          f (SomeSEventType ev) = Message &lt;$&gt; (parseEventPayload ev =&lt;&lt; payload v)\n</code></pre>\n\n<p><code>Plugin</code> is unchanged:</p>\n\n<pre><code>data Plugin event s = Plugin\n  { initializePlugin :: IO s\n  , runPlugin :: Payload event -&gt; IO ()\n  }\n</code></pre>\n\n<p>But <code>RunnablePlugin</code> must remember the event type:</p>\n\n<pre><code>data RunnablePlugin = forall ev s. RunnablePlugin (SEventType ev) (Plugin ev s)\n</code></pre>\n\n<p>And you can take the first argument implicitly</p>\n\n<pre><code>runnablePlugin :: KEventType ev =&gt;\n                  Plugin ev s -&gt; RunnablePlugin\nrunnablePlugin = RunnablePlugin kEventType\n</code></pre>\n\n<p>Now, your <code>run</code> doesn't seem quite right. Presumably, what happens is that Discord sends you some JSON with an event type and a payload. You deserialize that into a <code>Message</code> (which deserializes both the type and payload). You shouldn't be passing <code>Value</code>s around after this point, because that's just inefficient. There are four possible variants of <code>run</code>. You can either take a typed <code>Payload</code> or an existential <code>Message</code>, and you can take a <code>Plugin</code> or a <code>RunnablePlugin</code>. <code>runPlugin</code> fills the \"all known types niche\", so this <code>run</code> will be all existential. First, we need equality on the singletons:</p>\n\n<pre><code>-- singletons generates this under the name (%~) if EventType derives Eq\nsEventTypeEq :: SEventType l -&gt; SEventType r -&gt;\n                Maybe (l :~: r)\nsEventTypeEq SFooEvent SFooEvent = Just Refl\nsEventTypeEq SBarEvent SBarEvent = Just Refl\nsEventTypeEq _ _ = Nothing\n</code></pre>\n\n<p>Then</p>\n\n<pre><code>run :: Message -&gt; RunnablePlugin -&gt; IO ()\nrun (Message py) (RunnablePlugin pge pg) = case sEventTypeEq (payloadEventType py) pge of\n  Just Refl -&gt; runPlugin pg py\n  Nothing -&gt; return ()\n</code></pre>\n\n<p><code>runPlugins</code> is the simplest bit</p>\n\n<pre><code>runPlugins :: Message -&gt; [RunnablePlugin] -&gt; IO ()\nrunPlugins = traverse_ . run\n</code></pre>\n"}], "owner": {"reputation": 931, "user_id": 407669, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ae4ed4bce709fe4ef67d3ce77b689688?s=128&d=identicon&r=PG", "display_name": "identity", "link": "https://stackoverflow.com/users/407669/identity"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 88, "favorite_count": 0, "accepted_answer_id": 50571233, "answer_count": 1, "score": 2, "last_activity_date": 1527696825, "creation_date": 1527513832, "question_id": 50567526, "link": "https://stackoverflow.com/questions/50567526/type-safe-plugins-for-a-data-processing-pipeline", "title": "Type safe plugins for a data processing pipeline", "body": "<p>I am writing a Haskell library for writing Discord bots, and I would very much like to be able to let the users of my library write type-safe plugins. </p>\n\n<p>Discord sends me messages which roughly look like follows:</p>\n\n<pre><code>data EventType\n    = FooEvent\n    | BarEvent\n    deriving (Eq, Show)\n\ndata Payload\n    = Payload\n    { eventType :: EventType\n    , payload :: Maybe Value\n    }\n</code></pre>\n\n<p>The <code>eventType</code> parameter uniquely determines what JSON object gets sent in the <code>payload</code> parameter, and for certain <code>EventType</code>s it's also possible that there is no payload at all.</p>\n\n<p>What I'm interested in accomplishing is for the users of the library to declare on the type level which kind of event they wish to process, and then using the type system to demand a function which has the appropriate type. I would then like to be able to take all of these plugins, regardless of their types, and treat them as homogenous entities and essentially just take whatever messages I'm currently processing, running it through a list of all the plugins in the system and each plugin will attempt to convert the <code>payload</code> JSON value into the appropriate type, and run its code if the conversion succeeds.</p>\n\n<p>For sake of example, we can use the following payload types:</p>\n\n<pre><code>data FooPayload = FooPayload {foo :: String}\n    deriving (Read, Eq, Show,  Generic)\ninstance ToJSON FooPayload\ninstance FromJSON FooPayload\n\ndata BarPayload = BarPayload {bar :: String}\n    deriving (Read, Eq, Show,  Generic)\ninstance ToJSON BarPayload\ninstance FromJSON BarPayload\n</code></pre>\n\n<p>What I have done so far is to create a type class with an associated type: </p>\n\n<pre><code>class FromJSON (PayloadType ev) =&gt; Convertible (ev :: EventType) where\n    type PayloadType ev :: *\n    convert :: Value -&gt; Maybe (PayloadType ev)\n    convert = parseMaybe parseJSON\n\n    -- run :: Proxy (PayloadType ev) -&gt; Plugin ev s -&gt; Value -&gt; IO ()\n    run :: Plugin ev s -&gt; Value -&gt; IO ()\n    run p v = undefined\n        -- case convert v of\n        --     Just v' -&gt; runPlugin p v' -- doesn't typecheck because of non-injectivity of type families\n        --     Nothing -&gt; return ()\n</code></pre>\n\n<p>And the accompanying instances</p>\n\n<pre><code>instance Convertible 'FooEvent where\n    type PayloadType 'FooEvent = FooPayload\n\ninstance Convertible 'BarEvent where\n    type PayloadType 'BarEvent = BarPayload\n</code></pre>\n\n<p>Along with the following types: </p>\n\n<pre><code>data Plugin (ev :: EventType) s\n    = Convertible ev =&gt; Plugin\n    { initializePlugin :: IO s\n    , runPlugin :: PayloadType ev -&gt; IO ()\n    }\n\n\nnewtype RunnablePlugin = RunnablePlugin (Hide Plugin)\ndata Hide f = forall (ev :: EventType) s. Convertible ev =&gt; Hide (f ev s)\n</code></pre>\n\n<p>I can then define a couple of plugins and actually treat them the same:</p>\n\n<pre><code>fooPlugin :: Plugin 'FooEvent ()\nfooPlugin =\n    Plugin\n    { initializePlugin = return ()\n    , runPlugin = \\_ -&gt; putStrLn \"This is a foo plugin\"\n    }\n\nbarPlugin :: Plugin 'BarEvent ()\nbarPlugin =\n    Plugin\n    { initializePlugin = return ()\n    , runPlugin = \\_ -&gt; putStrLn \"This is a bar plugin\"\n    }\n\nplugins :: [RunnablePlugin]\nplugins =\n    [ RunnablePlugin $ Hide fooPlugin\n    , RunnablePlugin $ Hide barPlugin\n    ]\n</code></pre>\n\n<p>I would then ideally be able to do the following</p>\n\n<pre><code>runPlugins :: Value -&gt; [RunnablePlugin] -&gt; IO ()\nrunPlugins val plugs = do\n    forM_ plugs $ \\(RunnablePlugin (Hide p)) -&gt; do\n        run p val\n        return ()\n</code></pre>\n\n<p>So, ideally, running <code>runPlugins  (toJSON (FooPayload \"foo\")) plugins</code> would print <code>This is a foo plugin</code>. </p>\n\n<p>Everything type checks except for the commented definition for <code>run</code> in the type class. </p>\n\n<p>I think I mostly understand what the issue is -- I'm kind of dropping type information in order to treat the things as the same, and recovering that type information isn't possible with what I have. That is my intuition, anyway, but I'm not very comfortable with this kind of \"type wrangling\". </p>\n\n<p>Is what I'm trying to accomplish possible with what we have in GHC/Haskell, or is this something I need dependent types for? </p>\n\n<p>The code in its entirety can be found <a href=\"https://gist.github.com/cd9ef58f99f116ba77643eee7acc2158\" rel=\"nofollow noreferrer\">here</a>.</p>\n"}, {"tags": ["haskell", "zip"], "comments": [{"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 1, "creation_date": 1527504222, "post_id": 50563636, "comment_id": 88139210, "body": "Looks like you&#39;re on an old version of the <code>zip</code> package. I think this code should work without modification on the current version"}, {"owner": {"reputation": 150, "user_id": 4332396, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-Wmb8KUa2u2w/AAAAAAAAAAI/AAAAAAAAABg/FZ_8UTBWPtM/photo.jpg?sz=128", "display_name": "Itachinome", "link": "https://stackoverflow.com/users/4332396/itachinome"}, "reply_to_user": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1527537031, "post_id": 50563636, "comment_id": 88154976, "body": "Ahh you&#39;re right! Thank you very much! @BenjaminHodgson"}, {"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1527537071, "post_id": 50563636, "comment_id": 88154994, "body": "Happy to help \ud83d\ude09"}], "owner": {"reputation": 150, "user_id": 4332396, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-Wmb8KUa2u2w/AAAAAAAAAAI/AAAAAAAAABg/FZ_8UTBWPtM/photo.jpg?sz=128", "display_name": "Itachinome", "link": "https://stackoverflow.com/users/4332396/itachinome"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 45, "favorite_count": 0, "answer_count": 0, "score": 1, "last_activity_date": 1527502011, "creation_date": 1527501272, "last_edit_date": 1527502011, "question_id": 50563636, "link": "https://stackoverflow.com/questions/50563636/can-someone-show-me-an-example-using-packdirrecur-from-codec-archive-zip", "title": "Can someone show me an example using packDirRecur from Codec.Archive.Zip", "body": "<pre><code>main :: IO ()\nmain = do\n    createArchive (Path \"outPath.zip\") (packDirRecur Store mkEntrySelector   (Path \"/home/Documents/test\"))\n</code></pre>\n\n<p>With this code get the following error:</p>\n\n<pre><code>src/Main.hs:39:60:\nCouldn't match type \u2018Path.Abs\u2019 with \u2018Path.Rel\u2019\nExpected type: Path Path.Abs Path.File -&gt; ZipArchive EntrySelector\n  Actual type: Path Path.Rel Path.File -&gt; ZipArchive EntrySelector\nIn the second argument of \u2018packDirRecur\u2019, namely \u2018mkEntrySelector\u2019\nIn the second argument of \u2018createArchive\u2019, namely\n  \u2018(packDirRecur\n      Store mkEntrySelector (Path \"/home/Documents/test\"))\u2019\n</code></pre>\n\n<p>How do I get mkEntrySelector to generate an Absolute path?</p>\n"}, {"tags": ["parsing", "haskell", "compilation"], "comments": [{"owner": {"reputation": 558, "user_id": 1457136, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8e1f8148bbb8ea15c4b7c02893c99cab?s=128&d=identicon&r=PG", "display_name": "Jean-Baptiste Potonnier", "link": "https://stackoverflow.com/users/1457136/jean-baptiste-potonnier"}, "edited": false, "score": 4, "creation_date": 1527498729, "post_id": 50562146, "comment_id": 88136044, "body": "You might be interested in <a href=\"https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours\" rel=\"nofollow noreferrer\">en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours</a> there is a chapter on parsing"}], "answers": [{"tags": [], "owner": {"reputation": 32098, "user_id": 124319, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/lVhrR.jpg?s=128&g=1", "display_name": "coredump", "link": "https://stackoverflow.com/users/124319/coredump"}, "is_accepted": false, "score": 8, "last_activity_date": 1606221969, "last_edit_date": 1606221969, "creation_date": 1527498269, "answer_id": 50562701, "question_id": 50562146, "link": "https://stackoverflow.com/questions/50562146/how-to-write-a-lisp-parser-in-haskell/50562701#50562701", "title": "How to write a lisp parser in Haskell?", "body": "<p><em>The question being homework/exercise, what follows is an explanation that attempts to avoid giving away the solution directly; it does so by being written in Common Lisp (that, and because I don't know Haskell ;-) ).</em></p>\n<p>In Common Lisp there is an intermediate function called <a href=\"http://clhs.lisp.se/Body/f_rd_del.htm\" rel=\"nofollow noreferrer\"><code>READ-DELIMITED-LIST</code></a>, which reads multiple forms as a list until the reader reaches an ending character. When encountering an opening parenthesis, the reader grabs all forms until the closing parenthesis, and then continue parsing from there. The difference is that it works on streams of characters, not on tokens, and that the stream is used for side-effects.</p>\n<h3>Without side-effects</h3>\n<p>In a purely functional approach, like in your code, the parse function needs to return the remaining tokens to be processed, along with the returned AST.\nThis allows you to consume as many tokens as you need during parsing, and allows the caller to continue parsing from where the parser ended.</p>\n<p>In other words, when you close a parenthesis, you have to return <code>xs</code> to the calling context. And so, you carry an accumulator object (the state) along with your code. I heard that monads can help you with the boilerplate.</p>\n<h3>Crash course</h3>\n<ul>\n<li><p><a href=\"http://clhs.lisp.se/Body/m_multip.htm\" rel=\"nofollow noreferrer\"><code>MULTIPLE-VALUE-BIND</code></a> and <a href=\"http://clhs.lisp.se/Body/f_values.htm\" rel=\"nofollow noreferrer\"><code>VALUES</code></a> work together: <code>(values x y)</code> returns multiple values and <code>multiple-value-bind</code> captures multiple values from an expression, and bind each of them to a variable.</p>\n</li>\n<li><p><a href=\"http://clhs.lisp.se/Body/m_destru.htm\" rel=\"nofollow noreferrer\"><code>DESTRUCTURING-BIND</code></a> is the ancestor of pattern matching, and simply destructures a list into components.</p>\n</li>\n<li><p>A non-special form <code>(f x1 .. x2)</code> is function application</p>\n</li>\n<li><p><code>(case test . clauses)</code> is a switch, where each clause is a list starting with a literal value (or a list of such values) and followed by expressions. <code>t</code> and <code>otherwise</code> are special keywords that always match (the default case).</p>\n</li>\n<li><p>The rest should be pretty self-explanatory (ask otherwise).</p>\n</li>\n</ul>\n<p>Notice that I use symbols <code>&lt;</code> and <code>&gt;</code> to represent respectively the <em>opening</em> and <em>closing</em> tokens, to avoid any confusion with Lisp's parentheses. For example, the list <code>(&lt; a b c &lt; d &gt; &gt;)</code> contains 8 tokens, and could be the internal representation of <code>&quot;(a b c (d))&quot;</code>. I could have use <code>left-paren</code> and <code>right-paren</code>, or even complex data-structures, this is just an internal representation. The lexer is not detailed here.</p>\n<h3>Parser</h3>\n<p>The entry point <code>parse</code> function takes a list of tokens and returns the parsed value and the remaining tokens as a secondary value; it depends on <code>parse-until-close</code>, defined below:</p>\n<pre><code>(defun parse (tokens)\n  (when tokens\n    (destructuring-bind (head . tail) tokens\n      (case head\n        (&gt; (error &quot;unmatched closing parenthesis&quot;))\n        (&lt; (parse-until-close tail))\n        (otherwise (values head tail))))))\n</code></pre>\n<p>Then, <code>parse-until-close</code>, a function that recursively parse tokens until it finds a close token; note that <code>tokens</code> is re-bound at different points:</p>\n\n<pre class=\"lang-lisp prettyprint-override\"><code>(defun parse-until-close (tokens)\n  (when tokens\n    (case (first tokens)\n      (&gt; (values nil (rest tokens)))\n      (otherwise\n       ;; first read the element in head of tokens\n       (multiple-value-bind (head tokens) (parse tokens)\n         ;; then recurse to read the remaining items in list\n         (multiple-value-bind (tail tokens) (parse-until-close tokens)\n           (values (cons head tail) tokens)))))))\n</code></pre>\n<p>The above recursively parse tokens and build a list. If our list of tokens starts with <code>&gt;</code>, the close token, we return the empty list as well as the rest of the tokens.</p>\n<p>Otherwise, we parse one element and recurse with <code>parse-until-close</code>.</p>\n<h3>Test</h3>\n<p>Each call returns two values, the parsed token and the remaining ones:</p>\n<pre class=\"lang-lisp prettyprint-override\"><code>(parse '(one token))\n=&gt; ONE\n   (TOKEN)\n\n(parse '(&lt; abc &lt; x &gt; y &gt;))\n=&gt; (ABC (X) Y)\n   NIL\n\n(parse '(&lt; abc def &gt;))\n=&gt; (ABC DEF)\n   NIL\n\n;; incomplete input\n(parse '(&lt; &lt; &lt; abc))\n=&gt; (((ABC)))\n   NIL\n</code></pre>\n"}, {"comments": [{"owner": {"reputation": 2491, "user_id": 121095, "user_type": "registered", "accept_rate": 40, "profile_image": "https://www.gravatar.com/avatar/8c6a071678da71840e6e72f7a46170a4?s=128&d=identicon&r=PG", "display_name": "Alexandre Rademaker", "link": "https://stackoverflow.com/users/121095/alexandre-rademaker"}, "edited": false, "score": 0, "creation_date": 1593123283, "post_id": 57566088, "comment_id": 110678358, "body": "This would parse a single s-expression. How to deal with a common lisp source code, a list of s-expressions?"}], "tags": [], "owner": {"reputation": 2472, "user_id": 775282, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c161c3b25645471c05560402910ef118?s=128&d=identicon&r=PG", "display_name": "fal", "link": "https://stackoverflow.com/users/775282/fal"}, "is_accepted": false, "score": 1, "last_activity_date": 1572718641, "last_edit_date": 1572718641, "creation_date": 1566269236, "answer_id": 57566088, "question_id": 50562146, "link": "https://stackoverflow.com/questions/50562146/how-to-write-a-lisp-parser-in-haskell/57566088#57566088", "title": "How to write a lisp parser in Haskell?", "body": "<p>Are you looking for a result like this?</p>\n\n<p><code>[Node [Val \"begin\",Node [Val \"define\",Val \"r\",Val \"10\"],Node [Val \"*\",Val \"pi\",Node [Val \"*\",Val \"r\",Val \"r\"]]]]</code></p>\n\n<p>Here is an approach:</p>\n\n<pre><code>data Ast x = Val x | Node [Ast x] deriving (Show)\n\nparseh :: [[Char]] -&gt; [Ast [Char]] -&gt; (Ast [Char], [String])\nparseh [] as = (Node as, [])\nparseh (x : xs) as\n  | x == \"(\" = (let (a, xs') = (parseh xs []) in (parseh xs' (as ++ [a])))\n  | x == \")\" = (Node as, xs) \n  | otherwise = parseh xs (as ++ [Val x])\n\nparse :: [[Char]] -&gt; [Ast [Char]]\nparse xs = let (Node as, _) = parseh xs [] in as\n</code></pre>\n"}], "owner": {"user_type": "does_not_exist", "display_name": "user5775230"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 933, "favorite_count": 3, "answer_count": 2, "score": 5, "last_activity_date": 1606221969, "creation_date": 1527496226, "last_edit_date": 1527534485, "question_id": 50562146, "link": "https://stackoverflow.com/questions/50562146/how-to-write-a-lisp-parser-in-haskell", "title": "How to write a lisp parser in Haskell?", "body": "<p>I'm trying to write a lisp interpreter in haskell, inspired by Norvig's in Python (<a href=\"http://norvig.com/lispy.html\" rel=\"nofollow noreferrer\">http://norvig.com/lispy.html</a>).  I have a successful tokenizer which I can link to if need be.  Here it outputs the correct code up to Norvig's Python tokenizer.</p>\n\n<pre><code>program = \"(begin (define r 10) (* pi (* r r)))\"\nastTokenized = tokenize program\nastTokenized == [\"(\",\"begin\",\"(\",\"define\",\"r\",\"10\",\")\",\"(\",\"*\",\"pi\",\"(\",\"*\",\"r\",\"r\",\")\",\")\",\")\"]\n</code></pre>\n\n<p>Here I define my abstract syntax tree data type, although I know that it already has some implicit error as it isn't wrapped in a list.</p>\n\n<pre><code>data Ast x = Val x | Node [Ast x] deriving (Show)\n</code></pre>\n\n<p>Here was my first try:</p>\n\n<pre><code>parse :: [[Char]] -&gt; [Ast [Char]]\nparse (x:xs)\n  | x == \"(\" = [Node (parse xs)]\n  | x == \")\" = []\n  | otherwise = (Val x) : parse xs\n</code></pre>\n\n<p>Hopeful, except for it terminates after the first ')'.</p>\n\n<pre><code>Prelude&gt; parse astTokenized\n[Node [Val \"begin\",Node [Val \"define\",Val \"r\",Val \"10\"]]]\n</code></pre>\n\n<p>Here I change the base case for [], and adjust the condition for ')' so it will parse the entire input terminate, but it now just creates a deeper tree, therefore failing to branch correctly.</p>\n\n<pre><code>parse [] = []\nparse (x:xs)\n  | x == \"(\" = [Node (parse xs)]\n  | x == \")\" = parse xs\n  | otherwise = (Val x) : parse xs\n\nPrelude&gt; parse astTokenized\n[Node [Val \"begin\",Node [Val \"define\",Val \"r\",Val \"10\",Node [Val \"*\",Val \"pi\",Node [Val \"*\",Val \"r\",Val \"r\"]]]]]\n</code></pre>\n\n<p>In some way it needs to allow for \"parallel\" trees, not merely nested.  Any help would be appreciated.</p>\n"}, {"tags": ["haskell", "tuples", "list-comprehension", "quicksort"], "comments": [{"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 0, "creation_date": 1527489988, "post_id": 50560419, "comment_id": 88131578, "body": "What&#39;s <code>smallerOrEqual</code>? What type does it have? Can you write a function using <code>ab</code> that fits that type?"}, {"owner": {"reputation": 107, "user_id": 9278225, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/83c78a691a3f82dee01c5c5e918dbf4c?s=128&d=identicon&r=PG&f=1", "display_name": "CoreNoob", "link": "https://stackoverflow.com/users/9278225/corenoob"}, "reply_to_user": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 0, "creation_date": 1527490445, "post_id": 50560419, "comment_id": 88131748, "body": "<code>smallerOrEqual</code> has the same type like the <code>sort</code> function: <code>[(Int, Int)] -&gt; [(Int, Int)]</code>. I don&#39;t know how to write <code>ab</code> in a way to make it fit into my <code>sort</code> function. Because while <code>ab</code> is for pairs I work in <code>sort</code> with list of pairs. I&#39;m new to haskell and it confuses me a lot :("}, {"owner": {"reputation": 107, "user_id": 9278225, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/83c78a691a3f82dee01c5c5e918dbf4c?s=128&d=identicon&r=PG&f=1", "display_name": "CoreNoob", "link": "https://stackoverflow.com/users/9278225/corenoob"}, "reply_to_user": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 1, "creation_date": 1527493295, "post_id": 50560419, "comment_id": 88133196, "body": "The definition of <code>smallerOrEqual</code> is in the <code>sort</code> function. See in the <code>where</code> statement: <code>where smallerOrEqual = [a | a &lt;- xs, a &lt;= x]</code>"}, {"owner": {"reputation": 10378, "user_id": 2476735, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/39e9447bbc32246fcd23b76b5e946618?s=128&d=identicon&r=PG&f=1", "display_name": "David Young", "link": "https://stackoverflow.com/users/2476735/david-young"}, "edited": false, "score": 0, "creation_date": 1527495312, "post_id": 50560419, "comment_id": 88134168, "body": "What have you tried and what errors did the attempts give?"}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 0, "creation_date": 1527495547, "post_id": 50560419, "comment_id": 88134303, "body": "Sorry, I was a bit to fast on the trigger, there :$"}, {"owner": {"reputation": 208473, "user_id": 126014, "user_type": "registered", "accept_rate": 86, "profile_image": "https://www.gravatar.com/avatar/33526616d4a11f1630d4939b769cfbf9?s=128&d=identicon&r=PG", "display_name": "Mark Seemann", "link": "https://stackoverflow.com/users/126014/mark-seemann"}, "edited": false, "score": 0, "creation_date": 1527495692, "post_id": 50560419, "comment_id": 88134385, "body": "Try to remove the type declaration of <code>sort</code> and see what that gives you. Then consider passing <code>smallerOrEqual</code> and <code>larger</code> as arguments to the <code>sort</code> function. Can you implement <code>larger</code> as the Boolean negation of <code>smallerOrEqual</code>?"}], "answers": [{"tags": [], "owner": {"reputation": 2139, "user_id": 465100, "user_type": "registered", "accept_rate": 88, "profile_image": "https://www.gravatar.com/avatar/debe4d3217980e495cf1f15e7e4b4c9f?s=128&d=identicon&r=PG", "display_name": "Artem Pelenitsyn", "link": "https://stackoverflow.com/users/465100/artem-pelenitsyn"}, "is_accepted": true, "score": 4, "last_activity_date": 1527497985, "creation_date": 1527497985, "answer_id": 50562619, "question_id": 50560419, "link": "https://stackoverflow.com/questions/50560419/sort-a-list-of-int-pairs-by-the-difference-of-the-values-a-b/50562619#50562619", "title": "Sort a list of Int pairs by the difference of the values (a, b)", "body": "<p>Let's do that with the standard library functions only!</p>\n\n<p>First of all, there is a generic version of sorting function named <code>sortBy</code> (I'll show the types of relevant functions as we go, using GHCi's brilliant <code>:t</code> command):</p>\n\n<pre><code>ghci&gt; import Data.List\nghci&gt; :t sortBy\nsortBy :: (a -&gt; a -&gt; Ordering) -&gt; [a] -&gt; [a]\n</code></pre>\n\n<p>First parameter of <code>sortBy</code> suggests that to compare elements we need a <em>sorting predicate</em> \u2014 a function which takes two elements of the list and tells if the first one is greater. In many cases, yours included, you don't have to define such a function by yourself. Instead, you can use a function which \u201c<em>measures</em>\u201d how important an element of a list is. E.g. you have an element of a list <code>(x,y)</code> and its measure is <code>|x-y|</code> \u2014 this is exactly your <code>ab</code> function, but remember that we want it to be defined via standard ones.</p>\n\n<p>For now, we have two tasks: 1) define measure function of type <code>(Int, Int) -&gt; Int</code>; 2) learn how to turn it into into a sorting predicate. I told that the the latter one is trivial, as it can be done via standard function <code>comparing</code>:</p>\n\n<pre><code>ghci&gt; import Data.Ord\nghci&gt; :t comparing\ncomparing :: Ord a =&gt; (b -&gt; a) -&gt; b -&gt; b -&gt; Ordering\n</code></pre>\n\n<p>So what I'm suggesting is that <code>comparing ab</code> is a perfect match for the first argument of <code>sortBy</code>. Not let's turn to the other task: defining <code>ab</code> via standard functions.</p>\n\n<p>Consider the type of <code>-</code> function:</p>\n\n<pre><code>ghci&gt; :t (-)\n(-) :: Num a =&gt; a -&gt; a -&gt; a\n</code></pre>\n\n<p>If you substitute <code>Int</code> for the <code>a</code>(\u00b9) you get nearly the type you want to have, i.e. <code>Int -&gt; Int -&gt; Int</code>. Here we hit very frequent task of turning a function from two arguments (<code>(-)</code>) into a function acting on pairs. Luckily, there is a standard function for doing this, namely, <code>uncurry</code>:</p>\n\n<pre><code>ghci&gt; :t uncurry (-)\nuncurry (-) :: Num c =&gt; (c, c) -&gt; c\n</code></pre>\n\n<p>That's what we need! Now we just have to pipe it with the <code>abs</code> function which computes <code>|\u00b7|</code>, and we are good. We compose functions be means of <code>.</code>. Resulting solution is this one:</p>\n\n<pre><code>import Data.List (sortBy)\nimport Data.Ord  (comparing)\n\nsortAbsPairs :: [(Int,Int)] -&gt; [(Int,Int)]\nsortAbsPairs = sortBy (comparing $ abs . uncurry (-))\n</code></pre>\n\n<p>You can try it out in GHCi assuming you saved it in <code>sort.hs</code>:</p>\n\n<pre><code>ghci&gt;:l sort.hs\nOk, one module loaded.\nghci&gt; sortAbsPairs [(8,20), (5, 10), (1,2)]\n    [(1, 2), (5, 10), (8, 20)]\n</code></pre>\n\n<hr>\n\n<p>(\u00b9) You actually can ask GHCi to substitute types for type parameters of functions by setting up a language extension called <code>TypeApplications</code>:</p>\n\n<pre><code>ghci&gt; :set -XTypeApplications\nghci&gt; :t (-) @Int\n(-) @Int :: Int -&gt; Int -&gt; Int\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 2179, "user_id": 412549, "user_type": "registered", "accept_rate": 50, "profile_image": "https://www.gravatar.com/avatar/a194a155579e30bda0926705aeb9d165?s=128&d=identicon&r=PG&f=1", "display_name": "Franky", "link": "https://stackoverflow.com/users/412549/franky"}, "is_accepted": false, "score": 3, "last_activity_date": 1527625370, "last_edit_date": 1527625370, "creation_date": 1527527839, "answer_id": 50570997, "question_id": 50560419, "link": "https://stackoverflow.com/questions/50560419/sort-a-list-of-int-pairs-by-the-difference-of-the-values-a-b/50570997#50570997", "title": "Sort a list of Int pairs by the difference of the values (a, b)", "body": "<p>While <code>sortBy</code> is well-known, it is mostly accompanied by <code>comparing</code>. You can use <code>sortOn</code> instead. <code>sortOn</code> has the advantage that it uses the Schwartzian transform, i.e. it only computes the difference once for each element.</p>\n\n<pre><code>--Prelude Data.List&gt; :t sortOn\n--sortOn :: Ord b =&gt; (a -&gt; b) -&gt; [a] -&gt; [a]\n\nimport Data.List(sortOn)\nsort = sortOn (abs . uncurry (-))\n</code></pre>\n\n<p>But if you really want to use your original sort, pattern match the pairs:</p>\n\n<pre><code>sort ((x,x'):xs) = [ (a,a') | (a,a') &lt;- xs, -- ... your homework here\n</code></pre>\n\n<p>I extend the homework part at a later point to make it a full answer.</p>\n"}], "owner": {"reputation": 107, "user_id": 9278225, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/83c78a691a3f82dee01c5c5e918dbf4c?s=128&d=identicon&r=PG&f=1", "display_name": "CoreNoob", "link": "https://stackoverflow.com/users/9278225/corenoob"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 164, "favorite_count": 0, "accepted_answer_id": 50562619, "answer_count": 2, "score": 1, "last_activity_date": 1527744625, "creation_date": 1527489268, "last_edit_date": 1527744625, "question_id": 50560419, "link": "https://stackoverflow.com/questions/50560419/sort-a-list-of-int-pairs-by-the-difference-of-the-values-a-b", "title": "Sort a list of Int pairs by the difference of the values (a, b)", "body": "<p>How do I sort a <code>list</code> of <code>Int</code> pairs by the difference of the values <code>|first - second|</code> in an ascending order?</p>\n\n<p>For calculating the difference I wrote this piece of code:</p>\n\n<pre><code>ab :: (Int, Int) -&gt; Int\nab (x, y) = if x - y &gt;= 0 then (x - y)\n            else (x - y) * (-1)\n</code></pre>\n\n<p>I wanted to use <code>quicksort</code> on the values I get:</p>\n\n<pre><code>sort :: [(Int,Int)] -&gt; [(Int,Int)]\nsort [] = []\nsort (x:xs) = sort smallerOrEqual ++ [x] ++ sort larger\n          where smallerOrEqual = [a | a &lt;- xs, a &lt;= x]\n                larger = [a | a &lt;- xs, a &gt; x]\n</code></pre>\n\n<p>The problem is how do I build my <code>ab</code> function into <code>the</code> sort function? I have tried several ways but always got compiler errors.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 3975, "user_id": 1031627, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/yamFN.jpg?s=128&g=1", "display_name": "Luka Horvat", "link": "https://stackoverflow.com/users/1031627/luka-horvat"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1527462673, "post_id": 50557019, "comment_id": 88125442, "body": "@dfeuer Ok, did it."}], "answers": [{"comments": [{"owner": {"reputation": 3975, "user_id": 1031627, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/yamFN.jpg?s=128&g=1", "display_name": "Luka Horvat", "link": "https://stackoverflow.com/users/1031627/luka-horvat"}, "edited": false, "score": 0, "creation_date": 1527510645, "post_id": 50566364, "comment_id": 88143011, "body": "It&#39;s pretty weird that dropping the <code>m</code> argument from the <code>Condition</code> class (since it isn&#39;t used at all) allows the instance for be derived. I&#39;ll open an issue, thanks."}], "tags": [], "owner": {"reputation": 121, "user_id": 1567086, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cb8dcb363e677eef37dad92aa8a6368b?s=128&d=identicon&r=PG", "display_name": "Ryan Scott", "link": "https://stackoverflow.com/users/1567086/ryan-scott"}, "is_accepted": true, "score": 1, "last_activity_date": 1527510181, "creation_date": 1527510181, "answer_id": 50566364, "question_id": 50557019, "link": "https://stackoverflow.com/questions/50557019/deriving-via-deriveanyclass-not-behaving-the-same-as-an-emply-instance-declarati/50566364#50566364", "title": "Deriving via DeriveAnyClass not behaving the same as an emply instance declaration", "body": "<p>I don't think <code>DeriveAnyClass</code> is to blame. I believe the real culprit is that GHC's unpredictable behavior surrounding overlapping instances. To see what I mean, let's factor out the default implementation of <code>classF</code> into its own function:</p>\n\n<pre><code>class Class (e :: (* -&gt; *) -&gt; *) where\n    classF :: e m -&gt; ()\n    default classF :: GenericClass (Rep (e m)) m =&gt; e m -&gt; ()\n    classF = classFDefault\n\nclassFDefault :: forall (e :: (* -&gt; *) -&gt; *) (m :: * -&gt; *).\n                 GenericClass (Rep (e m)) m =&gt; e m -&gt; ()\nclassFDefault = undefined\n</code></pre>\n\n<p>Now, given your definition of <code>T</code>:</p>\n\n<pre><code>data T a m = T\n    { field :: a }\n    deriving (Generic)\n</code></pre>\n\n<p>Observe that this typechecks:</p>\n\n<pre><code>instance Class (T a) where\n  classF = classFDefault\n</code></pre>\n\n<p>But this doesn't!</p>\n\n<pre><code>classFT :: forall a (m :: * -&gt; *).\n           T a m -&gt; ()\nclassFT = classFDefault\n</code></pre>\n\n<p>The latter fails with the same error as you would get had you attempted to derive <code>Class</code> with a <code>deriving</code> clause. Unfortunately, I have no idea why GHC accepts the former but rejects the latter, so I can only surmise that GHC is rather picky about how overlapping instances are used when typechecking, and GHC happens to get into a bad mood when it tries to solve a <code>Condition a m</code> constraint in a certain way.</p>\n\n<p>It may be worth filing a bug on the <a href=\"https://ghc.haskell.org/trac/ghc/newticket\" rel=\"nofollow noreferrer\">GHC issue tracker</a> about this.</p>\n"}], "owner": {"reputation": 3975, "user_id": 1031627, "user_type": "registered", "accept_rate": 72, "profile_image": "https://i.stack.imgur.com/yamFN.jpg?s=128&g=1", "display_name": "Luka Horvat", "link": "https://stackoverflow.com/users/1031627/luka-horvat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 189, "favorite_count": 1, "accepted_answer_id": 50566364, "answer_count": 1, "score": 3, "last_activity_date": 1527510181, "creation_date": 1527459495, "last_edit_date": 1527462636, "question_id": 50557019, "link": "https://stackoverflow.com/questions/50557019/deriving-via-deriveanyclass-not-behaving-the-same-as-an-emply-instance-declarati", "title": "Deriving via DeriveAnyClass not behaving the same as an emply instance declaration", "body": "<p>I have the following code</p>\n\n<pre><code>{-# LANGUAGE PolyKinds, DefaultSignatures, FlexibleContexts, DeriveAnyClass, DeriveGeneric #-}\n{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses, UndecidableInstances #-}\nmodule DeriveTest where\n\nimport GHC.Generics\n\nclass GenericClass a m where\ninstance GenericClass f m =&gt; GenericClass (M1 i c f) m\ninstance Condition a m =&gt; GenericClass (K1 i a) m\n\nclass Condition (a :: k) (m :: * -&gt; *) where\ninstance (Condition a m, Condition b m) =&gt; Condition (a b) m\ninstance {-# OVERLAPPABLE #-} Condition (a :: k) m\n\nclass Class (e :: (* -&gt; *) -&gt; *) where\n    classF :: e m -&gt; ()\n    default classF :: GenericClass (Rep (e m)) m =&gt; e m -&gt; ()\n    classF = undefined\n</code></pre>\n\n<p>It defines the class <code>Class</code> of types that have a higher-kinded type as a parameter. It also defines a generic way to derive an instance of that class. Now if I declare a new datatype like this, and try to derive an instance of <code>Class</code></p>\n\n<pre><code>data T a m = T\n    { field :: a }\n    deriving (Generic, Class)\n</code></pre>\n\n<p>I get the following error:</p>\n\n<pre><code>    * Overlapping instances for Condition a m\n        arising from the 'deriving' clause of a data type declaration\n      Matching instances:\n        instance [overlappable] forall k (a :: k) (m :: * -&gt; *).\n                                Condition a m\n        instance forall k1 k2 (a :: k1 -&gt; k2) (m :: * -&gt; *) (b :: k1).\n                 (Condition a m, Condition b m) =&gt;\n                 Condition (a b) m\n      (The choice depends on the instantiation of `a, m'\n       To pick the first instance above, use IncoherentInstances\n       when compiling the other instance declarations)\n    * When deriving the instance for (Class (T a))\n   |\n22 |     deriving (Generic, Class)\n   |                        ^^^^^\n</code></pre>\n\n<p>The error sort of makes sense because I guess. The instance really does depend on the instantiation of <code>a</code>. However, if I just write an empty instance like this:</p>\n\n<pre><code>data T a m = T\n    { field :: a }\n    deriving (Generic)\ninstance Class (T a) -- works\n</code></pre>\n\n<p>It works. Why? And how can I make it behave the same with the deriving statement?</p>\n\n<p>This is using GHC 8.2.2</p>\n"}, {"tags": ["list", "haskell", "binary-search"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 6, "creation_date": 1527449353, "post_id": 50555747, "comment_id": 88122277, "body": "This is not really a good binary search, since typically binary search runs in logarithmic time, and for a list, that is impossible, since obtaining the <i>i</i>-th element, takes <i>O(i)</i> time."}, {"owner": {"reputation": 100768, "user_id": 1899640, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/47374ccb28e4b0d2454b64f7b975bc66?s=128&d=identicon&r=PG", "display_name": "that other guy", "link": "https://stackoverflow.com/users/1899640/that-other-guy"}, "edited": false, "score": 0, "creation_date": 1527449565, "post_id": 50555747, "comment_id": 88122347, "body": "The list <code>[1,2,3,4]</code> is split into three parts: <code>[1,2]</code>, <code>3</code> and <code>[4]</code>. If the number is 3, it returns true. Otherwise, it searches the relevant sublist."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1527451289, "post_id": 50555747, "comment_id": 88122784, "body": "I think your description is correct: the function is roughly evaluated that way. Also note that the evaluation order is not that important, since whatever order you take, as long as you eventually terminate, your result will be correct (since there are no side effects)."}, {"owner": {"reputation": 15757, "user_id": 176841, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/45a168cb9eb8454d66c78f18e29d9342?s=128&d=identicon&r=PG", "display_name": "jberryman", "link": "https://stackoverflow.com/users/176841/jberryman"}, "edited": false, "score": 0, "creation_date": 1527464370, "post_id": 50555747, "comment_id": 88125767, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/48384074/understanding-order-of-evaluation-in-haskell\">Understanding order of evaluation in Haskell</a>"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1527487624, "post_id": 50555747, "comment_id": 88130560, "body": "@WillemVanOnsem still it looks like the best you can do for a list.  E.g. <code>bsearchArray . toArray</code> would be no better."}, {"owner": {"reputation": 75362, "user_id": 625403, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/786eed7da67079cb5d63a49d469af25b?s=128&d=identicon&r=PG", "display_name": "amalloy", "link": "https://stackoverflow.com/users/625403/amalloy"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 1, "creation_date": 1527493596, "post_id": 50555747, "comment_id": 88133334, "body": "@luqui Linear search would be better: just consider elements one at a time, in order. Attempting to do a binary search is just slower."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 0, "creation_date": 1527496135, "post_id": 50555747, "comment_id": 88134597, "body": "@luqui: I think a linear search will probably be sufficient here (and a cutoff once we run into larger values). But this <code>take</code>, <code>drop</code> (and especially <code>length</code> behavior) is probably making it worse."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1527496511, "post_id": 50555747, "comment_id": 88134796, "body": "@WillemVanOnsem ah yes, the <code>length</code> thing, missed that.  Seems irrecoverable."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1527524237, "post_id": 50555747, "comment_id": 88150184, "body": "The slow part of linear search is the linear iteration, which <code>bsearch</code> on a linked list (via <code>take</code> and <code>drop</code>) has to do anyway. A proper binary search simply requires constant-time access to the target elements of the container being searched. (Note this doesn&#39;t require random access; a binary search tree works because you only ever need access to the children of the current node, not access to any arbitrary node in the tree.)"}], "answers": [{"tags": [], "owner": {"reputation": 13772, "user_id": 379311, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c993f4f111e6ff3211ccda1b98828253?s=128&d=identicon&r=PG", "display_name": "Yann Vernier", "link": "https://stackoverflow.com/users/379311/yann-vernier"}, "is_accepted": true, "score": 2, "last_activity_date": 1527512769, "last_edit_date": 1527512769, "creation_date": 1527512431, "answer_id": 50567112, "question_id": 50555747, "link": "https://stackoverflow.com/questions/50555747/what-does-this-binary-search-function-exactly/50567112#50567112", "title": "What does this binary-search function exactly?", "body": "<p>Your interpretation of how the bindings expand is correct. The function essentially operates by converting a finite sorted list on demand into a binary search tree. I could rewrite portions of the function just to show that tree structure (note that the <code>where</code> portion is unchanged):</p>\n\n<pre><code>data Tree a = Node (Tree a) a (Tree a) | Empty\n  deriving Show\n\ntree [] = Empty\ntree xs = Node (tree ys1) y (tree ys2)\n  where\n    ys1 = take l xs\n    (y:ys2) = drop l xs\n    l = length xs `div` 2\n</code></pre>\n\n<p>The tree form can then be produced:</p>\n\n<pre><code>*Main&gt; tree [1..4]\nNode (Node (Node Empty 1 Empty) 2 Empty) 3 (Node Empty 4 Empty)\n</code></pre>\n\n<p>The recursive upper section is about traversing only the relevant portion of the tree. </p>\n\n<pre><code>bsearchT Empty _ = False\nbsearchT (Node ys1 y ys2) x =\n   if      x &lt; y then bsearchT ys1 x\n   else if x &gt; y then bsearchT ys2 x\n   else               True\n\nbsearch xs x = bsearchT (tree xs) x\n</code></pre>\n\n<p>The operation itself does suggest that a plain list is not the appropriate data type; we can observe that <a href=\"https://hackage.haskell.org/package/data-ordlist-0.4.7.0/docs/Data-List-Ordered.html#v:member\" rel=\"nofollow noreferrer\">Data.List.Ordered.member</a> performs a linear search, because lists must be traversed from the head and may be infinite. <a href=\"https://hackage.haskell.org/package/array\" rel=\"nofollow noreferrer\">Arrays</a> or <a href=\"https://hackage.haskell.org/package/vector\" rel=\"nofollow noreferrer\">vectors</a> provide random access, so there is indeed a <a href=\"https://hackage.haskell.org/package/vector-algorithms-0.7.0.1/docs/Data-Vector-Algorithms-Search.html#v:binarySearch\" rel=\"nofollow noreferrer\">Data.Vector.Algorithms.Search.binarySearch</a>. </p>\n"}], "owner": {"reputation": 107, "user_id": 9278225, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/83c78a691a3f82dee01c5c5e918dbf4c?s=128&d=identicon&r=PG&f=1", "display_name": "CoreNoob", "link": "https://stackoverflow.com/users/9278225/corenoob"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 123, "favorite_count": 0, "accepted_answer_id": 50567112, "answer_count": 1, "score": 0, "last_activity_date": 1527512769, "creation_date": 1527449234, "last_edit_date": 1527449815, "question_id": 50555747, "link": "https://stackoverflow.com/questions/50555747/what-does-this-binary-search-function-exactly", "title": "What does this binary-search function exactly?", "body": "<p>I struggle to understand how this binary-search function works:</p>\n\n<pre><code>bsearch :: Ord a =&gt; [a] -&gt; a -&gt; Bool\nbsearch [] _ = False\nbsearch xs x =\n   if x &lt; y then bsearch ys1 x\n   else if x &gt; y then bsearch ys2 x\n   else True\n  where\n    ys1 = take l xs\n    (y:ys2) = drop l xs\n    l = length xs `div` 2\n</code></pre>\n\n<p>I tried to think it by an example: <code>bsearch [1,2,3,4] 4</code>\nbut I don't understand where the function starts. I like to believe first <code>l = length xs 'div' 2</code> gets calculated. <code>l = 2</code>is the result.\nNow I put my variables in <code>(y:ys2) = drop l xs</code> where <code>(y:ys2) = 3:[4]</code>\nwhich equals to <code>drop 2 [1,2,3,4] = [3,4]</code>. Next <code>else if 4 &gt; 3 then bsearch ys2 x</code> gets executed where <code>ys2 = [4]</code> and <code>x = 4</code>. What happens next? How does <code>x = 4</code>and <code>ys2 = [4]</code>get compared?</p>\n\n<p>EDIT: I think since <code>bsearch [4] 4</code>is the new <code>bsearch xs x</code> the new <code>l = length xs 'div' 2 = length [4] 'div' 2 = 0</code> that executes <code>drop 0 [4] = [4] = (4:[])</code>. <code>4 &lt; 4</code> and <code>4 &gt; 4</code>is <code>False</code> therefore <code>else True</code>.\nIs this the way this function executes for my example?</p>\n\n<p>I would be very happy if someone could help me with this function.</p>\n"}, {"tags": ["haskell", "reflection", "yesod"], "answers": [{"comments": [{"owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "edited": false, "score": 1, "creation_date": 1527438472, "post_id": 50553760, "comment_id": 88119095, "body": "I don&#39;t think putting the recursive solution first is a good idea. The key point is that <code>typeOf</code> and <code>typeRep</code> don&#39;t even care about their arguments. I think this answer should mention, in order, the most modern way, being <code>typeRep (Proxy @a)</code> (or <code>[]</code>), the slightly less modern one, which is <code>typeRep (Proxy :: Proxy a)</code>, and the only-use-in-case-of-compatibility one, which is the recursive definition. An explanation for <i>why</i>, in any case, is the most important thing. Also, this seems to be OP&#39;s first exposure to <code>Typeable</code>. Explaining how it works would be good."}, {"owner": {"reputation": 125, "user_id": 9854808, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/SOLEI.jpg?s=128&g=1", "display_name": "Thomas Mahler", "link": "https://stackoverflow.com/users/9854808/thomas-mahler"}, "edited": false, "score": 0, "creation_date": 1527934242, "post_id": 50553760, "comment_id": 88321553, "body": "Both solutions work nicely. The RecursiveDo definitely was some mindbending food for thought! I&#39;ve created a complete example implementaion based on the ScopedTypeVariables approach here: <a href=\"https://github.com/thma/EntityRestService\" rel=\"nofollow noreferrer\">github.com/thma/EntityRestService</a>"}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 0, "last_activity_date": 1527435733, "last_edit_date": 1527435733, "creation_date": 1527435398, "answer_id": 50553760, "question_id": 50553544, "link": "https://stackoverflow.com/questions/50553544/how-to-have-type-reflection-in-haskell/50553760#50553760", "title": "How to have type reflection in Haskell", "body": "<p>I guess the standard trick is to use <code>Typeable</code>, specifically <code>typeOf :: Typeable a =&gt; a -&gt; TypeRep</code>. Unfortunately, we don't have an <code>a</code> lying around to call this on until after we've read the file, which we can't do until we have the right filename, which we can't do until we call <code>typeOf</code>, which we can't do until after we've read the file...</p>\n\n<p>...or can we?</p>\n\n<pre><code>{-# LANGUAGE RecursiveDo #-}\nimport Data.Aeson\nimport Data.Text\nimport Data.Typeable\nimport qualified Data.ByteString.Lazy as B\n\nretrieveEntity :: (FromJSON a, Typeable a) =&gt; Text -&gt; IO a\nretrieveEntity id = mdo\n    let jsonFileName = getPath (typeOf result) id \".json\"\n    result &lt;- parseFromJsonFile jsonFileName\n    return result\n\ngetPath :: TypeRep -&gt; Text -&gt; String -&gt; String\ngetPath tr id ex = \"data/\" ++ show tr ++ \".\" ++ unpack id ++ ex\n\nparseFromJsonFile :: FromJSON a =&gt; FilePath -&gt; IO a\nparseFromJsonFile fileName = do\n    contentBytes &lt;- B.readFile fileName\n    case eitherDecode contentBytes of\n        Left msg -&gt; fail msg\n        Right x  -&gt; return x\n</code></pre>\n\n<p>Or there are less mind-bending options, such as using <code>typeRep :: Typeable a =&gt; proxy a -&gt; TypeRep</code>. Then we can use <code>ScopedTypeVariables</code> to bring the appropriate type into scope.</p>\n\n<pre><code>{-# LANGUAGE ScopedTypeVariables #-}\nimport Data.Aeson\nimport Data.Text\nimport Data.Typeable\nimport qualified Data.ByteString.Lazy as B\n\n-- don't forget the forall, it's a STV requirement\nretrieveEntity :: forall a. (FromJSON a, Typeable a) =&gt; Text -&gt; IO a\nretrieveEntity id = do\n    let jsonFileName = getPath (typeRep ([] :: [a])) id \".json\"\n    result &lt;- parseFromJsonFile jsonFileName\n    return result\n\ngetPath :: TypeRep -&gt; Text -&gt; String -&gt; String\ngetPath tr id ex = \"data/\" ++ show tr ++ \".\" ++ unpack id ++ ex\n\nparseFromJsonFile :: FromJSON a =&gt; FilePath -&gt; IO a\nparseFromJsonFile fileName = do\n    contentBytes &lt;- B.readFile fileName\n    case eitherDecode contentBytes of\n        Left msg -&gt; fail msg\n        Right x  -&gt; return x\n</code></pre>\n"}], "owner": {"reputation": 125, "user_id": 9854808, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/SOLEI.jpg?s=128&g=1", "display_name": "Thomas Mahler", "link": "https://stackoverflow.com/users/9854808/thomas-mahler"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 369, "favorite_count": 0, "accepted_answer_id": 50553760, "answer_count": 1, "score": 2, "last_activity_date": 1527435733, "creation_date": 1527433792, "question_id": 50553544, "link": "https://stackoverflow.com/questions/50553544/how-to-have-type-reflection-in-haskell", "title": "How to have type reflection in Haskell", "body": "<p>I've written a simple Yesod Rest Server that persists entities in JSON files.\nEntities are stored on disk in files named data/type.id.json.\nFor instance retrieveCustomer \"1234\" should load data from file data/Customer.1234.json.</p>\n\n<p>I'm using a polymorphic function retrieveEntity that can retrieve instances of any data type that instantiate the FromJSON typeclass. (This part works nicely)</p>\n\n<p>But at the moment I have to fill in the type name hardcoded in type-specific functions like retrieveCustomer.</p>\n\n<p>How do I manage to compute the type name dynamically in the generic retrieveEntity?\nI think I'm basically looking for a Haskell type reflection mechanism which I did not come across so far?</p>\n\n<pre><code>-- | retrieve a Customer by id\nretrieveCustomer :: Text -&gt; IO Customer\nretrieveCustomer id = do\n    retrieveEntity \"Customer\" id :: IO Customer\n\n-- | load a persistent entity of type t and identified by id from the backend\nretrieveEntity :: (FromJSON a) =&gt; String -&gt; Text -&gt; IO a\nretrieveEntity t id = do\n    let jsonFileName = getPath t id \".json\"\n    parseFromJsonFile jsonFileName :: FromJSON a =&gt; IO a\n\n-- | compute path of data file\ngetPath :: String -&gt; Text -&gt; String -&gt; String\ngetPath t id ex = \"data/\" ++ t ++ \".\" ++ unpack id ++ ex\n\n-- | read from file fileName and then parse the contents as a FromJSON instance.\nparseFromJsonFile :: FromJSON a =&gt; FilePath -&gt; IO a\nparseFromJsonFile fileName = do\n    contentBytes &lt;- B.readFile fileName\n    case eitherDecode contentBytes of\n        Left msg -&gt; fail msg\n        Right x  -&gt; return x\n</code></pre>\n"}, {"tags": ["haskell", "parallel-processing"], "comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1527436005, "post_id": 50553279, "comment_id": 88118356, "body": "How are you compiling and running this?"}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 0, "creation_date": 1527441010, "post_id": 50553279, "comment_id": 88119862, "body": "You need to use the GHC option <code>-threaded</code> and run the executable with <code>+RTS -Nx</code> where <code>x</code> is the number of cores to use. Are you doing this in your testing?"}, {"owner": {"reputation": 69, "user_id": 3900540, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff25e256cd48f9e3de65fee65277459?s=128&d=identicon&r=PG&f=1", "display_name": "Mikekekeke", "link": "https://stackoverflow.com/users/3900540/mikekekeke"}, "edited": false, "score": 0, "creation_date": 1527443827, "post_id": 50553279, "comment_id": 88120704, "body": "Yes, compile with &quot;ghc -O2 [filename.hs]  -threaded -rtsopts -eventlog&quot;. Then run with &quot;[filename] +RTS -N2 -l&quot;"}, {"owner": {"reputation": 69, "user_id": 3900540, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff25e256cd48f9e3de65fee65277459?s=128&d=identicon&r=PG&f=1", "display_name": "Mikekekeke", "link": "https://stackoverflow.com/users/3900540/mikekekeke"}, "edited": false, "score": 0, "creation_date": 1527444234, "post_id": 50553279, "comment_id": 88120827, "body": "Also <code>(Just (fib 35), Just (fib 36)) `using` evalPair (rparWith (rseq . force)) (rparWith (rseq . force))</code> shows 2 core busy, but <code>(Just (fib 35), Just (fib 36)) `using` parPair rdeepseq rdeepseq</code> only one. As far as I understood, those should be sort of equivalent"}], "answers": [{"comments": [{"owner": {"reputation": 69, "user_id": 3900540, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff25e256cd48f9e3de65fee65277459?s=128&d=identicon&r=PG&f=1", "display_name": "Mikekekeke", "link": "https://stackoverflow.com/users/3900540/mikekekeke"}, "edited": false, "score": 2, "creation_date": 1527669796, "post_id": 50572154, "comment_id": 88209381, "body": "Looks like this is some known issue, so I just commented here <a href=\"https://github.com/haskell/parallel/issues/17\" rel=\"nofollow noreferrer\">github.com/haskell/parallel/issues/17</a>"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1531871988, "post_id": 50572154, "comment_id": 89755399, "body": "The actual issue turned out to have nothing whatsoever to do with <code>rdeepseq</code> and everything to do with <code>rparWith</code>. See the ultimate ticket resolution."}], "tags": [], "owner": {"reputation": 13626, "user_id": 492865, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/5c69a2080e68c8606961a18aba3a08ec?s=128&d=identicon&r=PG", "display_name": "Yuras", "link": "https://stackoverflow.com/users/492865/yuras"}, "is_accepted": false, "score": 0, "last_activity_date": 1527533691, "creation_date": 1527533691, "answer_id": 50572154, "question_id": 50553279, "link": "https://stackoverflow.com/questions/50553279/haskell-why-following-run-sequentially/50572154#50572154", "title": "Haskell: why following run sequentially?", "body": "<p>The <a href=\"https://simonmar.github.io/bib/papers/strategies.pdf\" rel=\"nofollow noreferrer\">original paper</a> describes <code>rdeepseq</code> as</p>\n\n<pre><code>rdeepseq :: NFData a =&gt; Strategy a\nrdeepseq x = rnf x \u2018pseq\u2018 return x\n</code></pre>\n\n<p>And indeed, if you use this definition, it will create sparks, like you'd expect. Looks like <code>rdeepseq</code> sematrics was changes (probably <a href=\"https://github.com/haskell/parallel/commit/e4f34d858cd330084abbc86e3e4dbe6727b43f06#diff-bfe9562b593bd5b0d5b0cf087ba38790L343\" rel=\"nofollow noreferrer\">here</a>), intentionally or incidentally. I don't see any note neither in the documentation, nor in the changelog, so it is probably a bug. Please create at issue on their <a href=\"https://github.com/haskell/parallel/issues\" rel=\"nofollow noreferrer\">bug tracker</a> and ask maintainers for clarification.</p>\n"}, {"comments": [{"owner": {"reputation": 69, "user_id": 3900540, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff25e256cd48f9e3de65fee65277459?s=128&d=identicon&r=PG&f=1", "display_name": "Mikekekeke", "link": "https://stackoverflow.com/users/3900540/mikekekeke"}, "edited": false, "score": 0, "creation_date": 1532616465, "post_id": 51391772, "comment_id": 90051022, "body": "Guess, this should be the answer"}], "tags": [], "owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "is_accepted": true, "score": 0, "last_activity_date": 1531920868, "last_edit_date": 1531920868, "creation_date": 1531872509, "answer_id": 51391772, "question_id": 50553279, "link": "https://stackoverflow.com/questions/50553279/haskell-why-following-run-sequentially/51391772#51391772", "title": "Haskell: why following run sequentially?", "body": "<p><code>rparWith</code> was defined using <code>realWorld#</code>, a deeply magical GHC internal value. The way it was used is essentially the same as applying a \"function\" sometimes called <code>accursedUnutterablePerformIO</code> (more officially, <code>unsafeInlinePerformIO</code>). Using it is only legitimate when the <code>IO</code> in question is actually exceptionally pure. The thinking was that since <code>Eval</code> is just for calculation, that should be fine. But in fact, sparking threads is an <code>IO</code> effect, and one we care about! The optimizer was rearranging those effects in an unfortunate way, causing them ultimately to be dropped. The fix was to use <code>unsafeDupablePerformIO</code> instead. That's a much better-behaved \"function\", and seems to do the trick. See <a href=\"https://github.com/haskell/parallel/issues/17\" rel=\"nofollow noreferrer\">the ticket</a> for details.</p>\n\n<p>Note: my initial fix turned out to be a bit wrong; it's now been modified once again.</p>\n"}], "owner": {"reputation": 69, "user_id": 3900540, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7ff25e256cd48f9e3de65fee65277459?s=128&d=identicon&r=PG&f=1", "display_name": "Mikekekeke", "link": "https://stackoverflow.com/users/3900540/mikekekeke"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 171, "favorite_count": 0, "accepted_answer_id": 51391772, "answer_count": 2, "score": 3, "last_activity_date": 1531920868, "creation_date": 1527432093, "last_edit_date": 1527435327, "question_id": 50553279, "link": "https://stackoverflow.com/questions/50553279/haskell-why-following-run-sequentially", "title": "Haskell: why following run sequentially?", "body": "<p>Good day. Given code</p>\n\n<pre><code>import           Control.DeepSeq\nimport           Control.Exception\nimport           Control.Parallel\nimport           Control.Parallel.Strategies\nimport           System.Environment\nimport           Text.Printf\n\nl = [34,56,43,1234,456,765,345,4574,58,878,978,456,34,234,1234123,1234,12341234]\nf x = Just (sum [1..x])\n\nfun1 :: [Maybe Integer]\nfun1 = map f l `using` parList rdeepseq\nfun2 :: [Maybe Integer]\nfun2 = map f l `using` evalList (rparWith rdeepseq)\nfun3 :: [Maybe Integer]\nfun3 = map f l `using` evalList (rpar . force)\n\nmain :: IO ()\nmain = print fun1\n</code></pre>\n\n<p>Why <code>fun1</code> and <code>fun2</code> run sequentially?\nFrom what I understood, rparWith should spark its argument. Answer <a href=\"https://stackoverflow.com/a/41855707/3900540\" title=\"here\">here</a> states the same. But for fun1 and fun2 I'm getting output like \"SPARKS: 0 (0 converted, 0 overflowed, 0 dud, 0 GC'd, 0 fizzled)\". So Sparks were not even created.\n<code>fun3</code> works as expected with sparks being created.\nTy for help</p>\n\n<p>UPD: And I found that <code>rdeepseq</code> makes example from book (Parallel and Concurrent Programming in Haskell) works in sequence. Book says:</p>\n\n<blockquote>\n  <p>And we can use parPair to write a Strategy that fully evaluates both components of a pair in parallel:</p>\n  \n  <p>parPair rdeepseq rdeepseq :: (NFData a, NFData b) => Strategy (a,b)</p>\n  \n  <p>To break down what happens when this Strategy is applied to a pair: parPair calls, and evalPair calls rparWith rdeepseq on each component of the pair. So\n  the effect is that each component will be fully evaluated to normal form in parallel.</p>\n</blockquote>\n\n<p>But if I run </p>\n\n<pre><code>(Just (fib 35), Just (fib 36)) `using` parPair rdeepseq rdeepseq\n</code></pre>\n\n<p>or even</p>\n\n<pre><code>(fib 35, fib 36) `using` parPair rdeepseq rdeepseq\n</code></pre>\n\n<p>Threadscope shows only one core running and 0 sparks created.</p>\n\n<p>fib implemented like this (from book too)</p>\n\n<pre><code>fib :: Integer -&gt; Integer\nfib 0 = 1\nfib 1 = 1\nfib n = fib (n-1) + fib (n-2)\n</code></pre>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1527426031, "post_id": 50552110, "comment_id": 88115565, "body": "Note that <code>(fst spaned)</code> doesn&#39;t need parentheses above. You can remove those parentheses without any <code>$</code>. For <code>snd spaned</code> instead, I don&#39;t think they can be removed easily."}, {"owner": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1527428391, "post_id": 50552110, "comment_id": 88116220, "body": "Also, have to point this out every time: <code>$</code> has <i>nothing</i> whatsoever to do with parentheses. You can <i>incidentally</i> also use it to simplify expressions so they no longer require parentheses sometimes, but that&#39;s just because <code>$</code> is a low precedence operator."}, {"owner": {"reputation": 484, "user_id": 5587299, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/68b696bfe3bdb63c600cdf67bf2983e6?s=128&d=identicon&r=PG", "display_name": "aryndin", "link": "https://stackoverflow.com/users/5587299/aryndin"}, "reply_to_user": {"reputation": 13734, "user_id": 938694, "user_type": "registered", "accept_rate": 59, "profile_image": "https://www.gravatar.com/avatar/b6678a430a805dd78366d6e135b49f2d?s=128&d=identicon&r=PG", "display_name": "Cubic", "link": "https://stackoverflow.com/users/938694/cubic"}, "edited": false, "score": 0, "creation_date": 1527524109, "post_id": 50552110, "comment_id": 88150134, "body": "@Cubic I know it, but nevertheless I try to get rid of parentheses throught this not trivial way, and this leads me to desperate attempts to put dollar almost everywhere."}], "answers": [{"tags": [], "owner": {"reputation": 2570, "user_id": 4142266, "user_type": "registered", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/rMCN5.png?s=128&g=1", "display_name": "mschmidt", "link": "https://stackoverflow.com/users/4142266/mschmidt"}, "is_accepted": false, "score": 9, "last_activity_date": 1527425169, "last_edit_date": 1527425169, "creation_date": 1527424615, "answer_id": 50552218, "question_id": 50552110, "link": "https://stackoverflow.com/questions/50552110/cant-use-dollar-instead-of-parens/50552218#50552218", "title": "Can&#39;t use dollar ($) instead of parens", "body": "<p>You get the error because of operator precedences. <code>$</code> has the lowest possible precedence, while function application has the highest possible. I.e. your original code:</p>\n\n<pre><code>(fst spaned) : groupElems (snd spaned)\n</code></pre>\n\n<p>is equivalent to:</p>\n\n<pre><code>(fst spaned) : (groupElems (snd spaned))\n</code></pre>\n\n<p>While your attempt to remove parens is grouped like:</p>\n\n<pre><code>((fst spaned) : groupElems) $ (snd spaned)\n</code></pre>\n\n<p>See also <a href=\"https://stackoverflow.com/questions/3125395/haskell-operator-vs-function-precedence\">this question</a>.</p>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 4, "last_activity_date": 1527431081, "creation_date": 1527431081, "answer_id": 50553111, "question_id": 50552110, "link": "https://stackoverflow.com/questions/50552110/cant-use-dollar-instead-of-parens/50553111#50553111", "title": "Can&#39;t use dollar ($) instead of parens", "body": "<p>Redefine (or rather replace) <code>spaned</code>, and you don't need to call <code>fst</code> or <code>snd</code>, eliminating the parentheses <em>and</em> the need for <code>($)</code>.</p>\n\n<pre><code>groupElems :: Eq a =&gt; [a] -&gt; [[a]]\ngroupElems [] = []\ngroupElems all@(x:_) = s1 : groupElems s2 where\n  (s1, s2) = span (== x) all\n</code></pre>\n"}], "owner": {"reputation": 484, "user_id": 5587299, "user_type": "registered", "accept_rate": 27, "profile_image": "https://www.gravatar.com/avatar/68b696bfe3bdb63c600cdf67bf2983e6?s=128&d=identicon&r=PG", "display_name": "aryndin", "link": "https://stackoverflow.com/users/5587299/aryndin"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 93, "favorite_count": 0, "answer_count": 2, "score": 1, "last_activity_date": 1527431081, "creation_date": 1527423804, "question_id": 50552110, "link": "https://stackoverflow.com/questions/50552110/cant-use-dollar-instead-of-parens", "title": "Can&#39;t use dollar ($) instead of parens", "body": "<p>I always try to get rid of parens where posible. Here is simple code:</p>\n\n<pre><code>groupElems :: Eq a =&gt; [a] -&gt; [[a]]\ngroupElems [] = []\ngroupElems (x:xs) = (fst spaned) : groupElems (snd spaned) where\n  spaned = span (== x) (x:xs)\n</code></pre>\n\n<p>It takes a list and returns list of grouped elems. Like this - </p>\n\n<pre><code>groupElems [1,2,2,2,4]\n&gt; [[1],[2,2,2],[4]]\n</code></pre>\n\n<p>And thas works fine. Now I try to replace parens with dollar: </p>\n\n<pre><code>groupElems :: Eq a =&gt; [a] -&gt; [[a]]\ngroupElems [] = []\ngroupElems (x:xs) = (fst spaned) : groupElems $ snd spaned where\n  spaned = span (== x) (x:xs)\n</code></pre>\n\n<p>But then I get strange (to me) error:</p>\n\n<pre><code>hello.hs:83:21: error:\n    \u2022 Couldn't match expected type \u2018[a] -&gt; [[a]]\u2019\n                  with actual type \u2018[[a]]\u2019\n    \u2022 The first argument of ($) takes one argument,\n      but its type \u2018[[a]]\u2019 has none\n      In the expression: (fst spaned) : groupElems $ snd spaned\n      In an equation for \u2018groupElems\u2019:\n          groupElems (x : xs)\n            = (fst spaned) : groupElems $ snd spaned\n            where\n                spaned = span (== x) (x : xs)\n</code></pre>\n\n<p>Is it possible to use dollar here?</p>\n"}, {"tags": ["haskell", "types"], "comments": [{"owner": {"reputation": 2287, "user_id": 5267751, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bd62e8fd8fbb37abc7e2a39d23828047?s=128&d=identicon&r=PG&f=1", "display_name": "user202729", "link": "https://stackoverflow.com/users/5267751/user202729"}, "edited": false, "score": 0, "creation_date": 1527425311, "post_id": 50552081, "comment_id": 88115360, "body": "Possible duplicate of <a href=\"https://stackoverflow.com/questions/4131552/haskell-check-if-integer-or-check-type-of-variable\">Haskell: Check if integer, or check type of variable</a>"}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 9, "creation_date": 1527431371, "post_id": 50552081, "comment_id": 88117105, "body": "You might want to explain <i>why</i> you want such a tuple."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 6, "creation_date": 1527432186, "post_id": 50552081, "comment_id": 88117300, "body": "It is possible to keep type information until runtime using <code>Typeable</code>. However, as chepner said above, one would ask why do you need such information. Usually, this route leads to inelegant code, so one should check first if other simpler routes are available. This might be an XY problem."}, {"owner": {"reputation": 167, "user_id": 2385643, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/09bd8c46b3924359dc8974ee1cd085c6?s=128&d=identicon&r=PG", "display_name": "Kivol", "link": "https://stackoverflow.com/users/2385643/kivol"}, "edited": false, "score": 0, "creation_date": 1527485924, "post_id": 50552081, "comment_id": 88130001, "body": "My project is like a sort of meta-programming to automatically generate a bunch of Haskell code(with other language) to establish a solid mathematical(logical) model consisting the functions."}, {"owner": {"reputation": 167, "user_id": 2385643, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/09bd8c46b3924359dc8974ee1cd085c6?s=128&d=identicon&r=PG", "display_name": "Kivol", "link": "https://stackoverflow.com/users/2385643/kivol"}, "edited": false, "score": 0, "creation_date": 1527485930, "post_id": 50552081, "comment_id": 88130006, "body": "Of course the type signature of the functions will be determined when generating the Haskell code, but I need a type made of that tuple to gather the possible input/output pair. I&#39;ll be able to have them by appending a generated <code>newtype</code> declaration, but I thought it&#39;s a kind of logic duplication on the perspective of code, so I wondered if there&#39;s any way to run <code>:t</code> command at runtime. If there&#39;s no elegant way to get it, I&#39;ll just be happy to make and append it."}], "answers": [{"tags": [], "owner": {"reputation": 29209, "user_id": 495796, "user_type": "registered", "accept_rate": 79, "profile_image": "https://www.gravatar.com/avatar/86637c99f25d60157aa0f2e7eab90148?s=128&d=identicon&r=PG", "display_name": "Robin Green", "link": "https://stackoverflow.com/users/495796/robin-green"}, "is_accepted": true, "score": 1, "last_activity_date": 1527490871, "creation_date": 1527490871, "answer_id": 50560784, "question_id": 50552081, "link": "https://stackoverflow.com/questions/50552081/getting-returning-the-type-of-a-function/50560784#50560784", "title": "Getting/returning the type of a function", "body": "<p>You can use Template Haskell to do your metaprogramming, and that allows you to get the type of a function. See <a href=\"https://stackoverflow.com/questions/21490821/is-it-possible-to-get-a-type-of-any-expression-using-template-haskell\">this question</a> for how to get the type.</p>\n"}], "owner": {"reputation": 167, "user_id": 2385643, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/09bd8c46b3924359dc8974ee1cd085c6?s=128&d=identicon&r=PG", "display_name": "Kivol", "link": "https://stackoverflow.com/users/2385643/kivol"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 78, "favorite_count": 0, "accepted_answer_id": 50560784, "answer_count": 1, "score": 0, "last_activity_date": 1527490871, "creation_date": 1527423670, "last_edit_date": 1527485428, "question_id": 50552081, "link": "https://stackoverflow.com/questions/50552081/getting-returning-the-type-of-a-function", "title": "Getting/returning the type of a function", "body": "<p>Is there any way to get and return the type of a function in Haskell?</p>\n\n<p>Suppose that I have this kind of function:</p>\n\n<pre><code>foo :: Int -&gt; Int -&gt; String\nfoo a b = (show a ++ show b ++ \"hello\")\n</code></pre>\n\n<p>From the code above, what I actually want is to get this kind of tuple as a return value of function:</p>\n\n<pre><code>&gt; getTypeTuple foo\n(Int, Int, String)\n</code></pre>\n\n<p>As far as I know, the type itself cannot be treated as a part of expressions, so I guess it wouldn't be possible to have this kind of feature at the runtime in Haskell. (Static type!!)</p>\n\n<p>Then will there be any similar alternative, or preprocessor feature in Haskell?</p>\n\n<p>Edit: I think what I really want is the Haskell implementation of <code>:t</code> command in GHCi.</p>\n"}, {"tags": ["haskell", "streaming", "streamly"], "comments": [{"owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "edited": false, "score": 0, "creation_date": 1527504433, "post_id": 50552045, "comment_id": 88139333, "body": "<code>foldMap makeHttpCall</code> won&#39;t produce a list of monadic actions, it&#39;ll produce one monolithic action."}], "answers": [{"tags": [], "owner": {"reputation": 1, "user_id": 3012408, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/5d243e52a6434efcfb62c30cbc172244?s=128&d=identicon&r=PG&f=1", "display_name": "harendra", "link": "https://stackoverflow.com/users/3012408/harendra"}, "is_accepted": false, "score": 0, "last_activity_date": 1532270517, "creation_date": 1532270517, "answer_id": 51466199, "question_id": 50552045, "link": "https://stackoverflow.com/questions/50552045/consuming-infinite-monadic-streams-with-streamly/51466199#51466199", "title": "Consuming infinite monadic streams with Streamly", "body": "<p>Your code should work as expected with streamly-0.4.0 onwards. That is, it will generate 10 concurrent requests at most.</p>\n"}], "owner": {"reputation": 8697, "user_id": 1055165, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/d7c25776b0ca1c13212eea512370102d?s=128&d=identicon&r=PG", "display_name": "zoran119", "link": "https://stackoverflow.com/users/1055165/zoran119"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 103, "favorite_count": 0, "answer_count": 1, "score": 1, "last_activity_date": 1532270517, "creation_date": 1527423358, "question_id": 50552045, "link": "https://stackoverflow.com/questions/50552045/consuming-infinite-monadic-streams-with-streamly", "title": "Consuming infinite monadic streams with Streamly", "body": "<p>I've got a function which produces an infinite list of monadic actions (HTTP calls in my case), something like this:</p>\n\n<pre><code>getStream = foldMap makeHttpCall [1..]\n  where\n    makeHttpCall bookId = ...\n</code></pre>\n\n<p>I'd like to be able to use this function like this:</p>\n\n<pre><code>S.take 10 $ (asyncly getStream)\n</code></pre>\n\n<p>Two things I'm trying to achieve:</p>\n\n<ul>\n<li>I don't want to pass the <code>10</code> to the <code>getStream</code> function</li>\n<li>I want the 10 HTTP calls to be made at the same time</li>\n</ul>\n\n<p>The code above makes more than 10 HTTP calls, and whatever comes back first is passed in the stream. I've explored other combinators like <code>wAsyncly</code> and <code>parallely</code> but the behaviour stays the same.</p>\n\n<p>Is there a way to achieve this in <a href=\"https://hackage.haskell.org/package/streamly-0.2.0\" rel=\"nofollow noreferrer\">Streamly</a>?</p>\n\n<hr>\n\n<p>Code samples above use the following imports:</p>\n\n<pre><code>import Streamly\nimport qualified Streamly.Prelude as S\n</code></pre>\n"}, {"tags": ["haskell", "reflection", "unions", "gadt", "data-kinds"], "comments": [{"owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 1, "creation_date": 1527387357, "post_id": 50548333, "comment_id": 88107792, "body": "your <code>forall a b</code> is to the right of <code>(Not (bs == &#39;[]) || a == b)</code>, so the <code>a</code> and <code>b</code> you mention in <code>a -&gt; Variant (b &#39;: bs)</code> are independent of the <code>a</code> and <code>b</code> in the constraint.  That is, GHC reads this the same way it would <code>singleton :: (Not (bs == &#39;[]) || a == b) ~ &#39;True =&gt; forall x y. x -&gt; Variant (y &#39;: bs)</code>"}], "answers": [{"tags": [], "owner": {"reputation": 22091, "user_id": 5684257, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ea5090cde8ea066a1fda67ed52dd5084?s=128&d=identicon&r=PG&f=1", "display_name": "HTNW", "link": "https://stackoverflow.com/users/5684257/htnw"}, "is_accepted": true, "score": 4, "last_activity_date": 1580108193, "last_edit_date": 1580108193, "creation_date": 1527390964, "answer_id": 50548724, "question_id": 50548333, "link": "https://stackoverflow.com/questions/50548333/type-safe-union-in-haskell/50548724#50548724", "title": "Type-safe union in Haskell?", "body": "<p>The conventional names for the constructors are <code>Inl</code> and <code>Inr</code>:</p>\n\n<pre><code>import Data.Kind\n\ndata Sum :: [Type] -&gt; Type where\n  Inl :: a -&gt; Sum (a : as) -- INject Left\n  Inr :: !(Sum as) -&gt; Sum (a : as) -- INject Right\n</code></pre>\n\n<p>The extra strictness in <code>Inr</code> is optional. Consider <code>Either a b</code>. This type has the values <code>undefined</code>, <code>Left undefined</code>, and <code>Right undefined</code>, along with all the other ones. Consider your <code>Variant [a, b]</code>. This has <code>undefined</code>, <code>Singleton undefined</code>, <code>Variant undefined</code>, and <code>Variant (Singleton undefined)</code>. There is one extra partially-undefined value that does not arise with <code>Either</code>. <code>Inr</code>'s strictness squashes <code>Inr undefined</code> and <code>undefined</code> together. This means you cannot have a value with only a \"partially known\" variant. All strictness annotations in the following are for \"correctness.\" They squash out bottoms in places where you probably don't want bottoms.</p>\n\n<p>Now, the signature of <code>singleton</code>, as pointed out by @rampion, has a use-before-definition error. It \"ought\" to be:</p>\n\n<pre><code>singleton :: forall a b.\n             (Not (bs == '[]) || a == b) ~ True =&gt;\n             a -&gt; Variant (b ': bs)\n</code></pre>\n\n<p>But that isn't quite right. If <code>a ~ b</code>, great, this works. If not, there is no way for the compiler to ensure that <code>a</code> is in <code>bs</code>, because you haven't constrained for that. This new signature still fails. For the most power, especially for future definitions, you'll want something like</p>\n\n<pre><code>-- Elem x xs has the structure of a Nat, but doubles as a proof that x is in xs\n-- or: Elem x xs is the type of numbers n such that the nth element of xs is x\ndata Elem (x :: k) (xs :: [k]) where\n  Here  :: Elem x (x : xs)\n  There :: !(Elem x xs) -&gt; Elem x (y : xs) -- strictness optional\n-- boilerplate; use singletons or similar to dodge this mechanical tedium\n-- EDIT: singletons doesn't support GADTs just yet, so this must be handwritten\n-- See https://github.com/goldfirere/singletons/issues/150\ndata SElem x xs (e :: Elem x xs) where\n  SHere  :: SElem x (x : xs) Here\n  SThere :: SElem x xs e -&gt; SElem x (y : xs) (There e)\nclass KElem x xs (e :: Elem x xs) | e -&gt; x xs where kElem :: SElem x xs e\ninstance KElem x (x : xs) Here where kElem = SHere\ninstance KElem x xs e =&gt; KElem x (y : xs) (There e) where kElem = SThere kElem\ndemoteElem :: SElem x xs e -&gt; Elem x xs\ndemoteElem SHere = Here\ndemoteElem (SThere e) = There (demoteElem e)\n\n-- inj puts a value into a Sum at the given index\ninj :: Elem t ts -&gt; t -&gt; Sum ts\ninj Here x = Inl x\ninj (There e) x = Inr $ inj e x\n\n-- try to find the first index where x occurs in xs\ntype family FirstIndexOf (x :: k) (xs :: [k]) :: Elem x xs where\n  FirstIndexOf x (x:xs) = Here\n  FirstIndexOf x (y:xs) = There (FirstIndexOf x xs)\n-- INJect First\n-- calculate the target index as a type\n-- require it as an implicit value\n-- defer to inj\ninjF :: forall as a.\n        KElem a as (FirstIndexOf a as) =&gt;\n        a -&gt; Sum as\ninjF = inj (demoteElem $ kElem @a @as @(FirstIndexOf a as))\n-- or injF = inj (kElem :: SElem a as (FirstIndexOf a as))\n</code></pre>\n\n<p>You can also just stick an <code>Elem</code> inside <code>Sum</code>:</p>\n\n<pre><code>data Sum :: [Type] -&gt; Type where\n  Sum :: !(Elem t ts) -&gt; t -&gt; Sum ts -- strictness optional\n</code></pre>\n\n<p>You may recover <code>Inl</code> and <code>Inr</code> as pattern synonyms</p>\n\n<pre><code>pattern Inl :: forall ts. () =&gt;\n               forall t ts'. (ts ~ (t : ts')) =&gt;\n               t -&gt; Sum ts\npattern Inl x = Sum Here x\n\ndata Inr' ts = forall t ts'. (ts ~ (t : ts')) =&gt; Inr' (Sum ts')\n_Inr :: Sum ts -&gt; Maybe (Inr' ts)\n_Inr (Sum Here _) = Nothing\n_Inr (Sum (There tag) x) = Just $ Inr' $ Sum tag x\npattern Inr :: forall ts. () =&gt;\n               forall t ts'. (ts ~ (t : ts')) =&gt;\n               Sum ts' -&gt; Sum ts\npattern Inr x &lt;- (_Inr -&gt; Just (Inr' x))\n  where Inr (Sum tag x) = Sum (There tag) x\n</code></pre>\n\n<p>If you try some more, you can use huge amounts of <code>unsafeCoerce Refl</code> (to create \"bogus\" type equalities) to create an API like this:</p>\n\n<pre><code>import Numeric.Natural\n-- ...\ntype role SElem nominal nominal nominal\n-- SElem is a GMP integer\n-- Elem is a nice GADT\n-- Elem gives a nice experience at the type level\n-- this allows functions like FirstIndexOf\n-- SElem avoids using unary numbers at the value level\nnewtype SElem x xs e = SElem Natural\npattern SHere :: forall t ts e. () =&gt;\n                 forall ts'. (ts ~ (t:ts'), e ~ (Here :: Elem t (t:ts'))) =&gt;\n                 SElem t ts e\npattern SThere :: forall t ts e. () =&gt;\n                  forall t' ts' e'. (ts ~ (t':ts'), e ~ (There e' :: Elem t (t':ts'))) =&gt;\n                  SElem t ts' e' -&gt;\n                  SElem t ts e\n-- implementations are evil and kinda long\n-- you'll probably need this:\n-- type family Stuck (k :: Type) :: k where {- no equations -}\n-- pattern synonyms are incredibly restrictive, so they aren't very straightforward\n-- currently GHC does not allow INLINEs on pattern synonyms, so this won't\n-- compile down to simple integer expressions just yet, either :(\n</code></pre>\n\n<p>And then write</p>\n\n<pre><code>data Sum :: [Type] -&gt; Type where\n  Sum :: forall t ts (e :: Elem t ts). !(SElem t ts e) -&gt; t -&gt; Sum ts\n</code></pre>\n\n<p>which is close to a <code>struct</code> of an integer tag and a <code>union</code>, except said tag is a bit oversized.</p>\n"}], "owner": {"reputation": 1889, "user_id": 4540658, "user_type": "registered", "accept_rate": 88, "profile_image": "https://i.stack.imgur.com/9vCJz.jpg?s=128&g=1", "display_name": "Dannyu NDos", "link": "https://stackoverflow.com/users/4540658/dannyu-ndos"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 239, "favorite_count": 0, "accepted_answer_id": 50548724, "answer_count": 1, "score": 1, "last_activity_date": 1580108193, "creation_date": 1527384845, "question_id": 50548333, "link": "https://stackoverflow.com/questions/50548333/type-safe-union-in-haskell", "title": "Type-safe union in Haskell?", "body": "<p>Can I have a type-safe union (As in C's <code>union</code>) in Haskell? This is the best I tried, here <code>Variant</code>, named after C++'s <code>std::variant</code>:</p>\n\n<pre><code>{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE GADTs #-}\n{-# LANGUAGE KindSignatures #-}\n{-# LANGUAGE ScopedTypeVariables #-}\n{-# LANGUAGE TypeOperators #-}\n\nmodule Emulation.CPlusPlus.Variant (\n    Variant, singleton\n) where\n\nimport Data.Type.Bool\nimport Data.Type.Equality\nimport Type.Reflection\n\ndata Variant :: [*] -&gt; * where\n    Singleton :: a -&gt; Variant (a ': as)\n    Arbitrary :: Variant as -&gt; Variant (a ': as)\n\nsingleton :: (Not (bs == '[]) || a == b) ~ 'True =&gt; forall a b. a -&gt; Variant (b ': bs)\nsingleton x = case eqTypeRep (typeRep :: TypeRep a) (typeRep :: TypeRep b) of\n    Nothing    -&gt; Arbitrary (singleton x)\n    Just HRefl -&gt; Singleton x\n</code></pre>\n\n<p>This produces error message as follows:</p>\n\n<pre><code>Prelude&gt; :load Variant.hs\n[1 of 1] Compiling Emulation.CPlusPlus.Variant ( Variant.hs, interpreted )\n\nVariant.hs:19:14: error:\n    \u2022 Could not deduce: (Not (bs == '[]) || (a0 == b0)) ~ 'True\n      from the context: (Not (bs == '[]) || (a == b)) ~ 'True\n        bound by the type signature for:\n                   singleton :: forall (bs :: [*]) a b.\n                                ((Not (bs == '[]) || (a == b)) ~ 'True) =&gt;\n                                forall a1 b1. a1 -&gt; Variant (b1 : bs)\n        at Variant.hs:19:14-85\n      The type variables \u2018a0\u2019, \u2018b0\u2019 are ambiguous\n    \u2022 In the ambiguity check for \u2018singleton\u2019\n      To defer the ambiguity check to use sites, enable AllowAmbiguousTypes\n      In the type signature:\n        singleton :: (Not (bs == '[]) || a == b) ~ True =&gt;\n                     forall a b. a -&gt; Variant (b : bs)\n   |\n19 | singleton :: (Not (bs == '[]) || a == b) ~ True =&gt; forall a b. a -&gt; Variant (b ': bs)\n   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nFailed, no modules loaded.\n</code></pre>\n\n<p>I don't get how such ambiguity emerges.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 3248, "user_id": 5707684, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/wrGFn.jpg?s=128&g=1", "display_name": "Elmex80s", "link": "https://stackoverflow.com/users/5707684/elmex80s"}, "edited": false, "score": 0, "creation_date": 1527414746, "post_id": 50547500, "comment_id": 88112710, "body": "Note this only works when all your functions have the same signature, which they do as <code>(+1)</code>, <code>(*2)</code>, <code>(3-)</code> are all <code>Num a =&gt; a -&gt; a</code>."}], "answers": [{"tags": [], "owner": {"reputation": 5397, "user_id": 2193020, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/aa10d01a3d48851073bd61877a56b5a7?s=128&d=identicon&r=PG", "display_name": "hnefatl", "link": "https://stackoverflow.com/users/2193020/hnefatl"}, "is_accepted": true, "score": 4, "last_activity_date": 1527416553, "last_edit_date": 1527416553, "creation_date": 1527374431, "answer_id": 50547563, "question_id": 50547500, "link": "https://stackoverflow.com/questions/50547500/how-to-work-with-high-order-functions-inside-lists-in-haskell/50547563#50547563", "title": "How to work with high order functions inside lists in haskell?", "body": "<pre><code>f &lt;- [(+1), (*2), (3-)]\n</code></pre>\n\n<p>says \"pick any value of <code>f</code>\" from the list.</p>\n\n<pre><code>x &lt;- [1..(f 1)]\n</code></pre>\n\n<p>says \"pick any <code>x</code> from the list <code>[1..f 1]</code>, for the <code>f</code> we've chosen\". If <code>f</code> was chosen to be eg. <code>(3-)</code> in step 1, then this list will be <code>[1,2]</code>.</p>\n\n<pre><code>[ f x | ... ]\n</code></pre>\n\n<p>says \"produce the value <code>f x</code> in the output list, for the <code>f</code> and <code>x</code> we've chosen previously\", eg. if <code>f = (3-)</code> and <code>x = 2</code>, then we include <code>f x = 3 - 2 = 1</code> in the list. This happens to be the final value in the list you got as output.</p>\n\n<p>This is done for all <code>f</code> and <code>x</code> combinations, until we get the final output.</p>\n\n<hr>\n\n<p>The below diagram illustrates how the combinations of <code>f</code> and <code>x</code> produce the output.</p>\n\n<pre><code>[ 2  ,  3  ,  2  ,  4  ,  2  ,  1 ]\n x=1   x=2   x=1   x=2   x=1   x=2\n   f=(+1)      f=(*2)      f=(3-)\n</code></pre>\n\n<p>Read it as choices being made from the bottom up: we pick <code>f</code>, then we pick <code>x</code>, then we include <code>f x</code> in the output.</p>\n"}], "owner": {"reputation": 75, "user_id": 5058503, "user_type": "registered", "accept_rate": 40, "profile_image": "https://lh4.googleusercontent.com/-T69qEpLNQ58/AAAAAAAAAAI/AAAAAAAAAKE/rmcknxSNLuE/photo.jpg?sz=128", "display_name": "xly0n", "link": "https://stackoverflow.com/users/5058503/xly0n"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 81, "favorite_count": 0, "accepted_answer_id": 50547563, "answer_count": 1, "score": 0, "last_activity_date": 1527416553, "creation_date": 1527373700, "last_edit_date": 1527411369, "question_id": 50547500, "link": "https://stackoverflow.com/questions/50547500/how-to-work-with-high-order-functions-inside-lists-in-haskell", "title": "How to work with high order functions inside lists in haskell?", "body": "<p>I'm learning haskell by myself and I have a lot of doubts about how</p>\n\n<pre><code>[f x | ......]\n</code></pre>\n\n<p>works. For example I have this expression:</p>\n\n<pre><code>[ f x | f&lt;- [(+1),(*2),(3-)], x&lt;-[1..(f 1)]]\n</code></pre>\n\n<p>And it returns:</p>\n\n<pre><code>[2,3,2,4,2,1]\n</code></pre>\n\n<p>But I don't really understand how it comes to that conclusion.</p>\n\n<p>Can somebody help me with a little bit of explanation? I've read the documentation several times but I don't get it.</p>\n\n<p>Thanks!</p>\n"}, {"tags": ["ruby", "haskell", "compiler-construction", "jit", "typechecking"], "answers": [{"comments": [{"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1527391546, "post_id": 50547050, "comment_id": 88108298, "body": "Dependently typed languages (e.g., Agda, Coq, Idris) and macro systems (Template Haskell) add a whole extra level of complication to this, because some parts of the program may have to be compiled <i>and executed</i> in order to type check other parts."}, {"owner": {"reputation": 335867, "user_id": 2988, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed181f8c80df53d2b67a4f4fff088ed4?s=128&d=identicon&r=PG", "display_name": "J&#246;rg W Mittag", "link": "https://stackoverflow.com/users/2988/j%c3%b6rg-w-mittag"}, "edited": false, "score": 0, "creation_date": 1527485769, "post_id": 50547050, "comment_id": 88129938, "body": "&quot;The code that performs these dynamic type checks is either part of the interpreter (if there is an interpreter) or inserted by the JIT compiler (i.e. step 5 in your list).&quot; \u2013 And what about AOT compiled implementations of dynamically typed languages? E.g. most CommonLisps are AOT compiled and there was at least one AOT compiled Ruby implementation (BlueRuby by SAP for the ABAP platform). In that case, type checking code is injected into the compiled executable."}, {"owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "reply_to_user": {"reputation": 335867, "user_id": 2988, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/ed181f8c80df53d2b67a4f4fff088ed4?s=128&d=identicon&r=PG", "display_name": "J&#246;rg W Mittag", "link": "https://stackoverflow.com/users/2988/j%c3%b6rg-w-mittag"}, "edited": false, "score": 0, "creation_date": 1527508115, "post_id": 50547050, "comment_id": 88141525, "body": "@J&#246;rgWMittag Right, I don&#39;t know why I limited the statement to JIT compilers."}], "tags": [], "owner": {"reputation": 339851, "user_id": 149392, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/7a561ec0875fcbbe3066ea8fe288ec77?s=128&d=identicon&r=PG", "display_name": "sepp2k", "link": "https://stackoverflow.com/users/149392/sepp2k"}, "is_accepted": true, "score": 7, "last_activity_date": 1527508409, "last_edit_date": 1527508409, "creation_date": 1527369246, "answer_id": 50547050, "question_id": 50546898, "link": "https://stackoverflow.com/questions/50546898/when-where-type-checking-occurs-in-the-compilation-process/50547050#50547050", "title": "When / where type checking occurs in the compilation process", "body": "<p>Static type checking is usually performed on the AST, so it either happens between 1 and 2 or as part of 2 (meaning that the IR-generator invokes functions from the type checker whenever it processes an AST-node - of course the IR generator and the type checker should still live in different modules/files).</p>\n\n<p>In theory, you could perform type checking on the IR, but that will usually lead to at least one of the following problems:</p>\n\n<ol>\n<li>The IR does not contain enough information to still capture all of the errors that you want.</li>\n<li>The IR does not contain enough information to produce the best error messages in all cases. As an example of this, consider that the IR represents array accesses and pointer arithmetic using the same instructions. Now you want to produce an error for an array access with a floating point index. If the message is \"Floating point values not allowed as operands to pointer arithmetic\" that would be confusing when the code doesn't contain any pointer arithmetic. Requiring the user to know that array accesses are represented as pointer arithmetic to make sense of the error message, would not be very user friendly.</li>\n<li>You add a large amount of extra information to the IR for the purposes of type checking, making the IR more complicated and unwieldy, but all you've gained from that is the ability to process the IR in the same way that you would the AST, without gaining any benefits.</li>\n</ol>\n\n<p>Usually working on the IR instead of the AST means that you don't have to handle as many cases (exactly because the IR represents different things using the same instructions). That's the main benefit. But if you then jump through extra hoops just to be able to treat the cases differently again, you might just as well use the AST in the first place.</p>\n\n<p>So type checking on the AST\u00b9 is usually preferred. GHC (the main Haskell compiler) performs type checking the AST.</p>\n\n<p>\u00b9 Or at least something very close to the AST - there might, for example, be a representation between the AST and the final IR, which simplifies things in some ways (such as removing flattening nested expressions), without losing information relevant to type checking.</p>\n\n<hr>\n\n<p>Dynamic type checking happens at run time. The code that performs these dynamic type checks is either part of the interpreter (if there is an interpreter) or inserted by the code generator.</p>\n\n<p>Ruby performs type checking in the interpreter.</p>\n"}], "owner": {"reputation": 66677, "user_id": 169992, "user_type": "registered", "accept_rate": 83, "profile_image": "https://i.stack.imgur.com/OeNfG.png?s=128&g=1", "display_name": "Lance Pollard", "link": "https://stackoverflow.com/users/169992/lance-pollard"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 674, "favorite_count": 0, "accepted_answer_id": 50547050, "answer_count": 1, "score": 3, "last_activity_date": 1527508409, "creation_date": 1527367933, "last_edit_date": 1527368528, "question_id": 50546898, "link": "https://stackoverflow.com/questions/50546898/when-where-type-checking-occurs-in-the-compilation-process", "title": "When / where type checking occurs in the compilation process", "body": "<p>Wondering at a high level when type check typically occurs (textbook vs. in practice) in the compilation process (at a high level). Roughly my understanding of the compilation process is:</p>\n\n<ol>\n<li>Parse the source code into an AST</li>\n<li>Convert the AST into an Intermediate Representation IR</li>\n<li>Optimize the IR (i.e. SSA Form, Register Allocation, etc.)</li>\n<li>Simplify the IR</li>\n<li>Generate final output code</li>\n</ol>\n\n<p>Wondering if the typechecking occurs in between (1) and (2), (2) and (3), or after (4), or if it occurs sprinkled throughout the whole process, or something else. I'd be interested to know the answer for object oriented, functional, and logic programming (in that order of priority), but if I had to pick one then OO such as a dynamically typed language like Ruby, or statically typed functional language like Haskell.</p>\n"}, {"tags": ["haskell", "pointfree"], "comments": [{"owner": {"reputation": 198293, "user_id": 707111, "user_type": "moderator", "accept_rate": 100, "profile_image": "https://i.stack.imgur.com/oXZkh.jpg?s=128&g=1", "display_name": "Ry-", "link": "https://stackoverflow.com/users/707111/ry"}, "edited": false, "score": 0, "creation_date": 1527366691, "post_id": 50546735, "comment_id": 88104181, "body": "<code>[(.)]</code> is the list containing the function <code>(.)</code>. <code>(:) (.)</code> is a function that takes a list and produces a list with <code>(.)</code> at the beginning."}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 2, "last_activity_date": 1527390729, "last_edit_date": 1527390729, "creation_date": 1527367174, "answer_id": 50546809, "question_id": 50546735, "link": "https://stackoverflow.com/questions/50546735/how-do-i-write-on-pointful-form/50546809#50546809", "title": "How do I write (:)(.) on pointful form?", "body": "<p>Well we can first convert the <code>(:)</code> data constructor, and the function <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:-46-\" rel=\"nofollow noreferrer\"><strong><code>(.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c</code></strong></a> operator as a lambda expression:</p>\n\n<pre><code>(:) -&gt; (\\x y -&gt; (x:y))\n(.) -&gt; (\\f g t -&gt; f (g t))\n</code></pre>\n\n<p>So that means that <code>(:)(.)</code> is short for:</p>\n\n<pre><code>(\\x y -&gt; (x:y)) (\\f g t -&gt; f (g t))\n</code></pre>\n\n<p>So now we can replace <code>x</code> with the lambda expression:</p>\n\n<pre><code> \\y -&gt; (\\f g t -&gt; f (g t)) : y\n</code></pre>\n\n<p>So the function is equal to <code>((.) :)</code>: a partial \"cons\" where we still need to fill in the tail, and the head is the dot operator.</p>\n\n<p>So the type is a list of functions with the same signature as the dot operator <code>[(b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c]</code>.</p>\n\n<p>If we thus for example take as argument <code>[]</code>, we have constructed a <em>singleton</em> list (a list with exactly one element): the dot operator.</p>\n"}, {"tags": [], "owner": {"reputation": 78982, "user_id": 1848654, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/84180c0f3c9c04f8b8f0613fc0129dac?s=128&d=identicon&r=PG", "display_name": "melpomene", "link": "https://stackoverflow.com/users/1848654/melpomene"}, "is_accepted": false, "score": 5, "last_activity_date": 1527367240, "creation_date": 1527367240, "answer_id": 50546819, "question_id": 50546735, "link": "https://stackoverflow.com/questions/50546735/how-do-i-write-on-pointful-form/50546819#50546819", "title": "How do I write (:)(.) on pointful form?", "body": "<pre><code>(:) (.)\n</code></pre>\n\n<p>Eta-expand:</p>\n\n<pre><code>\\x -&gt; (:) (.) x\n</code></pre>\n\n<p>Convert to infix notation:</p>\n\n<pre><code>\\x -&gt; (.) : x\n</code></pre>\n\n<p>I.e. <code>x</code> must be a list and we're prepending <code>(.)</code> to it (that's what <code>:</code> does: it prepends an element to a list).</p>\n\n<p><code>(.)</code> is a function, so <code>x</code> must be a list of functions.</p>\n\n<pre><code>(.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c\n</code></pre>\n\n<p>, so <code>x</code> must have type</p>\n\n<pre><code>x   :: [(b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c]\n</code></pre>\n"}], "owner": {"reputation": 43, "user_id": 9852325, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1d859ed1c85b00095cddf532a6834dcf?s=128&d=identicon&r=PG&f=1", "display_name": "Niklas", "link": "https://stackoverflow.com/users/9852325/niklas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "accepted_answer_id": 50546809, "answer_count": 2, "score": 4, "last_activity_date": 1527390729, "creation_date": 1527366414, "question_id": 50546735, "link": "https://stackoverflow.com/questions/50546735/how-do-i-write-on-pointful-form", "title": "How do I write (:)(.) on pointful form?", "body": "<p>I have a hard time understanding what the function <code>(:)(.)</code> in haskell does. Could someone help me write it on pointful form, and explain step by step how to get there? The first step would be to expand the <code>(:)</code> so that we get <code>((.) :)</code>, but then I'm stuck.<br>\nIt should be of type <code>[(b-&gt;c)-&gt;(a-&gt;b)-&gt;a-&gt;c]-&gt;[(b-&gt;c)-&gt;(a-&gt;b)-&gt;a-&gt;c]</code>, but that doesn't help me, just makes me even more confused.</p>\n"}, {"tags": ["haskell", "emacs", "haskell-mode"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1527362766, "post_id": 50546248, "comment_id": 88103344, "body": "How do you compile this? You need to add the <code>Log.hs</code> file when compiling, so <code>ghc Log.hs LogAnalysis.hs</code>."}, {"owner": {"reputation": 55, "user_id": 4794274, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XrNpg.jpg?s=128&g=1", "display_name": "timokratia", "link": "https://stackoverflow.com/users/4794274/timokratia"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1527363088, "post_id": 50546248, "comment_id": 88103412, "body": "<a href=\"https://stackoverflow.com/users/67579/willem-van-onsem\">Willem Van Onsem</a> I&#39;m able to compile using <code>stack ghc Log.hs LogAnalysis.hs</code> in command line, this error only occurs in my current workflow using emacs haskell mode and intero mode, when using <code>C-c C-l</code>. Is this the right thing to do?"}], "answers": [{"comments": [{"owner": {"reputation": 55, "user_id": 4794274, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XrNpg.jpg?s=128&g=1", "display_name": "timokratia", "link": "https://stackoverflow.com/users/4794274/timokratia"}, "edited": false, "score": 0, "creation_date": 1527453889, "post_id": 50551836, "comment_id": 88123562, "body": "Thanks and accepted as answer. I also wrote down the process of solving it as my own answer to expand yours a little. Cheers :)"}], "tags": [], "owner": {"reputation": 616, "user_id": 8578679, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/CeZ5Z.png?s=128&g=1", "display_name": "Ruifeng Xie", "link": "https://stackoverflow.com/users/8578679/ruifeng-xie"}, "is_accepted": true, "score": 1, "last_activity_date": 1527421830, "creation_date": 1527421830, "answer_id": 50551836, "question_id": 50546248, "link": "https://stackoverflow.com/questions/50546248/emacs-haskell-intero-mode-import-could-not-find-module/50551836#50551836", "title": "Emacs haskell intero mode, import could not find module", "body": "<p>It seems that <code>intero</code> needs a <code>package.yaml</code> and a <code>stack.yaml</code> in order to locate your source files. You can just run <code>stack init</code> or <code>stack new</code> to auto matically generate these project files.<br>\nI met this problem several times. The above method solved my problem on my Windows and Fedora, so I hope this will help you. </p>\n"}, {"tags": [], "owner": {"reputation": 55, "user_id": 4794274, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XrNpg.jpg?s=128&g=1", "display_name": "timokratia", "link": "https://stackoverflow.com/users/4794274/timokratia"}, "is_accepted": false, "score": 1, "last_activity_date": 1527453525, "creation_date": 1527453525, "answer_id": 50556308, "question_id": 50546248, "link": "https://stackoverflow.com/questions/50546248/emacs-haskell-intero-mode-import-could-not-find-module/50556308#50556308", "title": "Emacs haskell intero mode, import could not find module", "body": "<p>With the help of <a href=\"https://stackoverflow.com/a/50551836/4794274\">Krantz's answer</a> and some more reading, the problem is solved by creating a new project with stack so intero knows the location of my source files.\nThus this problem is caused by intero's not knowing where to look for local modules when in <code>intero-global-mode</code> in emacs. \nHere I'll write my own answer here to expand <a href=\"https://stackoverflow.com/users/8578679/krantz\">Krantz</a>'s answer a little more, and to document the process of solving this problem as a beginner to Haskell:</p>\n\n<p>For intero to be able to import local modules, we should avoid using <code>intero-global-mode</code> and instead creating a local project (which in hindsight makes more sense to me). </p>\n\n<p>So in the case of this Homework 2, instead of moving files to a homework folder as described in the question, I'll <code>stack new homework2</code>, and move the sources files into <code>homework2\\src</code>. Then when using emacs to load <code>LogAnalysis.hs</code>, instead of this previous message I got in <strong><code>*intero:global-project::repl*</code></strong>:</p>\n\n<pre><code>Loaded GHCi configuration from /Users/[username]/.stack/global-project/.stack-work/intero/intero-[script]\n</code></pre>\n\n<p>and error message when loading <code>LogAnalysis.hs</code>, I'm now able to get:</p>\n\n<pre><code>Loaded GHCi configuration from /path/to/homework2/.stack-work/intero/intero-[script]\n</code></pre>\n\n<p>in <strong><code>*intero:homework2:homework2:repl*</code></strong>. And using <code>C-c C-l</code> to load <code>LogAnalysis.hs</code> now gets:</p>\n\n<pre><code>[2 of 2] Compiling LogAnalysis      ( /path/to/homework2/src/LogAnalysis.hs, interpreted ) [flags changed]\nOk, two modules loaded.\n</code></pre>\n\n<p>So problem solved.</p>\n"}], "owner": {"reputation": 55, "user_id": 4794274, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/XrNpg.jpg?s=128&g=1", "display_name": "timokratia", "link": "https://stackoverflow.com/users/4794274/timokratia"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1099, "favorite_count": 1, "accepted_answer_id": 50551836, "answer_count": 2, "score": 0, "last_activity_date": 1527453525, "creation_date": 1527362108, "last_edit_date": 1527363210, "question_id": 50546248, "link": "https://stackoverflow.com/questions/50546248/emacs-haskell-intero-mode-import-could-not-find-module", "title": "Emacs haskell intero mode, import could not find module", "body": "<p>Edit: this error occurs only when using emacs haskell mode and intero mode (<code>C-c C-l</code> to load into ghci). It works in command line using <code>stack ghc Log.hs LogAnalysis.hs</code>.</p>\n\n<p>I'm learning Haskell through CIS 194 (Spring 2013), and am running into this problem when doing <a href=\"https://www.seas.upenn.edu/~cis194/spring13/hw/02-ADTs.pdf\" rel=\"nofollow noreferrer\">homework 2</a>. The homework folder is very simple:</p>\n\n<pre><code>homework2\n|-- LogAnalysis.hs\n|-- Log.hs\n|-- error.log\n|-- sample.log\n</code></pre>\n\n<p>Some data types are defined in <code>Log.hs</code>, and need to be imported into <code>LogAnalysis.hs</code>, which is the file I need to work on. The first few lines in <code>LogAnalysis.hs</code> are like this:</p>\n\n<pre><code>{-# OPTIONS_GHC -Wall #-}\nmodule LogAnalysis where\n\nimport Log\n\n-- Exercise 1: parse an individual message\n...\n</code></pre>\n\n<p>However, I got error message like this in my emacs using haskell mode with intero:</p>\n\n<pre><code>error:\n    Could not find module 'Log'\n    Use -v to see a list of the files searched for.\n\n(Hit 'C-c C-r' in the Haskell buffer to apply suggestions.)\n</code></pre>\n\n<p>Same message appears when using 'C-c C-l' to load to ghci within emacs.</p>\n\n<p>But this error doesn't appear when loading <code>LogAnalysis.hs</code> in command line using <code>stack ghci</code>, the message is instead:</p>\n\n<pre><code>Prelude&gt; :l LogAnalysis.hs\n[1 of 2] Compiling Log              ( Log.hs, interpreted )\n[2 of 2] Compiling LogAnalysis      ( LogAnalysis.hs, interpreted )\nOk, two modules loaded.\n*LogAnalysis&gt;\n</code></pre>\n\n<p>So I'm guessing this error has something to do with my emacs' setup of haskell mode and intero mode, but couldn't find any available solution yet.</p>\n\n<p>Thanks for reading this question, your help will be appreciated!</p>\n"}, {"tags": ["haskell", "tree", "instance", "show"], "answers": [{"comments": [{"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1527360880, "post_id": 50545649, "comment_id": 88102961, "body": "No need for <code>concat</code> if you replicate <code>&#39;\\t&#39;</code> instead of <code>&quot;\\t&quot;</code>."}], "tags": [], "owner": {"reputation": 8857, "user_id": 3414900, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/KlvbC.jpg?s=128&g=1", "display_name": "bartop", "link": "https://stackoverflow.com/users/3414900/bartop"}, "is_accepted": true, "score": 2, "last_activity_date": 1527363815, "last_edit_date": 1527363815, "creation_date": 1527357691, "answer_id": 50545649, "question_id": 50545212, "link": "https://stackoverflow.com/questions/50545212/instance-show-tree-in-haskell/50545649#50545649", "title": "Instance show tree in haskell", "body": "<p>You can define a helper function, let's call it <code>showWithDepth</code> like this:</p>\n\n<pre><code>showWithDepth :: (Show a) =&gt; Tree a -&gt; Int -&gt; String\nshowWithDepth Nil _ = \"\"\nshowWithDepth (Leaf e) depth = (replicate depth '\\t') ++ show e ++ \"\\n\"\nshowWithDepth (Branch e ls rs) depth = (replicate depth '\\t') ++ show e ++ \"\\n\" ++ showWithDepth ls (depth+1) ++ showWithDepth rs (depth+1)\n</code></pre>\n\n<p>And now we can simply define Your instance like this:</p>\n\n<pre><code>instance (Show a)=&gt;Show (Tree a) where\nshow x = showWithDepth x 0\n</code></pre>\n"}], "owner": {"reputation": 59, "user_id": 9145502, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0d49506278da2ed920ece4ec03b08631?s=128&d=identicon&r=PG&f=1", "display_name": "Juan Ortega", "link": "https://stackoverflow.com/users/9145502/juan-ortega"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 794, "favorite_count": 0, "accepted_answer_id": 50545649, "answer_count": 1, "score": 2, "last_activity_date": 1527363815, "creation_date": 1527354618, "last_edit_date": 1527359868, "question_id": 50545212, "link": "https://stackoverflow.com/questions/50545212/instance-show-tree-in-haskell", "title": "Instance show tree in haskell", "body": "<p>I'd like to instance show function for my binary tree, constructed this way: <code>data Tree a = Nil | Leaf a | Branch a (Tree a) (Tree a)</code>.\nI'd like to achieve a representation like \"tree\" unix command. For instance:</p>\n\n<p><a href=\"https://i.stack.imgur.com/BJd81.jpg\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/BJd81.jpg\" alt=\"Tree example\"></a></p>\n\n<p>The showing function would be:</p>\n\n<pre><code>&gt; 27\n&gt;&gt; 14\n&gt;&gt;&gt; 10\n\n&gt;&gt;&gt; 19\n\n&gt;&gt; 35\n&gt;&gt;&gt; 31\n\n&gt;&gt;&gt; 42\n</code></pre>\n\n<p>I want to tabulate each \"subtree\" with a recursive function but i don't kwow how this is my actual code:</p>\n\n<pre><code>instance (Show a)=&gt;Show (Tree a) where\nshow Nil = \"\"\nshow (Leaf e) = show e\nshow (Branch e ls rs) = show e ++ \"\\n\\t\" ++ show ls ++ \"\\n\\t\" ++ show rs\n</code></pre>\n\n<p><strong>So the question is: how can i implement a recursive tabulation function, because each time i use new line and tabulate just once instead of subtree depth</strong></p>\n"}, {"tags": ["haskell", "memory"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 4, "creation_date": 1527354793, "post_id": 50545057, "comment_id": 88101418, "body": "In GHCi, <code>&#39;u&#39;</code> alone will already consume some KBs, since it stands for <code>putStrLn (show &#39;u&#39;)</code>, everything is interpreted (unlike in GHC) and no optimization is attempted."}, {"owner": {"reputation": 12941, "user_id": 292731, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/e3f90adedab79538799e2375a9731920?s=128&d=identicon&r=PG", "display_name": "Justin L.", "link": "https://stackoverflow.com/users/292731/justin-l"}, "edited": false, "score": 4, "creation_date": 1527357769, "post_id": 50545057, "comment_id": 88102225, "body": "Test against just <code>&#39;u&#39;</code> alone and compare the memory, to see if <code>fix</code> is the real problem,"}], "owner": {"reputation": 1474, "user_id": 8025936, "user_type": "registered", "accept_rate": 71, "profile_image": "https://i.stack.imgur.com/Kue08.png?s=128&g=1", "display_name": "schuelermine", "link": "https://stackoverflow.com/users/8025936/schuelermine"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 91, "favorite_count": 0, "answer_count": 0, "score": 2, "last_activity_date": 1527353498, "creation_date": 1527353498, "question_id": 50545057, "link": "https://stackoverflow.com/questions/50545057/why-does-fix-take-so-much-memory", "title": "Why does &quot;fix&quot; take so much memory?", "body": "<p>I used this code:</p>\n\n<pre><code>fix' f = let x = f x in x\n</code></pre>\n\n<p>And then ran</p>\n\n<pre><code>&gt; :set +s\n&gt; fix' (const 'u')\n</code></pre>\n\n<p>Only to get:</p>\n\n<pre><code>'u'\n(0.00 secs, 83,512 bytes)\n</code></pre>\n\n<p>Now why does this take so much memory?</p>\n\n<p>I'd evaluate it as follows:</p>\n\n<pre><code>fix' f = let x = f x in x\nfix' (const 'u')\nlet x = const 'u' x in x\nconst _ x = x\nconst 'u' undefined\n'u'\n</code></pre>\n\n<p>This is of course a grossly inefficient format, but only takes 105 bytes in ASCII encoding, plus maybe a bit of memory usage for comparison still wouldn't get to the usage in the <code>fix</code> example.</p>\n"}, {"tags": ["haskell", "google-authenticator", "totp"], "comments": [{"owner": {"reputation": 661, "user_id": 7720738, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HccZv.png?s=128&g=1", "display_name": "James Burton", "link": "https://stackoverflow.com/users/7720738/james-burton"}, "edited": false, "score": 0, "creation_date": 1527348983, "post_id": 50544120, "comment_id": 88099788, "body": "@Carl Ok thanks for that. Even without <code>unpad</code> I don&#39;t get the correct codes, do you have any ideas why that might be happening?"}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1527349128, "post_id": 50544120, "comment_id": 88099831, "body": "I think you want <code>convertFromBase</code>, not <code>convertToBase</code>."}], "answers": [{"comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 1, "creation_date": 1527350712, "post_id": 50544447, "comment_id": 88100267, "body": "It may help to think of it like this: Cryptography is done on arbitrary bytes, but sending arbitrary bytes is often hard. So in transit, the bytes are encoded in some format that allows them to be represented as text - Base32 in this case. But the Base32 format is the transmission format. Use the raw bytes for cryptography."}], "tags": [], "owner": {"reputation": 661, "user_id": 7720738, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HccZv.png?s=128&g=1", "display_name": "James Burton", "link": "https://stackoverflow.com/users/7720738/james-burton"}, "is_accepted": true, "score": 0, "last_activity_date": 1527349398, "creation_date": 1527349398, "answer_id": 50544447, "question_id": 50544120, "link": "https://stackoverflow.com/questions/50544120/interacting-with-google-authenticator-using-cryptonite/50544447#50544447", "title": "Interacting with Google Authenticator Using Cryptonite", "body": "<p>I found the answer to my question in the following question relating to an implementation in Python, <a href=\"https://stackoverflow.com/questions/34001567/google-authenticator-code-does-not-match-server-generated-code?rq=1\">here</a>.</p>\n\n<p>I was correct to convert the <code>secret</code> to base32 before typing it into Google Authenticator, but I didn't know that Google Authenticator converted it back from base32 to the regular secret before generating the code.</p>\n\n<p>If I simply call <code>totp</code> on <code>secret</code> having entered <code>keyBytes</code> to Google Authenticator, I get the matching codes.</p>\n"}], "owner": {"reputation": 661, "user_id": 7720738, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/HccZv.png?s=128&g=1", "display_name": "James Burton", "link": "https://stackoverflow.com/users/7720738/james-burton"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 79, "favorite_count": 0, "accepted_answer_id": 50544447, "answer_count": 1, "score": 1, "last_activity_date": 1527349398, "creation_date": 1527347317, "last_edit_date": 1527348032, "question_id": 50544120, "link": "https://stackoverflow.com/questions/50544120/interacting-with-google-authenticator-using-cryptonite", "title": "Interacting with Google Authenticator Using Cryptonite", "body": "<p>I am trying to generate TOTPs such that I can make use of the Google Authenticator app. I am using the <code>cryptonite</code> library which provides TOTP functionality.</p>\n\n<p>From my understanding, Google Authenticator requires the key in Base32. It also requires the <code>=</code> padding removed. Cryptonite provides an <code>unpad</code> function but I don't really understand how it works and as such can't figure out what the first argument should be, everything I've tried makes the function return <code>Nothing</code>.</p>\n\n<p>For testing purposes I chose a key that would have no padding however, the codes generated by my program do not match those generated by Google Authenticator.</p>\n\n<p>The Base32 key produced by the code is the following:</p>\n\n<p><code>GEZDGNBVGY3TQOJQGEZDGNBVGY3TQOJQ</code></p>\n\n<p>Entering this into Google Authenticator does not produce the same results as my code produces.</p>\n\n<p>Here is my code:</p>\n\n<pre><code>{-# LANGUAGE OverloadedStrings #-}\n\nmodule TOTP\n    ( genTOTP\n    ) where\n\nimport qualified Basement.Imports        as Base (String)\nimport           Crypto.Data.Padding\nimport           Crypto.OTP              (defaultTOTPParams, totp)\nimport           Data.ByteArray\nimport           Data.ByteArray.Encoding\nimport           Data.Time.Clock.POSIX\n\ngenTOTP :: IO ()\ngenTOTP = do\n    time &lt;- getPOSIXTime\n    let secret = \"12345678901234567890\" :: Base.String\n        keyBytes = convertToBase Base32 secret :: Bytes\n        key = keyBytes -- unpad (PKCS7 6) keyBytes -- I don't know what the first argument to unpad should be\n        code = totp defaultTOTPParams key (round time)\n    print code\n</code></pre>\n\n<p>In summary, I am unsure about how to unpad the <code>=</code> bytes from the key. Secondly, when testing with a key that had no padding, I still don't get the correct result.</p>\n\n<p>EDIT: If it helps anyone, I did manage to find someone's implementation of Google Authenticator in Haskell without using <code>cryptonite</code> however, I still wasn't able to figure out why my code doesn't work.\n<a href=\"https://gist.github.com/eungju/10379065\" rel=\"nofollow noreferrer\">Google Authenticator in Haskell</a></p>\n"}, {"tags": ["haskell", "typeclass", "overriding"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1527343709, "post_id": 50543400, "comment_id": 88098286, "body": "Nitpicking: In the code included in the question, <code>S</code> is not a subclass of <code>C</code>. (By the way, though I realise you have posted an example abstracted from your concrete problem -- and so the following remark might be irrelevant -- looking at it I can&#39;t help but wonder if you actually need a subclass relationship. <code>s</code> and <code>m</code> feel a lot like <code>mappend</code> and <code>mconcat</code> from <code>Monoid</code> respectively; if your actual methods are in fact related in a similar way, you probably don&#39;t need subclassing.)"}, {"owner": {"reputation": 436, "user_id": 3273130, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8b6a7fd1336f54f3da8bf99bafac2218?s=128&d=identicon&r=PG", "display_name": "Bolpat", "link": "https://stackoverflow.com/users/3273130/bolpat"}, "reply_to_user": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 0, "creation_date": 1527344374, "post_id": 50543400, "comment_id": 88098468, "body": "About <code>Monoid</code>: The signatures differ. Mine are predicates (ending with <code>Bool</code>), <code>Monoid</code>s are operations."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 1, "creation_date": 1527344477, "post_id": 50543400, "comment_id": 88098492, "body": "<code>override C.m</code> is a comment, right? Please don&#39;t use another language&#39;s syntax."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1527344552, "post_id": 50543400, "comment_id": 88098509, "body": "<code>m</code> is <i>not</i> inherited in any sense. As far as <code>S</code> is currently defined, you cannot assume that <code>T</code> <i>has</i> a <code>C</code> instance, and there is no reason to define <code>m</code> for an instance of <code>S</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1527344663, "post_id": 50543400, "comment_id": 88098543, "body": "What you might want is <code>instance C (T a) where m = (all . uncurry) (=^=) . pairs</code> and <code>instance C (T a) =&gt; S (T a) where s = ...</code>."}, {"owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1527344871, "post_id": 50543400, "comment_id": 88098605, "body": "If you really want <code>S</code> to be a subclass of <code>C</code>, the syntax is <code>class C a =&gt; S a where ...</code> This disallows defining an instance of <code>S</code> for a type unless it is also an instance of <code>C</code>. (See <code>Eq</code> and <code>Ord</code> as an example.)"}, {"owner": {"reputation": 436, "user_id": 3273130, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8b6a7fd1336f54f3da8bf99bafac2218?s=128&d=identicon&r=PG", "display_name": "Bolpat", "link": "https://stackoverflow.com/users/3273130/bolpat"}, "reply_to_user": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "edited": false, "score": 0, "creation_date": 1527345253, "post_id": 50543400, "comment_id": 88098711, "body": "@chepner, I fixed the code to match the text."}], "answers": [{"comments": [{"owner": {"reputation": 436, "user_id": 3273130, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8b6a7fd1336f54f3da8bf99bafac2218?s=128&d=identicon&r=PG", "display_name": "Bolpat", "link": "https://stackoverflow.com/users/3273130/bolpat"}, "edited": false, "score": 0, "creation_date": 1527375927, "post_id": 50547358, "comment_id": 88106042, "body": "Do I have to define <code>isCoherent</code> to be anything? The compiler generates warnings for omitting the definition. In your example instance, you didn&#39;t."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 436, "user_id": 3273130, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8b6a7fd1336f54f3da8bf99bafac2218?s=128&d=identicon&r=PG", "display_name": "Bolpat", "link": "https://stackoverflow.com/users/3273130/bolpat"}, "edited": false, "score": 0, "creation_date": 1527383790, "post_id": 50547358, "comment_id": 88107262, "body": "@Bolpat, yes you do, I added an example of defining it."}], "tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": true, "score": 5, "last_activity_date": 1527383780, "last_edit_date": 1527383780, "creation_date": 1527372149, "answer_id": 50547358, "question_id": 50543400, "link": "https://stackoverflow.com/questions/50543400/optimize-superclass-method-depending-on-subclass/50547358#50547358", "title": "Optimize Superclass Method Depending on Subclass", "body": "<p>It's a good question.  One thing to remember is that whether a data type is an instance of a typeclass is <em>compile-time only</em> information -- i.e. we are always able to choose which instance to use using statically available information at the use site, and polymorphism comes from being able to choose an instance from the context. In general, if you ask \"is <code>a</code> a member of typeclass <code>B</code>?\", the only answers you can get are \"yes\" and \"compile error\".   (This second observation is changed a bit by <code>OverlappingInstances</code>, but it doesn't seem to help in your case)</p>\n\n<p>So the answer to your immediate question is <em>no</em>.  You can't make a decision about a type's membership in a type class unless you are a method of that type class.  What we can do is add this decision as a method (using the <a href=\"https://hackage.haskell.org/package/constraints-0.10\" rel=\"nofollow noreferrer\"><code>constraints</code></a> package)</p>\n\n<pre><code>import Data.Constraint\n\nclass Model a where\n    con :: [a] -&gt; Bool\n    isCoherent :: Maybe (Dict (CoherentModel a))\n    isCoherent = Nothing\n</code></pre>\n\n<p>Which you can define trivially for any type you have instantiated <code>CoherentModel</code> at:</p>\n\n<pre><code>instance Model Foo where\n    con = ...\n    isCoherent = Just Dict\n</code></pre>\n\n<p>Now you can implement your decision like this (w/ extensions <code>ScopedTypeVariables</code> and <code>TypeApplications</code>):</p>\n\n<pre><code>instance (Model a, Model b) =&gt; Model (Arrow a b) where\n    con | Just Dict &lt;- isCoherent @b = -- efficient implementation\n        | otherwise                  = -- inefficient implementation\n</code></pre>\n\n<p>In the body of the first case we will have a local <code>CoherentModel b</code> in the context.  It's kind of cool.</p>\n\n<p>Too bad we have a sort of <a href=\"http://wiki.c2.com/?ExpressionProblem\" rel=\"nofollow noreferrer\">expression problem</a> here where all the different implementations of <code>con</code> need to be collected up into one place.  Also too bad <code>isCoherent</code> needs to be implemented manually on each coherent <code>Model</code> instance, separate from where its <code>CoherentModel</code> instance is.</p>\n\n<p>There is a lot to explore here but I have to go.  Good luck!</p>\n"}], "owner": {"reputation": 436, "user_id": 3273130, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8b6a7fd1336f54f3da8bf99bafac2218?s=128&d=identicon&r=PG", "display_name": "Bolpat", "link": "https://stackoverflow.com/users/3273130/bolpat"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 106, "favorite_count": 0, "accepted_answer_id": 50547358, "answer_count": 1, "score": 8, "last_activity_date": 1527565598, "creation_date": 1527342178, "last_edit_date": 1527565598, "question_id": 50543400, "link": "https://stackoverflow.com/questions/50543400/optimize-superclass-method-depending-on-subclass", "title": "Optimize Superclass Method Depending on Subclass", "body": "<p>Can I provide a refined implementation (aka. override in OOP) of a method in a class instance, when the type is in another class, too? Or at least, if that other class is a subclass.</p>\n\n<p>I have a class <code>C</code> with method <code>m</code>, a subclass <code>S</code> of <code>C</code> with method <code>s</code> and a type <code>T a</code> so there are instantiations</p>\n\n<pre><code>class C a where m :: [a] -&gt; Bool\nclass C a =&gt; S a where s :: a -&gt; a -&gt; Bool\ninstance C a =&gt; C (T a) where m = ...\ninstance S a =&gt; S (T a) where s = ...\n</code></pre>\n\n<p>as usual.\nNow it happens to be that when <code>T a</code> is in the subclass (which I cannot know as it depends on <code>a</code>), method <code>m</code> could be implemented much more efficient (quadratic vs. exponential time) using <code>s</code>.</p>\n\n<p>I tried 'overriding' <code>m</code> in the implementation</p>\n\n<pre><code>instance S a =&gt; S (T a) where\n    s = ...\n    m = (all . uncurry) (=^=) . pairs -- override C.m\n</code></pre>\n\n<p>but the compiler errors basically because, <code>m</code> is not a public method of <code>S</code>. Well, it is not, but it's inherited in the OO sense.</p>\n\n<p>For the specific purpose, the specialized version of <code>m</code> can be used for all instances; it's not a default to be overridden anywhere.</p>\n\n<hr>\n\n<p><strong>Edit:</strong> Because requested, the concrete code with a bit of explanation.</p>\n\n<p>I have a class <code>Model</code> which has (among others) a method <code>con</code> that checks a list for consistency.</p>\n\n<pre><code>class Model a where\n    con :: [a] -&gt; Bool\n</code></pre>\n\n<p>Two models can form an arrow model.</p>\n\n<pre><code>data Arrow a b = [a] :-&gt;: b\nlhs w = [ a | (u :-&gt;: _) &lt;- w, a &lt;- u ]\nrhs w = [ b | (_ :-&gt;: b) &lt;- w ]\n</code></pre>\n\n<p>For the specific instance <code>Model (Arrow a b)</code>, the general <code>con</code> implementation is very expensive (note <code>powerset</code> in the definition).</p>\n\n<pre><code>instance (Model a, Model b) =&gt; Model (Arrow a b) where\n    con w = all (\\w' -&gt; con (lhs w') `implies` con (rhs w')) (powerset w)\n</code></pre>\n\n<p>There is a subclass <code>CoherentModel</code> of <code>Model</code> which has a method <code>(=^=)</code> that checks consistency for two objects. The condition for coherent models is that a list is consistent iff all pairs are.</p>\n\n<pre><code>class Model a =&gt; CoherentModel a where\n    (=^=) :: a -&gt; a -&gt; Bool\n    a =^= b = con [a, b]\n</code></pre>\n\n<p>The class <code>CoherentModel</code> is at this point more documentation than a feature.</p>\n\n<p>So, given that a model is coherent, consistency is much more efficient to check.</p>\n\n<pre><code>instance (Model a, CoherentModel b) =&gt; CoherentModel (Arrow a b) where\n    (u :-&gt;: a) =^= (v :-&gt;: b) = con (u ++ v) `implies` a =^= b\n</code></pre>\n\n<p>And in this case, <code>con</code> can be implemented using</p>\n\n<pre><code>con = (all . uncurry) (=^=) . pairs\n  where\n    pairs :: [a] -&gt; [(a,a)]\n    pairs [] = []\n    pairs [_] = []\n    pairs [x,y] = [(x,y)]\n    pairs (x:xs) = map ((,) x) xs ++ pairs xs\n</code></pre>\n\n<p>but I find no way to specify this. It's not only for <code>Arrow</code>, it's relevant for all models with parameter. I chose <code>Arrow</code> because the improvement is significant.</p>\n"}, {"tags": ["haskell", "lambda", "types"], "comments": [{"owner": {"reputation": 5397, "user_id": 2193020, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/aa10d01a3d48851073bd61877a56b5a7?s=128&d=identicon&r=PG", "display_name": "hnefatl", "link": "https://stackoverflow.com/users/2193020/hnefatl"}, "edited": false, "score": 0, "creation_date": 1527342240, "post_id": 50543369, "comment_id": 88097880, "body": "<code>(\\_ x -&gt; x)PushK 5</code> doesn&#39;t do what you think it does. The <code>_</code> is matched with <code>PushK</code>, and <code>x</code> is matched with <code>5</code>. Try <code>(\\_ x -&gt; x)(PushK 5)</code>, you&#39;ll see an error. What you probably mean is <code>(\\(PushK x) -&gt; x)(PushK 5)</code>"}, {"owner": {"reputation": 33, "user_id": 5025710, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/acb64faff7a45bfbf8a80a26fd491192?s=128&d=identicon&r=PG&f=1", "display_name": "diesdas ananas", "link": "https://stackoverflow.com/users/5025710/diesdas-ananas"}, "reply_to_user": {"reputation": 5397, "user_id": 2193020, "user_type": "registered", "accept_rate": 82, "profile_image": "https://www.gravatar.com/avatar/aa10d01a3d48851073bd61877a56b5a7?s=128&d=identicon&r=PG", "display_name": "hnefatl", "link": "https://stackoverflow.com/users/2193020/hnefatl"}, "edited": false, "score": 0, "creation_date": 1527342388, "post_id": 50543369, "comment_id": 88097929, "body": "i know of the error that returns from: (_ x -&gt; x)(PushK 5)  Tried to to ignore it but i guess its more relevant than i thought!"}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": false, "score": 4, "last_activity_date": 1527342719, "last_edit_date": 1527342719, "creation_date": 1527342240, "answer_id": 50543412, "question_id": 50543369, "link": "https://stackoverflow.com/questions/50543369/accessing-self-defined-datatypes-lambda-function-application-order/50543412#50543412", "title": "Accessing self-defined Datatypes - Lambda function application order", "body": "<p>You unwrap values out of a data constructor by using <em>pattern matching</em>, or by defining <em>record syntax</em> (in which case Haskell generates the getters itself).</p>\n\n<h1>Pattern matching</h1>\n\n<p>Since here the type is <em>not</em> defined as record, we thus have to use pattern matching:</p>\n\n<pre><code>getK :: Cmd -&gt; Int\ngetK (PushK x) = x\n-- ...\n</code></pre>\n\n<p>and probably you need to handle the cases of another data constructor.</p>\n\n<p>We can also perform this pattern matching with a lambda expression:</p>\n\n<pre><code>(\\(PushK x) -&gt; x) (PushK 5)\n</code></pre>\n\n<h1>Records</h1>\n\n<p>We can also define the command as a record:</p>\n\n<pre><code>data Cmd = PushK { k :: Int } | Pop | Push { p :: Int } deriving (Eq,Show)\n</code></pre>\n\n<p>Now Haskell has generated two functions <code>k :: Cmd -&gt; Int</code> and <code>p :: Cmd -&gt; Int</code> automatically, so in that case we can write:</p>\n\n<pre><code>k (PushK 5)\n</code></pre>\n\n<p>which will return <code>5</code>.</p>\n\n<h1>Why did <code>(\\_ x -&gt; x) PushK 5</code> return <code>5</code>?</h1>\n\n<p>In Haskell functions are <em>first class citizens</em>. That means you can pass functions as arguments, return them as result. You here did <em>not</em> constructed a <code>Cmd</code>.</p>\n\n<p>In fact <code>PushK</code> is a <em>data constructor</em>, and a function (with type <code>Int -&gt; Cmd</code>), you thus called the lambda expression with <em>two</em> parameters: the first one is the <code>pushK</code>, and the second is <code>5</code>. You simply omit the first parameter, and retun the second <code>x</code>.</p>\n\n<p>But it is thus derived as:</p>\n\n<pre><code>   (\\y x -&gt; x) PushK 5\n=  ((\\y -&gt; (\\x -&gt; x)) PushK) 5    -- (more verbose version)\n-&gt; (\\x -&gt; x) 5\n-&gt; 5\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 1, "last_activity_date": 1527350809, "creation_date": 1527350809, "answer_id": 50544647, "question_id": 50543369, "link": "https://stackoverflow.com/questions/50543369/accessing-self-defined-datatypes-lambda-function-application-order/50544647#50544647", "title": "Accessing self-defined Datatypes - Lambda function application order", "body": "<p>You may want to define a single <em>catamorphism</em> to deconstruct an arbitrary <code>Cmd</code> value.</p>\n\n<pre><code>cmdCata :: (Int -&gt; a)  -- Function to apply to x in (PushK x)\n        -&gt; a           -- Value to replace Pop\n        -&gt; (Int -&gt; a)  -- Function to apply to x in (Push x)\n        -&gt; Cmd         -- The value to deconstruct\n        -&gt; a           -- The result\ncmdCata f _ _ (PushK x) = f x\ncmdCata _ x _ Pop       = x\ncmdCata _ _ f (Push x)  = f x\n</code></pre>\n\n<p>It takes two functions and a default value (for <code>Pop</code>) to turn <em>any</em> <code>Cmd</code> value into a value of type <code>a</code>. The following extracts the value wrapped by <code>PushK</code> or <code>Push</code> and rewraps it with <code>Just</code> (the function for <code>PushK</code> doing a little extra work just to show the difference between <code>PushK</code> and <code>Push</code>), and replaces <code>Pop</code> with <code>Nothing</code>.</p>\n\n<pre><code>&gt; cmdCata (Just . (+3)) Nothing Just (PushK 5)\nJust 8  -- 5 + 3\n&gt; cmdCata (Just . (+3)) Nothing Just Pop\nNothing\n&gt; cmdCata (Just . (+3)) Nothing Just (Push 20)\nJust 20\n</code></pre>\n\n<p>Or if you just want an integer and a default value for <code>Pop</code> is fine:</p>\n\n<pre><code>&gt; cmdCata id 0 id (PushK 5)\n5\n&gt; cmdCata id 0 id Pop\n0\n&gt; cmdcata id 0 id (Push 3)\n3\n</code></pre>\n\n<p>Compare <code>cmdCata</code> to <code>Data.Maybe.maybe</code>, and think of what functions analogous to <code>Data.Maybe.fromJust</code>, <code>Data.Maybe.catMaybes</code>, etc, could be defined for your <code>Cmd</code> type.</p>\n"}], "owner": {"reputation": 33, "user_id": 5025710, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/acb64faff7a45bfbf8a80a26fd491192?s=128&d=identicon&r=PG&f=1", "display_name": "diesdas ananas", "link": "https://stackoverflow.com/users/5025710/diesdas-ananas"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 137, "favorite_count": 0, "answer_count": 2, "score": 0, "last_activity_date": 1527350809, "creation_date": 1527341899, "last_edit_date": 1527347219, "question_id": 50543369, "link": "https://stackoverflow.com/questions/50543369/accessing-self-defined-datatypes-lambda-function-application-order", "title": "Accessing self-defined Datatypes - Lambda function application order", "body": "<p>Got this:</p>\n\n<pre><code>data Cmd = PushK Int | Pop | Push Int\n         deriving (Eq,Show)\n\ntype StackProgram = [Cmd]\n</code></pre>\n\n<p><strong>Question:</strong>\nHow can I access the <code>Int</code> value of <code>PushK</code>?</p>\n\n<hr>\n\n<pre><code>&gt; head [PushK 5, Pop]\nPushK 5  -- Great!\n\n&gt; (\\_ x -&gt; x)PushK 5\n5 -- Great!\n\n&gt; (\\_ x -&gt; x)(head [PushK 5, Pop])\nCouldn't match expected type `t1 -&gt; t' with actual type `Cmd'\n</code></pre>\n\n<p>Anyone have a solution?</p>\n"}, {"tags": ["list", "haskell"], "comments": [{"owner": {"reputation": 20427, "user_id": 2570261, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e71068b09fc539447a0cee3e99fc419d?s=128&d=identicon&r=PG&f=1", "display_name": "Haleemur Ali", "link": "https://stackoverflow.com/users/2570261/haleemur-ali"}, "edited": false, "score": 0, "creation_date": 1527336916, "post_id": 50541358, "comment_id": 88096475, "body": "do you want to keep the odd numbers in the output?, i.e. should <code>tripleEven [1,2,3,4]</code> be <code>[6,12]</code> or <code>[1,6,3,12]</code>"}], "answers": [{"tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 3, "last_activity_date": 1527328791, "creation_date": 1527328791, "answer_id": 50541524, "question_id": 50541358, "link": "https://stackoverflow.com/questions/50541358/how-to-triple-even-numbers-in-a-list/50541524#50541524", "title": "How to triple even numbers in a list?", "body": "<p>There are a few problems here:</p>\n\n<ol>\n<li>you use <code>[x:xs]</code> as the non-empty list pattern. A list however has two <em>data constructors</em>: <code>[]</code> and <code>(x:xs)</code> (note the round brackets, in fact the brackets are not really part of the constructor, it is only the colon operator <code>(:)</code>);</li>\n<li>at the right side, you need to construct a new list. With <code>triple x tripleEven xs</code>, you do not construct a new list: you first calculate <code>triple x</code>, and then Haskell aims to perform a function call with that value as function.</li>\n<li>you also omit odd values: in case the value is <code>odd</code>, you perform recursion on the list, hence you do not put these into the result.</li>\n</ol>\n\n<p>We can fix the issues into:</p>\n\n<pre><code>tripleEven :: [Int] -&gt; [Int]\ntripleEven [] = []\ntripleEven <b>(x:xs)</b> | even x = <b>(3*x) : tripleEven xs</b>\n                  | otherwise = <b>x : tripleEven xs</b></code></pre>\n\n<p>But here you basically perform a <em>mapping</em>: you can call the function to every element of the list, so we can construct a special mapping function with:</p>\n\n<pre><code>tripleEven :: [Int] -&gt; [Int]\ntripleEven = map <b>f</b>\n    where <b>f x | even x = 3 * x\n              | otherwise = x</b></code></pre>\n"}, {"comments": [{"owner": {"reputation": 936, "user_id": 4884579, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/b0fca1fac3b94fed8f0291116e9b4ef6?s=128&d=identicon&r=PG&f=1", "display_name": "Erik", "link": "https://stackoverflow.com/users/4884579/erik"}, "edited": false, "score": 0, "creation_date": 1527334670, "post_id": 50541578, "comment_id": 88095841, "body": "I don&#39;t think that OP wanted the odd numbers to be removed from the output."}, {"owner": {"reputation": 20427, "user_id": 2570261, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e71068b09fc539447a0cee3e99fc419d?s=128&d=identicon&r=PG&f=1", "display_name": "Haleemur Ali", "link": "https://stackoverflow.com/users/2570261/haleemur-ali"}, "edited": false, "score": 1, "creation_date": 1527336838, "post_id": 50541578, "comment_id": 88096453, "body": "I interpreted &quot;If it is odd then move to the next number till the end&quot; as skip odd numbers, but I see how it can be interpreted differently"}], "tags": [], "owner": {"reputation": 20427, "user_id": 2570261, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e71068b09fc539447a0cee3e99fc419d?s=128&d=identicon&r=PG&f=1", "display_name": "Haleemur Ali", "link": "https://stackoverflow.com/users/2570261/haleemur-ali"}, "is_accepted": false, "score": 3, "last_activity_date": 1527333889, "last_edit_date": 1527333889, "creation_date": 1527329242, "answer_id": 50541578, "question_id": 50541358, "link": "https://stackoverflow.com/questions/50541358/how-to-triple-even-numbers-in-a-list/50541578#50541578", "title": "How to triple even numbers in a list?", "body": "<p>Here's a recursive way to write the function where I just fixed the bugs that I noticed in your code.</p>\n\n<pre><code>tripleEven :: [Int] -&gt; [Int]\ntripleEven [] -&gt; []\ntripleEven (x: xs) = case mod x 2 of\n  0 -&gt; (3*x) : tripleEven xs\n  _ -&gt; tripleEven xs\n\ntripleEven [1,2,3,4]\n# outputs\n[6, 12]\n</code></pre>\n\n<p><code>TripleEven</code> can also be considered as a <code>map</code> &amp; <code>filter</code> operation or a list comprehension</p>\n\n<pre><code>tripleEven xs = map (*3) $ filter even xs\ntripleEven xs = [x*3 | x &lt;- xs, even x]\n</code></pre>\n\n<p>Finally, if you want to define <code>triple</code> in a where clause:</p>\n\n<pre><code>tripleEven :: [Int] -&gt; [Int]\ntripleEven [] = []\ntripleEven (x: xs) = case mod x 2 of\n  0 -&gt; trip x : tripleEven xs\n         where trip = (*3)    \n  _ -&gt; tripleEven xs\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 18798, "user_id": 4543207, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8ed6f11c827fa7cef811f141a84cc14b?s=128&d=identicon&r=PG&f=1", "display_name": "Redu", "link": "https://stackoverflow.com/users/4543207/redu"}, "is_accepted": false, "score": 0, "last_activity_date": 1527775788, "creation_date": 1527775788, "answer_id": 50626318, "question_id": 50541358, "link": "https://stackoverflow.com/questions/50541358/how-to-triple-even-numbers-in-a-list/50626318#50626318", "title": "How to triple even numbers in a list?", "body": "<p>List type is a functor and also monad. So i believe the proper way of doing this job is just using <code>fmap :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b</code> over the list. However only for the list type we already have the <code>map :: (a -&gt; b) -&gt; [a] -&gt; [b]</code> function which is exactly the same of <code>fmap</code>.</p>\n\n<p>So;</p>\n\n<pre><code>Prelude&gt; let trev = map (\\n -&gt; if even n then n*3 else n)\nPrelude&gt; trev [1,2,3,4]\n[1,6,3,12]\n</code></pre>\n\n<p>should do the job perfectly and it's aready been mentioned.</p>\n\n<p>We can handle this task from a monadic perspective as well. Then we need a monadic function to run through our list elements. What makes our lambda function monadic here is the <code>return</code> instructions.</p>\n\n<pre><code>Prelude&gt; let trev ns = ns &gt;&gt;= \\n -&gt; if even n then return (n*3) else return n\nPrelude&gt; trev [1,2,3,4]\n[1,6,3,12]\n</code></pre>\n"}], "owner": {"reputation": 53, "user_id": 9573782, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-_PLDg0WL0G4/AAAAAAAAAAI/AAAAAAAABVM/rkO3KRgRlEs/photo.jpg?sz=128", "display_name": "Mikhail", "link": "https://stackoverflow.com/users/9573782/mikhail"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 135, "favorite_count": 0, "accepted_answer_id": 50541524, "answer_count": 3, "score": 2, "last_activity_date": 1527775788, "creation_date": 1527327490, "last_edit_date": 1527337050, "question_id": 50541358, "link": "https://stackoverflow.com/questions/50541358/how-to-triple-even-numbers-in-a-list", "title": "How to triple even numbers in a list?", "body": "<pre><code>tripleEven :: [Int] -&gt; [Int]\ntripleEven list = case list of\n    []     -&gt; []\n    [x:xs]\n        | (x `mod` 2) == 0 = triple x tripleEven xs\n        | otherwise        = tripleEven xs\n            where triple = (3*)\n</code></pre>\n\n<p>I keep getting the following error:</p>\n\n<pre><code>    parse error on input `='\n    Perhaps you need a 'let' in a 'do' block?\n    e.g. 'let x = 5' instead of 'x = 5'\n   |\n71 |         | (x `mod` 2) == 0 = triple x tripleEven xs\n</code></pre>\n\n<p>I want it to go through a list and if number is even then triple it. If it is odd then move to the next number till the end. I am new to Haskell and only learning syntax. Would be glad if someone could explain what exactly is wrong here. Thank you.</p>\n"}, {"tags": ["haskell", "monads"], "comments": [{"owner": {"reputation": 31243, "user_id": 2751851, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/4ddc0.png?s=128&g=1", "display_name": "duplode", "link": "https://stackoverflow.com/users/2751851/duplode"}, "edited": false, "score": 1, "creation_date": 1527337549, "post_id": 50539734, "comment_id": 88096655, "body": "Relevant opinionated reading: <a href=\"https://markkarpov.com/post/free-monad-considered-harmful.html\" rel=\"nofollow noreferrer\"><i>Free monad considered harmful</i></a>, by Mark Karpov. See also <a href=\"https://www.reddit.com/r/haskell/comments/72th9v/free_monad_considered_harmful/\" rel=\"nofollow noreferrer\">this discussion thread about that blog post</a>."}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1527340515, "post_id": 50542577, "comment_id": 88097425, "body": "There is at least one practical advantage: you can have two implementations of a single collection of effects, e.g. one which is used in the production code and one which is a simplified mockup to use for testing."}, {"owner": {"reputation": 7268, "user_id": 2303202, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/iT9aU.png?s=128&g=1", "display_name": "max630", "link": "https://stackoverflow.com/users/2303202/max630"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1527341569, "post_id": 50542577, "comment_id": 88097702, "body": "Doesn&#39;t mtl provide <code>MonadState</code> class etc.?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1527346313, "post_id": 50542577, "comment_id": 88098998, "body": "Sure, but <code>MonadIO</code> in particular is very difficult to mock."}, {"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "edited": false, "score": 0, "creation_date": 1527588578, "post_id": 50542577, "comment_id": 88172413, "body": "One advantage of the freer monad is that you can have multiple implementations of the same monadic actions, and choose which one you want dynamically."}, {"owner": {"reputation": 7268, "user_id": 2303202, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/iT9aU.png?s=128&g=1", "display_name": "max630", "link": "https://stackoverflow.com/users/2303202/max630"}, "reply_to_user": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "edited": false, "score": 0, "creation_date": 1527596013, "post_id": 50542577, "comment_id": 88177342, "body": "@MathematicalOrchid this is very nice to hear. Probably it would make sense to describe it with example as another answer, I&#39;d be interested to read too."}, {"owner": {"reputation": 58792, "user_id": 1006010, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/f683d229f3673c9dcc3f3f2796d75c09?s=128&d=identicon&r=PG", "display_name": "MathematicalOrchid", "link": "https://stackoverflow.com/users/1006010/mathematicalorchid"}, "edited": false, "score": 0, "creation_date": 1527605004, "post_id": 50542577, "comment_id": 88183567, "body": "@max630 It&#39;s interesting, but I&#39;m not sure how relevant it is to the original question."}, {"owner": {"reputation": 9895, "user_id": 452775, "user_type": "registered", "accept_rate": 63, "profile_image": "https://www.gravatar.com/avatar/88963e7cc58eabf150447e7b78a24793?s=128&d=identicon&r=PG", "display_name": "Lii", "link": "https://stackoverflow.com/users/452775/lii"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1527853810, "post_id": 50542577, "comment_id": 88295628, "body": "@DanielWagner, @max360: One way to solve this is to create a wrapper monad around the <code>IO</code> monad, which is used in place of <code>IO</code> but only expose some of the things from <code>IO</code> that are used by the application. Then it is easy to create a mock of the wrapper monad."}], "tags": [], "owner": {"reputation": 7268, "user_id": 2303202, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/iT9aU.png?s=128&g=1", "display_name": "max630", "link": "https://stackoverflow.com/users/2303202/max630"}, "is_accepted": false, "score": 1, "last_activity_date": 1527853406, "last_edit_date": 1527853406, "creation_date": 1527336262, "answer_id": 50542577, "question_id": 50539734, "link": "https://stackoverflow.com/questions/50539734/what-is-the-free-monads-vs-mtl-debate/50542577#50542577", "title": "What is the free monads vs mtl debate?", "body": "<p>Probably they in fact mean Freer monad (<a href=\"http://okmij.org/ftp/Haskell/extensible/more.pdf\" rel=\"nofollow noreferrer\">paper</a>, <a href=\"https://hackage.haskell.org/package/freer\" rel=\"nofollow noreferrer\">package</a>) which are, as far as I understand, basically same thing as monad transformers with slightly another interface and having some some part of their implementation shared.</p>\n\n<p>It has only one monadic type <code>Eff r v</code>, where <code>r</code> is a magical type which, as far as I understand, is a heterogenous list of stored data. To add a new transformer, you only need to define its core logic, and you don't have to define any new instances.</p>\n\n<p>This is, for example, how much is needed to define State (the code is copypasted from <a href=\"https://hackage.haskell.org/package/freer-0.2.4.1/docs/src/Control-Monad-Freer-State.html\" rel=\"nofollow noreferrer\">package</a> and subject to its license, BSD-3-Clause):</p>\n\n<pre><code>data State s v where\n  Get :: State s s\n  Put :: !s -&gt; State s ()\n\nget :: Member (State s) r =&gt; Eff r s\nget = send Get\n\nput :: Member (State s) r =&gt; s -&gt; Eff r ()\nput s = send (Put s)\n\nrunState :: Eff (State s ': r) w -&gt; s -&gt; Eff r (w,s)\nrunState (Val x) s = return (x,s)\nrunState (E u q) s = case decomp u of\n  Right Get      -&gt; runState (qApp q s) s\n  Right (Put s') -&gt; runState (qApp q ()) s'\n  Left  u'       -&gt; E u' (tsingleton (\\x -&gt; runState (qApp q x) s))\n</code></pre>\n\n<p>I'm not sure if this way offers any practical advantage over monad transformers, as they are already written.</p>\n"}], "owner": {"reputation": 1818, "user_id": 1955231, "user_type": "registered", "accept_rate": 22, "profile_image": "https://graph.facebook.com/100002848311925/picture?type=large", "display_name": "Agnishom Chattopadhyay", "link": "https://stackoverflow.com/users/1955231/agnishom-chattopadhyay"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 879, "favorite_count": 1, "answer_count": 1, "score": 5, "last_activity_date": 1527853406, "creation_date": 1527313742, "question_id": 50539734, "link": "https://stackoverflow.com/questions/50539734/what-is-the-free-monads-vs-mtl-debate", "title": "What is the free monads vs mtl debate?", "body": "<p>I have seen <a href=\"https://stackoverflow.com/questions/13352205/what-are-free-monads\">this</a> post which gives sort of an abstract characterization of what free monads are. I also understand what Monad Transformers are, and I understand (to some extent) why they could be useful.</p>\n\n<p>I am not aware of what free monads are used for or what monad transformer libraries are. I have also heard about the <a href=\"https://youtu.be/7NB8tMa8sUk?t=27m54s\" rel=\"noreferrer\">mtl vs free monad debate</a>, but I am not sure what it is, as I cannot find any discussion on the internet about this.</p>\n\n<p>Can somebody explain what is this controversy about?</p>\n"}, {"tags": ["haskell", "visual-studio-code", "haskell-stack", "intero", "haskero"], "answers": [{"tags": [], "owner": {"reputation": 3075, "user_id": 1164871, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d6a54a3752ab47170d790085935988f?s=128&d=identicon&r=PG", "display_name": "mgsloan", "link": "https://stackoverflow.com/users/1164871/mgsloan"}, "is_accepted": false, "score": 1, "last_activity_date": 1527290552, "creation_date": 1527290552, "answer_id": 50537928, "question_id": 50537331, "link": "https://stackoverflow.com/questions/50537331/haskero-fails-with-not-a-valid-unicode-code-point/50537928#50537928", "title": "Haskero fails with &quot;Not a valid Unicode code point!&quot;", "body": "<p>Probably not a locale issue, but it's conceivable, if that's the case then it's a GHC bug.</p>\n\n<p>One thing to try is <code>rm -r .stack/programs/x86_64-linux/ghc-8.2.2</code>.  Stack keeps around the tarball, so it shouldn't need to redownload, will just re-unpack.</p>\n\n<p>If that doesn't work, then it might also be worthwhile to delete the tarball, and try redownloading.  That <em>really</em> shouldn't be necessary, though, because it checks the hash after download.</p>\n"}, {"tags": [], "owner": {"reputation": 7230, "user_id": 788337, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/wiVpx.png?s=128&g=1", "display_name": "jmite", "link": "https://stackoverflow.com/users/788337/jmite"}, "is_accepted": true, "score": 5, "last_activity_date": 1527306159, "creation_date": 1527306159, "answer_id": 50539136, "question_id": 50537331, "link": "https://stackoverflow.com/questions/50537331/haskero-fails-with-not-a-valid-unicode-code-point/50539136#50539136", "title": "Haskero fails with &quot;Not a valid Unicode code point!&quot;", "body": "<p>I think the problem was that my system wide Intero was compiled with a different GHC version than my project was using.</p>\n\n<p>Running <code>stack install intero</code> in my project directory fixed the problem.</p>\n"}], "owner": {"reputation": 7230, "user_id": 788337, "user_type": "registered", "accept_rate": 70, "profile_image": "https://i.stack.imgur.com/wiVpx.png?s=128&g=1", "display_name": "jmite", "link": "https://stackoverflow.com/users/788337/jmite"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 319, "favorite_count": 1, "accepted_answer_id": 50539136, "answer_count": 2, "score": 3, "last_activity_date": 1527306159, "creation_date": 1527285427, "question_id": 50537331, "link": "https://stackoverflow.com/questions/50537331/haskero-fails-with-not-a-valid-unicode-code-point", "title": "Haskero fails with &quot;Not a valid Unicode code point!&quot;", "body": "<p>I'm trying to run Haskero to do Haskell editing with VSCode. However, it's failing on initialization, with the following error:</p>\n\n<pre><code>Initializing Haskero...\nSpawning process 'stack' with command 'stack ghci --with-ghc intero \"--ghci-options=-ignore-dot-ghci -Wall\" --no-build --no-load'\n(node:3726) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): TypeError: reason.indexOf is not a function\n(node:3726) DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.\n</code></pre>\n\n<p>When I run the command from the error in the console, I get the following error:</p>\n\n<pre><code>$ stack ghci --with-ghc intero \"--ghci-options=-ignore-dot-ghci -Wall\" --no-build --no-load\nThe following GHC options are incompatible with GHCi and have not been passed to it: -O2\nConfiguring GHCi with the following packages: lambda-pi-plus\nIntero 0.1.23 (GHC 8.0.2)\nType :intro and press enter for an introduction of the standard commands.\n\n/home/joey/.stack/programs/x86_64-linux/ghc-8.2.2/lib/ghc-8.2.2/package.conf.d/package.cache: GHC.PackageDb.readPackageDb: inappropriate type (Not a valid Unicode code point!)\n</code></pre>\n\n<p>Google searching seems to indicate that this might be related to GHC versions, but I haven't found anything definitive.</p>\n\n<p>Is this a known issue? Is there a configuration to change that would fix this? Might this be related to a locale error? </p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 8857, "user_id": 3414900, "user_type": "registered", "accept_rate": 33, "profile_image": "https://i.stack.imgur.com/KlvbC.jpg?s=128&g=1", "display_name": "bartop", "link": "https://stackoverflow.com/users/3414900/bartop"}, "edited": false, "score": 1, "creation_date": 1527278363, "post_id": 50535973, "comment_id": 88084219, "body": "This makes sense, because as far as I understand Your code the x is of type <code>a</code>. And so, in the first version bind can return either <code>ParseResult a</code> (in <code>then x</code>) or &#39;ParseResult b` (from <code>parse (f a) i</code>)"}], "answers": [{"tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": true, "score": 12, "last_activity_date": 1527278585, "creation_date": 1527278585, "answer_id": 50536121, "question_id": 50535973, "link": "https://stackoverflow.com/questions/50535973/type-checking-in-if-then-else-expressions/50536121#50536121", "title": "Type checking in If-then-else expressions", "body": "<p>Compare:</p>\n\n<pre><code>data Boring a = Boring\n\ndoesn'tTypeCheck :: Boring a -&gt; Boring b\ndoesn'tTypeCheck x = x\n\ndoesTypeCheck :: Boring a -&gt; Boring b\ndoesTypeCheck Boring = Boring\n</code></pre>\n\n<p>Your situation is analogous: though your error result <code>x</code> probably doesn't actually have any <code>a</code> values inside, its type is still tagged with <code>a</code>. You'll need to \"retag\" it with <code>b</code>. It's probably cleanest to do this by switching from <code>if</code> to a <code>case</code> statement, as in</p>\n\n<pre><code>case parse p s of\n    Error e {- :: ParseResult a -} -&gt; Error e {- :: ParseResult b -}\n    Result i a -&gt; parse (f a) i\n</code></pre>\n"}], "owner": {"reputation": 43, "user_id": 9848635, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/6264d8e4e468646e887a25a2f51e7d9a?s=128&d=identicon&r=PG&f=1", "display_name": "MrBland", "link": "https://stackoverflow.com/users/9848635/mrbland"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 85, "favorite_count": 0, "accepted_answer_id": 50536121, "answer_count": 1, "score": 4, "last_activity_date": 1527278585, "creation_date": 1527277785, "question_id": 50535973, "link": "https://stackoverflow.com/questions/50535973/type-checking-in-if-then-else-expressions", "title": "Type checking in If-then-else expressions", "body": "<p>I am writing the Monad instance for a parser, and in trying to implement bind I am encountering some type checking errors. The following code does not type check:</p>\n\n<pre><code>(=&lt;&lt;) :: (a -&gt; Parser b) -&gt; Parser a -&gt; Parser b\nf =&lt;&lt; p = P (\\s -&gt; let x = parse p s\n                   in if isErrorResult x\n                      then x\n                      else let (Result i a) = x\n                           in parse (f a) i)\n</code></pre>\n\n<p>GHCi complains that the last line of code <code>parse (f a) i</code> is expecting type <code>ParseResult b</code> but received type <code>ParseResult a</code>. However, if I remove the error checking code then everything type checks just fine:</p>\n\n<pre><code>f =&lt;&lt; p = P (\\s -&gt; let x = parse p s\n                   in let (Result i a) = x\n                      in parse (f a) i)\n</code></pre>\n\n<p>So what is it about the if-then-else expression that causes the type confusion? </p>\n"}, {"tags": ["haskell", "streaming", "streamly"], "answers": [{"comments": [{"owner": {"reputation": 8697, "user_id": 1055165, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/d7c25776b0ca1c13212eea512370102d?s=128&d=identicon&r=PG", "display_name": "zoran119", "link": "https://stackoverflow.com/users/1055165/zoran119"}, "edited": false, "score": 0, "creation_date": 1527257529, "post_id": 50531020, "comment_id": 88074209, "body": "That seems to work! Say the first stream had lots of elements, any idea if <code>show &lt;$&gt;</code> would impact the &#39;streaminess&#39; of it (ie. would it start collecting results memory for some strange reason)?"}, {"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "reply_to_user": {"reputation": 8697, "user_id": 1055165, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/d7c25776b0ca1c13212eea512370102d?s=128&d=identicon&r=PG", "display_name": "zoran119", "link": "https://stackoverflow.com/users/1055165/zoran119"}, "edited": false, "score": 0, "creation_date": 1527259573, "post_id": 50531020, "comment_id": 88075511, "body": "@zoran119 It seems unlikely to me that <code>show &lt;$&gt; stream</code> would have significantly worse &quot;streaminess&quot; than <code>stream</code>, but take that with a grain of salt, since I have never heard of the streamly library before approximately 40 minutes ago."}], "tags": [], "owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "is_accepted": false, "score": 1, "last_activity_date": 1527257147, "creation_date": 1527257147, "answer_id": 50531020, "question_id": 50530894, "link": "https://stackoverflow.com/questions/50530894/composing-streamly-streams-of-different-types/50531020#50531020", "title": "Composing streamly streams of different types", "body": "<p>Since <code>S.mapM</code> only works on things that are already monads, presumably you can convert them to a shared type -- say, ones containing <code>String</code>s -- then traverse the shared stream type. <code>print</code> is just <code>putStrLn . show</code>, so:</p>\n\n<pre><code>runStream $ (show &lt;$&gt; ((readLn :: IO Int) |: nil)) &lt;&gt; (show &lt;$&gt; ((readLn :: IO [Char]) |: nil)) &amp; S.mapM putStrLn\n</code></pre>\n"}], "owner": {"reputation": 8697, "user_id": 1055165, "user_type": "registered", "accept_rate": 61, "profile_image": "https://www.gravatar.com/avatar/d7c25776b0ca1c13212eea512370102d?s=128&d=identicon&r=PG", "display_name": "zoran119", "link": "https://stackoverflow.com/users/1055165/zoran119"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 124, "favorite_count": 0, "answer_count": 1, "score": 0, "last_activity_date": 1527257194, "creation_date": 1527256727, "last_edit_date": 1527257194, "question_id": 50530894, "link": "https://stackoverflow.com/questions/50530894/composing-streamly-streams-of-different-types", "title": "Composing streamly streams of different types", "body": "<p>As per the <a href=\"http://hackage.haskell.org/package/streamly-0.2.0/docs/Streamly-Tutorial.html\" rel=\"nofollow noreferrer\">streamly tutorial</a>, it is possible to combine different streams using <code>&lt;&gt;</code> operator (<a href=\"http://hackage.haskell.org/package/streamly-0.2.0/docs/Streamly.html#t:Semigroup\" rel=\"nofollow noreferrer\">re-exported</a> from <code>Semigroup</code> by <code>streamly</code>) like this:</p>\n\n<pre><code>runStream $ ((readLn :: IO Int) |: nil) &lt;&gt; ((readLn :: IO Int) |: nil) &amp; S.mapM print\n</code></pre>\n\n<p>However, I'd like to combine streams which have different types, but both work with <code>print</code>. Something like this:</p>\n\n<pre><code>runStream $ ((readLn :: IO Int) |: nil) &lt;&gt; ((readLn :: IO [Char]) |: nil) &amp; S.mapM print\n</code></pre>\n\n<p>But this gives me an error:</p>\n\n<pre><code>&lt;interactive&gt;:27:45: error:\n    \u2022 Couldn't match type \u2018[Char]\u2019 with \u2018Int\u2019\n      Expected type: SerialT IO Int\n        Actual type: SerialT IO [Char]\n    \u2022 In the second argument of \u2018(&lt;&gt;)\u2019, namely\n        \u2018((readLn :: IO [Char]) |: nil)\u2019\n      In the first argument of \u2018(&amp;)\u2019, namely\n        \u2018((readLn :: IO Int) |: nil) &lt;&gt; ((readLn :: IO [Char]) |: nil)\u2019\n      In the second argument of \u2018($)\u2019, namely\n        \u2018((readLn :: IO Int) |: nil) &lt;&gt; ((readLn :: IO [Char]) |: nil)\n           &amp; S.mapM print\u2019\n</code></pre>\n\n<p>Any hints on how to do this?</p>\n\n<hr>\n\n<p>The above code has been run in <code>ghci</code> with these are the imports:</p>\n\n<pre><code>import Streamly\nimport Streamly.Prelude ((|:), nil)\nimport qualified Streamly.Prelude as S\nimport Data.Function ((&amp;))\n</code></pre>\n"}, {"tags": ["debugging", "haskell", "functional-programming"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1527246673, "post_id": 50527831, "comment_id": 88067174, "body": "You have <code>Debug.Trace</code>, but since Haskell is a <i>lazy</i> language, it is usually harder to get a good trace: a lot of parts are not evaluated, or much later in the process."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 6, "creation_date": 1527246686, "post_id": 50527831, "comment_id": 88067182, "body": "About your code, I would really advice to use pattern matching here."}, {"owner": {"reputation": 25, "user_id": 9845629, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/--7h8GPAeyJ8/AAAAAAAAAAI/AAAAAAAAAGQ/s9C_kEhT9X8/photo.jpg?sz=128", "display_name": "Riccardo Monterisi", "link": "https://stackoverflow.com/users/9845629/riccardo-monterisi"}, "reply_to_user": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 0, "creation_date": 1527246950, "post_id": 50527831, "comment_id": 88067343, "body": "Thanks Willem Van Onsem"}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1527253624, "post_id": 50527831, "comment_id": 88071577, "body": "Note that, if the <code>[String]</code> argument is meant to be the sequence of tokens to be parsed, the code above (or any equivalent variant using pattern matching) looks quite wrong to me. If it is meant to be something else, the approach might be correct (but it still looks weird -- what are those strings in the list?)."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1527275571, "post_id": 50527831, "comment_id": 88083050, "body": "Standard haskell only supports <code>bug</code> and <code>rebug</code>. If you want <code>debug</code>, you have to upgrade to <a href=\"https://prime.haskell.org/\" rel=\"nofollow noreferrer\">Haskell Prime</a>."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1527275854, "post_id": 50527831, "comment_id": 88083155, "body": "More seriously.... Others have already suggested some changes to the structure of your program. Probably the most important technique for debugging Haskell programs (or, really, any programs) is to simplify and clarify your code and break it up into the smallest <i>meaningful</i> pieces you can. Small pieces of code are much easier to test, and the easier your code is to understand the better your chances are of finding the problem. Yes, debugging tools are important, but you have to get your code into decent shape before you can really use them efficiently."}], "answers": [{"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1527247989, "post_id": 50528135, "comment_id": 88067980, "body": "I&#39;d go even farther than &quot;switch from list indexing to pattern matching&quot;: these strings should be passed in a record, with descriptive names for each argument."}, {"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "reply_to_user": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 0, "creation_date": 1527248116, "post_id": 50528135, "comment_id": 88068063, "body": "Yes, but I could not immediately find the functions. I assume that <code>a1</code> is if_symbol, then the condition, etc."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 8, "last_activity_date": 1527278382, "last_edit_date": 1527278382, "creation_date": 1527247560, "answer_id": 50528135, "question_id": 50527831, "link": "https://stackoverflow.com/questions/50527831/does-haskell-support-debug/50528135#50528135", "title": "Does Haskell support debug?", "body": "<p>You can use the <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Debug-Trace.html#v:trace\" rel=\"nofollow noreferrer\"><strong><code>trace :: String -&gt; a -&gt; a</code></strong></a> of the <code>Debug.Trace</code>, or related functions like <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Debug-Trace.html#v:traceShowId\" rel=\"nofollow noreferrer\"><strong><code>traceShowId :: Show a =&gt; a -&gt; a</code></strong></a>. This function basically prints the attached <code>String</code> parameter in case the function is evaluated, and returns the result of the function.</p>\n\n<p>We can thus - for some content that <em>can</em> be printed - attach such <code>trace</code> functions, and thus print information. Note that debugging in Haskell is typically different from debugging in imperative languages, mainly due to laziness: usually functions are not evaluated, unless we need the result. So that means that some functions will never get evaluated, or these are evaluated long after we constructed that function.</p>\n\n<p>Abut your function, I would advice to use <em>pattern matching</em> here, and remove the noise of unused variables:</p>\n\n<pre><code>iffthen :: [String] -&gt; Parser String\niffthen <b>(ifs : cond : thens : val1 : elses : val2 : _)</b> = do \n    symbol <b>ifs</b>\n    booleana <b>cond</b>\n    symbol <b>thens</b>\n    k &lt;- assignP <b>val1</b>\n    symbol <b>elses</b>\n    assignP <b>val2</b>\n    return k</code></pre>\n\n<p>(Given I interpreted what you want correnctly, and <code>ifs</code>, <code>thens</code>, <code>elses</code> are symbols, <code>cond</code> is the condition, and <code>val1</code> and <code>val2</code> are the values of the <code>if</code>-<code>then</code>-<code>else</code> expression).</p>\n\n<p>It is probably even better not to use a list (since the number of elements is <em>not</em> guaranteed at compile time), and thus construct a sperate type with specific parameters.</p>\n"}, {"comments": [{"owner": {"reputation": 126897, "user_id": 791604, "user_type": "registered", "accept_rate": 95, "profile_image": "https://www.gravatar.com/avatar/ce991df7a056248d5e4f6fc3659ba733?s=128&d=identicon&r=PG", "display_name": "Daniel Wagner", "link": "https://stackoverflow.com/users/791604/daniel-wagner"}, "edited": false, "score": 1, "creation_date": 1527249958, "post_id": 50528415, "comment_id": 88069199, "body": "The thing about <code>trace</code> is you need to be <i>very</i> aware of exactly how laziness works. For example, try <code>(traceM &quot;never prints&quot; *&gt; pure ()) ()</code>; and in your second example, the traces for <code>x</code>, <code>y</code>, <code>z</code>, <code>l</code>, and <code>m</code> are almost guaranteed not to fire unless <code>Parser</code> does something very unusual in its <code>(&gt;&gt;=)</code> implementation, like call <code>seq</code> or <code>evaluate</code> or use bang patterns."}, {"owner": {"reputation": 16362, "user_id": 49220, "user_type": "registered", "accept_rate": 56, "profile_image": "https://www.gravatar.com/avatar/431cd43aaf713caa80316e852a87a840?s=128&d=identicon&r=PG", "display_name": "Paul Johnson", "link": "https://stackoverflow.com/users/49220/paul-johnson"}, "edited": false, "score": 0, "creation_date": 1527327064, "post_id": 50528415, "comment_id": 88093839, "body": "Another gotcha with &quot;traceM&quot; is that if you give it a constant string it will only be printed once. After that the compiler figures that it knows what the expression evaluates to, and it won&#39;t evaluate it again."}], "tags": [], "owner": {"reputation": 1069, "user_id": 4299824, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-LKWkrlvV9UE/AAAAAAAAAAI/AAAAAAAABYQ/OWKjHFpdGGs/photo.jpg?sz=128", "display_name": "YAMAMOTO Yuji", "link": "https://stackoverflow.com/users/4299824/yamamoto-yuji"}, "is_accepted": false, "score": 3, "last_activity_date": 1527248523, "creation_date": 1527248523, "answer_id": 50528415, "question_id": 50527831, "link": "https://stackoverflow.com/questions/50527831/does-haskell-support-debug/50528415#50528415", "title": "Does Haskell support debug?", "body": "<p>In addition to <code>trace</code>, check out <code>traceM :: Applicative f =&gt; String -&gt; f ()</code> and <code>traceShowM :: (Show a, Applicative f) =&gt; a -&gt; f ()</code>.</p>\n\n<p>These are handy replacements of <code>putStrLn</code> and <code>print</code> available in any monad context:</p>\n\n<pre><code>iffthen :: [String] -&gt; Parser String\niffthen a = do \nx &lt;- symbol (head a)\n               traceM \"booleana\"\n               y &lt;- booleana (head (tail a))\n               traceM \"symbol 1\"\n               z &lt;- symbol (head (tail (tail a)))\n               traceM \"assignP 1\"\n               k &lt;- assignP (head (tail (tail (tail a))))\n               traceM \"symbol 2\"\n               l &lt;- symbol (head (tail (tail (tail (tail a)))))\n               traceM \"assignP 2\"\n               m &lt;- assignP (head (tail (tail (tail (tail (tail a))))))\n               return k\n</code></pre>\n\n<p>If you're interested in each parser's result, use <code>traceShowId</code> with <code>&lt;$&gt;</code> etc.</p>\n\n<pre><code>iffthen :: [String] -&gt; Parser String\niffthen a = do \nx &lt;- symbol (head a)\n               y &lt;- traceShowId &lt;$&gt; booleana (head (tail a))\n               z &lt;- traceShowId &lt;$&gt; symbol (head (tail (tail a)))\n               k &lt;- traceShowId &lt;$&gt; assignP (head (tail (tail (tail a))))\n               l &lt;- traceShowId &lt;$&gt; symbol (head (tail (tail (tail (tail a)))))\n               m &lt;- traceShowId &lt;$&gt; assignP (head (tail (tail (tail (tail (tail a))))))\n               return k\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 58926, "user_id": 1941213, "user_type": "registered", "accept_rate": 57, "profile_image": "https://www.gravatar.com/avatar/24dea531b0cb0ec8ccd9825f0bd0886a?s=128&d=identicon&r=PG", "display_name": "Alex Coventry", "link": "https://stackoverflow.com/users/1941213/alex-coventry"}, "is_accepted": false, "score": 0, "last_activity_date": 1527975210, "creation_date": 1527975210, "answer_id": 50661349, "question_id": 50527831, "link": "https://stackoverflow.com/questions/50527831/does-haskell-support-debug/50661349#50661349", "title": "Does Haskell support debug?", "body": "<p><code>ghci</code> does <a href=\"https://downloads.haskell.org/~ghc/7.4.1/docs/html/users_guide/ghci-debugger.html\" rel=\"nofollow noreferrer\">have a stepping debugger</a>. Since Haskell code tends to be functional and lazy, I think it is going to lead to surprises sometimes. Emacs <code>haskell-mode</code> used to have <a href=\"https://web.archive.org/web/20140326092158/http://chrisdone.com/posts/ghci-debugger\" rel=\"nofollow noreferrer\">debugger integration</a>... I think I came across a comment by the author of that integration stating that the debugger is problematic in some way, but I can't find it now. But I've tried the debugger on some basic examples, and it works as advertised.</p>\n"}], "owner": {"reputation": 25, "user_id": 9845629, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/--7h8GPAeyJ8/AAAAAAAAAAI/AAAAAAAAAGQ/s9C_kEhT9X8/photo.jpg?sz=128", "display_name": "Riccardo Monterisi", "link": "https://stackoverflow.com/users/9845629/riccardo-monterisi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 291, "favorite_count": 0, "accepted_answer_id": 50528135, "answer_count": 3, "score": 2, "last_activity_date": 1527975210, "creation_date": 1527246550, "question_id": 50527831, "link": "https://stackoverflow.com/questions/50527831/does-haskell-support-debug", "title": "Does Haskell support debug?", "body": "<p>For example this is a function:</p>\n\n<pre><code>iffthen :: [String] -&gt; Parser String\niffthen a = do \nx &lt;- symbol (head a)\n               y &lt;- booleana (head (tail a))\n               z &lt;- symbol (head (tail (tail a)))\n               k &lt;- assignP (head (tail (tail (tail a))))\n               l &lt;- symbol (head (tail (tail (tail (tail a)))))\n               m &lt;- assignP (head (tail (tail (tail (tail (tail a))))))\n               return k\n</code></pre>\n\n<p>I need to see what really do every instructions</p>\n"}, {"tags": ["list", "haskell", "functional-programming", "tuples"], "comments": [{"owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "edited": false, "score": 6, "creation_date": 1527237397, "post_id": 50524909, "comment_id": 88061685, "body": "Yes that is possible."}], "answers": [{"comments": [{"owner": {"reputation": 25, "user_id": 9845629, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/--7h8GPAeyJ8/AAAAAAAAAAI/AAAAAAAAAGQ/s9C_kEhT9X8/photo.jpg?sz=128", "display_name": "Riccardo Monterisi", "link": "https://stackoverflow.com/users/9845629/riccardo-monterisi"}, "edited": false, "score": 0, "creation_date": 1527238907, "post_id": 50525090, "comment_id": 88062558, "body": "Thank you very much"}, {"owner": {"reputation": 3683, "user_id": 330242, "user_type": "registered", "accept_rate": 78, "profile_image": "https://www.gravatar.com/avatar/c9f3ffc3e30d25eb64e2e464f0a86bd7?s=128&d=identicon&r=PG", "display_name": "przemo_li", "link": "https://stackoverflow.com/users/330242/przemo-li"}, "reply_to_user": {"reputation": 25, "user_id": 9845629, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/--7h8GPAeyJ8/AAAAAAAAAAI/AAAAAAAAAGQ/s9C_kEhT9X8/photo.jpg?sz=128", "display_name": "Riccardo Monterisi", "link": "https://stackoverflow.com/users/9845629/riccardo-monterisi"}, "edited": false, "score": 2, "creation_date": 1527249084, "post_id": 50525090, "comment_id": 88068654, "body": "@RiccardoMonterisi please accept this answer. There is extra checkbox on the left side, for that."}], "tags": [], "owner": {"reputation": 13441, "user_id": 2199600, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/8sl6u.jpg?s=128&g=1", "display_name": "Igor Drozdov", "link": "https://stackoverflow.com/users/2199600/igor-drozdov"}, "is_accepted": true, "score": 12, "last_activity_date": 1527237956, "creation_date": 1527237956, "answer_id": 50525090, "question_id": 50524909, "link": "https://stackoverflow.com/questions/50524909/can-i-create-an-haskell-function-that-put-some-strings-in-a-tuple-or-in-a-list/50525090#50525090", "title": "Can I create an Haskell function that put some strings in a tuple or in a list?", "body": "<p>We can just reason about the types and then look for the function in Hoogle.</p>\n\n<p>For example, you need a function, which accepts a <code>String</code> and returns a list of <code>String</code>s, e.g <code>String -&gt; [String]</code>. Let's look for it:</p>\n\n<p><a href=\"https://www.haskell.org/hoogle/?hoogle=String+-%3E+%5BString%5D\" rel=\"noreferrer\">https://www.haskell.org/hoogle/?hoogle=String+-%3E+%5BString%5D</a></p>\n\n<p>The first one is <code>lines</code> with a description:</p>\n\n<blockquote>\n  <p>breaks a string up into a list of strings at newline characters. The resulting strings do not contain newlines.</p>\n</blockquote>\n\n<p>Hm, but we need to break at spaces, not only at newline characters. Maybe there's something else?</p>\n\n<p>What about <code>words</code>?</p>\n\n<blockquote>\n  <p>breaks a string up into a list of words, which were delimited by white space.</p>\n</blockquote>\n\n<p>Yea, the right, one.</p>\n\n<p>Thus, the answer is:</p>\n\n<p>You need the <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Prelude.html#v:words\" rel=\"noreferrer\">words</a> function:</p>\n\n<p><code>words \"aaa bbb ccc dddd\"</code> returns <code>[\"aaa\",\"bbb\",\"ccc\",\"dddd\"]</code></p>\n"}], "owner": {"reputation": 25, "user_id": 9845629, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/--7h8GPAeyJ8/AAAAAAAAAAI/AAAAAAAAAGQ/s9C_kEhT9X8/photo.jpg?sz=128", "display_name": "Riccardo Monterisi", "link": "https://stackoverflow.com/users/9845629/riccardo-monterisi"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 107, "favorite_count": 0, "accepted_answer_id": 50525090, "answer_count": 1, "score": 0, "last_activity_date": 1527237956, "creation_date": 1527237321, "last_edit_date": 1527237389, "question_id": 50524909, "link": "https://stackoverflow.com/questions/50524909/can-i-create-an-haskell-function-that-put-some-strings-in-a-tuple-or-in-a-list", "title": "Can I create an Haskell function that put some strings in a tuple or in a list?", "body": "<p>For example I have a string in input: \"aaa bbb ccc dddd\" and my function give me</p>\n\n<pre><code>[\"aaa\", \"bbb\", \"ccc\", \"dddd\"]\n</code></pre>\n\n<p>or</p>\n\n<pre><code>(\"aaa\", \"bbb\", \"ccc\", \"dddd\")\n</code></pre>\n\n<p>Is possible?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 7, "creation_date": 1527213438, "post_id": 50520423, "comment_id": 88053296, "body": "So what&#39;s the type of the output list you desire?"}, {"owner": {"reputation": 4113, "user_id": 4601931, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/4785004388498e25bc6794fe1d9d4a38?s=128&d=identicon&r=PG&f=1", "display_name": "user4601931", "link": "https://stackoverflow.com/users/4601931/user4601931"}, "edited": false, "score": 2, "creation_date": 1527214176, "post_id": 50520423, "comment_id": 88053418, "body": "You&#39;ve edited to address the question in the comment, but the question still remains: what is the type of the output list you desire?"}, {"owner": {"reputation": 23, "user_id": 9543629, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8e12e381f55e2a477eaf70a5829fe09?s=128&d=identicon&r=PG&f=1", "display_name": "learner", "link": "https://stackoverflow.com/users/9543629/learner"}, "edited": false, "score": 0, "creation_date": 1527214605, "post_id": 50520423, "comment_id": 88053507, "body": "I want a list of all possible combination. I am not sure what type it is since some points contains 4 Int value (i,i,i,i). I have no idea how to define the type of output list"}, {"owner": {"reputation": 2287, "user_id": 5267751, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bd62e8fd8fbb37abc7e2a39d23828047?s=128&d=identicon&r=PG&f=1", "display_name": "user202729", "link": "https://stackoverflow.com/users/5267751/user202729"}, "edited": false, "score": 1, "creation_date": 1527214623, "post_id": 50520423, "comment_id": 88053510, "body": "(that comment is to check your understanding of Haskell, because Haskell is a strictly typed language, so you must be misunderstanding something.)"}, {"owner": {"reputation": 2287, "user_id": 5267751, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/bd62e8fd8fbb37abc7e2a39d23828047?s=128&d=identicon&r=PG&f=1", "display_name": "user202729", "link": "https://stackoverflow.com/users/5267751/user202729"}, "edited": false, "score": 1, "creation_date": 1527214739, "post_id": 50520423, "comment_id": 88053531, "body": "See <a href=\"https://stackoverflow.com/questions/12485726/list-containing-different-types\" title=\"list containing different types\">stackoverflow.com/questions/12485726/&hellip;</a> ."}, {"owner": {"reputation": 62252, "user_id": 1435869, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TrEd9.jpg?s=128&g=1", "display_name": "karakfa", "link": "https://stackoverflow.com/users/1435869/karakfa"}, "edited": false, "score": 1, "creation_date": 1527217577, "post_id": 50520423, "comment_id": 88054074, "body": "Curious, why same value dice creates a 4-tuple if there are only two dice?"}, {"owner": {"reputation": 1341, "user_id": 1036044, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PzcQL.jpg?s=128&g=1", "display_name": "Probie", "link": "https://stackoverflow.com/users/1036044/probie"}, "reply_to_user": {"reputation": 62252, "user_id": 1435869, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TrEd9.jpg?s=128&g=1", "display_name": "karakfa", "link": "https://stackoverflow.com/users/1435869/karakfa"}, "edited": false, "score": 1, "creation_date": 1527228148, "post_id": 50520423, "comment_id": 88056933, "body": "@karakfa I think it&#39;s for Backgammon"}, {"owner": {"reputation": 62252, "user_id": 1435869, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TrEd9.jpg?s=128&g=1", "display_name": "karakfa", "link": "https://stackoverflow.com/users/1435869/karakfa"}, "reply_to_user": {"reputation": 1341, "user_id": 1036044, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PzcQL.jpg?s=128&g=1", "display_name": "Probie", "link": "https://stackoverflow.com/users/1036044/probie"}, "edited": false, "score": 0, "creation_date": 1527258519, "post_id": 50520423, "comment_id": 88074833, "body": "@Probie, yes I think you&#39;re right, the moves..."}, {"owner": {"reputation": 54864, "user_id": 404970, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/o6X94.jpg?s=128&g=1", "display_name": "molbdnilo", "link": "https://stackoverflow.com/users/404970/molbdnilo"}, "edited": false, "score": 0, "creation_date": 1527320631, "post_id": 50520423, "comment_id": 88092419, "body": "If you want equal dice to count double, that probably belongs in the interpretation of the rolls (that is, the rules of the game), not the dice rolls themselves."}], "answers": [{"tags": [], "owner": {"reputation": 62252, "user_id": 1435869, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/TrEd9.jpg?s=128&g=1", "display_name": "karakfa", "link": "https://stackoverflow.com/users/1435869/karakfa"}, "is_accepted": false, "score": 6, "last_activity_date": 1527218138, "creation_date": 1527218138, "answer_id": 50520987, "question_id": 50520423, "link": "https://stackoverflow.com/questions/50520423/haskell-how-to-use-if-then-else-in-list-comprehension/50520987#50520987", "title": "Haskell - how to use if then else in list comprehension?", "body": "<p>list elements should be same type, your 4-tuples and 2-tuples are not.\nIf you switch to list instead you can write like this</p>\n\n<pre><code>[if i==j then [i,i,i,i] else [i,j] | i&lt;-[1..6], j&lt;-[1..6]]\n</code></pre>\n\n<p>which will generate</p>\n\n<pre><code>[[1,1,1,1],[1,2],[1,3],[1,4],[1,5],[1,6],\n [2,1],[2,2,2,2],[2,3],[2,4],[2,5],[2,6],\n [3,1],[3,2],[3,3,3,3],[3,4],[3,5],[3,6],\n [4,1],[4,2],[4,3],[4,4,4,4],[4,5],[4,6],\n [5,1],[5,2],[5,3],[5,4],[5,5,5,5],[5,6],\n [6,1],[6,2],[6,3],[6,4],[6,5],[6,6,6,6]]\n</code></pre>\n"}], "owner": {"reputation": 23, "user_id": 9543629, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/d8e12e381f55e2a477eaf70a5829fe09?s=128&d=identicon&r=PG&f=1", "display_name": "learner", "link": "https://stackoverflow.com/users/9543629/learner"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 589, "favorite_count": 0, "answer_count": 1, "score": -1, "last_activity_date": 1527218138, "creation_date": 1527213347, "last_edit_date": 1527215380, "question_id": 50520423, "link": "https://stackoverflow.com/questions/50520423/haskell-how-to-use-if-then-else-in-list-comprehension", "title": "Haskell - how to use if then else in list comprehension?", "body": "<p>I wish to generate a list of points from rolling two dice. If the two dice show the same value then the output points will become <code>(i,i,i,i)</code>.</p>\n\n<p>My code is like </p>\n\n<pre><code>[(i,j)|i&lt;-[1..6],j&lt;-[1..6], if i==j\n                            then (i,i,i,i)\n                            else (i,j)]\n</code></pre>\n\n<p>When I entered this to GHCi, it cannot be compiled.</p>\n\n<p>The output I expect is</p>\n\n<pre><code>[(1,1,1,1),(1,2),(1,3),(1,4),(1,5),(1,6),(2,1),(2,2,2,2),(2,3),(2,4),(2,5),(2,6),(3,1),(3,2),(3,3,3,3),(3,4),(3,5),(3,6),(4,1),(4,2),(4,3),(4,4,4,4),(4,5),(4,6),(5,1),(5,2),(5,3),(5,4),(5,5,5,5),(5,6),(6,1),(6,2),(6,3),(6,4),(6,5),(6,6,6,6)]\n</code></pre>\n"}, {"tags": ["haskell", "dsl"], "comments": [{"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 4, "creation_date": 1527175784, "post_id": 50512941, "comment_id": 88038590, "body": "Lookup FOAS, HOAS, PHOAS. I&#39;m not terribly familiar with those approaches, but they seems to be popular. More examples: <a href=\"https://www.schoolofhaskell.com/user/edwardk/phoas\" rel=\"nofollow noreferrer\">schoolofhaskell.com/user/edwardk/phoas</a>"}, {"owner": {"reputation": 3794, "user_id": 137871, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/48469162d45686615c6bf0eb4304bf26?s=128&d=identicon&r=PG", "display_name": "insitu", "link": "https://stackoverflow.com/users/137871/insitu"}, "reply_to_user": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 0, "creation_date": 1527178607, "post_id": 50512941, "comment_id": 88040315, "body": "I checked the given reference but it&#39;s not quite what I am looking for: It uses explicit <code>lam</code> constructor to wrap function definitions into an <code>Expr</code>. What I would need would be something like <code>OverloadedLambdas</code> :)"}, {"owner": {"reputation": 11366, "user_id": 3922954, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/76ba47d2fdd24ab56b0b273cce2075e5?s=128&d=identicon&r=PG&f=1", "display_name": "AJF", "link": "https://stackoverflow.com/users/3922954/ajf"}, "edited": false, "score": 2, "creation_date": 1527185513, "post_id": 50512941, "comment_id": 88043846, "body": "Have you considered using template haskell? This seems like a fairly good use of it."}, {"owner": {"reputation": 24509, "user_id": 6863749, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/UyoQv.jpg?s=128&g=1", "display_name": "Li-yao Xia", "link": "https://stackoverflow.com/users/6863749/li-yao-xia"}, "edited": false, "score": 4, "creation_date": 1527205707, "post_id": 50512941, "comment_id": 88051789, "body": "Conal Elliott&#39;s <a href=\"http://conal.net/papers/compiling-to-categories/\" rel=\"nofollow noreferrer\">Compiling to categories</a> sounds relevant."}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "edited": false, "score": 3, "creation_date": 1527221701, "post_id": 50512941, "comment_id": 88055033, "body": "If you don&#39;t want to use an explicit <code>lam</code> constructor, you will definitely need to use TH or a compiler plugin.  Referential transparency prevents code from knowing too much about how a function is implemented."}, {"owner": {"reputation": 100892, "user_id": 745903, "user_type": "registered", "accept_rate": 74, "profile_image": "https://www.gravatar.com/avatar/50933f6638836741e620669b3940410e?s=128&d=identicon&r=PG", "display_name": "leftaroundabout", "link": "https://stackoverflow.com/users/745903/leftaroundabout"}, "edited": false, "score": 1, "creation_date": 1527259511, "post_id": 50512941, "comment_id": 88075485, "body": "<code>foo</code> is a bad example, isn&#39;t it? There&#39;s no higher-order function there, you could implement this just fine with simple operator overloading."}, {"owner": {"reputation": 3794, "user_id": 137871, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/48469162d45686615c6bf0eb4304bf26?s=128&d=identicon&r=PG", "display_name": "insitu", "link": "https://stackoverflow.com/users/137871/insitu"}, "edited": false, "score": 0, "creation_date": 1527348742, "post_id": 50512941, "comment_id": 88099716, "body": "Of course. I will fix that."}, {"owner": {"reputation": 410, "user_id": 2805751, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/22fc46808863bebbaf410616ea630332?s=128&d=identicon&r=PG&f=1", "display_name": "user2805751", "link": "https://stackoverflow.com/users/2805751/user2805751"}, "edited": false, "score": 0, "creation_date": 1527858034, "post_id": 50512941, "comment_id": 88298314, "body": "If the issue in PHOAS / HOAS is that you piggy back on the host (haskell) language to wrap the function, you can see the representation used in the strongly typed bound example given by ekmett here: lpaste.net/79582  He notes this is network-serializable (unlike (P)HOAS).   Is it correct to say that you want a &quot;defunctionalized&quot; lambda representation?"}, {"owner": {"reputation": 410, "user_id": 2805751, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/22fc46808863bebbaf410616ea630332?s=128&d=identicon&r=PG&f=1", "display_name": "user2805751", "link": "https://stackoverflow.com/users/2805751/user2805751"}, "edited": false, "score": 0, "creation_date": 1527858360, "post_id": 50512941, "comment_id": 88298517, "body": "See also: <a href=\"http://www.cse.chalmers.se/~josefs/publications/deepshallow.pdf\" rel=\"nofollow noreferrer\">cse.chalmers.se/~josefs/publications/deepshallow.pdf</a>"}, {"owner": {"reputation": 3794, "user_id": 137871, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/48469162d45686615c6bf0eb4304bf26?s=128&d=identicon&r=PG", "display_name": "insitu", "link": "https://stackoverflow.com/users/137871/insitu"}, "reply_to_user": {"reputation": 410, "user_id": 2805751, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/22fc46808863bebbaf410616ea630332?s=128&d=identicon&r=PG&f=1", "display_name": "user2805751", "link": "https://stackoverflow.com/users/2805751/user2805751"}, "edited": false, "score": 0, "creation_date": 1527860257, "post_id": 50512941, "comment_id": 88299751, "body": "@user2805751 I am unsure what you mean with &quot;defunctionalized&quot; but I think the answer is &quot;yes&quot; :)"}, {"owner": {"reputation": 410, "user_id": 2805751, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/22fc46808863bebbaf410616ea630332?s=128&d=identicon&r=PG&f=1", "display_name": "user2805751", "link": "https://stackoverflow.com/users/2805751/user2805751"}, "edited": false, "score": 0, "creation_date": 1527869141, "post_id": 50512941, "comment_id": 88305182, "body": "@insitu <a href=\"https://en.wikipedia.org/wiki/Defunctionalization\" rel=\"nofollow noreferrer\">en.wikipedia.org/wiki/Defunctionalization</a> . Check out that  lambda encoding :)"}], "owner": {"reputation": 3794, "user_id": 137871, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/48469162d45686615c6bf0eb4304bf26?s=128&d=identicon&r=PG", "display_name": "insitu", "link": "https://stackoverflow.com/users/137871/insitu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": false, "view_count": 197, "favorite_count": 0, "answer_count": 0, "score": 5, "last_activity_date": 1527348810, "creation_date": 1527175323, "last_edit_date": 1527348810, "question_id": 50512941, "link": "https://stackoverflow.com/questions/50512941/how-to-capture-higher-order-functions-in-an-embedded-dsl-in-haskell", "title": "How to capture higher order functions in an embedded DSL in Haskell?", "body": "<p>I would like to write an embedded DSL in Haskell from which I could generate code in another language (namely Python but that's irrelevant to the question). There are a lot of different approaches possible to do that, like using a <em>Free monad</em> based interpreters or tagless interpreters which I am aware of. But no approach that I am aware of seems to be able to capture <em>function definitions</em>, which kind of make sense but is also quite limiting. </p>\n\n<p>My question is: How can I embed an actual Haskell function into a DSL? The idea would be to <em>capture</em> an Haskell function definition into something like <code>Lam var body</code> constructor, which would look like:</p>\n\n<pre><code>data Var = Var ...  -- use DeBruijn numbering?\n\ndata Expr repr = Lam Var repr\n</code></pre>\n\n<p>Ideally I would like to be able to write something like:</p>\n\n<pre><code>foo :: Expr repr\nfoo = \\ n -&gt; n + n * 12\n</code></pre>\n\n<p>and then be able to interpret this <code>Expr</code> in various ways, including generating foreign code.</p>\n\n<p>I experimented with <a href=\"https://hackage.haskell.org/package/data-reify\" rel=\"nofollow noreferrer\">https://hackage.haskell.org/package/data-reify</a> which provides some techniques to capture functions but did not get very far. Is what I am looking for ever possible? </p>\n"}, {"tags": ["list", "haskell", "fold"], "answers": [{"comments": [{"owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 0, "creation_date": 1527170631, "post_id": 50508241, "comment_id": 88034975, "body": "for this particular case, since <code>x ^ 1 = x</code>, you can guard against the empty list case with <code>\\xs -&gt; foldl1 (^) (xs ++ [1])</code>. Or, y&#39;know, use <code>Maybe</code>."}], "tags": [], "owner": {"reputation": 314794, "user_id": 67579, "user_type": "registered", "accept_rate": 81, "profile_image": "https://i.stack.imgur.com/BJXub.png?s=128&g=1", "display_name": "Willem Van Onsem", "link": "https://stackoverflow.com/users/67579/willem-van-onsem"}, "is_accepted": true, "score": 6, "last_activity_date": 1527161676, "last_edit_date": 1527161676, "creation_date": 1527161339, "answer_id": 50508241, "question_id": 50508170, "link": "https://stackoverflow.com/questions/50508170/exponentiate-all-elements-of-a-list-without-alter-the-list/50508241#50508241", "title": "Exponentiate all elements of a list without alter the list", "body": "<p>Yes, in case the list is guaranteed to have a <em>first</em> element, we can use <a href=\"http://hackage.haskell.org/packages/archive/base/latest/doc/html/Prelude.html#v:foldl1\" rel=\"noreferrer\"><strong><code>foldl1 :: (a -&gt; a -&gt; a) -&gt; [a] -&gt; a</code></strong></a> which uses the <em>first</em> element of the list as initial accumulator. So we can use:</p>\n\n<pre><code><b>foldl1</b> (^) [2, 3, 4]</code></pre>\n\n<p>This of course produces the same result:</p>\n\n<pre><code>Prelude&gt; foldl1 (^) [2,3,4]\n4096\n</code></pre>\n\n<p>Note that in case you use an <em>empty</em> list the above function will error. So you will need to handle that case - if that is a possibility - by some extra logic.</p>\n"}], "owner": {"reputation": 195, "user_id": 9396078, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/367b5945226775ca575eeb2e0db5d94f?s=128&d=identicon&r=PG&f=1", "display_name": "Jhon Duck", "link": "https://stackoverflow.com/users/9396078/jhon-duck"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 95, "favorite_count": 0, "accepted_answer_id": 50508241, "answer_count": 1, "score": 2, "last_activity_date": 1527161676, "creation_date": 1527161132, "last_edit_date": 1527161374, "question_id": 50508170, "link": "https://stackoverflow.com/questions/50508170/exponentiate-all-elements-of-a-list-without-alter-the-list", "title": "Exponentiate all elements of a list without alter the list", "body": "<p>The list is</p>\n\n<pre><code>[2, 3, 4]\n</code></pre>\n\n<p>and I want exponentiate each result. So, it would be:</p>\n\n<blockquote>\n  <p>(2 ^ 3) ^ 4 = 4096</p>\n</blockquote>\n\n<p>My solution is</p>\n\n<ul>\n<li>use foldl</li>\n<li>set manually the first element of the list as the base case</li>\n<li>set manually the base case as the first element of the list</li>\n</ul>\n\n<p>The code is</p>\n\n<pre><code>foldl (^) 2 [1, 3, 4]\n</code></pre>\n\n<p>The trace is</p>\n\n<blockquote>\n  <p>((2 ^ 1) ^ 3) ^ 4 = 4096</p>\n</blockquote>\n\n<p>Is there a solution without alter the list?</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 20427, "user_id": 2570261, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/e71068b09fc539447a0cee3e99fc419d?s=128&d=identicon&r=PG&f=1", "display_name": "Haleemur Ali", "link": "https://stackoverflow.com/users/2570261/haleemur-ali"}, "edited": false, "score": 0, "creation_date": 1527145987, "post_id": 50502350, "comment_id": 88018578, "body": "could you add references to where you read that it is a good practice to do so <code>systematically</code>. thanks."}, {"owner": {"reputation": 100185, "user_id": 3234959, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/93bb12ca0f93dfddb33880316f7e66c2?s=128&d=identicon&r=PG&f=1", "display_name": "chi", "link": "https://stackoverflow.com/users/3234959/chi"}, "edited": false, "score": 1, "creation_date": 1527157292, "post_id": 50502350, "comment_id": 88025656, "body": "I would not do that <i>systematically</i>. In some cases, though, it is true that being strict in the leaves can help performance, especially for small-sized data types such as <code>Char,Int,Bool,()</code>. FWIW, I usually make everything lazy, and then try turning things stricter when profiling my code to see if something improves."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 1, "creation_date": 1527157816, "post_id": 50502350, "comment_id": 88026024, "body": "I tend to think record fields should be strict unless there&#39;s a reason to make them lazy, but the opposite position is defensible. One reason to make a field lazy is if its type is unknown (and therefore could be a function or similar)."}, {"owner": {"reputation": 136, "user_id": 1553834, "user_type": "registered", "accept_rate": 17, "profile_image": "https://i.stack.imgur.com/Rk6Gb.jpg?s=128&g=1", "display_name": "urbanslug", "link": "https://stackoverflow.com/users/1553834/urbanslug"}, "edited": false, "score": 1, "creation_date": 1527159868, "post_id": 50502350, "comment_id": 88027426, "body": "From what I know you want strictness for &quot;small&quot; values such is these because unnecessary laziness leads to memory leaks. In many cases it is cheaper to evaluate the thunk and store the result than keep a lot of unnecessary thunks."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 6, "creation_date": 1527168217, "post_id": 50502350, "comment_id": 88033267, "body": "There&#39;s a lot of cargo-cult strictness out there. Occasionally it&#39;s good, but it usually leads to people like me filing bug reports that your types and functions are too strict."}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "reply_to_user": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "edited": false, "score": 0, "creation_date": 1527185478, "post_id": 50502350, "comment_id": 88043826, "body": "@Carl, that&#39;s how I feel about <code>vinyl</code>. The (polymorphic!) strictness isn&#39;t good for laws. What sorts of bugs do you tend to see?"}, {"owner": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1527186128, "post_id": 50502350, "comment_id": 88044154, "body": "By the way, this &quot;Lazy in the spine, strict in the leaves&quot; business is extremely over-generalized. I&#39;d go as far as to say that it&#39;s just wrong. There&#39;s really no substitute for thinking carefully about strictness and laziness in your data structure. Two things I will say: if something takes constant, logarithmic, or even polylogarithmic time, you should usually do it eagerly when possible. If it takes linear time or more, you should usually do it incrementally if possible."}, {"owner": {"reputation": 24028, "user_id": 383200, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/a9dc722f936cb1059adaae4fe39c07f0?s=128&d=identicon&r=PG", "display_name": "Carl", "link": "https://stackoverflow.com/users/383200/carl"}, "reply_to_user": {"reputation": 44013, "user_id": 1477667, "user_type": "registered", "accept_rate": 56, "profile_image": "https://i.stack.imgur.com/trgKM.jpg?s=128&g=1", "display_name": "dfeuer", "link": "https://stackoverflow.com/users/1477667/dfeuer"}, "edited": false, "score": 0, "creation_date": 1527193105, "post_id": 50502350, "comment_id": 88047606, "body": "@dfeuer everything has been of one of two forms. One is functions that go into an infinite loop because they&#39;re evaluating an argument before producing a constructor that was supposed to be guarding infinite corecursion. The other has been cases where I passed <code>undefined</code> to an over-general api, knowing it wouldn&#39;t be used, then discovered it was being evaluated strictly for some reason. The latter bit everyone using <code>containers</code> when it was made more strict unnecessarily in a minor release about 8-10 years back."}], "answers": [{"comments": [{"owner": {"reputation": 3794, "user_id": 137871, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/48469162d45686615c6bf0eb4304bf26?s=128&d=identicon&r=PG", "display_name": "insitu", "link": "https://stackoverflow.com/users/137871/insitu"}, "edited": false, "score": 0, "creation_date": 1527192913, "post_id": 50516493, "comment_id": 88047515, "body": "My question stemmed from the fact I <i>never</i> had to worry about it and as I said, I have been writing Haskell for years. I suspect my performance requirements might not be high enough to notice the problems hence fix it."}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "reply_to_user": {"reputation": 3794, "user_id": 137871, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/48469162d45686615c6bf0eb4304bf26?s=128&d=identicon&r=PG", "display_name": "insitu", "link": "https://stackoverflow.com/users/137871/insitu"}, "edited": false, "score": 0, "creation_date": 1527204453, "post_id": 50516493, "comment_id": 88051538, "body": "@insitu: Try running your code with profiling enabled some time, and check out the heap graph. If it looks like <code>&#47;|</code>, building a lot over the course of the program\u2019s execution (i.e., much more than the size of the data you\u2019re working with) and only dropping at the end, then you may have a space leak\u2014which you can then locate using type &amp; retainer profiling. It won\u2019t usually cause serious performance issues for short-lived programs, unless peak memory usage is very high; GHC Haskell performance is generally very good, but it really depends on the application."}, {"owner": {"reputation": 3794, "user_id": 137871, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/48469162d45686615c6bf0eb4304bf26?s=128&d=identicon&r=PG", "display_name": "insitu", "link": "https://stackoverflow.com/users/137871/insitu"}, "edited": false, "score": 0, "creation_date": 1527223041, "post_id": 50516493, "comment_id": 88055355, "body": "Thanks. I usually write long-running server applications (e.g. backend) and do use GHC profiling, and never had this problem, or at least never noticed it."}, {"owner": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 0, "creation_date": 1527240697, "post_id": 50516493, "comment_id": 88063615, "body": "@JonPurdy Could you give a link to this <i>type &amp; retainer</i> profiling technique? I never heard this. Is a different name for this: <a href=\"http://neilmitchell.blogspot.sg/2015/09/detecting-space-leaks.html\" rel=\"nofollow noreferrer\">neilmitchell.blogspot.sg/2015/09/detecting-space-leaks.html</a>"}, {"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "reply_to_user": {"reputation": 8237, "user_id": 2900502, "user_type": "registered", "accept_rate": 73, "profile_image": "https://i.stack.imgur.com/R1OjD.jpg?s=128&g=1", "display_name": "Shersh", "link": "https://stackoverflow.com/users/2900502/shersh"}, "edited": false, "score": 0, "creation_date": 1527329636, "post_id": 50516493, "comment_id": 88094501, "body": "@Shersh: The <a href=\"http://downloads.haskell.org/~ghc/latest/docs/html/users_guide/profiling.html\" rel=\"nofollow noreferrer\">GHC Users Guide section on profiling</a> has lists of compiler and runtime options, including <code>-hy</code> for type-based memory profiling and <code>-hr</code> for retainer profiling."}], "tags": [], "owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "is_accepted": true, "score": 7, "last_activity_date": 1527188726, "creation_date": 1527188726, "answer_id": 50516493, "question_id": 50502350, "link": "https://stackoverflow.com/questions/50502350/why-systematically-mark-record-fields-strict-in-haskell/50516493#50516493", "title": "Why systematically mark record fields strict in Haskell?", "body": "<p>A common rule of thumb is to make data structures strict when:</p>\n\n<ul>\n<li><p>You expect to strictly traverse the whole thing and retain it, so there\u2019s no point in the overhead of laziness; or</p></li>\n<li><p>The fields are \u201csmall\u201d\u2014less than or equal to the size of a pointer\u2014and you\u2019d like the compiler to unbox them to avoid unnecessary indirections. (<code>-funbox-small-strict-fields</code> is on by default since GHC 7.7.)</p></li>\n</ul>\n\n<p>This tends to be roughly the same as \u201clazy in the spine, strict in the leaves\u201d in practice, because data structures often benefit from being lazy but their <em>contents</em> often don\u2019t.</p>\n\n<p>Doing this \u201csystematically\u201d is a na\u00efve way to help avoid space leaks\u2014for example, if you do repeated modification of a data structure (such as an accumulator) without forcing the value in the meantime:</p>\n\n<pre><code>ghci&gt; data Lazy = Lazy { lazyField :: Int } deriving (Show)\n\nghci&gt; data Strict = Strict { strictField :: !Int } deriving (Show)\n\nghci&gt; modifyLazy (Lazy field) = Lazy { lazyField = field + 1 }\n\nghci&gt; modifyStrict (Strict field) = Strict { strictField = field + 1 }\n\nghci&gt; lazy = iterate modifyLazy (Lazy 0) !! 1000000\n\nghci&gt; strict = iterate modifyStrict (Strict 0) !! 1000000\n\nghci&gt; :set +s\n\nghci&gt; lazy\nLazy {lazyField = 1000000}\n(0.76 secs, 251,792,080 bytes)\n\nghci&gt; strict\nStrict {strictField = 1000000}\n(0.52 secs, 178,173,544 bytes)\n</code></pre>\n\n<p>The lazy version builds up a chain of thunks before forcing it; the strict version keeps the <code>Int</code> field fully evaluated at each step. A similar thing happens with <code>modifyIORef</code> (lazy) and <code>modifyIORef'</code> (strict).</p>\n\n<p>It\u2019s mostly pointless to add a strictness annotation on a field with a type that\u2019s non-strict, for example, <code>field :: ![Int]</code> only ensures that the <em>first</em> <code>(:)</code> or <code>[]</code> constructor is forced; it doesn\u2019t make the whole list strict. If you need that, you probably want a strict sequence type like <code>Data.Vector</code>. And it\u2019s generally inadvisable to make a polymorphic field strict, as in <code>data Foo a = Foo \u2026 !a \u2026</code>, because someone who uses the type might expect to be able to rely on laziness there\u2014for example, in an algorithm that uses cycles (\u201ctying the knot\u201d)\u2014and it\u2019s annoying to have to wrap a type in an extra constructor like <code>data Lazy a = Lazy a</code> to regain laziness. Laziness also plays better with equational reasoning\u2014although in practice we often use \u201cfast and loose\u201d equational reasoning that ignores strictness and non-total functions.</p>\n\n<p>Ultimately, the only way to decide whether something should be lazy or strict is to consider the semantics you need for your particular application, and add judicious strictness (bangs on fields, <code>BangPatterns</code>, <code>seq</code>, strict functions like <code>modifyIORef'</code>) after profiling if you encounter performance problems or space leaks.</p>\n"}], "owner": {"reputation": 3794, "user_id": 137871, "user_type": "registered", "accept_rate": 81, "profile_image": "https://www.gravatar.com/avatar/48469162d45686615c6bf0eb4304bf26?s=128&d=identicon&r=PG", "display_name": "insitu", "link": "https://stackoverflow.com/users/137871/insitu"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 772, "favorite_count": 1, "accepted_answer_id": 50516493, "answer_count": 1, "score": 7, "last_activity_date": 1527188726, "creation_date": 1527143126, "last_edit_date": 1527151371, "question_id": 50502350, "link": "https://stackoverflow.com/questions/50502350/why-systematically-mark-record-fields-strict-in-haskell", "title": "Why systematically mark record fields strict in Haskell?", "body": "<p>I have read several times that it is good practice to systematically mark a record's fields <em>strict</em> in Haskell, e.g. instead of </p>\n\n<pre><code>data Foo = Foo { bar :: Bar, quux :: Quux }\n</code></pre>\n\n<p>do</p>\n\n<pre><code>data Foo = Foo { bar :: !Bar, quux :: !Quux}\n</code></pre>\n\n<p>For example here is a quote from <a href=\"http://haskellbook.com/\" rel=\"noreferrer\">Haskell Programming from First Principles</a>, p.1134:</p>\n\n<blockquote>\n  <p>A good rule to follow is lazy in the spine, strict in the leaves!</p>\n</blockquote>\n\n<p>I (think I) understand what strictness is and what is the difference between the two. What I don't understand is why do the latter systematically?</p>\n"}, {"tags": ["haskell", "environment-variables", "haskell-stack", "nixos"], "comments": [{"owner": {"reputation": 7268, "user_id": 2303202, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/iT9aU.png?s=128&g=1", "display_name": "max630", "link": "https://stackoverflow.com/users/2303202/max630"}, "edited": false, "score": 2, "creation_date": 1527140976, "post_id": 50501241, "comment_id": 88015990, "body": "For stack 1.6.5 I cannot reproduce it with your example. Could it be some other, special environment variable?"}, {"owner": {"reputation": 136, "user_id": 1553834, "user_type": "registered", "accept_rate": 17, "profile_image": "https://i.stack.imgur.com/Rk6Gb.jpg?s=128&g=1", "display_name": "urbanslug", "link": "https://stackoverflow.com/users/1553834/urbanslug"}, "edited": false, "score": 0, "creation_date": 1527159644, "post_id": 50501241, "comment_id": 88027288, "body": "Yeah I can&#39;t reproduce your issue either but the way to do it is compile it and run it with <code>FOOBAR=123 stack exec mybin</code>.  <code>stack exec</code> seems to be what you want."}, {"owner": {"reputation": 558, "user_id": 288195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/affb4f90a6fd56dd81632cbf23af6ff9?s=128&d=identicon&r=PG", "display_name": "chrisleague", "link": "https://stackoverflow.com/users/288195/chrisleague"}, "edited": false, "score": 0, "creation_date": 1527167947, "post_id": 50501241, "comment_id": 88033082, "body": "Actually I meant <code>stack exec</code> when I said <code>stack run</code> \u2013 I&#39;ll edit the question \u2013 but it&#39;s the same behavior whether it&#39;s <code>stack runhaskell</code> / <code>stack runghc</code> / <code>stack exec</code>. This is stack-1.6.5 but on NixOS, so maybe a bug with packaging?"}, {"owner": {"reputation": 558, "user_id": 288195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/affb4f90a6fd56dd81632cbf23af6ff9?s=128&d=identicon&r=PG", "display_name": "chrisleague", "link": "https://stackoverflow.com/users/288195/chrisleague"}, "edited": false, "score": 1, "creation_date": 1527174466, "post_id": 50501241, "comment_id": 88037695, "body": "This does have something to do with NixOS. I had <code>nix: enable: true</code> in my global <code>config.yaml</code>. After I turned this off, environment variables pass through as they should. I thought nix support in stack only meant that it would install non-Haskell dependencies using nix; but it seems like it might be running stack in a nix-shell?"}], "answers": [{"tags": [], "owner": {"reputation": 558, "user_id": 288195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/affb4f90a6fd56dd81632cbf23af6ff9?s=128&d=identicon&r=PG", "display_name": "chrisleague", "link": "https://stackoverflow.com/users/288195/chrisleague"}, "is_accepted": true, "score": 7, "last_activity_date": 1527187496, "creation_date": 1527187496, "answer_id": 50516172, "question_id": 50501241, "link": "https://stackoverflow.com/questions/50501241/how-to-pass-environment-variables-into-haskell-programs-run-via-stack/50516172#50516172", "title": "How to pass environment variables into Haskell programs run via stack?", "body": "<p>It seems like this is the <a href=\"https://docs.haskellstack.org/en/stable/nix_integration/#the-nix-shell\" rel=\"noreferrer\">relevant section of the stack manual</a>, which I missed:</p>\n\n<blockquote>\n  <p>\u201cBy default, stack will run the build in a pure Nix build environment\n  (or shell), which means two important things: (1) basically no\n  environment variable will be forwarded from your user session to the\n  nix-shell [...]\u201d</p>\n</blockquote>\n\n<p>So this advice worked:</p>\n\n<blockquote>\n  <p>\u201cTo override this behaviour, add pure: false to your stack.yaml or\n  pass the --no-nix-pure option to the command line.\u201d</p>\n</blockquote>\n\n<pre><code>% FOOBAR=123 stack --no-nix-pure runhaskell testenv.hs\n\"123\"\n</code></pre>\n"}], "owner": {"reputation": 558, "user_id": 288195, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/affb4f90a6fd56dd81632cbf23af6ff9?s=128&d=identicon&r=PG", "display_name": "chrisleague", "link": "https://stackoverflow.com/users/288195/chrisleague"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 1178, "favorite_count": 1, "accepted_answer_id": 50516172, "answer_count": 1, "score": 5, "last_activity_date": 1527187496, "creation_date": 1527137577, "last_edit_date": 1527168018, "question_id": 50501241, "link": "https://stackoverflow.com/questions/50501241/how-to-pass-environment-variables-into-haskell-programs-run-via-stack", "title": "How to pass environment variables into Haskell programs run via stack?", "body": "<p>I just noticed that Haskell programs run via <code>stack</code> do not receive environment variables from the calling environment. Here's a sample program:</p>\n\n<pre><code>-- testenv.hs\nimport System.Environment\nmain :: IO ()\nmain = print =&lt;&lt; getEnv \"FOOBAR\"\n</code></pre>\n\n<p>If I run it without stack, like this, it works:</p>\n\n<pre><code>% FOOBAR=123 runhaskell testenv.hs\n\"123\"\n</code></pre>\n\n<p>But using stack:</p>\n\n<pre><code>% FOOBAR=123 stack runhaskell testenv.hs\ntestenv.hs: FOOBAR: getEnv: does not exist (no environment variable)\n</code></pre>\n\n<p>Same goes for when it is compiled: <code>FOOBAR=123 stack exec testenv</code> fails while <code>FOOBAR=123 .stack-work/install/BLAHBLAH/testenv</code> works.</p>\n\n<p><strong>Is there a way to force stack to pass-through certain environment variables?</strong></p>\n\n<p>The real problem I'm having is with <code>yesod devel</code>, there are some settings I want to override with environment variables, but <code>yesod devel</code> uses stack to run the program so they don't go through.</p>\n\n<p>This is stack 1.6.5 on NixOS 18.03.132262.0a73111bc29.</p>\n"}, {"tags": ["haskell", "recursion"], "answers": [{"tags": [], "owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "is_accepted": false, "score": 3, "last_activity_date": 1527136307, "creation_date": 1527136307, "answer_id": 50501009, "question_id": 50500675, "link": "https://stackoverflow.com/questions/50500675/writing-doubly-recursive-functions-without-pattern-matching/50501009#50501009", "title": "Writing doubly-recursive functions without pattern matching", "body": "<p>You could split the pattern matching in two:</p>\n\n<pre><code>merge (a:as) bs = loop bs where\n  loop (b:bs) | b &lt; a = b : loop bs\n  loop bs             = a : merge as bs\nmerge [] bs = bs\n</code></pre>\n\n<p>which could also be expressed using <code>span</code></p>\n\n<pre><code>merge (a:as) bs = lts ++ a : merge as ges\n  where (lts, ges) = span (&lt;a) bs\nmerge [] bs = bs\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 37219, "user_id": 1523776, "user_type": "moderator", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/b3e0b5c8e42a8c38009ef2d969f8dabb?s=128&d=identicon&r=PG", "display_name": "Benjamin Hodgson", "link": "https://stackoverflow.com/users/1523776/benjamin-hodgson"}, "is_accepted": false, "score": 2, "last_activity_date": 1527156337, "creation_date": 1527156337, "answer_id": 50506498, "question_id": 50500675, "link": "https://stackoverflow.com/questions/50500675/writing-doubly-recursive-functions-without-pattern-matching/50506498#50506498", "title": "Writing doubly-recursive functions without pattern matching", "body": "<p>You could make a single recursive call with different parameters depending on the result of the test.</p>\n\n<pre><code>merge xxs@(x:xs) yys@(y:ys) =\n    let (z, xs', ys') = if x &lt;= y then (x, xs, yys) else (y, xxs, ys)\n    in z : merge xs' ys'\nmerge [] ys = ys\nmerge xs [] = xs\n</code></pre>\n\n<p>PS, I wouldn't call your <code>merge</code> doubly recursive. Every code path has at most one recursive call.</p>\n"}, {"comments": [{"owner": {"reputation": 1973, "user_id": 1716999, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/06a58106c9a1013f1ca791c46579d664?s=128&d=identicon&r=PG", "display_name": "rubystallion", "link": "https://stackoverflow.com/users/1716999/rubystallion"}, "edited": false, "score": 0, "creation_date": 1527233315, "post_id": 50521747, "comment_id": 88059337, "body": "Thanks, that&#39;s indeed what I meant. Why did you choose the name AdjInf?"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 1973, "user_id": 1716999, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/06a58106c9a1013f1ca791c46579d664?s=128&d=identicon&r=PG", "display_name": "rubystallion", "link": "https://stackoverflow.com/users/1716999/rubystallion"}, "edited": false, "score": 0, "creation_date": 1527233374, "post_id": 50521747, "comment_id": 88059367, "body": "@rubystallion &quot;adjoin infinity&quot; -- maybe <code>AddInf</code> could have also worked, I may be abusing the term &quot;adjoin&quot;"}, {"owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "reply_to_user": {"reputation": 1973, "user_id": 1716999, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/06a58106c9a1013f1ca791c46579d664?s=128&d=identicon&r=PG", "display_name": "rubystallion", "link": "https://stackoverflow.com/users/1716999/rubystallion"}, "edited": false, "score": 1, "creation_date": 1527235979, "post_id": 50521747, "comment_id": 88060902, "body": "Fun fact, <code>merge</code> is parametric in <code>head&#39;</code> -- we could take <code>f :: [a] -&gt; b</code> (where <code>Ord b</code>) as a comparator.  I think we&#39;d get something cool if we require that <code>f (tail xs) &gt;= f xs</code>."}, {"owner": {"reputation": 1973, "user_id": 1716999, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/06a58106c9a1013f1ca791c46579d664?s=128&d=identicon&r=PG", "display_name": "rubystallion", "link": "https://stackoverflow.com/users/1716999/rubystallion"}, "edited": false, "score": 0, "creation_date": 1527247498, "post_id": 50521747, "comment_id": 88067677, "body": "I think fulfilling that requirement with unchanged semantics would also mean that <code>f (tail xs)</code> is only necessarily strictly greater than <code>f xs</code> if <code>null (tail xs)</code>, same as with <code>AdjInf</code>, wouldn&#39;t it? And if <code>f</code> produces an <code>Ord</code>, which first compares length and then compares heads, then <code>merge</code> would just take all elements from the shorter list before taking from the other list."}, {"owner": {"reputation": 81794, "user_id": 9859, "user_type": "registered", "accept_rate": 89, "profile_image": "https://i.stack.imgur.com/KEZOL.jpg?s=128&g=1", "display_name": "rampion", "link": "https://stackoverflow.com/users/9859/rampion"}, "edited": false, "score": 0, "creation_date": 1527253855, "post_id": 50521747, "comment_id": 88071730, "body": "If you didn&#39;t want to define your own data type, you could implement <code>AdjInf</code> using <code>Data.Ord.Down</code>. <code>AdjInf a</code> has the same ordering as <code>Down (Maybe (Down a))</code>."}], "tags": [], "owner": {"reputation": 57219, "user_id": 33796, "user_type": "registered", "accept_rate": 70, "profile_image": "https://www.gravatar.com/avatar/08727b23ba62e634b32988cdff082663?s=128&d=identicon&r=PG", "display_name": "luqui", "link": "https://stackoverflow.com/users/33796/luqui"}, "is_accepted": true, "score": 2, "last_activity_date": 1527224776, "last_edit_date": 1527224776, "creation_date": 1527223837, "answer_id": 50521747, "question_id": 50500675, "link": "https://stackoverflow.com/questions/50500675/writing-doubly-recursive-functions-without-pattern-matching/50521747#50521747", "title": "Writing doubly-recursive functions without pattern matching", "body": "<p>I find your english description pretty incomprehensible, honestly.  <em>'for which the test condition ... is \"more true\"'</em> -- what?  But I'll try, because I enjoy toying with phrasing.   First we need a way to express \"where it is false for the non-existing head of an empty list\".  What comes to me for that is that we need a data type like <code>Maybe</code> but for which the \"nothing\" case is \"infinitely large\".  The following will do:</p>\n\n<pre><code>data AdjInf a = Finite a | Infinite\n    deriving (Eq, Ord)\n</code></pre>\n\n<p>(Just like <code>Maybe</code> but with the constructor order reversed -- <code>Ord</code> deriving takes care of the rest!)</p>\n\n<p>And we can get the head of a list in terms of this:</p>\n\n<pre><code>head' :: [a] -&gt; AdjInf a\nhead' [] = Infinite\nhead' (x:xs) = Finite x\n</code></pre>\n\n<p>So now we have:</p>\n\n<pre><code>merge :: (Ord a) =&gt; [a] -&gt; [a] -&gt; [a]\nmerge [] [] = []\nmerge xs ys = next : merge smaller bigger\n    where\n    (next : smaller, bigger)\n        | head' xs &lt;= head' ys = (xs, ys)\n        | otherwise            = (ys, xs)\n</code></pre>\n\n<p>Which might meet your criteria.  (This recursion pattern is a list <em>anamorphism</em>, so you could write it with <a href=\"http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-List.html#v:unfoldr\" rel=\"nofollow noreferrer\"><code>unfoldr</code></a>)</p>\n\n<p>I would avoid this particular implementation because the fact that the <code>next : smaller</code> pattern match will always succeed is quite subtle.   It is also not <em>quite</em> the same function if the lists contain distinct elements that compare equal (that is, this <code>merge</code> is not \"stable\").</p>\n"}], "owner": {"reputation": 1973, "user_id": 1716999, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/06a58106c9a1013f1ca791c46579d664?s=128&d=identicon&r=PG", "display_name": "rubystallion", "link": "https://stackoverflow.com/users/1716999/rubystallion"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 122, "favorite_count": 1, "accepted_answer_id": 50521747, "answer_count": 3, "score": 0, "last_activity_date": 1527224776, "creation_date": 1527133912, "question_id": 50500675, "link": "https://stackoverflow.com/questions/50500675/writing-doubly-recursive-functions-without-pattern-matching", "title": "Writing doubly-recursive functions without pattern matching", "body": "<p>The <code>merge</code> function used in merge sort can be defined like:</p>\n\n<pre><code>merge a@(x:xs) b@(y:ys) | x &lt; y     = x : merge xs  b\n                        | otherwise = y : merge a  ys\nmerge [] b = b\nmerge a [] = a\n</code></pre>\n\n<p>The function just generates the result by taking the head of the list for which the test condition of being relatively small is \"more true\", where it is false for the non-existing head of an empty list, and both lists are only traversed once. So it should be possible to use a general iterating function and to subsume the two execution paths given by the <code>x &lt; y</code> predicate into one, so that the function reads more like my English description in my first sentence. How would I do that?</p>\n\n<p>Although the <code>merge</code> function already is perfectly readable as is, I sometimes find doubly-recursive functions difficult to write, so I'd be happy to learn about more approaches.</p>\n"}, {"tags": ["haskell"], "comments": [{"owner": {"reputation": 40537, "user_id": 465378, "user_type": "registered", "accept_rate": 85, "profile_image": "https://www.gravatar.com/avatar/c03b8d34978563858020eff0d14cc17b?s=128&d=identicon&r=PG", "display_name": "Alexis King", "link": "https://stackoverflow.com/users/465378/alexis-king"}, "edited": false, "score": 4, "creation_date": 1527127069, "post_id": 50499797, "comment_id": 88012343, "body": "While this probably isn\u2019t the most useful for a beginner to Haskell, just for fun, using the <a href=\"https://hackage.haskell.org/package/lens\" rel=\"nofollow noreferrer\"><code>lens</code></a> library, you can express this very concisely as <code>lengthOf (_Just._1._Black)</code>."}, {"owner": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 5, "creation_date": 1527127166, "post_id": 50499797, "comment_id": 88012367, "body": "<code>length [() | let Board xs = initialBoard, Just (Black, _) &lt;- xs]</code>"}, {"owner": {"reputation": 44495, "user_id": 3058609, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/2c0357556707713572abbf637a907ef9?s=128&d=identicon&r=PG&f=1", "display_name": "Adam Smith", "link": "https://stackoverflow.com/users/3058609/adam-smith"}, "reply_to_user": {"reputation": 28376, "user_id": 5743988, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/IeSSM.jpg?s=128&g=1", "display_name": "4castle", "link": "https://stackoverflow.com/users/5743988/4castle"}, "edited": false, "score": 2, "creation_date": 1527146313, "post_id": 50499797, "comment_id": 88018745, "body": "@4castle or, similarly though perhaps closer to a common Python idiom, <code>sum [1 | let Board xs = initialBoard, Just (Black, _) &lt;- xs]</code>"}, {"owner": {"reputation": 1341, "user_id": 1036044, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/PzcQL.jpg?s=128&g=1", "display_name": "Probie", "link": "https://stackoverflow.com/users/1036044/probie"}, "edited": false, "score": 0, "creation_date": 1527244869, "post_id": 50499797, "comment_id": 88066104, "body": "I&#39;m guessing <code>sum [n | let Board xs = initialBoard, Just (Black, n) &lt;- xs]</code> would be closer to what&#39;s wanted - that looks like the starting position on a backgammon board, in which case the second part of the tuple would be the number of pieces on a given point"}], "answers": [{"comments": [{"owner": {"reputation": 48938, "user_id": 246886, "user_type": "registered", "accept_rate": 94, "profile_image": "https://www.gravatar.com/avatar/dd1ebaade6623fc538fb8af3338e730d?s=128&d=identicon&r=PG", "display_name": "Jon Purdy", "link": "https://stackoverflow.com/users/246886/jon-purdy"}, "edited": false, "score": 2, "creation_date": 1527189027, "post_id": 50500194, "comment_id": 88045591, "body": "To avoid the partial function: <code>map fromJust . filter isJust</code> = <code>catMaybes</code> from <code>Data.Maybe</code>."}], "tags": [], "owner": {"reputation": 384463, "user_id": 1126841, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fa05233b2357f8d11c22ef4cfc7bb85c?s=128&d=identicon&r=PG", "display_name": "chepner", "link": "https://stackoverflow.com/users/1126841/chepner"}, "is_accepted": false, "score": 3, "last_activity_date": 1527168356, "last_edit_date": 1527168356, "creation_date": 1527130109, "answer_id": 50500194, "question_id": 50499797, "link": "https://stackoverflow.com/questions/50499797/how-to-count-the-total-number-of-black-pieces-on-the-board/50500194#50500194", "title": "How to count the total number of black pieces on the board?", "body": "<p>Use <code>filter</code> to remove all the <code>Nothing</code> and <code>Just (White, _)</code> values, then count what is left.</p>\n\n<pre><code>isBlack :: Maybe (Color, Int) -&gt; Bool\nisBlack (Just (Black, _)) = True\nisBlack _ = False\n\ncountBlacks :: Board -&gt; Int\ncountBlacks = length . filter isBlack\n</code></pre>\n\n<p>A somewhat longer, but \"obvious\", one-line definition might be</p>\n\n<pre><code>import Data.Maybe (isJust, fromJust)\n\n-- 1. Get rid of Nothings\n-- 2. Extract the tuples from the Just values\n-- 3. Extract the colors from the tuples\n-- 4. Get rid of the Whites\n-- 5. Count what's left.\ncountBlacks = length . filter (== Black) . map fst . map fromJust . filter isJust\n</code></pre>\n\n<p>or</p>\n\n<pre><code>countBlacks = length . filter (== Black) . map (fst . fromJust) . filter isJust\n</code></pre>\n\n<p>or</p>\n\n<pre><code>countBlacks = length . filter ((== Black) . fst . fromJust) . filter isJust\n</code></pre>\n\n<p>making use of the identities</p>\n\n<ul>\n<li><code>map f . map g == map (f . g)</code></li>\n<li><code>filter f . map g == filter (f . g)</code></li>\n</ul>\n\n<p>Note that <code>fromJust</code> should be used with caution; <code>fromJust Nothing</code> is not defined and will raise an error. Here, it is safe because <code>filter isJust</code> guarantees that the values <code>fromJust</code> will be applied to are <code>Just</code> values.</p>\n\n<p>A safer replacement is the <code>maybe</code> function, which provides a default value given a <code>Nothing</code>. (You can think of <code>fromJust</code> as being implement as <code>maybe undefined id</code>.)</p>\n\n<pre><code>countBlacks = length . filter (maybe False f)\n  where f (Black, _) = True\n        f _ = False\n</code></pre>\n\n<p>since <code>maybe False f Nothing</code> evaluates to <code>False</code>.</p>\n"}, {"tags": [], "owner": {"reputation": 62421, "user_id": 216164, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/786f224adbe0784cdf7d0f15476061fe?s=128&d=identicon&r=PG", "display_name": "Thomas M. DuBuisson", "link": "https://stackoverflow.com/users/216164/thomas-m-dubuisson"}, "is_accepted": false, "score": 3, "last_activity_date": 1527176998, "last_edit_date": 1527176998, "creation_date": 1527133336, "answer_id": 50500576, "question_id": 50499797, "link": "https://stackoverflow.com/questions/50499797/how-to-count-the-total-number-of-black-pieces-on-the-board/50500576#50500576", "title": "How to count the total number of black pieces on the board?", "body": "<p>chepner suggested, more or less, that you filter for <code>Just</code> then for <code>Black</code>.</p>\n\n<p>I'm suggesting an alternative where you convert your list <code>[Maybe (Color,Int)]</code> into a <code>[Color]</code> that has the same answer then filter and count:</p>\n\n<pre><code>countBlacks = length . filter (== Black) . map (maybe White fst)\n                         ^                       ^\n                         |                        -- Just (x, _) ~&gt; x\n                         |                        -- Nothing     ~&gt; White\n                         --- list ~&gt; [Black, Black ... Black]\n</code></pre>\n\n<p>As an alternative, you could convert to <code>[Int]</code> of ones or zeros representing black or white and sum:</p>\n\n<pre><code> countBlacks = sum . map (maybe 0 (fromEnum . (== Black) . fst))\n</code></pre>\n"}, {"tags": [], "owner": {"reputation": 28488, "user_id": 402884, "user_type": "registered", "accept_rate": 75, "profile_image": "https://www.gravatar.com/avatar/35583fe46c2cde92467710cc7ceff266?s=128&d=identicon&r=PG", "display_name": "Chris Martin", "link": "https://stackoverflow.com/users/402884/chris-martin"}, "is_accepted": false, "score": 3, "last_activity_date": 1527134415, "last_edit_date": 1527134415, "creation_date": 1527134037, "answer_id": 50500690, "question_id": 50499797, "link": "https://stackoverflow.com/questions/50499797/how-to-count-the-total-number-of-black-pieces-on-the-board/50500690#50500690", "title": "How to count the total number of black pieces on the board?", "body": "<p>Some setup to make this compile:</p>\n\n<pre><code>data Color = Black | White deriving Eq\n\nnewtype Board = Board [Maybe (Color, Int)]\n</code></pre>\n\n<p>Solve one small piece at a time; there is no valor in tackling a problem in a single step. Keep finding ways to transform the data you have, discarding information until you're left with only what you want.</p>\n\n<p>Perhaps start with a function that just gets the pieces that are on the board, thus discarding the information about their location which we don't care about:</p>\n\n<pre><code>import Data.Maybe (catMaybes)\n\n-- | Produce a list of all the pieces on a board.\nboardPieces :: Board -&gt; [(Color, Int)]\nboardPieces (Board xs) = catMaybes xs\n</code></pre>\n\n<p>We're only interested in pieces of one color, so how about a function that takes a list of pieces and returns only the piece types for that color -- thus discarding information about the pieces of the other color we don't care about.</p>\n\n<pre><code>-- | Given a list of pieces with colors, produce a list\n-- that only contains the pieces for a particular color.\nfilterByColor :: Color -&gt; [(Color, Int)] -&gt; [Int]\nfilterByColor x = filter (\\(y, i) -&gt; x == y)\n</code></pre>\n\n<p>To figure out the number of black pieces on a board, then, we can</p>\n\n<ol>\n<li>Get the list of pieces on the board</li>\n<li>Filter that list by color</li>\n<li>Take the length of that list</li>\n</ol>\n\n\n\n<pre><code>-- | The number of black pieces on the board.\nnumBlacks :: Board -&gt; Int\nnumBlacks = length . filterByColor Black . boardPieces\n</code></pre>\n\n<p>Test:</p>\n\n<pre><code>\u03bb&gt; numBlacks initialBoard\n5\n</code></pre>\n"}], "owner": {"reputation": 9, "user_id": 9546967, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/826c1d83ac04e533a376551172abf6c7?s=128&d=identicon&r=PG&f=1", "display_name": "studyer", "link": "https://stackoverflow.com/users/9546967/studyer"}, "delete_vote_count": 0, "reopen_vote_count": 0, "close_vote_count": 0, "is_answered": true, "view_count": 104, "favorite_count": 0, "answer_count": 3, "score": -1, "last_activity_date": 1527176998, "creation_date": 1527126789, "last_edit_date": 1527132388, "question_id": 50499797, "link": "https://stackoverflow.com/questions/50499797/how-to-count-the-total-number-of-black-pieces-on-the-board", "title": "How to count the total number of black pieces on the board?", "body": "<p>For haskell , is there a way to count the number of just black pieces if the board is given as below.</p>\n\n<pre><code>initialBoard =\n Board\n [ Just (Black, 2)\n , Nothing\n , Nothing\n , Nothing\n , Just (Black, 2)\n , Just (White, 5)\n , Nothing\n , Just (White, 3)\n , Nothing\n , Nothing\n , Nothing\n , Just (Black, 5)\n , Just (White, 5)\n , Nothing\n , Nothing\n , Nothing\n , Just (Black, 3)\n , Nothing\n , Just (Black, 5)\n , Nothing\n , Nothing\n , Nothing\n , Nothing\n , Just (White, 2)\n ]\n</code></pre>\n\n<p>I new to haskell, I am wondering whether haskell has a function like the for...in... loop in python to allows me check every item in the list.Thanks</p>\n"}]